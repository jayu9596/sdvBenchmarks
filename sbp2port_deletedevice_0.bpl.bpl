var {:scalar} alloc: int;

var {:pointer} SLAM_guard_O_0: int;

var {:scalar} yogi_error: int;

var {:scalar} t: int;

var {:scalar} device: int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const BUS1394_CLASS_GUID: int;

const WmiScsiAddressGuid: int;

const GUID_DEVINTERFACE_STORAGEPORT: int;

const GUID_DEVINTERFACE_FLOPPY: int;

const GUID_DEVINTERFACE_WRITEONCEDISK: int;

const GUID_DEVINTERFACE_TAPE: int;

const GUID_DEVINTERFACE_VOLUME: int;

const GUID_DEVINTERFACE_CDCHANGER: int;

const GUID_DEVINTERFACE_MEDIUMCHANGER: int;

const ScsiRawInterfaceGuid: int;

const GUID_DEVINTERFACE_PARTITION: int;

const GUID_DEVINTERFACE_CDROM: int;

const GUID_DEVINTERFACE_HIDDEN_VOLUME: int;

const GUID_DEVINTERFACE_DISK: int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const KiBugCheckData: int;

const PortBugcheckData: int;

const GUID_BUS_TYPE_PCMCIA: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_start_irp_already_issued: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_harnessStackLocation: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_remove_irp_already_issued: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_dpc_io_registered: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const MmHighestUserAddress: int;

const sdv_cancelFptr: int;

const SLAM_guard_O_0_init: int;

procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_2: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2 == 0 || Tmp_2 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_2: int)
{
  var {:scalar} i: int;
  var {:scalar} Tmp_3: int;
  var {:scalar} DataLength: int;
  var {:scalar} Tmp_6: int;
  var {:scalar} u: int;
  var {:scalar} sdv: int;
  var {:pointer} pData: int;
  var {:scalar} ulUnicode: int;
  var {:scalar} sdv_2: int;
  var {:scalar} ntStatus: int;
  var {:scalar} Tmp_8: int;
  var {:pointer} sdv_3: int;
  var {:pointer} Tmp_9: int;
  var {:pointer} sdv_5: int;
  var {:scalar} Tmp_12: int;
  var {:scalar} uChar: int;
  var {:pointer} Tmp_13: int;
  var {:scalar} Tmp_14: int;
  var {:pointer} TextLeaf: int;
  var {:pointer} uniString: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;

  anon0:
    call {:si_unique_call 1} u := __HAVOC_malloc(20);
    call {:si_unique_call 2} vslice_dummy_var_1 := __HAVOC_malloc(12);
    TextLeaf := actual_TextLeaf;
    uniString := actual_uniString;
    ntStatus := 0;
    pData := 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L16;

  L16:
    Tmp_2 := ntStatus;
    goto L1;

  L1:
    return;

  anon35_Then:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    DataLength := 0;
    goto L25;

  L25:
    ulUnicode := sdv_2;
    Tmp_12 := DataLength * 4 + 2;
    call {:si_unique_call 3} sdv_3 := ExAllocatePoolWithTag(0, Tmp_12, 846226003);
    pData := sdv_3;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} pData != 0;
    Tmp_6 := DataLength * 4 + 2;
    call {:si_unique_call 4} sdv_RtlZeroMemory(0, Tmp_6);
    Tmp_3 := DataLength * 4;
    call {:si_unique_call 5} sdv_RtlCopyMemory(0, 0, Tmp_3);
    i := 0;
    goto L46;

  L46:
    call {:si_unique_call 6} i, Tmp_9, uChar, Tmp_13 := Sbp2_ProcessTextualDescriptor_loop_L46(i, DataLength, pData, ulUnicode, Tmp_9, uChar, Tmp_13);
    goto L46_last;

  L46_last:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} DataLength * 4 <= i;
    goto L58;

  L58:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_14;
    call {:si_unique_call 7} sdv_5 := ExAllocatePoolWithTag(0, Tmp_14, 846226003);
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_8;
    call {:si_unique_call 8} sdv_RtlZeroMemory(0, Tmp_8);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    call {:si_unique_call 9} vslice_dummy_var_3 := corral_nondet();
    goto L77;

  L77:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} pData != 0;
    call {:si_unique_call 10} sdv_ExFreePool(0);
    goto L78;

  L78:
    Tmp_2 := ntStatus;
    goto L1;

  anon34_Then:
    assume {:partition} pData == 0;
    goto L78;

  anon33_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    call {:si_unique_call 11} RtlInitAnsiString(0, 0);
    call {:si_unique_call 12} vslice_dummy_var_2 := RtlAnsiStringToUnicodeString(0, 0, 0);
    goto L77;

  anon39_Then:
    ntStatus := -1073741670;
    goto L77;

  anon28_Then:
    assume {:partition} i < DataLength * 4;
    Tmp_13 := pData;
    assume {:nonnull} Tmp_13 != 0;
    assume Tmp_13 > 0;
    havoc uChar;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} uChar == 0;
    goto L58;

  anon38_Then:
    assume {:partition} uChar != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} uChar == 44;
    goto L53;

  L53:
    Tmp_9 := pData;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    goto L54;

  L54:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    i := i + 1;
    goto L55;

  L55:
    i := i + 1;
    goto L55_dummy;

  L55_dummy:
    assume false;
    return;

  anon31_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    goto L55;

  anon29_Then:
    assume {:partition} uChar != 44;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 32 <= uChar;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} uChar <= 127;
    goto L54;

  anon32_Then:
    assume {:partition} 127 < uChar;
    goto L53;

  anon30_Then:
    assume {:partition} uChar < 32;
    goto L53;

  anon37_Then:
    assume {:partition} pData == 0;
    ntStatus := -1073741670;
    goto L77;

  anon36_Then:
    assume {:nonnull} u != 0;
    assume u > 0;
    havoc DataLength;
    goto L25;

  anon27_Then:
    goto L16;
}



procedure {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo(actual_DeviceExtension: int) returns (Tmp_15: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo(actual_DeviceExtension: int) returns (Tmp_15: int)
{
  var {:scalar} Tmp_16: int;
  var {:pointer} Tmp_17: int;
  var {:pointer} Tmp_18: int;
  var {:pointer} Tmp_19: int;
  var {:pointer} Tmp_20: int;
  var {:pointer} Tmp_21: int;
  var {:scalar} Tmp_22: int;
  var {:pointer} Tmp_23: int;
  var {:pointer} Tmp_24: int;
  var {:scalar} Tmp_25: int;
  var {:pointer} Tmp_26: int;
  var {:scalar} Tmp_27: int;
  var {:pointer} Tmp_28: int;
  var {:scalar} Tmp_29: int;
  var {:pointer} Tmp_30: int;
  var {:pointer} Tmp_32: int;
  var {:scalar} Tmp_33: int;
  var {:scalar} Tmp_34: int;
  var {:pointer} Tmp_35: int;
  var {:pointer} Tmp_36: int;
  var {:pointer} Tmp_37: int;
  var {:scalar} getLocalHostInfo7: int;
  var {:pointer} Tmp_38: int;
  var {:pointer} Tmp_39: int;
  var {:pointer} Tmp_40: int;
  var {:pointer} Tmp_41: int;
  var {:pointer} Tmp_42: int;
  var {:pointer} Tmp_43: int;
  var {:pointer} Tmp_44: int;
  var {:scalar} Tmp_45: int;
  var {:pointer} Tmp_46: int;
  var {:scalar} status: int;
  var {:pointer} packet: int;
  var {:pointer} Tmp_47: int;
  var {:pointer} DeviceExtension: int;
  var boogieTmp: int;
  var vslice_dummy_var_0: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;

  anon0:
    call {:si_unique_call 13} getLocalHostInfo7 := __HAVOC_malloc(24);
    call {:si_unique_call 14} packet := __HAVOC_malloc(4);
    DeviceExtension := actual_DeviceExtension;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 15} AllocateIrpAndIrb(DeviceExtension, packet);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_30;
    assume {:nonnull} Tmp_30 != 0;
    assume Tmp_30 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_24;
    assume {:nonnull} Tmp_24 != 0;
    assume Tmp_24 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_23;
    assume {:nonnull} Tmp_23 != 0;
    assume Tmp_23 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_46;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_0;
    call {:si_unique_call 16} status := Sbp2SendRequest(DeviceExtension, vslice_dummy_var_0, 2);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status < 0;
    goto L93;

  L93:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_1;
    call {:si_unique_call 17} DeAllocateIrpAndIrb(DeviceExtension, vslice_dummy_var_1);
    Tmp_15 := status;
    goto L1;

  L1:
    return;

  anon50_Then:
    assume {:partition} 0 <= status;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    call {:si_unique_call 18} boogieTmp := corral_nondet();
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  L32:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_21;
    assume {:nonnull} Tmp_21 != 0;
    assume Tmp_21 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_41;
    assume {:nonnull} Tmp_41 != 0;
    assume Tmp_41 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_17;
    assume {:nonnull} Tmp_17 != 0;
    assume Tmp_17 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_32;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} Tmp_32 != 0;
    assume Tmp_32 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_2;
    call {:si_unique_call 19} status := Sbp2SendRequest(DeviceExtension, vslice_dummy_var_2, 2);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} status < 0;
    goto L93;

  anon51_Then:
    assume {:partition} 0 <= status;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_45 := 128;
    goto L48;

  L48:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L43;

  L43:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    Tmp_34 := 128;
    goto L59;

  L59:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L54;

  L54:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_35;
    assume {:nonnull} Tmp_35 != 0;
    assume Tmp_35 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_28;
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_36;
    assume {:nonnull} Tmp_36 != 0;
    assume Tmp_36 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_44;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} Tmp_44 != 0;
    assume Tmp_44 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_3;
    call {:si_unique_call 20} status := Sbp2SendRequest(DeviceExtension, vslice_dummy_var_3, 2);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status < 0;
    goto L93;

  anon58_Then:
    assume {:partition} 0 <= status;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_42;
    assume {:nonnull} Tmp_42 != 0;
    assume Tmp_42 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_37;
    assume {:nonnull} Tmp_37 != 0;
    assume Tmp_37 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_26;
    assume {:nonnull} Tmp_26 != 0;
    assume Tmp_26 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_4;
    call {:si_unique_call 21} status := Sbp2SendRequest(DeviceExtension, vslice_dummy_var_4, 2);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status >= 0;
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_27;
    goto L89;

  L89:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_38;
    assume {:nonnull} Tmp_38 != 0;
    assume Tmp_38 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_18;
    assume {:nonnull} Tmp_18 != 0;
    assume Tmp_18 > 0;
    havoc Tmp_33;
    goto L92;

  L92:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_20;
    assume {:nonnull} Tmp_20 != 0;
    assume Tmp_20 > 0;
    goto L93;

  anon71_Then:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_25;
    goto L99;

  L99:
    Tmp_33 := Tmp_25;
    goto L92;

  anon62_Then:
    Tmp_25 := 2093056;
    goto L99;

  anon61_Then:
    Tmp_27 := 2093056;
    goto L89;

  anon60_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_40;
    assume {:nonnull} Tmp_40 != 0;
    assume Tmp_40 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_39;
    assume {:nonnull} Tmp_39 != 0;
    assume Tmp_39 > 0;
    havoc Tmp_29;
    goto L102;

  L102:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_43;
    assume {:nonnull} Tmp_43 != 0;
    assume Tmp_43 > 0;
    goto L93;

  anon72_Then:
    Tmp_29 := 2093056;
    goto L102;

  anon59_Then:
    assume {:partition} 0 > status;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_19;
    assume {:nonnull} Tmp_19 != 0;
    assume Tmp_19 > 0;
    status := 0;
    goto L93;

  anon57_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_34;
    goto L59;

  anon69_Then:
    goto L54;

  anon53_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    Tmp_22 := 112;
    goto L63;

  L63:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L54;

  anon56_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_22;
    goto L63;

  anon55_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_45;
    goto L48;

  anon68_Then:
    goto L43;

  anon52_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    Tmp_16 := 112;
    goto L52;

  L52:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L43;

  anon54_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_16;
    goto L52;

  anon63_Then:
    goto L24;

  L24:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  anon64_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  anon65_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  anon66_Then:
    goto L24;

  anon67_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  anon70_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  anon49_Then:
    Tmp_15 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_DeviceExtension_1: int, actual_Sbp2Req: int) returns (Tmp_49: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_DeviceExtension_1: int, actual_Sbp2Req: int) returns (Tmp_49: int)
{
  var {:scalar} sdv_10: int;
  var {:pointer} unitDependentDirectory: int;
  var {:scalar} sdv_11: int;
  var {:pointer} Tmp_51: int;
  var {:pointer} Tmp_53: int;
  var {:scalar} sdv_13: int;
  var {:pointer} Tmp_56: int;
  var {:scalar} sdv_15: int;
  var {:scalar} Tmp_57: int;
  var {:scalar} sdv_17: int;
  var {:pointer} Tmp_60: int;
  var {:scalar} cromOffset: int;
  var {:pointer} Tmp_61: int;
  var {:pointer} Tmp_62: int;
  var {:scalar} Tmp_64: int;
  var {:pointer} Tmp_65: int;
  var {:pointer} Tmp_66: int;
  var {:pointer} Tmp_67: int;
  var {:pointer} Tmp_68: int;
  var {:pointer} Tmp_69: int;
  var {:scalar} directoryLength: int;
  var {:pointer} Tmp_73: int;
  var {:pointer} Tmp_74: int;
  var {:scalar} sdv_21: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:pointer} Tmp_78: int;
  var {:scalar} modelIdCount: int;
  var {:pointer} Tmp_79: int;
  var {:scalar} dirInfoQuad: int;
  var {:pointer} Tmp_80: int;
  var {:scalar} devListSize: int;
  var {:pointer} Tmp_81: int;
  var {:scalar} firstOne: int;
  var {:scalar} sdv_25: int;
  var {:pointer} Tmp_82: int;
  var {:pointer} Tmp_83: int;
  var {:scalar} sdv_26: int;
  var {:pointer} Tmp_85: int;
  var {:pointer} sdv_27: int;
  var {:pointer} Tmp_86: int;
  var {:pointer} Tmp_87: int;
  var {:scalar} sdv_28: int;
  var {:pointer} Tmp_89: int;
  var {:pointer} Tmp_91: int;
  var {:pointer} Tmp_92: int;
  var {:scalar} directoryLocation: int;
  var {:pointer} Tmp_93: int;
  var {:pointer} Tmp_94: int;
  var {:pointer} Tmp_95: int;
  var {:pointer} Tmp_96: int;
  var {:scalar} Tmp_100: int;
  var {:scalar} i_1: int;
  var {:scalar} depDirLength: int;
  var {:scalar} sdv_31: int;
  var {:scalar} sbp2Device: int;
  var {:pointer} firstDevInfo: int;
  var {:scalar} cromOffset1: int;
  var {:pointer} Tmp_104: int;
  var {:pointer} ModelLeaf: int;
  var {:pointer} Tmp_106: int;
  var {:pointer} ModelLeaf_1: int;
  var {:scalar} sdv_34: int;
  var {:scalar} sdv_35: int;
  var {:scalar} Tmp_109: int;
  var {:pointer} Tmp_110: int;
  var {:pointer} Tmp_111: int;
  var {:pointer} Tmp_112: int;
  var {:scalar} j: int;
  var {:scalar} sdv_37: int;
  var {:scalar} Tmp_114: int;
  var {:pointer} Tmp_116: int;
  var {:scalar} Tmp_117: int;
  var {:scalar} Tmp_118: int;
  var {:pointer} Tmp_119: int;
  var {:pointer} devInfo: int;
  var {:scalar} unitDirEntries: int;
  var {:scalar} sdv_40: int;
  var {:pointer} sdv_41: int;
  var {:pointer} Tmp_120: int;
  var {:pointer} Tmp_121: int;
  var {:scalar} Tmp_122: int;
  var {:pointer} Tmp_123: int;
  var {:scalar} sdv_42: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_126: int;
  var {:scalar} currentGeneration: int;
  var {:scalar} Tmp_128: int;
  var {:pointer} Tmp_129: int;
  var {:pointer} Tmp_130: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} Tmp_132: int;
  var {:pointer} Tmp_133: int;
  var {:pointer} vendorLeaf: int;
  var {:pointer} Tmp_134: int;
  var {:pointer} Tmp_135: int;
  var {:pointer} Tmp_136: int;
  var {:scalar} Tmp_137: int;
  var {:pointer} unitDirectory: int;
  var {:pointer} ModelLeaf_2: int;
  var {:scalar} status_1: int;
  var {:pointer} packet_1: int;
  var {:pointer} Tmp_141: int;
  var {:pointer} Tmp_142: int;
  var {:pointer} Tmp_143: int;
  var {:scalar} sdv_47: int;
  var {:pointer} Tmp_144: int;
  var {:pointer} info: int;
  var {:pointer} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_149: int;
  var {:scalar} Tmp_150: int;
  var {:scalar} offset: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} modelLeaf: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:scalar} sdv_48: int;
  var {:pointer} Tmp_155: int;
  var {:pointer} Tmp_156: int;
  var {:pointer} DeviceExtension_1: int;
  var {:pointer} Sbp2Req: int;
  var boogieTmp: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_9: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;

  anon0:
    call {:si_unique_call 22} cromOffset := __HAVOC_malloc(16);
    call {:si_unique_call 23} directoryLocation := __HAVOC_malloc(16);
    call {:si_unique_call 24} cromOffset1 := __HAVOC_malloc(16);
    call {:si_unique_call 25} ModelLeaf := __HAVOC_malloc(4);
    call {:si_unique_call 26} ModelLeaf_1 := __HAVOC_malloc(4);
    call {:si_unique_call 27} ModelLeaf_2 := __HAVOC_malloc(4);
    call {:si_unique_call 28} packet_1 := __HAVOC_malloc(4);
    DeviceExtension_1 := actual_DeviceExtension_1;
    Sbp2Req := actual_Sbp2Req;
    call {:si_unique_call 29} Tmp_56 := __HAVOC_malloc(2560);
    call {:si_unique_call 30} Tmp_61 := __HAVOC_malloc(2560);
    call {:si_unique_call 31} Tmp_62 := __HAVOC_malloc(2560);
    call {:si_unique_call 32} Tmp_120 := __HAVOC_malloc(2560);
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc devListSize;
    modelIdCount := 0;
    unitDirEntries := 0;
    sbp2Device := 0;
    firstOne := 0;
    unitDirectory := 0;
    unitDependentDirectory := 0;
    modelLeaf := 0;
    vendorLeaf := 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 33} AllocateIrpAndIrb(DeviceExtension_1, packet_1);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_80;
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_142;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_81;
    assume {:nonnull} Tmp_81 != 0;
    assume Tmp_81 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_148;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_147;
    assume {:nonnull} Tmp_147 != 0;
    assume Tmp_147 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_149;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_5;
    call {:si_unique_call 34} status_1 := Sbp2SendRequest(DeviceExtension_1, vslice_dummy_var_5, 2);
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} status_1 < 0;
    goto L72;

  L72:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_6;
    call {:si_unique_call 35} DeAllocateIrpAndIrb(DeviceExtension_1, vslice_dummy_var_6);
    goto L73;

  L73:
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} unitDirectory != 0;
    call {:si_unique_call 36} sdv_ExFreePool(0);
    goto L77;

  L77:
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} unitDependentDirectory != 0;
    call {:si_unique_call 37} sdv_ExFreePool(0);
    goto L81;

  L81:
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} vendorLeaf != 0;
    call {:si_unique_call 38} sdv_ExFreePool(0);
    goto L85;

  L85:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} modelLeaf != 0;
    call {:si_unique_call 39} sdv_ExFreePool(0);
    goto L89;

  L89:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} Sbp2Req != 0;
    goto L94;

  L94:
    Tmp_49 := status_1;
    goto L1;

  L1:
    return;

  anon168_Then:
    assume {:partition} Sbp2Req == 0;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto L94;

  anon167_Then:
    assume {:partition} modelLeaf == 0;
    goto L89;

  anon166_Then:
    assume {:partition} vendorLeaf == 0;
    goto L85;

  anon165_Then:
    assume {:partition} unitDependentDirectory == 0;
    goto L81;

  anon164_Then:
    assume {:partition} unitDirectory == 0;
    goto L77;

  anon163_Then:
    goto L73;

  anon160_Then:
    assume {:partition} 0 <= status_1;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_65;
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_111;
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    havoc vslice_dummy_var_7;
    call {:si_unique_call 40} unitDirectory := ExAllocatePoolWithTag(0, vslice_dummy_var_7, 846226003);
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} unitDirectory != 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_136;
    assume {:nonnull} Tmp_136 != 0;
    assume Tmp_136 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_135;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    havoc vslice_dummy_var_8;
    call {:si_unique_call 41} unitDependentDirectory := ExAllocatePoolWithTag(0, vslice_dummy_var_8, 846226003);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} unitDependentDirectory == 0;
    status_1 := -1073741670;
    goto L72;

  anon162_Then:
    assume {:partition} unitDependentDirectory != 0;
    goto L64;

  L64:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_112;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_69;
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    havoc vslice_dummy_var_9;
    call {:si_unique_call 42} vendorLeaf := ExAllocatePoolWithTag(0, vslice_dummy_var_9, 846226003);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_76;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    goto L95;

  L95:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_74;
    assume {:nonnull} Tmp_74 != 0;
    assume Tmp_74 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_68;
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc vslice_dummy_var_10;
    call {:si_unique_call 43} modelLeaf := ExAllocatePoolWithTag(0, vslice_dummy_var_10, 846226003);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} modelLeaf != 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_51;
    assume {:nonnull} Tmp_51 != 0;
    assume Tmp_51 > 0;
    goto L104;

  L104:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_77;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_92;
    assume {:nonnull} Tmp_92 != 0;
    assume Tmp_92 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_91;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} Tmp_91 != 0;
    assume Tmp_91 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_123;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_79;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_83;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_73;
    assume {:nonnull} Tmp_73 != 0;
    assume Tmp_73 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_11;
    call {:si_unique_call 44} status_1 := Sbp2SendRequest(DeviceExtension_1, vslice_dummy_var_11, 2);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} status_1 >= 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_96;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_12;
    call {:si_unique_call 45} status_1 := Sbp2SendRequest(DeviceExtension_1, vslice_dummy_var_12, 2);
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} status_1 >= 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_134;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    havoc currentGeneration;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_130;
    assume {:nonnull} Tmp_130 != 0;
    assume Tmp_130 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} Tmp_130 != 0;
    assume Tmp_130 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} Tmp_130 != 0;
    assume Tmp_130 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} Tmp_130 != 0;
    assume Tmp_130 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} Sbp2Req != 0;
    goto L137;

  L137:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 46} directoryLength := corral_nondet();
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc Tmp_56;
    firstDevInfo := Tmp_56;
    i_1 := 1;
    goto L141;

  L141:
    call {:si_unique_call 47} unitDependentDirectory, Tmp_53, Tmp_60, Tmp_61, Tmp_62, Tmp_64, Tmp_66, Tmp_67, Tmp_78, modelIdCount, dirInfoQuad, devListSize, firstOne, Tmp_82, Tmp_85, sdv_27, Tmp_86, Tmp_87, Tmp_89, Tmp_93, Tmp_94, Tmp_95, Tmp_100, i_1, depDirLength, sbp2Device, Tmp_104, Tmp_106, Tmp_109, Tmp_110, j, Tmp_114, Tmp_116, Tmp_117, Tmp_118, Tmp_119, devInfo, unitDirEntries, sdv_41, Tmp_122, Tmp_125, Tmp_126, Tmp_128, Tmp_129, Tmp_131, Tmp_132, Tmp_133, Tmp_137, status_1, Tmp_141, Tmp_143, Tmp_144, info, Tmp_150, offset, Tmp_152, Tmp_153, Tmp_154, Tmp_155, Tmp_156 := Sbp2Get1394ConfigInfo_loop_L141(sdv_10, unitDependentDirectory, sdv_11, Tmp_53, sdv_13, sdv_15, sdv_17, Tmp_60, cromOffset, Tmp_61, Tmp_62, Tmp_64, Tmp_66, Tmp_67, directoryLength, Tmp_78, modelIdCount, dirInfoQuad, devListSize, firstOne, sdv_25, Tmp_82, sdv_26, Tmp_85, sdv_27, Tmp_86, Tmp_87, sdv_28, Tmp_89, directoryLocation, Tmp_93, Tmp_94, Tmp_95, Tmp_100, i_1, depDirLength, sdv_31, sbp2Device, firstDevInfo, cromOffset1, Tmp_104, ModelLeaf, Tmp_106, ModelLeaf_1, sdv_34, sdv_35, Tmp_109, Tmp_110, j, sdv_37, Tmp_114, Tmp_116, Tmp_117, Tmp_118, Tmp_119, devInfo, unitDirEntries, sdv_40, sdv_41, Tmp_122, sdv_42, Tmp_125, Tmp_126, currentGeneration, Tmp_128, Tmp_129, Tmp_131, Tmp_132, Tmp_133, vendorLeaf, Tmp_137, unitDirectory, ModelLeaf_2, status_1, packet_1, Tmp_141, Tmp_143, sdv_47, Tmp_144, info, Tmp_150, offset, Tmp_152, modelLeaf, Tmp_153, Tmp_154, sdv_48, Tmp_155, Tmp_156, DeviceExtension_1, Sbp2Req);
    goto L141_last;

  L141_last:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} directoryLength > i_1;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Sbp2Req != 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    goto L169;

  L169:
    i_1 := i_1 + 1;
    goto L169_dummy;

  L169_dummy:
    assume false;
    return;

  anon176_Then:
    Tmp_60 := unitDirectory;
    assume {:nonnull} Tmp_60 != 0;
    assume Tmp_60 > 0;
    havoc Tmp_117;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} Tmp_117 != 129;
    goto L169;

  anon217_Then:
    assume {:partition} Tmp_117 == 129;
    Tmp_116 := unitDirectory;
    assume {:nonnull} Tmp_116 != 0;
    assume Tmp_116 > 0;
    havoc Tmp_132;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto L169;

  anon218_Then:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 48} Sbp2ParseTextLeaf(DeviceExtension_1, unitDirectory, cromOffset, Buffer_unnamed_tag_71(RetrieveTextLeaf_unnamed_tag_70(u__SBP2_REQUEST(Sbp2Req))));
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 49} boogieTmp := corral_nondet();
    status_1 := 0;
    goto L142;

  L142:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Sbp2Req == 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} sbp2Device != 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} 2 > unitDirEntries;
    goto L491;

  L491:
    status_1 := -1073741621;
    goto L72;

  anon199_Then:
    assume {:partition} unitDirEntries >= 2;
    goto L72;

  anon198_Then:
    assume {:partition} sbp2Device == 0;
    goto L491;

  anon174_Then:
    assume {:partition} Sbp2Req != 0;
    goto L72;

  anon177_Then:
    status_1 := -1073741823;
    goto L142;

  anon175_Then:
    assume {:partition} Sbp2Req == 0;
    Tmp_114 := devListSize;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc Tmp_61;
    devInfo := Tmp_61 + Tmp_114 * 256;
    Tmp_78 := unitDirectory;
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} firstOne != 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    call {:si_unique_call 50} sdv_41 := IoAllocateMdl(0, depDirLength, 0, 0, 0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_110;
    assume {:nonnull} Tmp_110 != 0;
    assume Tmp_110 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_85;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_94;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_156;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_82;
    assume {:nonnull} Tmp_82 != 0;
    assume Tmp_82 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_104;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_93;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_133;
    assume {:nonnull} Tmp_133 != 0;
    assume Tmp_133 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_144;
    assume {:nonnull} Tmp_144 != 0;
    assume Tmp_144 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_13;
    call {:si_unique_call 51} status_1 := Sbp2SendRequest(DeviceExtension_1, vslice_dummy_var_13, 2);
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} status_1 >= 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 52} IoFreeMdl(0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_129;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    call {:si_unique_call 53} dirInfoQuad := corral_nondet();
    depDirLength := dirInfoQuad * 4;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} depDirLength <= 256;
    call {:si_unique_call 54} sdv_ExFreePool(0);
    Tmp_128 := depDirLength + 4;
    call {:si_unique_call 55} unitDependentDirectory := ExAllocatePoolWithTag(0, Tmp_128, 846226035);
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} unitDependentDirectory != 0;
    Tmp_150 := depDirLength + 4;
    call {:si_unique_call 56} sdv_27 := IoAllocateMdl(0, Tmp_150, 0, 0, 0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_66;
    assume {:nonnull} Tmp_66 != 0;
    assume Tmp_66 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_67;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    j := 1;
    goto L245;

  L245:
    call {:si_unique_call 57} Tmp_53, modelIdCount, devListSize, Tmp_89, Tmp_100, Tmp_106, j, Tmp_119, unitDirEntries, Tmp_137, status_1, Tmp_141, Tmp_143, Tmp_152, Tmp_154 := Sbp2Get1394ConfigInfo_loop_L245(unitDependentDirectory, Tmp_53, sdv_13, sdv_17, modelIdCount, devListSize, Tmp_89, Tmp_100, depDirLength, firstDevInfo, cromOffset1, Tmp_106, j, Tmp_119, devInfo, unitDirEntries, sdv_42, vendorLeaf, Tmp_137, ModelLeaf_2, status_1, packet_1, Tmp_141, Tmp_143, sdv_47, offset, Tmp_152, Tmp_154, DeviceExtension_1);
    goto L245_last;

  L245_last:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_143;
    assume {:nonnull} Tmp_143 != 0;
    assume Tmp_143 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_89;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_154;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_141;
    assume {:nonnull} Tmp_141 != 0;
    assume Tmp_141 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_17;
    call {:si_unique_call 79} status_1 := Sbp2SendRequest(DeviceExtension_1, vslice_dummy_var_17, 2);
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} status_1 >= 0;
    Tmp_119 := unitDependentDirectory;
    assume {:nonnull} Tmp_119 != 0;
    assume Tmp_119 > 0;
    havoc Tmp_137;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} Tmp_137 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 58} status_1 := Sbp2_ProcessTextualDescriptor(vendorLeaf, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L272;

  L272:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto L277;

  L277:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto L279;

  L279:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L281;

  L281:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L283;

  L283:
    unitDirEntries := unitDirEntries + 1;
    goto L258;

  L258:
    Tmp_106 := unitDependentDirectory;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto L310;

  L310:
    j := j + 1;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} INTDIV(depDirLength, 4) < j;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 59} IoFreeMdl(0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_155;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    goto L169;

  anon230_Then:
    assume {:partition} j <= INTDIV(depDirLength, 4);
    goto anon230_Then_dummy;

  anon230_Then_dummy:
    assume false;
    return;

  anon208_Then:
    Tmp_53 := unitDependentDirectory;
    assume {:nonnull} Tmp_53 != 0;
    assume Tmp_53 > 0;
    havoc Tmp_100;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} Tmp_100 != 23;
    goto L310;

  anon231_Then:
    assume {:partition} Tmp_100 == 23;
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    call {:si_unique_call 60} Sbp2ParseTextLeaf(DeviceExtension_1, unitDependentDirectory, cromOffset1, ModelLeaf_2);
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_14;
    call {:si_unique_call 61} status_1 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_14, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 62} sdv_ExFreePool(0);
    goto L302;

  L302:
    modelIdCount := modelIdCount + 1;
    goto L310;

  anon185_Then:
    goto L302;

  anon209_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L310;

  anon229_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L310;

  anon184_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L283;

  anon183_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L281;

  anon182_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L279;

  anon228_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L277;

  anon227_Then:
    assume {:partition} vendorLeaf == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L272;

  anon226_Then:
    assume {:partition} Tmp_137 != 20;
    goto L258;

  anon181_Then:
    assume {:partition} 0 > status_1;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 63} IoFreeMdl(0);
    goto L72;

  anon225_Then:
    goto L72;

  anon180_Then:
    assume {:partition} unitDependentDirectory == 0;
    goto L72;

  anon224_Then:
    assume {:partition} 256 < depDirLength;
    goto L72;

  anon179_Then:
    assume {:partition} 0 > status_1;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 64} IoFreeMdl(0);
    goto L72;

  anon223_Then:
    goto L72;

  anon178_Then:
    assume {:partition} firstOne == 0;
    firstOne := 1;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 65} depDirLength := corral_nondet();
    j := 0;
    goto L333;

  L333:
    call {:si_unique_call 66} Tmp_64, modelIdCount, devListSize, Tmp_86, Tmp_87, Tmp_95, j, unitDirEntries, Tmp_122, Tmp_126, status_1 := Sbp2Get1394ConfigInfo_loop_L333(unitDependentDirectory, sdv_11, Tmp_64, modelIdCount, devListSize, sdv_26, Tmp_86, Tmp_87, Tmp_95, depDirLength, firstDevInfo, cromOffset1, ModelLeaf_1, sdv_35, j, sdv_37, devInfo, unitDirEntries, Tmp_122, Tmp_126, vendorLeaf, status_1, packet_1, modelLeaf, DeviceExtension_1);
    goto L333_last;

  L333_last:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} depDirLength > j;
    Tmp_95 := unitDependentDirectory;
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    havoc Tmp_122;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} Tmp_122 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} devListSize > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L347;

  L347:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 67} status_1 := Sbp2_ProcessTextualDescriptor(vendorLeaf, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L353;

  L353:
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto L357;

  L357:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L359;

  L359:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto L361;

  L361:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L363;

  L363:
    unitDirEntries := unitDirEntries + 1;
    goto L336;

  L336:
    Tmp_87 := unitDependentDirectory;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L396;

  L396:
    j := j + 1;
    goto L396_dummy;

  L396_dummy:
    assume false;
    return;

  anon210_Then:
    Tmp_86 := unitDependentDirectory;
    assume {:nonnull} Tmp_86 != 0;
    assume Tmp_86 > 0;
    havoc Tmp_64;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} Tmp_64 != 23;
    goto L396;

  anon236_Then:
    assume {:partition} Tmp_64 == 23;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_126;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    call {:si_unique_call 68} Sbp2ParseTextLeaf(DeviceExtension_1, unitDependentDirectory, cromOffset1, ModelLeaf_1);
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_15;
    call {:si_unique_call 69} status_1 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_15, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 70} sdv_ExFreePool(0);
    goto L377;

  L377:
    modelIdCount := modelIdCount + 1;
    goto L396;

  anon193_Then:
    goto L377;

  anon192_Then:
    goto L377;

  anon211_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L396;

  anon235_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L396;

  anon191_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L363;

  anon190_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L361;

  anon189_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L359;

  anon234_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L357;

  anon188_Then:
    assume {:partition} vendorLeaf == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L353;

  anon233_Then:
    assume {:partition} 0 >= devListSize;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} modelLeaf != 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 71} status_1 := Sbp2_ProcessTextualDescriptor(modelLeaf, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L347;

  anon187_Then:
    assume {:partition} modelLeaf == 0;
    goto L347;

  anon232_Then:
    assume {:partition} Tmp_122 != 20;
    goto L336;

  anon186_Then:
    assume {:partition} j >= depDirLength;
    goto L169;

  anon201_Then:
    goto L169;

  anon202_Then:
    Tmp_131 := unitDirectory;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    havoc Tmp_109;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} Tmp_109 == 23;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} devListSize >= modelIdCount;
    Tmp_118 := modelIdCount;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc Tmp_62;
    info := Tmp_62 + Tmp_118 * 256;
    assume {:nonnull} info != 0;
    assume info > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    call {:si_unique_call 72} Sbp2ParseTextLeaf(DeviceExtension_1, unitDirectory, cromOffset1, ModelLeaf);
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} info != 0;
    assume info > 0;
    havoc vslice_dummy_var_16;
    call {:si_unique_call 73} status_1 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_16, uniModelId__DEVICE_INFORMATION(info));
    call {:si_unique_call 74} sdv_ExFreePool(0);
    goto L416;

  L416:
    modelIdCount := modelIdCount + 1;
    goto L169;

  anon195_Then:
    goto L416;

  anon222_Then:
    goto L416;

  anon194_Then:
    assume {:partition} modelIdCount > devListSize;
    goto L169;

  anon221_Then:
    assume {:partition} Tmp_109 != 23;
    goto L169;

  anon203_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    sbp2Device := 1;
    goto L169;

  anon204_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L169;

  anon205_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L169;

  anon206_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L169;

  anon207_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L169;

  anon219_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} devListSize != 0;
    goto L470;

  L470:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 75} status_1 := Sbp2_ProcessTextualDescriptor(vendorLeaf, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L476;

  L476:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L169;

  anon197_Then:
    assume {:partition} vendorLeaf == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L476;

  anon220_Then:
    assume {:partition} devListSize == 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} modelLeaf != 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 76} status_1 := Sbp2_ProcessTextualDescriptor(modelLeaf, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L470;

  anon196_Then:
    assume {:partition} modelLeaf == 0;
    goto L470;

  anon173_Then:
    assume {:partition} i_1 >= directoryLength;
    goto L142;

  anon216_Then:
    assume {:partition} Sbp2Req == 0;
    i_1 := 0;
    goto L493;

  L493:
    call {:si_unique_call 77} Tmp_57, i_1, devInfo, Tmp_120 := Sbp2Get1394ConfigInfo_loop_L493(Tmp_57, i_1, devInfo, Tmp_120, DeviceExtension_1);
    goto L493_last;

  L493_last:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    Tmp_57 := i_1;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc Tmp_120;
    devInfo := Tmp_120 + Tmp_57 * 256;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 78} sdv_ExFreePool(0);
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L497;

  L497:
    i_1 := i_1 + 1;
    goto L497_dummy;

  L497_dummy:
    assume false;
    return;

  anon237_Then:
    goto L497;

  anon200_Then:
    devListSize := 0;
    goto L137;

  anon172_Then:
    assume {:partition} 0 > status_1;
    goto L72;

  anon171_Then:
    assume {:partition} 0 > status_1;
    goto L72;

  anon170_Then:
    assume {:partition} modelLeaf == 0;
    status_1 := -1073741670;
    goto L72;

  anon215_Then:
    goto L104;

  anon169_Then:
    assume {:partition} vendorLeaf == 0;
    status_1 := -1073741670;
    goto L72;

  anon214_Then:
    goto L95;

  anon213_Then:
    goto L64;

  anon161_Then:
    assume {:partition} unitDirectory == 0;
    status_1 := -1073741670;
    goto L72;

  anon212_Then:
    status_1 := -1073741621;
    goto L72;

  anon159_Then:
    Tmp_49 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin(actual_PdoExtension: int, actual_Type: int) returns (Tmp_157: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin(actual_PdoExtension: int, actual_Type: int) returns (Tmp_157: int)
{
  var {:pointer} Tmp_158: int;
  var {:pointer} Tmp_159: int;
  var {:scalar} waitValue: int;
  var {:scalar} sdv_51: int;
  var {:pointer} Tmp_162: int;
  var {:scalar} sdv_52: int;
  var {:scalar} Tmp_163: int;
  var {:pointer} Tmp_164: int;
  var {:scalar} sdv_54: int;
  var {:scalar} sdv_55: int;
  var {:pointer} fdoExtension: int;
  var {:scalar} sdv_57: int;
  var {:scalar} temp: int;
  var {:scalar} sdv_58: int;
  var {:scalar} sdv_59: int;
  var {:pointer} loginOrb: int;
  var {:scalar} cIrql: int;
  var {:scalar} sdv_60: int;
  var {:scalar} status_2: int;
  var {:pointer} sbpRequest: int;
  var {:pointer} Tmp_166: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} Type: int;
  var boogieTmp: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_18: int;

  anon0:
    call {:si_unique_call 80} waitValue := __HAVOC_malloc(20);
    PdoExtension := actual_PdoExtension;
    Type := actual_Type;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc sbpRequest;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_162;
    assume {:nonnull} Tmp_162 != 0;
    assume Tmp_162 > 0;
    havoc fdoExtension;
    loginOrb := sbpRequest;
    call {:si_unique_call 81} Tmp_164 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    call {:si_unique_call 82} sdv_KeAcquireSpinLock(0, Tmp_164);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    havoc cIrql;
    call {:si_unique_call 83} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 84} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 85} sdv_KeReleaseSpinLock(0, cIrql);
    Tmp_157 := 259;
    goto L1;

  L1:
    return;

  anon32_Then:
    goto L20;

  L20:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 86} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 87} sdv_KeReleaseSpinLock(0, cIrql);
    call {:si_unique_call 88} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_166;
    assume {:nonnull} Tmp_166 != 0;
    assume Tmp_166 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Tmp_166 != 0;
    assume Tmp_166 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto L46;

  L46:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L45;

  L45:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_159;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 89} boogieTmp := corral_nondet();
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_18;
    call {:si_unique_call 90} vslice_dummy_var_5 := KeSetTimer(0, vslice_dummy_var_18, 0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 91} status_2 := Sbp2AccessRegister(PdoExtension, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension)), 1024);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_2 >= 0;
    Tmp_157 := 259;
    goto L1;

  anon33_Then:
    assume {:partition} 0 > status_2;
    Tmp_157 := status_2;
    goto L1;

  anon43_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 92} vslice_dummy_var_4 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension));
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 93} status_2 := Sbp2AccessRegister(PdoExtension, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension)), 256);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_2 >= 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    Tmp_163 := 20;
    goto L108;

  L108:
    temp := Tmp_163;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    call {:si_unique_call 94} status_2 := KeWaitForSingleObject(0, 0, 0, 0, waitValue);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_2 == 258;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    status_2 := -1073741823;
    goto L116;

  L116:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_158;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L123;

  L123:
    call {:si_unique_call 95} Tmp_164 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    call {:si_unique_call 96} sdv_KeAcquireSpinLock(0, Tmp_164);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    havoc cIrql;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_2 == -1073741790;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    status_2 := 0;
    goto L127;

  L127:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_2 >= 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 97} sdv_KeReleaseSpinLock(0, cIrql);
    goto L136;

  L136:
    Tmp_157 := status_2;
    goto L1;

  anon39_Then:
    assume {:partition} 0 > status_2;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 98} sdv_KeReleaseSpinLock(0, cIrql);
    goto L136;

  anon40_Then:
    goto L127;

  anon38_Then:
    assume {:partition} status_2 != -1073741790;
    goto L127;

  anon45_Then:
    status_2 := -1073741823;
    goto L123;

  anon36_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc status_2;
    goto L123;

  anon37_Then:
    status_2 := 0;
    goto L116;

  anon35_Then:
    assume {:partition} status_2 != 258;
    goto L116;

  anon44_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 99} Tmp_163 := corral_nondet();
    goto L108;

  anon34_Then:
    assume {:partition} 0 > status_2;
    Tmp_157 := status_2;
    goto L1;

  anon41_Then:
    goto L45;

  anon42_Then:
    goto L46;

  anon31_Then:
    goto L20;
}



procedure {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_DeviceExtension_2: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_DeviceExtension_2: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int)
{
  var {:scalar} i_2: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} Tmp_169: int;
  var {:pointer} Tmp_170: int;
  var {:pointer} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:scalar} waitValue_1: int;
  var {:pointer} Tmp_173: int;
  var {:pointer} Tmp_174: int;
  var {:pointer} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:scalar} Tmp_178: int;
  var {:scalar} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} leaf: int;
  var {:pointer} Tmp_182: int;
  var {:pointer} tModelLeaf: int;
  var {:pointer} Tmp_183: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} sdv_65: int;
  var {:pointer} Tmp_186: int;
  var {:scalar} currentGeneration_1: int;
  var {:pointer} Tmp_187: int;
  var {:scalar} retries: int;
  var {:scalar} temp_1: int;
  var {:pointer} Tmp_188: int;
  var {:pointer} tModelLeafMdl: int;
  var {:pointer} Tmp_189: int;
  var {:scalar} leafLength: int;
  var {:pointer} Tmp_196: int;
  var {:pointer} packet_2: int;
  var {:scalar} status_3: int;
  var {:pointer} Tmp_198: int;
  var {:pointer} Tmp_199: int;
  var {:pointer} Tmp_200: int;
  var {:scalar} event: int;
  var {:pointer} DeviceExtension_2: int;
  var {:pointer} ModelLeafLocation: int;
  var {:pointer} ModelLeaf_3: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;

  anon0:
    call {:si_unique_call 100} waitValue_1 := __HAVOC_malloc(20);
    call {:si_unique_call 101} vslice_dummy_var_6 := __HAVOC_malloc(4);
    call {:si_unique_call 102} packet_2 := __HAVOC_malloc(4);
    call {:si_unique_call 103} event := __HAVOC_malloc(124);
    DeviceExtension_2 := actual_DeviceExtension_2;
    ModelLeafLocation := actual_ModelLeafLocation;
    ModelLeaf_3 := actual_ModelLeaf_3;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    leaf := 0;
    tModelLeaf := 0;
    tModelLeafMdl := 0;
    call {:si_unique_call 104} AllocateIrpAndIrb(DeviceExtension_2, packet_2);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 105} tModelLeaf := ExAllocatePoolWithTag(0, 32, 846226035);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} tModelLeaf != 0;
    call {:si_unique_call 106} tModelLeafMdl := IoAllocateMdl(0, 32, 0, 0, 0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} tModelLeafMdl != 0;
    retries := 3;
    goto L42;

  L42:
    call {:si_unique_call 107} Tmp_167, Tmp_170, Tmp_172, Tmp_174, Tmp_180, Tmp_183, Tmp_184, Tmp_185, Tmp_186, currentGeneration_1, retries, Tmp_196, status_3, Tmp_198, Tmp_199, Tmp_200, vslice_dummy_var_7 := Sbp2ParseTextLeaf_loop_L42(Tmp_167, Tmp_170, Tmp_172, waitValue_1, Tmp_174, Tmp_180, Tmp_183, Tmp_184, Tmp_185, Tmp_186, currentGeneration_1, retries, tModelLeafMdl, Tmp_196, packet_2, status_3, Tmp_198, Tmp_199, Tmp_200, event, DeviceExtension_2, ModelLeafLocation, vslice_dummy_var_7);
    goto L42_last;

  L42_last:
    assume {:CounterLoop 3} {:Counter "retries"} true;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} retries != 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_184;
    assume {:nonnull} Tmp_184 != 0;
    assume Tmp_184 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_198;
    assume {:nonnull} Tmp_198 != 0;
    assume Tmp_198 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_19;
    call {:si_unique_call 108} status_3 := Sbp2SendRequest(DeviceExtension_2, vslice_dummy_var_19, 2);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_180;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    havoc currentGeneration_1;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_196;
    assume {:nonnull} Tmp_196 != 0;
    assume Tmp_196 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_174;
    assume {:nonnull} Tmp_174 != 0;
    assume Tmp_174 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_167;
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_186;
    assume {:nonnull} Tmp_186 != 0;
    assume Tmp_186 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_172;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_200;
    assume {:nonnull} Tmp_200 != 0;
    assume Tmp_200 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_199;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_183;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_170;
    assume {:nonnull} Tmp_170 != 0;
    assume Tmp_170 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_185;
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_20;
    call {:si_unique_call 109} status_3 := Sbp2SendRequest(DeviceExtension_2, vslice_dummy_var_20, 2);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} status_3 < 0;
    call {:si_unique_call 110} KeInitializeEvent(event, 0, 0);
    assume {:nonnull} waitValue_1 != 0;
    assume waitValue_1 > 0;
    call {:si_unique_call 111} vslice_dummy_var_7 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_1);
    retries := retries - 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    assume false;
    return;

  anon28_Then:
    assume {:partition} 0 <= status_3;
    goto L43;

  L43:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_3 >= 0;
    call {:si_unique_call 112} leafLength := corral_nondet();
    Tmp_176 := tModelLeaf;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    havoc temp_1;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} leafLength + 4 > 32;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 113} IoFreeMdl(0);
    call {:si_unique_call 114} sdv_ExFreePool(0);
    Tmp_178 := leafLength + 4;
    call {:si_unique_call 115} tModelLeaf := ExAllocatePoolWithTag(0, Tmp_178, 846226035);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} tModelLeaf != 0;
    Tmp_179 := leafLength + 4;
    call {:si_unique_call 116} sdv_65 := IoAllocateMdl(0, Tmp_179, 0, 0, 0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_182;
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_171;
    assume {:nonnull} Tmp_171 != 0;
    assume Tmp_171 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto L89;

  L89:
    i_2 := 1;
    Tmp_188 := tModelLeaf;
    assume {:nonnull} Tmp_188 != 0;
    assume Tmp_188 > 0;
    goto L123;

  L123:
    call {:si_unique_call 117} i_2, Tmp_169, Tmp_173, Tmp_175, Tmp_187, Tmp_189, status_3 := Sbp2ParseTextLeaf_loop_L123(i_2, Tmp_169, Tmp_173, Tmp_175, Tmp_187, Tmp_189, leafLength, packet_2, status_3, DeviceExtension_2, ModelLeafLocation);
    goto L123_last;

  L123_last:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_187;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_187 != 0;
    assume Tmp_187 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_189;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_175;
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_173;
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_169;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_28;
    call {:si_unique_call 132} status_3 := Sbp2SendRequest(DeviceExtension_2, vslice_dummy_var_28, 2);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_3 >= 0;
    i_2 := i_2 + 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} INTDIV(leafLength, 4) < i_2;
    leaf := tModelLeaf;
    assume {:nonnull} leaf != 0;
    assume leaf > 0;
    assume {:nonnull} ModelLeaf_3 != 0;
    assume ModelLeaf_3 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 118} IoFreeMdl(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_21;
    call {:si_unique_call 119} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_21);
    goto L1;

  L1:
    return;

  anon33_Then:
    assume {:partition} i_2 <= INTDIV(leafLength, 4);
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon30_Then:
    assume {:partition} 0 > status_3;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 120} IoFreeMdl(0);
    call {:si_unique_call 121} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_22;
    call {:si_unique_call 122} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_22);
    goto L1;

  anon32_Then:
    call {:si_unique_call 123} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_23;
    call {:si_unique_call 124} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_23);
    goto L1;

  anon29_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_24;
    call {:si_unique_call 125} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_24);
    goto L1;

  anon31_Then:
    assume {:partition} 32 >= leafLength + 4;
    goto L89;

  anon27_Then:
    assume {:partition} 0 > status_3;
    call {:si_unique_call 126} IoFreeMdl(0);
    call {:si_unique_call 127} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_25;
    call {:si_unique_call 128} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_25);
    goto L1;

  anon26_Then:
    assume {:partition} retries == 0;
    goto L43;

  anon25_Then:
    assume {:partition} tModelLeafMdl == 0;
    call {:si_unique_call 129} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_26;
    call {:si_unique_call 130} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_26);
    goto L1;

  anon24_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_27;
    call {:si_unique_call 131} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_27);
    goto L1;

  anon23_Then:
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction(actual_DeviceExtension_3: int, actual_Type_1: int) returns (Tmp_202: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction(actual_DeviceExtension_3: int, actual_Type_1: int) returns (Tmp_202: int)
{
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_71: int;
  var {:scalar} sdv_73: int;
  var {:pointer} Tmp_203: int;
  var {:pointer} Tmp_204: int;
  var {:scalar} sdv_76: int;
  var {:scalar} sdv_78: int;
  var {:scalar} sdv_82: int;
  var {:scalar} sdv_83: int;
  var {:scalar} sdv_84: int;
  var {:scalar} sdv_85: int;
  var {:scalar} sdv_86: int;
  var {:pointer} Tmp_205: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_87: int;
  var {:scalar} status_4: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} DeviceExtension_3: int;
  var {:scalar} Type_1: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_9: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 133} waitValue_2 := __HAVOC_malloc(20);
    DeviceExtension_3 := actual_DeviceExtension_3;
    Type_1 := actual_Type_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_202 := -1073741632;
    goto L1;

  L1:
    return;

  anon41_Then:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} sbpRequest_1 != 0;
    call {:si_unique_call 134} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Type_1 != 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Type_1 != 1;
    call {:si_unique_call 135} status_4 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_4 >= 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc Tmp_204;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 136} sdv_86 := sdv_KeGetCurrentIrql();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} 2 > sdv_86;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 137} vslice_dummy_var_12 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(DeviceExtension_3));
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 138} status_4 := Sbp2AccessRegister(DeviceExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(DeviceExtension_3)), 256);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_4 >= 0;
    call {:si_unique_call 139} status_4 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_4 == 258;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 140} vslice_dummy_var_9 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_3), 0);
    Tmp_202 := -1073741823;
    goto L1;

  anon35_Then:
    assume {:partition} status_4 != 258;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} status_4 != 0;
    goto L133;

  L133:
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 141} vslice_dummy_var_10 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_3), 0);
    Tmp_202 := status_4;
    goto L1;

  anon36_Then:
    assume {:partition} status_4 == 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} 3 == Type_1;
    call {:si_unique_call 142} Tmp_205 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_205 != 0;
    assume Tmp_205 > 0;
    call {:si_unique_call 143} sdv_KeAcquireSpinLock(0, Tmp_205);
    assume {:nonnull} Tmp_205 != 0;
    assume Tmp_205 > 0;
    havoc cIrql_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc status_4;
    goto L141;

  L141:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_4 >= 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    goto L143;

  L143:
    call {:si_unique_call 144} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L133;

  anon39_Then:
    assume {:partition} 0 > status_4;
    goto L143;

  anon38_Then:
    goto L141;

  anon37_Then:
    assume {:partition} 3 != Type_1;
    goto L133;

  anon34_Then:
    assume {:partition} 0 > status_4;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 145} vslice_dummy_var_8 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_3), 0);
    Tmp_202 := status_4;
    goto L1;

  anon33_Then:
    assume {:partition} sdv_86 >= 2;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 146} status_4 := Sbp2AccessRegister(DeviceExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(DeviceExtension_3)), 1024);
    goto L133;

  anon32_Then:
    assume {:partition} 0 > status_4;
    Tmp_202 := status_4;
    goto L1;

  anon40_Then:
    assume {:partition} Type_1 == 1;
    queryOrb := sbpRequest_1;
    call {:si_unique_call 147} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc Tmp_203;
    assume {:nonnull} Tmp_203 != 0;
    assume Tmp_203 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 148} vslice_dummy_var_11 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(DeviceExtension_3));
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 149} status_4 := Sbp2AccessRegister(DeviceExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(DeviceExtension_3)), 256);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_4 >= 0;
    call {:si_unique_call 150} status_4 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_4 == 258;
    Tmp_202 := -1073741823;
    goto L1;

  anon31_Then:
    assume {:partition} status_4 != 258;
    Tmp_202 := status_4;
    goto L1;

  anon30_Then:
    assume {:partition} 0 > status_4;
    Tmp_202 := status_4;
    goto L1;

  anon42_Then:
    assume {:partition} Type_1 == 0;
    call {:si_unique_call 151} status_4 := Sbp2DoLogin(DeviceExtension_3, Type_1);
    Tmp_202 := status_4;
    goto L1;

  anon29_Then:
    assume {:partition} sbpRequest_1 == 0;
    Tmp_202 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister(actual_DeviceExtension_4: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_206: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister(actual_DeviceExtension_4: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_206: int)
{
  var {:pointer} Tmp_207: int;
  var {:pointer} Tmp_208: int;
  var {:pointer} Tmp_209: int;
  var {:pointer} Tmp_210: int;
  var {:pointer} Tmp_211: int;
  var {:pointer} Tmp_212: int;
  var {:pointer} Tmp_213: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} Tmp_215: int;
  var {:pointer} Tmp_216: int;
  var {:pointer} Tmp_217: int;
  var {:pointer} Tmp_218: int;
  var {:pointer} Tmp_219: int;
  var {:scalar} sdv_90: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_220: int;
  var {:pointer} Tmp_221: int;
  var {:pointer} Tmp_222: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} sdv_91: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} Tmp_228: int;
  var {:scalar} sdv_92: int;
  var {:pointer} Tmp_229: int;
  var {:scalar} sdv_94: int;
  var {:pointer} Tmp_230: int;
  var {:pointer} Tmp_231: int;
  var {:pointer} Tmp_232: int;
  var {:pointer} Tmp_233: int;
  var {:pointer} Tmp_234: int;
  var {:pointer} Tmp_236: int;
  var {:pointer} Tmp_237: int;
  var {:scalar} sdv_95: int;
  var {:pointer} Tmp_238: int;
  var {:pointer} Tmp_239: int;
  var {:pointer} Tmp_240: int;
  var {:scalar} sdv_96: int;
  var {:pointer} sdv_97: int;
  var {:pointer} Tmp_241: int;
  var {:pointer} Tmp_242: int;
  var {:pointer} Tmp_243: int;
  var {:pointer} Tmp_244: int;
  var {:pointer} Tmp_245: int;
  var {:pointer} Tmp_246: int;
  var {:pointer} Tmp_247: int;
  var {:pointer} Tmp_248: int;
  var {:pointer} Tmp_249: int;
  var {:pointer} Tmp_250: int;
  var {:scalar} status_5: int;
  var {:pointer} packet_3: int;
  var {:pointer} Tmp_251: int;
  var {:pointer} Tmp_252: int;
  var {:pointer} Tmp_253: int;
  var {:pointer} Tmp_254: int;
  var {:pointer} Tmp_255: int;
  var {:pointer} Tmp_256: int;
  var {:pointer} Tmp_260: int;
  var {:pointer} Tmp_261: int;
  var {:pointer} Tmp_262: int;
  var {:scalar} sdv_99: int;
  var {:pointer} Tmp_263: int;
  var {:pointer} DeviceExtension_4: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;

  anon0:
    call {:si_unique_call 152} packet_3 := __HAVOC_malloc(4);
    DeviceExtension_4 := actual_DeviceExtension_4;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    bFreeMdl := 0;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    Tmp_206 := -1073741632;
    goto L1;

  L1:
    return;

  anon83_Then:
    call {:si_unique_call 153} AllocateIrpAndIrb(DeviceExtension_4, packet_3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_253;
    assume {:nonnull} Tmp_253 != 0;
    assume Tmp_253 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 2;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 4;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 8;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 16;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 32;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 64;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) == 128;
    goto L19;

  L19:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_248;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_215;
    assume {:nonnull} Tmp_215 != 0;
    assume Tmp_215 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_243;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 8;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 16;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 32;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 64;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) == 128;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_246;
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    Tmp_245 := Data;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    goto L23;

  L23:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_229;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_207;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_241;
    assume {:nonnull} Tmp_241 != 0;
    assume Tmp_241 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_211;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L17;

  L17:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(RegisterAndDirection, 1024) != 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_29;
    call {:si_unique_call 154} status_5 := Sbp2SendRequest(DeviceExtension_4, vslice_dummy_var_29, 1);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_5 >= 0;
    goto L115;

  L115:
    Tmp_206 := status_5;
    goto L1;

  anon65_Then:
    assume {:partition} 0 > status_5;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_216;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_30;
    call {:si_unique_call 155} DeAllocateIrpAndIrb(DeviceExtension_4, vslice_dummy_var_30);
    goto L115;

  anon87_Then:
    goto L115;

  anon62_Then:
    assume {:partition} BAND(RegisterAndDirection, 1024) == 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_31;
    call {:si_unique_call 156} status_5 := Sbp2SendRequest(DeviceExtension_4, vslice_dummy_var_31, 2);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} bFreeMdl != 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    call {:si_unique_call 157} IoFreeMdl(0);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_256;
    assume {:nonnull} Tmp_256 != 0;
    assume Tmp_256 > 0;
    goto L121;

  L121:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} status_5 >= 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BAND(RegisterAndDirection, 512) != 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) == 4;
    goto L131;

  L131:
    Tmp_212 := Data;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    Tmp_238 := Data;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto L126;

  L126:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_32;
    call {:si_unique_call 158} DeAllocateIrpAndIrb(DeviceExtension_4, vslice_dummy_var_32);
    goto L115;

  anon77_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) != 4;
    goto L126;

  anon69_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 0;
    goto L131;

  anon68_Then:
    assume {:partition} BAND(RegisterAndDirection, 512) == 0;
    goto L126;

  anon67_Then:
    assume {:partition} 0 > status_5;
    goto L126;

  anon66_Then:
    assume {:partition} bFreeMdl == 0;
    goto L121;

  anon78_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) != 128;
    goto L23;

  anon79_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 64;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_225;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    Tmp_236 := Data;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    goto L23;

  anon80_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 32;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_247;
    assume {:nonnull} Tmp_247 != 0;
    assume Tmp_247 > 0;
    goto L23;

  anon81_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 16;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_234;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc Tmp_244;
    assume {:nonnull} Tmp_234 != 0;
    assume Tmp_234 > 0;
    assume {:nonnull} Tmp_244 != 0;
    assume Tmp_244 > 0;
    goto L23;

  anon82_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 8;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_249;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_240;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} Tmp_249 != 0;
    assume Tmp_249 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_209;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc Tmp_237;
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    assume {:nonnull} Tmp_237 != 0;
    assume Tmp_237 > 0;
    goto L23;

  anon90_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 2;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_239;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc Tmp_221;
    assume {:nonnull} Tmp_221 != 0;
    assume Tmp_221 > 0;
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    goto L23;

  anon70_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) != 128;
    goto L17;

  anon71_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 64;
    goto L19;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 32;
    goto L19;

  anon73_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 16;
    goto L19;

  anon74_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 8;
    goto L19;

  anon75_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 4;
    goto L18;

  L18:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(RegisterAndDirection, 256) != 0;
    goto L52;

  L52:
    Tmp_260 := Data;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_218;
    assume {:nonnull} Tmp_218 != 0;
    assume Tmp_218 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_262;
    assume {:nonnull} Tmp_262 != 0;
    assume Tmp_262 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection, 4) != 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_222;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc Tmp_208;
    assume {:nonnull} Tmp_208 != 0;
    assume Tmp_208 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    goto L66;

  L66:
    call {:si_unique_call 159} sdv_97 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_232;
    assume {:nonnull} Tmp_232 != 0;
    assume Tmp_232 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_228;
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_261;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_214;
    assume {:nonnull} Tmp_214 != 0;
    assume Tmp_214 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_230;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_230 != 0;
    assume Tmp_230 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto L17;

  anon86_Then:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_33;
    call {:si_unique_call 160} DeAllocateIrpAndIrb(DeviceExtension_4, vslice_dummy_var_33);
    Tmp_206 := -1073741670;
    goto L1;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection, 4) == 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_252;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc Tmp_219;
    assume {:nonnull} Tmp_219 != 0;
    assume Tmp_219 > 0;
    assume {:nonnull} Tmp_252 != 0;
    assume Tmp_252 > 0;
    goto L66;

  anon63_Then:
    assume {:partition} BAND(RegisterAndDirection, 256) == 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} BAND(RegisterAndDirection, 1024) == 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_210;
    assume {:nonnull} Tmp_210 != 0;
    assume Tmp_210 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection, 4) != 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_242;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc Tmp_220;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} Tmp_242 != 0;
    assume Tmp_242 > 0;
    goto L88;

  L88:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_251;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc Tmp_217;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    call {:si_unique_call 161} sdv_91 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_254;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_223;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_250;
    assume {:nonnull} Tmp_250 != 0;
    assume Tmp_250 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_233;
    assume {:nonnull} Tmp_233 != 0;
    assume Tmp_233 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_213;
    assume {:nonnull} Tmp_213 != 0;
    assume Tmp_213 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_255;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto L17;

  anon89_Then:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_34;
    call {:si_unique_call 162} DeAllocateIrpAndIrb(DeviceExtension_4, vslice_dummy_var_34);
    Tmp_206 := -1073741670;
    goto L1;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection, 4) == 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_263;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc Tmp_231;
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} Tmp_263 != 0;
    assume Tmp_263 > 0;
    goto L88;

  anon64_Then:
    assume {:partition} BAND(RegisterAndDirection, 1024) != 0;
    goto L52;

  anon76_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 2;
    goto L19;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 0;
    goto L18;

  anon61_Then:
    Tmp_206 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation(actual_DeviceExtension_5: int) returns (Tmp_264: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation(actual_DeviceExtension_5: int) returns (Tmp_264: int)
{
  var {:pointer} nextListItem: int;
  var {:pointer} Tmp_265: int;
  var {:pointer} Tmp_266: int;
  var {:pointer} Tmp_267: int;
  var {:pointer} Tmp_268: int;
  var {:pointer} Tmp_269: int;
  var {:pointer} Tmp_270: int;
  var {:scalar} sdv_101: int;
  var {:pointer} Tmp_271: int;
  var {:pointer} Tmp_272: int;
  var {:pointer} sdv_102: int;
  var {:scalar} sdv_103: int;
  var {:scalar} oldIrql: int;
  var {:scalar} sdv_105: int;
  var {:pointer} Tmp_273: int;
  var {:scalar} sdv_106: int;
  var {:pointer} sdv_107: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_274: int;
  var {:scalar} sdv_108: int;
  var {:pointer} Tmp_275: int;
  var {:pointer} packet_4: int;
  var {:scalar} status_6: int;
  var {:pointer} Tmp_276: int;
  var {:pointer} Tmp_277: int;
  var {:pointer} DeviceExtension_5: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 163} packet_4 := __HAVOC_malloc(4);
    DeviceExtension_5 := actual_DeviceExtension_5;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 164} AllocateIrpAndIrb(DeviceExtension_5, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_270;
    assume {:nonnull} Tmp_270 != 0;
    assume Tmp_270 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_266;
    assume {:nonnull} Tmp_266 != 0;
    assume Tmp_266 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_35;
    call {:si_unique_call 165} status_6 := Sbp2SendRequest(DeviceExtension_5, vslice_dummy_var_35, 2);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_6 < 0;
    goto L58;

  L58:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_36;
    call {:si_unique_call 166} DeAllocateIrpAndIrb(DeviceExtension_5, vslice_dummy_var_36);
    Tmp_264 := status_6;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} 0 <= status_6;
    call {:si_unique_call 167} Tmp_267 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    call {:si_unique_call 168} sdv_KeAcquireSpinLock(0, Tmp_267);
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    havoc oldIrql;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_275;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    call {:si_unique_call 169} sdv_KeReleaseSpinLock(0, oldIrql);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_269;
    assume {:nonnull} Tmp_269 != 0;
    assume Tmp_269 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_273;
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_268;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_37;
    call {:si_unique_call 170} status_6 := Sbp2SendRequest(DeviceExtension_5, vslice_dummy_var_37, 2);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_6 < 0;
    goto L58;

  anon13_Then:
    assume {:partition} 0 <= status_6;
    call {:si_unique_call 171} Tmp_267 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    call {:si_unique_call 172} sdv_KeAcquireSpinLock(0, Tmp_267);
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    havoc oldIrql;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_272;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    call {:si_unique_call 173} sdv_KeReleaseSpinLock(0, oldIrql);
    call {:si_unique_call 174} Tmp_267 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    call {:si_unique_call 175} sdv_KeAcquireSpinLock(0, Tmp_267);
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    havoc oldIrql;
    call {:si_unique_call 176} sdv_105 := sdv_IsListEmpty(0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_105 != 0;
    goto L55;

  L55:
    call {:si_unique_call 177} sdv_KeReleaseSpinLock(0, oldIrql);
    goto L58;

  anon14_Then:
    assume {:partition} sdv_105 == 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    havoc vslice_dummy_var_38;
    call {:si_unique_call 178} sdv_107 := sdv_containing_record(vslice_dummy_var_38, 0);
    nextListItem := sdv_107;
    goto L63;

  L63:
    call {:si_unique_call 179} nextListItem, Tmp_265, Tmp_271, sdv_102, currentListItem, Tmp_274, Tmp_276, Tmp_277 := Sbp2UpdateNodeInformation_loop_L63(nextListItem, Tmp_265, sdv_101, Tmp_271, sdv_102, sdv_103, sdv_106, currentListItem, Tmp_274, sdv_108, Tmp_276, Tmp_277, DeviceExtension_5);
    goto L63_last;

  L63_last:
    currentListItem := nextListItem;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_277;
    assume {:nonnull} Tmp_277 != 0;
    assume Tmp_277 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_276;
    assume {:nonnull} Tmp_276 != 0;
    assume Tmp_276 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_274;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_274 != 0;
    assume Tmp_274 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_274 != 0;
    assume Tmp_274 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_265;
    assume {:nonnull} Tmp_265 != 0;
    assume Tmp_265 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_271;
    assume {:nonnull} Tmp_271 != 0;
    assume Tmp_271 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc nextListItem;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    havoc vslice_dummy_var_39;
    call {:si_unique_call 180} sdv_102 := sdv_containing_record(vslice_dummy_var_39, 0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} currentListItem != sdv_102;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:partition} currentListItem == sdv_102;
    goto L55;

  anon11_Then:
    Tmp_264 := -1073741670;
    goto L1;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_13: int;

  anon0:
    call {:si_unique_call 181} vslice_dummy_var_13 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_14: int;

  anon0:
    call {:si_unique_call 182} vslice_dummy_var_14 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init13"} _sdv_init13();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init13"} _sdv_init13()
{
  var vslice_dummy_var_15: int;

  anon0:
    call {:si_unique_call 183} vslice_dummy_var_15 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init12"} _sdv_init12()
{
  var vslice_dummy_var_16: int;

  anon0:
    call {:si_unique_call 184} vslice_dummy_var_16 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_17: int;

  anon0:
    call {:si_unique_call 185} vslice_dummy_var_17 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init11"} _sdv_init11()
{
  var vslice_dummy_var_18: int;

  anon0:
    call {:si_unique_call 186} vslice_dummy_var_18 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init10"} _sdv_init10();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init10"} _sdv_init10()
{
  var vslice_dummy_var_19: int;

  anon0:
    call {:si_unique_call 187} vslice_dummy_var_19 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_20: int;

  anon0:
    call {:si_unique_call 188} vslice_dummy_var_20 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunSurpriseRemoveDevice"} {:osmodel} sdv_RunSurpriseRemoveDevice(actual_po: int, actual_pirp: int) returns (Tmp_294: int);
  modifies alloc, device, yogi_error;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} old(device) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_O_0) == old(SLAM_guard_O_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunSurpriseRemoveDevice"} {:osmodel} sdv_RunSurpriseRemoveDevice(actual_po: int, actual_pirp: int) returns (Tmp_294: int)
{
  var {:pointer} ps: int;
  var {:scalar} status_7: int;
  var {:pointer} po: int;
  var {:pointer} pirp: int;

  anon0:
    po := actual_po;
    pirp := actual_pirp;
    assume {:nonnull} pirp != 0;
    assume pirp > 0;
    havoc ps;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} pirp != 0;
    assume pirp > 0;
    assume {:nonnull} pirp != 0;
    assume pirp > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 189} sdv_SetStatus(pirp);
    call {:si_unique_call 190} status_7 := Sbp2PnpDeviceControl(po, pirp);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_294 := status_7;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int)
{
  var vslice_dummy_var_21: int;

  anon0:
    call {:si_unique_call 191} vslice_dummy_var_21 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp_1: int)
{
  var {:pointer} pirp_1: int;
  var vslice_dummy_var_22: int;

  anon0:
    call {:si_unique_call 192} vslice_dummy_var_22 := __HAVOC_malloc(4);
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_300: int);
  free ensures {:va_keep} Tmp_300 == actual_Address;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_300: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    record := Address;
    Tmp_300 := record;
    return;
}



procedure {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int)
{
  var vslice_dummy_var_23: int;

  anon0:
    call {:si_unique_call 193} vslice_dummy_var_23 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_24: int;

  anon0:
    call {:si_unique_call 194} vslice_dummy_var_24 := __HAVOC_malloc(4);
    p := actual_p;
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_306: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} Tmp_306 == -1073741824 || Tmp_306 == -1073741771 || Tmp_306 == -1073741670 || Tmp_306 == -1073741823 || Tmp_306 == 0 || Tmp_306 == -1073741819 || Tmp_306 == 2 || Tmp_306 == -1073741790;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_306: int)
{
  var {:scalar} status_8: int;
  var {:pointer} p1: int;
  var {:pointer} p2: int;

  anon0:
    p1 := actual_p1;
    p2 := actual_p2;
    status_8 := 0;
    call {:si_unique_call 195} sdv_stub_add_begin();
    call {:si_unique_call 196} status_8 := Sbp2AddDevice(p1, p2);
    call {:si_unique_call 197} sdv_stub_add_end();
    Tmp_306 := status_8;
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_308: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_308 == 1 || Tmp_308 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_308: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 198} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_308 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_308 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_310: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_310: int)
{
  var {:scalar} x: int;
  var {:pointer} sdv_112: int;

  anon0:
    call {:si_unique_call 199} sdv_112 := __HAVOC_malloc(1);
    x := sdv_112;
    Tmp_310 := x;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int)
{
  var vslice_dummy_var_25: int;

  anon0:
    call {:si_unique_call 200} vslice_dummy_var_25 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExInitializeNPagedLookasideList"} {:osmodel} ExInitializeNPagedLookasideList(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExInitializeNPagedLookasideList"} {:osmodel} ExInitializeNPagedLookasideList(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag: int, actual_Depth: int)
{
  var vslice_dummy_var_26: int;

  anon0:
    call {:si_unique_call 201} vslice_dummy_var_26 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_316: int);
  free ensures {:va_keep} Tmp_316 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_316: int)
{

  anon0:
    Tmp_316 := 0;
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_2: int) returns (Tmp_318: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_2: int) returns (Tmp_318: int)
{
  var {:pointer} pirp_2: int;

  anon0:
    pirp_2 := actual_pirp_2;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_2 == sdv_harnessIrp;
    Tmp_318 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_2 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_2 == sdv_other_harnessIrp;
    Tmp_318 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_2 != sdv_other_harnessIrp;
    Tmp_318 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_320: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_320: int)
{
  var {:pointer} sdv_114: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_320 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 202} sdv_114 := __HAVOC_malloc(1);
    Tmp_320 := sdv_114;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_1: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_27: int;

  anon0:
    call {:si_unique_call 203} vslice_dummy_var_27 := __HAVOC_malloc(4);
    Dpc_1 := actual_Dpc_1;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_1 != 0;
    assume Dpc_1 > 0;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag_1: int)
{
  var vslice_dummy_var_28: int;

  anon0:
    call {:si_unique_call 204} vslice_dummy_var_28 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject: int) returns (Tmp_326: int);
  free ensures {:va_keep} Tmp_326 == -1073741824 || Tmp_326 == -1073741771 || Tmp_326 == -1073741670 || Tmp_326 == -1073741823 || Tmp_326 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject: int) returns (Tmp_326: int)
{
  var {:pointer} DeviceObject: int;

  anon0:
    DeviceObject := actual_DeviceObject;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_326 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_326 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_326 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_326 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    goto L21;

  L21:
    Tmp_326 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    goto L21;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_29: int;

  anon0:
    call {:si_unique_call 205} vslice_dummy_var_29 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int)
{
  var vslice_dummy_var_30: int;

  anon0:
    call {:si_unique_call 206} vslice_dummy_var_30 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int)
{
  var vslice_dummy_var_31: int;

  anon0:
    call {:si_unique_call 207} vslice_dummy_var_31 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int)
{
  var vslice_dummy_var_32: int;

  anon0:
    call {:si_unique_call 208} vslice_dummy_var_32 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_336: int);
  free ensures {:va_keep} Tmp_336 == 0 || Tmp_336 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_336: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_336 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_336 := -1073741823;
    goto L1;
}



procedure {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int)
{
  var vslice_dummy_var_33: int;

  anon0:
    call {:si_unique_call 209} vslice_dummy_var_33 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int)
{
  var {:pointer} pirp_4: int;
  var vslice_dummy_var_34: int;

  anon0:
    call {:si_unique_call 210} vslice_dummy_var_34 := __HAVOC_malloc(4);
    pirp_4 := actual_pirp_4;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_342: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_342: int)
{
  var {:pointer} sdv_119: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_342 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 211} sdv_119 := __HAVOC_malloc(1);
    Tmp_342 := sdv_119;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, SLAM_guard_O_0, t, device, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} t == 1 || t == old(t);
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} Tmp_345: int;
  var {:scalar} u_1: int;
  var {:scalar} Tmp_347: int;
  var {:scalar} status_9: int;
  var vslice_dummy_var_35: int;

  anon0:
    call {:si_unique_call 212} vslice_dummy_var_35 := __HAVOC_malloc(4);
    call {:si_unique_call 213} u_1 := __HAVOC_malloc(12);
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    call {:si_unique_call 214} status_9 := DriverEntry(sdv_driver_object, u_1);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_9 < 0;
    Tmp_345 := 0;
    goto L72;

  L72:
    assume Tmp_345 != 0;
    call {:si_unique_call 215} status_9 := sdv_RunAddDevice(sdv_driver_object, sdv_p_devobj_pdo);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_9 < 0;
    Tmp_347 := 0;
    goto L82;

  L82:
    assume Tmp_347 != 0;
    call {:si_unique_call 216} sdv_stub_driver_init();
    call {:si_unique_call 217} status_9 := sdv_RunSurpriseRemoveDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    SLAM_guard_O_0 := sdv_irp;
    assume SLAM_guard_O_0 != 0;
    assume SLAM_guard_O_0 != SLAM_guard_O_0_init;
    call {:si_unique_call 218} SLIC_sdv_RunRemoveDevice_entry(0, sdv_irp);
    call {:si_unique_call 219} status_9 := sdv_RunRemoveDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume sdv_irp == SLAM_guard_O_0;
    assume SLAM_guard_O_0 != SLAM_guard_O_0_init;
    call {:si_unique_call 220} SLIC_sdv_RunRemoveDevice_exit(strConst__li2bpl1);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume !(sdv_irp == SLAM_guard_O_0 && SLAM_guard_O_0 != SLAM_guard_O_0_init);
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} 0 <= status_9;
    Tmp_347 := 1;
    goto L82;

  anon13_Then:
    assume {:partition} 0 <= status_9;
    Tmp_345 := 1;
    goto L72;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_348: int);
  free ensures {:va_keep} Tmp_348 == 0 || Tmp_348 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_348: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_348 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_348 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_350: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_350: int)
{
  var {:pointer} sdv_127: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 221} sdv_127 := __HAVOC_malloc(1);
    Tmp_350 := sdv_127;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_350 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_352: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_352: int)
{
  var {:pointer} x_1: int;
  var {:pointer} sdv_128: int;

  anon0:
    call {:si_unique_call 222} sdv_128 := __HAVOC_malloc(1);
    x_1 := sdv_128;
    Tmp_352 := x_1;
    return;
}



procedure {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_1: int)
{
  var {:scalar} new: int;
  var {:pointer} p_1: int;
  var vslice_dummy_var_36: int;

  anon0:
    call {:si_unique_call 223} vslice_dummy_var_36 := __HAVOC_malloc(4);
    new := actual_new;
    p_1 := actual_p_1;
    assume {:nonnull} p_1 != 0;
    assume p_1 > 0;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_356: int);
  free ensures {:va_keep} Tmp_356 == 1 || Tmp_356 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_356: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_356 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_356 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_37: int;

  anon0:
    call {:si_unique_call 224} vslice_dummy_var_37 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_5: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_38: int;

  anon0:
    call {:si_unique_call 225} vslice_dummy_var_38 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    CompletionRoutine := actual_CompletionRoutine;
    Context := actual_Context;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 226} irpSp := sdv_IoGetNextIrpStackLocation(pirp_5);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 227} vslice_dummy_var_39 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin()
{
  var vslice_dummy_var_40: int;

  anon0:
    call {:si_unique_call 228} vslice_dummy_var_40 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_366: int);
  free ensures {:va_keep} Tmp_366 == 1 || Tmp_366 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_366: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_366 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_366 := 0;
    goto L1;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_368: int);
  free ensures {:va_keep} Tmp_368 == 258 || Tmp_368 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_368: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_368 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_368 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_368 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_1: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_1: int)
{
  var {:pointer} DeviceObject_1: int;
  var vslice_dummy_var_41: int;

  anon0:
    call {:si_unique_call 229} vslice_dummy_var_41 := __HAVOC_malloc(4);
    DeviceObject_1 := actual_DeviceObject_1;
    call {:si_unique_call 230} SLIC_IoDeleteDevice_entry(0, DeviceObject_1);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_372: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_372: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_372 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_376: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_376: int)
{
  var {:pointer} pirp_6: int;

  anon0:
    pirp_6 := actual_pirp_6;
    assume {:nonnull} pirp_6 != 0;
    assume pirp_6 > 0;
    havoc Tmp_376;
    return;
}



procedure {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_2: int, actual_n: int, actual_a: int, actual_r: int, actual_s_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_2: int, actual_n: int, actual_a: int, actual_r: int, actual_s_1: int)
{
  var vslice_dummy_var_42: int;

  anon0:
    call {:si_unique_call 231} vslice_dummy_var_42 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoIsWdmVersionAvailable"} {:osmodel} IoIsWdmVersionAvailable(actual_MajorVersion: int, actual_MinorVersion: int) returns (Tmp_380: int);
  free ensures {:va_keep} Tmp_380 == 0 || Tmp_380 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoIsWdmVersionAvailable"} {:osmodel} IoIsWdmVersionAvailable(actual_MajorVersion: int, actual_MinorVersion: int) returns (Tmp_380: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_380 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_380 := 1;
    goto L1;
}



procedure {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_382: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_382: int)
{

  anon0:
    havoc Tmp_382;
    return;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_2: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_1: int, actual_Irp: int) returns (Tmp_384: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_384 == -1073741584 || Tmp_384 == 259 || Tmp_384 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_2: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_1: int, actual_Irp: int) returns (Tmp_384: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} structPtr888PowerState: int;

  anon0:
    call {:si_unique_call 232} PowerState := __HAVOC_malloc(8);
    MinorFunction := actual_MinorFunction;
    structPtr888PowerState := actual_structPtr888PowerState;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_384 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_384 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_384 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_386: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_O_0, device, t, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} t == 1 || t == 0;
  free ensures {:va_keep} device == 1 || device == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_386: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_387: int;
  var {:scalar} Tmp_389: int;
  var boogieTmp: int;
  var BUS1394_CLASS_GUID__Loc: int;
  var WmiScsiAddressGuid__Loc: int;
  var GUID_DEVINTERFACE_STORAGEPORT__Loc: int;
  var GUID_DEVINTERFACE_FLOPPY__Loc: int;
  var GUID_DEVINTERFACE_WRITEONCEDISK__Loc: int;
  var GUID_DEVINTERFACE_TAPE__Loc: int;
  var GUID_DEVINTERFACE_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_CDCHANGER__Loc: int;
  var GUID_DEVINTERFACE_MEDIUMCHANGER__Loc: int;
  var ScsiRawInterfaceGuid__Loc: int;
  var GUID_DEVINTERFACE_PARTITION__Loc: int;
  var GUID_DEVINTERFACE_CDROM__Loc: int;
  var GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_DISK__Loc: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var GUID_BUS_TYPE_PCMCIA__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var SLAM_guard_O_0_init__Loc: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 233} BUS1394_CLASS_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume BUS1394_CLASS_GUID__Loc == BUS1394_CLASS_GUID;
    assume BUS1394_CLASS_GUID != 0;
    call {:si_unique_call 234} WmiScsiAddressGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WmiScsiAddressGuid__Loc == WmiScsiAddressGuid;
    assume WmiScsiAddressGuid != 0;
    call {:si_unique_call 235} GUID_DEVINTERFACE_STORAGEPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_STORAGEPORT__Loc == GUID_DEVINTERFACE_STORAGEPORT;
    assume GUID_DEVINTERFACE_STORAGEPORT != 0;
    call {:si_unique_call 236} GUID_DEVINTERFACE_FLOPPY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_FLOPPY__Loc == GUID_DEVINTERFACE_FLOPPY;
    assume GUID_DEVINTERFACE_FLOPPY != 0;
    call {:si_unique_call 237} GUID_DEVINTERFACE_WRITEONCEDISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_WRITEONCEDISK__Loc == GUID_DEVINTERFACE_WRITEONCEDISK;
    assume GUID_DEVINTERFACE_WRITEONCEDISK != 0;
    call {:si_unique_call 238} GUID_DEVINTERFACE_TAPE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_TAPE__Loc == GUID_DEVINTERFACE_TAPE;
    assume GUID_DEVINTERFACE_TAPE != 0;
    call {:si_unique_call 239} GUID_DEVINTERFACE_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_VOLUME__Loc == GUID_DEVINTERFACE_VOLUME;
    assume GUID_DEVINTERFACE_VOLUME != 0;
    call {:si_unique_call 240} GUID_DEVINTERFACE_CDCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDCHANGER__Loc == GUID_DEVINTERFACE_CDCHANGER;
    assume GUID_DEVINTERFACE_CDCHANGER != 0;
    call {:si_unique_call 241} GUID_DEVINTERFACE_MEDIUMCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_MEDIUMCHANGER__Loc == GUID_DEVINTERFACE_MEDIUMCHANGER;
    assume GUID_DEVINTERFACE_MEDIUMCHANGER != 0;
    call {:si_unique_call 242} ScsiRawInterfaceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume ScsiRawInterfaceGuid__Loc == ScsiRawInterfaceGuid;
    assume ScsiRawInterfaceGuid != 0;
    call {:si_unique_call 243} GUID_DEVINTERFACE_PARTITION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_PARTITION__Loc == GUID_DEVINTERFACE_PARTITION;
    assume GUID_DEVINTERFACE_PARTITION != 0;
    call {:si_unique_call 244} GUID_DEVINTERFACE_CDROM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDROM__Loc == GUID_DEVINTERFACE_CDROM;
    assume GUID_DEVINTERFACE_CDROM != 0;
    call {:si_unique_call 245} GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc == GUID_DEVINTERFACE_HIDDEN_VOLUME;
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME != 0;
    call {:si_unique_call 246} GUID_DEVINTERFACE_DISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_DISK__Loc == GUID_DEVINTERFACE_DISK;
    assume GUID_DEVINTERFACE_DISK != 0;
    call {:si_unique_call 247} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 248} GUID_BUS_TYPE_PCMCIA__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_PCMCIA__Loc == GUID_BUS_TYPE_PCMCIA;
    assume GUID_BUS_TYPE_PCMCIA != 0;
    call {:si_unique_call 249} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 250} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 251} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 252} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 253} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 254} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 255} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 256} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 257} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 258} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 259} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 260} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 261} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 262} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 263} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 264} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 265} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 266} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 267} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 268} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 269} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 270} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 271} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 272} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 273} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 274} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 275} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 276} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 277} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 278} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 279} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 280} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 281} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 282} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 283} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 284} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 285} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 286} SLAM_guard_O_0_init__Loc := __HAVOC_malloc_or_null(248);
    assume SLAM_guard_O_0_init__Loc == SLAM_guard_O_0_init;
    assume SLAM_guard_O_0_init != 0;
    call {:si_unique_call 287} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KiBugCheckData == boogieTmp;
    call {:si_unique_call 288} boogieTmp := __HAVOC_malloc_or_null(88);
    assume PortBugcheckData == boogieTmp;
    call {:si_unique_call 289} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 290} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 291} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 292} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 293} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 294} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 295} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 296} boogieTmp := __HAVOC_malloc_or_null(4);
    assume MmHighestUserAddress == boogieTmp;
    call {:si_unique_call 297} vslice_dummy_var_296 := __HAVOC_malloc(4);
    call {:si_unique_call 298} vslice_dummy_var_297 := __HAVOC_malloc(4);
    call {:si_unique_call 299} vslice_dummy_var_298 := __HAVOC_malloc(4);
    call {:si_unique_call 300} vslice_dummy_var_299 := __HAVOC_malloc(4);
    call {:si_unique_call 301} vslice_dummy_var_300 := __HAVOC_malloc(4);
    call {:si_unique_call 302} vslice_dummy_var_301 := __HAVOC_malloc(4);
    call {:si_unique_call 303} vslice_dummy_var_302 := __HAVOC_malloc(4);
    call {:si_unique_call 304} vslice_dummy_var_303 := __HAVOC_malloc(4);
    call {:si_unique_call 305} vslice_dummy_var_304 := __HAVOC_malloc(4);
    call {:si_unique_call 306} vslice_dummy_var_305 := __HAVOC_malloc(4);
    call {:si_unique_call 307} vslice_dummy_var_306 := __HAVOC_malloc(4);
    call {:si_unique_call 308} vslice_dummy_var_307 := __HAVOC_malloc(4);
    call {:si_unique_call 309} vslice_dummy_var_308 := __HAVOC_malloc(4);
    call {:si_unique_call 310} vslice_dummy_var_309 := __HAVOC_malloc(4);
    call {:si_unique_call 311} vslice_dummy_var_310 := __HAVOC_malloc(4);
    call {:si_unique_call 312} vslice_dummy_var_311 := __HAVOC_malloc(4);
    call {:si_unique_call 313} vslice_dummy_var_312 := __HAVOC_malloc(4);
    call {:si_unique_call 314} vslice_dummy_var_313 := __HAVOC_malloc(4);
    call {:si_unique_call 315} vslice_dummy_var_314 := __HAVOC_malloc(4);
    call {:si_unique_call 316} vslice_dummy_var_315 := __HAVOC_malloc(4);
    call {:si_unique_call 317} vslice_dummy_var_316 := __HAVOC_malloc(4);
    call {:si_unique_call 318} vslice_dummy_var_317 := __HAVOC_malloc(4);
    call {:si_unique_call 319} vslice_dummy_var_318 := __HAVOC_malloc(4);
    call {:si_unique_call 320} vslice_dummy_var_319 := __HAVOC_malloc(4);
    call {:si_unique_call 321} vslice_dummy_var_320 := __HAVOC_malloc(4);
    call {:si_unique_call 322} vslice_dummy_var_321 := __HAVOC_malloc(4);
    call {:si_unique_call 323} vslice_dummy_var_322 := __HAVOC_malloc(4);
    call {:si_unique_call 324} vslice_dummy_var_323 := __HAVOC_malloc(4);
    call {:si_unique_call 325} vslice_dummy_var_324 := __HAVOC_malloc(4);
    call {:si_unique_call 326} vslice_dummy_var_325 := __HAVOC_malloc(4);
    call {:si_unique_call 327} vslice_dummy_var_326 := __HAVOC_malloc(4);
    call {:si_unique_call 328} vslice_dummy_var_327 := __HAVOC_malloc(4);
    call {:si_unique_call 329} vslice_dummy_var_328 := __HAVOC_malloc(4);
    call {:si_unique_call 330} vslice_dummy_var_329 := __HAVOC_malloc(4);
    call {:si_unique_call 331} vslice_dummy_var_330 := __HAVOC_malloc(288);
    call {:si_unique_call 332} vslice_dummy_var_331 := __HAVOC_malloc(4);
    call {:si_unique_call 333} vslice_dummy_var_332 := __HAVOC_malloc(4);
    call {:si_unique_call 334} vslice_dummy_var_333 := __HAVOC_malloc(4);
    call {:si_unique_call 335} vslice_dummy_var_334 := __HAVOC_malloc(4);
    call {:si_unique_call 336} vslice_dummy_var_335 := __HAVOC_malloc(4);
    call {:si_unique_call 337} vslice_dummy_var_336 := __HAVOC_malloc(4);
    call {:si_unique_call 338} vslice_dummy_var_337 := __HAVOC_malloc(4);
    call {:si_unique_call 339} vslice_dummy_var_338 := __HAVOC_malloc(4);
    call {:si_unique_call 340} vslice_dummy_var_339 := __HAVOC_malloc(4);
    call {:si_unique_call 341} vslice_dummy_var_340 := __HAVOC_malloc(4);
    call {:si_unique_call 342} vslice_dummy_var_341 := __HAVOC_malloc(4);
    call {:si_unique_call 343} vslice_dummy_var_342 := __HAVOC_malloc(4);
    call {:si_unique_call 344} vslice_dummy_var_343 := __HAVOC_malloc(4);
    call {:si_unique_call 345} vslice_dummy_var_344 := __HAVOC_malloc(4);
    call {:si_unique_call 346} vslice_dummy_var_345 := __HAVOC_malloc(4);
    call {:si_unique_call 347} vslice_dummy_var_346 := __HAVOC_malloc(4);
    call {:si_unique_call 348} vslice_dummy_var_347 := __HAVOC_malloc(4);
    call {:si_unique_call 349} vslice_dummy_var_348 := __HAVOC_malloc(4);
    call {:si_unique_call 350} vslice_dummy_var_349 := __HAVOC_malloc(4);
    call {:si_unique_call 351} vslice_dummy_var_350 := __HAVOC_malloc(4);
    call {:si_unique_call 352} vslice_dummy_var_351 := __HAVOC_malloc(4);
    call {:si_unique_call 353} vslice_dummy_var_352 := __HAVOC_malloc(4);
    call {:si_unique_call 354} vslice_dummy_var_353 := __HAVOC_malloc(4);
    call {:si_unique_call 355} vslice_dummy_var_354 := __HAVOC_malloc(4);
    call {:si_unique_call 356} vslice_dummy_var_355 := __HAVOC_malloc(4);
    call {:si_unique_call 357} vslice_dummy_var_356 := __HAVOC_malloc(4);
    call {:si_unique_call 358} vslice_dummy_var_357 := __HAVOC_malloc(4);
    call {:si_unique_call 359} vslice_dummy_var_358 := __HAVOC_malloc(4);
    call {:si_unique_call 360} vslice_dummy_var_359 := __HAVOC_malloc(4);
    call {:si_unique_call 361} vslice_dummy_var_360 := __HAVOC_malloc(4);
    call {:si_unique_call 362} vslice_dummy_var_361 := __HAVOC_malloc(4);
    call {:si_unique_call 363} vslice_dummy_var_362 := __HAVOC_malloc(4);
    call {:si_unique_call 364} vslice_dummy_var_363 := __HAVOC_malloc(4);
    call {:si_unique_call 365} vslice_dummy_var_364 := __HAVOC_malloc(4);
    call {:si_unique_call 366} vslice_dummy_var_365 := __HAVOC_malloc(4);
    call {:si_unique_call 367} vslice_dummy_var_366 := __HAVOC_malloc(4);
    call {:si_unique_call 368} vslice_dummy_var_367 := __HAVOC_malloc(4);
    call {:si_unique_call 369} vslice_dummy_var_368 := __HAVOC_malloc(4);
    call {:si_unique_call 370} vslice_dummy_var_369 := __HAVOC_malloc(4);
    call {:si_unique_call 371} vslice_dummy_var_370 := __HAVOC_malloc(4);
    call {:si_unique_call 372} vslice_dummy_var_371 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 373} corralExtraInit();
    call {:si_unique_call 374} corralExplainErrorInit();
    call {:si_unique_call 375} _sdv_init17();
    call {:si_unique_call 376} _sdv_init1();
    call {:si_unique_call 377} _sdv_init4();
    call {:si_unique_call 378} _sdv_init5();
    call {:si_unique_call 379} _sdv_init3();
    call {:si_unique_call 380} _sdv_init14();
    call {:si_unique_call 381} _sdv_init6();
    call {:si_unique_call 382} _sdv_init15();
    call {:si_unique_call 383} _sdv_init10();
    call {:si_unique_call 384} _sdv_init11();
    call {:si_unique_call 385} _sdv_init9();
    call {:si_unique_call 386} _sdv_init12();
    call {:si_unique_call 387} _sdv_init13();
    call {:si_unique_call 388} _sdv_init7();
    call {:si_unique_call 389} _sdv_init8();
    call {:si_unique_call 390} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_389 := 0;
    goto L40;

  L40:
    assume Tmp_389 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_387 := 0;
    goto L44;

  L44:
    assume Tmp_387 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 391} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L38;

  L38:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L38;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_387 := 1;
    goto L44;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_389 := 1;
    goto L40;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_390: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_390: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_390;
    return;
}



procedure {:origName "sdv_RunRemoveDevice"} {:osmodel} sdv_RunRemoveDevice(actual_po_1: int, actual_pirp_7: int) returns (Tmp_392: int);
  modifies alloc, device, yogi_error;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} old(device) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_O_0) == old(SLAM_guard_O_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunRemoveDevice"} {:osmodel} sdv_RunRemoveDevice(actual_po_1: int, actual_pirp_7: int) returns (Tmp_392: int)
{
  var {:pointer} ps_1: int;
  var {:scalar} status_11: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_7: int;

  anon0:
    po_1 := actual_po_1;
    pirp_7 := actual_pirp_7;
    status_11 := 0;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    havoc ps_1;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 392} sdv_stub_dispatch_begin();
    call {:si_unique_call 393} sdv_SetStatus(pirp_7);
    call {:si_unique_call 394} status_11 := Sbp2PnpDeviceControl(po_1, pirp_7);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 395} sdv_stub_dispatch_end(status_11, 0);
    Tmp_392 := status_11;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end()
{
  var vslice_dummy_var_43: int;

  anon0:
    call {:si_unique_call 396} vslice_dummy_var_43 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length_1: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_1: int) returns (Tmp_396: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length_1: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_1: int) returns (Tmp_396: int)
{
  var {:pointer} sdv_137: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 397} sdv_137 := __HAVOC_malloc(1);
    Tmp_396 := sdv_137;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_396 := 0;
    goto L1;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int)
{
  var {:pointer} DestinationString_1: int;
  var {:pointer} SourceString_1: int;
  var vslice_dummy_var_44: int;

  anon0:
    call {:si_unique_call 398} vslice_dummy_var_44 := __HAVOC_malloc(4);
    DestinationString_1 := actual_DestinationString_1;
    SourceString_1 := actual_SourceString_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString_1 != 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString_1 == 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString_1 != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString_1 == 0;
    goto L4;
}



procedure {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_400: int);
  free ensures {:va_keep} Tmp_400 == 0 || Tmp_400 == actual_TargetDevice_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_400: int)
{
  var {:pointer} TargetDevice_1: int;

  anon0:
    TargetDevice_1 := actual_TargetDevice_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} TargetDevice_1 == sdv_p_devobj_pdo;
    Tmp_400 := TargetDevice_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} TargetDevice_1 != sdv_p_devobj_pdo;
    Tmp_400 := 0;
    goto L1;
}



procedure {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_45: int;

  anon0:
    call {:si_unique_call 399} vslice_dummy_var_45 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeInitializeMutex"} {:osmodel} KeInitializeMutex(actual_Mutex_1: int, actual_Level: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeMutex"} {:osmodel} KeInitializeMutex(actual_Mutex_1: int, actual_Level: int)
{
  var vslice_dummy_var_46: int;

  anon0:
    call {:si_unique_call 400} vslice_dummy_var_46 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_3: int)
{
  var vslice_dummy_var_47: int;

  anon0:
    call {:si_unique_call 401} vslice_dummy_var_47 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int)
{
  var vslice_dummy_var_48: int;

  anon0:
    call {:si_unique_call 402} vslice_dummy_var_48 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_410: int);
  free ensures {:va_keep} Tmp_410 == 0 || Tmp_410 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_410: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_410 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_410 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_49: int;

  anon0:
    call {:si_unique_call 403} vslice_dummy_var_49 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int)
{
  var {:scalar} NewIrql: int;
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 404} vslice_dummy_var_50 := __HAVOC_malloc(4);
    NewIrql := actual_NewIrql;
    return;
}



procedure {:origName "_sdv_init15"} {:osmodel} _sdv_init15();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init15"} {:osmodel} _sdv_init15()
{
  var vslice_dummy_var_51: int;

  anon0:
    call {:si_unique_call 405} vslice_dummy_var_51 := __HAVOC_malloc(4);
    assume sdv_dpc_io_registered == 0;
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_start_irp_already_issued == 0;
    assume sdv_remove_irp_already_issued == 0;
    assume sdv_isr_routine == li2bplFunctionConstant798;
    assume sdv_ke_dpc == li2bplFunctionConstant800;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant803;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int)
{
  var vslice_dummy_var_52: int;

  anon0:
    call {:si_unique_call 406} vslice_dummy_var_52 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_1: int) returns (Tmp_420: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_1: int) returns (Tmp_420: int)
{
  var {:scalar} OldState_1: int;
  var {:pointer} Event_1: int;

  anon0:
    Event_1 := actual_Event_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    havoc OldState_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    Tmp_420 := OldState_1;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 407} vslice_dummy_var_53 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_8: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_8: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 408} vslice_dummy_var_54 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_426: int);
  free ensures {:va_keep} Tmp_426 == 0 || Tmp_426 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_426: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_426 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_426 := -1073741823;
    goto L1;
}



procedure {:origName "ZwCreateDirectoryObject"} {:osmodel} ZwCreateDirectoryObject(actual_DirectoryHandle: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_428: int);
  free ensures {:va_keep} Tmp_428 == -1073741819 || Tmp_428 == 2 || Tmp_428 == -1073741790 || Tmp_428 == -1073741823 || Tmp_428 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ZwCreateDirectoryObject"} {:osmodel} ZwCreateDirectoryObject(actual_DirectoryHandle: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_428: int)
{

  anon0:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_428 := -1073741819;
    goto L1;

  L1:
    return;

  anon10_Then:
    Tmp_428 := 2;
    goto L1;

  anon11_Then:
    Tmp_428 := -1073741790;
    goto L1;

  anon12_Then:
    Tmp_428 := -1073741823;
    goto L1;

  anon9_Then:
    Tmp_428 := 0;
    goto L1;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_4: int)
{
  var vslice_dummy_var_55: int;

  anon0:
    call {:si_unique_call 409} vslice_dummy_var_55 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_5: int, actual_ResultLength: int) returns (Tmp_432: int);
  free ensures {:va_keep} Tmp_432 == -1073741811 || Tmp_432 == -1073741823 || Tmp_432 == 0 || Tmp_432 == 5 || Tmp_432 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_5: int, actual_ResultLength: int) returns (Tmp_432: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_141: int;
  var {:scalar} Length_5: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_5 := actual_Length_5;
    ResultLength := actual_ResultLength;
    L := sdv_141;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_432 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_432 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_5;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_5 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_432 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_5 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_5;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_432 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_5 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_432 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_5;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_56: int;

  anon0:
    call {:si_unique_call 410} vslice_dummy_var_56 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_3: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State: int) returns (Tmp_436: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_3: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State: int) returns (Tmp_436: int)
{
  var {:pointer} r_1: int;
  var {:pointer} sdv_142: int;

  anon0:
    call {:si_unique_call 411} sdv_142 := __HAVOC_malloc(1);
    r_1 := sdv_142;
    Tmp_436 := r_1;
    return;
}



procedure {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_2: int) returns (Tmp_440: int);
  free ensures {:va_keep} Tmp_440 == -1073741823 || Tmp_440 == -1073741738 || Tmp_440 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_2: int) returns (Tmp_440: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_440 := -1073741823;
    goto L1;

  L1:
    return;

  anon5_Then:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_440 := -1073741738;
    goto L1;

  anon6_Then:
    Tmp_440 := 0;
    goto L1;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_442: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_442: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_442;
    return;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_57: int;

  anon0:
    call {:si_unique_call 412} vslice_dummy_var_57 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int)
{
  var vslice_dummy_var_58: int;

  anon0:
    call {:si_unique_call 413} vslice_dummy_var_58 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_448: int);
  free ensures {:va_keep} Tmp_448 == 1 || Tmp_448 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_448: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_448 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_448 := 0;
    goto L1;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_450: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_450: int)
{
  var {:pointer} irpSp_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 414} irpSp_1 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    Tmp_450 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_450 := 0;
    goto L1;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_4: int, actual_Irp_2: int) returns (Tmp_452: int);
  free ensures {:va_keep} Tmp_452 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_4: int, actual_Irp_2: int) returns (Tmp_452: int)
{
  var {:scalar} status_12: int;
  var {:pointer} Irp_2: int;

  anon0:
    Irp_2 := actual_Irp_2;
    status_12 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_2;
    goto L25;

  L25:
    Tmp_452 := status_12;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_2;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_2;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_2;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_2;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_2;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_2;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_2;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_2;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_2;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_2;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_2;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_2;
    goto L36;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_454: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_454: int)
{
  var {:scalar} p_4: int;

  anon0:
    Tmp_454 := p_4;
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type_2: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type_2: int, actual_State_1: int)
{
  var {:pointer} Event_2: int;
  var {:scalar} Type_2: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_59: int;

  anon0:
    call {:si_unique_call 415} vslice_dummy_var_59 := __HAVOC_malloc(4);
    Event_2 := actual_Event_2;
    Type_2 := actual_Type_2;
    State_1 := actual_State_1;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 416} vslice_dummy_var_60 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_5: int, actual_Irp_3: int) returns (Tmp_460: int);
  free ensures {:va_keep} Tmp_460 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_5: int, actual_Irp_3: int) returns (Tmp_460: int)
{
  var {:pointer} Irp_3: int;

  anon0:
    Irp_3 := actual_Irp_3;
    call {:si_unique_call 417} Tmp_460 := IofCallDriver(0, Irp_3);
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_9: int)
{
  var vslice_dummy_var_61: int;

  anon0:
    call {:si_unique_call 418} vslice_dummy_var_61 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int)
{
  var {:pointer} SpinLock_4: int;
  var vslice_dummy_var_62: int;

  anon0:
    call {:si_unique_call 419} vslice_dummy_var_62 := __HAVOC_malloc(4);
    SpinLock_4 := actual_SpinLock_4;
    assume {:nonnull} SpinLock_4 != 0;
    assume SpinLock_4 > 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_3: int) returns (Tmp_466: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_3: int) returns (Tmp_466: int)
{
  var {:pointer} sdv_151: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 420} sdv_151 := __HAVOC_malloc(NumberOfBytes);
    Tmp_466 := sdv_151;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_466 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_63: int;

  anon0:
    call {:si_unique_call 421} vslice_dummy_var_63 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_64: int;

  anon0:
    call {:si_unique_call 422} vslice_dummy_var_64 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_6: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_472: int);
  free ensures {:va_keep} Tmp_472 == -1073741811 || Tmp_472 == -1073741808 || Tmp_472 == -1073741823 || Tmp_472 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_6: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_472: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_472 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_472 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_472 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_472 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_474: int);
  free ensures {:va_keep} Tmp_474 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_474: int)
{

  anon0:
    Tmp_474 := 0;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_476: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_476: int)
{
  var {:pointer} sdv_154: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 423} sdv_154 := __HAVOC_malloc(1);
    Tmp_476 := sdv_154;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_476 := 0;
    goto L1;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_65: int;

  anon0:
    call {:si_unique_call 424} vslice_dummy_var_65 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_480: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_480 == -1073741670 || Tmp_480 == -1073741823 || Tmp_480 == 259 || Tmp_480 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_480: int)
{
  var {:pointer} blockDescriptor: int;
  var {:pointer} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:pointer} Tmp_484: int;
  var {:pointer} Tmp_485: int;
  var {:scalar} pageCode: int;
  var {:pointer} cdb: int;
  var {:pointer} Tmp_486: int;
  var {:pointer} Tmp_487: int;
  var {:scalar} availLength: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_491: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} Tmp_494: int;
  var {:pointer} sdv_155: int;
  var {:pointer} Tmp_496: int;
  var {:pointer} Tmp_497: int;
  var {:pointer} Tmp_499: int;
  var {:pointer} Tmp_500: int;
  var {:pointer} Tmp_501: int;
  var {:scalar} Tmp_502: int;
  var {:pointer} Tmp_503: int;
  var {:pointer} cdbRbc: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:pointer} Tmp_508: int;
  var {:pointer} Tmp_509: int;
  var {:pointer} Tmp_510: int;
  var {:pointer} Tmp_511: int;
  var {:pointer} Tmp_512: int;
  var {:scalar} Tmp_515: int;
  var {:pointer} sdv_156: int;
  var {:pointer} Tmp_516: int;
  var {:scalar} modeHeaderLength: int;
  var {:pointer} Tmp_517: int;
  var {:pointer} Tmp_518: int;
  var {:pointer} Tmp_519: int;
  var {:pointer} Tmp_520: int;
  var {:pointer} Tmp_521: int;
  var {:scalar} Tmp_522: int;
  var {:pointer} Tmp_523: int;
  var {:pointer} Tmp_525: int;
  var {:pointer} Tmp_526: int;
  var {:pointer} Tmp_527: int;
  var {:pointer} modeHeader: int;
  var {:pointer} Tmp_529: int;
  var {:pointer} Tmp_530: int;
  var {:pointer} Tmp_531: int;
  var {:pointer} Tmp_532: int;
  var {:pointer} cachePage: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_534: int;
  var {:scalar} Tmp_535: int;
  var {:pointer} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Tmp_539: int;
  var {:scalar} wcd: int;
  var {:pointer} Tmp_540: int;
  var {:pointer} Srb: int;
  var {:pointer} OriginalSrb: int;
  var {:pointer} RbcHeaderAndPage: int;
  var {:scalar} OutgoingRequest: int;
  var {:scalar} RemovableMedia: int;
  var {:scalar} SetCacheHack: int;
  var boogieTmp: int;

  anon0:
    Srb := actual_Srb;
    OriginalSrb := actual_OriginalSrb;
    RbcHeaderAndPage := actual_RbcHeaderAndPage;
    OutgoingRequest := actual_OutgoingRequest;
    RemovableMedia := actual_RemovableMedia;
    SetCacheHack := actual_SetCacheHack;
    call {:si_unique_call 425} Tmp_481 := __HAVOC_malloc(12);
    call {:si_unique_call 426} Tmp_482 := __HAVOC_malloc(12);
    call {:si_unique_call 427} Tmp_485 := __HAVOC_malloc(12);
    call {:si_unique_call 428} Tmp_489 := __HAVOC_malloc(12);
    call {:si_unique_call 429} Tmp_496 := __HAVOC_malloc(64);
    call {:si_unique_call 430} Tmp_500 := __HAVOC_malloc(12);
    call {:si_unique_call 431} Tmp_501 := __HAVOC_malloc(20);
    call {:si_unique_call 432} Tmp_503 := __HAVOC_malloc(20);
    call {:si_unique_call 433} Tmp_512 := __HAVOC_malloc(64);
    call {:si_unique_call 434} Tmp_520 := __HAVOC_malloc(8);
    call {:si_unique_call 435} Tmp_523 := __HAVOC_malloc(64);
    call {:si_unique_call 436} Tmp_525 := __HAVOC_malloc(12);
    call {:si_unique_call 437} Tmp_526 := __HAVOC_malloc(8);
    call {:si_unique_call 438} Tmp_529 := __HAVOC_malloc(12);
    call {:si_unique_call 439} Tmp_530 := __HAVOC_malloc(64);
    call {:si_unique_call 440} Tmp_538 := __HAVOC_malloc(8);
    call {:si_unique_call 441} Tmp_539 := __HAVOC_malloc(12);
    call {:si_unique_call 442} Tmp_540 := __HAVOC_malloc(8);
    modeHeader := 0;
    status_13 := 259;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} OutgoingRequest != 0;
    modeHeaderLength := 12;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdbRbc := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdb := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L27;

  L27:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L21;

  L21:
    Tmp_480 := status_13;
    goto L1;

  L1:
    return;

  anon78_Then:
    goto L21;

  anon77_Then:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L27;

  anon94_Then:
    goto L21;

  anon95_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} RemovableMedia != 0;
    goto L33;

  L33:
    call {:si_unique_call 443} sdv_155 := ExAllocatePoolWithTag(0, 64, 846226035);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_534;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_507;
    assume {:nonnull} Tmp_507 != 0;
    assume Tmp_507 > 0;
    assume {:nonnull} Tmp_534 != 0;
    assume Tmp_534 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    call {:si_unique_call 444} sdv_156 := IoAllocateMdl(0, 17, 0, 0, 0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_537;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_517;
    assume {:nonnull} Tmp_517 != 0;
    assume Tmp_517 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_519;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto L41;

  L41:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_535;
    goto L61;

  L61:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_491;
    assume {:nonnull} Tmp_491 != 0;
    assume Tmp_491 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_516;
    assume {:nonnull} Tmp_516 != 0;
    assume Tmp_516 > 0;
    havoc Tmp_515;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    call {:si_unique_call 445} sdv_RtlCopyMemory(0, 0, Tmp_515);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L21;

  anon81_Then:
    Tmp_535 := 16;
    goto L61;

  anon105_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_508;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_484;
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    call {:si_unique_call 446} sdv_ExFreePool(0);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    Tmp_480 := -1073741670;
    goto L1;

  anon104_Then:
    goto L41;

  anon103_Then:
    Tmp_480 := -1073741670;
    goto L1;

  anon79_Then:
    assume {:partition} RemovableMedia == 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 447} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 448} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_481;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_538;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_538 != 0;
    assume Tmp_538 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_539;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_526;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Tmp_539 != 0;
    assume Tmp_539 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_482;
    assume {:nonnull} Tmp_482 != 0;
    assume Tmp_482 > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_501;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_529;
    call {:si_unique_call 449} sdv_RtlCopyMemory(0, 0, 3);
    status_13 := 0;
    goto L21;

  anon80_Then:
    goto L33;

  anon76_Then:
    goto L21;

  anon98_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc cachePage;
    cachePage := cachePage + modeHeaderLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    havoc pageCode;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} pageCode == 8;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    wcd := 0;
    goto L233;

  L233:
    goto L95;

  L95:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    call {:si_unique_call 450} sdv_RtlCopyMemory(0, 0, 17);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} SetCacheHack != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    havoc Tmp_522;
    goto L107;

  L107:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L108;

  L108:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} pageCode == 8;
    Tmp_532 := modeHeader;
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    goto L21;

  anon102_Then:
    assume {:partition} pageCode != 8;
    goto L21;

  anon83_Then:
    Tmp_522 := 17;
    goto L107;

  anon101_Then:
    assume {:partition} SetCacheHack == 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L108;

  anon82_Then:
    wcd := 1;
    goto L233;

  anon100_Then:
    assume {:partition} pageCode != 8;
    goto L95;

  anon99_Then:
    goto L21;

  anon97_Then:
    assume {:partition} OutgoingRequest == 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_518;
    assume {:nonnull} Tmp_518 != 0;
    assume Tmp_518 > 0;
    havoc Tmp_523;
    cdb := Tmp_523;
    goto L115;

  L115:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_509;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_490;
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    assume {:nonnull} Tmp_509 != 0;
    assume Tmp_509 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_483;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    call {:si_unique_call 451} IoFreeMdl(0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_527;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_487;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    assume {:nonnull} Tmp_527 != 0;
    assume Tmp_527 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_497;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_497 != 0;
    assume Tmp_497 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L120;

  L120:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_494;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    havoc Tmp_502;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_486;
    assume {:nonnull} Tmp_486 != 0;
    assume Tmp_486 > 0;
    havoc Tmp_496;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_530;
    call {:si_unique_call 452} sdv_RtlCopyMemory(0, 0, Tmp_502);
    goto L118;

  L118:
    Tmp_480 := -1073741823;
    goto L1;

  anon106_Then:
    goto L120;

  anon86_Then:
    goto L120;

  anon85_Then:
    goto L118;

  anon84_Then:
    modeHeaderLength := 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_505;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_510;
    assume {:nonnull} Tmp_505 != 0;
    assume Tmp_505 > 0;
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    call {:si_unique_call 453} IoFreeMdl(0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_521;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_506;
    assume {:nonnull} Tmp_506 != 0;
    assume Tmp_506 > 0;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_531;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_531 != 0;
    assume Tmp_531 > 0;
    goto L150;

  L150:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    havoc availLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto L154;

  L154:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} availLength >= 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto L157;

  L157:
    availLength := availLength - 12;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} modeHeader != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    cachePage := blockDescriptor;
    cachePage := cachePage + 8;
    goto L163;

  L163:
    call {:si_unique_call 454} sdv_RtlZeroMemory(0, 12);
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L344;

  L344:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L21;

  anon111_Then:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L344;

  anon110_Then:
    assume {:partition} modeHeader == 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc cachePage;
    goto L163;

  anon92_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto L157;

  anon93_Then:
    goto L21;

  anon91_Then:
    assume {:partition} 12 > availLength;
    goto L21;

  anon109_Then:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} availLength >= modeHeaderLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 455} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 456} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_500;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_520;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_525;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_540;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Tmp_540 != 0;
    assume Tmp_540 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_489;
    assume {:nonnull} Tmp_489 != 0;
    assume Tmp_489 > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_503;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_485;
    call {:si_unique_call 457} sdv_RtlCopyMemory(0, 0, 3);
    availLength := availLength - modeHeaderLength;
    goto L154;

  anon90_Then:
    assume {:partition} modeHeaderLength > availLength;
    goto L154;

  anon108_Then:
    call {:si_unique_call 458} sdv_RtlCopyMemory(0, 0, 17);
    goto L150;

  anon89_Then:
    Tmp_480 := -1073741823;
    goto L1;

  anon88_Then:
    goto L21;

  anon96_Then:
    goto L21;

  anon107_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_511;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    assume {:nonnull} Tmp_511 != 0;
    assume Tmp_511 > 0;
    goto L21;

  anon87_Then:
    goto L21;

  anon75_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_512;
    cdb := Tmp_512;
    goto L115;
}



procedure {:origName "_sdv_init14"} _sdv_init14();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init14"} _sdv_init14()
{
  var vslice_dummy_var_66: int;

  anon0:
    call {:si_unique_call 459} vslice_dummy_var_66 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_163: int, actual_sdv_164: int) returns (Tmp_547: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_163: int, actual_sdv_164: int) returns (Tmp_547: int)
{
  var {:scalar} sdv_165: int;

  anon0:
    call {:si_unique_call 460} sdv_165 := __HAVOC_malloc(4);
    call {:si_unique_call 461} Tmp_547 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    assume {:nonnull} sdv_165 != 0;
    assume sdv_165 > 0;
    return;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_184: int, actual_sdv_185: int) returns (Tmp_559: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_184: int, actual_sdv_185: int) returns (Tmp_559: int)
{
  var {:scalar} sdv_186: int;

  anon0:
    call {:si_unique_call 462} Tmp_559 := __HAVOC_malloc(4);
    call {:si_unique_call 463} sdv_186 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_559 != 0;
    assume Tmp_559 > 0;
    assume {:nonnull} sdv_186 != 0;
    assume sdv_186 > 0;
    return;
}



procedure {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension_6: int, actual_Context_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension_6: int, actual_Context_2: int)
{
  var {:pointer} Tmp_565: int;
  var {:pointer} Tmp_566: int;
  var {:pointer} Tmp_567: int;
  var {:pointer} Tmp_568: int;
  var {:pointer} Tmp_569: int;
  var {:scalar} routine: int;
  var {:pointer} Tmp_570: int;
  var {:scalar} cIrql_2: int;
  var {:pointer} Tmp_571: int;
  var {:pointer} packet_6: int;
  var {:pointer} DeviceExtension_6: int;
  var {:pointer} Context_2: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_40: int;

  anon0:
    call {:si_unique_call 464} packet_6 := __HAVOC_malloc(4);
    call {:si_unique_call 465} vslice_dummy_var_67 := __HAVOC_malloc(4);
    DeviceExtension_6 := actual_DeviceExtension_6;
    Context_2 := actual_Context_2;
    assume {:nonnull} Context_2 != 0;
    assume Context_2 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 466} AllocateIrpAndIrb(DeviceExtension_6, packet_6);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_569;
    assume {:nonnull} Tmp_569 != 0;
    assume Tmp_569 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_565;
    assume {:nonnull} Tmp_565 != 0;
    assume Tmp_565 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_570;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_568;
    assume {:nonnull} Tmp_568 != 0;
    assume Tmp_568 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_566;
    assume {:nonnull} Context_2 != 0;
    assume Context_2 > 0;
    assume {:nonnull} Tmp_566 != 0;
    assume Tmp_566 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_567;
    assume {:nonnull} Tmp_567 != 0;
    assume Tmp_567 > 0;
    call {:si_unique_call 467} Tmp_571 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_571 != 0;
    assume Tmp_571 > 0;
    call {:si_unique_call 468} sdv_KeRaiseIrql(2, Tmp_571);
    assume {:nonnull} Tmp_571 != 0;
    assume Tmp_571 > 0;
    havoc cIrql_2;
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    havoc routine;
    assume routine == 0;
    call {:si_unique_call 469} sdv_KeLowerIrql(cIrql_2);
    assume {:nonnull} Context_2 != 0;
    assume Context_2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 470} IoFreeMdl(0);
    assume {:nonnull} Context_2 != 0;
    assume Context_2 > 0;
    goto L33;

  L33:
    assume {:nonnull} Context_2 != 0;
    assume Context_2 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_40;
    call {:si_unique_call 471} DeAllocateIrpAndIrb(DeviceExtension_6, vslice_dummy_var_40);
    goto L1;

  L1:
    return;

  anon9_Then:
    goto L33;

  anon8_Then:
    goto L1;

  anon7_Then:
    goto L1;
}



procedure {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_573: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_573: int)
{
  var {:pointer} nextEntry: int;
  var {:pointer} queueEntry: int;
  var {:scalar} sdv_195: int;
  var {:pointer} sdv_196: int;
  var {:pointer} sdv_198: int;
  var {:pointer} DeviceQueue: int;
  var {:scalar} SortKey: int;
  var vslice_dummy_var_68: int;

  anon0:
    DeviceQueue := actual_DeviceQueue;
    SortKey := actual_SortKey;
    call {:si_unique_call 472} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 473} sdv_195 := sdv_IsListEmpty(0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_195 != 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    queueEntry := 0;
    goto L17;

  L17:
    call {:si_unique_call 474} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_573 := queueEntry;
    return;

  anon12_Then:
    assume {:partition} sdv_195 == 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    havoc nextEntry;
    goto L21;

  L21:
    call {:si_unique_call 475} nextEntry, queueEntry, sdv_196 := Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L21(nextEntry, queueEntry, sdv_196, SortKey);
    goto L21_last;

  L21_last:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 476} sdv_196 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_196;
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} nextEntry != 0;
    assume nextEntry > 0;
    havoc nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    goto L22;

  L22:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 477} vslice_dummy_var_68 := sdv_RemoveEntryList(0);
    goto L36;

  L36:
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto L17;

  anon14_Then:
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    call {:si_unique_call 478} nextEntry := RemoveHeadList(DeviceListHead__KDEVICE_QUEUE(DeviceQueue));
    call {:si_unique_call 479} sdv_198 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_198;
    goto L36;

  anon13_Then:
    goto L22;

  anon11_Then:
    queueEntry := 0;
    goto L17;
}



procedure {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_7: int, actual_Context_3: int) returns (Tmp_575: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_7: int, actual_Context_3: int) returns (Tmp_575: int)
{
  var {:scalar} sdv_201: int;
  var {:pointer} Tmp_576: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Context_3: int;
  var vslice_dummy_var_69: int;

  anon0:
    DeviceExtension_7 := actual_DeviceExtension_7;
    Context_3 := actual_Context_3;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Context_3 != 0;
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 480} Free1394DataMapping(DeviceExtension_7, Context_3);
    goto L7;

  L7:
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 481} sdv_ExFreePool(0);
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    goto L13;

  L13:
    call {:si_unique_call 482} vslice_dummy_var_69 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    call {:si_unique_call 483} Tmp_576 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    assume {:nonnull} Tmp_576 != 0;
    assume Tmp_576 > 0;
    call {:si_unique_call 484} sdv_201 := sdv_InterlockedDecrement(Tmp_576);
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    assume {:nonnull} Tmp_576 != 0;
    assume Tmp_576 > 0;
    Tmp_575 := sdv_201;
    goto L1;

  L1:
    return;

  anon12_Then:
    goto L13;

  anon11_Then:
    goto L7;

  anon10_Then:
    goto L4;

  L4:
    Tmp_575 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} Context_3 == 0;
    goto L4;
}



procedure {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_577: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_577 == -1073741811 || Tmp_577 == -1073741823 || Tmp_577 == 0 || Tmp_577 == 5 || Tmp_577 == -1073741789 || Tmp_577 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_577: int)
{
  var {:scalar} Tmp_578: int;
  var {:pointer} RootHandle: int;
  var {:scalar} Tmp_579: int;
  var {:scalar} ResultLength_1: int;
  var {:pointer} Tmp_580: int;
  var {:pointer} sdv_204: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} sdv_205: int;
  var {:scalar} KeyLength: int;
  var {:scalar} uniTempName: int;
  var {:pointer} KeyInfo: int;
  var {:pointer} Tmp_581: int;
  var {:pointer} DwData: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_71: int;

  anon0:
    call {:si_unique_call 485} uniTempName := __HAVOC_malloc(12);
    DwData := actual_DwData;
    ntStatus_1 := 0;
    RootHandle := 0;
    call {:si_unique_call 486} sdv_do_paged_code_check();
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 487} ntStatus_1 := IoOpenDeviceRegistryKey(0, 1, 131097, 0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_1 >= 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_579;
    call {:si_unique_call 488} sdv_204 := ExAllocatePoolWithTag(0, Tmp_579, 846226003);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    KeyLength := 20;
    call {:si_unique_call 489} sdv_205 := ExAllocatePoolWithTag(0, KeyLength, 846226003);
    KeyInfo := sdv_205;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} KeyInfo != 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_578;
    call {:si_unique_call 490} sdv_RtlZeroMemory(0, Tmp_578);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 491} vslice_dummy_var_71 := corral_nondet();
    call {:si_unique_call 492} Tmp_580 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    call {:si_unique_call 493} ntStatus_1 := ZwQueryValueKey(0, 0, 2, 0, KeyLength, Tmp_580);
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    havoc ResultLength_1;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} ntStatus_1 >= 0;
    assume {:nonnull} KeyInfo != 0;
    assume KeyInfo > 0;
    Tmp_581 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo);
    assume {:nonnull} DwData != 0;
    assume DwData > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    goto L50;

  L50:
    call {:si_unique_call 494} sdv_ExFreePool(0);
    goto L54;

  L54:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} RootHandle != 0;
    call {:si_unique_call 495} vslice_dummy_var_70 := ZwClose(0);
    goto L55;

  L55:
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 496} sdv_ExFreePool(0);
    goto L59;

  L59:
    Tmp_577 := ntStatus_1;
    return;

  anon16_Then:
    goto L59;

  anon15_Then:
    assume {:partition} RootHandle == 0;
    goto L55;

  anon14_Then:
    assume {:partition} 0 > ntStatus_1;
    goto L50;

  anon18_Then:
    assume {:partition} KeyInfo == 0;
    ntStatus_1 := -1073741670;
    goto L54;

  anon17_Then:
    ntStatus_1 := -1073741670;
    goto L54;

  anon13_Then:
    assume {:partition} 0 > ntStatus_1;
    ntStatus_1 := -1073741670;
    goto L54;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList(actual_DeviceExtension_8: int, actual_CompletionStatus: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "CleanupOrbList"} CleanupOrbList(actual_DeviceExtension_8: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_582: int;
  var {:pointer} Tmp_583: int;
  var {:pointer} lastItem: int;
  var {:pointer} nextItem: int;
  var {:scalar} sdv_208: int;
  var {:pointer} requestIrp: int;
  var {:pointer} Tmp_584: int;
  var {:pointer} Tmp_586: int;
  var {:scalar} oldIrql_1: int;
  var {:pointer} sdv_213: int;
  var {:pointer} sdv_214: int;
  var {:pointer} Tmp_587: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_588: int;
  var {:pointer} Tmp_589: int;
  var {:pointer} DeviceExtension_8: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;

  anon0:
    call {:si_unique_call 497} vslice_dummy_var_72 := __HAVOC_malloc(4);
    DeviceExtension_8 := actual_DeviceExtension_8;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 498} Tmp_589 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_589 != 0;
    assume Tmp_589 > 0;
    call {:si_unique_call 499} sdv_KeAcquireSpinLock(0, Tmp_589);
    assume {:nonnull} Tmp_589 != 0;
    assume Tmp_589 > 0;
    havoc oldIrql_1;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    havoc vslice_dummy_var_41;
    call {:si_unique_call 500} vslice_dummy_var_73 := FreeAsyncRequestContext(DeviceExtension_8, vslice_dummy_var_41);
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    goto L12;

  L12:
    call {:si_unique_call 501} sdv_208 := sdv_IsListEmpty(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_208 != 0;
    call {:si_unique_call 502} sdv_KeReleaseSpinLock(0, oldIrql_1);
    goto L1;

  L1:
    return;

  anon20_Then:
    assume {:partition} sdv_208 == 0;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    havoc vslice_dummy_var_42;
    call {:si_unique_call 503} sdv_213 := sdv_containing_record(vslice_dummy_var_42, 0);
    nextItem := sdv_213;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    havoc vslice_dummy_var_43;
    call {:si_unique_call 504} sdv_214 := sdv_containing_record(vslice_dummy_var_43, 0);
    lastItem := sdv_214;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    call {:si_unique_call 505} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_8));
    call {:si_unique_call 506} sdv_KeReleaseSpinLock(0, oldIrql_1);
    goto L38;

  L38:
    call {:si_unique_call 507} Tmp_582, Tmp_583, nextItem, requestIrp, Tmp_584, Tmp_586, Tmp_587, currentListItem_1, Tmp_588, vslice_dummy_var_74, vslice_dummy_var_75, vslice_dummy_var_76, vslice_dummy_var_77, vslice_dummy_var_78, vslice_dummy_var_79 := CleanupOrbList_loop_L38(Tmp_582, Tmp_583, lastItem, nextItem, requestIrp, Tmp_584, Tmp_586, Tmp_587, currentListItem_1, Tmp_588, DeviceExtension_8, CompletionStatus, vslice_dummy_var_74, vslice_dummy_var_75, vslice_dummy_var_76, vslice_dummy_var_77, vslice_dummy_var_78, vslice_dummy_var_79);
    goto L38_last;

  L38_last:
    currentListItem_1 := nextItem;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc nextItem;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 508} vslice_dummy_var_74 := FreeAsyncRequestContext(DeviceExtension_8, currentListItem_1);
    goto L45;

  L45:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} lastItem != currentListItem_1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} lastItem == currentListItem_1;
    goto L1;

  anon26_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 509} vslice_dummy_var_77 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    call {:si_unique_call 510} vslice_dummy_var_75 := KeCancelTimer(0);
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_587;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    havoc requestIrp;
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_586;
    assume {:nonnull} Tmp_586 != 0;
    assume Tmp_586 > 0;
    goto L62;

  L62:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_582;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    havoc vslice_dummy_var_44;
    call {:si_unique_call 511} Sbp2StartPacket(vslice_dummy_var_44, requestIrp, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_582));
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 512} vslice_dummy_var_78 := FreeAsyncRequestContext(DeviceExtension_8, currentListItem_1);
    goto L45;

  anon23_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 513} vslice_dummy_var_79 := FreeAsyncRequestContext(DeviceExtension_8, currentListItem_1);
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    call {:si_unique_call 514} vslice_dummy_var_76 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_8), 0);
    call {:si_unique_call 515} sdv_IoCompleteRequest(0, 0);
    goto L45;

  anon22_Then:
    goto L45;

  anon24_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_583;
    assume {:nonnull} Tmp_583 != 0;
    assume Tmp_583 > 0;
    goto L62;

  anon25_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_588;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    goto L62;

  anon27_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_584;
    assume {:nonnull} Tmp_584 != 0;
    assume Tmp_584 > 0;
    goto L62;

  anon19_Then:
    goto L12;
}



procedure {:origName "AllocateSingle1394Address"} AllocateSingle1394Address(actual_DeviceObject_8: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_4: int) returns (Tmp_590: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AllocateSingle1394Address"} AllocateSingle1394Address(actual_DeviceObject_8: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_4: int) returns (Tmp_590: int)
{
  var {:pointer} Tmp_591: int;
  var {:pointer} Tmp_592: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:pointer} Tmp_595: int;
  var {:pointer} Tmp_596: int;
  var {:pointer} Tmp_597: int;
  var {:pointer} Tmp_598: int;
  var {:pointer} Tmp_599: int;
  var {:pointer} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:pointer} Tmp_602: int;
  var {:pointer} Tmp_603: int;
  var {:pointer} Tmp_604: int;
  var {:pointer} Tmp_605: int;
  var {:pointer} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:scalar} status_15: int;
  var {:pointer} packet_7: int;
  var {:pointer} Tmp_608: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} Tmp_610: int;
  var {:pointer} Tmp_611: int;
  var {:pointer} Tmp_612: int;
  var {:pointer} DeviceObject_8: int;
  var {:pointer} Buffer: int;
  var {:scalar} Length_6: int;
  var {:scalar} AccessType: int;
  var {:pointer} Context_4: int;
  var boogieTmp: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_47: int;

  anon0:
    call {:si_unique_call 516} packet_7 := __HAVOC_malloc(4);
    DeviceObject_8 := actual_DeviceObject_8;
    Buffer := actual_Buffer;
    Length_6 := actual_Length_6;
    AccessType := actual_AccessType;
    Context_4 := actual_Context_4;
    assume {:nonnull} DeviceObject_8 != 0;
    assume DeviceObject_8 > 0;
    havoc deviceExtension_1;
    call {:si_unique_call 517} AllocateIrpAndIrb(deviceExtension_1, packet_7);
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_592;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_594;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_596;
    assume {:nonnull} Tmp_596 != 0;
    assume Tmp_596 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_593;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_597;
    assume {:nonnull} Tmp_597 != 0;
    assume Tmp_597 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_595;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_606;
    assume {:nonnull} Tmp_606 != 0;
    assume Tmp_606 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_610;
    assume {:nonnull} Tmp_610 != 0;
    assume Tmp_610 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_605;
    assume {:nonnull} Tmp_605 != 0;
    assume Tmp_605 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_601;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_591;
    assume {:nonnull} Tmp_591 != 0;
    assume Tmp_591 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_600;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_598;
    assume {:nonnull} Tmp_598 != 0;
    assume Tmp_598 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_611;
    assume {:nonnull} Tmp_611 != 0;
    assume Tmp_611 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_602;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    assume {:nonnull} Tmp_602 != 0;
    assume Tmp_602 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Buffer != 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_608;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    call {:si_unique_call 518} boogieTmp := IoAllocateMdl(0, Length_6, 0, 0, 0);
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_607;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    assume {:nonnull} Tmp_607 != 0;
    assume Tmp_607 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc vslice_dummy_var_45;
    call {:si_unique_call 519} status_15 := Sbp2SendRequest(deviceExtension_1, vslice_dummy_var_45, 2);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_15 >= 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_603;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    assume {:nonnull} Tmp_603 != 0;
    assume Tmp_603 > 0;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Buffer == 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_604;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    call {:si_unique_call 520} boogieTmp := sdv_MmGetMdlVirtualAddress(0);
    goto L48;

  L48:
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc vslice_dummy_var_46;
    call {:si_unique_call 521} DeAllocateIrpAndIrb(deviceExtension_1, vslice_dummy_var_46);
    Tmp_590 := status_15;
    goto L1;

  L1:
    return;

  anon15_Then:
    assume {:partition} Buffer != 0;
    goto L48;

  anon13_Then:
    assume {:partition} 0 > status_15;
    goto L48;

  anon12_Then:
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc vslice_dummy_var_47;
    call {:si_unique_call 522} DeAllocateIrpAndIrb(deviceExtension_1, vslice_dummy_var_47);
    Tmp_590 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:partition} Buffer == 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_599;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_612;
    assume {:nonnull} Tmp_612 != 0;
    assume Tmp_612 > 0;
    goto L43;

  anon11_Then:
    Tmp_590 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest(actual_DeviceExtension_9: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_613: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest(actual_DeviceExtension_9: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_613: int)
{
  var {:pointer} sdv_220: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_614: int;
  var {:pointer} pComplete: int;
  var {:pointer} sdv_222: int;
  var {:pointer} Tmp_615: int;
  var {:pointer} Tmp_616: int;
  var {:scalar} sdv_223: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:scalar} status_16: int;
  var {:pointer} Tmp_618: int;
  var {:pointer} Tmp_619: int;
  var {:pointer} DeviceExtension_9: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;

  anon0:
    DeviceExtension_9 := actual_DeviceExtension_9;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    originalTransferMode := TransferMode;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    requestContext := 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_616;
    assume {:nonnull} Tmp_616 != 0;
    assume Tmp_616 > 0;
    goto L12;

  L12:
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_619;
    assume {:nonnull} Tmp_619 != 0;
    assume Tmp_619 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_613 := -1073741823;
    goto L1;

  L1:
    return;

  anon41_Then:
    goto L18;

  L18:
    call {:si_unique_call 523} sdv_222 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_222;
    goto L24;

  L24:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} requestContext != 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 524} sdv_223 := sdv_KeGetCurrentIrql();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_223 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L27;

  L27:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L41;

  L41:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_48;
    call {:si_unique_call 525} nextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_48);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_49;
    call {:si_unique_call 526} sdv_IoSetCompletionRoutine(vslice_dummy_var_49, li2bplFunctionConstant337, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_50;
    havoc vslice_dummy_var_51;
    call {:si_unique_call 527} status_16 := sdv_IoCallDriver(vslice_dummy_var_50, vslice_dummy_var_51);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_16 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_618;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    goto L56;

  L56:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    goto L74;

  L74:
    call {:si_unique_call 528} Sbp2SendRequest_loop_L74(pComplete);
    goto L74_last;

  L74_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_615;
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    havoc status_16;
    goto L62;

  L62:
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    call {:si_unique_call 529} ExFreeToNPagedLookasideList(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_9), requestContext);
    goto L72;

  L72:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_614;
    assume {:nonnull} Tmp_614 != 0;
    assume Tmp_614 > 0;
    havoc Tmp_613;
    goto L1;

  anon38_Then:
    call {:si_unique_call 530} sdv_ExFreePool(0);
    goto L72;

  anon39_Then:
    goto anon39_Then_dummy;

  anon39_Then_dummy:
    assume false;
    return;

  anon36_Then:
    assume {:partition} TransferMode == 2;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_16 == 259;
    call {:si_unique_call 531} vslice_dummy_var_80 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L62;

  anon37_Then:
    assume {:partition} status_16 != 259;
    goto L62;

  anon35_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_613 := status_16;
    goto L1;

  anon34_Then:
    assume {:partition} status_16 != -1072562032;
    goto L56;

  anon42_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L41;

  anon33_Then:
    assume {:partition} 2 > sdv_223;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 532} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L27;

  anon32_Then:
    assume {:partition} TransferMode != 2;
    goto L27;

  anon31_Then:
    assume {:partition} requestContext == 0;
    Tmp_613 := -1073741670;
    goto L1;

  anon30_Then:
    goto L18;

  anon29_Then:
    call {:si_unique_call 533} sdv_220 := ExAllocatePoolWithTag(0, 32, -481140141);
    requestContext := sdv_220;
    goto L24;

  anon40_Then:
    assume {:partition} originalTransferMode == 2;
    goto L12;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_81: int;

  anon0:
    call {:si_unique_call 534} vslice_dummy_var_81 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_10: int, actual_Packet: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_10: int, actual_Packet: int)
{
  var {:pointer} pkt: int;
  var {:pointer} sdv_226: int;
  var {:pointer} sdv_227: int;
  var {:pointer} sdv_228: int;
  var {:pointer} Tmp_624: int;
  var {:pointer} DeviceExtension_10: int;
  var {:pointer} Packet: int;
  var boogieTmp: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_52: int;

  anon0:
    call {:si_unique_call 535} vslice_dummy_var_82 := __HAVOC_malloc(4);
    DeviceExtension_10 := actual_DeviceExtension_10;
    Packet := actual_Packet;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 536} sdv_226 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    goto L10;

  L10:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L14;

  L14:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc pkt;
    goto L1;

  L1:
    return;

  anon12_Then:
    call {:si_unique_call 537} sdv_227 := ExAllocatePoolWithTag(0, 24, 846226035);
    pkt := sdv_227;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} pkt != 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    call {:si_unique_call 538} sdv_228 := ExAllocatePoolWithTag(0, 344, 846226035);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc Tmp_624;
    assume {:nonnull} Tmp_624 != 0;
    assume Tmp_624 > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    havoc vslice_dummy_var_52;
    call {:si_unique_call 539} boogieTmp := IoAllocateIrp(vslice_dummy_var_52, 0);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    goto L14;

  anon13_Then:
    call {:si_unique_call 540} sdv_ExFreePool(0);
    call {:si_unique_call 541} sdv_ExFreePool(0);
    goto L1;

  anon15_Then:
    call {:si_unique_call 542} sdv_ExFreePool(0);
    goto L1;

  anon14_Then:
    assume {:partition} pkt == 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    goto L10;
}



procedure {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_625: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_625 == 1 || Tmp_625 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_625: int)
{
  var {:scalar} inserted: int;
  var {:pointer} nextEntry_1: int;
  var {:pointer} queueEntry_1: int;
  var {:pointer} sdv_230: int;
  var {:pointer} queueEntry2: int;
  var {:pointer} queue: int;
  var {:pointer} DeviceQueue_1: int;
  var {:pointer} DeviceQueueEntry: int;
  var {:scalar} SortKey_1: int;

  anon0:
    DeviceQueue_1 := actual_DeviceQueue_1;
    DeviceQueueEntry := actual_DeviceQueueEntry;
    SortKey_1 := actual_SortKey_1;
    queue := DeviceQueue_1;
    queueEntry_1 := DeviceQueueEntry;
    call {:si_unique_call 543} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    inserted := 1;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    havoc nextEntry_1;
    goto L18;

  L18:
    call {:si_unique_call 544} nextEntry_1, sdv_230, queueEntry2 := Sbp2InsertByKeyDeviceQueue_loop_L18(nextEntry_1, sdv_230, queueEntry2, SortKey_1);
    goto L18_last;

  L18_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 545} sdv_230 := sdv_containing_record(nextEntry_1, 0);
    queueEntry2 := sdv_230;
    assume {:nonnull} queueEntry2 != 0;
    assume queueEntry2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    goto L19;

  L19:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    call {:si_unique_call 546} InsertHeadList(nextEntry_1, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_1));
    goto L30;

  L30:
    call {:si_unique_call 547} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_625 := inserted;
    return;

  anon7_Then:
    goto L19;

  anon8_Then:
    assume {:nonnull} queue != 0;
    assume queue > 0;
    inserted := 0;
    goto L30;
}



procedure {:origName "FreeAddressRange"} FreeAddressRange(actual_DeviceExtension_11: int, actual_Context_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "FreeAddressRange"} FreeAddressRange(actual_DeviceExtension_11: int, actual_Context_5: int)
{
  var {:pointer} Tmp_628: int;
  var {:pointer} Tmp_629: int;
  var {:pointer} Tmp_630: int;
  var {:scalar} sdv_231: int;
  var {:pointer} Tmp_632: int;
  var {:pointer} Tmp_633: int;
  var {:pointer} Tmp_634: int;
  var {:scalar} sdv_232: int;
  var {:pointer} Tmp_635: int;
  var {:scalar} routine_1: int;
  var {:pointer} Tmp_636: int;
  var {:pointer} packet_8: int;
  var {:pointer} Tmp_637: int;
  var {:pointer} Tmp_638: int;
  var {:pointer} DeviceExtension_11: int;
  var {:pointer} Context_5: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 548} vslice_dummy_var_83 := __HAVOC_malloc(4);
    call {:si_unique_call 549} packet_8 := __HAVOC_malloc(4);
    DeviceExtension_11 := actual_DeviceExtension_11;
    Context_5 := actual_Context_5;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 550} AllocateIrpAndIrb(DeviceExtension_11, packet_8);
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_633;
    assume {:nonnull} Tmp_633 != 0;
    assume Tmp_633 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_635;
    assume {:nonnull} Tmp_635 != 0;
    assume Tmp_635 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_634;
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_638;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_638 != 0;
    assume Tmp_638 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_630;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Context_5 == CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_11);
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    goto L24;

  L24:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_628;
    assume {:nonnull} Tmp_628 != 0;
    assume Tmp_628 > 0;
    call {:si_unique_call 551} sdv_232 := sdv_KeGetCurrentIrql();
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_232 >= 2;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    havoc routine_1;
    assume routine_1 == 0;
    goto L40;

  L40:
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 552} IoFreeMdl(0);
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    goto L42;

  L42:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc vslice_dummy_var_53;
    call {:si_unique_call 553} DeAllocateIrpAndIrb(DeviceExtension_11, vslice_dummy_var_53);
    goto L1;

  L1:
    return;

  anon24_Then:
    goto L42;

  anon22_Then:
    goto L29;

  L29:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc vslice_dummy_var_54;
    call {:si_unique_call 554} vslice_dummy_var_84 := Sbp2SendRequest(DeviceExtension_11, vslice_dummy_var_54, 2);
    goto L40;

  anon21_Then:
    assume {:partition} 2 > sdv_232;
    goto L29;

  anon20_Then:
    assume {:partition} Context_5 != CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_11);
    call {:si_unique_call 555} sdv_231 := sdv_MmGetMdlByteCount(0);
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_629;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    havoc Tmp_637;
    assume {:nonnull} Tmp_637 != 0;
    assume Tmp_637 > 0;
    goto L24;

  anon23_Then:
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Context_5 == GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_11);
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_632;
    assume {:nonnull} Tmp_632 != 0;
    assume Tmp_632 > 0;
    havoc Tmp_636;
    assume {:nonnull} Tmp_636 != 0;
    assume Tmp_636 > 0;
    goto L24;

  anon19_Then:
    assume {:partition} Context_5 != GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_11);
    goto L24;

  anon18_Then:
    goto L1;

  anon17_Then:
    goto L1;
}



procedure {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_12: int, actual_Packet_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_12: int, actual_Packet_1: int)
{
  var {:pointer} DeviceExtension_12: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;

  anon0:
    call {:si_unique_call 556} vslice_dummy_var_85 := __HAVOC_malloc(4);
    DeviceExtension_12 := actual_DeviceExtension_12;
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 557} vslice_dummy_var_86 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 558} IoFreeIrp(0);
    call {:si_unique_call 559} sdv_ExFreePool(0);
    call {:si_unique_call 560} sdv_ExFreePool(0);
    goto L1;
}



procedure {:origName "AllocateAddressForStatus"} AllocateAddressForStatus(actual_DeviceObject_9: int, actual_Context_6: int, actual_StatusType: int) returns (Tmp_641: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AllocateAddressForStatus"} AllocateAddressForStatus(actual_DeviceObject_9: int, actual_Context_6: int, actual_StatusType: int) returns (Tmp_641: int)
{
  var {:pointer} Tmp_642: int;
  var {:pointer} Tmp_643: int;
  var {:pointer} Tmp_644: int;
  var {:pointer} Tmp_645: int;
  var {:pointer} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:pointer} Tmp_649: int;
  var {:pointer} Tmp_650: int;
  var {:pointer} Tmp_651: int;
  var {:pointer} Tmp_652: int;
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} Tmp_655: int;
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:pointer} Tmp_660: int;
  var {:pointer} Tmp_661: int;
  var {:scalar} status_18: int;
  var {:pointer} packet_9: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} Tmp_662: int;
  var {:pointer} Tmp_663: int;
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} DeviceObject_9: int;
  var {:pointer} Context_6: int;
  var {:scalar} StatusType: int;
  var boogieTmp: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;

  anon0:
    call {:si_unique_call 561} packet_9 := __HAVOC_malloc(4);
    DeviceObject_9 := actual_DeviceObject_9;
    Context_6 := actual_Context_6;
    StatusType := actual_StatusType;
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    havoc deviceExtension_2;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    call {:si_unique_call 562} AllocateIrpAndIrb(deviceExtension_2, packet_9);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_650;
    assume {:nonnull} Tmp_650 != 0;
    assume Tmp_650 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_642;
    assume {:nonnull} Tmp_642 != 0;
    assume Tmp_642 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_658;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_655;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_643;
    assume {:nonnull} Tmp_643 != 0;
    assume Tmp_643 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_660;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_656;
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_649;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_644;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_654;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_663;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusType != 2;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} StatusType != 4;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} StatusType == 8;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_659;
    assume {:nonnull} Tmp_659 != 0;
    assume Tmp_659 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_645;
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_661;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_652;
    assume {:nonnull} Tmp_652 != 0;
    assume Tmp_652 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto L27;

  L27:
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L55;

  L55:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_662;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_647;
    assume {:nonnull} Tmp_647 != 0;
    assume Tmp_647 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_648;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_648 != 0;
    assume Tmp_648 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_55;
    call {:si_unique_call 563} status_18 := Sbp2SendRequest(deviceExtension_2, vslice_dummy_var_55, 2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_18 >= 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_651;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_651 != 0;
    assume Tmp_651 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_56;
    call {:si_unique_call 564} DeAllocateIrpAndIrb(deviceExtension_2, vslice_dummy_var_56);
    Tmp_641 := status_18;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} 0 > status_18;
    goto L43;

  anon18_Then:
    goto L55;

  anon22_Then:
    assume {:partition} StatusType != 8;
    goto L27;

  anon23_Then:
    assume {:partition} StatusType == 4;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_657;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    call {:si_unique_call 565} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    status_18 := -1073741670;
    goto L43;

  anon19_Then:
    goto L27;

  anon24_Then:
    assume {:partition} StatusType == 2;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_665;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    call {:si_unique_call 566} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    status_18 := -1073741670;
    goto L43;

  anon20_Then:
    goto L27;

  anon17_Then:
    Tmp_641 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_10: int, actual_DeviceInfo: int) returns (Tmp_666: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_666 == -1073741811 || Tmp_666 == -1073741823 || Tmp_666 == 0 || Tmp_666 == 5 || Tmp_666 == -1073741789 || Tmp_666 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_10: int, actual_DeviceInfo: int) returns (Tmp_666: int)
{
  var {:pointer} Tmp_667: int;
  var {:pointer} Tmp_668: int;
  var {:scalar} devType: int;
  var {:scalar} fw: int;
  var {:pointer} Tmp_669: int;
  var {:pointer} Tmp_670: int;
  var {:scalar} sdv_240: int;
  var {:pointer} Tmp_671: int;
  var {:scalar} sdv_241: int;
  var {:scalar} sdv_242: int;
  var {:scalar} sdv_243: int;
  var {:scalar} uniTemp: int;
  var {:scalar} status_19: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} DeviceInfo: int;

  anon0:
    call {:si_unique_call 567} uniTemp := __HAVOC_malloc(12);
    DeviceObject_10 := actual_DeviceObject_10;
    DeviceInfo := actual_DeviceInfo;
    call {:si_unique_call 568} Tmp_667 := __HAVOC_malloc(48);
    call {:si_unique_call 569} Tmp_668 := __HAVOC_malloc(64);
    call {:si_unique_call 570} Tmp_669 := __HAVOC_malloc(20);
    call {:si_unique_call 571} Tmp_670 := __HAVOC_malloc(68);
    call {:si_unique_call 572} Tmp_671 := __HAVOC_malloc(68);
    status_19 := 0;
    call {:si_unique_call 573} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    Tmp_667 := strConst__li2bpl6;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    call {:si_unique_call 574} status_19 := Sbp2GetRegistryValue(DeviceObject_10, Tmp_667, LegacyFlags__DEVICE_INFORMATION(DeviceInfo));
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    havoc devType;
    call {:si_unique_call 575} fw := corral_nondet();
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} devType != 14;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} devType != 0;
    goto L26;

  L26:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L27;

  L27:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L29;

  L29:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L31;

  L31:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L33;

  L33:
    Tmp_666 := status_19;
    return;

  anon41_Then:
    goto L33;

  anon40_Then:
    goto L31;

  anon39_Then:
    goto L29;

  anon38_Then:
    goto L27;

  anon37_Then:
    assume {:partition} devType == 0;
    goto L21;

  L21:
    Tmp_670 := strConst__li2bpl2;
    call {:si_unique_call 576} RtlInitUnicodeString(uniTemp, Tmp_670);
    call {:si_unique_call 577} sdv_240 := corral_nondet();
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_240 != 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L39;

  L39:
    Tmp_668 := strConst__li2bpl3;
    call {:si_unique_call 578} RtlInitUnicodeString(uniTemp, Tmp_668);
    call {:si_unique_call 579} sdv_241 := corral_nondet();
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_241 != 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L47;

  L47:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_19 >= 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L49;

  L49:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} fw != 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} fw != 40;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} fw != 41;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} fw != 4097;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} fw != 41144;
    goto L56;

  L56:
    Tmp_669 := strConst__li2bpl4;
    call {:si_unique_call 580} RtlInitUnicodeString(uniTemp, Tmp_669);
    call {:si_unique_call 581} sdv_242 := corral_nondet();
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_242 != 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L26;

  anon48_Then:
    assume {:partition} sdv_242 == 0;
    Tmp_671 := strConst__li2bpl5;
    call {:si_unique_call 582} RtlInitUnicodeString(uniTemp, Tmp_671);
    call {:si_unique_call 583} sdv_243 := corral_nondet();
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_243 != 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L26;

  anon49_Then:
    assume {:partition} sdv_243 == 0;
    goto L26;

  anon50_Then:
    assume {:partition} fw == 41144;
    goto L54;

  L54:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L56;

  anon51_Then:
    assume {:partition} fw == 4097;
    goto L54;

  anon52_Then:
    assume {:partition} fw == 41;
    goto L54;

  anon53_Then:
    assume {:partition} fw == 40;
    goto L54;

  anon45_Then:
    assume {:partition} fw == 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L56;

  anon47_Then:
    goto L54;

  anon46_Then:
    goto L26;

  anon44_Then:
    assume {:partition} 0 > status_19;
    goto L49;

  anon43_Then:
    assume {:partition} sdv_241 == 0;
    goto L47;

  anon42_Then:
    assume {:partition} sdv_240 == 0;
    goto L39;

  anon54_Then:
    assume {:partition} devType == 14;
    goto L21;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket(actual_DeviceObject_11: int, actual_Irp_4: int, actual_Key_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket(actual_DeviceObject_11: int, actual_Irp_4: int, actual_Key_1: int)
{
  var {:pointer} Tmp_673: int;
  var {:pointer} nextEntry_2: int;
  var {:scalar} inserted_1: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} sdv_244: int;
  var {:pointer} queueEntry2_1: int;
  var {:scalar} oldIrql_2: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_4: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;

  anon0:
    call {:si_unique_call 584} vslice_dummy_var_87 := __HAVOC_malloc(4);
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_4 := actual_Irp_4;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_11 != 0;
    assume DeviceObject_11 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_11);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_4)));
    call {:si_unique_call 585} Tmp_673 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    call {:si_unique_call 586} sdv_KeRaiseIrql(2, Tmp_673);
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    havoc oldIrql_2;
    call {:si_unique_call 587} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L24;

  L24:
    call {:si_unique_call 588} nextEntry_2, sdv_244, queueEntry2_1 := Sbp2StartPacket_loop_L24(nextEntry_2, sdv_244, queueEntry2_1, Key_1);
    goto L24_last;

  L24_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 589} sdv_244 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_244;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    assume false;
    return;

  anon18_Then:
    goto L25;

  L25:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 590} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L36;

  L36:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 591} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} inserted_1 != 0;
    goto L44;

  L44:
    call {:si_unique_call 592} sdv_KeLowerIrql(oldIrql_2);
    return;

  anon16_Then:
    assume {:partition} inserted_1 == 0;
    call {:si_unique_call 593} Sbp2StartIo#1(DeviceObject_11, Irp_4);
    goto L44;

  anon15_Then:
    goto L25;

  anon17_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L36;

  anon13_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 594} vslice_dummy_var_88 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L36;

  anon14_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L36;
}



procedure {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_12: int, actual_Context_7: int, actual_Status: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_12: int, actual_Context_7: int, actual_Status: int)
{
  var {:pointer} sdv_245: int;
  var {:pointer} errorLogEntry: int;
  var {:pointer} Tmp_676: int;
  var {:pointer} Context_7: int;
  var {:scalar} Status: int;
  var vslice_dummy_var_89: int;

  anon0:
    call {:si_unique_call 595} vslice_dummy_var_89 := __HAVOC_malloc(4);
    Context_7 := actual_Context_7;
    Status := actual_Status;
    call {:si_unique_call 596} Tmp_676 := __HAVOC_malloc(4);
    call {:si_unique_call 597} sdv_245 := IoAllocateErrorLogEntry(0, 80);
    errorLogEntry := sdv_245;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} errorLogEntry != 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Status != -1073741811;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Status != -1073741808;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Status != -1073741670;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Status != -1073741666;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status != -1073741434;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Status != -1073741248;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Status == 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  L18:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Context_7 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_676;
    call {:si_unique_call 598} sdv_RtlCopyMemory(0, 0, 32);
    goto L30;

  L30:
    call {:si_unique_call 599} IoWriteErrorLogEntry(0);
    goto L1;

  L1:
    return;

  anon27_Then:
    assume {:partition} Context_7 == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L30;

  anon20_Then:
    assume {:partition} Status != 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon21_Then:
    assume {:partition} Status == -1073741248;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon22_Then:
    assume {:partition} Status == -1073741434;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon23_Then:
    assume {:partition} Status == -1073741666;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon24_Then:
    assume {:partition} Status == -1073741670;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon25_Then:
    assume {:partition} Status == -1073741808;
    goto L11;

  L11:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon19_Then:
    assume {:partition} Status == -1073741811;
    goto L11;

  anon26_Then:
    assume {:partition} errorLogEntry == 0;
    goto L1;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_90: int;

  anon0:
    call {:si_unique_call 600} vslice_dummy_var_90 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_8: int) returns (Tmp_710: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_710 == -1073741670 || Tmp_710 == -1073741823 || Tmp_710 == 259 || Tmp_710 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_8: int) returns (Tmp_710: int)
{
  var {:pointer} Tmp_711: int;
  var {:pointer} cdb_1: int;
  var {:pointer} Tmp_712: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_713: int;
  var {:pointer} Tmp_714: int;
  var {:scalar} Tmp_715: int;
  var {:pointer} Tmp_716: int;
  var {:pointer} Tmp_717: int;
  var {:pointer} Tmp_718: int;
  var {:pointer} Tmp_719: int;
  var {:pointer} Tmp_720: int;
  var {:scalar} bSetCacheHack: int;
  var {:pointer} Tmp_721: int;
  var {:pointer} Tmp_722: int;
  var {:pointer} Context_8: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 601} Tmp_714 := __HAVOC_malloc(4);
    call {:si_unique_call 602} Tmp_721 := __HAVOC_malloc(4);
    Context_8 := actual_Context_8;
    call {:si_unique_call 603} Tmp_712 := __HAVOC_malloc(64);
    call {:si_unique_call 604} Tmp_717 := __HAVOC_malloc(64);
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    havoc Tmp_718;
    assume {:nonnull} Tmp_718 != 0;
    assume Tmp_718 > 0;
    havoc pdoExtension;
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    assume {:nonnull} Tmp_721 != 0;
    assume Tmp_721 > 0;
    Tmp_716 := Tmp_721;
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_57;
    havoc vslice_dummy_var_58;
    call {:si_unique_call 605} Tmp_710 := Rbc_Scsi_Conversion(vslice_dummy_var_57, Tmp_716, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension), 0, vslice_dummy_var_58, 0);
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L9;

  L9:
    Tmp_710 := 259;
    goto L1;

  anon18_Then:
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    havoc Tmp_711;
    assume {:nonnull} Tmp_711 != 0;
    assume Tmp_711 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Tmp_710 := -1073741823;
    goto L1;

  anon19_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_722;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    havoc Tmp_715;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Tmp_715 == 0;
    bSetCacheHack := 0;
    goto L46;

  L46:
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    assume {:nonnull} Tmp_714 != 0;
    assume Tmp_714 > 0;
    Tmp_720 := Tmp_714;
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_59;
    havoc vslice_dummy_var_60;
    call {:si_unique_call 606} Tmp_710 := Rbc_Scsi_Conversion(vslice_dummy_var_59, Tmp_720, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension), 1, vslice_dummy_var_60, bSetCacheHack);
    goto L1;

  anon20_Then:
    assume {:partition} Tmp_715 != 0;
    bSetCacheHack := 1;
    goto L46;

  anon16_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    havoc Tmp_719;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    havoc Tmp_712;
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    havoc Tmp_713;
    assume {:nonnull} Tmp_713 != 0;
    assume Tmp_713 > 0;
    havoc Tmp_717;
    cdb_1 := Tmp_717;
    assume {:nonnull} cdb_1 != 0;
    assume cdb_1 > 0;
    goto L9;

  anon21_Then:
    goto L9;

  anon17_Then:
    goto L9;
}



procedure {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_14: int, actual_CallbackContext_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_14: int, actual_CallbackContext_1: int)
{
  var {:scalar} i_3: int;
  var {:pointer} Tmp_738: int;
  var {:pointer} Tmp_739: int;
  var {:pointer} Tmp_740: int;
  var {:scalar} size: int;
  var {:pointer} Tmp_743: int;
  var {:pointer} Tmp_745: int;
  var {:pointer} Tmp_746: int;
  var {:scalar} sdv_271: int;
  var {:pointer} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} Tmp_750: int;
  var {:pointer} Tmp_751: int;
  var {:pointer} Tmp_752: int;
  var {:scalar} sdv_272: int;
  var {:pointer} Tmp_753: int;
  var {:pointer} Tmp_754: int;
  var {:pointer} Tmp_755: int;
  var {:pointer} Tmp_758: int;
  var {:pointer} Tmp_759: int;
  var {:scalar} sdv_273: int;
  var {:pointer} Tmp_760: int;
  var {:pointer} Tmp_761: int;
  var {:pointer} Tmp_762: int;
  var {:pointer} Tmp_763: int;
  var {:pointer} Tmp_764: int;
  var {:scalar} sdv_274: int;
  var {:pointer} Tmp_766: int;
  var {:scalar} sdv_275: int;
  var {:scalar} sdv_276: int;
  var {:pointer} Tmp_767: int;
  var {:scalar} Tmp_768: int;
  var {:pointer} Tmp_769: int;
  var {:scalar} Tmp_770: int;
  var {:pointer} Tmp_771: int;
  var {:pointer} Tmp_773: int;
  var {:pointer} Tmp_774: int;
  var {:pointer} Tmp_775: int;
  var {:pointer} Tmp_776: int;
  var {:scalar} sdv_277: int;
  var {:pointer} Tmp_778: int;
  var {:pointer} Tmp_780: int;
  var {:scalar} Tmp_781: int;
  var {:pointer} Tmp_782: int;
  var {:pointer} Tmp_783: int;
  var {:pointer} Tmp_784: int;
  var {:pointer} Tmp_785: int;
  var {:pointer} Tmp_786: int;
  var {:pointer} Tmp_787: int;
  var {:pointer} DeviceExtension_14: int;
  var {:pointer} CallbackContext_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_91: int;

  anon0:
    call {:si_unique_call 607} vslice_dummy_var_91 := __HAVOC_malloc(4);
    DeviceExtension_14 := actual_DeviceExtension_14;
    CallbackContext_1 := actual_CallbackContext_1;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_785;
    assume {:nonnull} Tmp_785 != 0;
    assume Tmp_785 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_750;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_747;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_739;
    assume {:nonnull} Tmp_739 != 0;
    assume Tmp_739 > 0;
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L22;

  L22:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_758;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_764;
    assume {:nonnull} Tmp_758 != 0;
    assume Tmp_758 > 0;
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_774;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_774 != 0;
    assume Tmp_774 > 0;
    goto L24;

  L24:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_743;
    assume {:nonnull} Tmp_743 != 0;
    assume Tmp_743 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_786;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_786 != 0;
    assume Tmp_786 > 0;
    call {:si_unique_call 608} boogieTmp := corral_nondet();
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_759;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_755;
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_754;
    assume {:nonnull} Tmp_754 != 0;
    assume Tmp_754 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_745;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_771;
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    assume {:nonnull} Tmp_771 != 0;
    assume Tmp_771 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_775;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_740;
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    goto L31;

  L31:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_767;
    assume {:nonnull} Tmp_767 != 0;
    assume Tmp_767 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_768 := 12;
    goto L34;

  L34:
    size := Tmp_768;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 609} sdv_RtlZeroMemory(0, 12);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 610} sdv_RtlCopyMemory(0, 0, size);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_762;
    assume {:nonnull} Tmp_762 != 0;
    assume Tmp_762 > 0;
    return;

  anon26_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_776;
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    havoc Tmp_768;
    goto L34;

  anon25_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_778;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_766;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    assume {:nonnull} Tmp_778 != 0;
    assume Tmp_778 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_761;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_769;
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    assume {:nonnull} Tmp_761 != 0;
    assume Tmp_761 > 0;
    assume {:nonnull} Tmp_769 != 0;
    assume Tmp_769 > 0;
    goto L31;

  anon20_Then:
    goto L20;

  L20:
    i_3 := 0;
    goto L46;

  L46:
    call {:si_unique_call 611} i_3, Tmp_760, Tmp_770, Tmp_773, Tmp_781 := Sbp2InitializeOrb_loop_L46(i_3, Tmp_760, sdv_275, sdv_276, Tmp_770, Tmp_773, Tmp_781, CallbackContext_1);
    goto L46_last;

  L46_last:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_781 := i_3;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_773;
    assume {:nonnull} Tmp_773 != 0;
    assume Tmp_773 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_770 := i_3;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_760;
    assume {:nonnull} Tmp_760 != 0;
    assume Tmp_760 > 0;
    i_3 := i_3 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    goto L22;

  anon24_Then:
    goto L20;

  anon19_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_752;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_782;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_753;
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    Tmp_783 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_14);
    assume {:nonnull} Tmp_753 != 0;
    assume Tmp_753 > 0;
    assume {:nonnull} Tmp_783 != 0;
    assume Tmp_783 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_787;
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    Tmp_780 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_14);
    assume {:nonnull} Tmp_780 != 0;
    assume Tmp_780 > 0;
    assume {:nonnull} Tmp_787 != 0;
    assume Tmp_787 > 0;
    goto L63;

  L63:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_751;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_784;
    assume {:nonnull} Tmp_751 != 0;
    assume Tmp_751 > 0;
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    goto L24;

  anon22_Then:
    goto L59;

  L59:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_748;
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_763;
    assume {:nonnull} Tmp_763 != 0;
    assume Tmp_763 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_738;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    goto L63;

  anon27_Then:
    goto L59;

  anon23_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_746;
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    goto L24;
}



procedure {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_15: int, actual_Scsiop: int) returns (Tmp_788: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_15: int, actual_Scsiop: int) returns (Tmp_788: int)
{
  var {:scalar} i_4: int;
  var {:pointer} Tmp_789: int;
  var {:pointer} irpStack_1: int;
  var {:pointer} cdb_2: int;
  var {:scalar} waitValue_3: int;
  var {:pointer} inquiryMdl: int;
  var {:scalar} Tmp_790: int;
  var {:pointer} modeMdl: int;
  var {:pointer} sdv_278: int;
  var {:pointer} context_1: int;
  var {:scalar} Tmp_791: int;
  var {:scalar} Tmp_792: int;
  var {:pointer} sdv_282: int;
  var {:pointer} sdv_283: int;
  var {:pointer} Tmp_794: int;
  var {:pointer} irp_1: int;
  var {:pointer} senseInfoBuffer: int;
  var {:pointer} srb_2: int;
  var {:scalar} status_23: int;
  var {:scalar} event_1: int;
  var {:scalar} retryCount: int;
  var {:pointer} DeviceExtension_15: int;
  var {:scalar} Scsiop: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;

  anon0:
    call {:si_unique_call 612} waitValue_3 := __HAVOC_malloc(20);
    call {:si_unique_call 613} event_1 := __HAVOC_malloc(124);
    DeviceExtension_15 := actual_DeviceExtension_15;
    Scsiop := actual_Scsiop;
    status_23 := -1073741670;
    retryCount := 0;
    context_1 := 0;
    call {:si_unique_call 614} sdv_278 := sdv_ExAllocateFromNPagedLookasideList(0);
    context_1 := sdv_278;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} context_1 != 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    call {:si_unique_call 615} sdv_282 := ExAllocatePoolWithTag(4, 18, 846226035);
    senseInfoBuffer := sdv_282;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} senseInfoBuffer != 0;
    call {:si_unique_call 616} sdv_283 := ExAllocatePoolWithTag(4, 64, 846226035);
    srb_2 := sdv_283;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} srb_2 != 0;
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    havoc Tmp_794;
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    havoc vslice_dummy_var_61;
    call {:si_unique_call 617} irp_1 := IoAllocateIrp(vslice_dummy_var_61, 0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} irp_1 != 0;
    goto L50;

  L50:
    call {:si_unique_call 618} i_4, Tmp_789, irpStack_1, cdb_2, inquiryMdl, Tmp_790, modeMdl, Tmp_791, Tmp_792, status_23, retryCount, vslice_dummy_var_92, vslice_dummy_var_93 := Sbp2IssueInternalCommand_loop_L50(i_4, Tmp_789, irpStack_1, cdb_2, waitValue_3, inquiryMdl, Tmp_790, modeMdl, context_1, Tmp_791, Tmp_792, irp_1, senseInfoBuffer, srb_2, status_23, event_1, retryCount, DeviceExtension_15, Scsiop, vslice_dummy_var_92, vslice_dummy_var_93);
    goto L50_last;

  L50_last:
    call {:si_unique_call 638} irpStack_1 := sdv_IoGetNextIrpStackLocation(irp_1);
    assume {:nonnull} irpStack_1 != 0;
    assume irpStack_1 > 0;
    assume {:nonnull} irpStack_1 != 0;
    assume irpStack_1 > 0;
    assume {:nonnull} irpStack_1 != 0;
    assume irpStack_1 > 0;
    call {:si_unique_call 639} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    cdb_2 := Cdb__SCSI_REQUEST_BLOCK(srb_2);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Scsiop != 18;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Scsiop == 26;
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} retryCount != 0;
    goto L83;

  L83:
    assume {:nonnull} irp_1 != 0;
    assume irp_1 > 0;
    goto L71;

  L71:
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    call {:si_unique_call 619} KeInitializeEvent(Event__REQUEST_CONTEXT(context_1), 0, 0);
    call {:si_unique_call 620} sdv_IoSetCompletionRoutine(irp_1, li2bplFunctionConstant337, context_1, 1, 1, 1);
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    havoc vslice_dummy_var_62;
    call {:si_unique_call 621} status_23 := sdv_IoCallDriver(vslice_dummy_var_62, irp_1);
    assume {:nonnull} irp_1 != 0;
    assume irp_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L139;

  L139:
    call {:si_unique_call 622} vslice_dummy_var_92 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc Tmp_790;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Tmp_790 != 1;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc Tmp_792;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Tmp_792 == 18;
    status_23 := 0;
    goto L149;

  L149:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_23 != 0;
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} 3 > retryCount;
    i_4 := 0;
    goto L154;

  L154:
    call {:si_unique_call 623} i_4, vslice_dummy_var_93 := Sbp2IssueInternalCommand_loop_L154(i_4, waitValue_3, event_1, DeviceExtension_15, vslice_dummy_var_93);
    goto L154_last;

  L154_last:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} 6 > i_4;
    call {:si_unique_call 624} KeInitializeEvent(event_1, 0, 0);
    assume {:nonnull} waitValue_3 != 0;
    assume waitValue_3 > 0;
    call {:si_unique_call 625} vslice_dummy_var_93 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_3);
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    i_4 := i_4 + 1;
    goto anon62_Else_dummy;

  anon62_Else_dummy:
    assume false;
    return;

  anon62_Then:
    goto L150;

  L150:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} 3 > retryCount;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_23 == 0;
    goto L91;

  L91:
    call {:si_unique_call 626} sdv_ExFreePool(0);
    call {:si_unique_call 627} sdv_ExFreePool(0);
    call {:si_unique_call 628} IoFreeMdl(0);
    call {:si_unique_call 629} IoFreeIrp(0);
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    call {:si_unique_call 630} ExFreeToNPagedLookasideList(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_15), context_1);
    Tmp_788 := status_23;
    goto L1;

  L1:
    return;

  anon63_Then:
    assume {:partition} status_23 != 0;
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    assume false;
    return;

  anon58_Then:
    assume {:partition} retryCount >= 3;
    goto L91;

  anon61_Then:
    assume {:partition} i_4 >= 6;
    goto L150;

  anon60_Then:
    assume {:partition} retryCount >= 3;
    goto L150;

  anon59_Then:
    goto L150;

  anon57_Then:
    assume {:partition} status_23 == 0;
    goto L150;

  anon73_Then:
    assume {:partition} Tmp_792 != 18;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} senseInfoBuffer != 0;
    assume senseInfoBuffer > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    status_23 := -1073741808;
    retryCount := retryCount + 1;
    goto L149;

  anon64_Then:
    goto L166;

  L166:
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc Tmp_791;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Tmp_791 == 22;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} retryCount > 0;
    status_23 := 17;
    goto L91;

  anon65_Then:
    assume {:partition} 0 >= retryCount;
    goto L171;

  L171:
    retryCount := retryCount + 1;
    status_23 := -1073741823;
    goto L149;

  anon74_Then:
    assume {:partition} Tmp_791 != 22;
    goto L171;

  anon56_Then:
    goto L166;

  anon72_Then:
    assume {:partition} Tmp_790 == 1;
    status_23 := 0;
    goto L150;

  anon54_Then:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_23 != 259;
    assume {:nonnull} irp_1 != 0;
    assume irp_1 > 0;
    havoc status_23;
    goto L91;

  anon55_Then:
    assume {:partition} status_23 == 259;
    goto L139;

  anon75_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 631} modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} modeMdl == 0;
    goto L91;

  anon52_Then:
    assume {:partition} modeMdl != 0;
    goto L83;

  anon66_Then:
    assume {:partition} Scsiop != 26;
    goto L71;

  anon70_Then:
    assume {:partition} Scsiop == 18;
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    havoc Tmp_789;
    assume {:nonnull} Tmp_789 != 0;
    assume Tmp_789 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} retryCount != 0;
    goto L118;

  L118:
    assume {:nonnull} irp_1 != 0;
    assume irp_1 > 0;
    goto L71;

  anon71_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 632} inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} inquiryMdl != 0;
    goto L118;

  anon53_Then:
    assume {:partition} inquiryMdl == 0;
    goto L91;

  anon51_Then:
    assume {:partition} irp_1 == 0;
    call {:si_unique_call 633} sdv_ExFreePool(0);
    call {:si_unique_call 634} sdv_ExFreePool(0);
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    call {:si_unique_call 635} ExFreeToNPagedLookasideList(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_15), context_1);
    Tmp_788 := status_23;
    goto L1;

  anon69_Then:
    assume {:partition} srb_2 == 0;
    call {:si_unique_call 636} sdv_ExFreePool(0);
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    call {:si_unique_call 637} ExFreeToNPagedLookasideList(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_15), context_1);
    Tmp_788 := status_23;
    goto L1;

  anon68_Then:
    assume {:partition} senseInfoBuffer == 0;
    Tmp_788 := status_23;
    goto L1;

  anon67_Then:
    assume {:partition} context_1 == 0;
    Tmp_788 := status_23;
    goto L1;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_94: int;

  anon0:
    call {:si_unique_call 640} vslice_dummy_var_94 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_814: int);
  free ensures {:va_keep} Tmp_814 == 0 || Tmp_814 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_814: int)
{
  var {:scalar} cchNewDestLength: int;
  var {:scalar} iRet: int;
  var {:scalar} cchMax: int;
  var {:scalar} status_25: int;
  var {:pointer} pszDest: int;
  var {:scalar} cchDest: int;
  var {:pointer} pcchNewDestLength: int;

  anon0:
    pszDest := actual_pszDest;
    cchDest := actual_cchDest;
    pcchNewDestLength := actual_pcchNewDestLength;
    status_25 := 0;
    cchNewDestLength := 0;
    cchMax := cchDest - 1;
    call {:si_unique_call 641} iRet := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet;
    goto L16;

  L16:
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    cchNewDestLength := cchMax;
    status_25 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength != 0;
    assume {:nonnull} pcchNewDestLength != 0;
    assume pcchNewDestLength > 0;
    goto L21;

  L21:
    Tmp_814 := status_25;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet <= cchMax;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet == cchMax;
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    cchNewDestLength := cchMax;
    goto L20;

  anon12_Then:
    assume {:partition} iRet != cchMax;
    cchNewDestLength := iRet;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax < iRet;
    goto L16;
}



procedure {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_816: int);
  free ensures {:va_keep} Tmp_816 == 0 || Tmp_816 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_816: int)
{
  var {:scalar} status_26: int;
  var {:scalar} cchDest_1: int;
  var {:scalar} cchMax_1: int;

  anon0:
    cchDest_1 := actual_cchDest_1;
    cchMax_1 := actual_cchMax_1;
    status_26 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_1 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_1 <= cchMax_1;
    goto L8;

  L8:
    Tmp_816 := status_26;
    return;

  anon5_Then:
    assume {:partition} cchMax_1 < cchDest_1;
    goto L6;

  L6:
    status_26 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_1 == 0;
    goto L6;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_95: int;

  anon0:
    call {:si_unique_call 642} vslice_dummy_var_95 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int)
{
  var {:pointer} Flink: int;
  var {:pointer} ListHead_3: int;
  var {:pointer} Entry_1: int;
  var vslice_dummy_var_96: int;

  anon0:
    call {:si_unique_call 643} vslice_dummy_var_96 := __HAVOC_malloc(4);
    ListHead_3 := actual_ListHead_3;
    Entry_1 := actual_Entry_1;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    havoc Flink;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    return;
}



procedure {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_1: int, actual_uniCompatIds: int) returns (Tmp_822: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_822 == 0 || Tmp_822 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_1: int, actual_uniCompatIds: int) returns (Tmp_822: int)
{
  var {:pointer} sdv_301: int;
  var {:scalar} Tmp_823: int;
  var {:scalar} ntStatus_2: int;
  var {:scalar} Tmp_825: int;
  var {:scalar} Tmp_826: int;
  var {:pointer} Tmp_827: int;
  var {:scalar} Tmp_828: int;
  var {:pointer} DeviceInfo_1: int;
  var {:pointer} uniCompatIds: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_63: int;

  anon0:
    DeviceInfo_1 := actual_DeviceInfo_1;
    uniCompatIds := actual_uniCompatIds;
    call {:si_unique_call 644} Tmp_827 := __HAVOC_malloc(56);
    ntStatus_2 := 0;
    call {:si_unique_call 645} sdv_do_paged_code_check();
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_828;
    call {:si_unique_call 646} sdv_301 := ExAllocatePoolWithTag(1, Tmp_828, 846226035);
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_826;
    call {:si_unique_call 647} sdv_RtlZeroMemory(0, Tmp_826);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    havoc Tmp_825;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_823;
    Tmp_827 := strConst__li2bpl7;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc vslice_dummy_var_63;
    call {:si_unique_call 648} vslice_dummy_var_97 := RtlStringCbPrintfW(vslice_dummy_var_63, Tmp_823, Tmp_827);
    goto L26;

  L26:
    Tmp_822 := ntStatus_2;
    return;

  anon3_Then:
    ntStatus_2 := -1073741670;
    goto L26;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int)
{
  var {:pointer} ListHead_4: int;
  var vslice_dummy_var_98: int;

  anon0:
    call {:si_unique_call 649} vslice_dummy_var_98 := __HAVOC_malloc(4);
    ListHead_4 := actual_ListHead_4;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    return;
}



procedure {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_14: int, actual_Irp_6: int) returns (Tmp_831: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_14: int, actual_Irp_6: int) returns (Tmp_831: int)
{
  var {:pointer} newIrp: int;
  var {:scalar} ntStatus_3: int;
  var {:scalar} event_2: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Irp_6: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_64: int;

  anon0:
    call {:si_unique_call 650} event_2 := __HAVOC_malloc(124);
    DeviceObject_14 := actual_DeviceObject_14;
    Irp_6 := actual_Irp_6;
    ntStatus_3 := 0;
    call {:si_unique_call 651} sdv_do_paged_code_check();
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc vslice_dummy_var_64;
    call {:si_unique_call 652} newIrp := IoAllocateIrp(vslice_dummy_var_64, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} newIrp != 0;
    call {:si_unique_call 653} vslice_dummy_var_99 := sdv_IoGetCurrentIrpStackLocation(Irp_6);
    call {:si_unique_call 654} vslice_dummy_var_100 := sdv_IoGetNextIrpStackLocation(newIrp);
    call {:si_unique_call 655} sdv_RtlMoveMemory(0, 0, 36);
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    call {:si_unique_call 656} KeInitializeEvent(event_2, 0, 0);
    call {:si_unique_call 657} sdv_IoSetCompletionRoutine(newIrp, li2bplFunctionConstant264, event_2, 1, 1, 1);
    call {:si_unique_call 658} ntStatus_3 := sdv_IoCallDriver(DeviceObject_14, newIrp);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} ntStatus_3 == 259;
    call {:si_unique_call 659} vslice_dummy_var_101 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L41;

  L41:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    havoc ntStatus_3;
    call {:si_unique_call 660} IoFreeIrp(0);
    goto L48;

  L48:
    Tmp_831 := ntStatus_3;
    return;

  anon6_Then:
    assume {:partition} ntStatus_3 != 259;
    goto L41;

  anon5_Then:
    assume {:partition} newIrp == 0;
    ntStatus_3 := -1073741670;
    goto L48;
}



procedure {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_2: int, actual_uniDeviceText: int) returns (Tmp_833: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_833 == 0 || Tmp_833 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_2: int, actual_uniDeviceText: int) returns (Tmp_833: int)
{
  var {:scalar} Tmp_834: int;
  var {:scalar} Tmp_835: int;
  var {:scalar} Tmp_836: int;
  var {:pointer} Tmp_837: int;
  var {:pointer} sdv_308: int;
  var {:scalar} Tmp_838: int;
  var {:scalar} Tmp_839: int;
  var {:scalar} ntStatus_4: int;
  var {:pointer} Tmp_840: int;
  var {:pointer} Tmp_841: int;
  var {:scalar} TextType: int;
  var {:pointer} DeviceInfo_2: int;
  var {:pointer} uniDeviceText: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;

  anon0:
    TextType := actual_TextType;
    DeviceInfo_2 := actual_DeviceInfo_2;
    uniDeviceText := actual_uniDeviceText;
    call {:si_unique_call 661} Tmp_837 := __HAVOC_malloc(120);
    call {:si_unique_call 662} Tmp_840 := __HAVOC_malloc(188);
    call {:si_unique_call 663} Tmp_841 := __HAVOC_malloc(28);
    ntStatus_4 := 0;
    call {:si_unique_call 664} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_838;
    call {:si_unique_call 665} sdv_308 := ExAllocatePoolWithTag(1, Tmp_838, 846226003);
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_834;
    call {:si_unique_call 666} sdv_RtlZeroMemory(0, Tmp_834);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} TextType != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} TextType == 1;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_835;
    Tmp_841 := strConst__li2bpl8;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_65;
    call {:si_unique_call 667} vslice_dummy_var_102 := RtlStringCbPrintfW(vslice_dummy_var_65, Tmp_835, Tmp_841);
    goto L24;

  L24:
    Tmp_833 := ntStatus_4;
    return;

  anon13_Then:
    assume {:partition} TextType != 1;
    goto L24;

  anon11_Then:
    assume {:partition} TextType == 0;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_839;
    Tmp_837 := strConst__li2bpl9;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_66;
    call {:si_unique_call 668} vslice_dummy_var_103 := RtlStringCbPrintfW(vslice_dummy_var_66, Tmp_839, Tmp_837);
    goto L24;

  anon14_Then:
    goto L29;

  L29:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_836;
    Tmp_840 := strConst__li2bpl10;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_67;
    call {:si_unique_call 669} vslice_dummy_var_104 := RtlStringCbPrintfW(vslice_dummy_var_67, Tmp_836, Tmp_840);
    goto L24;

  anon12_Then:
    goto L29;

  anon15_Then:
    ntStatus_4 := -1073741670;
    goto L24;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_843: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_843: int)
{
  var {:pointer} Entry_2: int;
  var {:pointer} Flink_1: int;
  var {:pointer} ListHead_5: int;

  anon0:
    ListHead_5 := actual_ListHead_5;
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    havoc Entry_2;
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc Flink_1;
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    assume {:nonnull} Flink_1 != 0;
    assume Flink_1 > 0;
    Tmp_843 := Entry_2;
    return;
}



procedure {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_15: int, actual_Irp_7: int) returns (Tmp_845: int);
  modifies alloc, device, yogi_error;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} old(device) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_O_0) == old(SLAM_guard_O_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_15: int, actual_Irp_7: int) returns (Tmp_845: int)
{
  var {:pointer} deviceRelations: int;
  var {:pointer} irpStack_2: int;
  var {:scalar} sdv_315: int;
  var {:pointer} deviceCapabilities: int;
  var {:pointer} fdoExtension_1: int;
  var {:pointer} sdv_319: int;
  var {:scalar} status_27: int;
  var {:scalar} event_3: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;

  anon0:
    call {:si_unique_call 670} event_3 := __HAVOC_malloc(124);
    DeviceObject_15 := actual_DeviceObject_15;
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 671} irpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_7);
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc fdoExtension_1;
    call {:si_unique_call 672} status_27 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_27 >= 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L32;

  L32:
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 673} vslice_dummy_var_105 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    call {:si_unique_call 674} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_7);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc vslice_dummy_var_68;
    call {:si_unique_call 675} status_27 := sdv_IoCallDriver(vslice_dummy_var_68, Irp_7);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume Irp_7 == SLAM_guard_O_0;
    assume SLAM_guard_O_0 != SLAM_guard_O_0_init;
    call {:si_unique_call 676} SLIC_sdv_IoCallDriver_exit(strConst__li2bpl1);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  L42:
    Tmp_845 := status_27;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon58_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume !(Irp_7 == SLAM_guard_O_0 && SLAM_guard_O_0 != SLAM_guard_O_0_init);
    goto L42;

  anon49_Then:
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    goto L32;

  anon50_Then:
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc deviceCapabilities;
    assume {:nonnull} deviceCapabilities != 0;
    assume deviceCapabilities > 0;
    goto L32;

  anon51_Then:
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    call {:si_unique_call 677} sdv_319 := ExAllocatePoolWithTag(1, 48, 846226035);
    deviceRelations := sdv_319;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} deviceRelations != 0;
    call {:si_unique_call 678} status_27 := Sbp2CreateDeviceRelations(fdoExtension_1, deviceRelations);
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} status_27 >= 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    goto L32;

  anon60_Then:
    assume {:partition} 0 > status_27;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 679} vslice_dummy_var_110 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    call {:si_unique_call 680} sdv_IoCompleteRequest(0, 0);
    Tmp_845 := status_27;
    goto L1;

  anon59_Then:
    assume {:partition} deviceRelations == 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 681} vslice_dummy_var_111 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    call {:si_unique_call 682} sdv_IoCompleteRequest(0, 0);
    Tmp_845 := -1073741670;
    goto L1;

  anon43_Then:
    goto L32;

  anon52_Then:
    call {:si_unique_call 683} KeInitializeEvent(event_3, 1, 0);
    call {:si_unique_call 684} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_7);
    call {:si_unique_call 685} sdv_IoSetCompletionRoutine(Irp_7, li2bplFunctionConstant249, event_3, 1, 1, 1);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc vslice_dummy_var_69;
    call {:si_unique_call 686} status_27 := sdv_IoCallDriver(vslice_dummy_var_69, Irp_7);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume Irp_7 == SLAM_guard_O_0;
    assume SLAM_guard_O_0 != SLAM_guard_O_0_init;
    call {:si_unique_call 687} SLIC_sdv_IoCallDriver_exit(strConst__li2bpl1);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto L86;

  L86:
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L88;

  L88:
    call {:si_unique_call 688} vslice_dummy_var_106 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 689} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 690} sdv_315 := Sbp2CleanDeviceExtension#1(DeviceObject_15, 1);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_315 != 0;
    call {:si_unique_call 691} IoDetachDevice(0);
    call {:si_unique_call 692} IoDeleteDevice(DeviceObject_15);
    goto L98;

  L98:
    status_27 := 0;
    goto L105;

  L105:
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    call {:si_unique_call 693} sdv_IoCompleteRequest(0, 0);
    Tmp_845 := status_27;
    goto L1;

  anon46_Then:
    assume {:partition} sdv_315 == 0;
    goto L98;

  anon44_Then:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} status_27 != 259;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    havoc status_27;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 694} vslice_dummy_var_109 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    goto L105;

  anon45_Then:
    assume {:partition} status_27 == 259;
    goto L88;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume !(Irp_7 == SLAM_guard_O_0 && SLAM_guard_O_0 != SLAM_guard_O_0_init);
    goto L86;

  anon42_Then:
    call {:si_unique_call 695} KeInitializeEvent(event_3, 1, 0);
    call {:si_unique_call 696} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_7);
    call {:si_unique_call 697} sdv_IoSetCompletionRoutine(Irp_7, li2bplFunctionConstant249, event_3, 1, 1, 1);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc vslice_dummy_var_70;
    call {:si_unique_call 698} status_27 := sdv_IoCallDriver(vslice_dummy_var_70, Irp_7);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume Irp_7 == SLAM_guard_O_0;
    assume SLAM_guard_O_0 != SLAM_guard_O_0_init;
    call {:si_unique_call 699} SLIC_sdv_IoCallDriver_exit(strConst__li2bpl1);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} yogi_error != 1;
    goto L124;

  L124:
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L126;

  L126:
    call {:si_unique_call 700} vslice_dummy_var_107 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 701} status_27 := Sbp2StartDevice(DeviceObject_15);
    goto L133;

  L133:
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 702} vslice_dummy_var_108 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    call {:si_unique_call 703} sdv_IoCompleteRequest(0, 0);
    Tmp_845 := status_27;
    goto L1;

  anon47_Then:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_27 != 259;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    havoc status_27;
    goto L133;

  anon48_Then:
    assume {:partition} status_27 == 259;
    goto L126;

  anon56_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    assume !(Irp_7 == SLAM_guard_O_0 && SLAM_guard_O_0 != SLAM_guard_O_0_init);
    goto L124;

  anon41_Then:
    assume {:partition} 0 > status_27;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    call {:si_unique_call 704} sdv_IoCompleteRequest(0, 0);
    Tmp_845 := status_27;
    goto L1;
}



procedure {:origName "Sbp2CreateDevObject"} Sbp2CreateDevObject(actual_DriverObject_1: int, actual_Pdo: int) returns (Tmp_847: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} Tmp_847 == -1073741824 || Tmp_847 == -1073741771 || Tmp_847 == -1073741670 || Tmp_847 == -1073741823 || Tmp_847 == 0 || Tmp_847 == -1073741819 || Tmp_847 == 2 || Tmp_847 == -1073741790;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CreateDevObject"} Sbp2CreateDevObject(actual_DriverObject_1: int, actual_Pdo: int) returns (Tmp_847: int)
{
  var {:scalar} NextId: int;
  var {:pointer} deviceObject_2: int;
  var {:scalar} uniDeviceName: int;
  var {:pointer} Tmp_848: int;
  var {:pointer} Tmp_849: int;
  var {:scalar} unicodeDirectoryName: int;
  var {:pointer} Tmp_850: int;
  var {:pointer} buffer: int;
  var {:scalar} status_28: int;
  var {:pointer} deviceExtension_5: int;
  var {:pointer} Pdo: int;
  var boogieTmp: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_71: int;

  anon0:
    call {:si_unique_call 705} deviceObject_2 := __HAVOC_malloc(4);
    call {:si_unique_call 706} uniDeviceName := __HAVOC_malloc(12);
    call {:si_unique_call 707} vslice_dummy_var_112 := __HAVOC_malloc(24);
    call {:si_unique_call 708} unicodeDirectoryName := __HAVOC_malloc(12);
    Pdo := actual_Pdo;
    call {:si_unique_call 709} Tmp_849 := __HAVOC_malloc(52);
    call {:si_unique_call 710} Tmp_850 := __HAVOC_malloc(76);
    call {:si_unique_call 711} buffer := __HAVOC_malloc(256);
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    NextId := 0;
    call {:si_unique_call 712} sdv_do_paged_code_check();
    goto L17;

  L17:
    call {:si_unique_call 713} NextId, Tmp_850, status_28, vslice_dummy_var_114 := Sbp2CreateDevObject_loop_L17(NextId, deviceObject_2, uniDeviceName, Tmp_850, buffer, status_28, vslice_dummy_var_114);
    goto L17_last;

  L17_last:
    Tmp_850 := strConst__li2bpl11;
    call {:si_unique_call 727} vslice_dummy_var_114 := RtlStringCbPrintfW(buffer, 128, Tmp_850);
    call {:si_unique_call 728} RtlInitUnicodeString(uniDeviceName, buffer);
    call {:si_unique_call 729} status_28 := IoCreateDevice(0, 960, 0, 42, 256, 0, deviceObject_2);
    NextId := NextId + 1;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} status_28 != -1073741771;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_28 >= 0;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    havoc deviceExtension_5;
    call {:si_unique_call 714} sdv_RtlZeroMemory(0, 960);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Pdo != 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 715} boogieTmp := IoAttachDeviceToDeviceStack(0, Pdo);
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    havoc vslice_dummy_var_71;
    call {:si_unique_call 716} IoDeleteDevice(vslice_dummy_var_71);
    Tmp_847 := status_28;
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L36;

  L36:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 717} Tmp_848 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 718} sdv_KeInitializeSpinLock(Tmp_848);
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 719} KeInitializeMutex(0, 0);
    Tmp_849 := strConst__li2bpl12;
    call {:si_unique_call 720} vslice_dummy_var_115 := RtlStringCbPrintfW(buffer, 128, Tmp_849);
    call {:si_unique_call 721} RtlInitUnicodeString(unicodeDirectoryName, buffer);
    call {:si_unique_call 722} sdv_InitializeObjectAttributes(0, 0, 592, 0, 0);
    call {:si_unique_call 723} status_28 := ZwCreateDirectoryObject(0, 983055, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_28 >= 0;
    call {:si_unique_call 724} vslice_dummy_var_113 := ZwClose(0);
    goto L73;

  L73:
    call {:si_unique_call 725} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 726} sdv_IoInitializeRemoveLock(0, 846226003, 2, 8192);
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    Tmp_847 := status_28;
    goto L1;

  anon16_Then:
    assume {:partition} 0 > status_28;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_28 == -1073741771;
    status_28 := 0;
    goto L73;

  anon17_Then:
    assume {:partition} status_28 != -1073741771;
    goto L73;

  anon14_Then:
    assume {:partition} Pdo == 0;
    goto L36;

  anon13_Then:
    assume {:partition} 0 > status_28;
    Tmp_847 := status_28;
    goto L1;

  anon18_Then:
    assume {:partition} status_28 == -1073741771;
    goto anon18_Then_dummy;

  anon18_Then_dummy:
    assume false;
    return;
}



procedure {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_3: int, actual_uniHardwareIds: int) returns (Tmp_851: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_851 == 0 || Tmp_851 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_3: int, actual_uniHardwareIds: int) returns (Tmp_851: int)
{
  var {:scalar} Tmp_854: int;
  var {:scalar} uniCmdSetId: int;
  var {:pointer} sdv_338: int;
  var {:scalar} Tmp_859: int;
  var {:scalar} Tmp_864: int;
  var {:scalar} ntStatus_5: int;
  var {:scalar} uniLunNumber: int;
  var {:scalar} Tmp_865: int;
  var {:scalar} Tmp_866: int;
  var {:scalar} Tmp_867: int;
  var {:pointer} sdv_349: int;
  var {:pointer} sdv_351: int;
  var {:scalar} Tmp_875: int;
  var {:pointer} DeviceInfo_3: int;
  var {:pointer} uniHardwareIds: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_72: int;

  anon0:
    call {:si_unique_call 730} uniCmdSetId := __HAVOC_malloc(12);
    call {:si_unique_call 731} uniLunNumber := __HAVOC_malloc(12);
    DeviceInfo_3 := actual_DeviceInfo_3;
    uniHardwareIds := actual_uniHardwareIds;
    call {:si_unique_call 732} vslice_dummy_var_128 := __HAVOC_malloc(8);
    call {:si_unique_call 733} vslice_dummy_var_129 := __HAVOC_malloc(8);
    call {:si_unique_call 734} vslice_dummy_var_130 := __HAVOC_malloc(8);
    call {:si_unique_call 735} vslice_dummy_var_131 := __HAVOC_malloc(36);
    call {:si_unique_call 736} vslice_dummy_var_132 := __HAVOC_malloc(8);
    call {:si_unique_call 737} vslice_dummy_var_133 := __HAVOC_malloc(36);
    call {:si_unique_call 738} vslice_dummy_var_134 := __HAVOC_malloc(24);
    call {:si_unique_call 739} vslice_dummy_var_135 := __HAVOC_malloc(8);
    call {:si_unique_call 740} vslice_dummy_var_136 := __HAVOC_malloc(116);
    call {:si_unique_call 741} vslice_dummy_var_137 := __HAVOC_malloc(24);
    call {:si_unique_call 742} vslice_dummy_var_138 := __HAVOC_malloc(16);
    call {:si_unique_call 743} vslice_dummy_var_139 := __HAVOC_malloc(24);
    call {:si_unique_call 744} vslice_dummy_var_140 := __HAVOC_malloc(116);
    call {:si_unique_call 745} vslice_dummy_var_141 := __HAVOC_malloc(8);
    call {:si_unique_call 746} vslice_dummy_var_142 := __HAVOC_malloc(8);
    call {:si_unique_call 747} vslice_dummy_var_143 := __HAVOC_malloc(24);
    call {:si_unique_call 748} vslice_dummy_var_144 := __HAVOC_malloc(116);
    ntStatus_5 := 0;
    call {:si_unique_call 749} sdv_do_paged_code_check();
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_865;
    call {:si_unique_call 750} sdv_338 := ExAllocatePoolWithTag(1, Tmp_865, 846226035);
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_866;
    call {:si_unique_call 751} sdv_RtlZeroMemory(0, Tmp_866);
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    havoc Tmp_864;
    call {:si_unique_call 752} vslice_dummy_var_145 := RtlIntegerToUnicodeString(Tmp_864, 16, 0);
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_859;
    call {:si_unique_call 753} sdv_349 := ExAllocatePoolWithTag(1, Tmp_859, 846226035);
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_867;
    call {:si_unique_call 754} sdv_RtlZeroMemory(0, Tmp_867);
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    havoc vslice_dummy_var_72;
    call {:si_unique_call 755} vslice_dummy_var_116 := RtlIntegerToUnicodeString(vslice_dummy_var_72, 16, 0);
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_854;
    call {:si_unique_call 756} sdv_351 := ExAllocatePoolWithTag(1, Tmp_854, 846226003);
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_875;
    call {:si_unique_call 757} sdv_RtlZeroMemory(0, Tmp_875);
    call {:si_unique_call 758} vslice_dummy_var_146 := corral_nondet();
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 759} vslice_dummy_var_117 := corral_nondet();
    call {:si_unique_call 760} vslice_dummy_var_147 := corral_nondet();
    call {:si_unique_call 761} vslice_dummy_var_118 := corral_nondet();
    goto L75;

  L75:
    call {:si_unique_call 762} vslice_dummy_var_148 := corral_nondet();
    call {:si_unique_call 763} vslice_dummy_var_149 := corral_nondet();
    call {:si_unique_call 764} vslice_dummy_var_119 := corral_nondet();
    call {:si_unique_call 765} vslice_dummy_var_150 := corral_nondet();
    call {:si_unique_call 766} vslice_dummy_var_120 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 767} vslice_dummy_var_151 := corral_nondet();
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 768} vslice_dummy_var_121 := corral_nondet();
    call {:si_unique_call 769} vslice_dummy_var_152 := corral_nondet();
    call {:si_unique_call 770} vslice_dummy_var_122 := corral_nondet();
    goto L108;

  L108:
    call {:si_unique_call 771} vslice_dummy_var_153 := corral_nondet();
    call {:si_unique_call 772} vslice_dummy_var_154 := corral_nondet();
    call {:si_unique_call 773} vslice_dummy_var_123 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 774} vslice_dummy_var_155 := corral_nondet();
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 775} vslice_dummy_var_124 := corral_nondet();
    call {:si_unique_call 776} vslice_dummy_var_156 := corral_nondet();
    call {:si_unique_call 777} vslice_dummy_var_125 := corral_nondet();
    goto L135;

  L135:
    call {:si_unique_call 778} vslice_dummy_var_157 := corral_nondet();
    call {:si_unique_call 779} vslice_dummy_var_158 := corral_nondet();
    call {:si_unique_call 780} vslice_dummy_var_126 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 781} vslice_dummy_var_159 := corral_nondet();
    call {:si_unique_call 782} vslice_dummy_var_127 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 783} vslice_dummy_var_160 := corral_nondet();
    goto L155;

  L155:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 784} sdv_ExFreePool(0);
    goto L156;

  L156:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 785} sdv_ExFreePool(0);
    goto L160;

  L160:
    Tmp_851 := ntStatus_5;
    return;

  anon30_Then:
    goto L160;

  anon29_Then:
    goto L156;

  anon28_Then:
    goto L122;

  L122:
    call {:si_unique_call 786} vslice_dummy_var_161 := corral_nondet();
    goto L135;

  anon27_Then:
    goto L122;

  anon26_Then:
    goto L95;

  L95:
    call {:si_unique_call 787} vslice_dummy_var_162 := corral_nondet();
    goto L108;

  anon25_Then:
    goto L95;

  anon24_Then:
    goto L62;

  L62:
    call {:si_unique_call 788} vslice_dummy_var_163 := corral_nondet();
    goto L75;

  anon23_Then:
    goto L62;

  anon33_Then:
    ntStatus_5 := -1073741670;
    goto L155;

  anon32_Then:
    ntStatus_5 := -1073741670;
    goto L155;

  anon31_Then:
    ntStatus_5 := -1073741670;
    goto L155;
}



procedure {:origName "Sbp2AddDevice"} Sbp2AddDevice(actual_DriverObject_2: int, actual_Pdo_1: int) returns (Tmp_877: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} Tmp_877 == -1073741824 || Tmp_877 == -1073741771 || Tmp_877 == -1073741670 || Tmp_877 == -1073741823 || Tmp_877 == 0 || Tmp_877 == -1073741819 || Tmp_877 == 2 || Tmp_877 == -1073741790;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AddDevice"} Sbp2AddDevice(actual_DriverObject_2: int, actual_Pdo_1: int) returns (Tmp_877: int)
{
  var {:pointer} DriverObject_2: int;
  var {:pointer} Pdo_1: int;

  anon0:
    DriverObject_2 := actual_DriverObject_2;
    Pdo_1 := actual_Pdo_1;
    call {:si_unique_call 789} sdv_do_paged_code_check();
    call {:si_unique_call 790} Tmp_877 := Sbp2CreateDevObject(DriverObject_2, Pdo_1);
    return;
}



procedure {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_17: int, actual_Irp_8: int) returns (Tmp_941: int);
  modifies alloc, device, yogi_error;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} old(device) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_O_0) == old(SLAM_guard_O_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_17: int, actual_Irp_8: int) returns (Tmp_941: int)
{
  var {:pointer} deviceRelations_1: int;
  var {:pointer} DeviceInfo_4: int;
  var {:pointer} Tmp_942: int;
  var {:pointer} irpStack_3: int;
  var {:scalar} uniRetString: int;
  var {:pointer} count: int;
  var {:scalar} Tmp_943: int;
  var {:pointer} Tmp_944: int;
  var {:pointer} Tmp_945: int;
  var {:scalar} uniRetString_1: int;
  var {:scalar} reportedMissing: int;
  var {:pointer} Tmp_946: int;
  var {:pointer} Tmp_947: int;
  var {:pointer} deviceCapabilities_1: int;
  var {:pointer} fdoExtension_3: int;
  var {:pointer} sdv_392: int;
  var {:pointer} Tmp_948: int;
  var {:pointer} DeviceInfo_5: int;
  var {:pointer} Tmp_949: int;
  var {:scalar} cIrql_4: int;
  var {:pointer} Tmp_950: int;
  var {:scalar} status_30: int;
  var {:pointer} Tmp_951: int;
  var {:pointer} Tmp_952: int;
  var {:pointer} deviceExtension_7: int;
  var {:pointer} Tmp_953: int;
  var {:pointer} Tmp_954: int;
  var {:pointer} Tmp_955: int;
  var {:pointer} DeviceObject_17: int;
  var {:pointer} Irp_8: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;

  anon0:
    call {:si_unique_call 791} uniRetString := __HAVOC_malloc(12);
    call {:si_unique_call 792} uniRetString_1 := __HAVOC_malloc(12);
    DeviceObject_17 := actual_DeviceObject_17;
    Irp_8 := actual_Irp_8;
    call {:si_unique_call 793} Tmp_942 := __HAVOC_malloc(28);
    call {:si_unique_call 794} Tmp_946 := __HAVOC_malloc(28);
    call {:si_unique_call 795} Tmp_947 := __HAVOC_malloc(4);
    call {:si_unique_call 796} Tmp_951 := __HAVOC_malloc(28);
    call {:si_unique_call 797} Tmp_953 := __HAVOC_malloc(28);
    call {:si_unique_call 798} Tmp_954 := __HAVOC_malloc(28);
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    havoc deviceExtension_7;
    call {:si_unique_call 799} irpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 800} sdv_IoCompleteRequest(0, 0);
    Tmp_941 := -1073741810;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon113_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    call {:si_unique_call 801} status_30 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} status_30 >= 0;
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    status_30 := 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  L60:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 802} vslice_dummy_var_165 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_7), 0);
    call {:si_unique_call 803} sdv_IoCompleteRequest(0, 0);
    Tmp_941 := status_30;
    goto L1;

  anon141_Then:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    goto L60;

  anon142_Then:
    call {:si_unique_call 804} Tmp_950 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    call {:si_unique_call 805} sdv_KeAcquireSpinLock(0, Tmp_950);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    reportedMissing := 0;
    goto L74;

  L74:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 806} vslice_dummy_var_175 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_7), 0, 0);
    call {:si_unique_call 807} sdv_KeReleaseSpinLock(0, cIrql_4);
    call {:si_unique_call 808} vslice_dummy_var_166 := Sbp2CleanDeviceExtension#1(DeviceObject_17, 1);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} reportedMissing != 0;
    call {:si_unique_call 809} Sbp2HandleRemove(DeviceObject_17);
    goto L88;

  L88:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  anon122_Then:
    assume {:partition} reportedMissing == 0;
    goto L88;

  anon121_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    reportedMissing := 1;
    goto L74;

  anon143_Then:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    count := HibernateCount__DEVICE_EXTENSION(deviceExtension_7);
    goto L98;

  L98:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} count != 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc vslice_dummy_var_73;
    call {:si_unique_call 810} status_30 := Sbp2ForwardIrpSynchronous(vslice_dummy_var_73, Irp_8);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} status_30 >= 0;
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc vslice_dummy_var_74;
    call {:si_unique_call 811} sdv_IoAdjustPagingPathCount(0, vslice_dummy_var_74);
    goto L105;

  L105:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  anon124_Then:
    assume {:partition} 0 > status_30;
    goto L105;

  anon123_Then:
    assume {:partition} count == 0;
    status_30 := -1073741637;
    goto L105;

  anon161_Then:
    count := 0;
    goto L98;

  anon120_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    count := PagingPathCount__DEVICE_EXTENSION(deviceExtension_7);
    goto L98;

  anon144_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    goto L113;

  L113:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    goto L60;

  anon119_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    call {:si_unique_call 812} Tmp_950 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    call {:si_unique_call 813} sdv_KeAcquireSpinLock(0, Tmp_950);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 814} sdv_KeReleaseSpinLock(0, cIrql_4);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L113;

  anon125_Then:
    goto L113;

  anon145_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc DeviceInfo_4;
    status_30 := 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    call {:si_unique_call 815} status_30 := Sbp2_BuildInstanceId(DeviceInfo_4, uniRetString);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} status_30 < 0;
    goto L146;

  L146:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  anon126_Then:
    assume {:partition} 0 <= status_30;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L146;

  anon158_Then:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    goto L146;

  anon159_Then:
    call {:si_unique_call 816} status_30 := Sbp2_BuildCompatIds(DeviceInfo_4, uniRetString);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} status_30 >= 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L146;

  anon127_Then:
    assume {:partition} 0 > status_30;
    goto L146;

  anon160_Then:
    call {:si_unique_call 817} status_30 := Sbp2_BuildHardwareIds(DeviceInfo_4, uniRetString);
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} status_30 >= 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L146;

  anon128_Then:
    assume {:partition} 0 > status_30;
    goto L146;

  anon168_Then:
    call {:si_unique_call 818} status_30 := Sbp2_BuildDeviceId(DeviceInfo_4, uniRetString);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} status_30 >= 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L146;

  anon129_Then:
    assume {:partition} 0 > status_30;
    goto L146;

  anon146_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc DeviceInfo_5;
    status_30 := 0;
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    status_30 := -1073741637;
    goto L170;

  L170:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  anon130_Then:
    goto L165;

  L165:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc vslice_dummy_var_75;
    call {:si_unique_call 819} status_30 := Sbp2_BuildDeviceText(vslice_dummy_var_75, DeviceInfo_5, uniRetString_1);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    goto L170;

  anon167_Then:
    goto L165;

  anon147_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_945;
    assume {:nonnull} Tmp_945 != 0;
    assume Tmp_945 > 0;
    havoc fdoExtension_3;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_948;
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    assume {:nonnull} Tmp_948 != 0;
    assume Tmp_948 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    goto L60;

  anon148_Then:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc deviceCapabilities_1;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_955;
    assume {:nonnull} Tmp_955 != 0;
    assume Tmp_955 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Tmp_955 != 0;
    assume Tmp_955 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    goto L188;

  L188:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_953;
    assume {:nonnull} Tmp_953 != 0;
    assume Tmp_953 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_954;
    assume {:nonnull} Tmp_954 != 0;
    assume Tmp_954 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_942;
    assume {:nonnull} Tmp_942 != 0;
    assume Tmp_942 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_951;
    assume {:nonnull} Tmp_951 != 0;
    assume Tmp_951 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_946;
    assume {:nonnull} Tmp_946 != 0;
    assume Tmp_946 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  anon156_Then:
    goto L182;

  L182:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_949;
    assume {:nonnull} Tmp_949 != 0;
    assume Tmp_949 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} Tmp_949 != 0;
    assume Tmp_949 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    goto L184;

  L184:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L188;

  anon157_Then:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L188;

  anon166_Then:
    goto L184;

  anon165_Then:
    goto L182;

  anon149_Then:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    goto L60;

  anon118_Then:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc deviceRelations_1;
    goto L210;

  L210:
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_943;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_947;
    assume {:nonnull} Tmp_947 != 0;
    assume Tmp_947 > 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    call {:si_unique_call 820} vslice_dummy_var_174 := sdv_ObReferenceObject(0);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  anon131_Then:
    call {:si_unique_call 821} sdv_392 := ExAllocatePoolWithTag(1, 8, 846226035);
    deviceRelations_1 := sdv_392;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} deviceRelations_1 != 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    goto L210;

  anon164_Then:
    assume {:partition} deviceRelations_1 == 0;
    status_30 := -1073741670;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  anon150_Then:
    goto L48;

  L48:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    goto L60;

  anon151_Then:
    goto L48;

  anon152_Then:
    call {:si_unique_call 822} vslice_dummy_var_164 := Sbp2EnableBusResetNotification(deviceExtension_7, 0);
    call {:si_unique_call 823} vslice_dummy_var_167 := PoRegisterDeviceForIdleDetection(0, 0, 0, 4);
    call {:si_unique_call 824} Tmp_950 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    call {:si_unique_call 825} sdv_KeAcquireSpinLock(0, Tmp_950);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 826} sdv_KeReleaseSpinLock(0, cIrql_4);
    call {:si_unique_call 827} vslice_dummy_var_168 := KeCancelTimer(0);
    goto L243;

  L243:
    status_30 := 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  anon132_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 828} sdv_KeReleaseSpinLock(0, cIrql_4);
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_952;
    assume {:nonnull} Tmp_952 != 0;
    assume Tmp_952 > 0;
    havoc fdoExtension_3;
    call {:si_unique_call 829} ExAcquireFastMutex(0);
    call {:si_unique_call 830} vslice_dummy_var_169 := Sbp2ManagementTransaction(deviceExtension_7, 7);
    call {:si_unique_call 831} ExReleaseFastMutex(0);
    call {:si_unique_call 832} vslice_dummy_var_170 := Sbp2CleanDeviceExtension#1(DeviceObject_17, 0);
    goto L243;

  anon153_Then:
    call {:si_unique_call 833} Tmp_950 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    call {:si_unique_call 834} sdv_KeAcquireSpinLock(0, Tmp_950);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 835} sdv_KeReleaseSpinLock(0, cIrql_4);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    goto L60;

  anon154_Then:
    status_30 := 0;
    call {:si_unique_call 836} Tmp_950 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    call {:si_unique_call 837} sdv_KeAcquireSpinLock(0, Tmp_950);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    call {:si_unique_call 838} sdv_KeReleaseSpinLock(0, cIrql_4);
    call {:si_unique_call 839} Tmp_950 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    call {:si_unique_call 840} sdv_KeRaiseIrql(2, Tmp_950);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    havoc cIrql_4;
    call {:si_unique_call 841} Sbp2StartNextPacketByKey#1(DeviceObject_17, 0);
    call {:si_unique_call 842} sdv_KeLowerIrql(cIrql_4);
    call {:si_unique_call 843} sdv_IoReleaseRemoveLockAndWait(0, 0);
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 844} vslice_dummy_var_173 := KeCancelTimer(0);
    call {:si_unique_call 845} IoDeleteDevice(DeviceObject_17);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 846} sdv_IoCompleteRequest(0, 0);
    Tmp_941 := status_30;
    goto L1;

  anon163_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    call {:si_unique_call 847} sdv_KeReleaseSpinLock(0, cIrql_4);
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_944;
    assume {:nonnull} Tmp_944 != 0;
    assume Tmp_944 > 0;
    havoc fdoExtension_3;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 848} ExAcquireFastMutex(0);
    call {:si_unique_call 849} vslice_dummy_var_171 := Sbp2ManagementTransaction(deviceExtension_7, 7);
    call {:si_unique_call 850} ExReleaseFastMutex(0);
    goto L308;

  L308:
    call {:si_unique_call 851} Tmp_950 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    call {:si_unique_call 852} sdv_KeAcquireSpinLock(0, Tmp_950);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto L324;

  L324:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 853} sdv_KeReleaseSpinLock(0, cIrql_4);
    call {:si_unique_call 854} vslice_dummy_var_172 := Sbp2CleanDeviceExtension#1(DeviceObject_17, 1);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  anon135_Then:
    goto L308;

  anon133_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto L324;

  anon137_Then:
    goto L335;

  L335:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto L324;

  anon136_Then:
    goto L335;

  anon134_Then:
    goto L324;

  anon155_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    goto L341;

  L341:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    goto L60;

  anon117_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    call {:si_unique_call 855} Tmp_950 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    call {:si_unique_call 856} sdv_KeAcquireSpinLock(0, Tmp_950);
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 857} sdv_KeReleaseSpinLock(0, cIrql_4);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_30;
    goto L60;

  anon139_Then:
    goto L341;

  anon138_Then:
    goto L341;

  anon116_Then:
    call {:si_unique_call 858} status_30 := Sbp2StartDevice(DeviceObject_17);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L60;

  anon115_Then:
    assume {:partition} 0 > status_30;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 859} sdv_IoCompleteRequest(0, 0);
    Tmp_941 := status_30;
    goto L1;

  anon140_Then:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 860} sdv_IoCompleteRequest(0, 0);
    Tmp_941 := -1073741810;
    goto L1;

  anon114_Then:
    call {:si_unique_call 861} Tmp_941 := Sbp2FDOPnpDeviceControl(DeviceObject_17, Irp_8);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon162_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_6: int, actual_uniDeviceId: int) returns (Tmp_956: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_956 == 0 || Tmp_956 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_6: int, actual_uniDeviceId: int) returns (Tmp_956: int)
{
  var {:scalar} Tmp_957: int;
  var {:pointer} sdv_398: int;
  var {:pointer} Tmp_958: int;
  var {:scalar} ntStatus_6: int;
  var {:scalar} Tmp_960: int;
  var {:scalar} Tmp_961: int;
  var {:pointer} Tmp_962: int;
  var {:scalar} Tmp_963: int;
  var {:pointer} DeviceInfo_6: int;
  var {:pointer} uniDeviceId: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;

  anon0:
    DeviceInfo_6 := actual_DeviceInfo_6;
    uniDeviceId := actual_uniDeviceId;
    call {:si_unique_call 862} Tmp_958 := __HAVOC_malloc(76);
    call {:si_unique_call 863} Tmp_962 := __HAVOC_malloc(160);
    ntStatus_6 := 0;
    call {:si_unique_call 864} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_957;
    call {:si_unique_call 865} sdv_398 := ExAllocatePoolWithTag(1, Tmp_957, 846226035);
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_963;
    call {:si_unique_call 866} sdv_RtlZeroMemory(0, Tmp_963);
    assume {:nonnull} DeviceInfo_6 != 0;
    assume DeviceInfo_6 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} DeviceInfo_6 != 0;
    assume DeviceInfo_6 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_961;
    Tmp_958 := strConst__li2bpl18;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_76;
    call {:si_unique_call 867} vslice_dummy_var_176 := RtlStringCbPrintfW(vslice_dummy_var_76, Tmp_961, Tmp_958);
    goto L28;

  L28:
    Tmp_956 := ntStatus_6;
    return;

  anon8_Then:
    goto L22;

  L22:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_960;
    Tmp_962 := strConst__li2bpl19;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_77;
    call {:si_unique_call 868} vslice_dummy_var_177 := RtlStringCbPrintfW(vslice_dummy_var_77, Tmp_960, Tmp_962);
    goto L28;

  anon7_Then:
    goto L22;

  anon9_Then:
    ntStatus_6 := -1073741670;
    goto L28;
}



procedure {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_2: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_964: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_964 == 0 || Tmp_964 == 5 || Tmp_964 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_2: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_964: int)
{
  var {:scalar} cchDest_2: int;
  var {:pointer} argList_1: int;
  var {:scalar} status_31: int;
  var {:pointer} pszDest_2: int;
  var {:scalar} cbDest: int;
  var {:pointer} pszFormat_1: int;
  var vslice_dummy_var_78: int;

  anon0:
    pszDest_2 := actual_pszDest_2;
    cbDest := actual_cbDest;
    call {:si_unique_call 869} pszFormat_1 := __HAVOC_malloc(4);
    cchDest_2 := INTDIV(cbDest, 2);
    call {:si_unique_call 870} status_31 := RtlStringValidateDestW_sdv_static_function_1(pszDest_2, cchDest_2, -1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_31 >= 0;
    argList_1 := pszFormat_1;
    assume {:nonnull} pszFormat_1 != 0;
    assume pszFormat_1 > 0;
    havoc vslice_dummy_var_78;
    call {:si_unique_call 871} status_31 := RtlStringVPrintfWorkerW_sdv_static_function_1(pszDest_2, cchDest_2, 0, vslice_dummy_var_78, argList_1);
    argList_1 := 0;
    goto L11;

  L11:
    Tmp_964 := status_31;
    return;

  anon3_Then:
    assume {:partition} 0 > status_31;
    goto L11;
}



procedure {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension: int, actual_DeviceInfo_7: int, actual_InstanceNumber: int) returns (Tmp_966: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} Tmp_966 == 0 || Tmp_966 == -1073741670 || Tmp_966 == -1073741824 || Tmp_966 == -1073741771 || Tmp_966 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension: int, actual_DeviceInfo_7: int, actual_InstanceNumber: int) returns (Tmp_966: int)
{
  var {:pointer} Tmp_967: int;
  var {:scalar} size_1: int;
  var {:pointer} Tmp_968: int;
  var {:pointer} symlinkBuffer: int;
  var {:pointer} pdoExtension_1: int;
  var {:scalar} uniDeviceName_1: int;
  var {:pointer} Tmp_969: int;
  var {:scalar} sdv_408: int;
  var {:pointer} sdv_409: int;
  var {:pointer} Tmp_973: int;
  var {:scalar} devType_1: int;
  var {:pointer} sdv_410: int;
  var {:pointer} Tmp_977: int;
  var {:scalar} sdv_412: int;
  var {:pointer} Tmp_978: int;
  var {:scalar} sdv_415: int;
  var {:scalar} sdv_417: int;
  var {:pointer} buffer_1: int;
  var {:scalar} sdv_418: int;
  var {:pointer} Tmp_981: int;
  var {:scalar} Tmp_986: int;
  var {:pointer} sdv_423: int;
  var {:pointer} Tmp_988: int;
  var {:scalar} status_32: int;
  var {:pointer} Tmp_990: int;
  var {:scalar} Tmp_991: int;
  var {:pointer} Tmp_992: int;
  var {:pointer} Tmp_994: int;
  var {:pointer} Tmp_996: int;
  var {:scalar} sdv_427: int;
  var {:pointer} FdoExtension: int;
  var {:pointer} DeviceInfo_7: int;
  var {:scalar} InstanceNumber: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_79: int;

  anon0:
    call {:si_unique_call 872} uniDeviceName_1 := __HAVOC_malloc(12);
    FdoExtension := actual_FdoExtension;
    DeviceInfo_7 := actual_DeviceInfo_7;
    InstanceNumber := actual_InstanceNumber;
    call {:si_unique_call 873} Tmp_967 := __HAVOC_malloc(272);
    call {:si_unique_call 874} vslice_dummy_var_178 := __HAVOC_malloc(56);
    call {:si_unique_call 875} vslice_dummy_var_179 := __HAVOC_malloc(8);
    call {:si_unique_call 876} vslice_dummy_var_180 := __HAVOC_malloc(32);
    call {:si_unique_call 877} vslice_dummy_var_181 := __HAVOC_malloc(44);
    call {:si_unique_call 878} vslice_dummy_var_182 := __HAVOC_malloc(44);
    call {:si_unique_call 879} vslice_dummy_var_183 := __HAVOC_malloc(8);
    call {:si_unique_call 880} vslice_dummy_var_184 := __HAVOC_malloc(8);
    call {:si_unique_call 881} Tmp_981 := __HAVOC_malloc(188);
    call {:si_unique_call 882} vslice_dummy_var_185 := __HAVOC_malloc(44);
    call {:si_unique_call 883} vslice_dummy_var_186 := __HAVOC_malloc(32);
    call {:si_unique_call 884} vslice_dummy_var_187 := __HAVOC_malloc(8);
    call {:si_unique_call 885} vslice_dummy_var_188 := __HAVOC_malloc(8);
    call {:si_unique_call 886} vslice_dummy_var_189 := __HAVOC_malloc(44);
    call {:si_unique_call 887} Tmp_988 := __HAVOC_malloc(180);
    call {:si_unique_call 888} vslice_dummy_var_190 := __HAVOC_malloc(56);
    call {:si_unique_call 889} vslice_dummy_var_191 := __HAVOC_malloc(56);
    call {:si_unique_call 890} vslice_dummy_var_192 := __HAVOC_malloc(36);
    call {:si_unique_call 891} vslice_dummy_var_193 := __HAVOC_malloc(8);
    call {:si_unique_call 892} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto L15;

  L15:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    devType_1 := 25;
    goto L21;

  L21:
    size_1 := 2560;
    call {:si_unique_call 893} sdv_409 := ExAllocatePoolWithTag(1, size_1, 846226035);
    buffer_1 := sdv_409;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} buffer_1 != 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    Tmp_981 := strConst__li2bpl29;
    call {:si_unique_call 894} vslice_dummy_var_194 := RtlStringCbPrintfW(buffer_1, size_1, Tmp_981);
    goto L42;

  L42:
    call {:si_unique_call 895} RtlInitUnicodeString(uniDeviceName_1, buffer_1);
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    call {:si_unique_call 896} status_32 := IoCreateDevice(0, 1104, 0, devType_1, 0, 0, DeviceObject__DEVICE_INFORMATION(DeviceInfo_7));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_32 >= 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_977;
    assume {:nonnull} Tmp_977 != 0;
    assume Tmp_977 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_990;
    assume {:nonnull} Tmp_990 != 0;
    assume Tmp_990 > 0;
    goto L54;

  L54:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_994;
    assume {:nonnull} Tmp_994 != 0;
    assume Tmp_994 > 0;
    havoc pdoExtension_1;
    call {:si_unique_call 897} sdv_RtlZeroMemory(0, 1104);
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    havoc Tmp_973;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} Tmp_973 != 0;
    assume Tmp_973 > 0;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 898} KeInitializeEvent(PendingOrbEvent__DEVICE_EXTENSION(pdoExtension_1), 1, 0);
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 899} KeInitializeEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_1), 0, 0);
    call {:si_unique_call 900} Tmp_978 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_978 != 0;
    assume Tmp_978 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 901} sdv_KeInitializeSpinLock(Tmp_978);
    assume {:nonnull} Tmp_978 != 0;
    assume Tmp_978 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 902} sdv_IoInitializeRemoveLock(0, 846226003, 2, 8192);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L81;

  L81:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_991;
    call {:si_unique_call 903} sdv_423 := ExAllocatePoolWithTag(1, Tmp_991, 846226035);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_986;
    call {:si_unique_call 904} sdv_RtlZeroMemory(0, Tmp_986);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L98;

  L98:
    call {:si_unique_call 905} vslice_dummy_var_195 := corral_nondet();
    goto L124;

  L124:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_992;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_996;
    assume {:nonnull} Tmp_992 != 0;
    assume Tmp_992 > 0;
    assume {:nonnull} Tmp_996 != 0;
    assume Tmp_996 > 0;
    call {:si_unique_call 906} status_32 := Sbp2PreAllocateLists(pdoExtension_1);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_32 >= 0;
    size_1 := 1536;
    call {:si_unique_call 907} sdv_410 := ExAllocatePoolWithTag(1, size_1, 846226003);
    symlinkBuffer := sdv_410;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} symlinkBuffer != 0;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    Tmp_988 := strConst__li2bpl30;
    call {:si_unique_call 908} vslice_dummy_var_196 := RtlStringCbPrintfW(symlinkBuffer, size_1, Tmp_988);
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 909} RtlInitUnicodeString(UniSymLinkName__DEVICE_EXTENSION(pdoExtension_1), symlinkBuffer);
    call {:si_unique_call 910} status_32 := IoCreateUnprotectedSymbolicLink(0, 0);
    goto L140;

  L140:
    status_32 := 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_968;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_969;
    assume {:nonnull} Tmp_968 != 0;
    assume Tmp_968 > 0;
    assume {:nonnull} Tmp_969 != 0;
    assume Tmp_969 > 0;
    goto L161;

  L161:
    call {:si_unique_call 911} sdv_ExFreePool(0);
    Tmp_966 := status_32;
    goto L1;

  L1:
    return;

  anon75_Then:
    assume {:partition} symlinkBuffer == 0;
    goto L140;

  anon58_Then:
    assume {:partition} 0 > status_32;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    havoc vslice_dummy_var_79;
    call {:si_unique_call 912} IoDeleteDevice(vslice_dummy_var_79);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto L161;

  anon64_Then:
    call {:si_unique_call 913} vslice_dummy_var_204 := corral_nondet();
    goto L124;

  anon65_Then:
    call {:si_unique_call 914} vslice_dummy_var_203 := corral_nondet();
    goto L124;

  anon66_Then:
    call {:si_unique_call 915} vslice_dummy_var_202 := corral_nondet();
    goto L124;

  anon67_Then:
    call {:si_unique_call 916} vslice_dummy_var_201 := corral_nondet();
    goto L124;

  anon68_Then:
    call {:si_unique_call 917} vslice_dummy_var_200 := corral_nondet();
    goto L124;

  anon69_Then:
    call {:si_unique_call 918} vslice_dummy_var_199 := corral_nondet();
    goto L124;

  anon70_Then:
    call {:si_unique_call 919} vslice_dummy_var_198 := corral_nondet();
    goto L124;

  anon71_Then:
    call {:si_unique_call 920} vslice_dummy_var_197 := corral_nondet();
    goto L124;

  anon57_Then:
    goto L98;

  anon74_Then:
    status_32 := -1073741670;
    goto L124;

  anon63_Then:
    call {:si_unique_call 921} vslice_dummy_var_205 := corral_nondet();
    goto L124;

  anon56_Then:
    goto L81;

  anon73_Then:
    goto L54;

  anon55_Then:
    assume {:partition} 0 > status_32;
    call {:si_unique_call 922} sdv_ExFreePool(0);
    Tmp_966 := status_32;
    goto L1;

  anon54_Then:
    goto L29;

  L29:
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    Tmp_967 := strConst__li2bpl31;
    call {:si_unique_call 923} vslice_dummy_var_206 := RtlStringCbPrintfW(buffer_1, size_1, Tmp_967);
    goto L42;

  anon53_Then:
    goto L29;

  anon72_Then:
    assume {:partition} buffer_1 == 0;
    Tmp_966 := -1073741670;
    goto L1;

  anon60_Then:
    goto L16;

  L16:
    devType_1 := 45;
    goto L21;

  anon61_Then:
    goto L16;

  anon62_Then:
    devType_1 := 24;
    goto L21;

  anon52_Then:
    goto L16;

  anon59_Then:
    devType_1 := 34;
    goto L21;

  anon51_Then:
    goto L15;
}



procedure {:origName "DriverEntry"} DriverEntry(actual_DriverObject_3: int, actual_RegistryPath: int) returns (Tmp_998: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_998 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "DriverEntry"} DriverEntry(actual_DriverObject_3: int, actual_RegistryPath: int) returns (Tmp_998: int)
{
  var {:pointer} Tmp_999: int;
  var {:pointer} Tmp_1000: int;
  var {:scalar} sdv_428: int;
  var {:pointer} Tmp_1001: int;
  var {:pointer} Tmp_1002: int;
  var {:pointer} Tmp_1003: int;
  var {:pointer} Tmp_1004: int;
  var {:pointer} Tmp_1006: int;
  var {:pointer} Tmp_1007: int;
  var {:pointer} Tmp_1008: int;
  var {:pointer} DriverObject_3: int;

  anon0:
    DriverObject_3 := actual_DriverObject_3;
    call {:si_unique_call 924} Tmp_999 := __HAVOC_malloc(112);
    call {:si_unique_call 925} Tmp_1000 := __HAVOC_malloc(112);
    call {:si_unique_call 926} Tmp_1001 := __HAVOC_malloc(112);
    call {:si_unique_call 927} Tmp_1002 := __HAVOC_malloc(112);
    call {:si_unique_call 928} Tmp_1004 := __HAVOC_malloc(112);
    call {:si_unique_call 929} Tmp_1006 := __HAVOC_malloc(112);
    call {:si_unique_call 930} Tmp_1007 := __HAVOC_malloc(112);
    call {:si_unique_call 931} Tmp_1008 := __HAVOC_malloc(112);
    call {:si_unique_call 932} sdv_do_paged_code_check();
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_1000;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_1001;
    assume {:nonnull} Tmp_1001 != 0;
    assume Tmp_1001 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_999;
    assume {:nonnull} Tmp_999 != 0;
    assume Tmp_999 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_1008;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_1003;
    assume {:nonnull} Tmp_1003 != 0;
    assume Tmp_1003 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_1007;
    assume {:nonnull} Tmp_1007 != 0;
    assume Tmp_1007 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_1006;
    assume {:nonnull} Tmp_1006 != 0;
    assume Tmp_1006 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_1004;
    assume {:nonnull} Tmp_1004 != 0;
    assume Tmp_1004 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_1002;
    assume {:nonnull} Tmp_1002 != 0;
    assume Tmp_1002 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    call {:si_unique_call 933} sdv_428 := IoIsWdmVersionAvailable(1, 16);
    Tmp_998 := 0;
    return;
}



procedure {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_8: int, actual_uniInstanceId: int) returns (Tmp_1009: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1009 == 0 || Tmp_1009 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_8: int, actual_uniInstanceId: int) returns (Tmp_1009: int)
{
  var {:scalar} Tmp_1011: int;
  var {:pointer} Tmp_1012: int;
  var {:pointer} sdv_429: int;
  var {:pointer} Tmp_1013: int;
  var {:scalar} sdv_430: int;
  var {:scalar} Tmp_1015: int;
  var {:scalar} ntStatus_7: int;
  var {:scalar} sdv_431: int;
  var {:pointer} Tmp_1016: int;
  var {:scalar} Tmp_1017: int;
  var {:pointer} DeviceInfo_8: int;
  var {:pointer} uniInstanceId: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_80: int;

  anon0:
    DeviceInfo_8 := actual_DeviceInfo_8;
    uniInstanceId := actual_uniInstanceId;
    call {:si_unique_call 934} vslice_dummy_var_207 := __HAVOC_malloc(8);
    call {:si_unique_call 935} Tmp_1012 := __HAVOC_malloc(36);
    call {:si_unique_call 936} vslice_dummy_var_208 := __HAVOC_malloc(8);
    ntStatus_7 := 0;
    call {:si_unique_call 937} sdv_do_paged_code_check();
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_1011;
    call {:si_unique_call 938} sdv_429 := ExAllocatePoolWithTag(1, Tmp_1011, 846226035);
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_1015;
    call {:si_unique_call 939} sdv_RtlZeroMemory(0, Tmp_1015);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_1013;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_1016;
    assume {:nonnull} Tmp_1016 != 0;
    assume Tmp_1016 > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_1017;
    Tmp_1012 := strConst__li2bpl32;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc vslice_dummy_var_80;
    call {:si_unique_call 940} vslice_dummy_var_209 := RtlStringCbPrintfW(vslice_dummy_var_80, Tmp_1017, Tmp_1012);
    goto L33;

  L33:
    Tmp_1009 := ntStatus_7;
    return;

  anon3_Then:
    ntStatus_7 := -1073741670;
    goto L33;
}



procedure {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_DeviceExtension_18: int) returns (Tmp_1019: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} Tmp_1019 == 0 || Tmp_1019 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_DeviceExtension_18: int) returns (Tmp_1019: int)
{
  var {:pointer} Tmp_1020: int;
  var {:pointer} Tmp_1021: int;
  var {:pointer} Tmp_1022: int;
  var {:scalar} cnt: int;
  var {:pointer} Tmp_1023: int;
  var {:pointer} Tmp_1024: int;
  var {:pointer} Tmp_1025: int;
  var {:pointer} Tmp_1026: int;
  var {:pointer} Tmp_1027: int;
  var {:pointer} sdv_435: int;
  var {:pointer} context_3: int;
  var {:pointer} Tmp_1028: int;
  var {:pointer} Tmp_1029: int;
  var {:pointer} Tmp_1030: int;
  var {:pointer} sdv_436: int;
  var {:pointer} Tmp_1031: int;
  var {:pointer} Tmp_1032: int;
  var {:pointer} Tmp_1033: int;
  var {:pointer} sdv_437: int;
  var {:pointer} Tmp_1034: int;
  var {:pointer} Tmp_1035: int;
  var {:pointer} sdv_439: int;
  var {:pointer} sdv_440: int;
  var {:pointer} Tmp_1037: int;
  var {:pointer} Tmp_1038: int;
  var {:pointer} statusFifoElement_1: int;
  var {:scalar} status_33: int;
  var {:pointer} packet_12: int;
  var {:pointer} Tmp_1039: int;
  var {:pointer} Tmp_1040: int;
  var {:pointer} DeviceExtension_18: int;
  var boogieTmp: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;

  anon0:
    call {:si_unique_call 941} packet_12 := __HAVOC_malloc(4);
    DeviceExtension_18 := actual_DeviceExtension_18;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    call {:si_unique_call 942} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_18));
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    call {:si_unique_call 943} InitializeSListHead(FreeContextListHead__DEVICE_EXTENSION(DeviceExtension_18));
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    call {:si_unique_call 944} InitializeSListHead(BusRequestIrpIrbListHead__DEVICE_EXTENSION(DeviceExtension_18));
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    call {:si_unique_call 945} InitializeSListHead(StatusFifoListHead__DEVICE_EXTENSION(DeviceExtension_18));
    call {:si_unique_call 946} ExInitializeNPagedLookasideList(0, 0, 0, 0, 32, 846226035, 0);
    call {:si_unique_call 947} Tmp_1024 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    call {:si_unique_call 948} sdv_KeInitializeSpinLock(Tmp_1024);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    call {:si_unique_call 949} Tmp_1024 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    call {:si_unique_call 950} sdv_KeInitializeSpinLock(Tmp_1024);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    call {:si_unique_call 951} Tmp_1024 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    call {:si_unique_call 952} sdv_KeInitializeSpinLock(Tmp_1024);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    call {:si_unique_call 953} Tmp_1024 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    call {:si_unique_call 954} sdv_KeInitializeSpinLock(Tmp_1024);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    call {:si_unique_call 955} Tmp_1024 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    call {:si_unique_call 956} sdv_KeInitializeSpinLock(Tmp_1024);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    cnt := 0;
    goto L41;

  L41:
    call {:si_unique_call 957} Tmp_1022, cnt, sdv_435, sdv_439, boogieTmp, vslice_dummy_var_210 := Sbp2PreAllocateLists_loop_L41(Tmp_1022, cnt, sdv_435, sdv_439, packet_12, DeviceExtension_18, boogieTmp, vslice_dummy_var_210);
    goto L41_last;

  L41_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} 8 > cnt;
    call {:si_unique_call 958} sdv_435 := ExAllocatePoolWithTag(0, 24, 846226035);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L73;

  L73:
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    havoc vslice_dummy_var_81;
    call {:si_unique_call 959} vslice_dummy_var_211 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_81, 1);
    Tmp_1019 := -1073741670;
    goto L1;

  L1:
    return;

  anon33_Then:
    call {:si_unique_call 960} sdv_439 := ExAllocatePoolWithTag(0, 344, 846226035);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    havoc Tmp_1022;
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_82;
    call {:si_unique_call 961} boogieTmp := IoAllocateIrp(vslice_dummy_var_82, 0);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 962} vslice_dummy_var_210 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon26_Else_dummy;

  anon26_Else_dummy:
    assume false;
    return;

  anon26_Then:
    call {:si_unique_call 963} sdv_ExFreePool(0);
    call {:si_unique_call 964} sdv_ExFreePool(0);
    goto L73;

  anon34_Then:
    call {:si_unique_call 965} sdv_ExFreePool(0);
    goto L73;

  anon25_Then:
    assume {:partition} cnt >= 8;
    cnt := 640;
    call {:si_unique_call 966} sdv_436 := ExAllocatePoolWithTag(0, cnt, 846226035);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    cnt := 0;
    goto L85;

  L85:
    call {:si_unique_call 967} cnt, statusFifoElement_1, boogieTmp, vslice_dummy_var_212 := Sbp2PreAllocateLists_loop_L85(cnt, statusFifoElement_1, DeviceExtension_18, boogieTmp, vslice_dummy_var_212);
    goto L85_last;

  L85_last:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} 15 > cnt;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    havoc statusFifoElement_1;
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    call {:si_unique_call 968} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 969} vslice_dummy_var_212 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    assume false;
    return;

  anon28_Then:
    goto L73;

  anon27_Then:
    assume {:partition} cnt >= 15;
    cnt := 1600;
    call {:si_unique_call 970} sdv_437 := ExAllocatePoolWithTag(0, cnt, 846226035);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 971} sdv_RtlZeroMemory(0, cnt);
    call {:si_unique_call 972} AllocateIrpAndIrb(DeviceExtension_18, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    cnt := 0;
    goto L117;

  L117:
    call {:si_unique_call 973} Tmp_1020, Tmp_1021, cnt, Tmp_1023, Tmp_1025, Tmp_1026, Tmp_1027, context_3, Tmp_1028, Tmp_1029, Tmp_1030, Tmp_1031, Tmp_1032, Tmp_1033, Tmp_1034, Tmp_1035, sdv_440, Tmp_1037, Tmp_1038, status_33, Tmp_1039, Tmp_1040, vslice_dummy_var_213 := Sbp2PreAllocateLists_loop_L117(Tmp_1020, Tmp_1021, cnt, Tmp_1023, Tmp_1025, Tmp_1026, Tmp_1027, context_3, Tmp_1028, Tmp_1029, Tmp_1030, Tmp_1031, Tmp_1032, Tmp_1033, Tmp_1034, Tmp_1035, sdv_440, Tmp_1037, Tmp_1038, status_33, packet_12, Tmp_1039, Tmp_1040, DeviceExtension_18, vslice_dummy_var_213);
    goto L117_last;

  L117_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 8 > cnt;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    havoc context_3;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 974} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(context_3), li2bplFunctionConstant242, 0);
    call {:si_unique_call 975} KeInitializeTimer(0);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1025;
    assume {:nonnull} Tmp_1025 != 0;
    assume Tmp_1025 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1029;
    assume {:nonnull} Tmp_1029 != 0;
    assume Tmp_1029 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1026;
    assume {:nonnull} Tmp_1026 != 0;
    assume Tmp_1026 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1033;
    assume {:nonnull} Tmp_1033 != 0;
    assume Tmp_1033 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1034;
    assume {:nonnull} Tmp_1034 != 0;
    assume Tmp_1034 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1028;
    assume {:nonnull} Tmp_1028 != 0;
    assume Tmp_1028 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1037;
    assume {:nonnull} Tmp_1037 != 0;
    assume Tmp_1037 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1040;
    assume {:nonnull} Tmp_1040 != 0;
    assume Tmp_1040 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1030;
    assume {:nonnull} Tmp_1030 != 0;
    assume Tmp_1030 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1032;
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1038;
    assume {:nonnull} Tmp_1038 != 0;
    assume Tmp_1038 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1039;
    assume {:nonnull} Tmp_1039 != 0;
    assume Tmp_1039 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1031;
    assume {:nonnull} Tmp_1031 != 0;
    assume Tmp_1031 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1035;
    assume {:nonnull} Tmp_1035 != 0;
    assume Tmp_1035 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1027;
    assume {:nonnull} Tmp_1027 != 0;
    assume Tmp_1027 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1020;
    assume {:nonnull} Tmp_1020 != 0;
    assume Tmp_1020 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_83;
    call {:si_unique_call 976} status_33 := Sbp2SendRequest(DeviceExtension_18, vslice_dummy_var_83, 2);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_33 >= 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1023;
    assume {:nonnull} Tmp_1023 != 0;
    assume Tmp_1023 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    call {:si_unique_call 977} sdv_440 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1021;
    assume {:nonnull} Tmp_1021 != 0;
    assume Tmp_1021 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 978} vslice_dummy_var_213 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    assume false;
    return;

  anon31_Then:
    assume {:partition} 0 > status_33;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_84;
    call {:si_unique_call 979} DeAllocateIrpAndIrb(DeviceExtension_18, vslice_dummy_var_84);
    goto L73;

  anon30_Then:
    assume {:partition} cnt >= 8;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_85;
    call {:si_unique_call 980} DeAllocateIrpAndIrb(DeviceExtension_18, vslice_dummy_var_85);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    call {:si_unique_call 981} boogieTmp := IoAllocateMdl(0, 4, 0, 0, 0);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_1019 := 0;
    goto L1;

  anon32_Then:
    goto L73;

  anon29_Then:
    goto L73;

  anon36_Then:
    goto L73;

  anon35_Then:
    goto L73;
}



procedure {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int)
{
  var vslice_dummy_var_214: int;

  anon0:
    call {:si_unique_call 982} vslice_dummy_var_214 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_1044: int;
  var {:pointer} Lookaside_3: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;

  anon0:
    call {:si_unique_call 983} vslice_dummy_var_215 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_1044 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_1044 != 0;
    assume Tmp_1044 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L1;

  anon5_Then:
    call {:si_unique_call 984} vslice_dummy_var_216 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "Sbp2HandleRemove"} Sbp2HandleRemove(actual_DeviceObject_18: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2HandleRemove"} Sbp2HandleRemove(actual_DeviceObject_18: int)
{
  var {:scalar} i_6: int;
  var {:pointer} Tmp_1046: int;
  var {:scalar} Tmp_1047: int;
  var {:pointer} Tmp_1048: int;
  var {:scalar} Tmp_1050: int;
  var {:pointer} Tmp_1052: int;
  var {:scalar} Tmp_1053: int;
  var {:pointer} Tmp_1054: int;
  var {:pointer} Tmp_1055: int;
  var {:scalar} Tmp_1056: int;
  var {:pointer} Tmp_1057: int;
  var {:pointer} Tmp_1058: int;
  var {:scalar} Tmp_1059: int;
  var {:pointer} Tmp_1060: int;
  var {:pointer} Tmp_1061: int;
  var {:pointer} Tmp_1062: int;
  var {:pointer} Tmp_1063: int;
  var {:scalar} Tmp_1065: int;
  var {:scalar} j_1: int;
  var {:pointer} Tmp_1066: int;
  var {:pointer} Tmp_1067: int;
  var {:pointer} Tmp_1068: int;
  var {:scalar} Tmp_1069: int;
  var {:scalar} Tmp_1070: int;
  var {:scalar} Tmp_1071: int;
  var {:pointer} Tmp_1072: int;
  var {:scalar} Tmp_1073: int;
  var {:pointer} Tmp_1074: int;
  var {:scalar} Tmp_1075: int;
  var {:scalar} Tmp_1076: int;
  var {:pointer} Tmp_1077: int;
  var {:pointer} Tmp_1080: int;
  var {:pointer} Tmp_1081: int;
  var {:pointer} Tmp_1082: int;
  var {:pointer} Tmp_1083: int;
  var {:pointer} Tmp_1084: int;
  var {:scalar} Tmp_1085: int;
  var {:scalar} Tmp_1086: int;
  var {:pointer} fdoExtension_4: int;
  var {:scalar} Tmp_1087: int;
  var {:pointer} Tmp_1089: int;
  var {:pointer} Tmp_1090: int;
  var {:pointer} Tmp_1091: int;
  var {:scalar} Tmp_1092: int;
  var {:pointer} Tmp_1093: int;
  var {:pointer} Tmp_1094: int;
  var {:pointer} Tmp_1095: int;
  var {:pointer} Tmp_1096: int;
  var {:scalar} cIrql_5: int;
  var {:pointer} Tmp_1098: int;
  var {:pointer} Tmp_1099: int;
  var {:pointer} packet_13: int;
  var {:pointer} Tmp_1100: int;
  var {:pointer} Tmp_1101: int;
  var {:pointer} deviceExtension_8: int;
  var {:pointer} Tmp_1102: int;
  var {:pointer} Tmp_1103: int;
  var {:pointer} Tmp_1104: int;
  var {:scalar} Tmp_1105: int;
  var {:pointer} Tmp_1106: int;
  var {:pointer} DeviceObject_18: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;

  anon0:
    call {:si_unique_call 985} vslice_dummy_var_217 := __HAVOC_malloc(4);
    call {:si_unique_call 986} packet_13 := __HAVOC_malloc(4);
    DeviceObject_18 := actual_DeviceObject_18;
    call {:si_unique_call 987} Tmp_1048 := __HAVOC_malloc(2560);
    call {:si_unique_call 988} Tmp_1052 := __HAVOC_malloc(2560);
    call {:si_unique_call 989} Tmp_1054 := __HAVOC_malloc(2560);
    call {:si_unique_call 990} Tmp_1055 := __HAVOC_malloc(2560);
    call {:si_unique_call 991} Tmp_1058 := __HAVOC_malloc(2560);
    call {:si_unique_call 992} Tmp_1060 := __HAVOC_malloc(2560);
    call {:si_unique_call 993} Tmp_1061 := __HAVOC_malloc(2560);
    call {:si_unique_call 994} Tmp_1063 := __HAVOC_malloc(2560);
    call {:si_unique_call 995} Tmp_1066 := __HAVOC_malloc(2560);
    call {:si_unique_call 996} Tmp_1067 := __HAVOC_malloc(2560);
    call {:si_unique_call 997} Tmp_1068 := __HAVOC_malloc(2560);
    call {:si_unique_call 998} Tmp_1072 := __HAVOC_malloc(2560);
    call {:si_unique_call 999} Tmp_1074 := __HAVOC_malloc(2560);
    call {:si_unique_call 1000} Tmp_1077 := __HAVOC_malloc(2560);
    call {:si_unique_call 1001} Tmp_1081 := __HAVOC_malloc(2560);
    call {:si_unique_call 1002} Tmp_1082 := __HAVOC_malloc(2560);
    call {:si_unique_call 1003} Tmp_1083 := __HAVOC_malloc(2560);
    call {:si_unique_call 1004} Tmp_1084 := __HAVOC_malloc(2560);
    call {:si_unique_call 1005} Tmp_1089 := __HAVOC_malloc(2560);
    call {:si_unique_call 1006} Tmp_1090 := __HAVOC_malloc(2560);
    call {:si_unique_call 1007} Tmp_1091 := __HAVOC_malloc(2560);
    call {:si_unique_call 1008} Tmp_1094 := __HAVOC_malloc(2560);
    call {:si_unique_call 1009} Tmp_1095 := __HAVOC_malloc(2560);
    call {:si_unique_call 1010} Tmp_1096 := __HAVOC_malloc(2560);
    call {:si_unique_call 1011} Tmp_1098 := __HAVOC_malloc(2560);
    call {:si_unique_call 1012} Tmp_1099 := __HAVOC_malloc(2560);
    call {:si_unique_call 1013} Tmp_1100 := __HAVOC_malloc(2560);
    call {:si_unique_call 1014} Tmp_1101 := __HAVOC_malloc(2560);
    call {:si_unique_call 1015} Tmp_1102 := __HAVOC_malloc(2560);
    call {:si_unique_call 1016} Tmp_1103 := __HAVOC_malloc(2560);
    call {:si_unique_call 1017} Tmp_1104 := __HAVOC_malloc(2560);
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc deviceExtension_8;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc Tmp_1093;
    assume {:nonnull} Tmp_1093 != 0;
    assume Tmp_1093 > 0;
    havoc fdoExtension_4;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    call {:si_unique_call 1018} Tmp_1080 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1080 != 0;
    assume Tmp_1080 > 0;
    call {:si_unique_call 1019} sdv_KeAcquireSpinLock(0, Tmp_1080);
    assume {:nonnull} Tmp_1080 != 0;
    assume Tmp_1080 > 0;
    havoc cIrql_5;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    i_6 := 0;
    goto L19;

  L19:
    call {:si_unique_call 1020} i_6, Tmp_1047, Tmp_1050, Tmp_1053, Tmp_1054, Tmp_1055, Tmp_1056, Tmp_1058, Tmp_1059, Tmp_1061, Tmp_1062, Tmp_1065, j_1, Tmp_1067, Tmp_1069, Tmp_1070, Tmp_1071, Tmp_1072, Tmp_1073, Tmp_1074, Tmp_1075, Tmp_1076, Tmp_1077, Tmp_1081, Tmp_1083, Tmp_1085, Tmp_1086, Tmp_1087, Tmp_1090, Tmp_1091, Tmp_1092, Tmp_1094, Tmp_1096, Tmp_1099, Tmp_1101, deviceExtension_8, Tmp_1102, Tmp_1105 := Sbp2HandleRemove_loop_L19(i_6, Tmp_1047, Tmp_1050, Tmp_1053, Tmp_1054, Tmp_1055, Tmp_1056, Tmp_1058, Tmp_1059, Tmp_1061, Tmp_1062, Tmp_1065, j_1, Tmp_1067, Tmp_1069, Tmp_1070, Tmp_1071, Tmp_1072, Tmp_1073, Tmp_1074, Tmp_1075, Tmp_1076, Tmp_1077, Tmp_1081, Tmp_1083, Tmp_1085, Tmp_1086, fdoExtension_4, Tmp_1087, Tmp_1090, Tmp_1091, Tmp_1092, Tmp_1094, Tmp_1096, Tmp_1099, Tmp_1101, deviceExtension_8, Tmp_1102, Tmp_1105, DeviceObject_18);
    goto L19_last;

  L19_last:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_1071 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1054;
    assume {:nonnull} Tmp_1054 != 0;
    assume Tmp_1054 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    Tmp_1087 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1058;
    assume {:nonnull} Tmp_1058 != 0;
    assume Tmp_1058 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    Tmp_1050 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1081;
    assume {:nonnull} Tmp_1081 != 0;
    assume Tmp_1081 > 0;
    call {:si_unique_call 1021} sdv_ExFreePool(0);
    Tmp_1086 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1055;
    assume {:nonnull} Tmp_1055 != 0;
    assume Tmp_1055 > 0;
    Tmp_1092 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1083;
    assume {:nonnull} Tmp_1083 != 0;
    assume Tmp_1083 > 0;
    goto L24;

  L24:
    Tmp_1053 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1094;
    assume {:nonnull} Tmp_1094 != 0;
    assume Tmp_1094 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    Tmp_1070 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1074;
    assume {:nonnull} Tmp_1074 != 0;
    assume Tmp_1074 > 0;
    call {:si_unique_call 1022} sdv_ExFreePool(0);
    Tmp_1076 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1096;
    assume {:nonnull} Tmp_1096 != 0;
    assume Tmp_1096 > 0;
    Tmp_1105 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1090;
    assume {:nonnull} Tmp_1090 != 0;
    assume Tmp_1090 > 0;
    goto L31;

  L31:
    Tmp_1073 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1102;
    assume {:nonnull} Tmp_1102 != 0;
    assume Tmp_1102 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_1069 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1099;
    assume {:nonnull} Tmp_1099 != 0;
    assume Tmp_1099 > 0;
    call {:si_unique_call 1023} sdv_ExFreePool(0);
    Tmp_1059 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1061;
    assume {:nonnull} Tmp_1061 != 0;
    assume Tmp_1061 > 0;
    Tmp_1085 := i_6;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1101;
    assume {:nonnull} Tmp_1101 != 0;
    assume Tmp_1101 > 0;
    goto L38;

  L38:
    j_1 := i_6;
    goto L45;

  L45:
    call {:si_unique_call 1024} Tmp_1047, Tmp_1056, Tmp_1062, Tmp_1065, j_1, Tmp_1067, Tmp_1072, Tmp_1075, Tmp_1077, Tmp_1091, deviceExtension_8 := Sbp2HandleRemove_loop_L45(Tmp_1047, Tmp_1056, Tmp_1062, Tmp_1065, j_1, Tmp_1067, Tmp_1072, Tmp_1075, Tmp_1077, fdoExtension_4, Tmp_1091, deviceExtension_8);
    goto L45_last;

  L45_last:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    Tmp_1065 := j_1;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1067;
    Tmp_1075 := j_1 + 1;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1072;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    Tmp_1056 := j_1;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1077;
    assume {:nonnull} Tmp_1077 != 0;
    assume Tmp_1077 > 0;
    havoc Tmp_1062;
    assume {:nonnull} Tmp_1062 != 0;
    assume Tmp_1062 > 0;
    havoc deviceExtension_8;
    Tmp_1047 := j_1;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1091;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto L48;

  L48:
    j_1 := j_1 + 1;
    goto L48_dummy;

  L48_dummy:
    assume false;
    return;

  anon35_Then:
    goto L48;

  anon34_Then:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    goto L22;

  L22:
    i_6 := i_6 + 1;
    goto L22_dummy;

  L22_dummy:
    assume false;
    return;

  anon41_Then:
    goto L38;

  anon40_Then:
    goto L31;

  anon39_Then:
    goto L24;

  anon38_Then:
    goto L22;

  anon32_Then:
    goto L20;

  L20:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 1025} sdv_KeReleaseSpinLock(0, cIrql_5);
    goto L1;

  L1:
    return;

  anon33_Then:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    call {:si_unique_call 1026} sdv_KeReleaseSpinLock(0, cIrql_5);
    call {:si_unique_call 1027} AllocateIrpAndIrb(fdoExtension_4, packet_13);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1106;
    assume {:nonnull} Tmp_1106 != 0;
    assume Tmp_1106 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1046;
    assume {:nonnull} Tmp_1046 != 0;
    assume Tmp_1046 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1057;
    assume {:nonnull} Tmp_1057 != 0;
    assume Tmp_1057 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc vslice_dummy_var_86;
    call {:si_unique_call 1028} vslice_dummy_var_218 := Sbp2SendRequest(fdoExtension_4, vslice_dummy_var_86, 2);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc vslice_dummy_var_87;
    call {:si_unique_call 1029} DeAllocateIrpAndIrb(fdoExtension_4, vslice_dummy_var_87);
    goto L63;

  L63:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    goto L1;

  anon36_Then:
    goto L63;

  anon31_Then:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1089;
    assume {:nonnull} Tmp_1089 != 0;
    assume Tmp_1089 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1100;
    assume {:nonnull} Tmp_1100 != 0;
    assume Tmp_1100 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1048;
    assume {:nonnull} Tmp_1048 != 0;
    assume Tmp_1048 > 0;
    call {:si_unique_call 1030} sdv_ExFreePool(0);
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1082;
    assume {:nonnull} Tmp_1082 != 0;
    assume Tmp_1082 > 0;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1103;
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    goto L75;

  L75:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1068;
    assume {:nonnull} Tmp_1068 != 0;
    assume Tmp_1068 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1084;
    assume {:nonnull} Tmp_1084 != 0;
    assume Tmp_1084 > 0;
    call {:si_unique_call 1031} sdv_ExFreePool(0);
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1052;
    assume {:nonnull} Tmp_1052 != 0;
    assume Tmp_1052 > 0;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1104;
    assume {:nonnull} Tmp_1104 != 0;
    assume Tmp_1104 > 0;
    goto L82;

  L82:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1060;
    assume {:nonnull} Tmp_1060 != 0;
    assume Tmp_1060 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1098;
    assume {:nonnull} Tmp_1098 != 0;
    assume Tmp_1098 > 0;
    call {:si_unique_call 1032} sdv_ExFreePool(0);
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1095;
    assume {:nonnull} Tmp_1095 != 0;
    assume Tmp_1095 > 0;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1063;
    assume {:nonnull} Tmp_1063 != 0;
    assume Tmp_1063 > 0;
    goto L73;

  L73:
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1066;
    assume {:nonnull} Tmp_1066 != 0;
    assume Tmp_1066 > 0;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto L20;

  anon45_Then:
    goto L73;

  anon44_Then:
    goto L82;

  anon43_Then:
    goto L75;

  anon42_Then:
    goto L73;

  anon37_Then:
    goto L1;
}



procedure {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension(actual_DeviceExtension_19: int) returns (Tmp_1107: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension(actual_DeviceExtension_19: int) returns (Tmp_1107: int)
{
  var {:scalar} i_7: int;
  var {:pointer} Tmp_1108: int;
  var {:pointer} Tmp_1109: int;
  var {:scalar} Tmp_1110: int;
  var {:pointer} deviceObject_3: int;
  var {:scalar} Tmp_1111: int;
  var {:pointer} Tmp_1112: int;
  var {:pointer} Tmp_1113: int;
  var {:pointer} context_4: int;
  var {:pointer} Tmp_1114: int;
  var {:pointer} oldContext: int;
  var {:pointer} Tmp_1115: int;
  var {:pointer} sdv_451: int;
  var {:pointer} sdv_452: int;
  var {:pointer} Tmp_1116: int;
  var {:pointer} Tmp_1117: int;
  var {:pointer} Tmp_1118: int;
  var {:scalar} cIrql_6: int;
  var {:pointer} Tmp_1119: int;
  var {:scalar} status_34: int;
  var {:pointer} DeviceExtension_19: int;
  var vslice_dummy_var_219: int;

  anon0:
    DeviceExtension_19 := actual_DeviceExtension_19;
    call {:si_unique_call 1033} Tmp_1108 := __HAVOC_malloc(1728);
    call {:si_unique_call 1034} Tmp_1112 := __HAVOC_malloc(1728);
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc deviceObject_3;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Tmp_1107 := 0;
    goto L1;

  L1:
    return;

  anon43_Then:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1035} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_19));
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1036} status_34 := Sbp2UpdateNodeInformation(DeviceExtension_19);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_34 < 0;
    goto L61;

  L61:
    Tmp_1107 := status_34;
    goto L1;

  anon31_Then:
    assume {:partition} 0 <= status_34;
    call {:si_unique_call 1037} status_34 := Sbp2GetControllerInfo(DeviceExtension_19);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_34 < 0;
    goto L61;

  anon32_Then:
    assume {:partition} 0 <= status_34;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L34;

  L34:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L38;

  L38:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L42;

  L42:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L50;

  L50:
    i_7 := 0;
    goto L51;

  L51:
    call {:si_unique_call 1038} i_7, context_4 := Sbp2InitializeDeviceExtension_loop_L51(i_7, context_4, DeviceExtension_19);
    goto L51_last;

  L51_last:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} 8 > i_7;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc context_4;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    i_7 := i_7 + 1;
    goto anon36_Else_dummy;

  anon36_Else_dummy:
    assume false;
    return;

  anon36_Then:
    assume {:partition} i_7 >= 8;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L61;

  anon45_Then:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1039} status_34 := AllocateSingle1394Address(deviceObject_3, Dummy__DEVICE_EXTENSION(DeviceExtension_19), 32, 3, DummyContext__DEVICE_EXTENSION(DeviceExtension_19));
    goto L61;

  anon44_Then:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1040} status_34 := AllocateSingle1394Address(deviceObject_3, 0, 472, 3, CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_19));
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_34 >= 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_1116;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} Tmp_1116 != 0;
    assume Tmp_1116 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_1115;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} Tmp_1115 != 0;
    assume Tmp_1115 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_1118;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_1109;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} Tmp_1109 != 0;
    assume Tmp_1109 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_1119;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} Tmp_1119 != 0;
    assume Tmp_1119 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1041} Tmp_1117 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1117 != 0;
    assume Tmp_1117 > 0;
    call {:si_unique_call 1042} sdv_KeAcquireSpinLock(0, Tmp_1117);
    assume {:nonnull} Tmp_1117 != 0;
    assume Tmp_1117 > 0;
    havoc cIrql_6;
    i_7 := 0;
    context_4 := 0;
    goto L88;

  L88:
    call {:si_unique_call 1043} i_7, Tmp_1108, Tmp_1110, Tmp_1111, Tmp_1112, Tmp_1113, context_4, Tmp_1114, oldContext, sdv_451, sdv_452 := Sbp2InitializeDeviceExtension_loop_L88(i_7, Tmp_1108, Tmp_1110, Tmp_1111, Tmp_1112, Tmp_1113, context_4, Tmp_1114, oldContext, sdv_451, sdv_452, DeviceExtension_19);
    goto L88_last;

  L88_last:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} 8 > i_7;
    oldContext := context_4;
    call {:si_unique_call 1044} sdv_452 := sdv_ExInterlockedPopEntrySList(0, 0);
    context_4 := sdv_452;
    call {:si_unique_call 1045} sdv_451 := sdv_containing_record(context_4, 8);
    context_4 := sdv_451;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    Tmp_1110 := i_7;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_1114;
    assume {:nonnull} Tmp_1114 != 0;
    assume Tmp_1114 > 0;
    havoc Tmp_1108;
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    Tmp_1111 := i_7;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_1113;
    assume {:nonnull} Tmp_1113 != 0;
    assume Tmp_1113 > 0;
    havoc Tmp_1112;
    assume {:nonnull} Tmp_1112 != 0;
    assume Tmp_1112 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    i_7 := i_7 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    assume false;
    return;

  anon38_Then:
    assume {:partition} i_7 >= 8;
    goto L89;

  L89:
    call {:si_unique_call 1046} context_4, oldContext, vslice_dummy_var_219 := Sbp2InitializeDeviceExtension_loop_L89(context_4, oldContext, vslice_dummy_var_219);
    goto L89_last;

  L89_last:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} context_4 != 0;
    oldContext := context_4;
    call {:si_unique_call 1047} vslice_dummy_var_219 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    havoc context_4;
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    assume false;
    return;

  anon39_Then:
    assume {:partition} context_4 == 0;
    call {:si_unique_call 1048} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L50;

  anon37_Then:
    assume {:partition} 0 > status_34;
    goto L61;

  anon35_Then:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1049} status_34 := AllocateAddressForStatus(deviceObject_3, GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_19), 8);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_34 < 0;
    goto L61;

  anon40_Then:
    assume {:partition} 0 <= status_34;
    goto L42;

  anon34_Then:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1050} status_34 := AllocateAddressForStatus(deviceObject_3, ManagementOrbStatusContext__DEVICE_EXTENSION(DeviceExtension_19), 4);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_34 < 0;
    goto L61;

  anon41_Then:
    assume {:partition} 0 <= status_34;
    goto L38;

  anon33_Then:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1051} status_34 := AllocateAddressForStatus(deviceObject_3, TaskOrbStatusContext__DEVICE_EXTENSION(DeviceExtension_19), 2);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_34 < 0;
    goto L61;

  anon42_Then:
    assume {:partition} 0 <= status_34;
    goto L34;
}



procedure {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification(actual_DeviceExtension_20: int, actual_Enable: int) returns (Tmp_1120: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1120 == 1 || Tmp_1120 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification(actual_DeviceExtension_20: int, actual_Enable: int) returns (Tmp_1120: int)
{
  var {:scalar} waitValue_4: int;
  var {:pointer} Tmp_1122: int;
  var {:pointer} Tmp_1123: int;
  var {:pointer} Tmp_1124: int;
  var {:scalar} result: int;
  var {:pointer} Tmp_1125: int;
  var {:pointer} Tmp_1126: int;
  var {:pointer} fdoExtension_5: int;
  var {:pointer} Tmp_1127: int;
  var {:pointer} Tmp_1128: int;
  var {:pointer} packet_14: int;
  var {:pointer} DeviceExtension_20: int;
  var {:scalar} Enable: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;

  anon0:
    call {:si_unique_call 1052} waitValue_4 := __HAVOC_malloc(20);
    call {:si_unique_call 1053} packet_14 := __HAVOC_malloc(4);
    DeviceExtension_20 := actual_DeviceExtension_20;
    Enable := actual_Enable;
    result := 1;
    assume {:nonnull} DeviceExtension_20 != 0;
    assume DeviceExtension_20 > 0;
    havoc Tmp_1125;
    assume {:nonnull} Tmp_1125 != 0;
    assume Tmp_1125 > 0;
    havoc fdoExtension_5;
    assume {:nonnull} waitValue_4 != 0;
    assume waitValue_4 > 0;
    call {:si_unique_call 1054} vslice_dummy_var_222 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_4);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L21;

  L21:
    call {:si_unique_call 1055} vslice_dummy_var_220 := KeReleaseMutex(0, 0);
    Tmp_1120 := result;
    return;

  anon16_Then:
    goto L17;

  L17:
    call {:si_unique_call 1056} AllocateIrpAndIrb(DeviceExtension_20, packet_14);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_1126;
    assume {:nonnull} Tmp_1126 != 0;
    assume Tmp_1126 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_1124;
    assume {:nonnull} Tmp_1124 != 0;
    assume Tmp_1124 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_1123;
    assume {:nonnull} Tmp_1123 != 0;
    assume Tmp_1123 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_1128;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_1122;
    assume {:nonnull} Tmp_1122 != 0;
    assume Tmp_1122 > 0;
    goto L34;

  L34:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc vslice_dummy_var_88;
    call {:si_unique_call 1057} vslice_dummy_var_221 := Sbp2SendRequest(DeviceExtension_20, vslice_dummy_var_88, 2);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc vslice_dummy_var_89;
    call {:si_unique_call 1058} DeAllocateIrpAndIrb(DeviceExtension_20, vslice_dummy_var_89);
    goto L21;

  anon17_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_1127;
    assume {:nonnull} Tmp_1127 != 0;
    assume Tmp_1127 > 0;
    goto L34;

  anon14_Then:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto L40;

  L40:
    result := 0;
    goto L21;

  anon15_Then:
    assume {:partition} Enable == 0;
    goto L40;

  anon13_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L21;

  anon18_Then:
    goto L17;
}



procedure {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_1: int, actual_DeviceRelations: int) returns (Tmp_1129: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_1: int, actual_DeviceRelations: int) returns (Tmp_1129: int)
{
  var {:scalar} i_8: int;
  var {:scalar} Tmp_1130: int;
  var {:pointer} Tmp_1131: int;
  var {:scalar} Tmp_1132: int;
  var {:scalar} Tmp_1133: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} Tmp_1134: int;
  var {:pointer} Tmp_1135: int;
  var {:pointer} Tmp_1136: int;
  var {:scalar} Tmp_1137: int;
  var {:scalar} Tmp_1139: int;
  var {:scalar} Tmp_1140: int;
  var {:scalar} Tmp_1141: int;
  var {:pointer} Tmp_1142: int;
  var {:scalar} Tmp_1143: int;
  var {:scalar} Tmp_1144: int;
  var {:scalar} Tmp_1146: int;
  var {:pointer} Tmp_1147: int;
  var {:pointer} Tmp_1148: int;
  var {:scalar} status_35: int;
  var {:scalar} instanceNum: int;
  var {:scalar} Tmp_1150: int;
  var {:pointer} Tmp_1151: int;
  var {:pointer} Tmp_1152: int;
  var {:pointer} Tmp_1153: int;
  var {:pointer} Tmp_1154: int;
  var {:pointer} FdoExtension_1: int;
  var {:pointer} DeviceRelations: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;

  anon0:
    FdoExtension_1 := actual_FdoExtension_1;
    DeviceRelations := actual_DeviceRelations;
    call {:si_unique_call 1059} Tmp_1131 := __HAVOC_malloc(2560);
    call {:si_unique_call 1060} Tmp_1134 := __HAVOC_malloc(2560);
    call {:si_unique_call 1061} Tmp_1135 := __HAVOC_malloc(4);
    call {:si_unique_call 1062} Tmp_1136 := __HAVOC_malloc(2560);
    call {:si_unique_call 1063} Tmp_1142 := __HAVOC_malloc(4);
    call {:si_unique_call 1064} Tmp_1147 := __HAVOC_malloc(2560);
    call {:si_unique_call 1065} Tmp_1151 := __HAVOC_malloc(2560);
    call {:si_unique_call 1066} Tmp_1152 := __HAVOC_malloc(2560);
    call {:si_unique_call 1067} Tmp_1154 := __HAVOC_malloc(2560);
    call {:si_unique_call 1068} sdv_do_paged_code_check();
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    call {:si_unique_call 1069} status_35 := Sbp2Get1394ConfigInfo(FdoExtension_1, 0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_35 >= 0;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1070} sdv_ExFreePool(0);
    Tmp_1129 := -1073741823;
    goto L1;

  L1:
    return;

  anon18_Then:
    i_8 := 0;
    goto L24;

  L24:
    call {:si_unique_call 1071} i_8, Tmp_1130, Tmp_1131, Tmp_1132, Tmp_1133, pdoExtension_2, Tmp_1134, Tmp_1135, Tmp_1136, Tmp_1137, Tmp_1139, Tmp_1140, Tmp_1141, Tmp_1142, Tmp_1143, Tmp_1144, Tmp_1146, Tmp_1147, Tmp_1148, status_35, instanceNum, Tmp_1150, Tmp_1151, Tmp_1152, Tmp_1153, Tmp_1154, vslice_dummy_var_223, vslice_dummy_var_224 := Sbp2CreateDeviceRelations_loop_L24(i_8, Tmp_1130, Tmp_1131, Tmp_1132, Tmp_1133, pdoExtension_2, Tmp_1134, Tmp_1135, Tmp_1136, Tmp_1137, Tmp_1139, Tmp_1140, Tmp_1141, Tmp_1142, Tmp_1143, Tmp_1144, Tmp_1146, Tmp_1147, Tmp_1148, status_35, instanceNum, Tmp_1150, Tmp_1151, Tmp_1152, Tmp_1153, Tmp_1154, FdoExtension_1, DeviceRelations, vslice_dummy_var_223, vslice_dummy_var_224);
    goto L24_last;

  L24_last:
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Tmp_1143 := i_8;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    havoc Tmp_1134;
    assume {:nonnull} Tmp_1134 != 0;
    assume Tmp_1134 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    Tmp_1144 := i_8;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    havoc Tmp_1136;
    assume {:nonnull} Tmp_1136 != 0;
    assume Tmp_1136 > 0;
    havoc Tmp_1148;
    assume {:nonnull} Tmp_1148 != 0;
    assume Tmp_1148 > 0;
    havoc pdoExtension_2;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L36;

  L36:
    i_8 := i_8 + 1;
    goto L36_dummy;

  L36_dummy:
    assume false;
    return;

  anon24_Then:
    goto L30;

  L30:
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_1130;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_1135;
    Tmp_1150 := i_8;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    havoc Tmp_1151;
    assume {:nonnull} Tmp_1135 != 0;
    assume Tmp_1135 > 0;
    assume {:nonnull} Tmp_1151 != 0;
    assume Tmp_1151 > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_1146 := i_8;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    havoc Tmp_1152;
    assume {:nonnull} Tmp_1152 != 0;
    assume Tmp_1152 > 0;
    call {:si_unique_call 1072} vslice_dummy_var_223 := sdv_ObReferenceObject(0);
    goto L36;

  anon20_Then:
    goto L30;

  anon23_Then:
    instanceNum := 0;
    goto L40;

  L40:
    call {:si_unique_call 1073} Tmp_1132, Tmp_1137, Tmp_1140, status_35, instanceNum, Tmp_1153, Tmp_1154 := Sbp2CreateDeviceRelations_loop_L40(i_8, Tmp_1132, Tmp_1137, Tmp_1140, status_35, instanceNum, Tmp_1153, Tmp_1154, FdoExtension_1);
    goto L40_last;

  L40_last:
    Tmp_1132 := instanceNum;
    instanceNum := instanceNum + 1;
    Tmp_1137 := Tmp_1132;
    Tmp_1140 := i_8;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    havoc Tmp_1154;
    Tmp_1153 := Tmp_1154 + Tmp_1140 * 256;
    call {:si_unique_call 1077} status_35 := Sbp2CreatePdo(FdoExtension_1, Tmp_1153, Tmp_1137);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_35 != -1073741771;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} status_35 >= 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_1141;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_1142;
    Tmp_1133 := i_8;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    havoc Tmp_1147;
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    assume {:nonnull} Tmp_1147 != 0;
    assume Tmp_1147 > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_1139 := i_8;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    havoc Tmp_1131;
    assume {:nonnull} Tmp_1131 != 0;
    assume Tmp_1131 > 0;
    call {:si_unique_call 1074} vslice_dummy_var_224 := sdv_ObReferenceObject(0);
    goto L36;

  anon22_Then:
    assume {:partition} 0 > status_35;
    call {:si_unique_call 1075} sdv_ExFreePool(0);
    Tmp_1129 := status_35;
    goto L1;

  anon21_Then:
    assume {:partition} status_35 == -1073741771;
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    assume false;
    return;

  anon19_Then:
    Tmp_1129 := 0;
    goto L1;

  anon17_Then:
    assume {:partition} 0 > status_35;
    call {:si_unique_call 1076} sdv_ExFreePool(0);
    Tmp_1129 := status_35;
    goto L1;
}



procedure {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_19: int) returns (Tmp_1155: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_19: int) returns (Tmp_1155: int)
{
  var {:scalar} enabledBusResetNotification: int;
  var {:scalar} errorId: int;
  var {:scalar} waitValue_5: int;
  var {:pointer} Tmp_1156: int;
  var {:scalar} Tmp_1157: int;
  var {:pointer} errorLogEntry_1: int;
  var {:pointer} Tmp_1158: int;
  var {:pointer} fdoExtension_6: int;
  var {:scalar} temp_2: int;
  var {:scalar} sdv_483: int;
  var {:pointer} Tmp_1159: int;
  var {:pointer} Tmp_1160: int;
  var {:scalar} status_36: int;
  var {:pointer} deviceExtension_9: int;
  var {:pointer} sdv_485: int;
  var {:pointer} DeviceObject_19: int;
  var boogieTmp: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;

  anon0:
    call {:si_unique_call 1078} waitValue_5 := __HAVOC_malloc(20);
    DeviceObject_19 := actual_DeviceObject_19;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    havoc deviceExtension_9;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    havoc fdoExtension_6;
    enabledBusResetNotification := 0;
    call {:si_unique_call 1079} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc vslice_dummy_var_90;
    call {:si_unique_call 1080} vslice_dummy_var_225 := Sbp2ConfigLegacyDevice(DeviceObject_19, vslice_dummy_var_90);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L21;

  L21:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1081} KeInitializeDpc(DeviceManagementTimeoutDpc__DEVICE_EXTENSION(deviceExtension_9), li2bplFunctionConstant240, 0);
    call {:si_unique_call 1082} KeInitializeTimer(0);
    call {:si_unique_call 1083} Tmp_1158 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1084} sdv_KeInitializeSpinLock(Tmp_1158);
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1085} Tmp_1158 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1086} sdv_KeInitializeSpinLock(Tmp_1158);
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1087} Tmp_1158 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1088} sdv_KeInitializeSpinLock(Tmp_1158);
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1089} Tmp_1158 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1090} sdv_KeInitializeSpinLock(Tmp_1158);
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1091} Tmp_1158 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1092} sdv_KeInitializeSpinLock(Tmp_1158);
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1093} status_36 := Sbp2InitializeDeviceExtension(deviceExtension_9);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_36 < 0;
    goto L92;

  L92:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_36 < 0;
    errorId := 1114;
    call {:si_unique_call 1094} sdv_485 := IoAllocateErrorLogEntry(0, 48);
    errorLogEntry_1 := sdv_485;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} errorLogEntry_1 != 0;
    assume {:nonnull} errorLogEntry_1 != 0;
    assume errorLogEntry_1 > 0;
    assume {:nonnull} errorLogEntry_1 != 0;
    assume errorLogEntry_1 > 0;
    assume {:nonnull} errorLogEntry_1 != 0;
    assume errorLogEntry_1 > 0;
    assume {:nonnull} errorLogEntry_1 != 0;
    assume errorLogEntry_1 > 0;
    call {:si_unique_call 1095} IoWriteErrorLogEntry(0);
    goto L105;

  L105:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} enabledBusResetNotification != 0;
    call {:si_unique_call 1096} vslice_dummy_var_228 := Sbp2EnableBusResetNotification(deviceExtension_9, 0);
    goto L97;

  L97:
    Tmp_1155 := status_36;
    return;

  anon80_Then:
    assume {:partition} enabledBusResetNotification == 0;
    goto L97;

  anon79_Then:
    assume {:partition} errorLogEntry_1 == 0;
    goto L105;

  anon65_Then:
    assume {:partition} 0 <= status_36;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    goto L97;

  anon66_Then:
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    goto L97;

  anon58_Then:
    assume {:partition} 0 <= status_36;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc Tmp_1160;
    assume {:nonnull} Tmp_1160 != 0;
    assume Tmp_1160 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Tmp_1160 != 0;
    assume Tmp_1160 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Tmp_1160 != 0;
    assume Tmp_1160 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto L53;

  L53:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto L50;

  L50:
    call {:si_unique_call 1097} status_36 := Sbp2ManagementTransaction(deviceExtension_9, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_36 >= 0;
    goto L58;

  L58:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1098} vslice_dummy_var_226 := Sbp2AccessRegister(deviceExtension_9, Reserved__DEVICE_EXTENSION(deviceExtension_9), 258);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1099} vslice_dummy_var_227 := Sbp2AccessRegister(deviceExtension_9, Reserved__DEVICE_EXTENSION(deviceExtension_9), 272);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1100} boogieTmp := PoRegisterDeviceForIdleDetection(0, -1, -1, 4);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1101} sdv_483 := Sbp2EnableBusResetNotification(deviceExtension_9, 1);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_483 != 0;
    enabledBusResetNotification := 1;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    call {:si_unique_call 1102} status_36 := Sbp2IssueInternalCommand(deviceExtension_9, 18);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} status_36 < 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_36 == -1073741632;
    goto L86;

  L86:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1103} vslice_dummy_var_235 := Sbp2ManagementTransaction(deviceExtension_9, 7);
    status_36 := -1073741435;
    goto L92;

  anon63_Then:
    assume {:partition} status_36 != -1073741632;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_36 != 17;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    status_36 := 0;
    goto L78;

  L78:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc Tmp_1159;
    assume {:nonnull} Tmp_1159 != 0;
    assume Tmp_1159 > 0;
    havoc Tmp_1157;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc Tmp_1156;
    assume {:nonnull} Tmp_1156 != 0;
    assume Tmp_1156 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto L120;

  L120:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L123;

  L123:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} status_36 >= 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1104} CleanupOrbList(deviceExtension_9, -1073741248);
    call {:si_unique_call 1105} vslice_dummy_var_229 := Sbp2ManagementTransaction(deviceExtension_9, 7);
    goto L92;

  anon69_Then:
    assume {:partition} 0 > status_36;
    goto L92;

  anon67_Then:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_36 >= 0;
    call {:si_unique_call 1106} status_36 := Sbp2IssueInternalCommand(deviceExtension_9, 26);
    goto L92;

  anon71_Then:
    assume {:partition} 0 > status_36;
    goto L92;

  anon70_Then:
    goto L92;

  anon68_Then:
    goto L123;

  anon78_Then:
    goto L120;

  anon64_Then:
    assume {:partition} status_36 == 17;
    goto L86;

  anon62_Then:
    assume {:partition} 0 <= status_36;
    goto L78;

  anon77_Then:
    goto L78;

  anon61_Then:
    assume {:partition} sdv_483 == 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1107} CleanupOrbList(deviceExtension_9, -1073741248);
    call {:si_unique_call 1108} vslice_dummy_var_230 := Sbp2ManagementTransaction(deviceExtension_9, 7);
    status_36 := -1073741670;
    goto L92;

  anon59_Then:
    assume {:partition} 0 > status_36;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} status_36 == -1073741790;
    call {:si_unique_call 1109} vslice_dummy_var_231 := Sbp2ManagementTransaction(deviceExtension_9, 1);
    goto L149;

  L149:
    temp_2 := 0;
    goto L154;

  L154:
    call {:si_unique_call 1110} temp_2, status_36, vslice_dummy_var_232, vslice_dummy_var_233, vslice_dummy_var_234 := Sbp2StartDevice_loop_L154(waitValue_5, temp_2, status_36, deviceExtension_9, vslice_dummy_var_232, vslice_dummy_var_233, vslice_dummy_var_234);
    goto L154_last;

  L154_last:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 1111} vslice_dummy_var_232 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_9));
    assume {:nonnull} waitValue_5 != 0;
    assume waitValue_5 > 0;
    call {:si_unique_call 1112} status_36 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_5);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc vslice_dummy_var_91;
    call {:si_unique_call 1113} vslice_dummy_var_233 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_91, 0);
    call {:si_unique_call 1114} vslice_dummy_var_234 := Sbp2InitializeDeviceExtension(deviceExtension_9);
    call {:si_unique_call 1115} status_36 := Sbp2ManagementTransaction(deviceExtension_9, 0);
    temp_2 := temp_2 + 1;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_36 == -1073741248;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} 3 < temp_2;
    goto L174;

  L174:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_36 < 0;
    goto L92;

  anon72_Then:
    assume {:partition} 0 <= status_36;
    goto L58;

  anon73_Then:
    assume {:partition} temp_2 <= 3;
    goto anon73_Then_dummy;

  anon73_Then_dummy:
    assume false;
    return;

  anon81_Then:
    assume {:partition} status_36 != -1073741248;
    goto L174;

  anon60_Then:
    assume {:partition} status_36 != -1073741790;
    goto L149;

  anon74_Then:
    goto L50;

  anon75_Then:
    goto L53;

  anon76_Then:
    goto L53;

  anon57_Then:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto L21;

  anon55_Then:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    status_36 := 0;
    goto L97;

  anon56_Then:
    status_36 := -1073741810;
    goto L97;
}



procedure {:origName "SLIC_IoDeleteDevice_entry"} {:osmodel} SLIC_IoDeleteDevice_entry(actual_caller: int, actual_IoDeleteDevice_1: int);
  modifies device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_IoDeleteDevice_entry"} {:osmodel} SLIC_IoDeleteDevice_entry(actual_caller: int, actual_IoDeleteDevice_1: int)
{
  var {:pointer} IoDeleteDevice_1: int;

  anon0:
    IoDeleteDevice_1 := actual_IoDeleteDevice_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} IoDeleteDevice_1 == sdv_p_devobj_fdo;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} t == 1;
    device := 1;
    goto L2;

  L2:
    return;

  anon6_Then:
    assume {:partition} t != 1;
    goto L2;

  anon5_Then:
    assume {:partition} IoDeleteDevice_1 != sdv_p_devobj_fdo;
    goto L2;
}



procedure {:origName "SLIC_sdv_RunRemoveDevice_exit"} SLIC_sdv_RunRemoveDevice_exit(actual_caller_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_RunRemoveDevice_exit"} SLIC_sdv_RunRemoveDevice_exit(actual_caller_1: int)
{

  anon0:
    call {:si_unique_call 1116} SLIC_EXIT_ROUTINE(strConst__li2bpl33);
    return;
}



procedure {:origName "SLIC_sdv_RunRemoveDevice_entry"} {:osmodel} SLIC_sdv_RunRemoveDevice_entry(actual_caller_2: int, actual_sdv_486: int);
  modifies t;
  free ensures {:va_keep} old(t) == 1 ==> t != 0;
  free ensures {:va_keep} old(t) == 0 ==> t != 0;
  free ensures {:va_keep} t == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_RunRemoveDevice_entry"} {:osmodel} SLIC_sdv_RunRemoveDevice_entry(actual_caller_2: int, actual_sdv_486: int)
{
  var {:pointer} Tmp_1161: int;
  var {:pointer} sdv_486: int;

  anon0:
    sdv_486 := actual_sdv_486;
    assume {:nonnull} sdv_486 != 0;
    assume sdv_486 > 0;
    havoc Tmp_1161;
    assume {:nonnull} Tmp_1161 != 0;
    assume Tmp_1161 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    t := 1;
    goto L2;

  L2:
    return;

  anon3_Then:
    call {:si_unique_call 1117} SLIC_EXIT_ROUTINE(strConst__li2bpl33);
    goto L2;
}



procedure {:origName "_sdv_init17"} {:osmodel} _sdv_init17();
  modifies SLAM_guard_O_0, device, t, yogi_error;
  free ensures {:va_keep} old(device) == 1 ==> device != 1;
  free ensures {:va_keep} old(device) == 0 ==> device != 1;
  free ensures {:va_keep} old(t) == 1 ==> t != 1;
  free ensures {:va_keep} old(t) == 0 ==> t != 1;
  free ensures {:va_keep} old(SLAM_guard_O_0) == old(SLAM_guard_O_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} t == 0;
  free ensures {:va_keep} device == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init17"} {:osmodel} _sdv_init17()
{

  anon0:
    SLAM_guard_O_0 := SLAM_guard_O_0_init;
    device := 0;
    t := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_sdv_IoCallDriver_exit"} {:osmodel} SLIC_sdv_IoCallDriver_exit(actual_caller_5: int);
  modifies yogi_error;
  free ensures {:va_keep} old(device) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(device) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(device) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_IoCallDriver_exit"} {:osmodel} SLIC_sdv_IoCallDriver_exit(actual_caller_5: int)
{
  var {:pointer} caller_5: int;

  anon0:
    caller_5 := actual_caller_5;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} device != 1;
    call {:si_unique_call 1118} SLIC_EXIT_ROUTINE(strConst__li2bpl33);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon5_Then:
    assume {:partition} device == 1;
    call {:si_unique_call 1119} SLIC_ABORT_5_0(caller_5);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "SLIC_ABORT_5_0"} SLIC_ABORT_5_0(actual_caller_6: int);
  modifies yogi_error;
  free ensures {:va_keep} old(device) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(device) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_ABORT_5_0"} SLIC_ABORT_5_0(actual_caller_6: int)
{
  var {:pointer} caller_6: int;

  anon0:
    caller_6 := actual_caller_6;
    call {:si_unique_call 1120} SLIC_ERROR_ROUTINE(strConst__li2bpl34);
    return;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(device) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(device) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.AR_Length__ADDRESS_RANGE"} {:fieldname "AR_Length"} AR_Length__ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AddDevice__DRIVER_EXTENSION"} {:fieldname "AddDevice"} AddDevice__DRIVER_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "AddressContext"} AddressContext__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "AddressHandle"} AddressHandle__ADDRESS_CONTEXT(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "Address"} Address__ADDRESS_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "AddressesReturned"} AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.AlignmentRequirement__DEVICE_OBJECT"} {:fieldname "AlignmentRequirement"} AlignmentRequirement__DEVICE_OBJECT(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.AllocateAddressRange_unnamed_tag_67"} {:fieldname "AllocateAddressRange"} AllocateAddressRange_unnamed_tag_67(x: int) : int
{
  x + 472
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__CDB6INQUIRY"} {:fieldname "AllocationLength"} AllocationLength__CDB6INQUIRY(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__MODE_SENSE"} {:fieldname "AllocationLength"} AllocationLength__MODE_SENSE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.AppendToNextContextToFree__DEVICE_EXTENSION"} {:fieldname "AppendToNextContextToFree"} AppendToNextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 356
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_40"} {:fieldname "Argument1"} Argument1_unnamed_tag_40(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncContextBase__DEVICE_EXTENSION"} {:fieldname "AsyncContextBase"} AsyncContextBase__DEVICE_EXTENSION(x: int) : int
{
  x + 4028
}

function {:inline true} {:fieldmap "Mem_T.AsyncRead_unnamed_tag_67"} {:fieldname "AsyncRead"} AsyncRead_unnamed_tag_67(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncReqCtx__ARCP_ORB"} {:fieldname "AsyncReqCtx"} AsyncReqCtx__ARCP_ORB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncWrite_unnamed_tag_67"} {:fieldname "AsyncWrite"} AsyncWrite_unnamed_tag_67(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BlockDescriptorLength__MODE_PARAMETER_HEADER"} {:fieldname "BlockDescriptorLength"} BlockDescriptorLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BlockLength__MODE_PARAMETER_BLOCK"} {:fieldname "BlockLength"} BlockLength__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Buffer__STRING"} {:fieldname "Buffer"} Buffer__STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Buffer"} Buffer_unnamed_tag_71(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BusAddress__OCTLET"} {:fieldname "BusAddress"} BusAddress__OCTLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusFdo__DEVICE_EXTENSION"} {:fieldname "BusFdo"} BusFdo__DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "BusRequestContextPool"} BusRequestContextPool__DEVICE_EXTENSION(x: int) : int
{
  x + 3892
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "BusRequestIrpIrbListHead"} BusRequestIrpIrbListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4004
}

function {:inline true} {:fieldmap "Mem_T.BusRequestLock__DEVICE_EXTENSION"} {:fieldname "BusRequestLock"} BusRequestLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4020
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotification_unnamed_tag_67"} {:fieldname "BusResetNotification"} BusResetNotification_unnamed_tag_67(x: int) : int
{
  x + 1060
}

function {:inline true} {:fieldmap "Mem_T.Busy__KDEVICE_QUEUE"} {:fieldname "Busy"} Busy__KDEVICE_QUEUE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte0_unnamed_tag_65"} {:fieldname "Byte0"} Byte0_unnamed_tag_65(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Byte1_unnamed_tag_65"} {:fieldname "Byte1"} Byte1_unnamed_tag_65(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Byte2_unnamed_tag_65"} {:fieldname "Byte2"} Byte2_unnamed_tag_65(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Byte3_unnamed_tag_65"} {:fieldname "Byte3"} Byte3_unnamed_tag_65(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Byte4_unnamed_tag_65"} {:fieldname "Byte4"} Byte4_unnamed_tag_65(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Byte5_unnamed_tag_65"} {:fieldname "Byte5"} Byte5_unnamed_tag_65(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte6_unnamed_tag_65"} {:fieldname "Byte6"} Byte6_unnamed_tag_65(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Byte7_unnamed_tag_65"} {:fieldname "Byte7"} Byte7_unnamed_tag_65(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ByteArray__OCTLET"} {:fieldname "ByteArray"} ByteArray__OCTLET(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.CDB10__CDB"} {:fieldname "CDB10"} CDB10__CDB(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.CDB6GENERIC__CDB"} {:fieldname "CDB6GENERIC"} CDB6GENERIC__CDB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CDB6INQUIRY__CDB"} {:fieldname "CDB6INQUIRY"} CDB6INQUIRY__CDB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.CR_Node_UniqueID__CONFIG_ROM"} {:fieldname "CR_Node_UniqueID"} CR_Node_UniqueID__CONFIG_ROM(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Callback"} Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CdbLength__SCSI_REQUEST_BLOCK"} {:fieldname "CdbLength"} CdbLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Cdb"} Cdb__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Characteristics__DEVICE_OBJECT"} {:fieldname "Characteristics"} Characteristics__DEVICE_OBJECT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.CmdOrbAddress__ASYNC_REQUEST_CONTEXT"} {:fieldname "CmdOrbAddress"} CmdOrbAddress__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.CmdOrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "CmdOrb"} CmdOrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.P_ARCP_ORB"} {:fieldname "CmdOrbs"} CmdOrbs__COMMON_BUFFER_DATA(x: int) : int
{
  x + 916
}

function {:inline true} {:fieldmap "Mem_T.CmdSetId__DEVICE_INFORMATION"} {:fieldname "CmdSetId"} CmdSetId__DEVICE_INFORMATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.CmdSetSpecId__DEVICE_INFORMATION"} {:fieldname "CmdSetSpecId"} CmdSetSpecId__DEVICE_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "CommonBufferContext"} CommonBufferContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1432
}

function {:inline true} {:fieldmap "Mem_T.CommonBuffer__DEVICE_EXTENSION"} {:fieldname "CommonBuffer"} CommonBuffer__DEVICE_EXTENSION(x: int) : int
{
  x + 1428
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Complete"} Complete__REQUEST_CONTEXT(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__DEVICE_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__DEVICE_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._CONFIG_ROM"} {:fieldname "ConfigRom"} ConfigRom__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 2752
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Context"} Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Control__CDB6INQUIRY"} {:fieldname "Control"} Control__CDB6INQUIRY(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Count__DEVICE_RELATIONS"} {:fieldname "Count"} Count__DEVICE_RELATIONS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CrashDumpCount__DEVICE_EXTENSION"} {:fieldname "CrashDumpCount"} CrashDumpCount__DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.CsrRegisterBase__DEVICE_INFORMATION"} {:fieldname "CsrRegisterBase"} CsrRegisterBase__DEVICE_INFORMATION(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_Low__LOGIN_RESPONSE"} {:fieldname "Csr_Off_Low"} Csr_Off_Low__LOGIN_RESPONSE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CurrentGeneration__DEVICE_EXTENSION"} {:fieldname "CurrentGeneration"} CurrentGeneration__DEVICE_EXTENSION(x: int) : int
{
  x + 1008
}

function {:inline true} {:fieldmap "Mem_T.CurrentKey__DEVICE_EXTENSION"} {:fieldname "CurrentKey"} CurrentKey__DEVICE_EXTENSION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_6"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_6(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.DI_Length__DIRECTORY_INFO"} {:fieldname "DI_Length"} DI_Length__DIRECTORY_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "DataBuffer"} DataBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DataDescriptor__ORB_NORMAL_CMD"} {:fieldname "DataDescriptor"} DataDescriptor__ORB_NORMAL_CMD(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "DataMappingHandle"} DataMappingHandle__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.DataTransferLength__SCSI_REQUEST_BLOCK"} {:fieldname "DataTransferLength"} DataTransferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Data"} Data__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE"} {:fieldname "Dbd"} Dbd__MODE_SENSE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE10"} {:fieldname "Dbd"} Dbd__MODE_SENSE10(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "DeferredPowerRequest"} DeferredPowerRequest__DEVICE_EXTENSION(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DensityCode__MODE_PARAMETER_BLOCK"} {:fieldname "DensityCode"} DensityCode__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_READ"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_WRITE"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__REQUEST_CONTEXT"} {:fieldname "DeviceExtension"} DeviceExtension__REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceInfo__DEVICE_EXTENSION"} {:fieldname "DeviceInfo"} DeviceInfo__DEVICE_EXTENSION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListEntry"} DeviceListEntry__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListHead"} DeviceListHead__KDEVICE_QUEUE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceListLock__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceListLock"} DeviceListLock__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.DeviceListSize__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceListSize"} DeviceListSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.DeviceList__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceList"} DeviceList__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "DeviceManagementTimeoutDpc"} DeviceManagementTimeoutDpc__DEVICE_EXTENSION(x: int) : int
{
  x + 4036
}

function {:inline true} {:fieldmap "Mem_T._MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "DeviceModeHeaderAndPage"} DeviceModeHeaderAndPage__DEVICE_EXTENSION(x: int) : int
{
  x + 904
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ADDRESS_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ADDRESS_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ASYNC_REQUEST_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.P_DEVICE_OBJECT"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 360
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__FDO_DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE_ENTRY"} {:fieldname "DeviceQueueEntry"} DeviceQueueEntry_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE"} {:fieldname "DeviceQueue"} DeviceQueue__DEVICE_OBJECT(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.DeviceSpecificParameter__MODE_PARAMETER_HEADER"} {:fieldname "DeviceSpecificParameter"} DeviceSpecificParameter__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_33"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_33(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__INQUIRYDATA"} {:fieldname "DeviceType"} DeviceType__INQUIRYDATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.DirectoryHeader_unnamed_tag_73"} {:fieldname "DirectoryHeader"} DirectoryHeader_unnamed_tag_73(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DriverExtension__DRIVER_OBJECT"} {:fieldname "DriverExtension"} DriverExtension__DRIVER_OBJECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DriverStartIo__DRIVER_OBJECT"} {:fieldname "DriverStartIo"} DriverStartIo__DRIVER_OBJECT(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DriverUnload__DRIVER_OBJECT"} {:fieldname "DriverUnload"} DriverUnload__DRIVER_OBJECT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DueTime__DEVICE_EXTENSION"} {:fieldname "DueTime"} DueTime__DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "DummyContext"} DummyContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1256
}

function {:inline true} {:fieldmap "Mem_T._ORB_NORMAL_CMD"} {:fieldname "Dummy"} Dummy__DEVICE_EXTENSION(x: int) : int
{
  x + 1044
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "Event"} Event__REQUEST_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ExtensionDataSpinLock__DEVICE_EXTENSION"} {:fieldname "ExtensionDataSpinLock"} ExtensionDataSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4032
}

function {:inline true} {:fieldmap "Mem_T.FifoMdl__ADDRESS_FIFO"} {:fieldname "FifoMdl"} FifoMdl__ADDRESS_FIFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSListHead"} FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSpinLock"} FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirmwareVersion__DEVICE_INFORMATION"} {:fieldname "FirmwareVersion"} FirmwareVersion__DEVICE_INFORMATION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.Flags__ASYNC_REQUEST_CONTEXT"} {:fieldname "Flags"} Flags__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRB"} {:fieldname "Flags"} Flags__IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FreeAddressRange_unnamed_tag_67"} {:fieldname "FreeAddressRange"} FreeAddressRange_unnamed_tag_67(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "FreeContextListHead"} FreeContextListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 3876
}

function {:inline true} {:fieldmap "Mem_T.FreeContextLock__DEVICE_EXTENSION"} {:fieldname "FreeContextLock"} FreeContextLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4024
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FunctionNumber__IRB"} {:fieldname "FunctionNumber"} FunctionNumber__IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Function__SCSI_REQUEST_BLOCK"} {:fieldname "Function"} Function__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__IRB_REQ_GET_GENERATION_COUNT"} {:fieldname "GenerationCount"} GenerationCount__IRB_REQ_GET_GENERATION_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Get1394AddressFromDeviceObject_unnamed_tag_67"} {:fieldname "Get1394AddressFromDeviceObject"} Get1394AddressFromDeviceObject_unnamed_tag_67(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.GetConfigurationInformation_unnamed_tag_67"} {:fieldname "GetConfigurationInformation"} GetConfigurationInformation_unnamed_tag_67(x: int) : int
{
  x + 880
}

function {:inline true} {:fieldmap "Mem_T.GetGenerationCount_unnamed_tag_67"} {:fieldname "GetGenerationCount"} GetGenerationCount_unnamed_tag_67(x: int) : int
{
  x + 976
}

function {:inline true} {:fieldmap "Mem_T.GetLocalHostInformation_unnamed_tag_67"} {:fieldname "GetLocalHostInformation"} GetLocalHostInformation_unnamed_tag_67(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.GetMaxSpeedBetweenDevices_unnamed_tag_67"} {:fieldname "GetMaxSpeedBetweenDevices"} GetMaxSpeedBetweenDevices_unnamed_tag_67(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "GlobalStatusContext"} GlobalStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3680
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "HibernateCount"} HibernateCount__DEVICE_EXTENSION(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HighQuad_unnamed_tag_64"} {:fieldname "HighQuad"} HighQuad_unnamed_tag_64(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO2"} {:fieldname "HostControllerInformation"} HostControllerInformation__DEVICE_EXTENSION(x: int) : int
{
  x + 1024
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO4"} {:fieldname "HostRoutineAPI"} HostRoutineAPI__DEVICE_EXTENSION(x: int) : int
{
  x + 1036
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_ID__IO_ADDRESS"} {:fieldname "IA_Destination_ID"} IA_Destination_ID__IO_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_Offset__IO_ADDRESS"} {:fieldname "IA_Destination_Offset"} IA_Destination_Offset__IO_ADDRESS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IReserved__CDB6INQUIRY"} {:fieldname "IReserved"} IReserved__CDB6INQUIRY(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IdleCounter__DEVICE_EXTENSION"} {:fieldname "IdleCounter"} IdleCounter__DEVICE_EXTENSION(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.InPath_unnamed_tag_34"} {:fieldname "InPath"} InPath_unnamed_tag_34(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "Information"} Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._NODE_ADDRESS"} {:fieldname "InitiatorAddressId"} InitiatorAddressId__DEVICE_EXTENSION(x: int) : int
{
  x + 1000
}

function {:inline true} {:fieldmap "Mem_T._INQUIRYDATA"} {:fieldname "InquiryData"} InquiryData__DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T.Inserted__KDEVICE_QUEUE_ENTRY"} {:fieldname "Inserted"} Inserted__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.InternalStatus__SCSI_REQUEST_BLOCK"} {:fieldname "InternalStatus"} InternalStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Irb__IRBIRP"} {:fieldname "Irb"} Irb__IRBIRP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irp__IRBIRP"} {:fieldname "Irp"} Irp__IRBIRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Key_unnamed_tag_71"} {:fieldname "Key"} Key_unnamed_tag_71(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LastTransactionStatus__DEVICE_EXTENSION"} {:fieldname "LastTransactionStatus"} LastTransactionStatus__DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "LegacyFlags"} LegacyFlags__DEVICE_INFORMATION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.LengthAndLoginId__LOGIN_RESPONSE"} {:fieldname "LengthAndLoginId"} LengthAndLoginId__LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_QUERY_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_16"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LoadEject__START_STOP_RBC"} {:fieldname "LoadEject"} LoadEject__START_STOP_RBC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "LogicalBlockSize"} LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LogicalUnitNumber__CDB6INQUIRY"} {:fieldname "LogicalUnitNumber"} LogicalUnitNumber__CDB6INQUIRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.LoginRespContext__DEVICE_EXTENSION"} {:fieldname "LoginRespContext"} LoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2208
}

function {:inline true} {:fieldmap "Mem_T.LoginResponseAddress__ORB_LOGIN"} {:fieldname "LoginResponseAddress"} LoginResponseAddress__ORB_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T._LOGIN_RESPONSE"} {:fieldname "LoginResponse"} LoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.LoginResponse__DEVICE_EXTENSION"} {:fieldname "LoginResponse"} LoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2204
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowQuad_unnamed_tag_64"} {:fieldname "LowQuad"} LowQuad_unnamed_tag_64(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Lun__DEVICE_INFORMATION"} {:fieldname "Lun"} Lun__DEVICE_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MODE_SELECT__CDB"} {:fieldname "MODE_SELECT"} MODE_SELECT__CDB(x: int) : int
{
  x + 1744
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE10__CDB"} {:fieldname "MODE_SENSE10"} MODE_SENSE10__CDB(x: int) : int
{
  x + 1688
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE__CDB"} {:fieldname "MODE_SENSE"} MODE_SENSE__CDB(x: int) : int
{
  x + 1648
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ManagementAgentBaseReg__DEVICE_INFORMATION"} {:fieldname "ManagementAgentBaseReg"} ManagementAgentBaseReg__DEVICE_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "ManagementEvent"} ManagementEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 2080
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrbContext__DEVICE_EXTENSION"} {:fieldname "ManagementOrbContext"} ManagementOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1908
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "ManagementOrbStatusContext"} ManagementOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3032
}

function {:inline true} {:fieldmap "Mem_T._ORB_MNG"} {:fieldname "ManagementOrb"} ManagementOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrb__DEVICE_EXTENSION"} {:fieldname "ManagementOrb"} ManagementOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 1904
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncReadRequest"} MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncWriteRequest"} MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__DEVICE_INFORMATION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__DEVICE_INFORMATION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__FDO_DEVICE_EXTENSION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.MaxControllerPhySpeed__DEVICE_EXTENSION"} {:fieldname "MaxControllerPhySpeed"} MaxControllerPhySpeed__DEVICE_EXTENSION(x: int) : int
{
  x + 1012
}

function {:inline true} {:fieldmap "Mem_T.MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP"} {:fieldname "MaxDmaBufferSize"} MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxOrbListDepth__DEVICE_EXTENSION"} {:fieldname "MaxOrbListDepth"} MaxOrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MaxPages__PAGE_TABLE_CONTEXT"} {:fieldname "MaxPages"} MaxPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "MaxSegmentSize"} MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__STRING"} {:fieldname "MaximumLength"} MaximumLength__STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MdlAddress__IRP"} {:fieldname "MdlAddress"} MdlAddress__IRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_READ"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_WRITE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.MediumType__MODE_PARAMETER_HEADER"} {:fieldname "MediumType"} MediumType__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModeDataLength__MODE_PARAMETER_HEADER"} {:fieldname "ModeDataLength"} ModeDataLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeafBufferSize"} ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeaf"} ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MultiplicationFactor__MODE_CACHING_PAGE"} {:fieldname "MultiplicationFactor"} MultiplicationFactor__MODE_CACHING_PAGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.NA_Bus_Number__NODE_ADDRESS"} {:fieldname "NA_Bus_Number"} NA_Bus_Number__NODE_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NA_Node_Number__NODE_ADDRESS"} {:fieldname "NA_Node_Number"} NA_Node_Number__NODE_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NextContextToFree__DEVICE_EXTENSION"} {:fieldname "NextContextToFree"} NextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.NextOrbAddress__ORB_NORMAL_CMD"} {:fieldname "NextOrbAddress"} NextOrbAddress__ORB_NORMAL_CMD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT"} {:fieldname "NodeAddress"} NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NodeId__B1394_ADDRESS"} {:fieldname "NodeId"} NodeId__B1394_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumPDOsStarted__FDO_DEVICE_EXTENSION"} {:fieldname "NumPDOsStarted"} NumPDOsStarted__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.NumberOfBlocks__MODE_PARAMETER_BLOCK"} {:fieldname "NumberOfBlocks"} NumberOfBlocks__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "NumberOfLogicalBlocks"} NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.NumberOfPages__PAGE_TABLE_CONTEXT"} {:fieldname "NumberOfPages"} NumberOfPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Objects__DEVICE_RELATIONS"} {:fieldname "Objects"} Objects__DEVICE_RELATIONS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OctletPart__OCTLET"} {:fieldname "OctletPart"} OctletPart__OCTLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Octlet__IRBIRP"} {:fieldname "Octlet"} Octlet__IRBIRP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Off_High__ADDRESS_OFFSET"} {:fieldname "Off_High"} Off_High__ADDRESS_OFFSET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_High__B1394_ADDRESS"} {:fieldname "Off_High"} Off_High__B1394_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__ADDRESS_OFFSET"} {:fieldname "Off_Low"} Off_Low__ADDRESS_OFFSET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__B1394_ADDRESS"} {:fieldname "Off_Low"} Off_Low__B1394_ADDRESS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB10"} {:fieldname "OperationCode"} OperationCode__CDB10(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB6GENERIC"} {:fieldname "OperationCode"} OperationCode__CDB6GENERIC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_MNG"} {:fieldname "OrbInfo"} OrbInfo__ORB_MNG(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_NORMAL_CMD"} {:fieldname "OrbInfo"} OrbInfo__ORB_NORMAL_CMD(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_QUERY_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__ASYNC_REQUEST_CONTEXT"} {:fieldname "OrbListDepth"} OrbListDepth__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 512
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__DEVICE_EXTENSION"} {:fieldname "OrbListDepth"} OrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.OrbListSpinLock__DEVICE_EXTENSION"} {:fieldname "OrbListSpinLock"} OrbListSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "OrbList"} OrbList__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbPoolContext__DEVICE_EXTENSION"} {:fieldname "OrbPoolContext"} OrbPoolContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2556
}

function {:inline true} {:fieldmap "Mem_T.OrbReadPayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbReadPayloadMask"} OrbReadPayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1016
}

function {:inline true} {:fieldmap "Mem_T.OrbWritePayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbWritePayloadMask"} OrbWritePayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1020
}

function {:inline true} {:fieldmap "Mem_T._ORB_NORMAL_CMD"} {:fieldname "Orb"} Orb__ARCP_ORB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalRequest__SCSI_REQUEST_BLOCK"} {:fieldname "OriginalRequest"} OriginalRequest__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.OriginalSrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "OriginalSrb"} OriginalSrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 508
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_5"} {:fieldname "Overlay"} Overlay_unnamed_tag_5(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PFBit__MODE_SELECT"} {:fieldname "PFBit"} PFBit__MODE_SELECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Packet__ASYNC_REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.Packet__REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__REQUEST_CONTEXT(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.PageCode__CDB6INQUIRY"} {:fieldname "PageCode"} PageCode__CDB6INQUIRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_CACHING_PAGE"} {:fieldname "PageCode"} PageCode__MODE_CACHING_PAGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_SENSE"} {:fieldname "PageCode"} PageCode__MODE_SENSE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PageLength__MODE_CACHING_PAGE"} {:fieldname "PageLength"} PageLength__MODE_CACHING_PAGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageSavable__MODE_CACHING_PAGE"} {:fieldname "PageSavable"} PageSavable__MODE_CACHING_PAGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PageTableContext__ASYNC_REQUEST_CONTEXT"} {:fieldname "PageTableContext"} PageTableContext__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.PageTable__PAGE_TABLE_CONTEXT"} {:fieldname "PageTable"} PageTable__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "Page"} Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PagingPathCount"} PagingPathCount__DEVICE_EXTENSION(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.ParameterListLength__MODE_SELECT"} {:fieldname "ParameterListLength"} ParameterListLength__MODE_SELECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PartialMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "PartialMdl"} PartialMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.Password__ORB_LOGIN"} {:fieldname "Password"} Password__ORB_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pc__MODE_SENSE"} {:fieldname "Pc"} Pc__MODE_SENSE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Pdo__FDO_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingOrbEvent"} PendingOrbEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 1604
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingOrbList"} PendingOrbList__DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4"} {:fieldname "PhysAddrMappingRoutine"} PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pointer__IO_STATUS_BLOCK"} {:fieldname "Pointer"} Pointer__IO_STATUS_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.PowerConditions__START_STOP_RBC"} {:fieldname "PowerConditions"} PowerConditions__START_STOP_RBC(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "PowerDeferredIrp"} PowerDeferredIrp__DEVICE_EXTENSION(x: int) : int
{
  x + 368
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__QUADLET"} {:fieldname "QuadPart"} QuadPart__QUADLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__ULARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__ULARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginRespContext__DEVICE_EXTENSION"} {:fieldname "QueryLoginRespContext"} QueryLoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2384
}

function {:inline true} {:fieldmap "Mem_T._QUERY_LOGIN_RESPONSE"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginResponse__DEVICE_EXTENSION"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2380
}

function {:inline true} {:fieldmap "Mem_T.QueryResponseAddress__ORB_QUERY_LOGIN"} {:fieldname "QueryResponseAddress"} QueryResponseAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "QueueSortKey"} QueueSortKey__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RawDeviceOK__DEVICE_CAPABILITIES"} {:fieldname "RawDeviceOK"} RawDeviceOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.ReadDisableCache__MODE_CACHING_PAGE"} {:fieldname "ReadDisableCache"} ReadDisableCache__MODE_CACHING_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ReadRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "ReadRetensionPriority"} ReadRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__INQUIRYDATA"} {:fieldname "RemovableMedia"} RemovableMedia__INQUIRYDATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Removable__DEVICE_CAPABILITIES"} {:fieldname "Removable"} Removable__DEVICE_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4252
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 2916
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ADDRESS_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ADDRESS_CONTEXT(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.RequestType__REQUEST_CONTEXT"} {:fieldname "RequestType"} RequestType__REQUEST_CONTEXT(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Required1394Offset"} Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__CDB6INQUIRY"} {:fieldname "Reserved1"} Reserved1__CDB6INQUIRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ReservedMdl__DEVICE_EXTENSION"} {:fieldname "ReservedMdl"} ReservedMdl__DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ADDRESS_CONTEXT"} {:fieldname "Reserved"} Reserved__ADDRESS_CONTEXT(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Reserved"} Reserved__DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ORB_QUERY_LOGIN"} {:fieldname "Reserved"} Reserved__ORB_QUERY_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetContext"} ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetRoutine"} ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.RetrieveTextLeaf_unnamed_tag_70"} {:fieldname "RetrieveTextLeaf"} RetrieveTextLeaf_unnamed_tag_70(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SPBit__MODE_SELECT"} {:fieldname "SPBit"} SPBit__MODE_SELECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.START_STOP_RBC__CDB_RBC"} {:fieldname "START_STOP_RBC"} START_STOP_RBC__CDB_RBC(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.ScsiStatus__SCSI_REQUEST_BLOCK"} {:fieldname "ScsiStatus"} ScsiStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Scsi_unnamed_tag_8"} {:fieldname "Scsi"} Scsi_unnamed_tag_8(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBufferLength__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBufferLength"} SenseInfoBufferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBuffer"} SenseInfoBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SenseKey__SENSE_DATA"} {:fieldname "SenseKey"} SenseKey__SENSE_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.SortKey__KDEVICE_QUEUE_ENTRY"} {:fieldname "SortKey"} SortKey__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SrbFlags__SCSI_REQUEST_BLOCK"} {:fieldname "SrbFlags"} SrbFlags__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SrbStatus__SCSI_REQUEST_BLOCK"} {:fieldname "SrbStatus"} SrbStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Srb__ASYNC_REQUEST_CONTEXT"} {:fieldname "Srb"} Srb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Srb_unnamed_tag_24"} {:fieldname "Srb"} Srb_unnamed_tag_24(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.StartNextPacketCount__DEVICE_EXTENSION"} {:fieldname "StartNextPacketCount"} StartNextPacketCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4248
}

function {:inline true} {:fieldmap "Mem_T.Start__START_STOP_RBC"} {:fieldname "Start"} Start__START_STOP_RBC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_MNG"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_MNG(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_QUERY_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusFifoBase__DEVICE_EXTENSION"} {:fieldname "StatusFifoBase"} StatusFifoBase__DEVICE_EXTENSION(x: int) : int
{
  x + 3872
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "StatusFifoListHead"} StatusFifoListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 3852
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "StatusFifoLock"} StatusFifoLock__DEVICE_EXTENSION(x: int) : int
{
  x + 3868
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SurpriseRemovalOK__DEVICE_CAPABILITIES"} {:fieldname "SurpriseRemovalOK"} SurpriseRemovalOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 364
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__FDO_DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.TL_Length__TEXTUAL_LEAF"} {:fieldname "TL_Length"} TL_Length__TEXTUAL_LEAF(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Tag__ASYNC_REQUEST_CONTEXT"} {:fieldname "Tag"} Tag__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TaskOrbContext__DEVICE_EXTENSION"} {:fieldname "TaskOrbContext"} TaskOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1732
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "TaskOrbStatusContext"} TaskOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3508
}

function {:inline true} {:fieldmap "Mem_T._ORB_TASK_MNG"} {:fieldname "TaskOrb"} TaskOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.TaskOrb__DEVICE_EXTENSION"} {:fieldname "TaskOrb"} TaskOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 1728
}

function {:inline true} {:fieldmap "Mem_T.TimeOutValue__SCSI_REQUEST_BLOCK"} {:fieldname "TimeOutValue"} TimeOutValue__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TimerDpc"} TimerDpc__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TransactionType__ADDRESS_CONTEXT"} {:fieldname "TransactionType"} TransactionType__ADDRESS_CONTEXT(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Type__DEVICE_EXTENSION"} {:fieldname "Type"} Type__DEVICE_EXTENSION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Type__FDO_DEVICE_EXTENSION"} {:fieldname "Type"} Type__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_26"} {:fieldname "Type"} Type_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_34"} {:fieldname "Type"} Type_unnamed_tag_34(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UniSymLinkName"} UniSymLinkName__DEVICE_EXTENSION(x: int) : int
{
  x + 4236
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitCharacteristics__DEVICE_INFORMATION"} {:fieldname "UnitCharacteristics"} UnitCharacteristics__DEVICE_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryBufferSize"} UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryLocation"} UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectory"} UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryBufferSize"} UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryLocation"} UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectory"} UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.UsageNotification_unnamed_tag_8"} {:fieldname "UsageNotification"} UsageNotification_unnamed_tag_8(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeafBufferSize"} VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeaf"} VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "WriteCacheDisable"} WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheEnable__MODE_CACHING_PAGE"} {:fieldname "WriteCacheEnable"} WriteCacheEnable__MODE_CACHING_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.WriteRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "WriteRetensionPriority"} WriteRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.asUlong_unnamed_tag_73"} {:fieldname "asUlong"} asUlong_unnamed_tag_73(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulAccessType"} fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_READ"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_WRITE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_BUS_RESET"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_BUS_RESET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "hAddressRange"} hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "nAddressesToFree"} nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_READ"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_WRITE"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "nLength"} nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "nLevel"} nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToRead__IRB_REQ_ASYNC_READ"} {:fieldname "nNumberOfBytesToRead"} nNumberOfBytesToRead__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE"} {:fieldname "nNumberOfBytesToWrite"} nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nSpeed__IRB_REQ_ASYNC_READ"} {:fieldname "nSpeed"} nSpeed__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "pAddressRange"} pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__IRB"} {:fieldname "u"} u__IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__OCTLET"} {:fieldname "u"} u__OCTLET(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.u__QUADLET"} {:fieldname "u"} u__QUADLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.u__SBP2_REQUEST"} {:fieldname "u"} u__SBP2_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_READ"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_WRITE"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulLength_unnamed_tag_71"} {:fieldname "ulLength"} ulLength_unnamed_tag_71(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "ulNumberOfDestinations"} ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniGenericName"} uniGenericName__DEVICE_INFORMATION(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniModelId"} uniModelId__DEVICE_INFORMATION(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniVendorId"} uniVendorId__DEVICE_INFORMATION(x: int) : int
{
  x + 220
}

const {:string ""} unique strConst__li2bpl0: int;

const {:string "%08x%08x"} unique strConst__li2bpl32: int;

const {:string "%ws %ws IEEE 1394 SBP2 Device"} unique strConst__li2bpl9: int;

const {:string "&"} unique strConst__li2bpl15: int;

const {:string "CmdSetId"} unique strConst__li2bpl16: int;

const {:string "FireLite Drive  "} unique strConst__li2bpl5: int;

const {:string "FireREX Storage"} unique strConst__li2bpl3: int;

const {:string "GenCdRom"} unique strConst__li2bpl25: int;

const {:string "GenChanger"} unique strConst__li2bpl28: int;

const {:string "GenDisk"} unique strConst__li2bpl21: int;

const {:string "GenOptical"} unique strConst__li2bpl27: int;

const {:string "GenPrinter"} unique strConst__li2bpl23: int;

const {:string "GenSbp2Device"} unique strConst__li2bpl20: int;

const {:string "GenScanner"} unique strConst__li2bpl26: int;

const {:string "GenSequential"} unique strConst__li2bpl22: int;

const {:string "GenWorm"} unique strConst__li2bpl24: int;

const {:string "LUN"} unique strConst__li2bpl17: int;

const {:string "LUN %d"} unique strConst__li2bpl8: int;

const {:string "LegacyFlags"} unique strConst__li2bpl6: int;

const {:string "SBP2\\"} unique strConst__li2bpl13: int;

const {:string "SBP2\\%d&%d&%d"} unique strConst__li2bpl7: int;

const {:string "SBP2\\%ws&%ws&LUN%x"} unique strConst__li2bpl18: int;

const {:string "SBP2\\UNKNOWN VENDOR&UNKNOWN MODEL&LUN%x"} unique strConst__li2bpl19: int;

const {:string "TI STORAGELYNX!!"} unique strConst__li2bpl2: int;

const {:string "UNKNOWN VENDOR AND MODEL IEEE 1394 SBP2 Device"} unique strConst__li2bpl10: int;

const {:string "UNKNOWN VENDOR&UNKNOWN MODEL"} unique strConst__li2bpl14: int;

const {:string "Warning: IoDeleteDevice should only be called after IoCallDriver and PoCallDriver has returned when processing IRP_MJ_PNP with MinorFunction IRP_MN_REMOVE_DEVICE."} unique strConst__li2bpl34: int;

const {:string "\\Device\\Sbp2"} unique strConst__li2bpl12: int;

const {:string "\\Device\\Sbp2Port%x"} unique strConst__li2bpl11: int;

const {:string "\\Device\\Sbp2\\%ws&%ws&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl29: int;

const {:string "\\Device\\Sbp2\\UNKNOWN_VENDOR&UNKNOWN_MODEL&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl31: int;

const {:string "\\DosDevices\\Sbp2&LUN%x&%08x%08x&Instance%02d"} unique strConst__li2bpl30: int;

const {:string "caller"} unique strConst__li2bpl1: int;

const {:string "halt"} unique strConst__li2bpl33: int;

const {:string "iPod"} unique strConst__li2bpl4: int;

const {:allocated} li2bplFunctionConstant228: int;

axiom li2bplFunctionConstant228 == 228;

const {:allocated} li2bplFunctionConstant229: int;

axiom li2bplFunctionConstant229 == 229;

const {:allocated} li2bplFunctionConstant230: int;

axiom li2bplFunctionConstant230 == 230;

const {:allocated} li2bplFunctionConstant231: int;

axiom li2bplFunctionConstant231 == 231;

const {:allocated} li2bplFunctionConstant232: int;

axiom li2bplFunctionConstant232 == 232;

const {:allocated} li2bplFunctionConstant233: int;

axiom li2bplFunctionConstant233 == 233;

const {:allocated} li2bplFunctionConstant234: int;

axiom li2bplFunctionConstant234 == 234;

const {:allocated} li2bplFunctionConstant235: int;

axiom li2bplFunctionConstant235 == 235;

const {:allocated} li2bplFunctionConstant236: int;

axiom li2bplFunctionConstant236 == 236;

const {:allocated} li2bplFunctionConstant240: int;

axiom li2bplFunctionConstant240 == 240;

const {:allocated} li2bplFunctionConstant242: int;

axiom li2bplFunctionConstant242 == 242;

const {:allocated} li2bplFunctionConstant249: int;

axiom li2bplFunctionConstant249 == 249;

const {:allocated} li2bplFunctionConstant257: int;

axiom li2bplFunctionConstant257 == 257;

const {:allocated} li2bplFunctionConstant264: int;

axiom li2bplFunctionConstant264 == 264;

const {:allocated} li2bplFunctionConstant296: int;

axiom li2bplFunctionConstant296 == 296;

const {:allocated} li2bplFunctionConstant297: int;

axiom li2bplFunctionConstant297 == 297;

const {:allocated} li2bplFunctionConstant299: int;

axiom li2bplFunctionConstant299 == 299;

const {:allocated} li2bplFunctionConstant337: int;

axiom li2bplFunctionConstant337 == 337;

const {:allocated} li2bplFunctionConstant430: int;

axiom li2bplFunctionConstant430 == 430;

const {:allocated} li2bplFunctionConstant798: int;

axiom li2bplFunctionConstant798 == 798;

const {:allocated} li2bplFunctionConstant800: int;

axiom li2bplFunctionConstant800 == 800;

const {:allocated} li2bplFunctionConstant803: int;

axiom li2bplFunctionConstant803 == 803;

implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_DeviceExtension_16: int, actual_Context_9: int)
{
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_795: int;
  var {:pointer} Tmp_796: int;
  var {:pointer} Tmp_797: int;
  var {:pointer} Tmp_799: int;
  var {:pointer} Tmp_800: int;
  var {:pointer} Tmp_801: int;
  var {:pointer} Tmp_803: int;
  var {:scalar} sdv_293: int;
  var {:scalar} sdv_294: int;
  var {:pointer} Tmp_804: int;
  var {:pointer} Tmp_805: int;
  var {:scalar} sdv_296: int;
  var {:scalar} sdv_297: int;
  var {:pointer} Tmp_806: int;
  var {:scalar} status_24: int;
  var {:pointer} Tmp_807: int;
  var {:scalar} newAddr: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_808: int;
  var {:scalar} sdv_299: int;
  var {:pointer} Tmp_809: int;
  var {:pointer} DeviceExtension_16: int;
  var {:pointer} Context_9: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;

  anon0:
    call {:si_unique_call 1121} vslice_dummy_var_236 := __HAVOC_malloc(4);
    call {:si_unique_call 1122} newAddr := __HAVOC_malloc(76);
    DeviceExtension_16 := actual_DeviceExtension_16;
    Context_9 := actual_Context_9;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc orbListDepth;
    call {:si_unique_call 1123} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_799;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} Tmp_799 != 0;
    assume Tmp_799 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1124} vslice_dummy_var_240 := KeResetEvent(PendingOrbEvent__DEVICE_EXTENSION(DeviceExtension_16));
    call {:si_unique_call 1125} sdv_293 := sdv_IsListEmpty(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_293 != 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_804;
    assume {:nonnull} Tmp_804 != 0;
    assume Tmp_804 > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_795;
    assume {:nonnull} Tmp_795 != 0;
    assume Tmp_795 > 0;
    havoc timeOutValue;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc vslice_dummy_var_92;
    call {:si_unique_call 1126} vslice_dummy_var_241 := KeSetTimer(0, vslice_dummy_var_92, 0);
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1127} vslice_dummy_var_237 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_16), OrbList__ASYNC_REQUEST_CONTEXT(Context_9));
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc Tmp_796;
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    havoc Tmp_806;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc Tmp_807;
    assume {:nonnull} Tmp_807 != 0;
    assume Tmp_807 > 0;
    havoc Tmp_801;
    assume {:nonnull} Tmp_801 != 0;
    assume Tmp_801 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc Tmp_808;
    assume {:nonnull} Tmp_808 != 0;
    assume Tmp_808 > 0;
    havoc Tmp_800;
    assume {:nonnull} Tmp_800 != 0;
    assume Tmp_800 > 0;
    call {:si_unique_call 1128} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1129} status_24 := Sbp2AccessRegister(DeviceExtension_16, Reserved__DEVICE_EXTENSION(DeviceExtension_16), 1032);
    goto L56;

  L56:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_24 == -1072562032;
    call {:si_unique_call 1130} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 1131} vslice_dummy_var_238 := KeCancelTimer(0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc vslice_dummy_var_93;
    call {:si_unique_call 1132} vslice_dummy_var_242 := KeSetTimer(0, vslice_dummy_var_93, 0);
    goto L62;

  L62:
    call {:si_unique_call 1133} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L57;

  L57:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume false;
    return;

  anon22_Then:
    goto L1;

  L1:
    return;

  anon24_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L62;

  anon23_Then:
    goto L62;

  anon21_Then:
    assume {:partition} status_24 != -1072562032;
    goto L57;

  anon20_Then:
    goto L33;

  L33:
    call {:si_unique_call 1134} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1135} status_24 := Sbp2AccessRegister(DeviceExtension_16, newAddr, 1028);
    goto L56;

  anon26_Then:
    goto L33;

  anon19_Then:
    assume {:partition} sdv_293 == 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_797;
    assume {:nonnull} Tmp_797 != 0;
    assume Tmp_797 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc prevCtx;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto L95;

  L95:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_809;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_803;
    assume {:nonnull} Tmp_803 != 0;
    assume Tmp_803 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_805;
    assume {:nonnull} Tmp_805 != 0;
    assume Tmp_805 > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1136} vslice_dummy_var_243 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_16), OrbList__ASYNC_REQUEST_CONTEXT(Context_9));
    call {:si_unique_call 1137} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1138} vslice_dummy_var_239 := Sbp2AccessRegister(DeviceExtension_16, Reserved__DEVICE_EXTENSION(DeviceExtension_16), 1032);
    goto L57;

  anon25_Then:
    goto L91;

  L91:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc prevCtx;
    goto L95;

  anon27_Then:
    goto L91;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_DeviceExtension_16: int, actual_Context_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_DeviceExtension_16: int, actual_Context_9: int)
{
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_795: int;
  var {:pointer} Tmp_796: int;
  var {:pointer} Tmp_797: int;
  var {:pointer} Tmp_799: int;
  var {:pointer} Tmp_800: int;
  var {:pointer} Tmp_801: int;
  var {:pointer} Tmp_803: int;
  var {:scalar} sdv_293: int;
  var {:scalar} sdv_294: int;
  var {:pointer} Tmp_804: int;
  var {:pointer} Tmp_805: int;
  var {:scalar} sdv_296: int;
  var {:scalar} sdv_297: int;
  var {:pointer} Tmp_806: int;
  var {:scalar} status_24: int;
  var {:pointer} Tmp_807: int;
  var {:scalar} newAddr: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_808: int;
  var {:scalar} sdv_299: int;
  var {:pointer} Tmp_809: int;
  var {:pointer} DeviceExtension_16: int;
  var {:pointer} Context_9: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;

  anon0:
    call {:si_unique_call 1139} vslice_dummy_var_244 := __HAVOC_malloc(4);
    call {:si_unique_call 1140} newAddr := __HAVOC_malloc(76);
    DeviceExtension_16 := actual_DeviceExtension_16;
    Context_9 := actual_Context_9;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc orbListDepth;
    call {:si_unique_call 1141} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_799;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} Tmp_799 != 0;
    assume Tmp_799 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1142} vslice_dummy_var_248 := KeResetEvent(PendingOrbEvent__DEVICE_EXTENSION(DeviceExtension_16));
    call {:si_unique_call 1143} sdv_293 := sdv_IsListEmpty(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_293 != 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_804;
    assume {:nonnull} Tmp_804 != 0;
    assume Tmp_804 > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_795;
    assume {:nonnull} Tmp_795 != 0;
    assume Tmp_795 > 0;
    havoc timeOutValue;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc vslice_dummy_var_94;
    call {:si_unique_call 1144} vslice_dummy_var_249 := KeSetTimer(0, vslice_dummy_var_94, 0);
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1145} vslice_dummy_var_245 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_16), OrbList__ASYNC_REQUEST_CONTEXT(Context_9));
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc Tmp_796;
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    havoc Tmp_806;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc Tmp_807;
    assume {:nonnull} Tmp_807 != 0;
    assume Tmp_807 > 0;
    havoc Tmp_801;
    assume {:nonnull} Tmp_801 != 0;
    assume Tmp_801 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc Tmp_808;
    assume {:nonnull} Tmp_808 != 0;
    assume Tmp_808 > 0;
    havoc Tmp_800;
    assume {:nonnull} Tmp_800 != 0;
    assume Tmp_800 > 0;
    call {:si_unique_call 1146} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1147} status_24 := Sbp2AccessRegister(DeviceExtension_16, Reserved__DEVICE_EXTENSION(DeviceExtension_16), 1032);
    goto L56;

  L56:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_24 == -1072562032;
    call {:si_unique_call 1148} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 1149} vslice_dummy_var_246 := KeCancelTimer(0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc vslice_dummy_var_95;
    call {:si_unique_call 1150} vslice_dummy_var_250 := KeSetTimer(0, vslice_dummy_var_95, 0);
    goto L62;

  L62:
    call {:si_unique_call 1151} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L57;

  L57:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc vslice_dummy_var_96;
    havoc vslice_dummy_var_97;
    call {:si_unique_call 1152} Sbp2StartNextPacketByKey#0(vslice_dummy_var_96, vslice_dummy_var_97);
    goto L1;

  L1:
    return;

  anon22_Then:
    goto L1;

  anon24_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L62;

  anon23_Then:
    goto L62;

  anon21_Then:
    assume {:partition} status_24 != -1072562032;
    goto L57;

  anon20_Then:
    goto L33;

  L33:
    call {:si_unique_call 1153} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1154} status_24 := Sbp2AccessRegister(DeviceExtension_16, newAddr, 1028);
    goto L56;

  anon26_Then:
    goto L33;

  anon19_Then:
    assume {:partition} sdv_293 == 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_797;
    assume {:nonnull} Tmp_797 != 0;
    assume Tmp_797 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc prevCtx;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    goto L95;

  L95:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_809;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_803;
    assume {:nonnull} Tmp_803 != 0;
    assume Tmp_803 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_805;
    assume {:nonnull} Tmp_805 != 0;
    assume Tmp_805 > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1155} vslice_dummy_var_251 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_16), OrbList__ASYNC_REQUEST_CONTEXT(Context_9));
    call {:si_unique_call 1156} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1157} vslice_dummy_var_247 := Sbp2AccessRegister(DeviceExtension_16, Reserved__DEVICE_EXTENSION(DeviceExtension_16), 1032);
    goto L57;

  anon25_Then:
    goto L91;

  L91:
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc prevCtx;
    goto L95;

  anon27_Then:
    goto L91;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_DeviceExtension_16: int, actual_Context_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_7: int, actual_Key: int)
{
  var {:scalar} sdv_190: int;
  var {:pointer} Tmp_563: int;
  var {:scalar} sdv_192: int;
  var {:pointer} sdv_193: int;
  var {:pointer} irp: int;
  var {:pointer} packet_5: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} DeviceObject_7: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_252: int;

  anon0:
    call {:si_unique_call 1158} vslice_dummy_var_252 := __HAVOC_malloc(4);
    DeviceObject_7 := actual_DeviceObject_7;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    havoc deviceExtension;
    call {:si_unique_call 1159} Tmp_563 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1160} sdv_190 := sdv_InterlockedIncrement(Tmp_563);
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_190 == 1;
    goto L11;

  L11:
    call {:si_unique_call 1161} Tmp_563, sdv_192, sdv_193, irp, packet_5 := Sbp2StartNextPacketByKey#0_loop_L11(Tmp_563, sdv_192, sdv_193, irp, packet_5, deviceExtension, DeviceObject_7, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    call {:si_unique_call 1166} packet_5 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_7), Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} packet_5 != 0;
    call {:si_unique_call 1162} sdv_193 := sdv_containing_record(packet_5, 64);
    irp := sdv_193;
    call {:si_unique_call 1163} Sbp2StartIo#0(DeviceObject_7, irp);
    goto L17;

  L17:
    call {:si_unique_call 1164} Tmp_563 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1165} sdv_192 := sdv_InterlockedDecrement(Tmp_563);
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_192 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} sdv_192 == 0;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} packet_5 == 0;
    goto L17;

  anon7_Then:
    assume {:partition} sdv_190 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_7: int, actual_Key: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_7: int, actual_Key: int)
{
  var {:scalar} sdv_190: int;
  var {:pointer} Tmp_563: int;
  var {:scalar} sdv_192: int;
  var {:pointer} sdv_193: int;
  var {:pointer} irp: int;
  var {:pointer} packet_5: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} DeviceObject_7: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_253: int;

  anon0:
    call {:si_unique_call 1167} vslice_dummy_var_253 := __HAVOC_malloc(4);
    DeviceObject_7 := actual_DeviceObject_7;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    havoc deviceExtension;
    call {:si_unique_call 1168} Tmp_563 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1169} sdv_190 := sdv_InterlockedIncrement(Tmp_563);
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_190 == 1;
    goto L11;

  L11:
    call {:si_unique_call 1170} Tmp_563, sdv_192, sdv_193, irp, packet_5 := Sbp2StartNextPacketByKey#1_loop_L11(Tmp_563, sdv_192, sdv_193, irp, packet_5, deviceExtension, DeviceObject_7, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    call {:si_unique_call 1175} packet_5 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_7), Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} packet_5 != 0;
    call {:si_unique_call 1171} sdv_193 := sdv_containing_record(packet_5, 64);
    irp := sdv_193;
    call {:si_unique_call 1172} Sbp2StartIo#1(DeviceObject_7, irp);
    goto L17;

  L17:
    call {:si_unique_call 1173} Tmp_563 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1174} sdv_192 := sdv_InterlockedDecrement(Tmp_563);
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_192 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} sdv_192 == 0;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} packet_5 == 0;
    goto L17;

  anon7_Then:
    assume {:partition} sdv_190 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_7: int, actual_Key: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_13: int, actual_Irp_5: int)
{
  var {:pointer} irpStack: int;
  var {:pointer} deferredIrp: int;
  var {:scalar} sdv_259: int;
  var {:pointer} context: int;
  var {:pointer} Tmp_737: int;
  var {:scalar} sdv_262: int;
  var {:scalar} sdv_263: int;
  var {:scalar} sdv_264: int;
  var {:scalar} sdv_265: int;
  var {:pointer} sdv_267: int;
  var {:pointer} qIrp: int;
  var {:scalar} queued: int;
  var {:scalar} sdv_269: int;
  var {:pointer} srb_1: int;
  var {:scalar} status_22: int;
  var {:pointer} entry: int;
  var {:pointer} deviceExtension_4: int;
  var {:scalar} sdv_270: int;
  var {:scalar} state: int;
  var {:pointer} queue_2: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_5: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;

  anon0:
    call {:si_unique_call 1176} vslice_dummy_var_254 := __HAVOC_malloc(4);
    call {:si_unique_call 1177} context := __HAVOC_malloc(4);
    call {:si_unique_call 1178} state := __HAVOC_malloc(8);
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_5 := actual_Irp_5;
    call {:si_unique_call 1179} irpStack := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc deviceExtension_4;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc srb_1;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    call {:si_unique_call 1180} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 1181} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_22 := -1073741632;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1182} sdv_IoCompleteRequest(0, 0);
    assume false;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1183} vslice_dummy_var_255 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), 0);
    return;

  anon49_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1184} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L47;

  L47:
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L49;

  L49:
    call {:si_unique_call 1185} Create1394TransactionForSrb#0(deviceExtension_4, srb_1, context);
    goto L1;

  L1:
    return;

  anon52_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc Tmp_737;
    assume {:nonnull} Tmp_737 != 0;
    assume Tmp_737 > 0;
    goto L49;

  anon53_Then:
    goto L49;

  anon51_Then:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc vslice_dummy_var_98;
    call {:si_unique_call 1186} sdv_264 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_13), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_5))), vslice_dummy_var_98);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_264 == 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1187} vslice_dummy_var_258 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), 0);
    call {:si_unique_call 1188} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon54_Then:
    assume {:partition} sdv_264 != 0;
    goto L1;

  anon50_Then:
    call {:si_unique_call 1189} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc vslice_dummy_var_99;
    call {:si_unique_call 1190} queued := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_13), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_5))), vslice_dummy_var_99);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1191} sdv_263 := corral_nondet();
    goto L75;

  L75:
    assume {:nonnull} state != 0;
    assume state > 0;
    call {:si_unique_call 1192} status_22 := PoRequestPowerIrp(0, 2, state, 0, 0, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_22 < 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1193} sdv_269 := corral_nondet();
    deferredIrp := sdv_269;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} deferredIrp != Irp_5;
    Irp_5 := 0;
    goto L108;

  L108:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Irp_5 != 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1194} sdv_IoCompleteRequest(0, 0);
    assume false;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1195} vslice_dummy_var_257 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), 0);
    return;

  anon63_Then:
    assume {:partition} Irp_5 == 0;
    goto L1;

  anon72_Then:
    assume {:partition} deferredIrp == Irp_5;
    goto L108;

  anon60_Then:
    assume {:partition} queued != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_13);
    call {:si_unique_call 1196} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry;
    goto L93;

  L93:
    call {:si_unique_call 1197} sdv_267, qIrp, entry := Sbp2StartIo#0_loop_L93(sdv_267, qIrp, entry, Irp_5);
    goto L93_last;

  L93_last:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 1198} sdv_267 := sdv_containing_record(entry, 64);
    qIrp := sdv_267;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} qIrp == Irp_5;
    call {:si_unique_call 1199} vslice_dummy_var_256 := sdv_RemoveEntryList(0);
    goto L94;

  L94:
    call {:si_unique_call 1200} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} qIrp != Irp_5;
    Irp_5 := 0;
    goto L108;

  anon62_Then:
    assume {:partition} qIrp == Irp_5;
    goto L108;

  anon71_Then:
    assume {:partition} qIrp != Irp_5;
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    assume false;
    return;

  anon61_Then:
    goto L94;

  anon59_Then:
    assume {:partition} 0 <= status_22;
    goto L1;

  anon58_Then:
    assume {:partition} queued != 0;
    goto L75;

  anon57_Then:
    goto L65;

  L65:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1201} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc vslice_dummy_var_100;
    call {:si_unique_call 1202} sdv_262 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_13), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_5))), vslice_dummy_var_100);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_262 != 0;
    goto L148;

  L148:
    call {:si_unique_call 1203} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon66_Then:
    assume {:partition} sdv_262 == 0;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc vslice_dummy_var_101;
    call {:si_unique_call 1204} sdv_270 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_13), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_5))), vslice_dummy_var_101);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} sdv_270 == 0;
    call {:si_unique_call 1205} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1206} vslice_dummy_var_259 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), 0);
    call {:si_unique_call 1207} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon67_Then:
    assume {:partition} sdv_270 != 0;
    goto L148;

  anon65_Then:
    call {:si_unique_call 1208} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L133;

  L133:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L167;

  L167:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc vslice_dummy_var_102;
    call {:si_unique_call 1209} sdv_265 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_13), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_5))), vslice_dummy_var_102);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} sdv_265 == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1210} sdv_259 := corral_nondet();
    goto L1;

  anon70_Then:
    assume {:partition} sdv_265 != 0;
    goto L1;

  anon69_Then:
    goto L165;

  L165:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L167;

  anon68_Then:
    goto L47;

  anon64_Then:
    goto L165;

  anon56_Then:
    goto L133;

  anon55_Then:
    goto L65;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_13: int, actual_Irp_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_13: int, actual_Irp_5: int)
{
  var {:pointer} irpStack: int;
  var {:pointer} deferredIrp: int;
  var {:scalar} sdv_259: int;
  var {:pointer} context: int;
  var {:pointer} Tmp_737: int;
  var {:scalar} sdv_262: int;
  var {:scalar} sdv_263: int;
  var {:scalar} sdv_264: int;
  var {:scalar} sdv_265: int;
  var {:pointer} sdv_267: int;
  var {:pointer} qIrp: int;
  var {:scalar} queued: int;
  var {:scalar} sdv_269: int;
  var {:pointer} srb_1: int;
  var {:scalar} status_22: int;
  var {:pointer} entry: int;
  var {:pointer} deviceExtension_4: int;
  var {:scalar} sdv_270: int;
  var {:scalar} state: int;
  var {:pointer} queue_2: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_5: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;

  anon0:
    call {:si_unique_call 1211} vslice_dummy_var_260 := __HAVOC_malloc(4);
    call {:si_unique_call 1212} context := __HAVOC_malloc(4);
    call {:si_unique_call 1213} state := __HAVOC_malloc(8);
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_5 := actual_Irp_5;
    call {:si_unique_call 1214} irpStack := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc deviceExtension_4;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc srb_1;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    call {:si_unique_call 1215} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 1216} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_22 := -1073741632;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1217} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1218} Sbp2StartNextPacketByKey#0(DeviceObject_13, 0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1219} vslice_dummy_var_261 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), 0);
    goto L1;

  L1:
    return;

  anon49_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1220} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L47;

  L47:
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L49;

  L49:
    call {:si_unique_call 1221} Create1394TransactionForSrb#1(deviceExtension_4, srb_1, context);
    goto L1;

  anon52_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc Tmp_737;
    assume {:nonnull} Tmp_737 != 0;
    assume Tmp_737 > 0;
    goto L49;

  anon53_Then:
    goto L49;

  anon51_Then:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc vslice_dummy_var_103;
    call {:si_unique_call 1222} sdv_264 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_13), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_5))), vslice_dummy_var_103);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_264 == 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1223} vslice_dummy_var_264 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), 0);
    call {:si_unique_call 1224} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon54_Then:
    assume {:partition} sdv_264 != 0;
    goto L1;

  anon50_Then:
    call {:si_unique_call 1225} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc vslice_dummy_var_104;
    call {:si_unique_call 1226} queued := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_13), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_5))), vslice_dummy_var_104);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1227} sdv_263 := corral_nondet();
    goto L75;

  L75:
    assume {:nonnull} state != 0;
    assume state > 0;
    call {:si_unique_call 1228} status_22 := PoRequestPowerIrp(0, 2, state, 0, 0, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_22 < 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1229} sdv_269 := corral_nondet();
    deferredIrp := sdv_269;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} deferredIrp != Irp_5;
    Irp_5 := 0;
    goto L108;

  L108:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Irp_5 != 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1230} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1231} Sbp2StartNextPacketByKey#0(DeviceObject_13, 0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1232} vslice_dummy_var_263 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), 0);
    goto L1;

  anon63_Then:
    assume {:partition} Irp_5 == 0;
    goto L1;

  anon72_Then:
    assume {:partition} deferredIrp == Irp_5;
    goto L108;

  anon60_Then:
    assume {:partition} queued != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_13);
    call {:si_unique_call 1233} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry;
    goto L93;

  L93:
    call {:si_unique_call 1234} sdv_267, qIrp, entry := Sbp2StartIo#1_loop_L93(sdv_267, qIrp, entry, Irp_5);
    goto L93_last;

  L93_last:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 1235} sdv_267 := sdv_containing_record(entry, 64);
    qIrp := sdv_267;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} qIrp == Irp_5;
    call {:si_unique_call 1236} vslice_dummy_var_262 := sdv_RemoveEntryList(0);
    goto L94;

  L94:
    call {:si_unique_call 1237} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} qIrp != Irp_5;
    Irp_5 := 0;
    goto L108;

  anon62_Then:
    assume {:partition} qIrp == Irp_5;
    goto L108;

  anon71_Then:
    assume {:partition} qIrp != Irp_5;
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    assume false;
    return;

  anon61_Then:
    goto L94;

  anon59_Then:
    assume {:partition} 0 <= status_22;
    goto L1;

  anon58_Then:
    assume {:partition} queued != 0;
    goto L75;

  anon57_Then:
    goto L65;

  L65:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1238} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc vslice_dummy_var_105;
    call {:si_unique_call 1239} sdv_262 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_13), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_5))), vslice_dummy_var_105);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_262 != 0;
    goto L148;

  L148:
    call {:si_unique_call 1240} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon66_Then:
    assume {:partition} sdv_262 == 0;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc vslice_dummy_var_106;
    call {:si_unique_call 1241} sdv_270 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_13), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_5))), vslice_dummy_var_106);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} sdv_270 == 0;
    call {:si_unique_call 1242} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1243} vslice_dummy_var_265 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), 0);
    call {:si_unique_call 1244} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon67_Then:
    assume {:partition} sdv_270 != 0;
    goto L148;

  anon65_Then:
    call {:si_unique_call 1245} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L133;

  L133:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L167;

  L167:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc vslice_dummy_var_107;
    call {:si_unique_call 1246} sdv_265 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_13), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_5))), vslice_dummy_var_107);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} sdv_265 == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1247} sdv_259 := corral_nondet();
    goto L1;

  anon70_Then:
    assume {:partition} sdv_265 != 0;
    goto L1;

  anon69_Then:
    goto L165;

  L165:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L167;

  anon68_Then:
    goto L47;

  anon64_Then:
    goto L165;

  anon56_Then:
    goto L133;

  anon55_Then:
    goto L65;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_13: int, actual_Irp_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_DeviceExtension_13: int, actual_Srb_1: int, actual_RequestContext: int)
{
  var {:pointer} sdv_250: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_725: int;
  var {:pointer} Tmp_726: int;
  var {:pointer} callbackContext: int;
  var {:pointer} Tmp_727: int;
  var {:pointer} sdv_254: int;
  var {:scalar} sdv_255: int;
  var {:pointer} Tmp_728: int;
  var {:pointer} Tmp_729: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_730: int;
  var {:scalar} status_21: int;
  var {:pointer} Tmp_731: int;
  var {:pointer} DeviceExtension_13: int;
  var {:pointer} Srb_1: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;

  anon0:
    call {:si_unique_call 1248} vslice_dummy_var_266 := __HAVOC_malloc(4);
    DeviceExtension_13 := actual_DeviceExtension_13;
    Srb_1 := actual_Srb_1;
    RequestContext := actual_RequestContext;
    status_21 := 0;
    call {:si_unique_call 1249} sdv_250 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_250;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 1250} sdv_254 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_254;
    call {:si_unique_call 1251} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 1252} Tmp_725 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    assume {:nonnull} Tmp_725 != 0;
    assume Tmp_725 > 0;
    call {:si_unique_call 1253} sdv_255 := sdv_InterlockedIncrement(Tmp_725);
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    assume {:nonnull} Tmp_725 != 0;
    assume Tmp_725 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1254} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1255} status_21 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_21 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1256} vslice_dummy_var_269 := FreeAsyncRequestContext(DeviceExtension_13, callbackContext);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_21 >= 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_727;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Tmp_727 != 0;
    assume Tmp_727 > 0;
    goto L50;

  L50:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_730;
    assume {:nonnull} Tmp_730 != 0;
    assume Tmp_730 > 0;
    call {:si_unique_call 1257} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    assume false;
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    call {:si_unique_call 1258} vslice_dummy_var_267 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_13), 0);
    return;

  anon26_Then:
    assume {:partition} 0 > status_21;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_731;
    assume {:nonnull} Tmp_731 != 0;
    assume Tmp_731 > 0;
    goto L50;

  anon25_Then:
    assume {:partition} status_21 == 259;
    status_21 := 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_726;
    assume {:nonnull} Tmp_726 != 0;
    assume Tmp_726 > 0;
    havoc requestMdl;
    call {:si_unique_call 1259} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_108;
    call {:si_unique_call 1260} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_108, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc vslice_dummy_var_109;
    call {:si_unique_call 1261} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_109);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto L85;

  L85:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1262} status_21 := Sbp2BusMapTransfer#0(DeviceExtension_13, callbackContext);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_21 >= 0;
    goto L92;

  L92:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_21 != 259;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_21 != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1263} vslice_dummy_var_270 := FreeAsyncRequestContext(DeviceExtension_13, callbackContext);
    goto L99;

  L99:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_728;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_729;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    call {:si_unique_call 1264} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    assume false;
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    call {:si_unique_call 1265} vslice_dummy_var_268 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_13), 0);
    return;

  anon34_Then:
    assume {:partition} callbackContext == 0;
    goto L99;

  anon33_Then:
    assume {:partition} status_21 == 0;
    call {:si_unique_call 1266} Sbp2InsertTailList#0(DeviceExtension_13, callbackContext);
    goto L1;

  L1:
    return;

  anon32_Then:
    assume {:partition} status_21 == 259;
    goto L1;

  anon30_Then:
    assume {:partition} 0 > status_21;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1267} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L92;

  anon31_Then:
    goto L92;

  anon29_Then:
    status_21 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto L92;

  anon28_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L85;

  anon27_Then:
    goto L64;

  L64:
    call {:si_unique_call 1268} Sbp2InitializeOrb(DeviceExtension_13, callbackContext);
    goto L92;

  anon36_Then:
    goto L64;

  anon35_Then:
    assume {:partition} callbackContext == 0;
    status_21 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    havoc vslice_dummy_var_110;
    call {:si_unique_call 1269} Sbp2CreateRequestErrorLog(vslice_dummy_var_110, 0, status_21);
    goto L92;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_DeviceExtension_13: int, actual_Srb_1: int, actual_RequestContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_DeviceExtension_13: int, actual_Srb_1: int, actual_RequestContext: int)
{
  var {:pointer} sdv_250: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_725: int;
  var {:pointer} Tmp_726: int;
  var {:pointer} callbackContext: int;
  var {:pointer} Tmp_727: int;
  var {:pointer} sdv_254: int;
  var {:scalar} sdv_255: int;
  var {:pointer} Tmp_728: int;
  var {:pointer} Tmp_729: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_730: int;
  var {:scalar} status_21: int;
  var {:pointer} Tmp_731: int;
  var {:pointer} DeviceExtension_13: int;
  var {:pointer} Srb_1: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;

  anon0:
    call {:si_unique_call 1270} vslice_dummy_var_271 := __HAVOC_malloc(4);
    DeviceExtension_13 := actual_DeviceExtension_13;
    Srb_1 := actual_Srb_1;
    RequestContext := actual_RequestContext;
    status_21 := 0;
    call {:si_unique_call 1271} sdv_250 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_250;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 1272} sdv_254 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_254;
    call {:si_unique_call 1273} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 1274} Tmp_725 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    assume {:nonnull} Tmp_725 != 0;
    assume Tmp_725 > 0;
    call {:si_unique_call 1275} sdv_255 := sdv_InterlockedIncrement(Tmp_725);
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    assume {:nonnull} Tmp_725 != 0;
    assume Tmp_725 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1276} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1277} status_21 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_21 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1278} vslice_dummy_var_274 := FreeAsyncRequestContext(DeviceExtension_13, callbackContext);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_21 >= 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_727;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Tmp_727 != 0;
    assume Tmp_727 > 0;
    goto L50;

  L50:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_730;
    assume {:nonnull} Tmp_730 != 0;
    assume Tmp_730 > 0;
    call {:si_unique_call 1279} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    havoc vslice_dummy_var_111;
    havoc vslice_dummy_var_112;
    call {:si_unique_call 1280} Sbp2StartNextPacketByKey#0(vslice_dummy_var_111, vslice_dummy_var_112);
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    call {:si_unique_call 1281} vslice_dummy_var_272 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_13), 0);
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} 0 > status_21;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_731;
    assume {:nonnull} Tmp_731 != 0;
    assume Tmp_731 > 0;
    goto L50;

  anon25_Then:
    assume {:partition} status_21 == 259;
    status_21 := 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_726;
    assume {:nonnull} Tmp_726 != 0;
    assume Tmp_726 > 0;
    havoc requestMdl;
    call {:si_unique_call 1282} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_113;
    call {:si_unique_call 1283} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_113, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc vslice_dummy_var_114;
    call {:si_unique_call 1284} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_114);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto L85;

  L85:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1285} status_21 := Sbp2BusMapTransfer#1(DeviceExtension_13, callbackContext);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_21 >= 0;
    goto L92;

  L92:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_21 != 259;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_21 != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1286} vslice_dummy_var_275 := FreeAsyncRequestContext(DeviceExtension_13, callbackContext);
    goto L99;

  L99:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_728;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_729;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    call {:si_unique_call 1287} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    havoc vslice_dummy_var_115;
    call {:si_unique_call 1288} Sbp2StartNextPacketByKey#0(vslice_dummy_var_115, 0);
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    call {:si_unique_call 1289} vslice_dummy_var_273 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_13), 0);
    goto L1;

  anon34_Then:
    assume {:partition} callbackContext == 0;
    goto L99;

  anon33_Then:
    assume {:partition} status_21 == 0;
    call {:si_unique_call 1290} Sbp2InsertTailList#1(DeviceExtension_13, callbackContext);
    goto L1;

  anon32_Then:
    assume {:partition} status_21 == 259;
    goto L1;

  anon30_Then:
    assume {:partition} 0 > status_21;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1291} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L92;

  anon31_Then:
    goto L92;

  anon29_Then:
    status_21 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto L92;

  anon28_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L85;

  anon27_Then:
    goto L64;

  L64:
    call {:si_unique_call 1292} Sbp2InitializeOrb(DeviceExtension_13, callbackContext);
    goto L92;

  anon36_Then:
    goto L64;

  anon35_Then:
    assume {:partition} callbackContext == 0;
    status_21 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    havoc vslice_dummy_var_116;
    call {:si_unique_call 1293} Sbp2CreateRequestErrorLog(vslice_dummy_var_116, 0, status_21);
    goto L92;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_DeviceExtension_13: int, actual_Srb_1: int, actual_RequestContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_17: int, actual_CallbackContext_2: int) returns (Tmp_810: int)
{
  var {:pointer} CallbackContext_2: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 1294} Sbp2AllocComplete#0(CallbackContext_2);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    Tmp_810 := -1073741670;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_810 := 259;
    goto L1;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_17: int, actual_CallbackContext_2: int) returns (Tmp_810: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_810 == -1073741670 || Tmp_810 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_17: int, actual_CallbackContext_2: int) returns (Tmp_810: int)
{
  var {:pointer} CallbackContext_2: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 1295} Sbp2AllocComplete#1(CallbackContext_2);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    Tmp_810 := -1073741670;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_810 := 259;
    goto L1;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_17: int, actual_CallbackContext_2: int) returns (Tmp_810: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_810 == -1073741670 || Tmp_810 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int)
{
  var {:pointer} Tmp_679: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:pointer} Tmp_682: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:pointer} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_687: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:pointer} Tmp_690: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:pointer} Tmp_696: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:pointer} Tmp_699: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_701: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} srb: int;
  var {:pointer} packet_10: int;
  var {:scalar} status_20: int;
  var {:pointer} Tmp_703: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_704: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} Tmp_706: int;
  var {:pointer} Tmp_707: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;

  anon0:
    call {:si_unique_call 1296} vslice_dummy_var_276 := __HAVOC_malloc(4);
    call {:si_unique_call 1297} packet_10 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_685;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    havoc deviceExtension_3;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc routine_2;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L20;

  L20:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_694;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_691;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_698;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_706;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_696;
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_697;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    goto L27;

  L27:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_692;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_687;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_705;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_689;
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_679;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_690;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_701;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_686;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_695;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_699;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    assume routine_2 == 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_20 != 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc vslice_dummy_var_117;
    call {:si_unique_call 1298} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_117);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 1299} vslice_dummy_var_278 := FreeAsyncRequestContext(deviceExtension_3, CallbackContext);
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_702;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_682;
    assume {:nonnull} Tmp_682 != 0;
    assume Tmp_682 > 0;
    call {:si_unique_call 1300} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume false;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 1301} vslice_dummy_var_277 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_3), 0);
    return;

  anon21_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  L1:
    return;

  anon16_Then:
    assume {:partition} status_20 == 0;
    goto L1;

  anon20_Then:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_707;
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    goto L27;

  anon19_Then:
    call {:si_unique_call 1302} AllocateIrpAndIrb(deviceExtension_3, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    bDirectCall := 1;
    goto L20;

  anon17_Then:
    goto L1;

  anon18_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    havoc Tmp_688;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    havoc Tmp_680;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_118;
    call {:si_unique_call 1303} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_118);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 1304} Sbp2InitializeOrb(deviceExtension_3, CallbackContext);
    call {:si_unique_call 1305} Sbp2InsertTailList#0(deviceExtension_3, CallbackContext);
    goto L1;

  anon15_Then:
    goto L1;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int)
{
  var {:pointer} Tmp_679: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:pointer} Tmp_682: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:pointer} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_687: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:pointer} Tmp_690: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:pointer} Tmp_696: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:pointer} Tmp_699: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_701: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} srb: int;
  var {:pointer} packet_10: int;
  var {:scalar} status_20: int;
  var {:pointer} Tmp_703: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_704: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} Tmp_706: int;
  var {:pointer} Tmp_707: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;

  anon0:
    call {:si_unique_call 1306} vslice_dummy_var_279 := __HAVOC_malloc(4);
    call {:si_unique_call 1307} packet_10 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_685;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    havoc deviceExtension_3;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc routine_2;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L20;

  L20:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_694;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_691;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_698;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_706;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_696;
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_697;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    goto L27;

  L27:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_692;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_687;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_705;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_689;
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_679;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_690;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_701;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_686;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_695;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_699;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    assume routine_2 == 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_20 != 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc vslice_dummy_var_119;
    call {:si_unique_call 1308} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_119);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 1309} vslice_dummy_var_281 := FreeAsyncRequestContext(deviceExtension_3, CallbackContext);
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_702;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_682;
    assume {:nonnull} Tmp_682 != 0;
    assume Tmp_682 > 0;
    call {:si_unique_call 1310} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_120;
    call {:si_unique_call 1311} Sbp2StartNextPacketByKey#0(vslice_dummy_var_120, 0);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 1312} vslice_dummy_var_280 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_3), 0);
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  anon16_Then:
    assume {:partition} status_20 == 0;
    goto L1;

  anon20_Then:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_707;
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    goto L27;

  anon19_Then:
    call {:si_unique_call 1313} AllocateIrpAndIrb(deviceExtension_3, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    bDirectCall := 1;
    goto L20;

  anon17_Then:
    goto L1;

  anon18_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    havoc Tmp_688;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    havoc Tmp_680;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_121;
    call {:si_unique_call 1314} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_121);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 1315} Sbp2InitializeOrb(deviceExtension_3, CallbackContext);
    call {:si_unique_call 1316} Sbp2InsertTailList#1(deviceExtension_3, CallbackContext);
    goto L1;

  anon15_Then:
    goto L1;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_16: int, actual_FreeLists: int) returns (Tmp_879: int)
{
  var {:scalar} i_5: int;
  var {:scalar} Tmp_880: int;
  var {:pointer} Tmp_881: int;
  var {:pointer} Tmp_882: int;
  var {:pointer} Tmp_883: int;
  var {:scalar} Tmp_884: int;
  var {:pointer} Tmp_885: int;
  var {:scalar} Tmp_886: int;
  var {:scalar} Tmp_887: int;
  var {:pointer} Tmp_888: int;
  var {:pointer} Tmp_889: int;
  var {:pointer} Tmp_890: int;
  var {:scalar} Tmp_892: int;
  var {:pointer} Tmp_894: int;
  var {:pointer} Tmp_896: int;
  var {:scalar} Tmp_897: int;
  var {:pointer} Tmp_898: int;
  var {:scalar} Tmp_899: int;
  var {:pointer} Tmp_900: int;
  var {:pointer} Tmp_901: int;
  var {:scalar} Tmp_902: int;
  var {:pointer} context_2: int;
  var {:pointer} Tmp_904: int;
  var {:pointer} Tmp_905: int;
  var {:pointer} Tmp_906: int;
  var {:pointer} Tmp_907: int;
  var {:pointer} sdv_366: int;
  var {:pointer} Tmp_908: int;
  var {:scalar} Tmp_909: int;
  var {:pointer} Tmp_910: int;
  var {:pointer} Tmp_911: int;
  var {:pointer} Tmp_912: int;
  var {:pointer} Tmp_913: int;
  var {:pointer} sdv_368: int;
  var {:scalar} Tmp_914: int;
  var {:scalar} Tmp_915: int;
  var {:pointer} Tmp_916: int;
  var {:pointer} Tmp_917: int;
  var {:scalar} sdv_369: int;
  var {:scalar} sdv_371: int;
  var {:pointer} fdoExtension_2: int;
  var {:pointer} Tmp_919: int;
  var {:pointer} Tmp_920: int;
  var {:pointer} Tmp_921: int;
  var {:pointer} sdv_373: int;
  var {:pointer} Tmp_922: int;
  var {:pointer} Tmp_923: int;
  var {:pointer} irp_2: int;
  var {:scalar} Tmp_924: int;
  var {:scalar} Tmp_925: int;
  var {:pointer} Tmp_926: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} Tmp_929: int;
  var {:pointer} sdv_374: int;
  var {:scalar} Tmp_930: int;
  var {:pointer} packet_11: int;
  var {:pointer} Tmp_931: int;
  var {:pointer} Tmp_932: int;
  var {:pointer} Tmp_933: int;
  var {:pointer} Tmp_934: int;
  var {:scalar} valid: int;
  var {:pointer} deviceExtension_6: int;
  var {:scalar} Tmp_935: int;
  var {:scalar} Tmp_936: int;
  var {:pointer} Tmp_938: int;
  var {:pointer} Tmp_939: int;
  var {:scalar} sdv_375: int;
  var {:pointer} Tmp_940: int;
  var {:pointer} DeviceObject_16: int;
  var {:scalar} FreeLists: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;

  anon0:
    call {:si_unique_call 1317} packet_11 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    FreeLists := actual_FreeLists;
    call {:si_unique_call 1318} Tmp_881 := __HAVOC_malloc(2560);
    call {:si_unique_call 1319} Tmp_890 := __HAVOC_malloc(2560);
    call {:si_unique_call 1320} Tmp_896 := __HAVOC_malloc(2560);
    call {:si_unique_call 1321} Tmp_898 := __HAVOC_malloc(2560);
    call {:si_unique_call 1322} Tmp_904 := __HAVOC_malloc(2560);
    call {:si_unique_call 1323} Tmp_907 := __HAVOC_malloc(2560);
    call {:si_unique_call 1324} Tmp_908 := __HAVOC_malloc(2560);
    call {:si_unique_call 1325} Tmp_911 := __HAVOC_malloc(2560);
    call {:si_unique_call 1326} Tmp_913 := __HAVOC_malloc(2560);
    call {:si_unique_call 1327} Tmp_916 := __HAVOC_malloc(2560);
    call {:si_unique_call 1328} Tmp_917 := __HAVOC_malloc(2560);
    call {:si_unique_call 1329} Tmp_921 := __HAVOC_malloc(2560);
    call {:si_unique_call 1330} Tmp_923 := __HAVOC_malloc(2560);
    call {:si_unique_call 1331} Tmp_932 := __HAVOC_malloc(2560);
    call {:si_unique_call 1332} Tmp_938 := __HAVOC_malloc(2560);
    call {:si_unique_call 1333} Tmp_939 := __HAVOC_malloc(2560);
    call {:si_unique_call 1334} Tmp_940 := __HAVOC_malloc(2560);
    valid := 0;
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc deviceExtension_6;
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc fdoExtension_2;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_922;
    assume {:nonnull} Tmp_922 != 0;
    assume Tmp_922 > 0;
    havoc fdoExtension_2;
    i_5 := 0;
    goto L18;

  L18:
    call {:si_unique_call 1335} i_5, Tmp_884, Tmp_938 := Sbp2CleanDeviceExtension#0_loop_L18(i_5, Tmp_884, fdoExtension_2, Tmp_938, DeviceObject_16);
    goto L18_last;

  L18_last:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    Tmp_884 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_938;
    assume {:nonnull} Tmp_938 != 0;
    assume Tmp_938 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    valid := 1;
    goto L19;

  L19:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    call {:si_unique_call 1336} vslice_dummy_var_282 := KeCancelTimer(0);
    call {:si_unique_call 1337} CleanupOrbList(deviceExtension_6, -1073741248);
    goto L26;

  L26:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1338} FreeAddressRange(deviceExtension_6, DummyContext__DEVICE_EXTENSION(deviceExtension_6));
    goto L33;

  L33:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} FreeLists != 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto L41;

  L41:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1339} FreeAddressRange(deviceExtension_6, TaskOrbStatusContext__DEVICE_EXTENSION(deviceExtension_6));
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1340} FreeAddressRange(deviceExtension_6, GlobalStatusContext__DEVICE_EXTENSION(deviceExtension_6));
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1341} FreeAddressRange(deviceExtension_6, ManagementOrbStatusContext__DEVICE_EXTENSION(deviceExtension_6));
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1342} sdv_369 := corral_nondet();
    irp_2 := sdv_369;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} irp_2 != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1343} vslice_dummy_var_285 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_6), 0);
    call {:si_unique_call 1344} sdv_IoCompleteRequest(0, 0);
    goto L56;

  L56:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1345} sdv_371 := corral_nondet();
    irp_2 := sdv_371;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} irp_2 != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1346} vslice_dummy_var_286 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_6), 0);
    call {:si_unique_call 1347} sdv_IoCompleteRequest(0, 0);
    goto L69;

  L69:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    call {:si_unique_call 1348} vslice_dummy_var_283 := IoDeleteSymbolicLink(0);
    call {:si_unique_call 1349} RtlFreeUnicodeString(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto L77;

  L77:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1350} FreeAddressRange(deviceExtension_6, CommonBufferContext__DEVICE_EXTENSION(deviceExtension_6));
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    i_5 := 0;
    goto L94;

  L94:
    call {:si_unique_call 1351} i_5, context_2 := Sbp2CleanDeviceExtension#0_loop_L94(i_5, context_2, deviceExtension_6);
    goto L94_last;

  L94_last:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} 8 > i_5;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc context_2;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    call {:si_unique_call 1352} FreeAddressRange(deviceExtension_6, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_2)));
    goto L101;

  L101:
    i_5 := i_5 + 1;
    goto L101_dummy;

  L101_dummy:
    assume false;
    return;

  anon89_Then:
    goto L101;

  anon77_Then:
    assume {:partition} i_5 >= 8;
    call {:si_unique_call 1353} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto L92;

  L92:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 1354} sdv_366 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_366;
    goto L114;

  L114:
    call {:si_unique_call 1355} statusFifoElement, sdv_374 := Sbp2CleanDeviceExtension#0_loop_L114(statusFifoElement, sdv_374);
    goto L114_last;

  L114_last:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} statusFifoElement != 0;
    call {:si_unique_call 1356} IoFreeMdl(0);
    call {:si_unique_call 1357} sdv_374 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_374;
    goto anon78_Else_dummy;

  anon78_Else_dummy:
    assume false;
    return;

  anon78_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 1358} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto L107;

  L107:
    call {:si_unique_call 1359} sdv_373 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto L127;

  L127:
    call {:si_unique_call 1360} sdv_368, Tmp_933 := Sbp2CleanDeviceExtension#0_loop_L127(sdv_368, packet_11, Tmp_933);
    goto L127_last;

  L127_last:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 1361} sdv_ExFreePool(0);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_933;
    assume {:nonnull} Tmp_933 != 0;
    assume Tmp_933 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    call {:si_unique_call 1362} IoFreeIrp(0);
    goto L135;

  L135:
    call {:si_unique_call 1363} sdv_ExFreePool(0);
    call {:si_unique_call 1364} sdv_368 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto L135_dummy;

  L135_dummy:
    assume false;
    return;

  anon90_Then:
    goto L135;

  anon79_Then:
    call {:si_unique_call 1365} ExDeleteNPagedLookasideList(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 1366} IoFreeMdl(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto L146;

  L146:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_889;
    assume {:nonnull} Tmp_889 != 0;
    assume Tmp_889 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_882;
    assume {:nonnull} Tmp_882 != 0;
    assume Tmp_882 > 0;
    call {:si_unique_call 1367} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_919;
    assume {:nonnull} Tmp_919 != 0;
    assume Tmp_919 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_912;
    assume {:nonnull} Tmp_912 != 0;
    assume Tmp_912 > 0;
    goto L151;

  L151:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_894;
    assume {:nonnull} Tmp_894 != 0;
    assume Tmp_894 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_885;
    assume {:nonnull} Tmp_885 != 0;
    assume Tmp_885 > 0;
    call {:si_unique_call 1368} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_883;
    assume {:nonnull} Tmp_883 != 0;
    assume Tmp_883 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_920;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    goto L157;

  L157:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_888;
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_901;
    assume {:nonnull} Tmp_901 != 0;
    assume Tmp_901 > 0;
    call {:si_unique_call 1369} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_906;
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_934;
    assume {:nonnull} Tmp_934 != 0;
    assume Tmp_934 > 0;
    goto L37;

  L37:
    Tmp_879 := 1;
    goto L1;

  L1:
    return;

  anon93_Then:
    goto L37;

  anon92_Then:
    goto L157;

  anon91_Then:
    goto L151;

  anon80_Then:
    goto L146;

  anon76_Then:
    goto L107;

  anon88_Then:
    goto L92;

  anon75_Then:
    Tmp_879 := 1;
    goto L1;

  anon74_Then:
    goto L77;

  anon87_Then:
    assume {:partition} irp_2 == 0;
    goto L69;

  anon86_Then:
    assume {:partition} irp_2 == 0;
    goto L56;

  anon72_Then:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L41;

  anon73_Then:
    goto L37;

  anon71_Then:
    assume {:partition} FreeLists == 0;
    goto L37;

  anon70_Then:
    goto L33;

  anon69_Then:
    goto L26;

  anon68_Then:
    assume {:partition} valid == 0;
    Tmp_879 := 0;
    goto L1;

  anon85_Then:
    i_5 := i_5 + 1;
    goto anon85_Then_dummy;

  anon85_Then_dummy:
    assume false;
    return;

  anon67_Then:
    goto L19;

  anon84_Then:
    fdoExtension_2 := deviceExtension_6;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    Tmp_879 := 0;
    goto L1;

  anon94_Then:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    call {:si_unique_call 1370} AllocateIrpAndIrb(fdoExtension_2, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_926;
    assume {:nonnull} Tmp_926 != 0;
    assume Tmp_926 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_931;
    assume {:nonnull} Tmp_931 != 0;
    assume Tmp_931 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_900;
    assume {:nonnull} Tmp_900 != 0;
    assume Tmp_900 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_122;
    call {:si_unique_call 1371} vslice_dummy_var_287 := Sbp2SendRequest(fdoExtension_2, vslice_dummy_var_122, 2);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_123;
    call {:si_unique_call 1372} DeAllocateIrpAndIrb(fdoExtension_2, vslice_dummy_var_123);
    goto L172;

  L172:
    call {:si_unique_call 1373} Tmp_910 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    call {:si_unique_call 1374} sdv_KeAcquireSpinLock(0, Tmp_910);
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    havoc cIrql_3;
    goto L188;

  L188:
    call {:si_unique_call 1375} i_5, Tmp_880, Tmp_886, Tmp_890, Tmp_892, Tmp_896, Tmp_897, Tmp_898, Tmp_899, Tmp_902, Tmp_904, Tmp_907, Tmp_908, Tmp_909, Tmp_911, Tmp_913, Tmp_916, Tmp_917, Tmp_923, Tmp_924, Tmp_925, Tmp_929, Tmp_930, Tmp_932, Tmp_935, Tmp_936, Tmp_940 := Sbp2CleanDeviceExtension#0_loop_L188(i_5, Tmp_880, Tmp_886, Tmp_890, Tmp_892, Tmp_896, Tmp_897, Tmp_898, Tmp_899, Tmp_902, Tmp_904, Tmp_907, Tmp_908, Tmp_909, Tmp_911, Tmp_913, Tmp_916, Tmp_917, fdoExtension_2, Tmp_923, Tmp_924, Tmp_925, Tmp_929, Tmp_930, Tmp_932, Tmp_935, Tmp_936, Tmp_940);
    goto L188_last;

  L188_last:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc i_5;
    Tmp_902 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_916;
    assume {:nonnull} Tmp_916 != 0;
    assume Tmp_916 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_915 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_881;
    assume {:nonnull} Tmp_881 != 0;
    assume Tmp_881 > 0;
    havoc Tmp_905;
    assume {:nonnull} Tmp_905 != 0;
    assume Tmp_905 > 0;
    havoc deviceExtension_6;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    Tmp_914 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_939;
    assume {:nonnull} Tmp_939 != 0;
    assume Tmp_939 > 0;
    havoc DeviceObject_16;
    call {:si_unique_call 1376} sdv_KeReleaseSpinLock(0, cIrql_3);
    assume false;
    return;

  anon96_Then:
    goto L194;

  L194:
    Tmp_880 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_932;
    assume {:nonnull} Tmp_932 != 0;
    assume Tmp_932 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Tmp_909 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_907;
    assume {:nonnull} Tmp_907 != 0;
    assume Tmp_907 > 0;
    call {:si_unique_call 1377} sdv_ExFreePool(0);
    Tmp_936 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_896;
    assume {:nonnull} Tmp_896 != 0;
    assume Tmp_896 > 0;
    Tmp_935 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_940;
    assume {:nonnull} Tmp_940 != 0;
    assume Tmp_940 > 0;
    goto L236;

  L236:
    Tmp_886 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_911;
    assume {:nonnull} Tmp_911 != 0;
    assume Tmp_911 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    Tmp_925 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_913;
    assume {:nonnull} Tmp_913 != 0;
    assume Tmp_913 > 0;
    call {:si_unique_call 1378} sdv_ExFreePool(0);
    Tmp_930 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_908;
    assume {:nonnull} Tmp_908 != 0;
    assume Tmp_908 > 0;
    Tmp_924 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_917;
    assume {:nonnull} Tmp_917 != 0;
    assume Tmp_917 > 0;
    goto L243;

  L243:
    Tmp_899 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_898;
    assume {:nonnull} Tmp_898 != 0;
    assume Tmp_898 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    Tmp_897 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_904;
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 1379} sdv_ExFreePool(0);
    Tmp_892 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_923;
    assume {:nonnull} Tmp_923 != 0;
    assume Tmp_923 > 0;
    Tmp_929 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_890;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    goto L250;

  L250:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto L250_dummy;

  L250_dummy:
    assume false;
    return;

  anon99_Then:
    goto L250;

  anon98_Then:
    goto L243;

  anon97_Then:
    goto L236;

  anon82_Then:
    call {:si_unique_call 1380} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L37;

  anon81_Then:
    goto L172;

  anon95_Then:
    goto L172;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_16: int, actual_FreeLists: int) returns (Tmp_879: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_879 == 1 || Tmp_879 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_16: int, actual_FreeLists: int) returns (Tmp_879: int)
{
  var {:scalar} i_5: int;
  var {:scalar} Tmp_880: int;
  var {:pointer} Tmp_881: int;
  var {:pointer} Tmp_882: int;
  var {:pointer} Tmp_883: int;
  var {:scalar} Tmp_884: int;
  var {:pointer} Tmp_885: int;
  var {:scalar} Tmp_886: int;
  var {:scalar} Tmp_887: int;
  var {:pointer} Tmp_888: int;
  var {:pointer} Tmp_889: int;
  var {:pointer} Tmp_890: int;
  var {:scalar} Tmp_892: int;
  var {:pointer} Tmp_894: int;
  var {:pointer} Tmp_896: int;
  var {:scalar} Tmp_897: int;
  var {:pointer} Tmp_898: int;
  var {:scalar} Tmp_899: int;
  var {:pointer} Tmp_900: int;
  var {:pointer} Tmp_901: int;
  var {:scalar} Tmp_902: int;
  var {:pointer} context_2: int;
  var {:pointer} Tmp_904: int;
  var {:pointer} Tmp_905: int;
  var {:pointer} Tmp_906: int;
  var {:pointer} Tmp_907: int;
  var {:pointer} sdv_366: int;
  var {:pointer} Tmp_908: int;
  var {:scalar} Tmp_909: int;
  var {:pointer} Tmp_910: int;
  var {:pointer} Tmp_911: int;
  var {:pointer} Tmp_912: int;
  var {:pointer} Tmp_913: int;
  var {:pointer} sdv_368: int;
  var {:scalar} Tmp_914: int;
  var {:scalar} Tmp_915: int;
  var {:pointer} Tmp_916: int;
  var {:pointer} Tmp_917: int;
  var {:scalar} sdv_369: int;
  var {:scalar} sdv_371: int;
  var {:pointer} fdoExtension_2: int;
  var {:pointer} Tmp_919: int;
  var {:pointer} Tmp_920: int;
  var {:pointer} Tmp_921: int;
  var {:pointer} sdv_373: int;
  var {:pointer} Tmp_922: int;
  var {:pointer} Tmp_923: int;
  var {:pointer} irp_2: int;
  var {:scalar} Tmp_924: int;
  var {:scalar} Tmp_925: int;
  var {:pointer} Tmp_926: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} Tmp_929: int;
  var {:pointer} sdv_374: int;
  var {:scalar} Tmp_930: int;
  var {:pointer} packet_11: int;
  var {:pointer} Tmp_931: int;
  var {:pointer} Tmp_932: int;
  var {:pointer} Tmp_933: int;
  var {:pointer} Tmp_934: int;
  var {:scalar} valid: int;
  var {:pointer} deviceExtension_6: int;
  var {:scalar} Tmp_935: int;
  var {:scalar} Tmp_936: int;
  var {:pointer} Tmp_938: int;
  var {:pointer} Tmp_939: int;
  var {:scalar} sdv_375: int;
  var {:pointer} Tmp_940: int;
  var {:pointer} DeviceObject_16: int;
  var {:scalar} FreeLists: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;

  anon0:
    call {:si_unique_call 1381} packet_11 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    FreeLists := actual_FreeLists;
    call {:si_unique_call 1382} Tmp_881 := __HAVOC_malloc(2560);
    call {:si_unique_call 1383} Tmp_890 := __HAVOC_malloc(2560);
    call {:si_unique_call 1384} Tmp_896 := __HAVOC_malloc(2560);
    call {:si_unique_call 1385} Tmp_898 := __HAVOC_malloc(2560);
    call {:si_unique_call 1386} Tmp_904 := __HAVOC_malloc(2560);
    call {:si_unique_call 1387} Tmp_907 := __HAVOC_malloc(2560);
    call {:si_unique_call 1388} Tmp_908 := __HAVOC_malloc(2560);
    call {:si_unique_call 1389} Tmp_911 := __HAVOC_malloc(2560);
    call {:si_unique_call 1390} Tmp_913 := __HAVOC_malloc(2560);
    call {:si_unique_call 1391} Tmp_916 := __HAVOC_malloc(2560);
    call {:si_unique_call 1392} Tmp_917 := __HAVOC_malloc(2560);
    call {:si_unique_call 1393} Tmp_921 := __HAVOC_malloc(2560);
    call {:si_unique_call 1394} Tmp_923 := __HAVOC_malloc(2560);
    call {:si_unique_call 1395} Tmp_932 := __HAVOC_malloc(2560);
    call {:si_unique_call 1396} Tmp_938 := __HAVOC_malloc(2560);
    call {:si_unique_call 1397} Tmp_939 := __HAVOC_malloc(2560);
    call {:si_unique_call 1398} Tmp_940 := __HAVOC_malloc(2560);
    valid := 0;
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc deviceExtension_6;
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc fdoExtension_2;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_922;
    assume {:nonnull} Tmp_922 != 0;
    assume Tmp_922 > 0;
    havoc fdoExtension_2;
    i_5 := 0;
    goto L18;

  L18:
    call {:si_unique_call 1399} i_5, Tmp_884, Tmp_938 := Sbp2CleanDeviceExtension#1_loop_L18(i_5, Tmp_884, fdoExtension_2, Tmp_938, DeviceObject_16);
    goto L18_last;

  L18_last:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    Tmp_884 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_938;
    assume {:nonnull} Tmp_938 != 0;
    assume Tmp_938 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    valid := 1;
    goto L19;

  L19:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    call {:si_unique_call 1400} vslice_dummy_var_289 := KeCancelTimer(0);
    call {:si_unique_call 1401} CleanupOrbList(deviceExtension_6, -1073741248);
    goto L26;

  L26:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1402} FreeAddressRange(deviceExtension_6, DummyContext__DEVICE_EXTENSION(deviceExtension_6));
    goto L33;

  L33:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} FreeLists != 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto L41;

  L41:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1403} FreeAddressRange(deviceExtension_6, TaskOrbStatusContext__DEVICE_EXTENSION(deviceExtension_6));
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1404} FreeAddressRange(deviceExtension_6, GlobalStatusContext__DEVICE_EXTENSION(deviceExtension_6));
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1405} FreeAddressRange(deviceExtension_6, ManagementOrbStatusContext__DEVICE_EXTENSION(deviceExtension_6));
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1406} sdv_369 := corral_nondet();
    irp_2 := sdv_369;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} irp_2 != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1407} vslice_dummy_var_292 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_6), 0);
    call {:si_unique_call 1408} sdv_IoCompleteRequest(0, 0);
    goto L56;

  L56:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1409} sdv_371 := corral_nondet();
    irp_2 := sdv_371;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} irp_2 != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1410} vslice_dummy_var_293 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_6), 0);
    call {:si_unique_call 1411} sdv_IoCompleteRequest(0, 0);
    goto L69;

  L69:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    call {:si_unique_call 1412} vslice_dummy_var_290 := IoDeleteSymbolicLink(0);
    call {:si_unique_call 1413} RtlFreeUnicodeString(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto L77;

  L77:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1414} FreeAddressRange(deviceExtension_6, CommonBufferContext__DEVICE_EXTENSION(deviceExtension_6));
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    i_5 := 0;
    goto L94;

  L94:
    call {:si_unique_call 1415} i_5, context_2 := Sbp2CleanDeviceExtension#1_loop_L94(i_5, context_2, deviceExtension_6);
    goto L94_last;

  L94_last:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} 8 > i_5;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc context_2;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    call {:si_unique_call 1416} FreeAddressRange(deviceExtension_6, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_2)));
    goto L101;

  L101:
    i_5 := i_5 + 1;
    goto L101_dummy;

  L101_dummy:
    assume false;
    return;

  anon89_Then:
    goto L101;

  anon77_Then:
    assume {:partition} i_5 >= 8;
    call {:si_unique_call 1417} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto L92;

  L92:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 1418} sdv_366 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_366;
    goto L114;

  L114:
    call {:si_unique_call 1419} statusFifoElement, sdv_374 := Sbp2CleanDeviceExtension#1_loop_L114(statusFifoElement, sdv_374);
    goto L114_last;

  L114_last:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} statusFifoElement != 0;
    call {:si_unique_call 1420} IoFreeMdl(0);
    call {:si_unique_call 1421} sdv_374 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_374;
    goto anon78_Else_dummy;

  anon78_Else_dummy:
    assume false;
    return;

  anon78_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 1422} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto L107;

  L107:
    call {:si_unique_call 1423} sdv_373 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto L127;

  L127:
    call {:si_unique_call 1424} sdv_368, Tmp_933 := Sbp2CleanDeviceExtension#1_loop_L127(sdv_368, packet_11, Tmp_933);
    goto L127_last;

  L127_last:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 1425} sdv_ExFreePool(0);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_933;
    assume {:nonnull} Tmp_933 != 0;
    assume Tmp_933 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    call {:si_unique_call 1426} IoFreeIrp(0);
    goto L135;

  L135:
    call {:si_unique_call 1427} sdv_ExFreePool(0);
    call {:si_unique_call 1428} sdv_368 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto L135_dummy;

  L135_dummy:
    assume false;
    return;

  anon90_Then:
    goto L135;

  anon79_Then:
    call {:si_unique_call 1429} ExDeleteNPagedLookasideList(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 1430} IoFreeMdl(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto L146;

  L146:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_889;
    assume {:nonnull} Tmp_889 != 0;
    assume Tmp_889 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_882;
    assume {:nonnull} Tmp_882 != 0;
    assume Tmp_882 > 0;
    call {:si_unique_call 1431} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_919;
    assume {:nonnull} Tmp_919 != 0;
    assume Tmp_919 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_912;
    assume {:nonnull} Tmp_912 != 0;
    assume Tmp_912 > 0;
    goto L151;

  L151:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_894;
    assume {:nonnull} Tmp_894 != 0;
    assume Tmp_894 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_885;
    assume {:nonnull} Tmp_885 != 0;
    assume Tmp_885 > 0;
    call {:si_unique_call 1432} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_883;
    assume {:nonnull} Tmp_883 != 0;
    assume Tmp_883 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_920;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    goto L157;

  L157:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_888;
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_901;
    assume {:nonnull} Tmp_901 != 0;
    assume Tmp_901 > 0;
    call {:si_unique_call 1433} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_906;
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_934;
    assume {:nonnull} Tmp_934 != 0;
    assume Tmp_934 > 0;
    goto L37;

  L37:
    Tmp_879 := 1;
    goto L1;

  L1:
    return;

  anon93_Then:
    goto L37;

  anon92_Then:
    goto L157;

  anon91_Then:
    goto L151;

  anon80_Then:
    goto L146;

  anon76_Then:
    goto L107;

  anon88_Then:
    goto L92;

  anon75_Then:
    Tmp_879 := 1;
    goto L1;

  anon74_Then:
    goto L77;

  anon87_Then:
    assume {:partition} irp_2 == 0;
    goto L69;

  anon86_Then:
    assume {:partition} irp_2 == 0;
    goto L56;

  anon72_Then:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L41;

  anon73_Then:
    goto L37;

  anon71_Then:
    assume {:partition} FreeLists == 0;
    goto L37;

  anon70_Then:
    goto L33;

  anon69_Then:
    goto L26;

  anon68_Then:
    assume {:partition} valid == 0;
    Tmp_879 := 0;
    goto L1;

  anon85_Then:
    i_5 := i_5 + 1;
    goto anon85_Then_dummy;

  anon85_Then_dummy:
    assume false;
    return;

  anon67_Then:
    goto L19;

  anon84_Then:
    fdoExtension_2 := deviceExtension_6;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    Tmp_879 := 0;
    goto L1;

  anon94_Then:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    call {:si_unique_call 1434} AllocateIrpAndIrb(fdoExtension_2, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_926;
    assume {:nonnull} Tmp_926 != 0;
    assume Tmp_926 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_931;
    assume {:nonnull} Tmp_931 != 0;
    assume Tmp_931 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_900;
    assume {:nonnull} Tmp_900 != 0;
    assume Tmp_900 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_124;
    call {:si_unique_call 1435} vslice_dummy_var_294 := Sbp2SendRequest(fdoExtension_2, vslice_dummy_var_124, 2);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_125;
    call {:si_unique_call 1436} DeAllocateIrpAndIrb(fdoExtension_2, vslice_dummy_var_125);
    goto L172;

  L172:
    call {:si_unique_call 1437} Tmp_910 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    call {:si_unique_call 1438} sdv_KeAcquireSpinLock(0, Tmp_910);
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    havoc cIrql_3;
    goto L188;

  L188:
    call {:si_unique_call 1439} i_5, Tmp_880, Tmp_881, Tmp_886, Tmp_887, Tmp_890, Tmp_892, Tmp_896, Tmp_897, Tmp_898, Tmp_899, Tmp_902, Tmp_904, Tmp_905, Tmp_907, Tmp_908, Tmp_909, Tmp_910, Tmp_911, Tmp_913, Tmp_914, Tmp_915, Tmp_916, Tmp_917, Tmp_921, Tmp_923, Tmp_924, Tmp_925, cIrql_3, Tmp_929, Tmp_930, Tmp_932, deviceExtension_6, Tmp_935, Tmp_936, Tmp_939, sdv_375, Tmp_940, DeviceObject_16, vslice_dummy_var_291, vslice_dummy_var_295 := Sbp2CleanDeviceExtension#1_loop_L188(i_5, Tmp_880, Tmp_881, Tmp_886, Tmp_887, Tmp_890, Tmp_892, Tmp_896, Tmp_897, Tmp_898, Tmp_899, Tmp_902, Tmp_904, Tmp_905, Tmp_907, Tmp_908, Tmp_909, Tmp_910, Tmp_911, Tmp_913, Tmp_914, Tmp_915, Tmp_916, Tmp_917, fdoExtension_2, Tmp_921, Tmp_923, Tmp_924, Tmp_925, cIrql_3, Tmp_929, Tmp_930, Tmp_932, deviceExtension_6, Tmp_935, Tmp_936, Tmp_939, sdv_375, Tmp_940, DeviceObject_16, vslice_dummy_var_291, vslice_dummy_var_295);
    goto L188_last;

  L188_last:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc i_5;
    Tmp_902 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_916;
    assume {:nonnull} Tmp_916 != 0;
    assume Tmp_916 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_915 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_881;
    assume {:nonnull} Tmp_881 != 0;
    assume Tmp_881 > 0;
    havoc Tmp_905;
    assume {:nonnull} Tmp_905 != 0;
    assume Tmp_905 > 0;
    havoc deviceExtension_6;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    Tmp_914 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_939;
    assume {:nonnull} Tmp_939 != 0;
    assume Tmp_939 > 0;
    havoc DeviceObject_16;
    call {:si_unique_call 1440} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 1441} sdv_375 := Sbp2CleanDeviceExtension#0(DeviceObject_16, 1);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} sdv_375 != 0;
    call {:si_unique_call 1442} vslice_dummy_var_291 := sdv_IoAcquireRemoveLock(0, 0);
    call {:si_unique_call 1443} Tmp_910 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    call {:si_unique_call 1444} sdv_KeRaiseIrql(2, Tmp_910);
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    havoc cIrql_3;
    call {:si_unique_call 1445} Sbp2StartNextPacketByKey#1(DeviceObject_16, 0);
    call {:si_unique_call 1446} sdv_KeLowerIrql(cIrql_3);
    call {:si_unique_call 1447} sdv_IoReleaseRemoveLockAndWait(0, 0);
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1448} vslice_dummy_var_295 := KeCancelTimer(0);
    call {:si_unique_call 1449} IoDeleteDevice(DeviceObject_16);
    call {:si_unique_call 1450} Tmp_910 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    call {:si_unique_call 1451} sdv_KeAcquireSpinLock(0, Tmp_910);
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    havoc cIrql_3;
    Tmp_887 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_921;
    assume {:nonnull} Tmp_921 != 0;
    assume Tmp_921 > 0;
    goto L194;

  L194:
    Tmp_880 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_932;
    assume {:nonnull} Tmp_932 != 0;
    assume Tmp_932 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Tmp_909 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_907;
    assume {:nonnull} Tmp_907 != 0;
    assume Tmp_907 > 0;
    call {:si_unique_call 1452} sdv_ExFreePool(0);
    Tmp_936 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_896;
    assume {:nonnull} Tmp_896 != 0;
    assume Tmp_896 > 0;
    Tmp_935 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_940;
    assume {:nonnull} Tmp_940 != 0;
    assume Tmp_940 > 0;
    goto L236;

  L236:
    Tmp_886 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_911;
    assume {:nonnull} Tmp_911 != 0;
    assume Tmp_911 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    Tmp_925 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_913;
    assume {:nonnull} Tmp_913 != 0;
    assume Tmp_913 > 0;
    call {:si_unique_call 1453} sdv_ExFreePool(0);
    Tmp_930 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_908;
    assume {:nonnull} Tmp_908 != 0;
    assume Tmp_908 > 0;
    Tmp_924 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_917;
    assume {:nonnull} Tmp_917 != 0;
    assume Tmp_917 > 0;
    goto L243;

  L243:
    Tmp_899 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_898;
    assume {:nonnull} Tmp_898 != 0;
    assume Tmp_898 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    Tmp_897 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_904;
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 1454} sdv_ExFreePool(0);
    Tmp_892 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_923;
    assume {:nonnull} Tmp_923 != 0;
    assume Tmp_923 > 0;
    Tmp_929 := i_5;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc Tmp_890;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    goto L250;

  L250:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto L250_dummy;

  L250_dummy:
    assume false;
    return;

  anon99_Then:
    goto L250;

  anon98_Then:
    goto L243;

  anon97_Then:
    goto L236;

  anon83_Then:
    assume {:partition} sdv_375 == 0;
    call {:si_unique_call 1455} Tmp_910 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    call {:si_unique_call 1456} sdv_KeAcquireSpinLock(0, Tmp_910);
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    havoc cIrql_3;
    goto L194;

  anon96_Then:
    goto L194;

  anon82_Then:
    call {:si_unique_call 1457} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L37;

  anon81_Then:
    goto L172;

  anon95_Then:
    goto L172;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_16: int, actual_FreeLists: int) returns (Tmp_879: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} Tmp_879 == 1 || Tmp_879 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation Sbp2_ProcessTextualDescriptor_loop_L46(in_i: int, in_DataLength: int, in_pData: int, in_ulUnicode: int, in_Tmp_9: int, in_uChar: int, in_Tmp_13: int) returns (out_i: int, out_Tmp_9: int, out_uChar: int, out_Tmp_13: int)
{

  entry:
    out_i, out_Tmp_9, out_uChar, out_Tmp_13 := in_i, in_Tmp_9, in_uChar, in_Tmp_13;
    goto L46, exit;

  exit:
    return;

  L46:
    goto anon28_Then;

  anon28_Then:
    assume {:partition} out_i < in_DataLength * 4;
    out_Tmp_13 := in_pData;
    assume {:nonnull} out_Tmp_13 != 0;
    assume out_Tmp_13 > 0;
    havoc out_uChar;
    goto anon38_Then;

  anon38_Then:
    assume {:partition} out_uChar != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_uChar == 44;
    goto L53;

  L53:
    out_Tmp_9 := in_pData;
    assume {:nonnull} out_Tmp_9 != 0;
    assume out_Tmp_9 > 0;
    goto L54;

  L54:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} BAND(in_ulUnicode, 0) != 0;
    out_i := out_i + 1;
    goto L55;

  L55:
    out_i := out_i + 1;
    goto L55_dummy;

  L55_dummy:
    havoc out_i;
    return;

  anon31_Then:
    assume {:partition} BAND(in_ulUnicode, 0) == 0;
    goto L55;

  anon29_Then:
    assume {:partition} out_uChar != 44;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 32 <= out_uChar;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} out_uChar <= 127;
    goto L54;

  anon32_Then:
    assume {:partition} 127 < out_uChar;
    goto L53;

  anon30_Then:
    assume {:partition} out_uChar < 32;
    goto L53;
}



procedure {:LoopProcedure} Sbp2_ProcessTextualDescriptor_loop_L46(in_i: int, in_DataLength: int, in_pData: int, in_ulUnicode: int, in_Tmp_9: int, in_uChar: int, in_Tmp_13: int) returns (out_i: int, out_Tmp_9: int, out_uChar: int, out_Tmp_13: int);
  free ensures {:va_keep} out_Tmp_9 == in_Tmp_9 || out_Tmp_9 == in_pData;
  free ensures {:va_keep} out_Tmp_13 == in_pData || out_Tmp_13 == in_Tmp_13;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Get1394ConfigInfo_loop_L245(in_unitDependentDirectory: int, in_Tmp_53: int, in_sdv_13: int, in_sdv_17: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_89: int, in_Tmp_100: int, in_depDirLength: int, in_firstDevInfo: int, in_cromOffset1: int, in_Tmp_106: int, in_j: int, in_Tmp_119: int, in_devInfo: int, in_unitDirEntries: int, in_sdv_42: int, in_vendorLeaf: int, in_Tmp_137: int, in_ModelLeaf_2: int, in_status_1: int, in_packet_1: int, in_Tmp_141: int, in_Tmp_143: int, in_sdv_47: int, in_offset: int, in_Tmp_152: int, in_Tmp_154: int, in_DeviceExtension_1: int) returns (out_Tmp_53: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_89: int, out_Tmp_100: int, out_Tmp_106: int, out_j: int, out_Tmp_119: int, out_unitDirEntries: int, out_Tmp_137: int, out_status_1: int, out_Tmp_141: int, out_Tmp_143: int, out_Tmp_152: int, out_Tmp_154: int)
{
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;

  entry:
    out_Tmp_53, out_modelIdCount, out_devListSize, out_Tmp_89, out_Tmp_100, out_Tmp_106, out_j, out_Tmp_119, out_unitDirEntries, out_Tmp_137, out_status_1, out_Tmp_141, out_Tmp_143, out_Tmp_152, out_Tmp_154 := in_Tmp_53, in_modelIdCount, in_devListSize, in_Tmp_89, in_Tmp_100, in_Tmp_106, in_j, in_Tmp_119, in_unitDirEntries, in_Tmp_137, in_status_1, in_Tmp_141, in_Tmp_143, in_Tmp_152, in_Tmp_154;
    goto L245, exit;

  exit:
    return;

  L245:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_143;
    assume {:nonnull} out_Tmp_143 != 0;
    assume out_Tmp_143 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_89;
    assume {:nonnull} out_Tmp_89 != 0;
    assume out_Tmp_89 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_154;
    assume {:nonnull} out_Tmp_154 != 0;
    assume out_Tmp_154 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_141;
    assume {:nonnull} out_Tmp_141 != 0;
    assume out_Tmp_141 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_152;
    assume {:nonnull} out_Tmp_152 != 0;
    assume out_Tmp_152 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_126;
    call {:si_unique_call 1458} out_status_1 := Sbp2SendRequest(in_DeviceExtension_1, vslice_dummy_var_126, 2);
    goto anon181_Else;

  anon181_Else:
    assume {:partition} out_status_1 >= 0;
    out_Tmp_119 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_119 != 0;
    assume out_Tmp_119 > 0;
    havoc out_Tmp_137;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} out_Tmp_137 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} in_vendorLeaf != 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 1459} out_status_1 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L272;

  L272:
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto L277;

  L277:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto L279;

  L279:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L281;

  L281:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L283;

  L283:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L258;

  L258:
    out_Tmp_106 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_106 != 0;
    assume out_Tmp_106 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} out_Tmp_106 != 0;
    assume out_Tmp_106 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} out_Tmp_106 != 0;
    assume out_Tmp_106 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto L310;

  L310:
    out_j := out_j + 1;
    goto anon230_Then;

  anon230_Then:
    assume {:partition} out_j <= INTDIV(in_depDirLength, 4);
    goto anon230_Then_dummy;

  anon230_Then_dummy:
    call {:si_unique_call 1463} {:si_old_unique_call 1} out_Tmp_53, out_modelIdCount, out_devListSize, out_Tmp_89, out_Tmp_100, out_Tmp_106, out_j, out_Tmp_119, out_unitDirEntries, out_Tmp_137, out_status_1, out_Tmp_141, out_Tmp_143, out_Tmp_152, out_Tmp_154 := Sbp2Get1394ConfigInfo_loop_L245(in_unitDependentDirectory, out_Tmp_53, in_sdv_13, in_sdv_17, out_modelIdCount, out_devListSize, out_Tmp_89, out_Tmp_100, in_depDirLength, in_firstDevInfo, in_cromOffset1, out_Tmp_106, out_j, out_Tmp_119, in_devInfo, out_unitDirEntries, in_sdv_42, in_vendorLeaf, out_Tmp_137, in_ModelLeaf_2, out_status_1, in_packet_1, out_Tmp_141, out_Tmp_143, in_sdv_47, in_offset, out_Tmp_152, out_Tmp_154, in_DeviceExtension_1);
    return;

  anon208_Then:
    out_Tmp_53 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_53 != 0;
    assume out_Tmp_53 > 0;
    havoc out_Tmp_100;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} out_Tmp_100 != 23;
    goto L310;

  anon231_Then:
    assume {:partition} out_Tmp_100 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    call {:si_unique_call 1462} Sbp2ParseTextLeaf(in_DeviceExtension_1, in_unitDependentDirectory, in_cromOffset1, in_ModelLeaf_2);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_127;
    call {:si_unique_call 1460} out_status_1 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_127, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 1461} sdv_ExFreePool(0);
    goto L302;

  L302:
    out_modelIdCount := out_modelIdCount + 1;
    goto L310;

  anon185_Then:
    goto L302;

  anon209_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L310;

  anon229_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L310;

  anon184_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L283;

  anon183_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L281;

  anon182_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L279;

  anon228_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L277;

  anon227_Then:
    assume {:partition} in_vendorLeaf == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L272;

  anon226_Then:
    assume {:partition} out_Tmp_137 != 20;
    goto L258;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L245(in_unitDependentDirectory: int, in_Tmp_53: int, in_sdv_13: int, in_sdv_17: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_89: int, in_Tmp_100: int, in_depDirLength: int, in_firstDevInfo: int, in_cromOffset1: int, in_Tmp_106: int, in_j: int, in_Tmp_119: int, in_devInfo: int, in_unitDirEntries: int, in_sdv_42: int, in_vendorLeaf: int, in_Tmp_137: int, in_ModelLeaf_2: int, in_status_1: int, in_packet_1: int, in_Tmp_141: int, in_Tmp_143: int, in_sdv_47: int, in_offset: int, in_Tmp_152: int, in_Tmp_154: int, in_DeviceExtension_1: int) returns (out_Tmp_53: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_89: int, out_Tmp_100: int, out_Tmp_106: int, out_j: int, out_Tmp_119: int, out_unitDirEntries: int, out_Tmp_137: int, out_status_1: int, out_Tmp_141: int, out_Tmp_143: int, out_Tmp_152: int, out_Tmp_154: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_53 == in_Tmp_53 || out_Tmp_53 == in_unitDependentDirectory;
  free ensures {:va_keep} out_Tmp_106 == in_Tmp_106 || out_Tmp_106 == in_unitDependentDirectory;
  free ensures {:va_keep} out_Tmp_119 == in_Tmp_119 || out_Tmp_119 == in_unitDependentDirectory;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Get1394ConfigInfo_loop_L333(in_unitDependentDirectory: int, in_sdv_11: int, in_Tmp_64: int, in_modelIdCount: int, in_devListSize: int, in_sdv_26: int, in_Tmp_86: int, in_Tmp_87: int, in_Tmp_95: int, in_depDirLength: int, in_firstDevInfo: int, in_cromOffset1: int, in_ModelLeaf_1: int, in_sdv_35: int, in_j: int, in_sdv_37: int, in_devInfo: int, in_unitDirEntries: int, in_Tmp_122: int, in_Tmp_126: int, in_vendorLeaf: int, in_status_1: int, in_packet_1: int, in_modelLeaf: int, in_DeviceExtension_1: int) returns (out_Tmp_64: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_86: int, out_Tmp_87: int, out_Tmp_95: int, out_j: int, out_unitDirEntries: int, out_Tmp_122: int, out_Tmp_126: int, out_status_1: int)
{
  var vslice_dummy_var_128: int;

  entry:
    out_Tmp_64, out_modelIdCount, out_devListSize, out_Tmp_86, out_Tmp_87, out_Tmp_95, out_j, out_unitDirEntries, out_Tmp_122, out_Tmp_126, out_status_1 := in_Tmp_64, in_modelIdCount, in_devListSize, in_Tmp_86, in_Tmp_87, in_Tmp_95, in_j, in_unitDirEntries, in_Tmp_122, in_Tmp_126, in_status_1;
    goto L333, exit;

  exit:
    return;

  L333:
    goto anon186_Else;

  anon186_Else:
    assume {:partition} in_depDirLength > out_j;
    out_Tmp_95 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_95 != 0;
    assume out_Tmp_95 > 0;
    havoc out_Tmp_122;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} out_Tmp_122 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L347;

  L347:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} in_vendorLeaf != 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 1464} out_status_1 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L353;

  L353:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto L357;

  L357:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L359;

  L359:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto L361;

  L361:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L363;

  L363:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L336;

  L336:
    out_Tmp_87 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_87 != 0;
    assume out_Tmp_87 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} out_Tmp_87 != 0;
    assume out_Tmp_87 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} out_Tmp_87 != 0;
    assume out_Tmp_87 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L396;

  L396:
    out_j := out_j + 1;
    goto L396_dummy;

  L396_dummy:
    call {:si_unique_call 1469} {:si_old_unique_call 1} out_Tmp_64, out_modelIdCount, out_devListSize, out_Tmp_86, out_Tmp_87, out_Tmp_95, out_j, out_unitDirEntries, out_Tmp_122, out_Tmp_126, out_status_1 := Sbp2Get1394ConfigInfo_loop_L333(in_unitDependentDirectory, in_sdv_11, out_Tmp_64, out_modelIdCount, out_devListSize, in_sdv_26, out_Tmp_86, out_Tmp_87, out_Tmp_95, in_depDirLength, in_firstDevInfo, in_cromOffset1, in_ModelLeaf_1, in_sdv_35, out_j, in_sdv_37, in_devInfo, out_unitDirEntries, out_Tmp_122, out_Tmp_126, in_vendorLeaf, out_status_1, in_packet_1, in_modelLeaf, in_DeviceExtension_1);
    return;

  anon210_Then:
    out_Tmp_86 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_86 != 0;
    assume out_Tmp_86 > 0;
    havoc out_Tmp_64;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} out_Tmp_64 != 23;
    goto L396;

  anon236_Then:
    assume {:partition} out_Tmp_64 == 23;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_126;
    assume {:nonnull} out_Tmp_126 != 0;
    assume out_Tmp_126 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_126 != 0;
    assume out_Tmp_126 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_126 != 0;
    assume out_Tmp_126 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_126 != 0;
    assume out_Tmp_126 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    call {:si_unique_call 1468} Sbp2ParseTextLeaf(in_DeviceExtension_1, in_unitDependentDirectory, in_cromOffset1, in_ModelLeaf_1);
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_128;
    call {:si_unique_call 1466} out_status_1 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_128, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 1467} sdv_ExFreePool(0);
    goto L377;

  L377:
    out_modelIdCount := out_modelIdCount + 1;
    goto L396;

  anon193_Then:
    goto L377;

  anon192_Then:
    goto L377;

  anon211_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L396;

  anon235_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L396;

  anon191_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L363;

  anon190_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L361;

  anon189_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L359;

  anon234_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L357;

  anon188_Then:
    assume {:partition} in_vendorLeaf == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L353;

  anon233_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} in_modelLeaf != 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 1465} out_status_1 := Sbp2_ProcessTextualDescriptor(in_modelLeaf, uniModelId__DEVICE_INFORMATION(in_devInfo));
    goto L347;

  anon187_Then:
    assume {:partition} in_modelLeaf == 0;
    goto L347;

  anon232_Then:
    assume {:partition} out_Tmp_122 != 20;
    goto L336;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L333(in_unitDependentDirectory: int, in_sdv_11: int, in_Tmp_64: int, in_modelIdCount: int, in_devListSize: int, in_sdv_26: int, in_Tmp_86: int, in_Tmp_87: int, in_Tmp_95: int, in_depDirLength: int, in_firstDevInfo: int, in_cromOffset1: int, in_ModelLeaf_1: int, in_sdv_35: int, in_j: int, in_sdv_37: int, in_devInfo: int, in_unitDirEntries: int, in_Tmp_122: int, in_Tmp_126: int, in_vendorLeaf: int, in_status_1: int, in_packet_1: int, in_modelLeaf: int, in_DeviceExtension_1: int) returns (out_Tmp_64: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_86: int, out_Tmp_87: int, out_Tmp_95: int, out_j: int, out_unitDirEntries: int, out_Tmp_122: int, out_Tmp_126: int, out_status_1: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_86 == in_Tmp_86 || out_Tmp_86 == in_unitDependentDirectory;
  free ensures {:va_keep} out_Tmp_87 == in_Tmp_87 || out_Tmp_87 == in_unitDependentDirectory;
  free ensures {:va_keep} out_Tmp_95 == in_Tmp_95 || out_Tmp_95 == in_unitDependentDirectory;
  free ensures {:va_keep} out_status_1 == 0 || out_status_1 == -1073741670 || out_status_1 == in_status_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Get1394ConfigInfo_loop_L141(in_sdv_10: int, in_unitDependentDirectory: int, in_sdv_11: int, in_Tmp_53: int, in_sdv_13: int, in_sdv_15: int, in_sdv_17: int, in_Tmp_60: int, in_cromOffset: int, in_Tmp_61: int, in_Tmp_62: int, in_Tmp_64: int, in_Tmp_66: int, in_Tmp_67: int, in_directoryLength: int, in_Tmp_78: int, in_modelIdCount: int, in_dirInfoQuad: int, in_devListSize: int, in_firstOne: int, in_sdv_25: int, in_Tmp_82: int, in_sdv_26: int, in_Tmp_85: int, in_sdv_27: int, in_Tmp_86: int, in_Tmp_87: int, in_sdv_28: int, in_Tmp_89: int, in_directoryLocation: int, in_Tmp_93: int, in_Tmp_94: int, in_Tmp_95: int, in_Tmp_100: int, in_i_1: int, in_depDirLength: int, in_sdv_31: int, in_sbp2Device: int, in_firstDevInfo: int, in_cromOffset1: int, in_Tmp_104: int, in_ModelLeaf: int, in_Tmp_106: int, in_ModelLeaf_1: int, in_sdv_34: int, in_sdv_35: int, in_Tmp_109: int, in_Tmp_110: int, in_j: int, in_sdv_37: int, in_Tmp_114: int, in_Tmp_116: int, in_Tmp_117: int, in_Tmp_118: int, in_Tmp_119: int, in_devInfo: int, in_unitDirEntries: int, in_sdv_40: int, in_sdv_41: int, in_Tmp_122: int, in_sdv_42: int, in_Tmp_125: int, in_Tmp_126: int, in_currentGeneration: int, in_Tmp_128: int, in_Tmp_129: int, in_Tmp_131: int, in_Tmp_132: int, in_Tmp_133: int, in_vendorLeaf: int, in_Tmp_137: int, in_unitDirectory: int, in_ModelLeaf_2: int, in_status_1: int, in_packet_1: int, in_Tmp_141: int, in_Tmp_143: int, in_sdv_47: int, in_Tmp_144: int, in_info: int, in_Tmp_150: int, in_offset: int, in_Tmp_152: int, in_modelLeaf: int, in_Tmp_153: int, in_Tmp_154: int, in_sdv_48: int, in_Tmp_155: int, in_Tmp_156: int, in_DeviceExtension_1: int, in_Sbp2Req: int) returns (out_unitDependentDirectory: int, out_Tmp_53: int, out_Tmp_60: int, out_Tmp_61: int, out_Tmp_62: int, out_Tmp_64: int, out_Tmp_66: int, out_Tmp_67: int, out_Tmp_78: int, out_modelIdCount: int, out_dirInfoQuad: int, out_devListSize: int, out_firstOne: int, out_Tmp_82: int, out_Tmp_85: int, out_sdv_27: int, out_Tmp_86: int, out_Tmp_87: int, out_Tmp_89: int, out_Tmp_93: int, out_Tmp_94: int, out_Tmp_95: int, out_Tmp_100: int, out_i_1: int, out_depDirLength: int, out_sbp2Device: int, out_Tmp_104: int, out_Tmp_106: int, out_Tmp_109: int, out_Tmp_110: int, out_j: int, out_Tmp_114: int, out_Tmp_116: int, out_Tmp_117: int, out_Tmp_118: int, out_Tmp_119: int, out_devInfo: int, out_unitDirEntries: int, out_sdv_41: int, out_Tmp_122: int, out_Tmp_125: int, out_Tmp_126: int, out_Tmp_128: int, out_Tmp_129: int, out_Tmp_131: int, out_Tmp_132: int, out_Tmp_133: int, out_Tmp_137: int, out_status_1: int, out_Tmp_141: int, out_Tmp_143: int, out_Tmp_144: int, out_info: int, out_Tmp_150: int, out_offset: int, out_Tmp_152: int, out_Tmp_153: int, out_Tmp_154: int, out_Tmp_155: int, out_Tmp_156: int)
{
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;

  entry:
    out_unitDependentDirectory, out_Tmp_53, out_Tmp_60, out_Tmp_61, out_Tmp_62, out_Tmp_64, out_Tmp_66, out_Tmp_67, out_Tmp_78, out_modelIdCount, out_dirInfoQuad, out_devListSize, out_firstOne, out_Tmp_82, out_Tmp_85, out_sdv_27, out_Tmp_86, out_Tmp_87, out_Tmp_89, out_Tmp_93, out_Tmp_94, out_Tmp_95, out_Tmp_100, out_i_1, out_depDirLength, out_sbp2Device, out_Tmp_104, out_Tmp_106, out_Tmp_109, out_Tmp_110, out_j, out_Tmp_114, out_Tmp_116, out_Tmp_117, out_Tmp_118, out_Tmp_119, out_devInfo, out_unitDirEntries, out_sdv_41, out_Tmp_122, out_Tmp_125, out_Tmp_126, out_Tmp_128, out_Tmp_129, out_Tmp_131, out_Tmp_132, out_Tmp_133, out_Tmp_137, out_status_1, out_Tmp_141, out_Tmp_143, out_Tmp_144, out_info, out_Tmp_150, out_offset, out_Tmp_152, out_Tmp_153, out_Tmp_154, out_Tmp_155, out_Tmp_156 := in_unitDependentDirectory, in_Tmp_53, in_Tmp_60, in_Tmp_61, in_Tmp_62, in_Tmp_64, in_Tmp_66, in_Tmp_67, in_Tmp_78, in_modelIdCount, in_dirInfoQuad, in_devListSize, in_firstOne, in_Tmp_82, in_Tmp_85, in_sdv_27, in_Tmp_86, in_Tmp_87, in_Tmp_89, in_Tmp_93, in_Tmp_94, in_Tmp_95, in_Tmp_100, in_i_1, in_depDirLength, in_sbp2Device, in_Tmp_104, in_Tmp_106, in_Tmp_109, in_Tmp_110, in_j, in_Tmp_114, in_Tmp_116, in_Tmp_117, in_Tmp_118, in_Tmp_119, in_devInfo, in_unitDirEntries, in_sdv_41, in_Tmp_122, in_Tmp_125, in_Tmp_126, in_Tmp_128, in_Tmp_129, in_Tmp_131, in_Tmp_132, in_Tmp_133, in_Tmp_137, in_status_1, in_Tmp_141, in_Tmp_143, in_Tmp_144, in_info, in_Tmp_150, in_offset, in_Tmp_152, in_Tmp_153, in_Tmp_154, in_Tmp_155, in_Tmp_156;
    goto L141, exit;

  exit:
    return;

  L141:
    goto anon173_Else;

  anon173_Else:
    assume {:partition} in_directoryLength > out_i_1;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} in_Sbp2Req != 0;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    goto L169;

  L169:
    out_i_1 := out_i_1 + 1;
    goto L169_dummy;

  L169_dummy:
    call {:si_unique_call 1496} {:si_old_unique_call 1} out_unitDependentDirectory, out_Tmp_53, out_Tmp_60, out_Tmp_61, out_Tmp_62, out_Tmp_64, out_Tmp_66, out_Tmp_67, out_Tmp_78, out_modelIdCount, out_dirInfoQuad, out_devListSize, out_firstOne, out_Tmp_82, out_Tmp_85, out_sdv_27, out_Tmp_86, out_Tmp_87, out_Tmp_89, out_Tmp_93, out_Tmp_94, out_Tmp_95, out_Tmp_100, out_i_1, out_depDirLength, out_sbp2Device, out_Tmp_104, out_Tmp_106, out_Tmp_109, out_Tmp_110, out_j, out_Tmp_114, out_Tmp_116, out_Tmp_117, out_Tmp_118, out_Tmp_119, out_devInfo, out_unitDirEntries, out_sdv_41, out_Tmp_122, out_Tmp_125, out_Tmp_126, out_Tmp_128, out_Tmp_129, out_Tmp_131, out_Tmp_132, out_Tmp_133, out_Tmp_137, out_status_1, out_Tmp_141, out_Tmp_143, out_Tmp_144, out_info, out_Tmp_150, out_offset, out_Tmp_152, out_Tmp_153, out_Tmp_154, out_Tmp_155, out_Tmp_156 := Sbp2Get1394ConfigInfo_loop_L141(in_sdv_10, out_unitDependentDirectory, in_sdv_11, out_Tmp_53, in_sdv_13, in_sdv_15, in_sdv_17, out_Tmp_60, in_cromOffset, out_Tmp_61, out_Tmp_62, out_Tmp_64, out_Tmp_66, out_Tmp_67, in_directoryLength, out_Tmp_78, out_modelIdCount, out_dirInfoQuad, out_devListSize, out_firstOne, in_sdv_25, out_Tmp_82, in_sdv_26, out_Tmp_85, out_sdv_27, out_Tmp_86, out_Tmp_87, in_sdv_28, out_Tmp_89, in_directoryLocation, out_Tmp_93, out_Tmp_94, out_Tmp_95, out_Tmp_100, out_i_1, out_depDirLength, in_sdv_31, out_sbp2Device, in_firstDevInfo, in_cromOffset1, out_Tmp_104, in_ModelLeaf, out_Tmp_106, in_ModelLeaf_1, in_sdv_34, in_sdv_35, out_Tmp_109, out_Tmp_110, out_j, in_sdv_37, out_Tmp_114, out_Tmp_116, out_Tmp_117, out_Tmp_118, out_Tmp_119, out_devInfo, out_unitDirEntries, in_sdv_40, out_sdv_41, out_Tmp_122, in_sdv_42, out_Tmp_125, out_Tmp_126, in_currentGeneration, out_Tmp_128, out_Tmp_129, out_Tmp_131, out_Tmp_132, out_Tmp_133, in_vendorLeaf, out_Tmp_137, in_unitDirectory, in_ModelLeaf_2, out_status_1, in_packet_1, out_Tmp_141, out_Tmp_143, in_sdv_47, out_Tmp_144, out_info, out_Tmp_150, out_offset, out_Tmp_152, in_modelLeaf, out_Tmp_153, out_Tmp_154, in_sdv_48, out_Tmp_155, out_Tmp_156, in_DeviceExtension_1, in_Sbp2Req);
    return;

  anon176_Then:
    out_Tmp_60 := in_unitDirectory;
    assume {:nonnull} out_Tmp_60 != 0;
    assume out_Tmp_60 > 0;
    havoc out_Tmp_117;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} out_Tmp_117 != 129;
    goto L169;

  anon217_Then:
    assume {:partition} out_Tmp_117 == 129;
    out_Tmp_116 := in_unitDirectory;
    assume {:nonnull} out_Tmp_116 != 0;
    assume out_Tmp_116 > 0;
    havoc out_Tmp_132;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon218_Else;

  anon218_Else:
    goto L169;

  anon175_Then:
    assume {:partition} in_Sbp2Req == 0;
    out_Tmp_114 := out_devListSize;
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    havoc out_Tmp_61;
    out_devInfo := out_Tmp_61 + out_Tmp_114 * 256;
    out_Tmp_78 := in_unitDirectory;
    assume {:nonnull} out_Tmp_78 != 0;
    assume out_Tmp_78 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} out_Tmp_78 != 0;
    assume out_Tmp_78 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} out_Tmp_78 != 0;
    assume out_Tmp_78 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} out_Tmp_78 != 0;
    assume out_Tmp_78 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} out_Tmp_78 != 0;
    assume out_Tmp_78 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} out_Tmp_78 != 0;
    assume out_Tmp_78 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} out_Tmp_78 != 0;
    assume out_Tmp_78 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} out_Tmp_78 != 0;
    assume out_Tmp_78 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} out_firstOne != 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    havoc out_offset;
    call {:si_unique_call 1491} out_sdv_41 := IoAllocateMdl(0, out_depDirLength, 0, 0, 0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_110;
    assume {:nonnull} out_Tmp_110 != 0;
    assume out_Tmp_110 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_85;
    assume {:nonnull} out_Tmp_85 != 0;
    assume out_Tmp_85 > 0;
    goto anon223_Else;

  anon223_Else:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_94;
    assume {:nonnull} out_Tmp_94 != 0;
    assume out_Tmp_94 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_156;
    assume {:nonnull} out_Tmp_156 != 0;
    assume out_Tmp_156 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_82;
    assume {:nonnull} out_Tmp_82 != 0;
    assume out_Tmp_82 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_104;
    assume {:nonnull} out_Tmp_104 != 0;
    assume out_Tmp_104 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_153;
    assume {:nonnull} out_Tmp_153 != 0;
    assume out_Tmp_153 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_93;
    assume {:nonnull} out_Tmp_93 != 0;
    assume out_Tmp_93 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_125;
    assume {:nonnull} out_Tmp_125 != 0;
    assume out_Tmp_125 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_133;
    assume {:nonnull} out_Tmp_133 != 0;
    assume out_Tmp_133 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_144;
    assume {:nonnull} out_Tmp_144 != 0;
    assume out_Tmp_144 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_132;
    call {:si_unique_call 1490} out_status_1 := Sbp2SendRequest(in_DeviceExtension_1, vslice_dummy_var_132, 2);
    goto anon179_Else;

  anon179_Else:
    assume {:partition} out_status_1 >= 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 1488} IoFreeMdl(0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_129;
    assume {:nonnull} out_Tmp_129 != 0;
    assume out_Tmp_129 > 0;
    call {:si_unique_call 1489} out_dirInfoQuad := corral_nondet();
    out_depDirLength := out_dirInfoQuad * 4;
    goto anon224_Else;

  anon224_Else:
    assume {:partition} out_depDirLength <= 256;
    call {:si_unique_call 1486} sdv_ExFreePool(0);
    out_Tmp_128 := out_depDirLength + 4;
    call {:si_unique_call 1487} out_unitDependentDirectory := ExAllocatePoolWithTag(0, out_Tmp_128, 846226035);
    goto anon180_Else;

  anon180_Else:
    assume {:partition} out_unitDependentDirectory != 0;
    out_Tmp_150 := out_depDirLength + 4;
    call {:si_unique_call 1485} out_sdv_27 := IoAllocateMdl(0, out_Tmp_150, 0, 0, 0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_66;
    assume {:nonnull} out_Tmp_66 != 0;
    assume out_Tmp_66 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_67;
    assume {:nonnull} out_Tmp_67 != 0;
    assume out_Tmp_67 > 0;
    goto anon225_Else;

  anon225_Else:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    out_j := 1;
    goto L245;

  L245:
    call {:si_unique_call 1483} out_Tmp_53, out_modelIdCount, out_devListSize, out_Tmp_89, out_Tmp_100, out_Tmp_106, out_j, out_Tmp_119, out_unitDirEntries, out_Tmp_137, out_status_1, out_Tmp_141, out_Tmp_143, out_Tmp_152, out_Tmp_154 := Sbp2Get1394ConfigInfo_loop_L245(out_unitDependentDirectory, out_Tmp_53, in_sdv_13, in_sdv_17, out_modelIdCount, out_devListSize, out_Tmp_89, out_Tmp_100, out_depDirLength, in_firstDevInfo, in_cromOffset1, out_Tmp_106, out_j, out_Tmp_119, out_devInfo, out_unitDirEntries, in_sdv_42, in_vendorLeaf, out_Tmp_137, in_ModelLeaf_2, out_status_1, in_packet_1, out_Tmp_141, out_Tmp_143, in_sdv_47, out_offset, out_Tmp_152, out_Tmp_154, in_DeviceExtension_1);
    goto L245_last;

  L245_last:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_143;
    assume {:nonnull} out_Tmp_143 != 0;
    assume out_Tmp_143 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_89;
    assume {:nonnull} out_Tmp_89 != 0;
    assume out_Tmp_89 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_154;
    assume {:nonnull} out_Tmp_154 != 0;
    assume out_Tmp_154 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_141;
    assume {:nonnull} out_Tmp_141 != 0;
    assume out_Tmp_141 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_152;
    assume {:nonnull} out_Tmp_152 != 0;
    assume out_Tmp_152 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_131;
    call {:si_unique_call 1484} out_status_1 := Sbp2SendRequest(in_DeviceExtension_1, vslice_dummy_var_131, 2);
    goto anon181_Else;

  anon181_Else:
    assume {:partition} out_status_1 >= 0;
    out_Tmp_119 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_119 != 0;
    assume out_Tmp_119 > 0;
    havoc out_Tmp_137;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} out_Tmp_137 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} in_vendorLeaf != 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 1492} out_status_1 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L272;

  L272:
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto L277;

  L277:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto L279;

  L279:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L281;

  L281:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L283;

  L283:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L258;

  L258:
    out_Tmp_106 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_106 != 0;
    assume out_Tmp_106 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} out_Tmp_106 != 0;
    assume out_Tmp_106 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} out_Tmp_106 != 0;
    assume out_Tmp_106 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto L310;

  L310:
    out_j := out_j + 1;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} INTDIV(out_depDirLength, 4) < out_j;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 1470} IoFreeMdl(0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_155;
    assume {:nonnull} out_Tmp_155 != 0;
    assume out_Tmp_155 > 0;
    goto L169;

  anon230_Then:
    assume {:partition} out_j <= INTDIV(out_depDirLength, 4);
    assume false;
    return;

  anon208_Then:
    out_Tmp_53 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_53 != 0;
    assume out_Tmp_53 > 0;
    havoc out_Tmp_100;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} out_Tmp_100 != 23;
    goto L310;

  anon231_Then:
    assume {:partition} out_Tmp_100 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    call {:si_unique_call 1495} Sbp2ParseTextLeaf(in_DeviceExtension_1, out_unitDependentDirectory, in_cromOffset1, in_ModelLeaf_2);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_133;
    call {:si_unique_call 1493} out_status_1 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_133, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 1494} sdv_ExFreePool(0);
    goto L302;

  L302:
    out_modelIdCount := out_modelIdCount + 1;
    goto L310;

  anon185_Then:
    goto L302;

  anon209_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L310;

  anon229_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L310;

  anon184_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L283;

  anon183_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L281;

  anon182_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L279;

  anon228_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L277;

  anon227_Then:
    assume {:partition} in_vendorLeaf == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L272;

  anon226_Then:
    assume {:partition} out_Tmp_137 != 20;
    goto L258;

  anon178_Then:
    assume {:partition} out_firstOne == 0;
    out_firstOne := 1;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 1477} out_depDirLength := corral_nondet();
    out_j := 0;
    goto L333;

  L333:
    call {:si_unique_call 1476} out_Tmp_64, out_modelIdCount, out_devListSize, out_Tmp_86, out_Tmp_87, out_Tmp_95, out_j, out_unitDirEntries, out_Tmp_122, out_Tmp_126, out_status_1 := Sbp2Get1394ConfigInfo_loop_L333(out_unitDependentDirectory, in_sdv_11, out_Tmp_64, out_modelIdCount, out_devListSize, in_sdv_26, out_Tmp_86, out_Tmp_87, out_Tmp_95, out_depDirLength, in_firstDevInfo, in_cromOffset1, in_ModelLeaf_1, in_sdv_35, out_j, in_sdv_37, out_devInfo, out_unitDirEntries, out_Tmp_122, out_Tmp_126, in_vendorLeaf, out_status_1, in_packet_1, in_modelLeaf, in_DeviceExtension_1);
    goto L333_last;

  L333_last:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} out_depDirLength > out_j;
    out_Tmp_95 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_95 != 0;
    assume out_Tmp_95 > 0;
    havoc out_Tmp_122;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} out_Tmp_122 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L347;

  L347:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} in_vendorLeaf != 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 1478} out_status_1 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L353;

  L353:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto L357;

  L357:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L359;

  L359:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto L361;

  L361:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L363;

  L363:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L336;

  L336:
    out_Tmp_87 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_87 != 0;
    assume out_Tmp_87 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} out_Tmp_87 != 0;
    assume out_Tmp_87 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} out_Tmp_87 != 0;
    assume out_Tmp_87 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L396;

  L396:
    out_j := out_j + 1;
    assume false;
    return;

  anon210_Then:
    out_Tmp_86 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_86 != 0;
    assume out_Tmp_86 > 0;
    havoc out_Tmp_64;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} out_Tmp_64 != 23;
    goto L396;

  anon236_Then:
    assume {:partition} out_Tmp_64 == 23;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_126;
    assume {:nonnull} out_Tmp_126 != 0;
    assume out_Tmp_126 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_126 != 0;
    assume out_Tmp_126 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_126 != 0;
    assume out_Tmp_126 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_126 != 0;
    assume out_Tmp_126 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    call {:si_unique_call 1482} Sbp2ParseTextLeaf(in_DeviceExtension_1, out_unitDependentDirectory, in_cromOffset1, in_ModelLeaf_1);
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_130;
    call {:si_unique_call 1480} out_status_1 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_130, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 1481} sdv_ExFreePool(0);
    goto L377;

  L377:
    out_modelIdCount := out_modelIdCount + 1;
    goto L396;

  anon193_Then:
    goto L377;

  anon192_Then:
    goto L377;

  anon211_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L396;

  anon235_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L396;

  anon191_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L363;

  anon190_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L361;

  anon189_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L359;

  anon234_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L357;

  anon188_Then:
    assume {:partition} in_vendorLeaf == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L353;

  anon233_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} in_modelLeaf != 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 1479} out_status_1 := Sbp2_ProcessTextualDescriptor(in_modelLeaf, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L347;

  anon187_Then:
    assume {:partition} in_modelLeaf == 0;
    goto L347;

  anon232_Then:
    assume {:partition} out_Tmp_122 != 20;
    goto L336;

  anon186_Then:
    assume {:partition} out_j >= out_depDirLength;
    goto L169;

  anon201_Then:
    goto L169;

  anon202_Then:
    out_Tmp_131 := in_unitDirectory;
    assume {:nonnull} out_Tmp_131 != 0;
    assume out_Tmp_131 > 0;
    havoc out_Tmp_109;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} out_Tmp_109 == 23;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} out_devListSize >= out_modelIdCount;
    out_Tmp_118 := out_modelIdCount;
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    havoc out_Tmp_62;
    out_info := out_Tmp_62 + out_Tmp_118 * 256;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    call {:si_unique_call 1475} Sbp2ParseTextLeaf(in_DeviceExtension_1, in_unitDirectory, in_cromOffset1, in_ModelLeaf);
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    havoc vslice_dummy_var_129;
    call {:si_unique_call 1473} out_status_1 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_129, uniModelId__DEVICE_INFORMATION(out_info));
    call {:si_unique_call 1474} sdv_ExFreePool(0);
    goto L416;

  L416:
    out_modelIdCount := out_modelIdCount + 1;
    goto L169;

  anon195_Then:
    goto L416;

  anon222_Then:
    goto L416;

  anon194_Then:
    assume {:partition} out_modelIdCount > out_devListSize;
    goto L169;

  anon221_Then:
    assume {:partition} out_Tmp_109 != 23;
    goto L169;

  anon203_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_sbp2Device := 1;
    goto L169;

  anon204_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L169;

  anon205_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L169;

  anon206_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L169;

  anon207_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L169;

  anon219_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} out_devListSize != 0;
    goto L470;

  L470:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} in_vendorLeaf != 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 1471} out_status_1 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L476;

  L476:
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L169;

  anon197_Then:
    assume {:partition} in_vendorLeaf == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L476;

  anon220_Then:
    assume {:partition} out_devListSize == 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} in_modelLeaf != 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 1472} out_status_1 := Sbp2_ProcessTextualDescriptor(in_modelLeaf, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L470;

  anon196_Then:
    assume {:partition} in_modelLeaf == 0;
    goto L470;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L141(in_sdv_10: int, in_unitDependentDirectory: int, in_sdv_11: int, in_Tmp_53: int, in_sdv_13: int, in_sdv_15: int, in_sdv_17: int, in_Tmp_60: int, in_cromOffset: int, in_Tmp_61: int, in_Tmp_62: int, in_Tmp_64: int, in_Tmp_66: int, in_Tmp_67: int, in_directoryLength: int, in_Tmp_78: int, in_modelIdCount: int, in_dirInfoQuad: int, in_devListSize: int, in_firstOne: int, in_sdv_25: int, in_Tmp_82: int, in_sdv_26: int, in_Tmp_85: int, in_sdv_27: int, in_Tmp_86: int, in_Tmp_87: int, in_sdv_28: int, in_Tmp_89: int, in_directoryLocation: int, in_Tmp_93: int, in_Tmp_94: int, in_Tmp_95: int, in_Tmp_100: int, in_i_1: int, in_depDirLength: int, in_sdv_31: int, in_sbp2Device: int, in_firstDevInfo: int, in_cromOffset1: int, in_Tmp_104: int, in_ModelLeaf: int, in_Tmp_106: int, in_ModelLeaf_1: int, in_sdv_34: int, in_sdv_35: int, in_Tmp_109: int, in_Tmp_110: int, in_j: int, in_sdv_37: int, in_Tmp_114: int, in_Tmp_116: int, in_Tmp_117: int, in_Tmp_118: int, in_Tmp_119: int, in_devInfo: int, in_unitDirEntries: int, in_sdv_40: int, in_sdv_41: int, in_Tmp_122: int, in_sdv_42: int, in_Tmp_125: int, in_Tmp_126: int, in_currentGeneration: int, in_Tmp_128: int, in_Tmp_129: int, in_Tmp_131: int, in_Tmp_132: int, in_Tmp_133: int, in_vendorLeaf: int, in_Tmp_137: int, in_unitDirectory: int, in_ModelLeaf_2: int, in_status_1: int, in_packet_1: int, in_Tmp_141: int, in_Tmp_143: int, in_sdv_47: int, in_Tmp_144: int, in_info: int, in_Tmp_150: int, in_offset: int, in_Tmp_152: int, in_modelLeaf: int, in_Tmp_153: int, in_Tmp_154: int, in_sdv_48: int, in_Tmp_155: int, in_Tmp_156: int, in_DeviceExtension_1: int, in_Sbp2Req: int) returns (out_unitDependentDirectory: int, out_Tmp_53: int, out_Tmp_60: int, out_Tmp_61: int, out_Tmp_62: int, out_Tmp_64: int, out_Tmp_66: int, out_Tmp_67: int, out_Tmp_78: int, out_modelIdCount: int, out_dirInfoQuad: int, out_devListSize: int, out_firstOne: int, out_Tmp_82: int, out_Tmp_85: int, out_sdv_27: int, out_Tmp_86: int, out_Tmp_87: int, out_Tmp_89: int, out_Tmp_93: int, out_Tmp_94: int, out_Tmp_95: int, out_Tmp_100: int, out_i_1: int, out_depDirLength: int, out_sbp2Device: int, out_Tmp_104: int, out_Tmp_106: int, out_Tmp_109: int, out_Tmp_110: int, out_j: int, out_Tmp_114: int, out_Tmp_116: int, out_Tmp_117: int, out_Tmp_118: int, out_Tmp_119: int, out_devInfo: int, out_unitDirEntries: int, out_sdv_41: int, out_Tmp_122: int, out_Tmp_125: int, out_Tmp_126: int, out_Tmp_128: int, out_Tmp_129: int, out_Tmp_131: int, out_Tmp_132: int, out_Tmp_133: int, out_Tmp_137: int, out_status_1: int, out_Tmp_141: int, out_Tmp_143: int, out_Tmp_144: int, out_info: int, out_Tmp_150: int, out_offset: int, out_Tmp_152: int, out_Tmp_153: int, out_Tmp_154: int, out_Tmp_155: int, out_Tmp_156: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_60 == in_Tmp_60 || out_Tmp_60 == in_unitDirectory;
  free ensures {:va_keep} out_Tmp_78 == in_Tmp_78 || out_Tmp_78 == in_unitDirectory;
  free ensures {:va_keep} out_firstOne == 1 || out_firstOne == in_firstOne;
  free ensures {:va_keep} out_sbp2Device == 1 || out_sbp2Device == in_sbp2Device;
  free ensures {:va_keep} out_Tmp_116 == in_Tmp_116 || out_Tmp_116 == in_unitDirectory;
  free ensures {:va_keep} out_Tmp_131 == in_Tmp_131 || out_Tmp_131 == in_unitDirectory;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Get1394ConfigInfo_loop_L493(in_Tmp_57: int, in_i_1: int, in_devInfo: int, in_Tmp_120: int, in_DeviceExtension_1: int) returns (out_Tmp_57: int, out_i_1: int, out_devInfo: int, out_Tmp_120: int)
{

  entry:
    out_Tmp_57, out_i_1, out_devInfo, out_Tmp_120 := in_Tmp_57, in_i_1, in_devInfo, in_Tmp_120;
    goto L493, exit;

  exit:
    return;

  L493:
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    goto anon200_Else;

  anon200_Else:
    out_Tmp_57 := out_i_1;
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    havoc out_Tmp_120;
    out_devInfo := out_Tmp_120 + out_Tmp_57 * 256;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 1497} sdv_ExFreePool(0);
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L497;

  L497:
    out_i_1 := out_i_1 + 1;
    goto L497_dummy;

  L497_dummy:
    call {:si_unique_call 1498} {:si_old_unique_call 1} out_Tmp_57, out_i_1, out_devInfo, out_Tmp_120 := Sbp2Get1394ConfigInfo_loop_L493(out_Tmp_57, out_i_1, out_devInfo, out_Tmp_120, in_DeviceExtension_1);
    return;

  anon237_Then:
    goto L497;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L493(in_Tmp_57: int, in_i_1: int, in_devInfo: int, in_Tmp_120: int, in_DeviceExtension_1: int) returns (out_Tmp_57: int, out_i_1: int, out_devInfo: int, out_Tmp_120: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2ParseTextLeaf_loop_L123(in_i_2: int, in_Tmp_169: int, in_Tmp_173: int, in_Tmp_175: int, in_Tmp_187: int, in_Tmp_189: int, in_leafLength: int, in_packet_2: int, in_status_3: int, in_DeviceExtension_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_169: int, out_Tmp_173: int, out_Tmp_175: int, out_Tmp_187: int, out_Tmp_189: int, out_status_3: int)
{
  var vslice_dummy_var_134: int;

  entry:
    out_i_2, out_Tmp_169, out_Tmp_173, out_Tmp_175, out_Tmp_187, out_Tmp_189, out_status_3 := in_i_2, in_Tmp_169, in_Tmp_173, in_Tmp_175, in_Tmp_187, in_Tmp_189, in_status_3;
    goto L123, exit;

  exit:
    return;

  L123:
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_187;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_187 != 0;
    assume out_Tmp_187 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_189;
    assume {:nonnull} out_Tmp_189 != 0;
    assume out_Tmp_189 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_175;
    assume {:nonnull} out_Tmp_175 != 0;
    assume out_Tmp_175 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_173;
    assume {:nonnull} out_Tmp_173 != 0;
    assume out_Tmp_173 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_169;
    assume {:nonnull} out_Tmp_169 != 0;
    assume out_Tmp_169 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_134;
    call {:si_unique_call 1499} out_status_3 := Sbp2SendRequest(in_DeviceExtension_2, vslice_dummy_var_134, 2);
    goto anon30_Else;

  anon30_Else:
    assume {:partition} out_status_3 >= 0;
    out_i_2 := out_i_2 + 1;
    goto anon33_Then;

  anon33_Then:
    assume {:partition} out_i_2 <= INTDIV(in_leafLength, 4);
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    call {:si_unique_call 1500} {:si_old_unique_call 1} out_i_2, out_Tmp_169, out_Tmp_173, out_Tmp_175, out_Tmp_187, out_Tmp_189, out_status_3 := Sbp2ParseTextLeaf_loop_L123(out_i_2, out_Tmp_169, out_Tmp_173, out_Tmp_175, out_Tmp_187, out_Tmp_189, in_leafLength, in_packet_2, out_status_3, in_DeviceExtension_2, in_ModelLeafLocation);
    return;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L123(in_i_2: int, in_Tmp_169: int, in_Tmp_173: int, in_Tmp_175: int, in_Tmp_187: int, in_Tmp_189: int, in_leafLength: int, in_packet_2: int, in_status_3: int, in_DeviceExtension_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_169: int, out_Tmp_173: int, out_Tmp_175: int, out_Tmp_187: int, out_Tmp_189: int, out_status_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2ParseTextLeaf_loop_L42(in_Tmp_167: int, in_Tmp_170: int, in_Tmp_172: int, in_waitValue_1: int, in_Tmp_174: int, in_Tmp_180: int, in_Tmp_183: int, in_Tmp_184: int, in_Tmp_185: int, in_Tmp_186: int, in_currentGeneration_1: int, in_retries: int, in_tModelLeafMdl: int, in_Tmp_196: int, in_packet_2: int, in_status_3: int, in_Tmp_198: int, in_Tmp_199: int, in_Tmp_200: int, in_event: int, in_DeviceExtension_2: int, in_ModelLeafLocation: int, in_vslice_dummy_var_7: int) returns (out_Tmp_167: int, out_Tmp_170: int, out_Tmp_172: int, out_Tmp_174: int, out_Tmp_180: int, out_Tmp_183: int, out_Tmp_184: int, out_Tmp_185: int, out_Tmp_186: int, out_currentGeneration_1: int, out_retries: int, out_Tmp_196: int, out_status_3: int, out_Tmp_198: int, out_Tmp_199: int, out_Tmp_200: int, out_vslice_dummy_var_7: int)
{
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;

  entry:
    out_Tmp_167, out_Tmp_170, out_Tmp_172, out_Tmp_174, out_Tmp_180, out_Tmp_183, out_Tmp_184, out_Tmp_185, out_Tmp_186, out_currentGeneration_1, out_retries, out_Tmp_196, out_status_3, out_Tmp_198, out_Tmp_199, out_Tmp_200, out_vslice_dummy_var_7 := in_Tmp_167, in_Tmp_170, in_Tmp_172, in_Tmp_174, in_Tmp_180, in_Tmp_183, in_Tmp_184, in_Tmp_185, in_Tmp_186, in_currentGeneration_1, in_retries, in_Tmp_196, in_status_3, in_Tmp_198, in_Tmp_199, in_Tmp_200, in_vslice_dummy_var_7;
    goto L42, exit;

  exit:
    return;

  L42:
    assume {:CounterLoop 3} {:Counter "retries"} true;
    goto anon26_Else;

  anon26_Else:
    assume {:partition} out_retries != 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_184;
    assume {:nonnull} out_Tmp_184 != 0;
    assume out_Tmp_184 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_198;
    assume {:nonnull} out_Tmp_198 != 0;
    assume out_Tmp_198 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_135;
    call {:si_unique_call 1503} out_status_3 := Sbp2SendRequest(in_DeviceExtension_2, vslice_dummy_var_135, 2);
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_180;
    assume {:nonnull} out_Tmp_180 != 0;
    assume out_Tmp_180 > 0;
    havoc out_currentGeneration_1;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_196;
    assume {:nonnull} out_Tmp_196 != 0;
    assume out_Tmp_196 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_174;
    assume {:nonnull} out_Tmp_174 != 0;
    assume out_Tmp_174 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_167;
    assume {:nonnull} out_Tmp_167 != 0;
    assume out_Tmp_167 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_186;
    assume {:nonnull} out_Tmp_186 != 0;
    assume out_Tmp_186 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_172;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_172 != 0;
    assume out_Tmp_172 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_200;
    assume {:nonnull} out_Tmp_200 != 0;
    assume out_Tmp_200 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_199;
    assume {:nonnull} out_Tmp_199 != 0;
    assume out_Tmp_199 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_183;
    assume {:nonnull} out_Tmp_183 != 0;
    assume out_Tmp_183 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_170;
    assume {:nonnull} out_Tmp_170 != 0;
    assume out_Tmp_170 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_185;
    assume {:nonnull} out_Tmp_185 != 0;
    assume out_Tmp_185 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_136;
    call {:si_unique_call 1504} out_status_3 := Sbp2SendRequest(in_DeviceExtension_2, vslice_dummy_var_136, 2);
    goto anon28_Else;

  anon28_Else:
    assume {:partition} out_status_3 < 0;
    call {:si_unique_call 1501} KeInitializeEvent(in_event, 0, 0);
    assume {:nonnull} in_waitValue_1 != 0;
    assume in_waitValue_1 > 0;
    call {:si_unique_call 1502} out_vslice_dummy_var_7 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_1);
    out_retries := out_retries - 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    call {:si_unique_call 1505} {:si_old_unique_call 1} out_Tmp_167, out_Tmp_170, out_Tmp_172, out_Tmp_174, out_Tmp_180, out_Tmp_183, out_Tmp_184, out_Tmp_185, out_Tmp_186, out_currentGeneration_1, out_retries, out_Tmp_196, out_status_3, out_Tmp_198, out_Tmp_199, out_Tmp_200, out_vslice_dummy_var_7 := Sbp2ParseTextLeaf_loop_L42(out_Tmp_167, out_Tmp_170, out_Tmp_172, in_waitValue_1, out_Tmp_174, out_Tmp_180, out_Tmp_183, out_Tmp_184, out_Tmp_185, out_Tmp_186, out_currentGeneration_1, out_retries, in_tModelLeafMdl, out_Tmp_196, in_packet_2, out_status_3, out_Tmp_198, out_Tmp_199, out_Tmp_200, in_event, in_DeviceExtension_2, in_ModelLeafLocation, out_vslice_dummy_var_7);
    return;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L42(in_Tmp_167: int, in_Tmp_170: int, in_Tmp_172: int, in_waitValue_1: int, in_Tmp_174: int, in_Tmp_180: int, in_Tmp_183: int, in_Tmp_184: int, in_Tmp_185: int, in_Tmp_186: int, in_currentGeneration_1: int, in_retries: int, in_tModelLeafMdl: int, in_Tmp_196: int, in_packet_2: int, in_status_3: int, in_Tmp_198: int, in_Tmp_199: int, in_Tmp_200: int, in_event: int, in_DeviceExtension_2: int, in_ModelLeafLocation: int, in_vslice_dummy_var_7: int) returns (out_Tmp_167: int, out_Tmp_170: int, out_Tmp_172: int, out_Tmp_174: int, out_Tmp_180: int, out_Tmp_183: int, out_Tmp_184: int, out_Tmp_185: int, out_Tmp_186: int, out_currentGeneration_1: int, out_retries: int, out_Tmp_196: int, out_status_3: int, out_Tmp_198: int, out_Tmp_199: int, out_Tmp_200: int, out_vslice_dummy_var_7: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_7 == 258 || out_vslice_dummy_var_7 == 0 || out_vslice_dummy_var_7 == in_vslice_dummy_var_7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2UpdateNodeInformation_loop_L63(in_nextListItem: int, in_Tmp_265: int, in_sdv_101: int, in_Tmp_271: int, in_sdv_102: int, in_sdv_103: int, in_sdv_106: int, in_currentListItem: int, in_Tmp_274: int, in_sdv_108: int, in_Tmp_276: int, in_Tmp_277: int, in_DeviceExtension_5: int) returns (out_nextListItem: int, out_Tmp_265: int, out_Tmp_271: int, out_sdv_102: int, out_currentListItem: int, out_Tmp_274: int, out_Tmp_276: int, out_Tmp_277: int)
{
  var vslice_dummy_var_137: int;

  entry:
    out_nextListItem, out_Tmp_265, out_Tmp_271, out_sdv_102, out_currentListItem, out_Tmp_274, out_Tmp_276, out_Tmp_277 := in_nextListItem, in_Tmp_265, in_Tmp_271, in_sdv_102, in_currentListItem, in_Tmp_274, in_Tmp_276, in_Tmp_277;
    goto L63, exit;

  exit:
    return;

  L63:
    out_currentListItem := out_nextListItem;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_277;
    assume {:nonnull} out_Tmp_277 != 0;
    assume out_Tmp_277 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_276;
    assume {:nonnull} out_Tmp_276 != 0;
    assume out_Tmp_276 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_274;
    assume {:nonnull} in_DeviceExtension_5 != 0;
    assume in_DeviceExtension_5 > 0;
    assume {:nonnull} out_Tmp_274 != 0;
    assume out_Tmp_274 > 0;
    assume {:nonnull} in_DeviceExtension_5 != 0;
    assume in_DeviceExtension_5 > 0;
    assume {:nonnull} out_Tmp_274 != 0;
    assume out_Tmp_274 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_265;
    assume {:nonnull} out_Tmp_265 != 0;
    assume out_Tmp_265 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_271;
    assume {:nonnull} out_Tmp_271 != 0;
    assume out_Tmp_271 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_nextListItem;
    assume {:nonnull} in_DeviceExtension_5 != 0;
    assume in_DeviceExtension_5 > 0;
    havoc vslice_dummy_var_137;
    call {:si_unique_call 1506} out_sdv_102 := sdv_containing_record(vslice_dummy_var_137, 0);
    goto anon15_Else;

  anon15_Else:
    assume {:partition} out_currentListItem != out_sdv_102;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    call {:si_unique_call 1507} {:si_old_unique_call 1} out_nextListItem, out_Tmp_265, out_Tmp_271, out_sdv_102, out_currentListItem, out_Tmp_274, out_Tmp_276, out_Tmp_277 := Sbp2UpdateNodeInformation_loop_L63(out_nextListItem, out_Tmp_265, in_sdv_101, out_Tmp_271, out_sdv_102, in_sdv_103, in_sdv_106, out_currentListItem, out_Tmp_274, in_sdv_108, out_Tmp_276, out_Tmp_277, in_DeviceExtension_5);
    return;
}



procedure {:LoopProcedure} Sbp2UpdateNodeInformation_loop_L63(in_nextListItem: int, in_Tmp_265: int, in_sdv_101: int, in_Tmp_271: int, in_sdv_102: int, in_sdv_103: int, in_sdv_106: int, in_currentListItem: int, in_Tmp_274: int, in_sdv_108: int, in_Tmp_276: int, in_Tmp_277: int, in_DeviceExtension_5: int) returns (out_nextListItem: int, out_Tmp_265: int, out_Tmp_271: int, out_sdv_102: int, out_currentListItem: int, out_Tmp_274: int, out_Tmp_276: int, out_Tmp_277: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L21(in_nextEntry: int, in_queueEntry: int, in_sdv_196: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_196: int)
{

  entry:
    out_nextEntry, out_queueEntry, out_sdv_196 := in_nextEntry, in_queueEntry, in_sdv_196;
    goto L21, exit;

  exit:
    return;

  L21:
    goto anon13_Else;

  anon13_Else:
    call {:si_unique_call 1508} out_sdv_196 := sdv_containing_record(out_nextEntry, 0);
    out_queueEntry := out_sdv_196;
    assume {:nonnull} out_queueEntry != 0;
    assume out_queueEntry > 0;
    goto anon15_Else;

  anon15_Else:
    assume {:nonnull} out_nextEntry != 0;
    assume out_nextEntry > 0;
    havoc out_nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    call {:si_unique_call 1509} {:si_old_unique_call 1} out_nextEntry, out_queueEntry, out_sdv_196 := Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L21(out_nextEntry, out_queueEntry, out_sdv_196, in_SortKey);
    return;
}



procedure {:LoopProcedure} Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L21(in_nextEntry: int, in_queueEntry: int, in_sdv_196: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_196: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation CleanupOrbList_loop_L38(in_Tmp_582: int, in_Tmp_583: int, in_lastItem: int, in_nextItem: int, in_requestIrp: int, in_Tmp_584: int, in_Tmp_586: int, in_Tmp_587: int, in_currentListItem_1: int, in_Tmp_588: int, in_DeviceExtension_8: int, in_CompletionStatus: int, in_vslice_dummy_var_74: int, in_vslice_dummy_var_75: int, in_vslice_dummy_var_76: int, in_vslice_dummy_var_77: int, in_vslice_dummy_var_78: int, in_vslice_dummy_var_79: int) returns (out_Tmp_582: int, out_Tmp_583: int, out_nextItem: int, out_requestIrp: int, out_Tmp_584: int, out_Tmp_586: int, out_Tmp_587: int, out_currentListItem_1: int, out_Tmp_588: int, out_vslice_dummy_var_74: int, out_vslice_dummy_var_75: int, out_vslice_dummy_var_76: int, out_vslice_dummy_var_77: int, out_vslice_dummy_var_78: int, out_vslice_dummy_var_79: int)
{
  var vslice_dummy_var_138: int;

  entry:
    out_Tmp_582, out_Tmp_583, out_nextItem, out_requestIrp, out_Tmp_584, out_Tmp_586, out_Tmp_587, out_currentListItem_1, out_Tmp_588, out_vslice_dummy_var_74, out_vslice_dummy_var_75, out_vslice_dummy_var_76, out_vslice_dummy_var_77, out_vslice_dummy_var_78, out_vslice_dummy_var_79 := in_Tmp_582, in_Tmp_583, in_nextItem, in_requestIrp, in_Tmp_584, in_Tmp_586, in_Tmp_587, in_currentListItem_1, in_Tmp_588, in_vslice_dummy_var_74, in_vslice_dummy_var_75, in_vslice_dummy_var_76, in_vslice_dummy_var_77, in_vslice_dummy_var_78, in_vslice_dummy_var_79;
    goto L38, exit;

  exit:
    return;

  L38:
    out_currentListItem_1 := out_nextItem;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_nextItem;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 1510} out_vslice_dummy_var_74 := FreeAsyncRequestContext(in_DeviceExtension_8, out_currentListItem_1);
    goto L45;

  L45:
    goto anon21_Else;

  anon21_Else:
    assume {:partition} in_lastItem != out_currentListItem_1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 1518} {:si_old_unique_call 1} out_Tmp_582, out_Tmp_583, out_nextItem, out_requestIrp, out_Tmp_584, out_Tmp_586, out_Tmp_587, out_currentListItem_1, out_Tmp_588, out_vslice_dummy_var_74, out_vslice_dummy_var_75, out_vslice_dummy_var_76, out_vslice_dummy_var_77, out_vslice_dummy_var_78, out_vslice_dummy_var_79 := CleanupOrbList_loop_L38(out_Tmp_582, out_Tmp_583, in_lastItem, out_nextItem, out_requestIrp, out_Tmp_584, out_Tmp_586, out_Tmp_587, out_currentListItem_1, out_Tmp_588, in_DeviceExtension_8, in_CompletionStatus, out_vslice_dummy_var_74, out_vslice_dummy_var_75, out_vslice_dummy_var_76, out_vslice_dummy_var_77, out_vslice_dummy_var_78, out_vslice_dummy_var_79);
    return;

  anon26_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 1516} out_vslice_dummy_var_77 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    call {:si_unique_call 1517} out_vslice_dummy_var_75 := KeCancelTimer(0);
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_587;
    assume {:nonnull} out_Tmp_587 != 0;
    assume out_Tmp_587 > 0;
    havoc out_requestIrp;
    assume {:nonnull} out_requestIrp != 0;
    assume out_requestIrp > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_586;
    assume {:nonnull} out_Tmp_586 != 0;
    assume out_Tmp_586 > 0;
    goto L62;

  L62:
    assume {:nonnull} out_requestIrp != 0;
    assume out_requestIrp > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} in_DeviceExtension_8 != 0;
    assume in_DeviceExtension_8 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_582;
    assume {:nonnull} in_DeviceExtension_8 != 0;
    assume in_DeviceExtension_8 > 0;
    assume {:nonnull} out_Tmp_582 != 0;
    assume out_Tmp_582 > 0;
    havoc vslice_dummy_var_138;
    call {:si_unique_call 1511} Sbp2StartPacket(vslice_dummy_var_138, out_requestIrp, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_582));
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 1512} out_vslice_dummy_var_78 := FreeAsyncRequestContext(in_DeviceExtension_8, out_currentListItem_1);
    goto L45;

  anon23_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 1513} out_vslice_dummy_var_79 := FreeAsyncRequestContext(in_DeviceExtension_8, out_currentListItem_1);
    assume {:nonnull} in_DeviceExtension_8 != 0;
    assume in_DeviceExtension_8 > 0;
    call {:si_unique_call 1514} out_vslice_dummy_var_76 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_8), 0);
    call {:si_unique_call 1515} sdv_IoCompleteRequest(0, 0);
    goto L45;

  anon22_Then:
    goto L45;

  anon24_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_583;
    assume {:nonnull} out_Tmp_583 != 0;
    assume out_Tmp_583 > 0;
    goto L62;

  anon25_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_588;
    assume {:nonnull} out_Tmp_588 != 0;
    assume out_Tmp_588 > 0;
    goto L62;

  anon27_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_584;
    assume {:nonnull} out_Tmp_584 != 0;
    assume out_Tmp_584 > 0;
    goto L62;
}



procedure {:LoopProcedure} CleanupOrbList_loop_L38(in_Tmp_582: int, in_Tmp_583: int, in_lastItem: int, in_nextItem: int, in_requestIrp: int, in_Tmp_584: int, in_Tmp_586: int, in_Tmp_587: int, in_currentListItem_1: int, in_Tmp_588: int, in_DeviceExtension_8: int, in_CompletionStatus: int, in_vslice_dummy_var_74: int, in_vslice_dummy_var_75: int, in_vslice_dummy_var_76: int, in_vslice_dummy_var_77: int, in_vslice_dummy_var_78: int, in_vslice_dummy_var_79: int) returns (out_Tmp_582: int, out_Tmp_583: int, out_nextItem: int, out_requestIrp: int, out_Tmp_584: int, out_Tmp_586: int, out_Tmp_587: int, out_currentListItem_1: int, out_Tmp_588: int, out_vslice_dummy_var_74: int, out_vslice_dummy_var_75: int, out_vslice_dummy_var_76: int, out_vslice_dummy_var_77: int, out_vslice_dummy_var_78: int, out_vslice_dummy_var_79: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_75 == 1 || out_vslice_dummy_var_75 == 0 || out_vslice_dummy_var_75 == in_vslice_dummy_var_75;
  free ensures {:va_keep} out_vslice_dummy_var_77 == -1073741670 || out_vslice_dummy_var_77 == -1073741823 || out_vslice_dummy_var_77 == 259 || out_vslice_dummy_var_77 == 0 || out_vslice_dummy_var_77 == in_vslice_dummy_var_77;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2SendRequest_loop_L74(in_pComplete: int)
{

  entry:
    goto L74, exit;

  exit:
    return;

  L74:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon39_Then;

  anon39_Then:
    goto anon39_Then_dummy;

  anon39_Then_dummy:
    call {:si_unique_call 1519} {:si_old_unique_call 1} Sbp2SendRequest_loop_L74(in_pComplete);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest_loop_L74(in_pComplete: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2InsertByKeyDeviceQueue_loop_L18(in_nextEntry_1: int, in_sdv_230: int, in_queueEntry2: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_sdv_230: int, out_queueEntry2: int)
{

  entry:
    out_nextEntry_1, out_sdv_230, out_queueEntry2 := in_nextEntry_1, in_sdv_230, in_queueEntry2;
    goto L18, exit;

  exit:
    return;

  L18:
    goto anon7_Else;

  anon7_Else:
    call {:si_unique_call 1520} out_sdv_230 := sdv_containing_record(out_nextEntry_1, 0);
    out_queueEntry2 := out_sdv_230;
    assume {:nonnull} out_queueEntry2 != 0;
    assume out_queueEntry2 > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:nonnull} out_nextEntry_1 != 0;
    assume out_nextEntry_1 > 0;
    havoc out_nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    havoc out_nextEntry_1;
    return;
}



procedure {:LoopProcedure} Sbp2InsertByKeyDeviceQueue_loop_L18(in_nextEntry_1: int, in_sdv_230: int, in_queueEntry2: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_sdv_230: int, out_queueEntry2: int);
  free ensures {:va_keep} out_sdv_230 == in_nextEntry_1 || out_sdv_230 == in_sdv_230;
  free ensures {:va_keep} out_queueEntry2 == in_nextEntry_1 || out_queueEntry2 == in_queueEntry2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartPacket_loop_L24(in_nextEntry_2: int, in_sdv_244: int, in_queueEntry2_1: int, in_Key_1: int) returns (out_nextEntry_2: int, out_sdv_244: int, out_queueEntry2_1: int)
{

  entry:
    out_nextEntry_2, out_sdv_244, out_queueEntry2_1 := in_nextEntry_2, in_sdv_244, in_queueEntry2_1;
    goto L24, exit;

  exit:
    return;

  L24:
    goto anon15_Else;

  anon15_Else:
    call {:si_unique_call 1521} out_sdv_244 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_244;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon18_Else;

  anon18_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket_loop_L24(in_nextEntry_2: int, in_sdv_244: int, in_queueEntry2_1: int, in_Key_1: int) returns (out_nextEntry_2: int, out_sdv_244: int, out_queueEntry2_1: int);
  free ensures {:va_keep} out_sdv_244 == in_nextEntry_2 || out_sdv_244 == in_sdv_244;
  free ensures {:va_keep} out_queueEntry2_1 == in_nextEntry_2 || out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2InitializeOrb_loop_L46(in_i_3: int, in_Tmp_760: int, in_sdv_275: int, in_sdv_276: int, in_Tmp_770: int, in_Tmp_773: int, in_Tmp_781: int, in_CallbackContext_1: int) returns (out_i_3: int, out_Tmp_760: int, out_Tmp_770: int, out_Tmp_773: int, out_Tmp_781: int)
{

  entry:
    out_i_3, out_Tmp_760, out_Tmp_770, out_Tmp_773, out_Tmp_781 := in_i_3, in_Tmp_760, in_Tmp_770, in_Tmp_773, in_Tmp_781;
    goto L46, exit;

  exit:
    return;

  L46:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    goto anon21_Else;

  anon21_Else:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_781 := out_i_3;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_773;
    assume {:nonnull} out_Tmp_773 != 0;
    assume out_Tmp_773 > 0;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_770 := out_i_3;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_760;
    assume {:nonnull} out_Tmp_760 != 0;
    assume out_Tmp_760 > 0;
    out_i_3 := out_i_3 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 1522} {:si_old_unique_call 1} out_i_3, out_Tmp_760, out_Tmp_770, out_Tmp_773, out_Tmp_781 := Sbp2InitializeOrb_loop_L46(out_i_3, out_Tmp_760, in_sdv_275, in_sdv_276, out_Tmp_770, out_Tmp_773, out_Tmp_781, in_CallbackContext_1);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeOrb_loop_L46(in_i_3: int, in_Tmp_760: int, in_sdv_275: int, in_sdv_276: int, in_Tmp_770: int, in_Tmp_773: int, in_Tmp_781: int, in_CallbackContext_1: int) returns (out_i_3: int, out_Tmp_760: int, out_Tmp_770: int, out_Tmp_773: int, out_Tmp_781: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2IssueInternalCommand_loop_L154(in_i_4: int, in_waitValue_3: int, in_event_1: int, in_DeviceExtension_15: int, in_vslice_dummy_var_93: int) returns (out_i_4: int, out_vslice_dummy_var_93: int)
{

  entry:
    out_i_4, out_vslice_dummy_var_93 := in_i_4, in_vslice_dummy_var_93;
    goto L154, exit;

  exit:
    return;

  L154:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon61_Else;

  anon61_Else:
    assume {:partition} 6 > out_i_4;
    call {:si_unique_call 1523} KeInitializeEvent(in_event_1, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 1524} out_vslice_dummy_var_93 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    assume {:nonnull} in_DeviceExtension_15 != 0;
    assume in_DeviceExtension_15 > 0;
    goto anon62_Else;

  anon62_Else:
    out_i_4 := out_i_4 + 1;
    goto anon62_Else_dummy;

  anon62_Else_dummy:
    call {:si_unique_call 1525} {:si_old_unique_call 1} out_i_4, out_vslice_dummy_var_93 := Sbp2IssueInternalCommand_loop_L154(out_i_4, in_waitValue_3, in_event_1, in_DeviceExtension_15, out_vslice_dummy_var_93);
    return;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L154(in_i_4: int, in_waitValue_3: int, in_event_1: int, in_DeviceExtension_15: int, in_vslice_dummy_var_93: int) returns (out_i_4: int, out_vslice_dummy_var_93: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_93 == 258 || out_vslice_dummy_var_93 == 0 || out_vslice_dummy_var_93 == in_vslice_dummy_var_93;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2IssueInternalCommand_loop_L50(in_i_4: int, in_Tmp_789: int, in_irpStack_1: int, in_cdb_2: int, in_waitValue_3: int, in_inquiryMdl: int, in_Tmp_790: int, in_modeMdl: int, in_context_1: int, in_Tmp_791: int, in_Tmp_792: int, in_irp_1: int, in_senseInfoBuffer: int, in_srb_2: int, in_status_23: int, in_event_1: int, in_retryCount: int, in_DeviceExtension_15: int, in_Scsiop: int, in_vslice_dummy_var_92: int, in_vslice_dummy_var_93: int) returns (out_i_4: int, out_Tmp_789: int, out_irpStack_1: int, out_cdb_2: int, out_inquiryMdl: int, out_Tmp_790: int, out_modeMdl: int, out_Tmp_791: int, out_Tmp_792: int, out_status_23: int, out_retryCount: int, out_vslice_dummy_var_92: int, out_vslice_dummy_var_93: int)
{
  var vslice_dummy_var_139: int;

  entry:
    out_i_4, out_Tmp_789, out_irpStack_1, out_cdb_2, out_inquiryMdl, out_Tmp_790, out_modeMdl, out_Tmp_791, out_Tmp_792, out_status_23, out_retryCount, out_vslice_dummy_var_92, out_vslice_dummy_var_93 := in_i_4, in_Tmp_789, in_irpStack_1, in_cdb_2, in_inquiryMdl, in_Tmp_790, in_modeMdl, in_Tmp_791, in_Tmp_792, in_status_23, in_retryCount, in_vslice_dummy_var_92, in_vslice_dummy_var_93;
    goto L50, exit;

  exit:
    return;

  L50:
    call {:si_unique_call 1526} out_irpStack_1 := sdv_IoGetNextIrpStackLocation(in_irp_1);
    assume {:nonnull} out_irpStack_1 != 0;
    assume out_irpStack_1 > 0;
    assume {:nonnull} out_irpStack_1 != 0;
    assume out_irpStack_1 > 0;
    assume {:nonnull} out_irpStack_1 != 0;
    assume out_irpStack_1 > 0;
    call {:si_unique_call 1527} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    out_cdb_2 := Cdb__SCSI_REQUEST_BLOCK(in_srb_2);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} in_Scsiop != 18;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} in_Scsiop == 26;
    assume {:nonnull} in_DeviceExtension_15 != 0;
    assume in_DeviceExtension_15 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} out_retryCount != 0;
    goto L83;

  L83:
    assume {:nonnull} in_irp_1 != 0;
    assume in_irp_1 > 0;
    goto L71;

  L71:
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_context_1 != 0;
    assume in_context_1 > 0;
    call {:si_unique_call 1529} KeInitializeEvent(Event__REQUEST_CONTEXT(in_context_1), 0, 0);
    call {:si_unique_call 1530} sdv_IoSetCompletionRoutine(in_irp_1, li2bplFunctionConstant337, in_context_1, 1, 1, 1);
    assume {:nonnull} in_DeviceExtension_15 != 0;
    assume in_DeviceExtension_15 > 0;
    havoc vslice_dummy_var_139;
    call {:si_unique_call 1531} out_status_23 := sdv_IoCallDriver(vslice_dummy_var_139, in_irp_1);
    assume {:nonnull} in_irp_1 != 0;
    assume in_irp_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L139;

  L139:
    call {:si_unique_call 1528} out_vslice_dummy_var_92 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    havoc out_Tmp_790;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} out_Tmp_790 != 1;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    havoc out_Tmp_792;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} out_Tmp_792 == 18;
    out_status_23 := 0;
    goto L149;

  L149:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} out_status_23 != 0;
    assume {:nonnull} in_DeviceExtension_15 != 0;
    assume in_DeviceExtension_15 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} 3 > out_retryCount;
    out_i_4 := 0;
    goto L154;

  L154:
    call {:si_unique_call 1534} out_i_4, out_vslice_dummy_var_93 := Sbp2IssueInternalCommand_loop_L154(out_i_4, in_waitValue_3, in_event_1, in_DeviceExtension_15, out_vslice_dummy_var_93);
    goto L154_last;

  L154_last:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} 6 > out_i_4;
    call {:si_unique_call 1535} KeInitializeEvent(in_event_1, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 1536} out_vslice_dummy_var_93 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    assume {:nonnull} in_DeviceExtension_15 != 0;
    assume in_DeviceExtension_15 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    out_i_4 := out_i_4 + 1;
    assume false;
    return;

  anon62_Then:
    goto L150;

  L150:
    goto anon58_Else;

  anon58_Else:
    assume {:partition} 3 > out_retryCount;
    goto anon63_Then;

  anon63_Then:
    assume {:partition} out_status_23 != 0;
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    call {:si_unique_call 1537} {:si_old_unique_call 1} out_i_4, out_Tmp_789, out_irpStack_1, out_cdb_2, out_inquiryMdl, out_Tmp_790, out_modeMdl, out_Tmp_791, out_Tmp_792, out_status_23, out_retryCount, out_vslice_dummy_var_92, out_vslice_dummy_var_93 := Sbp2IssueInternalCommand_loop_L50(out_i_4, out_Tmp_789, out_irpStack_1, out_cdb_2, in_waitValue_3, out_inquiryMdl, out_Tmp_790, out_modeMdl, in_context_1, out_Tmp_791, out_Tmp_792, in_irp_1, in_senseInfoBuffer, in_srb_2, out_status_23, in_event_1, out_retryCount, in_DeviceExtension_15, in_Scsiop, out_vslice_dummy_var_92, out_vslice_dummy_var_93);
    return;

  anon61_Then:
    assume {:partition} out_i_4 >= 6;
    goto L150;

  anon60_Then:
    assume {:partition} out_retryCount >= 3;
    goto L150;

  anon59_Then:
    goto L150;

  anon57_Then:
    assume {:partition} out_status_23 == 0;
    goto L150;

  anon73_Then:
    assume {:partition} out_Tmp_792 != 18;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} in_senseInfoBuffer != 0;
    assume in_senseInfoBuffer > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_status_23 := -1073741808;
    out_retryCount := out_retryCount + 1;
    goto L149;

  anon64_Then:
    goto L166;

  L166:
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    havoc out_Tmp_791;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} out_Tmp_791 == 22;
    goto anon65_Then;

  anon65_Then:
    assume {:partition} 0 >= out_retryCount;
    goto L171;

  L171:
    out_retryCount := out_retryCount + 1;
    out_status_23 := -1073741823;
    goto L149;

  anon74_Then:
    assume {:partition} out_Tmp_791 != 22;
    goto L171;

  anon56_Then:
    goto L166;

  anon72_Then:
    assume {:partition} out_Tmp_790 == 1;
    out_status_23 := 0;
    goto L150;

  anon54_Then:
    goto anon55_Then;

  anon55_Then:
    assume {:partition} out_status_23 == 259;
    goto L139;

  anon75_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 1533} out_modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon52_Then;

  anon52_Then:
    assume {:partition} out_modeMdl != 0;
    goto L83;

  anon66_Then:
    assume {:partition} in_Scsiop != 26;
    goto L71;

  anon70_Then:
    assume {:partition} in_Scsiop == 18;
    assume {:nonnull} in_DeviceExtension_15 != 0;
    assume in_DeviceExtension_15 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_srb_2 != 0;
    assume in_srb_2 > 0;
    assume {:nonnull} in_DeviceExtension_15 != 0;
    assume in_DeviceExtension_15 > 0;
    havoc out_Tmp_789;
    assume {:nonnull} out_Tmp_789 != 0;
    assume out_Tmp_789 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} out_retryCount != 0;
    goto L118;

  L118:
    assume {:nonnull} in_irp_1 != 0;
    assume in_irp_1 > 0;
    goto L71;

  anon71_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 1532} out_inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon53_Else;

  anon53_Else:
    assume {:partition} out_inquiryMdl != 0;
    goto L118;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L50(in_i_4: int, in_Tmp_789: int, in_irpStack_1: int, in_cdb_2: int, in_waitValue_3: int, in_inquiryMdl: int, in_Tmp_790: int, in_modeMdl: int, in_context_1: int, in_Tmp_791: int, in_Tmp_792: int, in_irp_1: int, in_senseInfoBuffer: int, in_srb_2: int, in_status_23: int, in_event_1: int, in_retryCount: int, in_DeviceExtension_15: int, in_Scsiop: int, in_vslice_dummy_var_92: int, in_vslice_dummy_var_93: int) returns (out_i_4: int, out_Tmp_789: int, out_irpStack_1: int, out_cdb_2: int, out_inquiryMdl: int, out_Tmp_790: int, out_modeMdl: int, out_Tmp_791: int, out_Tmp_792: int, out_status_23: int, out_retryCount: int, out_vslice_dummy_var_92: int, out_vslice_dummy_var_93: int);
  modifies alloc;
  free ensures {:va_keep} out_cdb_2 == in_cdb_2 || out_cdb_2 == Cdb__SCSI_REQUEST_BLOCK(in_srb_2);
  free ensures {:va_keep} out_status_23 == 0 || out_status_23 == -1073741808 || out_status_23 == -1073741823 || out_status_23 == in_status_23;
  free ensures {:va_keep} out_vslice_dummy_var_92 == 258 || out_vslice_dummy_var_92 == 0 || out_vslice_dummy_var_92 == in_vslice_dummy_var_92;
  free ensures {:va_keep} out_vslice_dummy_var_93 == 258 || out_vslice_dummy_var_93 == 0 || out_vslice_dummy_var_93 == in_vslice_dummy_var_93;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CreateDevObject_loop_L17(in_NextId: int, in_deviceObject_2: int, in_uniDeviceName: int, in_Tmp_850: int, in_buffer: int, in_status_28: int, in_vslice_dummy_var_114: int) returns (out_NextId: int, out_Tmp_850: int, out_status_28: int, out_vslice_dummy_var_114: int)
{

  entry:
    out_NextId, out_Tmp_850, out_status_28, out_vslice_dummy_var_114 := in_NextId, in_Tmp_850, in_status_28, in_vslice_dummy_var_114;
    goto L17, exit;

  exit:
    return;

  L17:
    out_Tmp_850 := strConst__li2bpl11;
    call {:si_unique_call 1538} out_vslice_dummy_var_114 := RtlStringCbPrintfW(in_buffer, 128, out_Tmp_850);
    call {:si_unique_call 1539} RtlInitUnicodeString(in_uniDeviceName, in_buffer);
    call {:si_unique_call 1540} out_status_28 := IoCreateDevice(0, 960, 0, 42, 256, 0, in_deviceObject_2);
    out_NextId := out_NextId + 1;
    goto anon18_Then;

  anon18_Then:
    assume {:partition} out_status_28 == -1073741771;
    goto anon18_Then_dummy;

  anon18_Then_dummy:
    call {:si_unique_call 1541} {:si_old_unique_call 1} out_NextId, out_Tmp_850, out_status_28, out_vslice_dummy_var_114 := Sbp2CreateDevObject_loop_L17(out_NextId, in_deviceObject_2, in_uniDeviceName, out_Tmp_850, in_buffer, out_status_28, out_vslice_dummy_var_114);
    return;
}



procedure {:LoopProcedure} Sbp2CreateDevObject_loop_L17(in_NextId: int, in_deviceObject_2: int, in_uniDeviceName: int, in_Tmp_850: int, in_buffer: int, in_status_28: int, in_vslice_dummy_var_114: int) returns (out_NextId: int, out_Tmp_850: int, out_status_28: int, out_vslice_dummy_var_114: int);
  modifies alloc;
  free ensures {:va_keep} out_status_28 == -1073741824 || out_status_28 == -1073741771 || out_status_28 == -1073741670 || out_status_28 == -1073741823 || out_status_28 == 0 || out_status_28 == in_status_28;
  free ensures {:va_keep} out_vslice_dummy_var_114 == 0 || out_vslice_dummy_var_114 == 5 || out_vslice_dummy_var_114 == -1073741811 || out_vslice_dummy_var_114 == in_vslice_dummy_var_114;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2PreAllocateLists_loop_L117(in_Tmp_1020: int, in_Tmp_1021: int, in_cnt: int, in_Tmp_1023: int, in_Tmp_1025: int, in_Tmp_1026: int, in_Tmp_1027: int, in_context_3: int, in_Tmp_1028: int, in_Tmp_1029: int, in_Tmp_1030: int, in_Tmp_1031: int, in_Tmp_1032: int, in_Tmp_1033: int, in_Tmp_1034: int, in_Tmp_1035: int, in_sdv_440: int, in_Tmp_1037: int, in_Tmp_1038: int, in_status_33: int, in_packet_12: int, in_Tmp_1039: int, in_Tmp_1040: int, in_DeviceExtension_18: int, in_vslice_dummy_var_213: int) returns (out_Tmp_1020: int, out_Tmp_1021: int, out_cnt: int, out_Tmp_1023: int, out_Tmp_1025: int, out_Tmp_1026: int, out_Tmp_1027: int, out_context_3: int, out_Tmp_1028: int, out_Tmp_1029: int, out_Tmp_1030: int, out_Tmp_1031: int, out_Tmp_1032: int, out_Tmp_1033: int, out_Tmp_1034: int, out_Tmp_1035: int, out_sdv_440: int, out_Tmp_1037: int, out_Tmp_1038: int, out_status_33: int, out_Tmp_1039: int, out_Tmp_1040: int, out_vslice_dummy_var_213: int)
{
  var vslice_dummy_var_140: int;

  entry:
    out_Tmp_1020, out_Tmp_1021, out_cnt, out_Tmp_1023, out_Tmp_1025, out_Tmp_1026, out_Tmp_1027, out_context_3, out_Tmp_1028, out_Tmp_1029, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_Tmp_1033, out_Tmp_1034, out_Tmp_1035, out_sdv_440, out_Tmp_1037, out_Tmp_1038, out_status_33, out_Tmp_1039, out_Tmp_1040, out_vslice_dummy_var_213 := in_Tmp_1020, in_Tmp_1021, in_cnt, in_Tmp_1023, in_Tmp_1025, in_Tmp_1026, in_Tmp_1027, in_context_3, in_Tmp_1028, in_Tmp_1029, in_Tmp_1030, in_Tmp_1031, in_Tmp_1032, in_Tmp_1033, in_Tmp_1034, in_Tmp_1035, in_sdv_440, in_Tmp_1037, in_Tmp_1038, in_status_33, in_Tmp_1039, in_Tmp_1040, in_vslice_dummy_var_213;
    goto L117, exit;

  exit:
    return;

  L117:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon30_Else;

  anon30_Else:
    assume {:partition} 8 > out_cnt;
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    havoc out_context_3;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    call {:si_unique_call 1544} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(out_context_3), li2bplFunctionConstant242, 0);
    call {:si_unique_call 1545} KeInitializeTimer(0);
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1025;
    assume {:nonnull} out_Tmp_1025 != 0;
    assume out_Tmp_1025 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1029;
    assume {:nonnull} out_Tmp_1029 != 0;
    assume out_Tmp_1029 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1026;
    assume {:nonnull} out_Tmp_1026 != 0;
    assume out_Tmp_1026 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1033;
    assume {:nonnull} out_Tmp_1033 != 0;
    assume out_Tmp_1033 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1034;
    assume {:nonnull} out_Tmp_1034 != 0;
    assume out_Tmp_1034 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1028;
    assume {:nonnull} out_Tmp_1028 != 0;
    assume out_Tmp_1028 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1037;
    assume {:nonnull} out_Tmp_1037 != 0;
    assume out_Tmp_1037 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1040;
    assume {:nonnull} out_Tmp_1040 != 0;
    assume out_Tmp_1040 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1030;
    assume {:nonnull} out_Tmp_1030 != 0;
    assume out_Tmp_1030 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1032;
    assume {:nonnull} out_Tmp_1032 != 0;
    assume out_Tmp_1032 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1038;
    assume {:nonnull} out_Tmp_1038 != 0;
    assume out_Tmp_1038 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1039;
    assume {:nonnull} out_Tmp_1039 != 0;
    assume out_Tmp_1039 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1031;
    assume {:nonnull} out_Tmp_1031 != 0;
    assume out_Tmp_1031 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1035;
    assume {:nonnull} out_Tmp_1035 != 0;
    assume out_Tmp_1035 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1027;
    assume {:nonnull} out_Tmp_1027 != 0;
    assume out_Tmp_1027 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1020;
    assume {:nonnull} out_Tmp_1020 != 0;
    assume out_Tmp_1020 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc vslice_dummy_var_140;
    call {:si_unique_call 1546} out_status_33 := Sbp2SendRequest(in_DeviceExtension_18, vslice_dummy_var_140, 2);
    goto anon31_Else;

  anon31_Else:
    assume {:partition} out_status_33 >= 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1023;
    assume {:nonnull} out_Tmp_1023 != 0;
    assume out_Tmp_1023 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    call {:si_unique_call 1542} out_sdv_440 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1021;
    assume {:nonnull} out_Tmp_1021 != 0;
    assume out_Tmp_1021 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    call {:si_unique_call 1543} out_vslice_dummy_var_213 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    call {:si_unique_call 1547} {:si_old_unique_call 1} out_Tmp_1020, out_Tmp_1021, out_cnt, out_Tmp_1023, out_Tmp_1025, out_Tmp_1026, out_Tmp_1027, out_context_3, out_Tmp_1028, out_Tmp_1029, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_Tmp_1033, out_Tmp_1034, out_Tmp_1035, out_sdv_440, out_Tmp_1037, out_Tmp_1038, out_status_33, out_Tmp_1039, out_Tmp_1040, out_vslice_dummy_var_213 := Sbp2PreAllocateLists_loop_L117(out_Tmp_1020, out_Tmp_1021, out_cnt, out_Tmp_1023, out_Tmp_1025, out_Tmp_1026, out_Tmp_1027, out_context_3, out_Tmp_1028, out_Tmp_1029, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_Tmp_1033, out_Tmp_1034, out_Tmp_1035, out_sdv_440, out_Tmp_1037, out_Tmp_1038, out_status_33, in_packet_12, out_Tmp_1039, out_Tmp_1040, in_DeviceExtension_18, out_vslice_dummy_var_213);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L117(in_Tmp_1020: int, in_Tmp_1021: int, in_cnt: int, in_Tmp_1023: int, in_Tmp_1025: int, in_Tmp_1026: int, in_Tmp_1027: int, in_context_3: int, in_Tmp_1028: int, in_Tmp_1029: int, in_Tmp_1030: int, in_Tmp_1031: int, in_Tmp_1032: int, in_Tmp_1033: int, in_Tmp_1034: int, in_Tmp_1035: int, in_sdv_440: int, in_Tmp_1037: int, in_Tmp_1038: int, in_status_33: int, in_packet_12: int, in_Tmp_1039: int, in_Tmp_1040: int, in_DeviceExtension_18: int, in_vslice_dummy_var_213: int) returns (out_Tmp_1020: int, out_Tmp_1021: int, out_cnt: int, out_Tmp_1023: int, out_Tmp_1025: int, out_Tmp_1026: int, out_Tmp_1027: int, out_context_3: int, out_Tmp_1028: int, out_Tmp_1029: int, out_Tmp_1030: int, out_Tmp_1031: int, out_Tmp_1032: int, out_Tmp_1033: int, out_Tmp_1034: int, out_Tmp_1035: int, out_sdv_440: int, out_Tmp_1037: int, out_Tmp_1038: int, out_status_33: int, out_Tmp_1039: int, out_Tmp_1040: int, out_vslice_dummy_var_213: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2PreAllocateLists_loop_L85(in_cnt: int, in_statusFifoElement_1: int, in_DeviceExtension_18: int, in_boogieTmp: int, in_vslice_dummy_var_212: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_212: int)
{

  entry:
    out_cnt, out_statusFifoElement_1, out_boogieTmp, out_vslice_dummy_var_212 := in_cnt, in_statusFifoElement_1, in_boogieTmp, in_vslice_dummy_var_212;
    goto L85, exit;

  exit:
    return;

  L85:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon27_Else;

  anon27_Else:
    assume {:partition} 15 > out_cnt;
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    havoc out_statusFifoElement_1;
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    call {:si_unique_call 1549} out_boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 1548} out_vslice_dummy_var_212 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    havoc out_cnt;
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L85(in_cnt: int, in_statusFifoElement_1: int, in_DeviceExtension_18: int, in_boogieTmp: int, in_vslice_dummy_var_212: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_212: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:SIextraRecBound 8} Sbp2PreAllocateLists_loop_L41(in_Tmp_1022: int, in_cnt: int, in_sdv_435: int, in_sdv_439: int, in_packet_12: int, in_DeviceExtension_18: int, in_boogieTmp: int, in_vslice_dummy_var_210: int) returns (out_Tmp_1022: int, out_cnt: int, out_sdv_435: int, out_sdv_439: int, out_boogieTmp: int, out_vslice_dummy_var_210: int)
{
  var vslice_dummy_var_141: int;

  entry:
    out_Tmp_1022, out_cnt, out_sdv_435, out_sdv_439, out_boogieTmp, out_vslice_dummy_var_210 := in_Tmp_1022, in_cnt, in_sdv_435, in_sdv_439, in_boogieTmp, in_vslice_dummy_var_210;
    goto L41, exit;

  exit:
    return;

  L41:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon25_Else;

  anon25_Else:
    assume {:partition} 8 > out_cnt;
    call {:si_unique_call 1553} out_sdv_435 := ExAllocatePoolWithTag(0, 24, 846226035);
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    goto anon33_Then;

  anon33_Then:
    call {:si_unique_call 1552} out_sdv_439 := ExAllocatePoolWithTag(0, 344, 846226035);
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    goto anon34_Else;

  anon34_Else:
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    havoc out_Tmp_1022;
    assume {:nonnull} out_Tmp_1022 != 0;
    assume out_Tmp_1022 > 0;
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc vslice_dummy_var_141;
    call {:si_unique_call 1551} out_boogieTmp := IoAllocateIrp(vslice_dummy_var_141, 0);
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    goto anon26_Else;

  anon26_Else:
    call {:si_unique_call 1550} out_vslice_dummy_var_210 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon26_Else_dummy;

  anon26_Else_dummy:
    call {:si_unique_call 1554} {:si_old_unique_call 1} out_Tmp_1022, out_cnt, out_sdv_435, out_sdv_439, out_boogieTmp, out_vslice_dummy_var_210 := Sbp2PreAllocateLists_loop_L41(out_Tmp_1022, out_cnt, out_sdv_435, out_sdv_439, in_packet_12, in_DeviceExtension_18, out_boogieTmp, out_vslice_dummy_var_210);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L41(in_Tmp_1022: int, in_cnt: int, in_sdv_435: int, in_sdv_439: int, in_packet_12: int, in_DeviceExtension_18: int, in_boogieTmp: int, in_vslice_dummy_var_210: int) returns (out_Tmp_1022: int, out_cnt: int, out_sdv_435: int, out_sdv_439: int, out_boogieTmp: int, out_vslice_dummy_var_210: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2HandleRemove_loop_L45(in_Tmp_1047: int, in_Tmp_1056: int, in_Tmp_1062: int, in_Tmp_1065: int, in_j_1: int, in_Tmp_1067: int, in_Tmp_1072: int, in_Tmp_1075: int, in_Tmp_1077: int, in_fdoExtension_4: int, in_Tmp_1091: int, in_deviceExtension_8: int) returns (out_Tmp_1047: int, out_Tmp_1056: int, out_Tmp_1062: int, out_Tmp_1065: int, out_j_1: int, out_Tmp_1067: int, out_Tmp_1072: int, out_Tmp_1075: int, out_Tmp_1077: int, out_Tmp_1091: int, out_deviceExtension_8: int)
{

  entry:
    out_Tmp_1047, out_Tmp_1056, out_Tmp_1062, out_Tmp_1065, out_j_1, out_Tmp_1067, out_Tmp_1072, out_Tmp_1075, out_Tmp_1077, out_Tmp_1091, out_deviceExtension_8 := in_Tmp_1047, in_Tmp_1056, in_Tmp_1062, in_Tmp_1065, in_j_1, in_Tmp_1067, in_Tmp_1072, in_Tmp_1075, in_Tmp_1077, in_Tmp_1091, in_deviceExtension_8;
    goto L45, exit;

  exit:
    return;

  L45:
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    goto anon34_Else;

  anon34_Else:
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    out_Tmp_1065 := out_j_1;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1067;
    out_Tmp_1075 := out_j_1 + 1;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1072;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    out_Tmp_1056 := out_j_1;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1077;
    assume {:nonnull} out_Tmp_1077 != 0;
    assume out_Tmp_1077 > 0;
    havoc out_Tmp_1062;
    assume {:nonnull} out_Tmp_1062 != 0;
    assume out_Tmp_1062 > 0;
    havoc out_deviceExtension_8;
    out_Tmp_1047 := out_j_1;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1091;
    assume {:nonnull} out_deviceExtension_8 != 0;
    assume out_deviceExtension_8 > 0;
    goto L48;

  L48:
    out_j_1 := out_j_1 + 1;
    goto L48_dummy;

  L48_dummy:
    call {:si_unique_call 1555} {:si_old_unique_call 1} out_Tmp_1047, out_Tmp_1056, out_Tmp_1062, out_Tmp_1065, out_j_1, out_Tmp_1067, out_Tmp_1072, out_Tmp_1075, out_Tmp_1077, out_Tmp_1091, out_deviceExtension_8 := Sbp2HandleRemove_loop_L45(out_Tmp_1047, out_Tmp_1056, out_Tmp_1062, out_Tmp_1065, out_j_1, out_Tmp_1067, out_Tmp_1072, out_Tmp_1075, out_Tmp_1077, in_fdoExtension_4, out_Tmp_1091, out_deviceExtension_8);
    return;

  anon35_Then:
    goto L48;
}



procedure {:LoopProcedure} Sbp2HandleRemove_loop_L45(in_Tmp_1047: int, in_Tmp_1056: int, in_Tmp_1062: int, in_Tmp_1065: int, in_j_1: int, in_Tmp_1067: int, in_Tmp_1072: int, in_Tmp_1075: int, in_Tmp_1077: int, in_fdoExtension_4: int, in_Tmp_1091: int, in_deviceExtension_8: int) returns (out_Tmp_1047: int, out_Tmp_1056: int, out_Tmp_1062: int, out_Tmp_1065: int, out_j_1: int, out_Tmp_1067: int, out_Tmp_1072: int, out_Tmp_1075: int, out_Tmp_1077: int, out_Tmp_1091: int, out_deviceExtension_8: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2HandleRemove_loop_L19(in_i_6: int, in_Tmp_1047: int, in_Tmp_1050: int, in_Tmp_1053: int, in_Tmp_1054: int, in_Tmp_1055: int, in_Tmp_1056: int, in_Tmp_1058: int, in_Tmp_1059: int, in_Tmp_1061: int, in_Tmp_1062: int, in_Tmp_1065: int, in_j_1: int, in_Tmp_1067: int, in_Tmp_1069: int, in_Tmp_1070: int, in_Tmp_1071: int, in_Tmp_1072: int, in_Tmp_1073: int, in_Tmp_1074: int, in_Tmp_1075: int, in_Tmp_1076: int, in_Tmp_1077: int, in_Tmp_1081: int, in_Tmp_1083: int, in_Tmp_1085: int, in_Tmp_1086: int, in_fdoExtension_4: int, in_Tmp_1087: int, in_Tmp_1090: int, in_Tmp_1091: int, in_Tmp_1092: int, in_Tmp_1094: int, in_Tmp_1096: int, in_Tmp_1099: int, in_Tmp_1101: int, in_deviceExtension_8: int, in_Tmp_1102: int, in_Tmp_1105: int, in_DeviceObject_18: int) returns (out_i_6: int, out_Tmp_1047: int, out_Tmp_1050: int, out_Tmp_1053: int, out_Tmp_1054: int, out_Tmp_1055: int, out_Tmp_1056: int, out_Tmp_1058: int, out_Tmp_1059: int, out_Tmp_1061: int, out_Tmp_1062: int, out_Tmp_1065: int, out_j_1: int, out_Tmp_1067: int, out_Tmp_1069: int, out_Tmp_1070: int, out_Tmp_1071: int, out_Tmp_1072: int, out_Tmp_1073: int, out_Tmp_1074: int, out_Tmp_1075: int, out_Tmp_1076: int, out_Tmp_1077: int, out_Tmp_1081: int, out_Tmp_1083: int, out_Tmp_1085: int, out_Tmp_1086: int, out_Tmp_1087: int, out_Tmp_1090: int, out_Tmp_1091: int, out_Tmp_1092: int, out_Tmp_1094: int, out_Tmp_1096: int, out_Tmp_1099: int, out_Tmp_1101: int, out_deviceExtension_8: int, out_Tmp_1102: int, out_Tmp_1105: int)
{

  entry:
    out_i_6, out_Tmp_1047, out_Tmp_1050, out_Tmp_1053, out_Tmp_1054, out_Tmp_1055, out_Tmp_1056, out_Tmp_1058, out_Tmp_1059, out_Tmp_1061, out_Tmp_1062, out_Tmp_1065, out_j_1, out_Tmp_1067, out_Tmp_1069, out_Tmp_1070, out_Tmp_1071, out_Tmp_1072, out_Tmp_1073, out_Tmp_1074, out_Tmp_1075, out_Tmp_1076, out_Tmp_1077, out_Tmp_1081, out_Tmp_1083, out_Tmp_1085, out_Tmp_1086, out_Tmp_1087, out_Tmp_1090, out_Tmp_1091, out_Tmp_1092, out_Tmp_1094, out_Tmp_1096, out_Tmp_1099, out_Tmp_1101, out_deviceExtension_8, out_Tmp_1102, out_Tmp_1105 := in_i_6, in_Tmp_1047, in_Tmp_1050, in_Tmp_1053, in_Tmp_1054, in_Tmp_1055, in_Tmp_1056, in_Tmp_1058, in_Tmp_1059, in_Tmp_1061, in_Tmp_1062, in_Tmp_1065, in_j_1, in_Tmp_1067, in_Tmp_1069, in_Tmp_1070, in_Tmp_1071, in_Tmp_1072, in_Tmp_1073, in_Tmp_1074, in_Tmp_1075, in_Tmp_1076, in_Tmp_1077, in_Tmp_1081, in_Tmp_1083, in_Tmp_1085, in_Tmp_1086, in_Tmp_1087, in_Tmp_1090, in_Tmp_1091, in_Tmp_1092, in_Tmp_1094, in_Tmp_1096, in_Tmp_1099, in_Tmp_1101, in_deviceExtension_8, in_Tmp_1102, in_Tmp_1105;
    goto L19, exit;

  exit:
    return;

  L19:
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    goto anon32_Else;

  anon32_Else:
    out_Tmp_1071 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1054;
    assume {:nonnull} out_Tmp_1054 != 0;
    assume out_Tmp_1054 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    out_Tmp_1087 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1058;
    assume {:nonnull} out_Tmp_1058 != 0;
    assume out_Tmp_1058 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    out_Tmp_1050 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1081;
    assume {:nonnull} out_Tmp_1081 != 0;
    assume out_Tmp_1081 > 0;
    call {:si_unique_call 1559} sdv_ExFreePool(0);
    out_Tmp_1086 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1055;
    assume {:nonnull} out_Tmp_1055 != 0;
    assume out_Tmp_1055 > 0;
    out_Tmp_1092 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1083;
    assume {:nonnull} out_Tmp_1083 != 0;
    assume out_Tmp_1083 > 0;
    goto L24;

  L24:
    out_Tmp_1053 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1094;
    assume {:nonnull} out_Tmp_1094 != 0;
    assume out_Tmp_1094 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    out_Tmp_1070 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1074;
    assume {:nonnull} out_Tmp_1074 != 0;
    assume out_Tmp_1074 > 0;
    call {:si_unique_call 1558} sdv_ExFreePool(0);
    out_Tmp_1076 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1096;
    assume {:nonnull} out_Tmp_1096 != 0;
    assume out_Tmp_1096 > 0;
    out_Tmp_1105 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1090;
    assume {:nonnull} out_Tmp_1090 != 0;
    assume out_Tmp_1090 > 0;
    goto L31;

  L31:
    out_Tmp_1073 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1102;
    assume {:nonnull} out_Tmp_1102 != 0;
    assume out_Tmp_1102 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    out_Tmp_1069 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1099;
    assume {:nonnull} out_Tmp_1099 != 0;
    assume out_Tmp_1099 > 0;
    call {:si_unique_call 1557} sdv_ExFreePool(0);
    out_Tmp_1059 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1061;
    assume {:nonnull} out_Tmp_1061 != 0;
    assume out_Tmp_1061 > 0;
    out_Tmp_1085 := out_i_6;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1101;
    assume {:nonnull} out_Tmp_1101 != 0;
    assume out_Tmp_1101 > 0;
    goto L38;

  L38:
    out_j_1 := out_i_6;
    goto L45;

  L45:
    call {:si_unique_call 1556} out_Tmp_1047, out_Tmp_1056, out_Tmp_1062, out_Tmp_1065, out_j_1, out_Tmp_1067, out_Tmp_1072, out_Tmp_1075, out_Tmp_1077, out_Tmp_1091, out_deviceExtension_8 := Sbp2HandleRemove_loop_L45(out_Tmp_1047, out_Tmp_1056, out_Tmp_1062, out_Tmp_1065, out_j_1, out_Tmp_1067, out_Tmp_1072, out_Tmp_1075, out_Tmp_1077, in_fdoExtension_4, out_Tmp_1091, out_deviceExtension_8);
    goto L45_last;

  L45_last:
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    out_Tmp_1065 := out_j_1;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1067;
    out_Tmp_1075 := out_j_1 + 1;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1072;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    assume {:nonnull} out_Tmp_1067 != 0;
    assume out_Tmp_1067 > 0;
    assume {:nonnull} out_Tmp_1072 != 0;
    assume out_Tmp_1072 > 0;
    out_Tmp_1056 := out_j_1;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1077;
    assume {:nonnull} out_Tmp_1077 != 0;
    assume out_Tmp_1077 > 0;
    havoc out_Tmp_1062;
    assume {:nonnull} out_Tmp_1062 != 0;
    assume out_Tmp_1062 > 0;
    havoc out_deviceExtension_8;
    out_Tmp_1047 := out_j_1;
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    havoc out_Tmp_1091;
    assume {:nonnull} out_deviceExtension_8 != 0;
    assume out_deviceExtension_8 > 0;
    goto L48;

  L48:
    out_j_1 := out_j_1 + 1;
    assume false;
    return;

  anon35_Then:
    goto L48;

  anon34_Then:
    assume {:nonnull} in_fdoExtension_4 != 0;
    assume in_fdoExtension_4 > 0;
    goto L22;

  L22:
    out_i_6 := out_i_6 + 1;
    goto L22_dummy;

  L22_dummy:
    call {:si_unique_call 1560} {:si_old_unique_call 1} out_i_6, out_Tmp_1047, out_Tmp_1050, out_Tmp_1053, out_Tmp_1054, out_Tmp_1055, out_Tmp_1056, out_Tmp_1058, out_Tmp_1059, out_Tmp_1061, out_Tmp_1062, out_Tmp_1065, out_j_1, out_Tmp_1067, out_Tmp_1069, out_Tmp_1070, out_Tmp_1071, out_Tmp_1072, out_Tmp_1073, out_Tmp_1074, out_Tmp_1075, out_Tmp_1076, out_Tmp_1077, out_Tmp_1081, out_Tmp_1083, out_Tmp_1085, out_Tmp_1086, out_Tmp_1087, out_Tmp_1090, out_Tmp_1091, out_Tmp_1092, out_Tmp_1094, out_Tmp_1096, out_Tmp_1099, out_Tmp_1101, out_deviceExtension_8, out_Tmp_1102, out_Tmp_1105 := Sbp2HandleRemove_loop_L19(out_i_6, out_Tmp_1047, out_Tmp_1050, out_Tmp_1053, out_Tmp_1054, out_Tmp_1055, out_Tmp_1056, out_Tmp_1058, out_Tmp_1059, out_Tmp_1061, out_Tmp_1062, out_Tmp_1065, out_j_1, out_Tmp_1067, out_Tmp_1069, out_Tmp_1070, out_Tmp_1071, out_Tmp_1072, out_Tmp_1073, out_Tmp_1074, out_Tmp_1075, out_Tmp_1076, out_Tmp_1077, out_Tmp_1081, out_Tmp_1083, out_Tmp_1085, out_Tmp_1086, in_fdoExtension_4, out_Tmp_1087, out_Tmp_1090, out_Tmp_1091, out_Tmp_1092, out_Tmp_1094, out_Tmp_1096, out_Tmp_1099, out_Tmp_1101, out_deviceExtension_8, out_Tmp_1102, out_Tmp_1105, in_DeviceObject_18);
    return;

  anon41_Then:
    goto L38;

  anon40_Then:
    goto L31;

  anon39_Then:
    goto L24;

  anon38_Then:
    goto L22;
}



procedure {:LoopProcedure} Sbp2HandleRemove_loop_L19(in_i_6: int, in_Tmp_1047: int, in_Tmp_1050: int, in_Tmp_1053: int, in_Tmp_1054: int, in_Tmp_1055: int, in_Tmp_1056: int, in_Tmp_1058: int, in_Tmp_1059: int, in_Tmp_1061: int, in_Tmp_1062: int, in_Tmp_1065: int, in_j_1: int, in_Tmp_1067: int, in_Tmp_1069: int, in_Tmp_1070: int, in_Tmp_1071: int, in_Tmp_1072: int, in_Tmp_1073: int, in_Tmp_1074: int, in_Tmp_1075: int, in_Tmp_1076: int, in_Tmp_1077: int, in_Tmp_1081: int, in_Tmp_1083: int, in_Tmp_1085: int, in_Tmp_1086: int, in_fdoExtension_4: int, in_Tmp_1087: int, in_Tmp_1090: int, in_Tmp_1091: int, in_Tmp_1092: int, in_Tmp_1094: int, in_Tmp_1096: int, in_Tmp_1099: int, in_Tmp_1101: int, in_deviceExtension_8: int, in_Tmp_1102: int, in_Tmp_1105: int, in_DeviceObject_18: int) returns (out_i_6: int, out_Tmp_1047: int, out_Tmp_1050: int, out_Tmp_1053: int, out_Tmp_1054: int, out_Tmp_1055: int, out_Tmp_1056: int, out_Tmp_1058: int, out_Tmp_1059: int, out_Tmp_1061: int, out_Tmp_1062: int, out_Tmp_1065: int, out_j_1: int, out_Tmp_1067: int, out_Tmp_1069: int, out_Tmp_1070: int, out_Tmp_1071: int, out_Tmp_1072: int, out_Tmp_1073: int, out_Tmp_1074: int, out_Tmp_1075: int, out_Tmp_1076: int, out_Tmp_1077: int, out_Tmp_1081: int, out_Tmp_1083: int, out_Tmp_1085: int, out_Tmp_1086: int, out_Tmp_1087: int, out_Tmp_1090: int, out_Tmp_1091: int, out_Tmp_1092: int, out_Tmp_1094: int, out_Tmp_1096: int, out_Tmp_1099: int, out_Tmp_1101: int, out_deviceExtension_8: int, out_Tmp_1102: int, out_Tmp_1105: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2InitializeDeviceExtension_loop_L51(in_i_7: int, in_context_4: int, in_DeviceExtension_19: int) returns (out_i_7: int, out_context_4: int)
{

  entry:
    out_i_7, out_context_4 := in_i_7, in_context_4;
    goto L51, exit;

  exit:
    return;

  L51:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon36_Else;

  anon36_Else:
    assume {:partition} 8 > out_i_7;
    assume {:nonnull} in_DeviceExtension_19 != 0;
    assume in_DeviceExtension_19 > 0;
    havoc out_context_4;
    assume {:nonnull} in_DeviceExtension_19 != 0;
    assume in_DeviceExtension_19 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_DeviceExtension_19 != 0;
    assume in_DeviceExtension_19 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_i_7 := out_i_7 + 1;
    goto anon36_Else_dummy;

  anon36_Else_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension_loop_L51(in_i_7: int, in_context_4: int, in_DeviceExtension_19: int) returns (out_i_7: int, out_context_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2InitializeDeviceExtension_loop_L89(in_context_4: int, in_oldContext: int, in_vslice_dummy_var_219: int) returns (out_context_4: int, out_oldContext: int, out_vslice_dummy_var_219: int)
{

  entry:
    out_context_4, out_oldContext, out_vslice_dummy_var_219 := in_context_4, in_oldContext, in_vslice_dummy_var_219;
    goto L89, exit;

  exit:
    return;

  L89:
    goto anon39_Else;

  anon39_Else:
    assume {:partition} out_context_4 != 0;
    out_oldContext := out_context_4;
    call {:si_unique_call 1561} out_vslice_dummy_var_219 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    havoc out_context_4;
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    call {:si_unique_call 1562} {:si_old_unique_call 1} out_context_4, out_oldContext, out_vslice_dummy_var_219 := Sbp2InitializeDeviceExtension_loop_L89(out_context_4, out_oldContext, out_vslice_dummy_var_219);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension_loop_L89(in_context_4: int, in_oldContext: int, in_vslice_dummy_var_219: int) returns (out_context_4: int, out_oldContext: int, out_vslice_dummy_var_219: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:SIextraRecBound 8} Sbp2InitializeDeviceExtension_loop_L88(in_i_7: int, in_Tmp_1108: int, in_Tmp_1110: int, in_Tmp_1111: int, in_Tmp_1112: int, in_Tmp_1113: int, in_context_4: int, in_Tmp_1114: int, in_oldContext: int, in_sdv_451: int, in_sdv_452: int, in_DeviceExtension_19: int) returns (out_i_7: int, out_Tmp_1108: int, out_Tmp_1110: int, out_Tmp_1111: int, out_Tmp_1112: int, out_Tmp_1113: int, out_context_4: int, out_Tmp_1114: int, out_oldContext: int, out_sdv_451: int, out_sdv_452: int)
{

  entry:
    out_i_7, out_Tmp_1108, out_Tmp_1110, out_Tmp_1111, out_Tmp_1112, out_Tmp_1113, out_context_4, out_Tmp_1114, out_oldContext, out_sdv_451, out_sdv_452 := in_i_7, in_Tmp_1108, in_Tmp_1110, in_Tmp_1111, in_Tmp_1112, in_Tmp_1113, in_context_4, in_Tmp_1114, in_oldContext, in_sdv_451, in_sdv_452;
    goto L88, exit;

  exit:
    return;

  L88:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon38_Else;

  anon38_Else:
    assume {:partition} 8 > out_i_7;
    out_oldContext := out_context_4;
    call {:si_unique_call 1563} out_sdv_452 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_context_4 := out_sdv_452;
    call {:si_unique_call 1564} out_sdv_451 := sdv_containing_record(out_context_4, 8);
    out_context_4 := out_sdv_451;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_Tmp_1110 := out_i_7;
    assume {:nonnull} in_DeviceExtension_19 != 0;
    assume in_DeviceExtension_19 > 0;
    havoc out_Tmp_1114;
    assume {:nonnull} out_Tmp_1114 != 0;
    assume out_Tmp_1114 > 0;
    havoc out_Tmp_1108;
    assume {:nonnull} out_Tmp_1108 != 0;
    assume out_Tmp_1108 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_Tmp_1111 := out_i_7;
    assume {:nonnull} in_DeviceExtension_19 != 0;
    assume in_DeviceExtension_19 > 0;
    havoc out_Tmp_1113;
    assume {:nonnull} out_Tmp_1113 != 0;
    assume out_Tmp_1113 > 0;
    havoc out_Tmp_1112;
    assume {:nonnull} out_Tmp_1112 != 0;
    assume out_Tmp_1112 > 0;
    assume {:nonnull} in_DeviceExtension_19 != 0;
    assume in_DeviceExtension_19 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_DeviceExtension_19 != 0;
    assume in_DeviceExtension_19 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_DeviceExtension_19 != 0;
    assume in_DeviceExtension_19 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_DeviceExtension_19 != 0;
    assume in_DeviceExtension_19 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_i_7 := out_i_7 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    call {:si_unique_call 1565} {:si_old_unique_call 1} out_i_7, out_Tmp_1108, out_Tmp_1110, out_Tmp_1111, out_Tmp_1112, out_Tmp_1113, out_context_4, out_Tmp_1114, out_oldContext, out_sdv_451, out_sdv_452 := Sbp2InitializeDeviceExtension_loop_L88(out_i_7, out_Tmp_1108, out_Tmp_1110, out_Tmp_1111, out_Tmp_1112, out_Tmp_1113, out_context_4, out_Tmp_1114, out_oldContext, out_sdv_451, out_sdv_452, in_DeviceExtension_19);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension_loop_L88(in_i_7: int, in_Tmp_1108: int, in_Tmp_1110: int, in_Tmp_1111: int, in_Tmp_1112: int, in_Tmp_1113: int, in_context_4: int, in_Tmp_1114: int, in_oldContext: int, in_sdv_451: int, in_sdv_452: int, in_DeviceExtension_19: int) returns (out_i_7: int, out_Tmp_1108: int, out_Tmp_1110: int, out_Tmp_1111: int, out_Tmp_1112: int, out_Tmp_1113: int, out_context_4: int, out_Tmp_1114: int, out_oldContext: int, out_sdv_451: int, out_sdv_452: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CreateDeviceRelations_loop_L40(in_i_8: int, in_Tmp_1132: int, in_Tmp_1137: int, in_Tmp_1140: int, in_status_35: int, in_instanceNum: int, in_Tmp_1153: int, in_Tmp_1154: int, in_FdoExtension_1: int) returns (out_Tmp_1132: int, out_Tmp_1137: int, out_Tmp_1140: int, out_status_35: int, out_instanceNum: int, out_Tmp_1153: int, out_Tmp_1154: int)
{

  entry:
    out_Tmp_1132, out_Tmp_1137, out_Tmp_1140, out_status_35, out_instanceNum, out_Tmp_1153, out_Tmp_1154 := in_Tmp_1132, in_Tmp_1137, in_Tmp_1140, in_status_35, in_instanceNum, in_Tmp_1153, in_Tmp_1154;
    goto L40, exit;

  exit:
    return;

  L40:
    out_Tmp_1132 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_1137 := out_Tmp_1132;
    out_Tmp_1140 := in_i_8;
    assume {:nonnull} in_FdoExtension_1 != 0;
    assume in_FdoExtension_1 > 0;
    havoc out_Tmp_1154;
    out_Tmp_1153 := out_Tmp_1154 + out_Tmp_1140 * 256;
    call {:si_unique_call 1566} out_status_35 := Sbp2CreatePdo(in_FdoExtension_1, out_Tmp_1153, out_Tmp_1137);
    goto anon21_Then;

  anon21_Then:
    assume {:partition} out_status_35 == -1073741771;
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    call {:si_unique_call 1567} {:si_old_unique_call 1} out_Tmp_1132, out_Tmp_1137, out_Tmp_1140, out_status_35, out_instanceNum, out_Tmp_1153, out_Tmp_1154 := Sbp2CreateDeviceRelations_loop_L40(in_i_8, out_Tmp_1132, out_Tmp_1137, out_Tmp_1140, out_status_35, out_instanceNum, out_Tmp_1153, out_Tmp_1154, in_FdoExtension_1);
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L40(in_i_8: int, in_Tmp_1132: int, in_Tmp_1137: int, in_Tmp_1140: int, in_status_35: int, in_instanceNum: int, in_Tmp_1153: int, in_Tmp_1154: int, in_FdoExtension_1: int) returns (out_Tmp_1132: int, out_Tmp_1137: int, out_Tmp_1140: int, out_status_35: int, out_instanceNum: int, out_Tmp_1153: int, out_Tmp_1154: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} old(device) == 0 ==> device != 1;
  free ensures {:va_keep} old(SLAM_guard_O_0) == old(SLAM_guard_O_0_init) ==> device == old(device);
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} out_Tmp_1140 == in_Tmp_1140 || out_Tmp_1140 == in_i_8;
  free ensures {:va_keep} out_status_35 == 0 || out_status_35 == -1073741670 || out_status_35 == -1073741824 || out_status_35 == -1073741771 || out_status_35 == -1073741823 || out_status_35 == in_status_35;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CreateDeviceRelations_loop_L24(in_i_8: int, in_Tmp_1130: int, in_Tmp_1131: int, in_Tmp_1132: int, in_Tmp_1133: int, in_pdoExtension_2: int, in_Tmp_1134: int, in_Tmp_1135: int, in_Tmp_1136: int, in_Tmp_1137: int, in_Tmp_1139: int, in_Tmp_1140: int, in_Tmp_1141: int, in_Tmp_1142: int, in_Tmp_1143: int, in_Tmp_1144: int, in_Tmp_1146: int, in_Tmp_1147: int, in_Tmp_1148: int, in_status_35: int, in_instanceNum: int, in_Tmp_1150: int, in_Tmp_1151: int, in_Tmp_1152: int, in_Tmp_1153: int, in_Tmp_1154: int, in_FdoExtension_1: int, in_DeviceRelations: int, in_vslice_dummy_var_223: int, in_vslice_dummy_var_224: int) returns (out_i_8: int, out_Tmp_1130: int, out_Tmp_1131: int, out_Tmp_1132: int, out_Tmp_1133: int, out_pdoExtension_2: int, out_Tmp_1134: int, out_Tmp_1135: int, out_Tmp_1136: int, out_Tmp_1137: int, out_Tmp_1139: int, out_Tmp_1140: int, out_Tmp_1141: int, out_Tmp_1142: int, out_Tmp_1143: int, out_Tmp_1144: int, out_Tmp_1146: int, out_Tmp_1147: int, out_Tmp_1148: int, out_status_35: int, out_instanceNum: int, out_Tmp_1150: int, out_Tmp_1151: int, out_Tmp_1152: int, out_Tmp_1153: int, out_Tmp_1154: int, out_vslice_dummy_var_223: int, out_vslice_dummy_var_224: int)
{

  entry:
    out_i_8, out_Tmp_1130, out_Tmp_1131, out_Tmp_1132, out_Tmp_1133, out_pdoExtension_2, out_Tmp_1134, out_Tmp_1135, out_Tmp_1136, out_Tmp_1137, out_Tmp_1139, out_Tmp_1140, out_Tmp_1141, out_Tmp_1142, out_Tmp_1143, out_Tmp_1144, out_Tmp_1146, out_Tmp_1147, out_Tmp_1148, out_status_35, out_instanceNum, out_Tmp_1150, out_Tmp_1151, out_Tmp_1152, out_Tmp_1153, out_Tmp_1154, out_vslice_dummy_var_223, out_vslice_dummy_var_224 := in_i_8, in_Tmp_1130, in_Tmp_1131, in_Tmp_1132, in_Tmp_1133, in_pdoExtension_2, in_Tmp_1134, in_Tmp_1135, in_Tmp_1136, in_Tmp_1137, in_Tmp_1139, in_Tmp_1140, in_Tmp_1141, in_Tmp_1142, in_Tmp_1143, in_Tmp_1144, in_Tmp_1146, in_Tmp_1147, in_Tmp_1148, in_status_35, in_instanceNum, in_Tmp_1150, in_Tmp_1151, in_Tmp_1152, in_Tmp_1153, in_Tmp_1154, in_vslice_dummy_var_223, in_vslice_dummy_var_224;
    goto L24, exit;

  exit:
    return;

  L24:
    assume {:nonnull} in_FdoExtension_1 != 0;
    assume in_FdoExtension_1 > 0;
    goto anon19_Else;

  anon19_Else:
    out_Tmp_1143 := out_i_8;
    assume {:nonnull} in_FdoExtension_1 != 0;
    assume in_FdoExtension_1 > 0;
    havoc out_Tmp_1134;
    assume {:nonnull} out_Tmp_1134 != 0;
    assume out_Tmp_1134 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    out_Tmp_1144 := out_i_8;
    assume {:nonnull} in_FdoExtension_1 != 0;
    assume in_FdoExtension_1 > 0;
    havoc out_Tmp_1136;
    assume {:nonnull} out_Tmp_1136 != 0;
    assume out_Tmp_1136 > 0;
    havoc out_Tmp_1148;
    assume {:nonnull} out_Tmp_1148 != 0;
    assume out_Tmp_1148 > 0;
    havoc out_pdoExtension_2;
    assume {:nonnull} out_pdoExtension_2 != 0;
    assume out_pdoExtension_2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L36;

  L36:
    out_i_8 := out_i_8 + 1;
    goto L36_dummy;

  L36_dummy:
    call {:si_unique_call 1572} {:si_old_unique_call 1} out_i_8, out_Tmp_1130, out_Tmp_1131, out_Tmp_1132, out_Tmp_1133, out_pdoExtension_2, out_Tmp_1134, out_Tmp_1135, out_Tmp_1136, out_Tmp_1137, out_Tmp_1139, out_Tmp_1140, out_Tmp_1141, out_Tmp_1142, out_Tmp_1143, out_Tmp_1144, out_Tmp_1146, out_Tmp_1147, out_Tmp_1148, out_status_35, out_instanceNum, out_Tmp_1150, out_Tmp_1151, out_Tmp_1152, out_Tmp_1153, out_Tmp_1154, out_vslice_dummy_var_223, out_vslice_dummy_var_224 := Sbp2CreateDeviceRelations_loop_L24(out_i_8, out_Tmp_1130, out_Tmp_1131, out_Tmp_1132, out_Tmp_1133, out_pdoExtension_2, out_Tmp_1134, out_Tmp_1135, out_Tmp_1136, out_Tmp_1137, out_Tmp_1139, out_Tmp_1140, out_Tmp_1141, out_Tmp_1142, out_Tmp_1143, out_Tmp_1144, out_Tmp_1146, out_Tmp_1147, out_Tmp_1148, out_status_35, out_instanceNum, out_Tmp_1150, out_Tmp_1151, out_Tmp_1152, out_Tmp_1153, out_Tmp_1154, in_FdoExtension_1, in_DeviceRelations, out_vslice_dummy_var_223, out_vslice_dummy_var_224);
    return;

  anon24_Then:
    goto L30;

  L30:
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_1130;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_1135;
    out_Tmp_1150 := out_i_8;
    assume {:nonnull} in_FdoExtension_1 != 0;
    assume in_FdoExtension_1 > 0;
    havoc out_Tmp_1151;
    assume {:nonnull} out_Tmp_1135 != 0;
    assume out_Tmp_1135 > 0;
    assume {:nonnull} out_Tmp_1151 != 0;
    assume out_Tmp_1151 > 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_1146 := out_i_8;
    assume {:nonnull} in_FdoExtension_1 != 0;
    assume in_FdoExtension_1 > 0;
    havoc out_Tmp_1152;
    assume {:nonnull} out_Tmp_1152 != 0;
    assume out_Tmp_1152 > 0;
    call {:si_unique_call 1568} out_vslice_dummy_var_223 := sdv_ObReferenceObject(0);
    goto L36;

  anon20_Then:
    goto L30;

  anon23_Then:
    out_instanceNum := 0;
    goto L40;

  L40:
    call {:si_unique_call 1570} out_Tmp_1132, out_Tmp_1137, out_Tmp_1140, out_status_35, out_instanceNum, out_Tmp_1153, out_Tmp_1154 := Sbp2CreateDeviceRelations_loop_L40(out_i_8, out_Tmp_1132, out_Tmp_1137, out_Tmp_1140, out_status_35, out_instanceNum, out_Tmp_1153, out_Tmp_1154, in_FdoExtension_1);
    goto L40_last;

  L40_last:
    out_Tmp_1132 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_1137 := out_Tmp_1132;
    out_Tmp_1140 := out_i_8;
    assume {:nonnull} in_FdoExtension_1 != 0;
    assume in_FdoExtension_1 > 0;
    havoc out_Tmp_1154;
    out_Tmp_1153 := out_Tmp_1154 + out_Tmp_1140 * 256;
    call {:si_unique_call 1571} out_status_35 := Sbp2CreatePdo(in_FdoExtension_1, out_Tmp_1153, out_Tmp_1137);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} out_status_35 != -1073741771;
    goto anon22_Else;

  anon22_Else:
    assume {:partition} out_status_35 >= 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_1141;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_1142;
    out_Tmp_1133 := out_i_8;
    assume {:nonnull} in_FdoExtension_1 != 0;
    assume in_FdoExtension_1 > 0;
    havoc out_Tmp_1147;
    assume {:nonnull} out_Tmp_1142 != 0;
    assume out_Tmp_1142 > 0;
    assume {:nonnull} out_Tmp_1147 != 0;
    assume out_Tmp_1147 > 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_1139 := out_i_8;
    assume {:nonnull} in_FdoExtension_1 != 0;
    assume in_FdoExtension_1 > 0;
    havoc out_Tmp_1131;
    assume {:nonnull} out_Tmp_1131 != 0;
    assume out_Tmp_1131 > 0;
    call {:si_unique_call 1569} out_vslice_dummy_var_224 := sdv_ObReferenceObject(0);
    goto L36;

  anon21_Then:
    assume {:partition} out_status_35 == -1073741771;
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L24(in_i_8: int, in_Tmp_1130: int, in_Tmp_1131: int, in_Tmp_1132: int, in_Tmp_1133: int, in_pdoExtension_2: int, in_Tmp_1134: int, in_Tmp_1135: int, in_Tmp_1136: int, in_Tmp_1137: int, in_Tmp_1139: int, in_Tmp_1140: int, in_Tmp_1141: int, in_Tmp_1142: int, in_Tmp_1143: int, in_Tmp_1144: int, in_Tmp_1146: int, in_Tmp_1147: int, in_Tmp_1148: int, in_status_35: int, in_instanceNum: int, in_Tmp_1150: int, in_Tmp_1151: int, in_Tmp_1152: int, in_Tmp_1153: int, in_Tmp_1154: int, in_FdoExtension_1: int, in_DeviceRelations: int, in_vslice_dummy_var_223: int, in_vslice_dummy_var_224: int) returns (out_i_8: int, out_Tmp_1130: int, out_Tmp_1131: int, out_Tmp_1132: int, out_Tmp_1133: int, out_pdoExtension_2: int, out_Tmp_1134: int, out_Tmp_1135: int, out_Tmp_1136: int, out_Tmp_1137: int, out_Tmp_1139: int, out_Tmp_1140: int, out_Tmp_1141: int, out_Tmp_1142: int, out_Tmp_1143: int, out_Tmp_1144: int, out_Tmp_1146: int, out_Tmp_1147: int, out_Tmp_1148: int, out_status_35: int, out_instanceNum: int, out_Tmp_1150: int, out_Tmp_1151: int, out_Tmp_1152: int, out_Tmp_1153: int, out_Tmp_1154: int, out_vslice_dummy_var_223: int, out_vslice_dummy_var_224: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} old(device) == 0 ==> device != 1;
  free ensures {:va_keep} old(SLAM_guard_O_0) == old(SLAM_guard_O_0_init) ==> device == old(device);
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} out_status_35 == 0 || out_status_35 == -1073741670 || out_status_35 == -1073741824 || out_status_35 == -1073741771 || out_status_35 == -1073741823 || out_status_35 == in_status_35;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartDevice_loop_L154(in_waitValue_5: int, in_temp_2: int, in_status_36: int, in_deviceExtension_9: int, in_vslice_dummy_var_232: int, in_vslice_dummy_var_233: int, in_vslice_dummy_var_234: int) returns (out_temp_2: int, out_status_36: int, out_vslice_dummy_var_232: int, out_vslice_dummy_var_233: int, out_vslice_dummy_var_234: int)
{
  var vslice_dummy_var_142: int;

  entry:
    out_temp_2, out_status_36, out_vslice_dummy_var_232, out_vslice_dummy_var_233, out_vslice_dummy_var_234 := in_temp_2, in_status_36, in_vslice_dummy_var_232, in_vslice_dummy_var_233, in_vslice_dummy_var_234;
    goto L154, exit;

  exit:
    return;

  L154:
    assume {:nonnull} in_deviceExtension_9 != 0;
    assume in_deviceExtension_9 > 0;
    call {:si_unique_call 1573} out_vslice_dummy_var_232 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(in_deviceExtension_9));
    assume {:nonnull} in_waitValue_5 != 0;
    assume in_waitValue_5 > 0;
    call {:si_unique_call 1574} out_status_36 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_5);
    assume {:nonnull} in_deviceExtension_9 != 0;
    assume in_deviceExtension_9 > 0;
    havoc vslice_dummy_var_142;
    call {:si_unique_call 1575} out_vslice_dummy_var_233 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_142, 0);
    call {:si_unique_call 1576} out_vslice_dummy_var_234 := Sbp2InitializeDeviceExtension(in_deviceExtension_9);
    call {:si_unique_call 1577} out_status_36 := Sbp2ManagementTransaction(in_deviceExtension_9, 0);
    out_temp_2 := out_temp_2 + 1;
    goto anon81_Else;

  anon81_Else:
    assume {:partition} out_status_36 == -1073741248;
    goto anon73_Then;

  anon73_Then:
    assume {:partition} out_temp_2 <= 3;
    goto anon73_Then_dummy;

  anon73_Then_dummy:
    call {:si_unique_call 1578} {:si_old_unique_call 1} out_temp_2, out_status_36, out_vslice_dummy_var_232, out_vslice_dummy_var_233, out_vslice_dummy_var_234 := Sbp2StartDevice_loop_L154(in_waitValue_5, out_temp_2, out_status_36, in_deviceExtension_9, out_vslice_dummy_var_232, out_vslice_dummy_var_233, out_vslice_dummy_var_234);
    return;
}



procedure {:LoopProcedure} Sbp2StartDevice_loop_L154(in_waitValue_5: int, in_temp_2: int, in_status_36: int, in_deviceExtension_9: int, in_vslice_dummy_var_232: int, in_vslice_dummy_var_233: int, in_vslice_dummy_var_234: int) returns (out_temp_2: int, out_status_36: int, out_vslice_dummy_var_232: int, out_vslice_dummy_var_233: int, out_vslice_dummy_var_234: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} out_vslice_dummy_var_233 == 1 || out_vslice_dummy_var_233 == 0 || out_vslice_dummy_var_233 == in_vslice_dummy_var_233;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_563: int, in_sdv_192: int, in_sdv_193: int, in_irp: int, in_packet_5: int, in_deviceExtension: int, in_DeviceObject_7: int, in_Key: int) returns (out_Tmp_563: int, out_sdv_192: int, out_sdv_193: int, out_irp: int, out_packet_5: int)
{

  entry:
    out_Tmp_563, out_sdv_192, out_sdv_193, out_irp, out_packet_5 := in_Tmp_563, in_sdv_192, in_sdv_193, in_irp, in_packet_5;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_7 != 0;
    assume in_DeviceObject_7 > 0;
    call {:si_unique_call 1579} out_packet_5 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_7), in_Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} out_packet_5 != 0;
    call {:si_unique_call 1582} out_sdv_193 := sdv_containing_record(out_packet_5, 64);
    out_irp := out_sdv_193;
    call {:si_unique_call 1583} Sbp2StartIo#0(in_DeviceObject_7, out_irp);
    goto L17;

  L17:
    call {:si_unique_call 1580} out_Tmp_563 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_563 != 0;
    assume out_Tmp_563 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    call {:si_unique_call 1581} out_sdv_192 := sdv_InterlockedDecrement(out_Tmp_563);
    assume {:nonnull} out_Tmp_563 != 0;
    assume out_Tmp_563 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_sdv_192 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    call {:si_unique_call 1584} {:si_old_unique_call 1} out_Tmp_563, out_sdv_192, out_sdv_193, out_irp, out_packet_5 := Sbp2StartNextPacketByKey#0_loop_L11(out_Tmp_563, out_sdv_192, out_sdv_193, out_irp, out_packet_5, in_deviceExtension, in_DeviceObject_7, in_Key);
    return;

  anon8_Then:
    assume {:partition} out_packet_5 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_563: int, in_sdv_192: int, in_sdv_193: int, in_irp: int, in_packet_5: int, in_deviceExtension: int, in_DeviceObject_7: int, in_Key: int) returns (out_Tmp_563: int, out_sdv_192: int, out_sdv_193: int, out_irp: int, out_packet_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_563: int, in_sdv_192: int, in_sdv_193: int, in_irp: int, in_packet_5: int, in_deviceExtension: int, in_DeviceObject_7: int, in_Key: int) returns (out_Tmp_563: int, out_sdv_192: int, out_sdv_193: int, out_irp: int, out_packet_5: int)
{

  entry:
    out_Tmp_563, out_sdv_192, out_sdv_193, out_irp, out_packet_5 := in_Tmp_563, in_sdv_192, in_sdv_193, in_irp, in_packet_5;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_7 != 0;
    assume in_DeviceObject_7 > 0;
    call {:si_unique_call 1585} out_packet_5 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_7), in_Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} out_packet_5 != 0;
    call {:si_unique_call 1588} out_sdv_193 := sdv_containing_record(out_packet_5, 64);
    out_irp := out_sdv_193;
    call {:si_unique_call 1589} Sbp2StartIo#1(in_DeviceObject_7, out_irp);
    goto L17;

  L17:
    call {:si_unique_call 1586} out_Tmp_563 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_563 != 0;
    assume out_Tmp_563 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    call {:si_unique_call 1587} out_sdv_192 := sdv_InterlockedDecrement(out_Tmp_563);
    assume {:nonnull} out_Tmp_563 != 0;
    assume out_Tmp_563 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_sdv_192 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    call {:si_unique_call 1590} {:si_old_unique_call 1} out_Tmp_563, out_sdv_192, out_sdv_193, out_irp, out_packet_5 := Sbp2StartNextPacketByKey#1_loop_L11(out_Tmp_563, out_sdv_192, out_sdv_193, out_irp, out_packet_5, in_deviceExtension, in_DeviceObject_7, in_Key);
    return;

  anon8_Then:
    assume {:partition} out_packet_5 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_563: int, in_sdv_192: int, in_sdv_193: int, in_irp: int, in_packet_5: int, in_deviceExtension: int, in_DeviceObject_7: int, in_Key: int) returns (out_Tmp_563: int, out_sdv_192: int, out_sdv_193: int, out_irp: int, out_packet_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartIo#0_loop_L93(in_sdv_267: int, in_qIrp: int, in_entry: int, in_Irp_5: int) returns (out_sdv_267: int, out_qIrp: int, out_entry: int)
{

  entry:
    out_sdv_267, out_qIrp, out_entry := in_sdv_267, in_qIrp, in_entry;
    goto L93, exit;

  exit:
    return;

  L93:
    goto anon61_Else;

  anon61_Else:
    call {:si_unique_call 1591} out_sdv_267 := sdv_containing_record(out_entry, 64);
    out_qIrp := out_sdv_267;
    goto anon71_Then;

  anon71_Then:
    assume {:partition} out_qIrp != in_Irp_5;
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    call {:si_unique_call 1592} {:si_old_unique_call 1} out_sdv_267, out_qIrp, out_entry := Sbp2StartIo#0_loop_L93(out_sdv_267, out_qIrp, out_entry, in_Irp_5);
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#0_loop_L93(in_sdv_267: int, in_qIrp: int, in_entry: int, in_Irp_5: int) returns (out_sdv_267: int, out_qIrp: int, out_entry: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartIo#1_loop_L93(in_sdv_267: int, in_qIrp: int, in_entry: int, in_Irp_5: int) returns (out_sdv_267: int, out_qIrp: int, out_entry: int)
{

  entry:
    out_sdv_267, out_qIrp, out_entry := in_sdv_267, in_qIrp, in_entry;
    goto L93, exit;

  exit:
    return;

  L93:
    goto anon61_Else;

  anon61_Else:
    call {:si_unique_call 1593} out_sdv_267 := sdv_containing_record(out_entry, 64);
    out_qIrp := out_sdv_267;
    goto anon71_Then;

  anon71_Then:
    assume {:partition} out_qIrp != in_Irp_5;
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    call {:si_unique_call 1594} {:si_old_unique_call 1} out_sdv_267, out_qIrp, out_entry := Sbp2StartIo#1_loop_L93(out_sdv_267, out_qIrp, out_entry, in_Irp_5);
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#1_loop_L93(in_sdv_267: int, in_qIrp: int, in_entry: int, in_Irp_5: int) returns (out_sdv_267: int, out_qIrp: int, out_entry: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:SIextraRecBound 9} Sbp2CleanDeviceExtension#0_loop_L94(in_i_5: int, in_context_2: int, in_deviceExtension_6: int) returns (out_i_5: int, out_context_2: int)
{

  entry:
    out_i_5, out_context_2 := in_i_5, in_context_2;
    goto L94, exit;

  exit:
    return;

  L94:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon77_Else;

  anon77_Else:
    assume {:partition} 8 > out_i_5;
    assume {:nonnull} in_deviceExtension_6 != 0;
    assume in_deviceExtension_6 > 0;
    havoc out_context_2;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    call {:si_unique_call 1595} FreeAddressRange(in_deviceExtension_6, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_2)));
    goto L101;

  L101:
    out_i_5 := out_i_5 + 1;
    goto L101_dummy;

  L101_dummy:
    call {:si_unique_call 1596} {:si_old_unique_call 1} out_i_5, out_context_2 := Sbp2CleanDeviceExtension#0_loop_L94(out_i_5, out_context_2, in_deviceExtension_6);
    return;

  anon89_Then:
    goto L101;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L94(in_i_5: int, in_context_2: int, in_deviceExtension_6: int) returns (out_i_5: int, out_context_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L114(in_statusFifoElement: int, in_sdv_374: int) returns (out_statusFifoElement: int, out_sdv_374: int)
{

  entry:
    out_statusFifoElement, out_sdv_374 := in_statusFifoElement, in_sdv_374;
    goto L114, exit;

  exit:
    return;

  L114:
    goto anon78_Else;

  anon78_Else:
    assume {:partition} out_statusFifoElement != 0;
    call {:si_unique_call 1597} IoFreeMdl(0);
    call {:si_unique_call 1598} out_sdv_374 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_374;
    goto anon78_Else_dummy;

  anon78_Else_dummy:
    call {:si_unique_call 1599} {:si_old_unique_call 1} out_statusFifoElement, out_sdv_374 := Sbp2CleanDeviceExtension#0_loop_L114(out_statusFifoElement, out_sdv_374);
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L114(in_statusFifoElement: int, in_sdv_374: int) returns (out_statusFifoElement: int, out_sdv_374: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L127(in_sdv_368: int, in_packet_11: int, in_Tmp_933: int) returns (out_sdv_368: int, out_Tmp_933: int)
{

  entry:
    out_sdv_368, out_Tmp_933 := in_sdv_368, in_Tmp_933;
    goto L127, exit;

  exit:
    return;

  L127:
    assume {:nonnull} in_packet_11 != 0;
    assume in_packet_11 > 0;
    goto anon79_Else;

  anon79_Else:
    call {:si_unique_call 1603} sdv_ExFreePool(0);
    assume {:nonnull} in_packet_11 != 0;
    assume in_packet_11 > 0;
    havoc out_Tmp_933;
    assume {:nonnull} out_Tmp_933 != 0;
    assume out_Tmp_933 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    call {:si_unique_call 1602} IoFreeIrp(0);
    goto L135;

  L135:
    call {:si_unique_call 1600} sdv_ExFreePool(0);
    call {:si_unique_call 1601} out_sdv_368 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} in_packet_11 != 0;
    assume in_packet_11 > 0;
    goto L135_dummy;

  L135_dummy:
    call {:si_unique_call 1604} {:si_old_unique_call 1} out_sdv_368, out_Tmp_933 := Sbp2CleanDeviceExtension#0_loop_L127(out_sdv_368, in_packet_11, out_Tmp_933);
    return;

  anon90_Then:
    goto L135;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L127(in_sdv_368: int, in_packet_11: int, in_Tmp_933: int) returns (out_sdv_368: int, out_Tmp_933: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L18(in_i_5: int, in_Tmp_884: int, in_fdoExtension_2: int, in_Tmp_938: int, in_DeviceObject_16: int) returns (out_i_5: int, out_Tmp_884: int, out_Tmp_938: int)
{

  entry:
    out_i_5, out_Tmp_884, out_Tmp_938 := in_i_5, in_Tmp_884, in_Tmp_938;
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    goto anon67_Else;

  anon67_Else:
    out_Tmp_884 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_938;
    assume {:nonnull} out_Tmp_938 != 0;
    assume out_Tmp_938 > 0;
    goto anon85_Then;

  anon85_Then:
    out_i_5 := out_i_5 + 1;
    goto anon85_Then_dummy;

  anon85_Then_dummy:
    havoc out_i_5;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L18(in_i_5: int, in_Tmp_884: int, in_fdoExtension_2: int, in_Tmp_938: int, in_DeviceObject_16: int) returns (out_i_5: int, out_Tmp_884: int, out_Tmp_938: int);
  free ensures {:va_keep} out_Tmp_884 == in_i_5 || out_Tmp_884 == in_Tmp_884;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L188(in_i_5: int, in_Tmp_880: int, in_Tmp_886: int, in_Tmp_890: int, in_Tmp_892: int, in_Tmp_896: int, in_Tmp_897: int, in_Tmp_898: int, in_Tmp_899: int, in_Tmp_902: int, in_Tmp_904: int, in_Tmp_907: int, in_Tmp_908: int, in_Tmp_909: int, in_Tmp_911: int, in_Tmp_913: int, in_Tmp_916: int, in_Tmp_917: int, in_fdoExtension_2: int, in_Tmp_923: int, in_Tmp_924: int, in_Tmp_925: int, in_Tmp_929: int, in_Tmp_930: int, in_Tmp_932: int, in_Tmp_935: int, in_Tmp_936: int, in_Tmp_940: int) returns (out_i_5: int, out_Tmp_880: int, out_Tmp_886: int, out_Tmp_890: int, out_Tmp_892: int, out_Tmp_896: int, out_Tmp_897: int, out_Tmp_898: int, out_Tmp_899: int, out_Tmp_902: int, out_Tmp_904: int, out_Tmp_907: int, out_Tmp_908: int, out_Tmp_909: int, out_Tmp_911: int, out_Tmp_913: int, out_Tmp_916: int, out_Tmp_917: int, out_Tmp_923: int, out_Tmp_924: int, out_Tmp_925: int, out_Tmp_929: int, out_Tmp_930: int, out_Tmp_932: int, out_Tmp_935: int, out_Tmp_936: int, out_Tmp_940: int)
{

  entry:
    out_i_5, out_Tmp_880, out_Tmp_886, out_Tmp_890, out_Tmp_892, out_Tmp_896, out_Tmp_897, out_Tmp_898, out_Tmp_899, out_Tmp_902, out_Tmp_904, out_Tmp_907, out_Tmp_908, out_Tmp_909, out_Tmp_911, out_Tmp_913, out_Tmp_916, out_Tmp_917, out_Tmp_923, out_Tmp_924, out_Tmp_925, out_Tmp_929, out_Tmp_930, out_Tmp_932, out_Tmp_935, out_Tmp_936, out_Tmp_940 := in_i_5, in_Tmp_880, in_Tmp_886, in_Tmp_890, in_Tmp_892, in_Tmp_896, in_Tmp_897, in_Tmp_898, in_Tmp_899, in_Tmp_902, in_Tmp_904, in_Tmp_907, in_Tmp_908, in_Tmp_909, in_Tmp_911, in_Tmp_913, in_Tmp_916, in_Tmp_917, in_Tmp_923, in_Tmp_924, in_Tmp_925, in_Tmp_929, in_Tmp_930, in_Tmp_932, in_Tmp_935, in_Tmp_936, in_Tmp_940;
    goto L188, exit;

  exit:
    return;

  L188:
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    goto anon82_Else;

  anon82_Else:
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_i_5;
    out_Tmp_902 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_916;
    assume {:nonnull} out_Tmp_916 != 0;
    assume out_Tmp_916 > 0;
    goto anon96_Then;

  anon96_Then:
    goto L194;

  L194:
    out_Tmp_880 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_932;
    assume {:nonnull} out_Tmp_932 != 0;
    assume out_Tmp_932 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    out_Tmp_909 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_907;
    assume {:nonnull} out_Tmp_907 != 0;
    assume out_Tmp_907 > 0;
    call {:si_unique_call 1607} sdv_ExFreePool(0);
    out_Tmp_936 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_896;
    assume {:nonnull} out_Tmp_896 != 0;
    assume out_Tmp_896 > 0;
    out_Tmp_935 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_940;
    assume {:nonnull} out_Tmp_940 != 0;
    assume out_Tmp_940 > 0;
    goto L236;

  L236:
    out_Tmp_886 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_911;
    assume {:nonnull} out_Tmp_911 != 0;
    assume out_Tmp_911 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    out_Tmp_925 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_913;
    assume {:nonnull} out_Tmp_913 != 0;
    assume out_Tmp_913 > 0;
    call {:si_unique_call 1606} sdv_ExFreePool(0);
    out_Tmp_930 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_908;
    assume {:nonnull} out_Tmp_908 != 0;
    assume out_Tmp_908 > 0;
    out_Tmp_924 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_917;
    assume {:nonnull} out_Tmp_917 != 0;
    assume out_Tmp_917 > 0;
    goto L243;

  L243:
    out_Tmp_899 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_898;
    assume {:nonnull} out_Tmp_898 != 0;
    assume out_Tmp_898 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    out_Tmp_897 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_904;
    assume {:nonnull} out_Tmp_904 != 0;
    assume out_Tmp_904 > 0;
    call {:si_unique_call 1605} sdv_ExFreePool(0);
    out_Tmp_892 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_923;
    assume {:nonnull} out_Tmp_923 != 0;
    assume out_Tmp_923 > 0;
    out_Tmp_929 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_890;
    assume {:nonnull} out_Tmp_890 != 0;
    assume out_Tmp_890 > 0;
    goto L250;

  L250:
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    goto L250_dummy;

  L250_dummy:
    call {:si_unique_call 1608} {:si_old_unique_call 1} out_i_5, out_Tmp_880, out_Tmp_886, out_Tmp_890, out_Tmp_892, out_Tmp_896, out_Tmp_897, out_Tmp_898, out_Tmp_899, out_Tmp_902, out_Tmp_904, out_Tmp_907, out_Tmp_908, out_Tmp_909, out_Tmp_911, out_Tmp_913, out_Tmp_916, out_Tmp_917, out_Tmp_923, out_Tmp_924, out_Tmp_925, out_Tmp_929, out_Tmp_930, out_Tmp_932, out_Tmp_935, out_Tmp_936, out_Tmp_940 := Sbp2CleanDeviceExtension#0_loop_L188(out_i_5, out_Tmp_880, out_Tmp_886, out_Tmp_890, out_Tmp_892, out_Tmp_896, out_Tmp_897, out_Tmp_898, out_Tmp_899, out_Tmp_902, out_Tmp_904, out_Tmp_907, out_Tmp_908, out_Tmp_909, out_Tmp_911, out_Tmp_913, out_Tmp_916, out_Tmp_917, in_fdoExtension_2, out_Tmp_923, out_Tmp_924, out_Tmp_925, out_Tmp_929, out_Tmp_930, out_Tmp_932, out_Tmp_935, out_Tmp_936, out_Tmp_940);
    return;

  anon99_Then:
    goto L250;

  anon98_Then:
    goto L243;

  anon97_Then:
    goto L236;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L188(in_i_5: int, in_Tmp_880: int, in_Tmp_886: int, in_Tmp_890: int, in_Tmp_892: int, in_Tmp_896: int, in_Tmp_897: int, in_Tmp_898: int, in_Tmp_899: int, in_Tmp_902: int, in_Tmp_904: int, in_Tmp_907: int, in_Tmp_908: int, in_Tmp_909: int, in_Tmp_911: int, in_Tmp_913: int, in_Tmp_916: int, in_Tmp_917: int, in_fdoExtension_2: int, in_Tmp_923: int, in_Tmp_924: int, in_Tmp_925: int, in_Tmp_929: int, in_Tmp_930: int, in_Tmp_932: int, in_Tmp_935: int, in_Tmp_936: int, in_Tmp_940: int) returns (out_i_5: int, out_Tmp_880: int, out_Tmp_886: int, out_Tmp_890: int, out_Tmp_892: int, out_Tmp_896: int, out_Tmp_897: int, out_Tmp_898: int, out_Tmp_899: int, out_Tmp_902: int, out_Tmp_904: int, out_Tmp_907: int, out_Tmp_908: int, out_Tmp_909: int, out_Tmp_911: int, out_Tmp_913: int, out_Tmp_916: int, out_Tmp_917: int, out_Tmp_923: int, out_Tmp_924: int, out_Tmp_925: int, out_Tmp_929: int, out_Tmp_930: int, out_Tmp_932: int, out_Tmp_935: int, out_Tmp_936: int, out_Tmp_940: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:SIextraRecBound 9} Sbp2CleanDeviceExtension#1_loop_L94(in_i_5: int, in_context_2: int, in_deviceExtension_6: int) returns (out_i_5: int, out_context_2: int)
{

  entry:
    out_i_5, out_context_2 := in_i_5, in_context_2;
    goto L94, exit;

  exit:
    return;

  L94:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon77_Else;

  anon77_Else:
    assume {:partition} 8 > out_i_5;
    assume {:nonnull} in_deviceExtension_6 != 0;
    assume in_deviceExtension_6 > 0;
    havoc out_context_2;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    call {:si_unique_call 1609} FreeAddressRange(in_deviceExtension_6, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_2)));
    goto L101;

  L101:
    out_i_5 := out_i_5 + 1;
    goto L101_dummy;

  L101_dummy:
    call {:si_unique_call 1610} {:si_old_unique_call 1} out_i_5, out_context_2 := Sbp2CleanDeviceExtension#1_loop_L94(out_i_5, out_context_2, in_deviceExtension_6);
    return;

  anon89_Then:
    goto L101;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L94(in_i_5: int, in_context_2: int, in_deviceExtension_6: int) returns (out_i_5: int, out_context_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L114(in_statusFifoElement: int, in_sdv_374: int) returns (out_statusFifoElement: int, out_sdv_374: int)
{

  entry:
    out_statusFifoElement, out_sdv_374 := in_statusFifoElement, in_sdv_374;
    goto L114, exit;

  exit:
    return;

  L114:
    goto anon78_Else;

  anon78_Else:
    assume {:partition} out_statusFifoElement != 0;
    call {:si_unique_call 1611} IoFreeMdl(0);
    call {:si_unique_call 1612} out_sdv_374 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_374;
    goto anon78_Else_dummy;

  anon78_Else_dummy:
    call {:si_unique_call 1613} {:si_old_unique_call 1} out_statusFifoElement, out_sdv_374 := Sbp2CleanDeviceExtension#1_loop_L114(out_statusFifoElement, out_sdv_374);
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L114(in_statusFifoElement: int, in_sdv_374: int) returns (out_statusFifoElement: int, out_sdv_374: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L127(in_sdv_368: int, in_packet_11: int, in_Tmp_933: int) returns (out_sdv_368: int, out_Tmp_933: int)
{

  entry:
    out_sdv_368, out_Tmp_933 := in_sdv_368, in_Tmp_933;
    goto L127, exit;

  exit:
    return;

  L127:
    assume {:nonnull} in_packet_11 != 0;
    assume in_packet_11 > 0;
    goto anon79_Else;

  anon79_Else:
    call {:si_unique_call 1617} sdv_ExFreePool(0);
    assume {:nonnull} in_packet_11 != 0;
    assume in_packet_11 > 0;
    havoc out_Tmp_933;
    assume {:nonnull} out_Tmp_933 != 0;
    assume out_Tmp_933 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    call {:si_unique_call 1616} IoFreeIrp(0);
    goto L135;

  L135:
    call {:si_unique_call 1614} sdv_ExFreePool(0);
    call {:si_unique_call 1615} out_sdv_368 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} in_packet_11 != 0;
    assume in_packet_11 > 0;
    goto L135_dummy;

  L135_dummy:
    call {:si_unique_call 1618} {:si_old_unique_call 1} out_sdv_368, out_Tmp_933 := Sbp2CleanDeviceExtension#1_loop_L127(out_sdv_368, in_packet_11, out_Tmp_933);
    return;

  anon90_Then:
    goto L135;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L127(in_sdv_368: int, in_packet_11: int, in_Tmp_933: int) returns (out_sdv_368: int, out_Tmp_933: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L18(in_i_5: int, in_Tmp_884: int, in_fdoExtension_2: int, in_Tmp_938: int, in_DeviceObject_16: int) returns (out_i_5: int, out_Tmp_884: int, out_Tmp_938: int)
{

  entry:
    out_i_5, out_Tmp_884, out_Tmp_938 := in_i_5, in_Tmp_884, in_Tmp_938;
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    goto anon67_Else;

  anon67_Else:
    out_Tmp_884 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_938;
    assume {:nonnull} out_Tmp_938 != 0;
    assume out_Tmp_938 > 0;
    goto anon85_Then;

  anon85_Then:
    out_i_5 := out_i_5 + 1;
    goto anon85_Then_dummy;

  anon85_Then_dummy:
    havoc out_i_5;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L18(in_i_5: int, in_Tmp_884: int, in_fdoExtension_2: int, in_Tmp_938: int, in_DeviceObject_16: int) returns (out_i_5: int, out_Tmp_884: int, out_Tmp_938: int);
  free ensures {:va_keep} out_Tmp_884 == in_i_5 || out_Tmp_884 == in_Tmp_884;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L188(in_i_5: int, in_Tmp_880: int, in_Tmp_881: int, in_Tmp_886: int, in_Tmp_887: int, in_Tmp_890: int, in_Tmp_892: int, in_Tmp_896: int, in_Tmp_897: int, in_Tmp_898: int, in_Tmp_899: int, in_Tmp_902: int, in_Tmp_904: int, in_Tmp_905: int, in_Tmp_907: int, in_Tmp_908: int, in_Tmp_909: int, in_Tmp_910: int, in_Tmp_911: int, in_Tmp_913: int, in_Tmp_914: int, in_Tmp_915: int, in_Tmp_916: int, in_Tmp_917: int, in_fdoExtension_2: int, in_Tmp_921: int, in_Tmp_923: int, in_Tmp_924: int, in_Tmp_925: int, in_cIrql_3: int, in_Tmp_929: int, in_Tmp_930: int, in_Tmp_932: int, in_deviceExtension_6: int, in_Tmp_935: int, in_Tmp_936: int, in_Tmp_939: int, in_sdv_375: int, in_Tmp_940: int, in_DeviceObject_16: int, in_vslice_dummy_var_291: int, in_vslice_dummy_var_295: int) returns (out_i_5: int, out_Tmp_880: int, out_Tmp_881: int, out_Tmp_886: int, out_Tmp_887: int, out_Tmp_890: int, out_Tmp_892: int, out_Tmp_896: int, out_Tmp_897: int, out_Tmp_898: int, out_Tmp_899: int, out_Tmp_902: int, out_Tmp_904: int, out_Tmp_905: int, out_Tmp_907: int, out_Tmp_908: int, out_Tmp_909: int, out_Tmp_910: int, out_Tmp_911: int, out_Tmp_913: int, out_Tmp_914: int, out_Tmp_915: int, out_Tmp_916: int, out_Tmp_917: int, out_Tmp_921: int, out_Tmp_923: int, out_Tmp_924: int, out_Tmp_925: int, out_cIrql_3: int, out_Tmp_929: int, out_Tmp_930: int, out_Tmp_932: int, out_deviceExtension_6: int, out_Tmp_935: int, out_Tmp_936: int, out_Tmp_939: int, out_sdv_375: int, out_Tmp_940: int, out_DeviceObject_16: int, out_vslice_dummy_var_291: int, out_vslice_dummy_var_295: int)
{

  entry:
    out_i_5, out_Tmp_880, out_Tmp_881, out_Tmp_886, out_Tmp_887, out_Tmp_890, out_Tmp_892, out_Tmp_896, out_Tmp_897, out_Tmp_898, out_Tmp_899, out_Tmp_902, out_Tmp_904, out_Tmp_905, out_Tmp_907, out_Tmp_908, out_Tmp_909, out_Tmp_910, out_Tmp_911, out_Tmp_913, out_Tmp_914, out_Tmp_915, out_Tmp_916, out_Tmp_917, out_Tmp_921, out_Tmp_923, out_Tmp_924, out_Tmp_925, out_cIrql_3, out_Tmp_929, out_Tmp_930, out_Tmp_932, out_deviceExtension_6, out_Tmp_935, out_Tmp_936, out_Tmp_939, out_sdv_375, out_Tmp_940, out_DeviceObject_16, out_vslice_dummy_var_291, out_vslice_dummy_var_295 := in_i_5, in_Tmp_880, in_Tmp_881, in_Tmp_886, in_Tmp_887, in_Tmp_890, in_Tmp_892, in_Tmp_896, in_Tmp_897, in_Tmp_898, in_Tmp_899, in_Tmp_902, in_Tmp_904, in_Tmp_905, in_Tmp_907, in_Tmp_908, in_Tmp_909, in_Tmp_910, in_Tmp_911, in_Tmp_913, in_Tmp_914, in_Tmp_915, in_Tmp_916, in_Tmp_917, in_Tmp_921, in_Tmp_923, in_Tmp_924, in_Tmp_925, in_cIrql_3, in_Tmp_929, in_Tmp_930, in_Tmp_932, in_deviceExtension_6, in_Tmp_935, in_Tmp_936, in_Tmp_939, in_sdv_375, in_Tmp_940, in_DeviceObject_16, in_vslice_dummy_var_291, in_vslice_dummy_var_295;
    goto L188, exit;

  exit:
    return;

  L188:
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    goto anon82_Else;

  anon82_Else:
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_i_5;
    out_Tmp_902 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_916;
    assume {:nonnull} out_Tmp_916 != 0;
    assume out_Tmp_916 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    out_Tmp_915 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_881;
    assume {:nonnull} out_Tmp_881 != 0;
    assume out_Tmp_881 > 0;
    havoc out_Tmp_905;
    assume {:nonnull} out_Tmp_905 != 0;
    assume out_Tmp_905 > 0;
    havoc out_deviceExtension_6;
    assume {:nonnull} out_deviceExtension_6 != 0;
    assume out_deviceExtension_6 > 0;
    out_Tmp_914 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_939;
    assume {:nonnull} out_Tmp_939 != 0;
    assume out_Tmp_939 > 0;
    havoc out_DeviceObject_16;
    call {:si_unique_call 1634} sdv_KeReleaseSpinLock(0, out_cIrql_3);
    call {:si_unique_call 1635} out_sdv_375 := Sbp2CleanDeviceExtension#0(out_DeviceObject_16, 1);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} out_sdv_375 != 0;
    call {:si_unique_call 1622} out_vslice_dummy_var_291 := sdv_IoAcquireRemoveLock(0, 0);
    call {:si_unique_call 1623} out_Tmp_910 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_910 != 0;
    assume out_Tmp_910 > 0;
    call {:si_unique_call 1624} sdv_KeRaiseIrql(2, out_Tmp_910);
    assume {:nonnull} out_Tmp_910 != 0;
    assume out_Tmp_910 > 0;
    havoc out_cIrql_3;
    call {:si_unique_call 1625} Sbp2StartNextPacketByKey#1(out_DeviceObject_16, 0);
    call {:si_unique_call 1626} sdv_KeLowerIrql(out_cIrql_3);
    call {:si_unique_call 1627} sdv_IoReleaseRemoveLockAndWait(0, 0);
    assume {:nonnull} out_deviceExtension_6 != 0;
    assume out_deviceExtension_6 > 0;
    call {:si_unique_call 1628} out_vslice_dummy_var_295 := KeCancelTimer(0);
    call {:si_unique_call 1629} IoDeleteDevice(out_DeviceObject_16);
    call {:si_unique_call 1630} out_Tmp_910 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_910 != 0;
    assume out_Tmp_910 > 0;
    call {:si_unique_call 1631} sdv_KeAcquireSpinLock(0, out_Tmp_910);
    assume {:nonnull} out_Tmp_910 != 0;
    assume out_Tmp_910 > 0;
    havoc out_cIrql_3;
    out_Tmp_887 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_921;
    assume {:nonnull} out_Tmp_921 != 0;
    assume out_Tmp_921 > 0;
    goto L194;

  L194:
    out_Tmp_880 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_932;
    assume {:nonnull} out_Tmp_932 != 0;
    assume out_Tmp_932 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    out_Tmp_909 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_907;
    assume {:nonnull} out_Tmp_907 != 0;
    assume out_Tmp_907 > 0;
    call {:si_unique_call 1621} sdv_ExFreePool(0);
    out_Tmp_936 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_896;
    assume {:nonnull} out_Tmp_896 != 0;
    assume out_Tmp_896 > 0;
    out_Tmp_935 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_940;
    assume {:nonnull} out_Tmp_940 != 0;
    assume out_Tmp_940 > 0;
    goto L236;

  L236:
    out_Tmp_886 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_911;
    assume {:nonnull} out_Tmp_911 != 0;
    assume out_Tmp_911 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    out_Tmp_925 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_913;
    assume {:nonnull} out_Tmp_913 != 0;
    assume out_Tmp_913 > 0;
    call {:si_unique_call 1620} sdv_ExFreePool(0);
    out_Tmp_930 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_908;
    assume {:nonnull} out_Tmp_908 != 0;
    assume out_Tmp_908 > 0;
    out_Tmp_924 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_917;
    assume {:nonnull} out_Tmp_917 != 0;
    assume out_Tmp_917 > 0;
    goto L243;

  L243:
    out_Tmp_899 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_898;
    assume {:nonnull} out_Tmp_898 != 0;
    assume out_Tmp_898 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    out_Tmp_897 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_904;
    assume {:nonnull} out_Tmp_904 != 0;
    assume out_Tmp_904 > 0;
    call {:si_unique_call 1619} sdv_ExFreePool(0);
    out_Tmp_892 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_923;
    assume {:nonnull} out_Tmp_923 != 0;
    assume out_Tmp_923 > 0;
    out_Tmp_929 := out_i_5;
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    havoc out_Tmp_890;
    assume {:nonnull} out_Tmp_890 != 0;
    assume out_Tmp_890 > 0;
    goto L250;

  L250:
    assume {:nonnull} in_fdoExtension_2 != 0;
    assume in_fdoExtension_2 > 0;
    goto L250_dummy;

  L250_dummy:
    call {:si_unique_call 1636} {:si_old_unique_call 1} out_i_5, out_Tmp_880, out_Tmp_881, out_Tmp_886, out_Tmp_887, out_Tmp_890, out_Tmp_892, out_Tmp_896, out_Tmp_897, out_Tmp_898, out_Tmp_899, out_Tmp_902, out_Tmp_904, out_Tmp_905, out_Tmp_907, out_Tmp_908, out_Tmp_909, out_Tmp_910, out_Tmp_911, out_Tmp_913, out_Tmp_914, out_Tmp_915, out_Tmp_916, out_Tmp_917, out_Tmp_921, out_Tmp_923, out_Tmp_924, out_Tmp_925, out_cIrql_3, out_Tmp_929, out_Tmp_930, out_Tmp_932, out_deviceExtension_6, out_Tmp_935, out_Tmp_936, out_Tmp_939, out_sdv_375, out_Tmp_940, out_DeviceObject_16, out_vslice_dummy_var_291, out_vslice_dummy_var_295 := Sbp2CleanDeviceExtension#1_loop_L188(out_i_5, out_Tmp_880, out_Tmp_881, out_Tmp_886, out_Tmp_887, out_Tmp_890, out_Tmp_892, out_Tmp_896, out_Tmp_897, out_Tmp_898, out_Tmp_899, out_Tmp_902, out_Tmp_904, out_Tmp_905, out_Tmp_907, out_Tmp_908, out_Tmp_909, out_Tmp_910, out_Tmp_911, out_Tmp_913, out_Tmp_914, out_Tmp_915, out_Tmp_916, out_Tmp_917, in_fdoExtension_2, out_Tmp_921, out_Tmp_923, out_Tmp_924, out_Tmp_925, out_cIrql_3, out_Tmp_929, out_Tmp_930, out_Tmp_932, out_deviceExtension_6, out_Tmp_935, out_Tmp_936, out_Tmp_939, out_sdv_375, out_Tmp_940, out_DeviceObject_16, out_vslice_dummy_var_291, out_vslice_dummy_var_295);
    return;

  anon99_Then:
    goto L250;

  anon98_Then:
    goto L243;

  anon97_Then:
    goto L236;

  anon83_Then:
    assume {:partition} out_sdv_375 == 0;
    call {:si_unique_call 1632} out_Tmp_910 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_910 != 0;
    assume out_Tmp_910 > 0;
    call {:si_unique_call 1633} sdv_KeAcquireSpinLock(0, out_Tmp_910);
    assume {:nonnull} out_Tmp_910 != 0;
    assume out_Tmp_910 > 0;
    havoc out_cIrql_3;
    goto L194;

  anon96_Then:
    goto L194;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L188(in_i_5: int, in_Tmp_880: int, in_Tmp_881: int, in_Tmp_886: int, in_Tmp_887: int, in_Tmp_890: int, in_Tmp_892: int, in_Tmp_896: int, in_Tmp_897: int, in_Tmp_898: int, in_Tmp_899: int, in_Tmp_902: int, in_Tmp_904: int, in_Tmp_905: int, in_Tmp_907: int, in_Tmp_908: int, in_Tmp_909: int, in_Tmp_910: int, in_Tmp_911: int, in_Tmp_913: int, in_Tmp_914: int, in_Tmp_915: int, in_Tmp_916: int, in_Tmp_917: int, in_fdoExtension_2: int, in_Tmp_921: int, in_Tmp_923: int, in_Tmp_924: int, in_Tmp_925: int, in_cIrql_3: int, in_Tmp_929: int, in_Tmp_930: int, in_Tmp_932: int, in_deviceExtension_6: int, in_Tmp_935: int, in_Tmp_936: int, in_Tmp_939: int, in_sdv_375: int, in_Tmp_940: int, in_DeviceObject_16: int, in_vslice_dummy_var_291: int, in_vslice_dummy_var_295: int) returns (out_i_5: int, out_Tmp_880: int, out_Tmp_881: int, out_Tmp_886: int, out_Tmp_887: int, out_Tmp_890: int, out_Tmp_892: int, out_Tmp_896: int, out_Tmp_897: int, out_Tmp_898: int, out_Tmp_899: int, out_Tmp_902: int, out_Tmp_904: int, out_Tmp_905: int, out_Tmp_907: int, out_Tmp_908: int, out_Tmp_909: int, out_Tmp_910: int, out_Tmp_911: int, out_Tmp_913: int, out_Tmp_914: int, out_Tmp_915: int, out_Tmp_916: int, out_Tmp_917: int, out_Tmp_921: int, out_Tmp_923: int, out_Tmp_924: int, out_Tmp_925: int, out_cIrql_3: int, out_Tmp_929: int, out_Tmp_930: int, out_Tmp_932: int, out_deviceExtension_6: int, out_Tmp_935: int, out_Tmp_936: int, out_Tmp_939: int, out_sdv_375: int, out_Tmp_940: int, out_DeviceObject_16: int, out_vslice_dummy_var_291: int, out_vslice_dummy_var_295: int);
  modifies alloc, device;
  free ensures {:va_keep} old(device) == 1 ==> device != 0;
  free ensures {:va_keep} device == 1 || device == old(device);
  free ensures {:va_keep} out_sdv_375 == 1 || out_sdv_375 == 0 || out_sdv_375 == in_sdv_375;
  free ensures {:va_keep} out_vslice_dummy_var_291 == -1073741823 || out_vslice_dummy_var_291 == -1073741738 || out_vslice_dummy_var_291 == 0 || out_vslice_dummy_var_291 == in_vslice_dummy_var_291;
  free ensures {:va_keep} out_vslice_dummy_var_295 == 1 || out_vslice_dummy_var_295 == 0 || out_vslice_dummy_var_295 == in_vslice_dummy_var_295;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



procedure fakeMain() returns (Tmp_386: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_O_0, device, t, yogi_error;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(device) == 1 || old(device) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || device == 1 || device == 0;
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:entrypoint} fakeMain() returns (Tmp_386: int, dup_assertVar: bool)
{

  start:
    call Tmp_386, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


