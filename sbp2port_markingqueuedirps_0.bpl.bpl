var {:scalar} alloc: int;

var {:scalar} sdv_irql_current: int;

var {:scalar} queued: int;

var {:scalar} yogi_error: int;

var {:scalar} stack_location: int;

var {:scalar} locked: int;

var {:pointer} SLAM_guard_S_0: int;

var {:scalar} markedPending: int;

var {:scalar} queuedWithoutMarking: int;

var {:scalar} Mem_T.Free__GENERAL_LOOKASIDE: [int]int;

var {:scalar} Mem_T.Irp__IRBIRP: [int]int;

var {:scalar} Mem_T.PWPP_PROJECT_CONTROL_BLOCK: [int]int;

var {:scalar} Mem_T.P_IRBIRP: [int]int;

var {:scalar} Mem_T.Status__IO_STATUS_BLOCK: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WPP_GLOBAL_Control: int;

const EventTraceConfigGuid: int;

const BUS1394_CLASS_GUID: int;

const WmiScsiAddressGuid: int;

const GUID_DEVINTERFACE_STORAGEPORT: int;

const GUID_DEVINTERFACE_FLOPPY: int;

const GUID_DEVICEDUMP_STORAGE_DEVICE: int;

const GUID_DEVINTERFACE_WRITEONCEDISK: int;

const WPP_TRACE_CONTROL_NULL_GUID: int;

const GUID_DEVINTERFACE_TAPE: int;

const GUID_DEVINTERFACE_VOLUME: int;

const GUID_DEVINTERFACE_CDCHANGER: int;

const GUID_DEVINTERFACE_MEDIUMCHANGER: int;

const ScsiRawInterfaceGuid: int;

const GUID_DEVINTERFACE_VMLUN: int;

const DefaultTraceSecurityGuid: int;

const GUID_DEVICEDUMP_DRIVER_STORAGE_PORT: int;

const GUID_DEVINTERFACE_PARTITION: int;

const GUID_DEVINTERFACE_CDROM: int;

const GUID_DEVINTERFACE_HIDDEN_VOLUME: int;

const GUID_DEVINTERFACE_DISK: int;

const SystemTraceControlGuid: int;

const EventTraceGuid: int;

const GUID_DEVINTERFACE_SES: int;

const WPP_ThisDir_CTLGUID_wppCtlGuid: int;

const DATAID_SBP_LUN_INFORMATION: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const p_sdv_fx_dev_object: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const KdDebuggerNotPresent: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const KdDebuggerEnabled: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_harnessStackLocation: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_fx_dev_object: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const sdv_cancelFptr: int;

const SLAM_guard_S_0_init: int;

const KeTickCount: int;

const Sbp2LogLevel: int;

procedure {:origName "WPP_SF_qDDD"} WPP_SF_qDDD(actual_Logger: int, actual_id: int, actual_TraceGuid: int, actual_s_p_e_c_i_a_l_1: int, actual_s_p_e_c_i_a_l_2: int, actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qDDD"} WPP_SF_qDDD(actual_Logger: int, actual_id: int, actual_TraceGuid: int, actual_s_p_e_c_i_a_l_1: int, actual_s_p_e_c_i_a_l_2: int, actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int)
{
  var {:pointer} TraceGuid: int;
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(4);
    TraceGuid := actual_TraceGuid;
    return;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var {:scalar} Tmp_4: int;
  var vslice_dummy_var_1: int;

  anon0:
    call {:si_unique_call 1} Tmp_4 := __HAVOC_malloc(4);
    call {:si_unique_call 2} vslice_dummy_var_1 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_4 != 0;
    assume Tmp_4 > 0;
    return;
}



procedure {:origName "WPP_SF_qqDD"} WPP_SF_qqDD(actual_Logger_1: int, actual_id_1: int, actual_TraceGuid_1: int, actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int, actual_s_p_e_c_i_a_l_7: int, actual_s_p_e_c_i_a_l_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qqDD"} WPP_SF_qqDD(actual_Logger_1: int, actual_id_1: int, actual_TraceGuid_1: int, actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int, actual_s_p_e_c_i_a_l_7: int, actual_s_p_e_c_i_a_l_8: int)
{
  var {:pointer} TraceGuid_1: int;
  var vslice_dummy_var_2: int;

  anon0:
    call {:si_unique_call 3} vslice_dummy_var_2 := __HAVOC_malloc(4);
    TraceGuid_1 := actual_TraceGuid_1;
    return;
}



procedure {:origName "WPP_SF_qdD"} WPP_SF_qdD(actual_Logger_2: int, actual_id_2: int, actual_TraceGuid_2: int, actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int, actual_s_p_e_c_i_a_l_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qdD"} WPP_SF_qdD(actual_Logger_2: int, actual_id_2: int, actual_TraceGuid_2: int, actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int, actual_s_p_e_c_i_a_l_11: int)
{
  var {:pointer} TraceGuid_2: int;
  var vslice_dummy_var_3: int;

  anon0:
    call {:si_unique_call 4} vslice_dummy_var_3 := __HAVOC_malloc(4);
    TraceGuid_2 := actual_TraceGuid_2;
    return;
}



procedure {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_13: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_13 == -1073741670 || Tmp_13 == 0 || Tmp_13 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_13: int)
{
  var {:scalar} i: int;
  var {:pointer} Tmp_14: int;
  var {:pointer} Tmp_15: int;
  var {:pointer} Tmp_16: int;
  var {:scalar} Tmp_17: int;
  var {:pointer} Tmp_18: int;
  var {:scalar} u: int;
  var {:scalar} Tmp_19: int;
  var {:pointer} Tmp_20: int;
  var {:scalar} sdv_4: int;
  var {:pointer} Tmp_21: int;
  var {:pointer} pData: int;
  var {:pointer} Tmp_22: int;
  var {:scalar} ulUnicode: int;
  var {:scalar} Tmp_23: int;
  var {:scalar} Tmp_24: int;
  var {:scalar} sdv_6: int;
  var {:scalar} Tmp_26: int;
  var {:pointer} sdv_7: int;
  var {:scalar} Tmp_27: int;
  var {:scalar} dataLength: int;
  var {:pointer} Tmp_28: int;
  var {:pointer} sdv_9: int;
  var {:pointer} Tmp_29: int;
  var {:scalar} Tmp_31: int;
  var {:pointer} Tmp_33: int;
  var {:scalar} Tmp_36: int;
  var {:scalar} Tmp_37: int;
  var {:pointer} Tmp_38: int;
  var {:scalar} status: int;
  var {:pointer} Tmp_39: int;
  var {:scalar} uChar: int;
  var {:scalar} Tmp_40: int;
  var {:scalar} Tmp_41: int;
  var {:pointer} TextLeaf: int;
  var {:pointer} uniString: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_2756: int;
  var vslice_dummy_var_2757: int;

  anon0:
    call {:si_unique_call 5} u := __HAVOC_malloc(20);
    call {:si_unique_call 6} vslice_dummy_var_4 := __HAVOC_malloc(12);
    TextLeaf := actual_TextLeaf;
    uniString := actual_uniString;
    call {:si_unique_call 7} Tmp_20 := __HAVOC_malloc(4);
    call {:si_unique_call 8} Tmp_22 := __HAVOC_malloc(4);
    call {:si_unique_call 9} Tmp_28 := __HAVOC_malloc(4);
    call {:si_unique_call 10} Tmp_29 := __HAVOC_malloc(4);
    call {:si_unique_call 11} Tmp_38 := __HAVOC_malloc(4);
    status := 0;
    pData := 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L20;

  L20:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_29;
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_33;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_17;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc vslice_dummy_var_2756;
    call {:si_unique_call 12} WPP_SF_S(Tmp_17, 122, Tmp_33, vslice_dummy_var_2756);
    goto L21;

  L21:
    Tmp_13 := status;
    goto L1;

  L1:
    return;

  anon59_Then:
    goto L21;

  anon76_Then:
    goto L21;

  anon58_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L21;

  anon75_Then:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    dataLength := 0;
    goto L37;

  L37:
    ulUnicode := sdv_6;
    Tmp_37 := dataLength * 4 + 2;
    call {:si_unique_call 13} sdv_7 := ExAllocatePoolWithTag(512, Tmp_37, 846226003);
    pData := sdv_7;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} pData == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_28;
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_39;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_36;
    call {:si_unique_call 14} WPP_SF_(Tmp_36, 123, Tmp_39);
    goto L138;

  L138:
    status := -1073741670;
    goto L108;

  L108:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} pData != 0;
    call {:si_unique_call 15} sdv_ExFreePool(0);
    goto L116;

  L116:
    Tmp_13 := status;
    goto L1;

  anon69_Then:
    assume {:partition} pData == 0;
    goto L116;

  anon74_Then:
    goto L138;

  anon84_Then:
    goto L138;

  anon73_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L138;

  anon78_Then:
    assume {:partition} pData != 0;
    Tmp_31 := dataLength * 4 + 2;
    call {:si_unique_call 16} sdv_RtlZeroMemory(0, Tmp_31);
    Tmp_40 := dataLength * 4;
    call {:si_unique_call 17} sdv_RtlCopyMemory(0, 0, Tmp_40);
    i := 0;
    goto L60;

  L60:
    call {:si_unique_call 18} i, Tmp_14, Tmp_16, Tmp_20, Tmp_21, Tmp_26, Tmp_27, uChar := Sbp2_ProcessTextualDescriptor_loop_L60(i, Tmp_14, Tmp_16, Tmp_20, Tmp_21, pData, ulUnicode, Tmp_26, Tmp_27, dataLength, uChar);
    goto L60_last;

  L60_last:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} dataLength * 4 > i;
    Tmp_16 := pData;
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    havoc uChar;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} uChar != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} uChar == 44;
    goto L70;

  L70:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_20;
    assume {:nonnull} Tmp_20 != 0;
    assume Tmp_20 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    Tmp_27 := uChar;
    havoc Tmp_21;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_26;
    call {:si_unique_call 19} WPP_SF_D(Tmp_26, 124, Tmp_21, Tmp_27);
    goto L71;

  L71:
    Tmp_14 := pData;
    assume {:nonnull} Tmp_14 != 0;
    assume Tmp_14 > 0;
    goto L80;

  L80:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    i := i + 1;
    goto L81;

  L81:
    i := i + 1;
    goto L81_dummy;

  L81_dummy:
    assume false;
    return;

  anon65_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    goto L81;

  anon64_Then:
    goto L71;

  anon80_Then:
    goto L71;

  anon63_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L71;

  anon61_Then:
    assume {:partition} uChar != 44;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} 32 <= uChar;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} uChar <= 127;
    goto L80;

  anon66_Then:
    assume {:partition} 127 < uChar;
    goto L70;

  anon62_Then:
    assume {:partition} uChar < 32;
    goto L70;

  anon79_Then:
    assume {:partition} uChar == 0;
    goto L61;

  L61:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_24;
    call {:si_unique_call 20} sdv_9 := ExAllocatePoolWithTag(512, Tmp_24, 846226003);
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_38;
    assume {:nonnull} Tmp_38 != 0;
    assume Tmp_38 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc Tmp_15;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_19;
    call {:si_unique_call 21} WPP_SF_(Tmp_19, 125, Tmp_15);
    goto L128;

  L128:
    status := -1073741670;
    goto L108;

  anon72_Then:
    goto L128;

  anon83_Then:
    goto L128;

  anon71_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L128;

  anon81_Then:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_23;
    call {:si_unique_call 22} sdv_RtlZeroMemory(0, Tmp_23);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    call {:si_unique_call 23} vslice_dummy_var_5 := corral_nondet();
    goto L107;

  L107:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_22;
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_18;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_41;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc vslice_dummy_var_2757;
    call {:si_unique_call 24} WPP_SF_S(Tmp_41, 126, Tmp_18, vslice_dummy_var_2757);
    goto L108;

  anon70_Then:
    goto L108;

  anon82_Then:
    goto L108;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L108;

  anon67_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    call {:si_unique_call 25} RtlInitAnsiString(0, 0);
    call {:si_unique_call 26} status := RtlAnsiStringToUnicodeString(0, 0, 0);
    goto L107;

  anon60_Then:
    assume {:partition} i >= dataLength * 4;
    goto L61;

  anon77_Then:
    assume {:nonnull} u != 0;
    assume u > 0;
    havoc dataLength;
    goto L37;

  anon57_Then:
    goto L20;
}



procedure {:origName "Sbp2GetConfigPacket"} Sbp2GetConfigPacket(actual_FdoExtension: int, actual_Packet: int, actual_Generation: int) returns (Tmp_58: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2GetConfigPacket"} Sbp2GetConfigPacket(actual_FdoExtension: int, actual_Packet: int, actual_Generation: int) returns (Tmp_58: int)
{
  var {:pointer} Tmp_59: int;
  var {:pointer} Tmp_60: int;
  var {:pointer} unitDependentDirectory: int;
  var {:pointer} Tmp_61: int;
  var {:pointer} Tmp_62: int;
  var {:pointer} Tmp_63: int;
  var {:scalar} Tmp_64: int;
  var {:pointer} Tmp_65: int;
  var {:pointer} Tmp_66: int;
  var {:pointer} pdoExtension_1: int;
  var {:pointer} Tmp_67: int;
  var {:pointer} Tmp_68: int;
  var {:pointer} Tmp_69: int;
  var {:pointer} Tmp_70: int;
  var {:pointer} Tmp_71: int;
  var {:pointer} Tmp_72: int;
  var {:pointer} Tmp_73: int;
  var {:pointer} Tmp_74: int;
  var {:pointer} Tmp_75: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:pointer} Tmp_78: int;
  var {:pointer} Tmp_79: int;
  var {:pointer} Tmp_81: int;
  var {:pointer} Tmp_82: int;
  var {:pointer} Tmp_83: int;
  var {:pointer} Tmp_84: int;
  var {:pointer} Tmp_85: int;
  var {:pointer} Tmp_86: int;
  var {:scalar} Tmp_87: int;
  var {:scalar} Tmp_88: int;
  var {:pointer} Tmp_89: int;
  var {:pointer} Tmp_90: int;
  var {:pointer} Tmp_91: int;
  var {:pointer} Tmp_92: int;
  var {:pointer} Tmp_93: int;
  var {:scalar} Tmp_94: int;
  var {:pointer} Tmp_95: int;
  var {:pointer} Tmp_96: int;
  var {:pointer} Tmp_97: int;
  var {:scalar} Tmp_98: int;
  var {:pointer} vendorLeaf: int;
  var {:scalar} Tmp_99: int;
  var {:pointer} Tmp_100: int;
  var {:pointer} unitDirectory: int;
  var {:scalar} Tmp_101: int;
  var {:pointer} Tmp_102: int;
  var {:scalar} Tmp_103: int;
  var {:scalar} status_2: int;
  var {:pointer} Tmp_104: int;
  var {:pointer} Tmp_105: int;
  var {:pointer} Tmp_106: int;
  var {:pointer} Tmp_107: int;
  var {:pointer} Tmp_108: int;
  var {:pointer} Tmp_109: int;
  var {:pointer} modelLeaf: int;
  var {:pointer} Tmp_110: int;
  var {:pointer} Tmp_111: int;
  var {:pointer} FdoExtension: int;
  var {:pointer} Packet: int;
  var {:pointer} Generation: int;
  var vslice_dummy_var_2758: int;
  var vslice_dummy_var_2759: int;
  var vslice_dummy_var_2760: int;
  var vslice_dummy_var_2761: int;
  var vslice_dummy_var_2762: int;
  var vslice_dummy_var_2763: int;
  var vslice_dummy_var_2764: int;
  var vslice_dummy_var_2765: int;

  anon0:
    FdoExtension := actual_FdoExtension;
    Packet := actual_Packet;
    Generation := actual_Generation;
    call {:si_unique_call 27} Tmp_59 := __HAVOC_malloc(4);
    call {:si_unique_call 28} Tmp_63 := __HAVOC_malloc(4);
    call {:si_unique_call 29} Tmp_74 := __HAVOC_malloc(4);
    call {:si_unique_call 30} Tmp_76 := __HAVOC_malloc(4);
    call {:si_unique_call 31} Tmp_100 := __HAVOC_malloc(4);
    call {:si_unique_call 32} Tmp_104 := __HAVOC_malloc(4);
    call {:si_unique_call 33} Tmp_105 := __HAVOC_malloc(4);
    call {:si_unique_call 34} Tmp_109 := __HAVOC_malloc(4);
    pdoExtension_1 := FdoExtension;
    unitDirectory := 0;
    unitDependentDirectory := 0;
    vendorLeaf := 0;
    modelLeaf := 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_91;
    assume {:nonnull} Tmp_91 != 0;
    assume Tmp_91 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_95;
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_79;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_107;
    assume {:nonnull} Tmp_107 != 0;
    assume Tmp_107 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_97;
    assume {:nonnull} Tmp_97 != 0;
    assume Tmp_97 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_108;
    assume {:nonnull} Tmp_108 != 0;
    assume Tmp_108 > 0;
    call {:si_unique_call 35} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} status_2 < 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_74;
    assume {:nonnull} Tmp_74 != 0;
    assume Tmp_74 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    havoc Tmp_85;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_103;
    call {:si_unique_call 36} WPP_SF_D(Tmp_103, 50, Tmp_85, status_2);
    goto L66;

  L66:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} unitDirectory != 0;
    call {:si_unique_call 37} sdv_ExFreePool(0);
    goto L67;

  L67:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} unitDependentDirectory != 0;
    call {:si_unique_call 38} sdv_ExFreePool(0);
    goto L71;

  L71:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} vendorLeaf != 0;
    call {:si_unique_call 39} sdv_ExFreePool(0);
    goto L75;

  L75:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} modelLeaf != 0;
    call {:si_unique_call 40} sdv_ExFreePool(0);
    goto L79;

  L79:
    Tmp_58 := status_2;
    goto L1;

  L1:
    return;

  anon87_Then:
    assume {:partition} modelLeaf == 0;
    goto L79;

  anon86_Then:
    assume {:partition} vendorLeaf == 0;
    goto L75;

  anon85_Then:
    assume {:partition} unitDependentDirectory == 0;
    goto L71;

  anon84_Then:
    assume {:partition} unitDirectory == 0;
    goto L67;

  anon105_Then:
    goto L66;

  anon117_Then:
    goto L66;

  anon104_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L66;

  anon79_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_70;
    assume {:nonnull} Tmp_70 != 0;
    assume Tmp_70 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_63;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    havoc Tmp_73;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_88;
    call {:si_unique_call 41} WPP_SF_q(Tmp_88, 52, Tmp_73, FdoExtension);
    goto L182;

  L182:
    status_2 := -1073741621;
    goto L66;

  anon103_Then:
    goto L182;

  anon116_Then:
    goto L182;

  anon102_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L182;

  anon106_Then:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_72;
    assume {:nonnull} Tmp_72 != 0;
    assume Tmp_72 > 0;
    havoc vslice_dummy_var_2758;
    call {:si_unique_call 42} unitDirectory := ExAllocatePoolWithTag(512, vslice_dummy_var_2758, -464166317);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} unitDirectory == 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_109;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    havoc Tmp_78;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_64;
    call {:si_unique_call 43} WPP_SF_(Tmp_64, 51, Tmp_78);
    goto L172;

  L172:
    status_2 := -1073741670;
    goto L66;

  anon101_Then:
    goto L172;

  anon115_Then:
    goto L172;

  anon100_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L172;

  anon80_Then:
    assume {:partition} unitDirectory != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_66;
    assume {:nonnull} Tmp_66 != 0;
    assume Tmp_66 > 0;
    havoc vslice_dummy_var_2759;
    call {:si_unique_call 44} sdv_RtlZeroMemory(0, vslice_dummy_var_2759);
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_96;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_111;
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    havoc vslice_dummy_var_2760;
    call {:si_unique_call 45} unitDependentDirectory := ExAllocatePoolWithTag(512, vslice_dummy_var_2760, -464166317);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} unitDependentDirectory == 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_105;
    assume {:nonnull} Tmp_105 != 0;
    assume Tmp_105 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_71;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_87;
    call {:si_unique_call 46} WPP_SF_(Tmp_87, 53, Tmp_71);
    goto L57;

  L57:
    status_2 := -1073741670;
    goto L66;

  anon83_Then:
    goto L57;

  anon114_Then:
    goto L57;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L57;

  anon81_Then:
    assume {:partition} unitDependentDirectory != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_75;
    assume {:nonnull} Tmp_75 != 0;
    assume Tmp_75 > 0;
    havoc vslice_dummy_var_2761;
    call {:si_unique_call 47} sdv_RtlZeroMemory(0, vslice_dummy_var_2761);
    goto L44;

  L44:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_61;
    assume {:nonnull} Tmp_61 != 0;
    assume Tmp_61 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_83;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    havoc vslice_dummy_var_2762;
    call {:si_unique_call 48} vendorLeaf := ExAllocatePoolWithTag(512, vslice_dummy_var_2762, -329948589);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} vendorLeaf == 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_100;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    havoc Tmp_69;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_99;
    call {:si_unique_call 49} WPP_SF_(Tmp_99, 54, Tmp_69);
    goto L96;

  L96:
    status_2 := -1073741670;
    goto L66;

  anon90_Then:
    goto L96;

  anon113_Then:
    goto L96;

  anon89_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L96;

  anon88_Then:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_86;
    assume {:nonnull} Tmp_86 != 0;
    assume Tmp_86 > 0;
    havoc vslice_dummy_var_2763;
    call {:si_unique_call 50} sdv_RtlZeroMemory(0, vslice_dummy_var_2763);
    goto L83;

  L83:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_93;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_84;
    assume {:nonnull} Tmp_84 != 0;
    assume Tmp_84 > 0;
    havoc vslice_dummy_var_2764;
    call {:si_unique_call 51} modelLeaf := ExAllocatePoolWithTag(512, vslice_dummy_var_2764, -329948589);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} modelLeaf == 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_104;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    havoc Tmp_110;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_101;
    call {:si_unique_call 52} WPP_SF_(Tmp_101, 55, Tmp_110);
    goto L118;

  L118:
    status_2 := -1073741670;
    goto L66;

  anon93_Then:
    goto L118;

  anon112_Then:
    goto L118;

  anon92_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L118;

  anon91_Then:
    assume {:partition} modelLeaf != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_92;
    assume {:nonnull} Tmp_92 != 0;
    assume Tmp_92 > 0;
    havoc vslice_dummy_var_2765;
    call {:si_unique_call 53} sdv_RtlZeroMemory(0, vslice_dummy_var_2765);
    goto L105;

  L105:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_81;
    assume {:nonnull} Tmp_81 != 0;
    assume Tmp_81 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_77;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    call {:si_unique_call 54} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} status_2 < 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_76;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_82;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_98;
    call {:si_unique_call 55} WPP_SF_qD(Tmp_98, 56, Tmp_82, FdoExtension, status_2);
    goto L66;

  anon99_Then:
    goto L66;

  anon111_Then:
    goto L66;

  anon98_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L66;

  anon94_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_106;
    assume {:nonnull} Generation != 0;
    assume Generation > 0;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_62;
    assume {:nonnull} Tmp_62 != 0;
    assume Tmp_62 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_60;
    assume {:nonnull} Tmp_60 != 0;
    assume Tmp_60 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_90;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} Tmp_90 != 0;
    assume Tmp_90 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_68;
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_65;
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_67;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_102;
    assume {:nonnull} Tmp_102 != 0;
    assume Tmp_102 > 0;
    call {:si_unique_call 56} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} status_2 < 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_59;
    assume {:nonnull} Tmp_59 != 0;
    assume Tmp_59 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_89;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_94;
    call {:si_unique_call 57} WPP_SF_qD(Tmp_94, 57, Tmp_89, FdoExtension, status_2);
    goto L66;

  anon97_Then:
    goto L66;

  anon110_Then:
    goto L66;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L66;

  anon95_Then:
    assume {:partition} 0 <= status_2;
    Tmp_58 := status_2;
    goto L1;

  anon109_Then:
    goto L105;

  anon108_Then:
    goto L83;

  anon107_Then:
    goto L44;
}



procedure {:origName "Sbp2BusResetNotification"} Sbp2BusResetNotification(actual_FdoExtension_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2BusResetNotification"} Sbp2BusResetNotification(actual_FdoExtension_1: int)
{
  var {:pointer} Tmp_213: int;
  var {:pointer} busResetItem: int;
  var {:scalar} Tmp_216: int;
  var {:scalar} Tmp_217: int;
  var {:pointer} Tmp_218: int;
  var {:scalar} Tmp_219: int;
  var {:pointer} sdv_43: int;
  var {:pointer} Tmp_220: int;
  var {:pointer} Tmp_221: int;
  var {:scalar} status_5: int;
  var {:pointer} Tmp_222: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} Tmp_225: int;
  var {:scalar} Tmp_226: int;
  var {:pointer} FdoExtension_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;

  anon0:
    call {:si_unique_call 58} vslice_dummy_var_6 := __HAVOC_malloc(4);
    FdoExtension_1 := actual_FdoExtension_1;
    call {:si_unique_call 59} Tmp_221 := __HAVOC_malloc(4);
    call {:si_unique_call 60} Tmp_222 := __HAVOC_malloc(4);
    call {:si_unique_call 61} Tmp_223 := __HAVOC_malloc(4);
    call {:si_unique_call 62} Tmp_224 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_223;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_220;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_226;
    call {:si_unique_call 63} WPP_SF_q(Tmp_226, 16, Tmp_220, FdoExtension_1);
    goto L1;

  L1:
    return;

  anon35_Then:
    goto L1;

  anon44_Then:
    goto L1;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon33_Then:
    call {:si_unique_call 64} status_5 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} status_5 < 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_213;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_217;
    call {:si_unique_call 65} WPP_SF_q(Tmp_217, 19, Tmp_213, FdoExtension_1);
    goto L1;

  anon43_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon36_Then:
    assume {:partition} 0 <= status_5;
    call {:si_unique_call 66} sdv_43 := ExAllocatePoolWithTag(512, 8, -344497581);
    busResetItem := sdv_43;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} busResetItem == 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_221;
    assume {:nonnull} Tmp_221 != 0;
    assume Tmp_221 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_225;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_216;
    call {:si_unique_call 67} WPP_SF_q(Tmp_216, 17, Tmp_225, FdoExtension_1);
    goto L59;

  L59:
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    call {:si_unique_call 68} vslice_dummy_var_7 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(FdoExtension_1), 0);
    goto L1;

  anon41_Then:
    goto L59;

  anon47_Then:
    goto L59;

  anon40_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon45_Then:
    assume {:partition} busResetItem != 0;
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    call {:si_unique_call 69} boogieTmp := IoAllocateWorkItem(0);
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    call {:si_unique_call 70} IoQueueWorkItem(0, li2bplFunctionConstant389, 0, 0);
    goto L1;

  anon37_Then:
    call {:si_unique_call 71} ExFreePoolWithTag(0, -344497581);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_222;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L59;

  anon46_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L59;

  anon39_Then:
    havoc Tmp_218;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_219;
    call {:si_unique_call 72} WPP_SF_q(Tmp_219, 18, Tmp_218, FdoExtension_1);
    goto L59;
}



procedure {:origName "WPP_SF_qDDDDDd"} WPP_SF_qDDDDDd(actual_Logger_3: int, actual_id_3: int, actual_TraceGuid_3: int, actual_s_p_e_c_i_a_l_12: int, actual_s_p_e_c_i_a_l_13: int, actual_s_p_e_c_i_a_l_14: int, actual_s_p_e_c_i_a_l_15: int, actual_s_p_e_c_i_a_l_16: int, actual_s_p_e_c_i_a_l_17: int, actual_s_p_e_c_i_a_l_18: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qDDDDDd"} WPP_SF_qDDDDDd(actual_Logger_3: int, actual_id_3: int, actual_TraceGuid_3: int, actual_s_p_e_c_i_a_l_12: int, actual_s_p_e_c_i_a_l_13: int, actual_s_p_e_c_i_a_l_14: int, actual_s_p_e_c_i_a_l_15: int, actual_s_p_e_c_i_a_l_16: int, actual_s_p_e_c_i_a_l_17: int, actual_s_p_e_c_i_a_l_18: int)
{
  var {:pointer} TraceGuid_3: int;
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 73} vslice_dummy_var_8 := __HAVOC_malloc(4);
    TraceGuid_3 := actual_TraceGuid_3;
    return;
}



procedure {:origName "WPP_SF_Dq"} WPP_SF_Dq(actual_Logger_4: int, actual_id_4: int, actual_TraceGuid_4: int, actual_s_p_e_c_i_a_l_19: int, actual_s_p_e_c_i_a_l_20: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_Dq"} WPP_SF_Dq(actual_Logger_4: int, actual_id_4: int, actual_TraceGuid_4: int, actual_s_p_e_c_i_a_l_19: int, actual_s_p_e_c_i_a_l_20: int)
{
  var {:pointer} TraceGuid_4: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 74} vslice_dummy_var_9 := __HAVOC_malloc(4);
    TraceGuid_4 := actual_TraceGuid_4;
    return;
}



procedure {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_FdoExtension_2: int, actual_Sbp2Req: int) returns (Tmp_233: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_FdoExtension_2: int, actual_Sbp2Req: int) returns (Tmp_233: int)
{
  var {:pointer} Tmp_234: int;
  var {:pointer} Tmp_235: int;
  var {:pointer} Tmp_236: int;
  var {:scalar} Tmp_237: int;
  var {:scalar} Tmp_238: int;
  var {:pointer} Tmp_239: int;
  var {:scalar} Tmp_240: int;
  var {:pointer} Tmp_241: int;
  var {:scalar} Tmp_242: int;
  var {:pointer} Tmp_243: int;
  var {:pointer} Tmp_244: int;
  var {:pointer} Tmp_245: int;
  var {:scalar} sdv_48: int;
  var {:pointer} Tmp_246: int;
  var {:pointer} Tmp_247: int;
  var {:pointer} Tmp_248: int;
  var {:pointer} Tmp_249: int;
  var {:scalar} dependentLength: int;
  var {:pointer} sdv_50: int;
  var {:scalar} Tmp_250: int;
  var {:pointer} Tmp_251: int;
  var {:scalar} Tmp_253: int;
  var {:pointer} Tmp_254: int;
  var {:pointer} Tmp_255: int;
  var {:pointer} Tmp_256: int;
  var {:pointer} Tmp_257: int;
  var {:scalar} sdv_52: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Tmp_259: int;
  var {:pointer} Tmp_260: int;
  var {:scalar} Tmp_261: int;
  var {:scalar} Tmp_262: int;
  var {:pointer} Tmp_263: int;
  var {:scalar} Tmp_264: int;
  var {:scalar} sdv_54: int;
  var {:pointer} Tmp_265: int;
  var {:scalar} Tmp_266: int;
  var {:scalar} Tmp_267: int;
  var {:scalar} Tmp_268: int;
  var {:scalar} tmp: int;
  var {:pointer} Tmp_269: int;
  var {:pointer} Tmp_270: int;
  var {:pointer} Tmp_271: int;
  var {:scalar} sdv_55: int;
  var {:scalar} i_1: int;
  var {:pointer} Tmp_272: int;
  var {:pointer} genPacket: int;
  var {:pointer} Tmp_273: int;
  var {:scalar} Tmp_275: int;
  var {:pointer} getConfigInfo: int;
  var {:scalar} Tmp_276: int;
  var {:scalar} Tmp_277: int;
  var {:pointer} Tmp_278: int;
  var {:pointer} Tmp_279: int;
  var {:scalar} j: int;
  var {:scalar} Tmp_281: int;
  var {:scalar} sdv_56: int;
  var {:pointer} Tmp_282: int;
  var {:pointer} Tmp_283: int;
  var {:scalar} Tmp_284: int;
  var {:scalar} sdv_57: int;
  var {:scalar} unitDirEntries: int;
  var {:pointer} Tmp_286: int;
  var {:pointer} Tmp_287: int;
  var {:pointer} Tmp_289: int;
  var {:dopa} {:scalar} currentGeneration: int;
  var {:scalar} Tmp_290: int;
  var {:pointer} sdv_58: int;
  var {:pointer} Tmp_291: int;
  var {:pointer} Tmp_292: int;
  var {:pointer} vendorLeaf_1: int;
  var {:pointer} Tmp_293: int;
  var {:pointer} Tmp_295: int;
  var {:scalar} sdv_59: int;
  var {:scalar} status_6: int;
  var {:scalar} sdv_60: int;
  var {:pointer} Tmp_298: int;
  var {:scalar} offset: int;
  var {:pointer} modelLeaf_1: int;
  var {:pointer} Tmp_299: int;
  var {:scalar} Tmp_300: int;
  var {:pointer} unitDependentDirectory_1: int;
  var {:scalar} sdv_63: int;
  var {:scalar} sdv_64: int;
  var {:pointer} Tmp_301: int;
  var {:scalar} Tmp_302: int;
  var {:scalar} sdv_66: int;
  var {:pointer} Tmp_303: int;
  var {:scalar} sdv_67: int;
  var {:scalar} Tmp_304: int;
  var {:scalar} cromOffset: int;
  var {:pointer} Tmp_305: int;
  var {:pointer} Tmp_306: int;
  var {:scalar} Tmp_307: int;
  var {:pointer} Tmp_309: int;
  var {:pointer} Tmp_310: int;
  var {:scalar} directoryLength: int;
  var {:pointer} sdv_68: int;
  var {:pointer} Tmp_311: int;
  var {:pointer} Tmp_312: int;
  var {:pointer} Tmp_313: int;
  var {:scalar} modelIdCount: int;
  var {:scalar} Tmp_314: int;
  var {:scalar} dirInfoQuad: int;
  var {:pointer} Tmp_315: int;
  var {:scalar} oldIrql: int;
  var {:scalar} devListSize: int;
  var {:scalar} firstOne: int;
  var {:pointer} Tmp_316: int;
  var {:scalar} sdv_70: int;
  var {:pointer} Tmp_317: int;
  var {:pointer} Tmp_318: int;
  var {:pointer} Tmp_319: int;
  var {:scalar} sdv_71: int;
  var {:pointer} Tmp_320: int;
  var {:scalar} directoryLocation: int;
  var {:pointer} Tmp_321: int;
  var {:scalar} sbp2Device: int;
  var {:pointer} Tmp_322: int;
  var {:pointer} firstDevInfo: int;
  var {:scalar} Tmp_323: int;
  var {:pointer} Tmp_324: int;
  var {:pointer} Tmp_326: int;
  var {:scalar} sdv_75: int;
  var {:pointer} ModelLeaf: int;
  var {:pointer} Tmp_327: int;
  var {:pointer} ModelLeaf_1: int;
  var {:scalar} sdv_76: int;
  var {:scalar} Tmp_329: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} Tmp_331: int;
  var {:pointer} Tmp_332: int;
  var {:scalar} Tmp_333: int;
  var {:scalar} Tmp_334: int;
  var {:scalar} Tmp_335: int;
  var {:scalar} Tmp_336: int;
  var {:pointer} Tmp_337: int;
  var {:pointer} Tmp_338: int;
  var {:scalar} Tmp_339: int;
  var {:pointer} Tmp_340: int;
  var {:pointer} devInfo: int;
  var {:pointer} Tmp_341: int;
  var {:scalar} sdv_79: int;
  var {:scalar} sdv_80: int;
  var {:scalar} Tmp_342: int;
  var {:pointer} buffer: int;
  var {:scalar} Tmp_343: int;
  var {:scalar} retries: int;
  var {:scalar} dependentLocation: int;
  var {:scalar} Tmp_344: int;
  var {:scalar} Tmp_345: int;
  var {:pointer} Tmp_346: int;
  var {:pointer} unitDirectory_1: int;
  var {:pointer} ModelLeaf_2: int;
  var {:pointer} packet_1: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} info: int;
  var {:scalar} Tmp_349: int;
  var {:pointer} Tmp_350: int;
  var {:scalar} Tmp_351: int;
  var {:pointer} FdoExtension_2: int;
  var {:pointer} Sbp2Req: int;
  var boogieTmp: int;
  var vslice_dummy_var_2766: int;
  var vslice_dummy_var_2767: int;
  var vslice_dummy_var_2768: int;
  var vslice_dummy_var_2769: int;
  var vslice_dummy_var_2770: int;
  var vslice_dummy_var_2771: int;
  var vslice_dummy_var_2772: int;

  anon0:
    call {:si_unique_call 75} genPacket := __HAVOC_malloc(4);
    call {:si_unique_call 76} currentGeneration := __HAVOC_malloc(4);
    call {:si_unique_call 77} cromOffset := __HAVOC_malloc(16);
    call {:si_unique_call 78} directoryLocation := __HAVOC_malloc(16);
    call {:si_unique_call 79} ModelLeaf := __HAVOC_malloc(4);
    call {:si_unique_call 80} ModelLeaf_1 := __HAVOC_malloc(4);
    call {:si_unique_call 81} dependentLocation := __HAVOC_malloc(16);
    call {:si_unique_call 82} ModelLeaf_2 := __HAVOC_malloc(4);
    call {:si_unique_call 83} packet_1 := __HAVOC_malloc(4);
    FdoExtension_2 := actual_FdoExtension_2;
    Sbp2Req := actual_Sbp2Req;
    call {:si_unique_call 84} Tmp_239 := __HAVOC_malloc(4);
    call {:si_unique_call 85} Tmp_243 := __HAVOC_malloc(4);
    call {:si_unique_call 86} Tmp_246 := __HAVOC_malloc(4);
    call {:si_unique_call 87} Tmp_249 := __HAVOC_malloc(4);
    call {:si_unique_call 88} Tmp_256 := __HAVOC_malloc(2680);
    call {:si_unique_call 89} Tmp_263 := __HAVOC_malloc(4);
    call {:si_unique_call 90} Tmp_273 := __HAVOC_malloc(4);
    call {:si_unique_call 91} Tmp_287 := __HAVOC_malloc(4);
    call {:si_unique_call 92} Tmp_293 := __HAVOC_malloc(4);
    call {:si_unique_call 93} Tmp_295 := __HAVOC_malloc(2680);
    call {:si_unique_call 94} Tmp_301 := __HAVOC_malloc(4);
    call {:si_unique_call 95} Tmp_306 := __HAVOC_malloc(4);
    call {:si_unique_call 96} Tmp_309 := __HAVOC_malloc(4);
    call {:si_unique_call 97} Tmp_310 := __HAVOC_malloc(4);
    call {:si_unique_call 98} Tmp_312 := __HAVOC_malloc(4);
    call {:si_unique_call 99} Tmp_313 := __HAVOC_malloc(2680);
    call {:si_unique_call 100} Tmp_318 := __HAVOC_malloc(4);
    call {:si_unique_call 101} Tmp_330 := __HAVOC_malloc(4);
    call {:si_unique_call 102} Tmp_331 := __HAVOC_malloc(4);
    call {:si_unique_call 103} Tmp_332 := __HAVOC_malloc(4);
    call {:si_unique_call 104} Tmp_337 := __HAVOC_malloc(2680);
    call {:si_unique_call 105} Tmp_338 := __HAVOC_malloc(4);
    call {:si_unique_call 106} Tmp_346 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc devListSize;
    modelIdCount := 0;
    unitDirEntries := 0;
    sbp2Device := 0;
    firstOne := 0;
    unitDirectory_1 := 0;
    unitDependentDirectory_1 := 0;
    modelLeaf_1 := 0;
    vendorLeaf_1 := 0;
    buffer := 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    Mem_T.P_IRBIRP[packet_1] := 0;
    call {:si_unique_call 107} AllocateIrpAndIrb(FdoExtension_2, packet_1);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_1] != 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 108} status_6 := Sbp2GetConfigPacket(FdoExtension_2, Mem_T.P_IRBIRP[packet_1], currentGeneration);
    goto anon282_Then, anon282_Else;

  anon282_Else:
    assume {:partition} status_6 < 0;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_332;
    assume {:nonnull} Tmp_332 != 0;
    assume Tmp_332 > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc Tmp_348;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_335;
    call {:si_unique_call 109} WPP_SF_Dq(Tmp_335, 31, Tmp_348, status_6, FdoExtension_2);
    goto L136;

  L136:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_1] != 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 110} DeAllocateIrpAndIrb(FdoExtension_2, Mem_T.P_IRBIRP[packet_1]);
    goto L137;

  L137:
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:partition} unitDirectory_1 != 0;
    call {:si_unique_call 111} sdv_ExFreePool(0);
    goto L141;

  L141:
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume {:partition} unitDependentDirectory_1 != 0;
    call {:si_unique_call 112} sdv_ExFreePool(0);
    goto L145;

  L145:
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume {:partition} vendorLeaf_1 != 0;
    call {:si_unique_call 113} sdv_ExFreePool(0);
    goto L149;

  L149:
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume {:partition} modelLeaf_1 != 0;
    call {:si_unique_call 114} sdv_ExFreePool(0);
    goto L153;

  L153:
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:partition} Sbp2Req != 0;
    goto L158;

  L158:
    Tmp_233 := status_6;
    goto L1;

  L1:
    return;

  anon301_Then:
    assume {:partition} Sbp2Req == 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    goto L158;

  anon300_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L153;

  anon299_Then:
    assume {:partition} vendorLeaf_1 == 0;
    goto L149;

  anon298_Then:
    assume {:partition} unitDependentDirectory_1 == 0;
    goto L145;

  anon297_Then:
    assume {:partition} unitDirectory_1 == 0;
    goto L141;

  anon296_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_1] == 0;
    goto L137;

  anon361_Then:
    goto L136;

  anon420_Then:
    goto L136;

  anon360_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L136;

  anon282_Then:
    assume {:partition} 0 <= status_6;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_245;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    getConfigInfo := GetConfigurationInformation_unnamed_tag_72(u__IRB(Tmp_245));
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc vendorLeaf_1;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc modelLeaf_1;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc unitDirectory_1;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    call {:si_unique_call 115} directoryLength := corral_nondet();
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc unitDependentDirectory_1;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    call {:si_unique_call 116} dependentLength := corral_nondet();
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:partition} Sbp2Req != 0;
    goto L67;

  L67:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_337;
    firstDevInfo := Tmp_337;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    i_1 := 1;
    goto L71;

  L71:
    call {:si_unique_call 117} Tmp_238, i_1, Tmp_344 := Sbp2Get1394ConfigInfo_loop_L71(Tmp_238, i_1, directoryLength, Tmp_344, unitDirectory_1, Sbp2Req);
    goto L71_last;

  L71_last:
    goto anon283_Then, anon283_Else;

  anon283_Else:
    assume {:partition} Sbp2Req != 0;
    goto anon284_Then, anon284_Else;

  anon284_Else:
    assume {:partition} directoryLength > i_1;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_344;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:partition} Tmp_344 == 129;
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_238;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    goto anon286_Then, anon286_Else;

  anon286_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  L95:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_330;
    assume {:nonnull} Tmp_330 != 0;
    assume Tmp_330 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_333;
    havoc Tmp_322;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_345;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc vslice_dummy_var_2766;
    call {:si_unique_call 118} WPP_SF_qqDD(Tmp_345, 33, Tmp_322, FdoExtension_2, unitDirectory_1, vslice_dummy_var_2766, Tmp_333);
    goto L101;

  L101:
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 119} Sbp2ParseTextLeaf(FdoExtension_2, unitDirectory_1, cromOffset, Buffer_unnamed_tag_74(RetrieveTextLeaf_unnamed_tag_73(u__SBP2_REQUEST(Sbp2Req))));
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon289_Then, anon289_Else;

  anon289_Else:
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_338;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon291_Then, anon291_Else;

  anon291_Else:
    havoc Tmp_289;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_300;
    call {:si_unique_call 120} WPP_SF_q(Tmp_300, 34, Tmp_289, FdoExtension_2);
    goto L124;

  L124:
    status_6 := -1073741823;
    goto L72;

  L72:
    i_1 := 1;
    goto L132;

  L132:
    call {:si_unique_call 121} Tmp_234, Tmp_235, Tmp_236, Tmp_240, Tmp_241, Tmp_243, Tmp_244, Tmp_247, Tmp_248, Tmp_249, dependentLength, sdv_50, Tmp_250, Tmp_253, Tmp_255, Tmp_256, Tmp_257, Tmp_259, Tmp_260, Tmp_264, Tmp_265, Tmp_266, Tmp_268, tmp, Tmp_270, Tmp_271, i_1, Tmp_272, Tmp_273, Tmp_275, Tmp_276, Tmp_277, Tmp_278, j, Tmp_281, Tmp_282, Tmp_283, Tmp_284, unitDirEntries, Tmp_286, Tmp_287, Tmp_290, sdv_58, Tmp_291, Tmp_292, Tmp_293, status_6, Tmp_298, offset, Tmp_299, unitDependentDirectory_1, Tmp_301, Tmp_302, Tmp_303, Tmp_304, Tmp_305, Tmp_306, Tmp_310, sdv_68, Tmp_311, Tmp_312, Tmp_313, modelIdCount, Tmp_314, dirInfoQuad, Tmp_315, devListSize, firstOne, Tmp_316, Tmp_317, Tmp_318, Tmp_319, Tmp_320, sbp2Device, Tmp_323, Tmp_324, Tmp_326, Tmp_327, Tmp_329, Tmp_334, Tmp_336, Tmp_339, Tmp_340, devInfo, Tmp_342, Tmp_343, retries, Tmp_346, Tmp_347, info, Tmp_349, Tmp_350, Tmp_351 := Sbp2Get1394ConfigInfo_loop_L132(Tmp_234, Tmp_235, Tmp_236, Tmp_240, Tmp_241, Tmp_243, Tmp_244, sdv_48, Tmp_247, Tmp_248, Tmp_249, dependentLength, sdv_50, Tmp_250, Tmp_253, Tmp_255, Tmp_256, Tmp_257, sdv_52, Tmp_259, Tmp_260, Tmp_264, sdv_54, Tmp_265, Tmp_266, Tmp_268, tmp, Tmp_270, Tmp_271, sdv_55, i_1, Tmp_272, genPacket, Tmp_273, Tmp_275, Tmp_276, Tmp_277, Tmp_278, j, Tmp_281, sdv_56, Tmp_282, Tmp_283, Tmp_284, unitDirEntries, Tmp_286, Tmp_287, currentGeneration, Tmp_290, sdv_58, Tmp_291, Tmp_292, vendorLeaf_1, Tmp_293, sdv_59, status_6, sdv_60, Tmp_298, offset, modelLeaf_1, Tmp_299, unitDependentDirectory_1, sdv_63, sdv_64, Tmp_301, Tmp_302, sdv_66, Tmp_303, sdv_67, Tmp_304, cromOffset, Tmp_305, Tmp_306, Tmp_310, directoryLength, sdv_68, Tmp_311, Tmp_312, Tmp_313, modelIdCount, Tmp_314, dirInfoQuad, Tmp_315, devListSize, firstOne, Tmp_316, sdv_70, Tmp_317, Tmp_318, Tmp_319, sdv_71, Tmp_320, directoryLocation, sbp2Device, firstDevInfo, Tmp_323, Tmp_324, Tmp_326, sdv_75, ModelLeaf, Tmp_327, ModelLeaf_1, sdv_76, Tmp_329, Tmp_334, Tmp_336, Tmp_339, Tmp_340, devInfo, sdv_79, sdv_80, Tmp_342, Tmp_343, retries, dependentLocation, Tmp_346, unitDirectory_1, ModelLeaf_2, packet_1, Tmp_347, info, Tmp_349, Tmp_350, Tmp_351, FdoExtension_2, Sbp2Req);
    goto L132_last;

  L132_last:
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume {:partition} Sbp2Req != 0;
    goto L134;

  L134:
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume {:partition} Sbp2Req != 0;
    goto L136;

  anon294_Then:
    assume {:partition} Sbp2Req == 0;
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume {:partition} sbp2Device == 0;
    goto L163;

  L163:
    goto anon303_Then, anon303_Else;

  anon303_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_239;
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    havoc Tmp_341;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_307;
    call {:si_unique_call 122} WPP_SF_q(Tmp_307, 49, Tmp_341, FdoExtension_2);
    goto L164;

  L164:
    status_6 := -1073741621;
    goto L136;

  anon304_Then:
    goto L164;

  anon380_Then:
    goto L164;

  anon303_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L164;

  anon295_Then:
    assume {:partition} sbp2Device != 0;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume {:partition} 2 > unitDirEntries;
    goto L163;

  anon302_Then:
    assume {:partition} unitDirEntries >= 2;
    goto L136;

  anon292_Then:
    assume {:partition} Sbp2Req == 0;
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume {:partition} directoryLength > i_1;
    Tmp_343 := devListSize;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_256;
    devInfo := Tmp_256 + Tmp_343 * 268;
    Tmp_316 := unitDirectory_1;
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    goto L371;

  L371:
    i_1 := i_1 + 1;
    goto L371_dummy;

  L371_dummy:
    assume false;
    return;

  anon362_Then:
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume {:partition} firstOne != 0;
    retries := 3;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    Mem_T.P_IRBIRP[genPacket] := 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    call {:si_unique_call 123} sdv_58 := IoAllocateMdl(0, dependentLength, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_283;
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_350;
    assume {:nonnull} Tmp_350 != 0;
    assume Tmp_350 > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    goto anon330_Then, anon330_Else;

  anon330_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_331;
    assume {:nonnull} Tmp_331 != 0;
    assume Tmp_331 > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    havoc Tmp_279;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_261;
    call {:si_unique_call 124} WPP_SF_q(Tmp_261, 42, Tmp_279, FdoExtension_2);
    goto L136;

  anon331_Then:
    goto L136;

  anon410_Then:
    goto L136;

  anon330_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L136;

  anon393_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_244;
    assume {:nonnull} Tmp_244 != 0;
    assume Tmp_244 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_247;
    assume {:nonnull} Tmp_247 != 0;
    assume Tmp_247 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_315;
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_270;
    assume {:nonnull} Tmp_270 != 0;
    assume Tmp_270 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_235;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_317;
    assume {:nonnull} Tmp_317 != 0;
    assume Tmp_317 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_319;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_234;
    assume {:nonnull} Tmp_234 != 0;
    assume Tmp_234 > 0;
    goto L214;

  L214:
    call {:si_unique_call 125} Tmp_243, Tmp_249, Tmp_255, Tmp_265, Tmp_271, Tmp_286, status_6, Tmp_303, Tmp_320, Tmp_323, Tmp_339, retries := Sbp2Get1394ConfigInfo_loop_L214(Tmp_243, Tmp_249, Tmp_255, Tmp_265, Tmp_271, genPacket, Tmp_286, currentGeneration, status_6, Tmp_303, Tmp_320, Tmp_323, Tmp_339, retries, packet_1, FdoExtension_2);
    goto L214_last;

  L214_last:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_271;
    assume {:nonnull} Tmp_271 != 0;
    assume Tmp_271 > 0;
    assume {:nonnull} currentGeneration != 0;
    assume currentGeneration > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 176} status_6 := Sbp2SendRequest#1(FdoExtension_2, Mem_T.P_IRBIRP[packet_1], 2);
    goto anon306_Then, anon306_Else;

  anon306_Else:
    assume {:partition} status_6 >= 0;
    goto L222;

  L222:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] != 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    call {:si_unique_call 126} DeAllocateIrpAndIrb(FdoExtension_2, Mem_T.P_IRBIRP[genPacket]);
    goto L223;

  L223:
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume {:partition} status_6 >= 0;
    call {:si_unique_call 127} dirInfoQuad := corral_nondet();
    dependentLength := dirInfoQuad * 4;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 128} IoFreeMdl(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_298;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:partition} dependentLength > 256;
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_263;
    assume {:nonnull} Tmp_263 != 0;
    assume Tmp_263 > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    havoc Tmp_269;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_242;
    call {:si_unique_call 129} WPP_SF_qD(Tmp_242, 45, Tmp_269, FdoExtension_2, dependentLength);
    goto L136;

  anon311_Then:
    goto L136;

  anon395_Then:
    goto L136;

  anon310_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L136;

  anon394_Then:
    assume {:partition} 256 >= dependentLength;
    call {:si_unique_call 130} sdv_ExFreePool(0);
    Tmp_334 := dependentLength + 4;
    call {:si_unique_call 131} sdv_50 := ExAllocatePoolWithTag(512, Tmp_334, -464166317);
    unitDependentDirectory_1 := sdv_50;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:partition} unitDependentDirectory_1 != 0;
    Tmp_253 := dependentLength + 4;
    call {:si_unique_call 132} sdv_68 := IoAllocateMdl(0, Tmp_253, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_272;
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_248;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    j := 1;
    goto L273;

  L273:
    call {:si_unique_call 133} Tmp_250, Tmp_259, Tmp_260, Tmp_277, Tmp_278, j, Tmp_281, Tmp_282, unitDirEntries, Tmp_292, status_6, Tmp_305, Tmp_306, Tmp_310, Tmp_311, modelIdCount, Tmp_314, devListSize, Tmp_326 := Sbp2Get1394ConfigInfo_loop_L273(dependentLength, Tmp_250, Tmp_259, Tmp_260, sdv_54, Tmp_277, Tmp_278, j, Tmp_281, Tmp_282, unitDirEntries, Tmp_292, vendorLeaf_1, status_6, sdv_60, offset, unitDependentDirectory_1, sdv_66, cromOffset, Tmp_305, Tmp_306, Tmp_310, Tmp_311, modelIdCount, Tmp_314, devListSize, firstDevInfo, Tmp_326, devInfo, sdv_79, ModelLeaf_2, packet_1, FdoExtension_2);
    goto L273_last;

  L273_last:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_259;
    assume {:nonnull} Tmp_259 != 0;
    assume Tmp_259 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_260;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_278;
    assume {:nonnull} Tmp_278 != 0;
    assume Tmp_278 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_326;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_311;
    assume {:nonnull} Tmp_311 != 0;
    assume Tmp_311 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 175} status_6 := Sbp2SendRequest#1(FdoExtension_2, Mem_T.P_IRBIRP[packet_1], 2);
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume {:partition} status_6 < 0;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_246;
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    havoc Tmp_254;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_237;
    call {:si_unique_call 134} WPP_SF_qD(Tmp_237, 46, Tmp_254, FdoExtension_2, status_6);
    goto L385;

  L385:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 135} IoFreeMdl(0);
    goto L136;

  anon322_Then:
    goto L385;

  anon406_Then:
    goto L385;

  anon321_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L385;

  anon312_Then:
    assume {:partition} 0 <= status_6;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_250;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} Tmp_250 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_310;
    assume {:nonnull} Tmp_310 != 0;
    assume Tmp_310 > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    havoc Tmp_292;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_281;
    call {:si_unique_call 136} WPP_SF_q(Tmp_281, 47, Tmp_292, FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 137} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L311;

  L311:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    goto L316;

  L316:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    goto L318;

  L318:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    goto L320;

  L320:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    goto L322;

  L322:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L286;

  L286:
    Tmp_305 := unitDependentDirectory_1;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    goto L364;

  L364:
    j := j + 1;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:partition} INTDIV(dependentLength, 4) < j;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 138} IoFreeMdl(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_241;
    assume {:nonnull} Tmp_241 != 0;
    assume Tmp_241 > 0;
    goto L371;

  anon403_Then:
    assume {:partition} j <= INTDIV(dependentLength, 4);
    goto anon403_Then_dummy;

  anon403_Then_dummy:
    assume false;
    return;

  anon370_Then:
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_277;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} Tmp_277 != 23;
    goto L364;

  anon404_Then:
    assume {:partition} Tmp_277 == 23;
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 139} Sbp2ParseTextLeaf(FdoExtension_2, unitDependentDirectory_1, cromOffset, ModelLeaf_2);
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_306;
    assume {:nonnull} Tmp_306 != 0;
    assume Tmp_306 > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    havoc Tmp_282;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_314;
    call {:si_unique_call 140} WPP_SF_q(Tmp_314, 48, Tmp_282, FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_2767;
    call {:si_unique_call 141} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_2767, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 142} sdv_ExFreePool(0);
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    goto L344;

  L344:
    modelIdCount := modelIdCount + 1;
    goto L364;

  anon320_Then:
    goto L349;

  anon405_Then:
    goto L349;

  anon319_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L349;

  anon318_Then:
    goto L344;

  anon371_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L364;

  anon402_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L364;

  anon317_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L322;

  anon316_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L320;

  anon315_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L318;

  anon401_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L316;

  anon314_Then:
    goto L300;

  anon400_Then:
    goto L300;

  anon313_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon399_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L311;

  anon398_Then:
    assume {:partition} Tmp_250 != 20;
    goto L286;

  anon397_Then:
    goto L136;

  anon396_Then:
    assume {:partition} unitDependentDirectory_1 == 0;
    goto L136;

  anon309_Then:
    assume {:partition} 0 > status_6;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 143} IoFreeMdl(0);
    goto L136;

  anon308_Then:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] == 0;
    goto L223;

  anon306_Then:
    assume {:partition} 0 > status_6;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    assume {:partition} retries > 1;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_249;
    assume {:nonnull} Tmp_249 != 0;
    assume Tmp_249 > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    havoc Tmp_286;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_323;
    call {:si_unique_call 144} WPP_SF_qD(Tmp_323, 43, Tmp_286, FdoExtension_2, status_6);
    goto L401;

  L401:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] != 0;
    goto L412;

  L412:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[genPacket] != 0;
    assume Mem_T.P_IRBIRP[genPacket] > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_320;
    assume {:nonnull} Tmp_320 != 0;
    assume Tmp_320 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[genPacket] != 0;
    assume Mem_T.P_IRBIRP[genPacket] > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_265;
    assume {:nonnull} Tmp_265 != 0;
    assume Tmp_265 > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    call {:si_unique_call 145} status_6 := Sbp2SendRequest#1(FdoExtension_2, Mem_T.P_IRBIRP[genPacket], 2);
    goto anon327_Then, anon327_Else;

  anon327_Else:
    assume {:partition} status_6 < 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_243;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    havoc Tmp_255;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_339;
    call {:si_unique_call 146} WPP_SF_qD(Tmp_339, 44, Tmp_255, FdoExtension_2, status_6);
    goto L424;

  L424:
    assume {:nonnull} Mem_T.P_IRBIRP[genPacket] != 0;
    assume Mem_T.P_IRBIRP[genPacket] > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_303;
    assume {:nonnull} Tmp_303 != 0;
    assume Tmp_303 > 0;
    assume {:nonnull} currentGeneration != 0;
    assume currentGeneration > 0;
    goto L413;

  L413:
    retries := retries - 1;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:partition} retries == 0;
    goto L222;

  anon408_Then:
    assume {:partition} retries != 0;
    goto anon408_Then_dummy;

  anon408_Then_dummy:
    assume false;
    return;

  anon329_Then:
    goto L424;

  anon409_Then:
    goto L424;

  anon328_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L424;

  anon327_Then:
    assume {:partition} 0 <= status_6;
    goto L424;

  anon326_Then:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] == 0;
    goto L413;

  anon324_Then:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] == 0;
    call {:si_unique_call 147} AllocateIrpAndIrb(FdoExtension_2, genPacket);
    goto L412;

  anon325_Then:
    goto L401;

  anon407_Then:
    goto L401;

  anon323_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L401;

  anon307_Then:
    assume {:partition} 1 >= retries;
    goto L222;

  anon305_Then:
    assume {:partition} firstOne == 0;
    firstOne := 1;
    j := 0;
    goto L445;

  L445:
    call {:si_unique_call 148} Tmp_236, Tmp_268, Tmp_275, Tmp_276, j, unitDirEntries, Tmp_287, Tmp_291, status_6, Tmp_299, Tmp_301, Tmp_302, modelIdCount, devListSize, Tmp_318, Tmp_327, Tmp_329 := Sbp2Get1394ConfigInfo_loop_L445(Tmp_236, sdv_48, dependentLength, Tmp_268, sdv_55, Tmp_275, Tmp_276, j, unitDirEntries, Tmp_287, Tmp_291, vendorLeaf_1, status_6, modelLeaf_1, Tmp_299, unitDependentDirectory_1, Tmp_301, Tmp_302, sdv_67, cromOffset, modelIdCount, devListSize, Tmp_318, firstDevInfo, Tmp_327, ModelLeaf_1, sdv_76, Tmp_329, devInfo, dependentLocation, FdoExtension_2);
    goto L445_last;

  L445_last:
    goto anon332_Then, anon332_Else;

  anon332_Else:
    assume {:partition} dependentLength > j;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_275;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:partition} Tmp_275 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:partition} devListSize > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L459;

  L459:
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_318;
    assume {:nonnull} Tmp_318 != 0;
    assume Tmp_318 > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc Tmp_299;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_276;
    call {:si_unique_call 149} WPP_SF_q(Tmp_276, 40, Tmp_299, FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 150} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L476;

  L476:
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    goto L480;

  L480:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    goto L482;

  L482:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    goto L484;

  L484:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    goto L486;

  L486:
    unitDirEntries := unitDirEntries + 1;
    goto L448;

  L448:
    Tmp_291 := unitDependentDirectory_1;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:nonnull} Tmp_291 != 0;
    assume Tmp_291 > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:nonnull} Tmp_291 != 0;
    assume Tmp_291 > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    goto L542;

  L542:
    j := j + 1;
    goto L542_dummy;

  L542_dummy:
    assume false;
    return;

  anon372_Then:
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_268;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:partition} Tmp_268 != 23;
    goto L542;

  anon416_Then:
    assume {:partition} Tmp_268 == 23;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 151} Sbp2ParseTextLeaf(FdoExtension_2, unitDependentDirectory_1, cromOffset, ModelLeaf_1);
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_2768;
    call {:si_unique_call 152} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_2768, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 153} sdv_ExFreePool(0);
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_287;
    assume {:nonnull} Tmp_287 != 0;
    assume Tmp_287 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc Tmp_327;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_302;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_2769;
    call {:si_unique_call 154} WPP_SF_S(Tmp_302, 41, Tmp_327, vslice_dummy_var_2769);
    goto L512;

  L512:
    modelIdCount := modelIdCount + 1;
    goto L542;

  anon345_Then:
    goto L512;

  anon417_Then:
    goto L512;

  anon344_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L512;

  anon343_Then:
    goto L512;

  anon342_Then:
    goto L512;

  anon373_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L542;

  anon415_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L542;

  anon339_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L486;

  anon338_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L484;

  anon337_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L482;

  anon414_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L480;

  anon336_Then:
    goto L465;

  anon413_Then:
    goto L465;

  anon335_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L465;

  anon334_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L476;

  anon412_Then:
    assume {:partition} 0 >= devListSize;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume {:partition} modelLeaf_1 != 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_301;
    assume {:nonnull} Tmp_301 != 0;
    assume Tmp_301 > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc Tmp_236;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_329;
    call {:si_unique_call 155} WPP_SF_q(Tmp_329, 39, Tmp_236, FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 156} status_6 := Sbp2_ProcessTextualDescriptor(modelLeaf_1, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L459;

  anon341_Then:
    goto L493;

  anon418_Then:
    goto L493;

  anon340_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L493;

  anon333_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L459;

  anon411_Then:
    assume {:partition} Tmp_275 != 20;
    goto L448;

  anon332_Then:
    assume {:partition} j >= dependentLength;
    goto L371;

  anon363_Then:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_290;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:partition} Tmp_290 == 23;
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} devListSize >= modelIdCount;
    Tmp_264 := modelIdCount;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_313;
    info := Tmp_313 + Tmp_264 * 268;
    assume {:nonnull} info != 0;
    assume info > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 157} Sbp2ParseTextLeaf(FdoExtension_2, unitDirectory_1, cromOffset, ModelLeaf);
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} info != 0;
    assume info > 0;
    havoc vslice_dummy_var_2770;
    call {:si_unique_call 158} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_2770, uniModelId__DEVICE_INFORMATION(info));
    call {:si_unique_call 159} sdv_ExFreePool(0);
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_293;
    assume {:nonnull} Tmp_293 != 0;
    assume Tmp_293 > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    havoc Tmp_257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_266;
    assume {:nonnull} info != 0;
    assume info > 0;
    havoc vslice_dummy_var_2771;
    call {:si_unique_call 160} WPP_SF_S(Tmp_266, 38, Tmp_257, vslice_dummy_var_2771);
    goto L562;

  L562:
    modelIdCount := modelIdCount + 1;
    goto L371;

  anon349_Then:
    goto L562;

  anon392_Then:
    goto L562;

  anon348_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L562;

  anon347_Then:
    goto L562;

  anon391_Then:
    goto L562;

  anon346_Then:
    assume {:partition} modelIdCount > devListSize;
    goto L371;

  anon390_Then:
    assume {:partition} Tmp_290 != 23;
    goto L371;

  anon364_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    sbp2Device := 1;
    goto L371;

  anon365_Then:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} sdv_63 != 0;
    Tmp_342 := 1;
    goto L605;

  L605:
    tmp := Tmp_342;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:partition} tmp != 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L371;

  anon389_Then:
    assume {:partition} tmp == 0;
    goto L371;

  anon350_Then:
    assume {:partition} sdv_63 == 0;
    Tmp_342 := 0;
    goto L605;

  anon366_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_312;
    assume {:nonnull} Tmp_312 != 0;
    assume Tmp_312 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    havoc Tmp_340;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_240;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc vslice_dummy_var_2772;
    call {:si_unique_call 161} WPP_SF_qD(Tmp_240, 35, Tmp_340, FdoExtension_2, vslice_dummy_var_2772);
    goto L371;

  anon351_Then:
    goto L371;

  anon388_Then:
    goto L371;

  anon387_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L371;

  anon367_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc Tmp_351;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:partition} 8 > Tmp_351;
    Tmp_284 := 8;
    goto L633;

  L633:
    tmp := Tmp_284;
    tmp := tmp * 4;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} 16 > tmp - 20;
    Tmp_349 := tmp - 20;
    goto L638;

  L638:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    call {:si_unique_call 162} tmp := corral_nondet();
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon386_Then:
    assume {:partition} tmp - 20 >= 16;
    Tmp_349 := 16;
    goto L638;

  anon385_Then:
    assume {:partition} Tmp_351 >= 8;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc Tmp_284;
    goto L633;

  anon368_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon369_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon381_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} devListSize != 0;
    goto L661;

  L661:
    goto anon353_Then, anon353_Else;

  anon353_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_346;
    assume {:nonnull} Tmp_346 != 0;
    assume Tmp_346 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    havoc Tmp_324;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_304;
    call {:si_unique_call 163} WPP_SF_q(Tmp_304, 37, Tmp_324, FdoExtension_2);
    goto L667;

  L667:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 164} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L678;

  L678:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon355_Then:
    goto L667;

  anon383_Then:
    goto L667;

  anon354_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L667;

  anon353_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L678;

  anon382_Then:
    assume {:partition} devListSize == 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    assume {:partition} modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_273;
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc Tmp_347;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_336;
    call {:si_unique_call 165} WPP_SF_q(Tmp_336, 36, Tmp_347, FdoExtension_2);
    goto L693;

  L693:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 166} status_6 := Sbp2_ProcessTextualDescriptor(modelLeaf_1, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L661;

  anon357_Then:
    goto L693;

  anon384_Then:
    goto L693;

  anon356_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L693;

  anon352_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L661;

  anon293_Then:
    assume {:partition} i_1 >= directoryLength;
    goto L134;

  anon291_Then:
    goto L124;

  anon419_Then:
    goto L124;

  anon290_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L124;

  anon289_Then:
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 167} boogieTmp := corral_nondet();
    status_6 := 0;
    goto L72;

  anon288_Then:
    goto L101;

  anon379_Then:
    goto L101;

  anon378_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L101;

  anon286_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_309;
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    goto L95;

  anon377_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    goto L95;

  anon287_Then:
    havoc Tmp_258;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_262;
    call {:si_unique_call 168} WPP_SF_qq(Tmp_262, 32, Tmp_258, FdoExtension_2, Sbp2Req);
    goto L95;

  anon376_Then:
    goto L75;

  L75:
    i_1 := i_1 + 1;
    goto L75_dummy;

  L75_dummy:
    assume false;
    return;

  anon375_Then:
    assume {:partition} Tmp_344 != 129;
    goto L75;

  anon285_Then:
    goto L75;

  anon284_Then:
    assume {:partition} i_1 >= directoryLength;
    goto L72;

  anon283_Then:
    assume {:partition} Sbp2Req == 0;
    goto L72;

  anon374_Then:
    assume {:partition} Sbp2Req == 0;
    call {:si_unique_call 169} Tmp_251 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    call {:si_unique_call 170} sdv_KeAcquireSpinLock(0, Tmp_251);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    havoc oldIrql;
    i_1 := 0;
    goto L705;

  L705:
    call {:si_unique_call 171} Tmp_267, i_1, Tmp_295, Tmp_321, devInfo, buffer := Sbp2Get1394ConfigInfo_loop_L705(Tmp_267, i_1, Tmp_295, Tmp_321, devInfo, buffer, FdoExtension_2);
    goto L705_last;

  L705_last:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    Tmp_267 := i_1;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_295;
    devInfo := Tmp_295 + Tmp_267 * 268;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    Tmp_321 := uniModelId__DEVICE_INFORMATION(devInfo);
    assume {:nonnull} Tmp_321 != 0;
    assume Tmp_321 > 0;
    call {:si_unique_call 172} buffer := _InlineInterlockedExchangePointer(Buffer__STRING(Tmp_321), 0);
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:partition} buffer != 0;
    call {:si_unique_call 173} sdv_ExFreePool(0);
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L715;

  L715:
    i_1 := i_1 + 1;
    goto L715_dummy;

  L715_dummy:
    assume false;
    return;

  anon359_Then:
    assume {:partition} buffer == 0;
    goto L715;

  anon358_Then:
    call {:si_unique_call 174} sdv_KeReleaseSpinLock(0, oldIrql);
    devListSize := 0;
    goto L67;

  anon281_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_1] == 0;
    Tmp_233 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2BusResetNotificationEx"} Sbp2BusResetNotificationEx(actual_BusResetData: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2BusResetNotificationEx"} Sbp2BusResetNotificationEx(actual_BusResetData: int)
{
  var {:pointer} Tmp_352: int;
  var {:pointer} Tmp_354: int;
  var {:scalar} Tmp_355: int;
  var {:pointer} busResetItem_1: int;
  var {:pointer} Tmp_356: int;
  var {:pointer} Tmp_357: int;
  var {:pointer} Tmp_358: int;
  var {:scalar} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} sdv_84: int;
  var {:scalar} Tmp_361: int;
  var {:pointer} fdoExtension: int;
  var {:pointer} Tmp_362: int;
  var {:scalar} status_7: int;
  var {:pointer} Tmp_364: int;
  var {:scalar} Tmp_365: int;
  var {:pointer} BusResetData: int;
  var boogieTmp: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 177} vslice_dummy_var_10 := __HAVOC_malloc(4);
    BusResetData := actual_BusResetData;
    call {:si_unique_call 178} Tmp_354 := __HAVOC_malloc(4);
    call {:si_unique_call 179} Tmp_356 := __HAVOC_malloc(4);
    call {:si_unique_call 180} Tmp_360 := __HAVOC_malloc(4);
    call {:si_unique_call 181} Tmp_362 := __HAVOC_malloc(4);
    assume {:nonnull} BusResetData != 0;
    assume BusResetData > 0;
    havoc fdoExtension;
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_362;
    assume {:nonnull} Tmp_362 != 0;
    assume Tmp_362 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_364;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_361;
    call {:si_unique_call 182} WPP_SF_q(Tmp_361, 12, Tmp_364, fdoExtension);
    goto L1;

  L1:
    return;

  anon34_Then:
    goto L1;

  anon44_Then:
    goto L1;

  anon33_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon43_Then:
    call {:si_unique_call 183} status_7 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_7 < 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_356;
    assume {:nonnull} Tmp_356 != 0;
    assume Tmp_356 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_357;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_365;
    call {:si_unique_call 184} WPP_SF_q(Tmp_365, 15, Tmp_357, fdoExtension);
    goto L1;

  anon42_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon35_Then:
    assume {:partition} 0 <= status_7;
    call {:si_unique_call 185} sdv_84 := ExAllocatePoolWithTag(512, 8, -344497581);
    busResetItem_1 := sdv_84;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} busResetItem_1 == 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_360;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    havoc Tmp_358;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_359;
    call {:si_unique_call 186} WPP_SF_q(Tmp_359, 13, Tmp_358, fdoExtension);
    goto L61;

  L61:
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    call {:si_unique_call 187} vslice_dummy_var_11 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension), 0);
    goto L1;

  anon40_Then:
    goto L61;

  anon47_Then:
    goto L61;

  anon39_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L61;

  anon45_Then:
    assume {:partition} busResetItem_1 != 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    call {:si_unique_call 188} boogieTmp := IoAllocateWorkItem(0);
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} BusResetData != 0;
    assume BusResetData > 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    call {:si_unique_call 189} IoQueueWorkItem(0, li2bplFunctionConstant389, 0, 0);
    goto L1;

  anon36_Then:
    call {:si_unique_call 190} ExFreePoolWithTag(0, -344497581);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L61;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_354;
    assume {:nonnull} Tmp_354 != 0;
    assume Tmp_354 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L61;

  anon46_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto L61;

  anon38_Then:
    havoc Tmp_352;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_355;
    call {:si_unique_call 191} WPP_SF_q(Tmp_355, 14, Tmp_352, fdoExtension);
    goto L61;
}



procedure {:origName "WPP_SF_qDDDD"} WPP_SF_qDDDD(actual_Logger_5: int, actual_id_5: int, actual_TraceGuid_5: int, actual_s_p_e_c_i_a_l_21: int, actual_s_p_e_c_i_a_l_22: int, actual_s_p_e_c_i_a_l_23: int, actual_s_p_e_c_i_a_l_24: int, actual_s_p_e_c_i_a_l_25: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qDDDD"} WPP_SF_qDDDD(actual_Logger_5: int, actual_id_5: int, actual_TraceGuid_5: int, actual_s_p_e_c_i_a_l_21: int, actual_s_p_e_c_i_a_l_22: int, actual_s_p_e_c_i_a_l_23: int, actual_s_p_e_c_i_a_l_24: int, actual_s_p_e_c_i_a_l_25: int)
{
  var {:pointer} TraceGuid_5: int;
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 192} vslice_dummy_var_12 := __HAVOC_malloc(4);
    TraceGuid_5 := actual_TraceGuid_5;
    return;
}



procedure {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_FdoExtension_3: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_FdoExtension_3: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int)
{
  var {:scalar} i_2: int;
  var {:pointer} Tmp_503: int;
  var {:pointer} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_508: int;
  var {:scalar} waitValue_1: int;
  var {:pointer} pdoExtension_4: int;
  var {:pointer} Tmp_509: int;
  var {:scalar} Tmp_511: int;
  var {:pointer} Tmp_513: int;
  var {:pointer} leaf: int;
  var {:pointer} Tmp_515: int;
  var {:pointer} Tmp_516: int;
  var {:pointer} tModelLeaf: int;
  var {:pointer} Tmp_517: int;
  var {:pointer} Tmp_518: int;
  var {:pointer} Tmp_519: int;
  var {:scalar} Tmp_522: int;
  var {:pointer} Tmp_524: int;
  var {:pointer} sdv_146: int;
  var {:pointer} Tmp_525: int;
  var {:pointer} Tmp_526: int;
  var {:scalar} currentGeneration_1: int;
  var {:scalar} Tmp_527: int;
  var {:scalar} retries_1: int;
  var {:pointer} Tmp_528: int;
  var {:scalar} temp_1: int;
  var {:pointer} Tmp_529: int;
  var {:pointer} Tmp_530: int;
  var {:pointer} tModelLeafMdl: int;
  var {:pointer} Tmp_531: int;
  var {:pointer} Tmp_532: int;
  var {:pointer} Tmp_533: int;
  var {:scalar} leafLength: int;
  var {:pointer} Tmp_534: int;
  var {:scalar} Tmp_535: int;
  var {:pointer} Tmp_536: int;
  var {:pointer} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Tmp_539: int;
  var {:scalar} status_11: int;
  var {:pointer} packet_2: int;
  var {:pointer} Tmp_540: int;
  var {:scalar} Tmp_541: int;
  var {:scalar} event: int;
  var {:pointer} Tmp_544: int;
  var {:pointer} FdoExtension_3: int;
  var {:pointer} ModelLeafLocation: int;
  var {:pointer} ModelLeaf_3: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;

  anon0:
    call {:si_unique_call 193} waitValue_1 := __HAVOC_malloc(20);
    call {:si_unique_call 194} vslice_dummy_var_13 := __HAVOC_malloc(4);
    call {:si_unique_call 195} packet_2 := __HAVOC_malloc(4);
    call {:si_unique_call 196} event := __HAVOC_malloc(156);
    FdoExtension_3 := actual_FdoExtension_3;
    ModelLeafLocation := actual_ModelLeafLocation;
    ModelLeaf_3 := actual_ModelLeaf_3;
    call {:si_unique_call 197} Tmp_529 := __HAVOC_malloc(4);
    call {:si_unique_call 198} Tmp_532 := __HAVOC_malloc(4);
    call {:si_unique_call 199} Tmp_538 := __HAVOC_malloc(4);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    Mem_T.P_IRBIRP[packet_2] := 0;
    leaf := 0;
    tModelLeaf := 0;
    tModelLeafMdl := 0;
    pdoExtension_4 := FdoExtension_3;
    call {:si_unique_call 200} AllocateIrpAndIrb(pdoExtension_4, packet_2);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_2] != 0;
    call {:si_unique_call 201} tModelLeaf := ExAllocatePoolWithTag(512, 32, 846226003);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} tModelLeaf != 0;
    call {:si_unique_call 202} tModelLeafMdl := IoAllocateMdl(0, 32, 0, 0, 0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} tModelLeafMdl != 0;
    retries_1 := 3;
    goto L44;

  L44:
    call {:si_unique_call 203} Tmp_504, Tmp_509, Tmp_513, Tmp_518, Tmp_519, Tmp_522, Tmp_525, Tmp_526, currentGeneration_1, retries_1, Tmp_528, Tmp_530, Tmp_531, Tmp_532, Tmp_533, Tmp_539, status_11, Tmp_540, Tmp_544, vslice_dummy_var_14 := Sbp2ParseTextLeaf_loop_L44(Tmp_504, waitValue_1, pdoExtension_4, Tmp_509, Tmp_513, Tmp_518, Tmp_519, Tmp_522, Tmp_525, Tmp_526, currentGeneration_1, retries_1, Tmp_528, Tmp_530, tModelLeafMdl, Tmp_531, Tmp_532, Tmp_533, Tmp_539, status_11, packet_2, Tmp_540, event, Tmp_544, ModelLeafLocation, vslice_dummy_var_14);
    goto L44_last;

  L44_last:
    assume {:CounterLoop 3} {:Counter "retries_1"} true;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} retries_1 != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_530;
    assume {:nonnull} Tmp_530 != 0;
    assume Tmp_530 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_531;
    assume {:nonnull} Tmp_531 != 0;
    assume Tmp_531 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 204} status_11 := Sbp2SendRequest#1(pdoExtension_4, Mem_T.P_IRBIRP[packet_2], 2);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_11 < 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_532;
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_513;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_522;
    call {:si_unique_call 205} WPP_SF_qD(Tmp_522, 58, Tmp_513, pdoExtension_4, status_11);
    goto L56;

  L56:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_528;
    assume {:nonnull} Tmp_528 != 0;
    assume Tmp_528 > 0;
    havoc currentGeneration_1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_509;
    assume {:nonnull} Tmp_509 != 0;
    assume Tmp_509 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_526;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_533;
    assume {:nonnull} Tmp_533 != 0;
    assume Tmp_533 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_525;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_544;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_544 != 0;
    assume Tmp_544 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_539;
    assume {:nonnull} Tmp_539 != 0;
    assume Tmp_539 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_504;
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_519;
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_518;
    assume {:nonnull} Tmp_518 != 0;
    assume Tmp_518 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_540;
    assume {:nonnull} Tmp_540 != 0;
    assume Tmp_540 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 206} status_11 := Sbp2SendRequest#1(pdoExtension_4, Mem_T.P_IRBIRP[packet_2], 2);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_11 < 0;
    call {:si_unique_call 207} KeInitializeEvent(event, 0, 0);
    assume {:nonnull} waitValue_1 != 0;
    assume waitValue_1 > 0;
    call {:si_unique_call 208} vslice_dummy_var_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_1);
    retries_1 := retries_1 - 1;
    goto anon49_Else_dummy;

  anon49_Else_dummy:
    assume false;
    return;

  anon49_Then:
    assume {:partition} 0 <= status_11;
    goto L45;

  L45:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} status_11 < 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_529;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_517;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_527;
    call {:si_unique_call 209} WPP_SF_qD(Tmp_527, 59, Tmp_517, pdoExtension_4, status_11);
    goto L177;

  L177:
    call {:si_unique_call 210} IoFreeMdl(0);
    call {:si_unique_call 211} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 212} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  L1:
    return;

  anon57_Then:
    goto L177;

  anon62_Then:
    goto L177;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L177;

  anon47_Then:
    assume {:partition} 0 <= status_11;
    call {:si_unique_call 213} leafLength := corral_nondet();
    Tmp_506 := tModelLeaf;
    assume {:nonnull} Tmp_506 != 0;
    assume Tmp_506 > 0;
    havoc temp_1;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} leafLength + 4 > 32;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 214} IoFreeMdl(0);
    call {:si_unique_call 215} sdv_ExFreePool(0);
    Tmp_535 := leafLength + 4;
    call {:si_unique_call 216} tModelLeaf := ExAllocatePoolWithTag(512, Tmp_535, 846226003);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} tModelLeaf != 0;
    Tmp_511 := leafLength + 4;
    call {:si_unique_call 217} sdv_146 := IoAllocateMdl(0, Tmp_511, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_524;
    assume {:nonnull} Tmp_524 != 0;
    assume Tmp_524 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_515;
    assume {:nonnull} Tmp_515 != 0;
    assume Tmp_515 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto L102;

  L102:
    i_2 := 1;
    Tmp_537 := tModelLeaf;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    goto L136;

  L136:
    call {:si_unique_call 218} i_2, Tmp_503, Tmp_505, Tmp_508, Tmp_534, Tmp_536, status_11 := Sbp2ParseTextLeaf_loop_L136(i_2, Tmp_503, Tmp_505, Tmp_508, pdoExtension_4, leafLength, Tmp_534, Tmp_536, status_11, packet_2, ModelLeafLocation);
    goto L136_last;

  L136_last:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_505;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_505 != 0;
    assume Tmp_505 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_503;
    assume {:nonnull} Tmp_503 != 0;
    assume Tmp_503 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_534;
    assume {:nonnull} Tmp_534 != 0;
    assume Tmp_534 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_508;
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_536;
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 231} status_11 := Sbp2SendRequest#1(pdoExtension_4, Mem_T.P_IRBIRP[packet_2], 2);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} status_11 < 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_538;
    assume {:nonnull} Tmp_538 != 0;
    assume Tmp_538 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_516;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_541;
    call {:si_unique_call 219} WPP_SF_qD(Tmp_541, 60, Tmp_516, pdoExtension_4, status_11);
    goto L159;

  L159:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 220} IoFreeMdl(0);
    call {:si_unique_call 221} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 222} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon55_Then:
    goto L159;

  anon61_Then:
    goto L159;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L159;

  anon53_Then:
    assume {:partition} 0 <= status_11;
    i_2 := i_2 + 1;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} INTDIV(leafLength, 4) < i_2;
    leaf := tModelLeaf;
    assume {:nonnull} leaf != 0;
    assume leaf > 0;
    assume {:nonnull} ModelLeaf_3 != 0;
    assume ModelLeaf_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 223} IoFreeMdl(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 224} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon60_Then:
    assume {:partition} i_2 <= INTDIV(leafLength, 4);
    goto anon60_Then_dummy;

  anon60_Then_dummy:
    assume false;
    return;

  anon59_Then:
    call {:si_unique_call 225} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 226} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon52_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 227} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon58_Then:
    assume {:partition} 32 >= leafLength + 4;
    goto L102;

  anon51_Then:
    goto L56;

  anon63_Then:
    goto L56;

  anon50_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon48_Then:
    assume {:partition} 0 <= status_11;
    goto L56;

  anon46_Then:
    assume {:partition} retries_1 == 0;
    goto L45;

  anon45_Then:
    assume {:partition} tModelLeafMdl == 0;
    call {:si_unique_call 228} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 229} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon44_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 230} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon43_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_2] == 0;
    goto L1;
}



procedure {:origName "Sbp2DeferPendingRequest"} Sbp2DeferPendingRequest(actual_PdoExtension_6: int, actual_Irp: int);
  modifies alloc, sdv_irql_current, queuedWithoutMarking, locked, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2DeferPendingRequest"} Sbp2DeferPendingRequest(actual_PdoExtension_6: int, actual_Irp: int)
{
  var {:pointer} Tmp_565: int;
  var {:scalar} Tmp_566: int;
  var {:scalar} Tmp_567: int;
  var {:pointer} Tmp_568: int;
  var {:scalar} sdv_158: int;
  var {:scalar} orbLock_1: int;
  var {:pointer} Tmp_569: int;
  var {:scalar} Tmp_570: int;
  var {:pointer} Tmp_571: int;
  var {:pointer} sdv_160: int;
  var {:pointer} Tmp_572: int;
  var {:pointer} Tmp_574: int;
  var {:pointer} Tmp_575: int;
  var {:scalar} Tmp_576: int;
  var {:pointer} sdv_161: int;
  var {:scalar} Tmp_577: int;
  var {:pointer} sdv_162: int;
  var {:pointer} sdv_163: int;
  var {:pointer} oldIrp: int;
  var {:pointer} Tmp_578: int;
  var {:pointer} Tmp_579: int;
  var {:pointer} Tmp_581: int;
  var {:pointer} tail: int;
  var {:pointer} Tmp_582: int;
  var {:pointer} Tmp_583: int;
  var {:pointer} Tmp_584: int;
  var {:pointer} PdoExtension_6: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_2773: int;
  var vslice_dummy_var_2774: int;
  var vslice_dummy_var_2775: int;

  anon0:
    call {:si_unique_call 232} orbLock_1 := __HAVOC_malloc(12);
    call {:si_unique_call 233} vslice_dummy_var_15 := __HAVOC_malloc(4);
    PdoExtension_6 := actual_PdoExtension_6;
    Irp := actual_Irp;
    call {:si_unique_call 234} Tmp_569 := __HAVOC_malloc(4);
    call {:si_unique_call 235} Tmp_571 := __HAVOC_malloc(4);
    call {:si_unique_call 236} Tmp_579 := __HAVOC_malloc(64);
    call {:si_unique_call 237} Tmp_583 := __HAVOC_malloc(4);
    call {:si_unique_call 238} Tmp_584 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 239} AcquireOrbListLock(PdoExtension_6, orbLock_1, 0);
    call {:si_unique_call 240} sdv_158 := sdv_IsListEmpty(0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_158 == 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc vslice_dummy_var_2773;
    call {:si_unique_call 241} sdv_161 := sdv_containing_record(vslice_dummy_var_2773, 0);
    tail := sdv_161;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_575;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_574;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    havoc vslice_dummy_var_2774;
    call {:si_unique_call 242} sdv_162 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), vslice_dummy_var_2774);
    oldIrp := sdv_162;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_569;
    assume {:nonnull} Tmp_569 != 0;
    assume Tmp_569 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_568;
    assume {:nonnull} Tmp_568 != 0;
    assume Tmp_568 > 0;
    havoc Tmp_579;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    havoc Tmp_566;
    havoc Tmp_582;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_567;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_578;
    assume {:nonnull} Tmp_578 != 0;
    assume Tmp_578 > 0;
    havoc vslice_dummy_var_2775;
    call {:si_unique_call 243} WPP_SF_qqqD(Tmp_567, 27, Tmp_582, PdoExtension_6, vslice_dummy_var_2775, oldIrp, Tmp_566);
    goto L52;

  L52:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    call {:si_unique_call 244} vslice_dummy_var_17 := KeCancelTimer(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_571;
    assume {:nonnull} Tmp_571 != 0;
    assume Tmp_571 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_565;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_570;
    call {:si_unique_call 245} WPP_SF_qq(Tmp_570, 28, Tmp_565, PdoExtension_6, tail);
    goto L69;

  L69:
    call {:si_unique_call 246} vslice_dummy_var_16 := FreeAsyncRequestContext(PdoExtension_6, tail);
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 247} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(PdoExtension_6));
    goto L18;

  L18:
    call {:si_unique_call 248} ReleaseOrbListLock(PdoExtension_6, orbLock_1, 0);
    goto L1;

  L1:
    return;

  anon38_Then:
    goto L69;

  anon46_Then:
    goto L69;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L69;

  anon36_Then:
    goto L52;

  anon45_Then:
    goto L52;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L52;

  anon43_Then:
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 249} sdv_163 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), 0);
    oldIrp := sdv_163;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_583;
    assume {:nonnull} Tmp_583 != 0;
    assume Tmp_583 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_581;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_576;
    call {:si_unique_call 250} WPP_SF_qq(Tmp_576, 29, Tmp_581, PdoExtension_6, oldIrp);
    goto L18;

  anon39_Then:
    goto L18;

  anon48_Then:
    goto L18;

  anon47_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon33_Then:
    assume {:partition} sdv_158 != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Irp != 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 251} sdv_160 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), Irp);
    oldIrp := sdv_160;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_584;
    assume {:nonnull} Tmp_584 != 0;
    assume Tmp_584 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_572;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_577;
    call {:si_unique_call 252} WPP_SF_qqq(Tmp_577, 30, Tmp_572, PdoExtension_6, Irp, oldIrp);
    goto L18;

  anon35_Then:
    goto L18;

  anon42_Then:
    goto L18;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon34_Then:
    assume {:partition} Irp == 0;
    goto L18;

  anon40_Then:
    goto L1;
}



procedure {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited(actual_PdoExtension_8: int, actual_StatusFifo: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited(actual_PdoExtension_8: int, actual_StatusFifo: int)
{
  var {:pointer} Tmp_610: int;
  var {:pointer} Tmp_611: int;
  var {:scalar} sdv_184: int;
  var {:pointer} Tmp_612: int;
  var {:pointer} senseBuffer_1: int;
  var {:pointer} Tmp_613: int;
  var {:scalar} Tmp_614: int;
  var {:scalar} Tmp_615: int;
  var {:pointer} Tmp_616: int;
  var {:scalar} status_15: int;
  var {:scalar} state: int;
  var {:pointer} PdoExtension_8: int;
  var {:pointer} StatusFifo: int;
  var boogieTmp: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_2776: int;

  anon0:
    call {:si_unique_call 253} senseBuffer_1 := __HAVOC_malloc(4);
    call {:si_unique_call 254} vslice_dummy_var_18 := __HAVOC_malloc(4);
    call {:si_unique_call 255} state := __HAVOC_malloc(8);
    PdoExtension_8 := actual_PdoExtension_8;
    StatusFifo := actual_StatusFifo;
    call {:si_unique_call 256} Tmp_610 := __HAVOC_malloc(4);
    call {:si_unique_call 257} Tmp_611 := __HAVOC_malloc(4);
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    call {:si_unique_call 258} boogieTmp := __HAVOC_malloc(72);
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_612;
    assume {:nonnull} Tmp_612 != 0;
    assume Tmp_612 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 259} sdv_184 := ConvertSbp2SenseDataToScsi(StatusFifo, senseBuffer_1, 18);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_184 != 0;
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L1;

  L1:
    return;

  anon31_Then:
    assume {:nonnull} state != 0;
    assume state > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_610;
    assume {:nonnull} Tmp_610 != 0;
    assume Tmp_610 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_616;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_614;
    assume {:nonnull} state != 0;
    assume state > 0;
    havoc vslice_dummy_var_2776;
    call {:si_unique_call 260} WPP_SF_D(Tmp_614, 117, Tmp_616, vslice_dummy_var_2776);
    goto L22;

  L22:
    call {:si_unique_call 261} status_15 := PoRequestPowerIrp(0, 2, state, 0, 0, 0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_15 < 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_611;
    assume {:nonnull} Tmp_611 != 0;
    assume Tmp_611 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_613;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_615;
    call {:si_unique_call 262} WPP_SF_D(Tmp_615, 118, Tmp_613, status_15);
    goto L1;

  anon35_Then:
    goto L1;

  anon39_Then:
    goto L1;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon33_Then:
    assume {:partition} 0 <= status_15;
    goto L1;

  anon32_Then:
    goto L22;

  anon38_Then:
    goto L22;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L22;

  anon30_Then:
    goto L1;

  anon29_Then:
    goto L1;

  anon28_Then:
    assume {:partition} sdv_184 == 0;
    goto L1;

  anon36_Then:
    goto L1;

  anon27_Then:
    goto L1;
}



procedure {:origName "WPP_SF_qdSDd"} WPP_SF_qdSDd(actual_Logger_6: int, actual_id_6: int, actual_TraceGuid_6: int, actual_s_p_e_c_i_a_l_26: int, actual_s_p_e_c_i_a_l_27: int, actual_s_p_e_c_i_a_l_28: int, actual_s_p_e_c_i_a_l_29: int, actual_s_p_e_c_i_a_l_30: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qdSDd"} WPP_SF_qdSDd(actual_Logger_6: int, actual_id_6: int, actual_TraceGuid_6: int, actual_s_p_e_c_i_a_l_26: int, actual_s_p_e_c_i_a_l_27: int, actual_s_p_e_c_i_a_l_28: int, actual_s_p_e_c_i_a_l_29: int, actual_s_p_e_c_i_a_l_30: int)
{
  var {:scalar} sdv_186: int;
  var {:pointer} Tmp_622: int;
  var {:scalar} Tmp_623: int;
  var {:pointer} TraceGuid_6: int;
  var {:pointer} s_p_e_c_i_a_l_28: int;
  var vslice_dummy_var_19: int;

  anon0:
    call {:si_unique_call 263} vslice_dummy_var_19 := __HAVOC_malloc(4);
    TraceGuid_6 := actual_TraceGuid_6;
    s_p_e_c_i_a_l_28 := actual_s_p_e_c_i_a_l_28;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_28 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_28 != 0;
    assume s_p_e_c_i_a_l_28 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_623 := (sdv_186 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_28 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_28 != 0;
    assume s_p_e_c_i_a_l_28 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_622 := s_p_e_c_i_a_l_28;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_622 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_28 == 0;
    goto L18;

  anon10_Then:
    Tmp_623 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_28 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qqqD"} WPP_SF_qqqD(actual_Logger_7: int, actual_id_7: int, actual_TraceGuid_7: int, actual_s_p_e_c_i_a_l_31: int, actual_s_p_e_c_i_a_l_32: int, actual_s_p_e_c_i_a_l_33: int, actual_s_p_e_c_i_a_l_34: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qqqD"} WPP_SF_qqqD(actual_Logger_7: int, actual_id_7: int, actual_TraceGuid_7: int, actual_s_p_e_c_i_a_l_31: int, actual_s_p_e_c_i_a_l_32: int, actual_s_p_e_c_i_a_l_33: int, actual_s_p_e_c_i_a_l_34: int)
{
  var {:pointer} TraceGuid_7: int;
  var vslice_dummy_var_20: int;

  anon0:
    call {:si_unique_call 264} vslice_dummy_var_20 := __HAVOC_malloc(4);
    TraceGuid_7 := actual_TraceGuid_7;
    return;
}



procedure {:origName "WPP_SF_qdDD"} WPP_SF_qdDD(actual_Logger_8: int, actual_id_8: int, actual_TraceGuid_8: int, actual_s_p_e_c_i_a_l_35: int, actual_s_p_e_c_i_a_l_36: int, actual_s_p_e_c_i_a_l_37: int, actual_s_p_e_c_i_a_l_38: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qdDD"} WPP_SF_qdDD(actual_Logger_8: int, actual_id_8: int, actual_TraceGuid_8: int, actual_s_p_e_c_i_a_l_35: int, actual_s_p_e_c_i_a_l_36: int, actual_s_p_e_c_i_a_l_37: int, actual_s_p_e_c_i_a_l_38: int)
{
  var {:pointer} TraceGuid_8: int;
  var vslice_dummy_var_21: int;

  anon0:
    call {:si_unique_call 265} vslice_dummy_var_21 := __HAVOC_malloc(4);
    TraceGuid_8 := actual_TraceGuid_8;
    return;
}



procedure {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_713: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_713 == -1073741670 || Tmp_713 == -1073741823 || Tmp_713 == 259 || Tmp_713 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_713: int)
{
  var {:pointer} blockDescriptor: int;
  var {:pointer} Tmp_715: int;
  var {:scalar} Tmp_717: int;
  var {:pointer} Tmp_718: int;
  var {:pointer} systemAddress: int;
  var {:pointer} Tmp_719: int;
  var {:pointer} Tmp_720: int;
  var {:scalar} pageCode: int;
  var {:pointer} cdb: int;
  var {:pointer} Tmp_721: int;
  var {:pointer} Tmp_722: int;
  var {:pointer} Tmp_723: int;
  var {:pointer} Tmp_724: int;
  var {:scalar} Tmp_726: int;
  var {:scalar} availLength: int;
  var {:pointer} Tmp_729: int;
  var {:pointer} Tmp_730: int;
  var {:pointer} Tmp_732: int;
  var {:pointer} Tmp_733: int;
  var {:pointer} Tmp_734: int;
  var {:pointer} Tmp_735: int;
  var {:pointer} Tmp_736: int;
  var {:pointer} Tmp_737: int;
  var {:pointer} sdv_212: int;
  var {:pointer} Tmp_738: int;
  var {:pointer} Tmp_740: int;
  var {:pointer} cdbRbc: int;
  var {:pointer} Tmp_743: int;
  var {:scalar} Tmp_744: int;
  var {:pointer} Tmp_745: int;
  var {:pointer} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} Tmp_749: int;
  var {:pointer} rbcParam: int;
  var {:pointer} Tmp_750: int;
  var {:pointer} Tmp_751: int;
  var {:pointer} sdv_213: int;
  var {:pointer} Tmp_752: int;
  var {:pointer} Tmp_753: int;
  var {:pointer} Tmp_754: int;
  var {:scalar} modeHeaderLength: int;
  var {:pointer} Tmp_756: int;
  var {:pointer} Tmp_758: int;
  var {:pointer} Tmp_759: int;
  var {:pointer} Tmp_760: int;
  var {:pointer} Tmp_761: int;
  var {:pointer} sdv_216: int;
  var {:pointer} Tmp_762: int;
  var {:pointer} Tmp_763: int;
  var {:pointer} Tmp_764: int;
  var {:pointer} Tmp_765: int;
  var {:pointer} Tmp_766: int;
  var {:pointer} modeHeader: int;
  var {:pointer} Tmp_767: int;
  var {:pointer} Tmp_768: int;
  var {:pointer} Tmp_769: int;
  var {:pointer} Tmp_771: int;
  var {:pointer} Tmp_772: int;
  var {:pointer} Tmp_773: int;
  var {:pointer} Tmp_774: int;
  var {:pointer} cachePage: int;
  var {:scalar} status_19: int;
  var {:pointer} Tmp_776: int;
  var {:scalar} wcd: int;
  var {:pointer} Tmp_777: int;
  var {:pointer} Tmp_778: int;
  var {:scalar} Tmp_779: int;
  var {:pointer} Srb: int;
  var {:pointer} OriginalSrb: int;
  var {:pointer} RbcHeaderAndPage: int;
  var {:scalar} OutgoingRequest: int;
  var {:scalar} RemovableMedia: int;
  var {:scalar} SetCacheHack: int;
  var boogieTmp: int;

  anon0:
    Srb := actual_Srb;
    OriginalSrb := actual_OriginalSrb;
    RbcHeaderAndPage := actual_RbcHeaderAndPage;
    OutgoingRequest := actual_OutgoingRequest;
    RemovableMedia := actual_RemovableMedia;
    SetCacheHack := actual_SetCacheHack;
    call {:si_unique_call 266} Tmp_718 := __HAVOC_malloc(8);
    call {:si_unique_call 267} Tmp_719 := __HAVOC_malloc(64);
    call {:si_unique_call 268} Tmp_720 := __HAVOC_malloc(12);
    call {:si_unique_call 269} Tmp_732 := __HAVOC_malloc(20);
    call {:si_unique_call 270} Tmp_735 := __HAVOC_malloc(12);
    call {:si_unique_call 271} Tmp_736 := __HAVOC_malloc(12);
    call {:si_unique_call 272} Tmp_751 := __HAVOC_malloc(12);
    call {:si_unique_call 273} Tmp_754 := __HAVOC_malloc(64);
    call {:si_unique_call 274} Tmp_758 := __HAVOC_malloc(8);
    call {:si_unique_call 275} Tmp_760 := __HAVOC_malloc(8);
    call {:si_unique_call 276} Tmp_761 := __HAVOC_malloc(12);
    call {:si_unique_call 277} Tmp_765 := __HAVOC_malloc(12);
    call {:si_unique_call 278} Tmp_766 := __HAVOC_malloc(12);
    call {:si_unique_call 279} Tmp_768 := __HAVOC_malloc(64);
    call {:si_unique_call 280} Tmp_769 := __HAVOC_malloc(8);
    call {:si_unique_call 281} Tmp_773 := __HAVOC_malloc(64);
    call {:si_unique_call 282} Tmp_776 := __HAVOC_malloc(20);
    call {:si_unique_call 283} Tmp_778 := __HAVOC_malloc(12);
    modeHeader := 0;
    blockDescriptor := 0;
    status_19 := 259;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} OutgoingRequest != 0;
    modeHeaderLength := 12;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdbRbc := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdb := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L28;

  L28:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L22;

  L22:
    Tmp_713 := status_19;
    goto L1;

  L1:
    return;

  anon86_Then:
    goto L22;

  anon85_Then:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L28;

  anon104_Then:
    goto L22;

  anon105_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} RemovableMedia != 0;
    goto L34;

  L34:
    call {:si_unique_call 284} sdv_212 := ExAllocatePoolWithTag(512, 64, 846226035);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_740;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_729;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    call {:si_unique_call 285} sdv_213 := IoAllocateMdl(0, 17, 0, 0, 0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_724;
    assume {:nonnull} Tmp_724 != 0;
    assume Tmp_724 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_771;
    assume {:nonnull} Tmp_771 != 0;
    assume Tmp_771 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_738;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_767;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_767 != 0;
    assume Tmp_767 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto L42;

  L42:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_779;
    goto L62;

  L62:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_753;
    assume {:nonnull} Tmp_753 != 0;
    assume Tmp_753 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_722;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    havoc Tmp_744;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    call {:si_unique_call 286} sdv_RtlCopyMemory(0, 0, Tmp_744);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L22;

  anon89_Then:
    Tmp_779 := 16;
    goto L62;

  anon115_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_756;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_730;
    assume {:nonnull} Tmp_730 != 0;
    assume Tmp_730 > 0;
    assume {:nonnull} Tmp_756 != 0;
    assume Tmp_756 > 0;
    call {:si_unique_call 287} sdv_ExFreePool(0);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    Tmp_713 := -1073741670;
    goto L1;

  anon114_Then:
    goto L42;

  anon113_Then:
    Tmp_713 := -1073741670;
    goto L1;

  anon87_Then:
    assume {:partition} RemovableMedia == 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 288} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 289} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_778;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_718;
    assume {:nonnull} Tmp_718 != 0;
    assume Tmp_718 > 0;
    assume {:nonnull} Tmp_778 != 0;
    assume Tmp_778 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_720;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_760;
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    assume {:nonnull} Tmp_760 != 0;
    assume Tmp_760 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_735;
    assume {:nonnull} Tmp_735 != 0;
    assume Tmp_735 > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_732;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_751;
    call {:si_unique_call 290} sdv_RtlCopyMemory(0, 0, 3);
    status_19 := 0;
    goto L22;

  anon88_Then:
    goto L34;

  anon84_Then:
    goto L22;

  anon108_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc cachePage;
    cachePage := cachePage + modeHeaderLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    havoc pageCode;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} pageCode == 8;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    wcd := 0;
    goto L262;

  L262:
    goto L96;

  L96:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    call {:si_unique_call 291} sdv_RtlCopyMemory(0, 0, 17);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} SetCacheHack != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    havoc Tmp_726;
    goto L108;

  L108:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L109;

  L109:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} pageCode == 8;
    Tmp_772 := modeHeader;
    assume {:nonnull} Tmp_772 != 0;
    assume Tmp_772 > 0;
    goto L22;

  anon112_Then:
    assume {:partition} pageCode != 8;
    goto L22;

  anon91_Then:
    Tmp_726 := 17;
    goto L108;

  anon111_Then:
    assume {:partition} SetCacheHack == 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L109;

  anon90_Then:
    wcd := 1;
    goto L262;

  anon110_Then:
    assume {:partition} pageCode != 8;
    goto L96;

  anon109_Then:
    goto L22;

  anon107_Then:
    assume {:partition} OutgoingRequest == 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_733;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    havoc Tmp_719;
    cdb := Tmp_719;
    goto L116;

  L116:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_723;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_759;
    assume {:nonnull} Tmp_723 != 0;
    assume Tmp_723 > 0;
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_764;
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    call {:si_unique_call 292} IoFreeMdl(0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_715;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_749;
    assume {:nonnull} Tmp_715 != 0;
    assume Tmp_715 > 0;
    assume {:nonnull} Tmp_749 != 0;
    assume Tmp_749 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_752;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L121;

  L121:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_748;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_745;
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    havoc Tmp_717;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_743;
    assume {:nonnull} Tmp_743 != 0;
    assume Tmp_743 > 0;
    havoc Tmp_773;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_768;
    call {:si_unique_call 293} sdv_RtlCopyMemory(0, 0, Tmp_717);
    goto L119;

  L119:
    Tmp_713 := -1073741823;
    goto L1;

  anon116_Then:
    goto L121;

  anon94_Then:
    goto L121;

  anon93_Then:
    goto L119;

  anon92_Then:
    modeHeaderLength := 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    systemAddress := 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_737;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_721;
    assume {:nonnull} Tmp_721 != 0;
    assume Tmp_721 > 0;
    assume {:nonnull} Tmp_737 != 0;
    assume Tmp_737 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_734;
    assume {:nonnull} Tmp_734 != 0;
    assume Tmp_734 > 0;
    call {:si_unique_call 294} IoFreeMdl(0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_762;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_774;
    assume {:nonnull} Tmp_762 != 0;
    assume Tmp_762 > 0;
    assume {:nonnull} Tmp_774 != 0;
    assume Tmp_774 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_747;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_750;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    call {:si_unique_call 295} systemAddress := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    goto L157;

  L157:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    havoc availLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L161;

  L161:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} availLength >= 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L164;

  L164:
    availLength := availLength - 12;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} modeHeader != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    cachePage := blockDescriptor;
    cachePage := cachePage + 8;
    goto L170;

  L170:
    call {:si_unique_call 296} sdv_RtlZeroMemory(0, 12);
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L380;

  L380:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L22;

  anon123_Then:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L380;

  anon122_Then:
    assume {:partition} modeHeader == 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} systemAddress != 0;
    cachePage := systemAddress;
    goto L170;

  anon101_Then:
    assume {:partition} systemAddress == 0;
    Tmp_713 := -1073741670;
    goto L1;

  anon99_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L164;

  anon100_Then:
    goto L22;

  anon98_Then:
    assume {:partition} 12 > availLength;
    goto L22;

  anon121_Then:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} availLength >= modeHeaderLength;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} systemAddress != 0;
    modeHeader := systemAddress;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 297} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 298} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_765;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_769;
    assume {:nonnull} Tmp_765 != 0;
    assume Tmp_765 > 0;
    assume {:nonnull} Tmp_769 != 0;
    assume Tmp_769 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_736;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_758;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    assume {:nonnull} Tmp_758 != 0;
    assume Tmp_758 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_766;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_776;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_761;
    call {:si_unique_call 299} sdv_RtlCopyMemory(0, 0, 3);
    availLength := availLength - modeHeaderLength;
    goto L161;

  anon102_Then:
    assume {:partition} systemAddress == 0;
    Tmp_713 := -1073741670;
    goto L1;

  anon97_Then:
    assume {:partition} modeHeaderLength > availLength;
    goto L161;

  anon120_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_763;
    assume {:nonnull} Tmp_763 != 0;
    assume Tmp_763 > 0;
    call {:si_unique_call 300} systemAddress := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} systemAddress != 0;
    call {:si_unique_call 301} sdv_RtlCopyMemory(0, 0, 17);
    goto L157;

  anon103_Then:
    assume {:partition} systemAddress == 0;
    goto L157;

  anon119_Then:
    Tmp_713 := -1073741823;
    goto L1;

  anon96_Then:
    goto L22;

  anon106_Then:
    goto L22;

  anon117_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_777;
    assume {:nonnull} Tmp_777 != 0;
    assume Tmp_777 > 0;
    call {:si_unique_call 302} sdv_216 := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    rbcParam := sdv_216;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} rbcParam != 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    assume {:nonnull} rbcParam != 0;
    assume rbcParam > 0;
    goto L22;

  anon118_Then:
    assume {:partition} rbcParam == 0;
    goto L22;

  anon95_Then:
    goto L22;

  anon83_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_754;
    cdb := Tmp_754;
    goto L116;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_22: int;

  anon0:
    call {:si_unique_call 303} vslice_dummy_var_22 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Sbp2SqmStart"} Sbp2SqmStart() returns (Tmp_782: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2SqmStart"} Sbp2SqmStart() returns (Tmp_782: int)
{

  anon0:
    call {:si_unique_call 304} Tmp_782 := corral_nondet();
    return;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_23: int;

  anon0:
    call {:si_unique_call 305} vslice_dummy_var_23 := __HAVOC_malloc(4);
    assume DATAID_SBP_LUN_INFORMATION == 6855;
    return;
}



procedure {:origName "Sbp2SqmEnd"} Sbp2SqmEnd();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2SqmEnd"} Sbp2SqmEnd()
{
  var vslice_dummy_var_24: int;

  anon0:
    call {:si_unique_call 306} vslice_dummy_var_24 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Sbp2SqmInsertLunInformation"} Sbp2SqmInsertLunInformation(actual_DeviceInfo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2SqmInsertLunInformation"} Sbp2SqmInsertLunInformation(actual_DeviceInfo: int)
{
  var {:pointer} sqmStreamEntry: int;
  var {:pointer} DeviceInfo: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;

  anon0:
    call {:si_unique_call 307} vslice_dummy_var_25 := __HAVOC_malloc(4);
    DeviceInfo := actual_DeviceInfo;
    call {:si_unique_call 308} sqmStreamEntry := __HAVOC_malloc(108);
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    call {:si_unique_call 309} vslice_dummy_var_26 := corral_nondet();
    return;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_27: int;

  anon0:
    call {:si_unique_call 310} vslice_dummy_var_27 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int);
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int)
{
  var vslice_dummy_var_28: int;

  anon0:
    call {:si_unique_call 311} vslice_dummy_var_28 := __HAVOC_malloc(4);
    sdv_irql_current := 2;
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_29: int;

  anon0:
    call {:si_unique_call 312} vslice_dummy_var_29 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_813: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_813: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    call {:si_unique_call 313} SLIC_sdv_containing_record_entry(strConst__li2bpl2);
    record := Address;
    Tmp_813 := record;
    return;
}



procedure {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int)
{
  var vslice_dummy_var_30: int;

  anon0:
    call {:si_unique_call 314} vslice_dummy_var_30 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int);
  modifies alloc, sdv_irql_current, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} locked == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_31: int;

  anon0:
    call {:si_unique_call 315} vslice_dummy_var_31 := __HAVOC_malloc(4);
    p := actual_p;
    call {:si_unique_call 316} SLIC_sdv_KeAcquireSpinLock_entry(0);
    sdv_irql_current := 2;
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_819: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_819 == 0 || Tmp_819 == -1073741808 || Tmp_819 == -1073741824 || Tmp_819 == -1073741771 || Tmp_819 == -1073741670 || Tmp_819 == -1073741823 || Tmp_819 == 5 || Tmp_819 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_819: int)
{
  var {:scalar} status_20: int;
  var {:pointer} p1: int;
  var {:pointer} p2: int;

  anon0:
    p1 := actual_p1;
    p2 := actual_p2;
    status_20 := 0;
    call {:si_unique_call 317} sdv_stub_add_begin();
    call {:si_unique_call 318} status_20 := Sbp2AddDevice(p1, p2);
    call {:si_unique_call 319} sdv_stub_add_end();
    Tmp_819 := status_20;
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_821: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_821 == 1 || Tmp_821 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_821: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 320} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_821 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_821 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_823: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_823: int)
{
  var {:scalar} x: int;
  var {:pointer} sdv_220: int;

  anon0:
    call {:si_unique_call 321} sdv_220 := __HAVOC_malloc(1);
    x := sdv_220;
    Tmp_823 := x;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int);
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int)
{
  var vslice_dummy_var_32: int;

  anon0:
    call {:si_unique_call 322} vslice_dummy_var_32 := __HAVOC_malloc(4);
    havoc sdv_irql_current;
    return;
}



procedure {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_827: int);
  free ensures {:va_keep} Tmp_827 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_827: int)
{

  anon0:
    Tmp_827 := 0;
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_829: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_829: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_829 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_829 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_829 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_831: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_831: int)
{
  var {:pointer} sdv_222: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_831 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 323} sdv_222 := __HAVOC_malloc(1);
    Tmp_831 := sdv_222;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_1: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_33: int;

  anon0:
    call {:si_unique_call 324} vslice_dummy_var_33 := __HAVOC_malloc(4);
    Dpc_1 := actual_Dpc_1;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_1 != 0;
    assume Dpc_1 > 0;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag: int)
{
  var vslice_dummy_var_34: int;

  anon0:
    call {:si_unique_call 325} vslice_dummy_var_34 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject: int) returns (Tmp_837: int);
  free ensures {:va_keep} Tmp_837 == -1073741824 || Tmp_837 == -1073741771 || Tmp_837 == -1073741670 || Tmp_837 == -1073741823 || Tmp_837 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject: int) returns (Tmp_837: int)
{
  var {:pointer} DeviceObject: int;

  anon0:
    DeviceObject := actual_DeviceObject;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_837 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_837 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_837 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_837 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    goto L21;

  L21:
    Tmp_837 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    goto L21;
}



procedure {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int)
{
  var vslice_dummy_var_35: int;

  anon0:
    call {:si_unique_call 326} vslice_dummy_var_35 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_36: int;

  anon0:
    call {:si_unique_call 327} vslice_dummy_var_36 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int)
{
  var vslice_dummy_var_37: int;

  anon0:
    call {:si_unique_call 328} vslice_dummy_var_37 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag_1: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag_1: int, actual_Depth: int)
{
  var vslice_dummy_var_38: int;

  anon0:
    call {:si_unique_call 329} vslice_dummy_var_38 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int)
{
  var {:pointer} r: int;
  var {:pointer} pirp_2: int;
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 330} vslice_dummy_var_39 := __HAVOC_malloc(4);
    pirp_2 := actual_pirp_2;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int)
{
  var vslice_dummy_var_40: int;

  anon0:
    call {:si_unique_call 331} vslice_dummy_var_40 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_851: int);
  free ensures {:va_keep} Tmp_851 == 0 || Tmp_851 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_851: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_851 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_851 := -1073741823;
    goto L1;
}



procedure {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int)
{
  var vslice_dummy_var_41: int;

  anon0:
    call {:si_unique_call 332} vslice_dummy_var_41 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int)
{
  var {:pointer} pirp_4: int;
  var vslice_dummy_var_42: int;

  anon0:
    call {:si_unique_call 333} vslice_dummy_var_42 := __HAVOC_malloc(4);
    pirp_4 := actual_pirp_4;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(pirp_4))] := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(pirp_4))] := -1073741637;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_857: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_857: int)
{
  var {:pointer} sdv_229: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_857 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 334} sdv_229 := __HAVOC_malloc(1);
    Tmp_857 := sdv_229;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, SLAM_guard_S_0, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PWPP_PROJECT_CONTROL_BLOCK, sdv_irql_current, stack_location, yogi_error, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued, markedPending;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} u_1: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_47: int;

  anon0:
    call {:si_unique_call 335} u_1 := __HAVOC_malloc(12);
    call {:si_unique_call 336} vslice_dummy_var_43 := __HAVOC_malloc(4);
    SLAM_guard_S_0 := sdv_irp;
    assume SLAM_guard_S_0 != 0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    assume {:nonnull} KdDebuggerEnabled != 0;
    assume KdDebuggerEnabled > 0;
    assume {:nonnull} KdDebuggerNotPresent != 0;
    assume KdDebuggerNotPresent > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 337} sdv_RunUnload(sdv_driver_object);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    goto L1;

  anon17_Then:
    call {:si_unique_call 338} sdv_stub_driver_init();
    call {:si_unique_call 339} vslice_dummy_var_45 := sdv_RunStartDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    call {:si_unique_call 340} vslice_dummy_var_44 := sdv_RunAddDevice(sdv_driver_object, sdv_p_devobj_pdo);
    goto L1;

  anon19_Then:
    call {:si_unique_call 341} vslice_dummy_var_47 := DriverEntry(sdv_driver_object, u_1);
    goto L1;

  anon15_Then:
    call {:si_unique_call 342} sdv_stub_driver_init();
    call {:si_unique_call 343} vslice_dummy_var_46 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_861: int);
  free ensures {:va_keep} Tmp_861 == 0 || Tmp_861 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_861: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_861 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_861 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_863: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_863: int)
{
  var {:pointer} sdv_237: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 344} sdv_237 := __HAVOC_malloc(1);
    Tmp_863 := sdv_237;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_863 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_865: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_865: int)
{
  var {:pointer} sdv_239: int;
  var {:pointer} p_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 345} sdv_239 := __HAVOC_malloc(1);
    p_1 := sdv_239;
    Tmp_865 := p_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_865 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_867: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_867: int)
{
  var {:pointer} x_2: int;
  var {:pointer} sdv_240: int;

  anon0:
    call {:si_unique_call 346} sdv_240 := __HAVOC_malloc(1);
    x_2 := sdv_240;
    Tmp_867 := x_2;
    return;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_869: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_869 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_869: int)
{
  var {:scalar} status_22: int;
  var {:pointer} Irp_1: int;

  anon0:
    Irp_1 := actual_Irp_1;
    status_22 := 259;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_1))] := 259;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 259;
    goto L19;

  L19:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L21;

  L21:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  L25:
    Tmp_869 := status_22;
    return;

  anon33_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L25;

  anon32_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L19;

  anon40_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_1))] := -1073741823;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741823;
    goto L44;

  L44:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L46;

  L46:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L25;

  anon39_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L44;

  anon41_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_1))] := -1073741536;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741536;
    goto L28;

  L28:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L28;

  anon31_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_1))] := 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 0;
    goto L36;

  L36:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L38;

  L38:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L36;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_2: int, actual_Type_1: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_2: int, actual_Type_1: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_1: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 347} State := __HAVOC_malloc(8);
    call {:si_unique_call 348} r_1 := __HAVOC_malloc(8);
    call {:si_unique_call 349} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_2: int);
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_2: int)
{
  var {:scalar} new: int;
  var {:pointer} p_2: int;
  var vslice_dummy_var_48: int;

  anon0:
    call {:si_unique_call 350} vslice_dummy_var_48 := __HAVOC_malloc(4);
    new := actual_new;
    p_2 := actual_p_2;
    sdv_irql_current := new;
    assume {:nonnull} p_2 != 0;
    assume p_2 > 0;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_874: int);
  free ensures {:va_keep} Tmp_874 == 1 || Tmp_874 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_874: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_874 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_874 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_49: int;

  anon0:
    call {:si_unique_call 351} vslice_dummy_var_49 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_1: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_1: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_5: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_1: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 352} vslice_dummy_var_50 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    CompletionRoutine := actual_CompletionRoutine;
    Context_1 := actual_Context_1;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 353} irpSp := sdv_IoGetNextIrpStackLocation(pirp_5);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    return;
}



procedure {:origName "_sdv_init9"} {:osmodel} _sdv_init9();
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init9"} {:osmodel} _sdv_init9()
{
  var vslice_dummy_var_51: int;

  anon0:
    call {:si_unique_call 354} vslice_dummy_var_51 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    sdv_irql_current := 0;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume p_sdv_fx_dev_object == sdv_fx_dev_object;
    assume sdv_isr_routine == li2bplFunctionConstant799;
    assume sdv_ke_dpc == li2bplFunctionConstant801;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant804;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int);
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_52: int;

  anon0:
    call {:si_unique_call 355} vslice_dummy_var_52 := __HAVOC_malloc(4);
    sdv_irql_current := 1;
    return;
}



procedure {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin()
{
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 356} vslice_dummy_var_53 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_886: int);
  free ensures {:va_keep} Tmp_886 == 1 || Tmp_886 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_886: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_886 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_886 := 0;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int)
{
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 357} vslice_dummy_var_54 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_890: int);
  free ensures {:va_keep} Tmp_890 == 258 || Tmp_890 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_890: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_890 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_890 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_890 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_3: int)
{
  var vslice_dummy_var_55: int;

  anon0:
    call {:si_unique_call 358} vslice_dummy_var_55 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_894: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_894: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_894 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_898: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_898: int)
{
  var {:pointer} pirp_6: int;

  anon0:
    pirp_6 := actual_pirp_6;
    assume {:nonnull} pirp_6 != 0;
    assume pirp_6 > 0;
    havoc Tmp_898;
    return;
}



procedure {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_3: int, actual_n: int, actual_a: int, actual_r_2: int, actual_s_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_3: int, actual_n: int, actual_a: int, actual_r_2: int, actual_s_1: int)
{
  var vslice_dummy_var_56: int;

  anon0:
    call {:si_unique_call 359} vslice_dummy_var_56 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_902: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_902: int)
{

  anon0:
    Tmp_902 := sdv_irql_current;
    return;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_4: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_2: int, actual_Irp_3: int) returns (Tmp_904: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_904 == -1073741584 || Tmp_904 == 259 || Tmp_904 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_4: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_2: int, actual_Irp_3: int) returns (Tmp_904: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} structPtr888PowerState: int;

  anon0:
    call {:si_unique_call 360} PowerState := __HAVOC_malloc(8);
    MinorFunction := actual_MinorFunction;
    structPtr888PowerState := actual_structPtr888PowerState;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_power_irp))] := -1073741584;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_904 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_power_irp))] := 259;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_904 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_power_irp))] := -1073741670;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_904 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_906: int, dup_assertVar: bool);
  modifies alloc, sdv_irql_current, Mem_T.PWPP_PROJECT_CONTROL_BLOCK, SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} queued == 1 || queued == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} stack_location == 1 || stack_location == 0;
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_906: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_907: int;
  var {:scalar} Tmp_908: int;
  var boogieTmp: int;
  var WPP_GLOBAL_Control__Loc: int;
  var EventTraceConfigGuid__Loc: int;
  var BUS1394_CLASS_GUID__Loc: int;
  var WmiScsiAddressGuid__Loc: int;
  var GUID_DEVINTERFACE_STORAGEPORT__Loc: int;
  var GUID_DEVINTERFACE_FLOPPY__Loc: int;
  var GUID_DEVICEDUMP_STORAGE_DEVICE__Loc: int;
  var GUID_DEVINTERFACE_WRITEONCEDISK__Loc: int;
  var WPP_TRACE_CONTROL_NULL_GUID__Loc: int;
  var GUID_DEVINTERFACE_TAPE__Loc: int;
  var GUID_DEVINTERFACE_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_CDCHANGER__Loc: int;
  var GUID_DEVINTERFACE_MEDIUMCHANGER__Loc: int;
  var ScsiRawInterfaceGuid__Loc: int;
  var GUID_DEVINTERFACE_VMLUN__Loc: int;
  var DefaultTraceSecurityGuid__Loc: int;
  var GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc: int;
  var GUID_DEVINTERFACE_PARTITION__Loc: int;
  var GUID_DEVINTERFACE_CDROM__Loc: int;
  var GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_DISK__Loc: int;
  var SystemTraceControlGuid__Loc: int;
  var EventTraceGuid__Loc: int;
  var GUID_DEVINTERFACE_SES__Loc: int;
  var WPP_ThisDir_CTLGUID_wppCtlGuid__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_fx_dev_object__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var SLAM_guard_S_0_init__Loc: int;
  var KeTickCount__Loc: int;
  var vslice_dummy_var_542: int;
  var vslice_dummy_var_2777: int;
  var vslice_dummy_var_2778: int;
  var vslice_dummy_var_2779: int;
  var vslice_dummy_var_2780: int;
  var vslice_dummy_var_2781: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 361} WPP_GLOBAL_Control__Loc := __HAVOC_malloc_or_null(4);
    assume WPP_GLOBAL_Control__Loc == WPP_GLOBAL_Control;
    assume WPP_GLOBAL_Control != 0;
    call {:si_unique_call 362} EventTraceConfigGuid__Loc := __HAVOC_malloc_or_null(16);
    assume EventTraceConfigGuid__Loc == EventTraceConfigGuid;
    assume EventTraceConfigGuid != 0;
    call {:si_unique_call 363} BUS1394_CLASS_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume BUS1394_CLASS_GUID__Loc == BUS1394_CLASS_GUID;
    assume BUS1394_CLASS_GUID != 0;
    call {:si_unique_call 364} WmiScsiAddressGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WmiScsiAddressGuid__Loc == WmiScsiAddressGuid;
    assume WmiScsiAddressGuid != 0;
    call {:si_unique_call 365} GUID_DEVINTERFACE_STORAGEPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_STORAGEPORT__Loc == GUID_DEVINTERFACE_STORAGEPORT;
    assume GUID_DEVINTERFACE_STORAGEPORT != 0;
    call {:si_unique_call 366} GUID_DEVINTERFACE_FLOPPY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_FLOPPY__Loc == GUID_DEVINTERFACE_FLOPPY;
    assume GUID_DEVINTERFACE_FLOPPY != 0;
    call {:si_unique_call 367} GUID_DEVICEDUMP_STORAGE_DEVICE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICEDUMP_STORAGE_DEVICE__Loc == GUID_DEVICEDUMP_STORAGE_DEVICE;
    assume GUID_DEVICEDUMP_STORAGE_DEVICE != 0;
    call {:si_unique_call 368} GUID_DEVINTERFACE_WRITEONCEDISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_WRITEONCEDISK__Loc == GUID_DEVINTERFACE_WRITEONCEDISK;
    assume GUID_DEVINTERFACE_WRITEONCEDISK != 0;
    call {:si_unique_call 369} WPP_TRACE_CONTROL_NULL_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WPP_TRACE_CONTROL_NULL_GUID__Loc == WPP_TRACE_CONTROL_NULL_GUID;
    assume WPP_TRACE_CONTROL_NULL_GUID != 0;
    call {:si_unique_call 370} GUID_DEVINTERFACE_TAPE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_TAPE__Loc == GUID_DEVINTERFACE_TAPE;
    assume GUID_DEVINTERFACE_TAPE != 0;
    call {:si_unique_call 371} GUID_DEVINTERFACE_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_VOLUME__Loc == GUID_DEVINTERFACE_VOLUME;
    assume GUID_DEVINTERFACE_VOLUME != 0;
    call {:si_unique_call 372} GUID_DEVINTERFACE_CDCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDCHANGER__Loc == GUID_DEVINTERFACE_CDCHANGER;
    assume GUID_DEVINTERFACE_CDCHANGER != 0;
    call {:si_unique_call 373} GUID_DEVINTERFACE_MEDIUMCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_MEDIUMCHANGER__Loc == GUID_DEVINTERFACE_MEDIUMCHANGER;
    assume GUID_DEVINTERFACE_MEDIUMCHANGER != 0;
    call {:si_unique_call 374} ScsiRawInterfaceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume ScsiRawInterfaceGuid__Loc == ScsiRawInterfaceGuid;
    assume ScsiRawInterfaceGuid != 0;
    call {:si_unique_call 375} GUID_DEVINTERFACE_VMLUN__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_VMLUN__Loc == GUID_DEVINTERFACE_VMLUN;
    assume GUID_DEVINTERFACE_VMLUN != 0;
    call {:si_unique_call 376} DefaultTraceSecurityGuid__Loc := __HAVOC_malloc_or_null(16);
    assume DefaultTraceSecurityGuid__Loc == DefaultTraceSecurityGuid;
    assume DefaultTraceSecurityGuid != 0;
    call {:si_unique_call 377} GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc == GUID_DEVICEDUMP_DRIVER_STORAGE_PORT;
    assume GUID_DEVICEDUMP_DRIVER_STORAGE_PORT != 0;
    call {:si_unique_call 378} GUID_DEVINTERFACE_PARTITION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_PARTITION__Loc == GUID_DEVINTERFACE_PARTITION;
    assume GUID_DEVINTERFACE_PARTITION != 0;
    call {:si_unique_call 379} GUID_DEVINTERFACE_CDROM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDROM__Loc == GUID_DEVINTERFACE_CDROM;
    assume GUID_DEVINTERFACE_CDROM != 0;
    call {:si_unique_call 380} GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc == GUID_DEVINTERFACE_HIDDEN_VOLUME;
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME != 0;
    call {:si_unique_call 381} GUID_DEVINTERFACE_DISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_DISK__Loc == GUID_DEVINTERFACE_DISK;
    assume GUID_DEVINTERFACE_DISK != 0;
    call {:si_unique_call 382} SystemTraceControlGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SystemTraceControlGuid__Loc == SystemTraceControlGuid;
    assume SystemTraceControlGuid != 0;
    call {:si_unique_call 383} EventTraceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume EventTraceGuid__Loc == EventTraceGuid;
    assume EventTraceGuid != 0;
    call {:si_unique_call 384} GUID_DEVINTERFACE_SES__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_SES__Loc == GUID_DEVINTERFACE_SES;
    assume GUID_DEVINTERFACE_SES != 0;
    call {:si_unique_call 385} WPP_ThisDir_CTLGUID_wppCtlGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WPP_ThisDir_CTLGUID_wppCtlGuid__Loc == WPP_ThisDir_CTLGUID_wppCtlGuid;
    assume WPP_ThisDir_CTLGUID_wppCtlGuid != 0;
    call {:si_unique_call 386} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 387} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 388} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 389} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 390} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 391} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 392} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 393} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 394} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 395} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 396} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 397} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 398} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 399} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 400} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 401} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 402} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 403} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 404} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(44);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 405} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 406} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 407} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 408} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 409} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 410} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 411} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 412} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 413} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 414} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 415} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 416} sdv_fx_dev_object__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_fx_dev_object__Loc == sdv_fx_dev_object;
    assume sdv_fx_dev_object != 0;
    call {:si_unique_call 417} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 418} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 419} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 420} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 421} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 422} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 423} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 424} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 425} SLAM_guard_S_0_init__Loc := __HAVOC_malloc_or_null(240);
    assume SLAM_guard_S_0_init__Loc == SLAM_guard_S_0_init;
    assume SLAM_guard_S_0_init != 0;
    call {:si_unique_call 426} KeTickCount__Loc := __HAVOC_malloc_or_null(12);
    assume KeTickCount__Loc == KeTickCount;
    assume KeTickCount != 0;
    call {:si_unique_call 427} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 428} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 429} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 430} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 431} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerNotPresent == boogieTmp;
    call {:si_unique_call 432} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerEnabled == boogieTmp;
    call {:si_unique_call 433} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 434} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 435} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 436} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 437} boogieTmp := __HAVOC_malloc_or_null(240);
    assume sicrni == boogieTmp;
    call {:si_unique_call 438} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 439} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 440} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 441} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 442} boogieTmp := __HAVOC_malloc_or_null(48);
    call {:si_unique_call 443} vslice_dummy_var_2777 := __HAVOC_malloc(44);
    call {:si_unique_call 444} vslice_dummy_var_2778 := __HAVOC_malloc(44);
    call {:si_unique_call 445} vslice_dummy_var_2779 := __HAVOC_malloc(44);
    call {:si_unique_call 446} vslice_dummy_var_2780 := __HAVOC_malloc(44);
    call {:si_unique_call 447} vslice_dummy_var_2781 := __HAVOC_malloc(44);
    call {:si_unique_call 448} vslice_dummy_var_542 := __HAVOC_malloc(236);
    assume {:mainInitDone} true;
    call {:si_unique_call 449} corralExtraInit();
    call {:si_unique_call 450} corralExplainErrorInit();
    call {:si_unique_call 451} _sdv_init11();
    call {:si_unique_call 452} _sdv_init1();
    call {:si_unique_call 453} _sdv_init4();
    call {:si_unique_call 454} _sdv_init5();
    call {:si_unique_call 455} _sdv_init3();
    call {:si_unique_call 456} _sdv_init6();
    call {:si_unique_call 457} _sdv_init9();
    call {:si_unique_call 458} _sdv_init7();
    call {:si_unique_call 459} _sdv_init8();
    call {:si_unique_call 460} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_908 := 0;
    goto L34;

  L34:
    assume Tmp_908 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_907 := 0;
    goto L38;

  L38:
    assume Tmp_907 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 461} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L32;

  L32:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_907 := 1;
    goto L38;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_908 := 1;
    goto L34;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_7: int)
{
  var {:pointer} pirp_7: int;
  var vslice_dummy_var_57: int;

  anon0:
    call {:si_unique_call 462} vslice_dummy_var_57 := __HAVOC_malloc(4);
    pirp_7 := actual_pirp_7;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_7 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_7 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_7 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_7 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_912: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_912: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_912;
    return;
}



procedure {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end()
{
  var vslice_dummy_var_58: int;

  anon0:
    call {:si_unique_call 463} vslice_dummy_var_58 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeGetCurrentThread"} {:osmodel} sdv_KeGetCurrentThread() returns (Tmp_916: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeGetCurrentThread"} {:osmodel} sdv_KeGetCurrentThread() returns (Tmp_916: int)
{
  var {:pointer} sdv_247: int;

  anon0:
    call {:si_unique_call 464} sdv_247 := __HAVOC_malloc(4);
    Tmp_916 := sdv_247;
    return;
}



procedure {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_4: int) returns (Tmp_918: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_4: int) returns (Tmp_918: int)
{
  var {:pointer} sdv_249: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 465} sdv_249 := __HAVOC_malloc(1);
    Tmp_918 := sdv_249;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_918 := 0;
    goto L1;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int)
{
  var {:pointer} DestinationString_1: int;
  var {:pointer} SourceString_1: int;
  var vslice_dummy_var_59: int;

  anon0:
    call {:si_unique_call 466} vslice_dummy_var_59 := __HAVOC_malloc(4);
    DestinationString_1 := actual_DestinationString_1;
    SourceString_1 := actual_SourceString_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString_1 != 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString_1 == 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString_1 != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString_1 == 0;
    goto L4;
}



procedure {:origName "RtlCompareMemory"} {:osmodel} RtlCompareMemory(actual_Source1: int, actual_Source2: int, actual_Length_1: int) returns (Tmp_922: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlCompareMemory"} {:osmodel} RtlCompareMemory(actual_Source1: int, actual_Source2: int, actual_Length_1: int) returns (Tmp_922: int)
{
  var {:scalar} r_3: int;
  var {:scalar} sdv_250: int;

  anon0:
    r_3 := sdv_250;
    Tmp_922 := r_3;
    return;
}



procedure {:origName "KeAcquireInStackQueuedSpinLockAtDpcLevel"} {:osmodel} KeAcquireInStackQueuedSpinLockAtDpcLevel(actual_SpinLock_3: int, actual_LockHandle: int);
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeAcquireInStackQueuedSpinLockAtDpcLevel"} {:osmodel} KeAcquireInStackQueuedSpinLockAtDpcLevel(actual_SpinLock_3: int, actual_LockHandle: int)
{
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 467} vslice_dummy_var_60 := __HAVOC_malloc(4);
    sdv_irql_current := 2;
    return;
}



procedure {:origName "KeReleaseInStackQueuedSpinLockFromDpcLevel"} {:osmodel} KeReleaseInStackQueuedSpinLockFromDpcLevel(actual_LockHandle_1: int);
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeReleaseInStackQueuedSpinLockFromDpcLevel"} {:osmodel} KeReleaseInStackQueuedSpinLockFromDpcLevel(actual_LockHandle_1: int)
{
  var vslice_dummy_var_61: int;

  anon0:
    call {:si_unique_call 468} vslice_dummy_var_61 := __HAVOC_malloc(4);
    havoc sdv_irql_current;
    return;
}



procedure {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_928: int);
  free ensures {:va_keep} Tmp_928 == 0 || Tmp_928 == actual_TargetDevice_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_928: int)
{
  var {:pointer} TargetDevice_1: int;

  anon0:
    TargetDevice_1 := actual_TargetDevice_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} TargetDevice_1 == sdv_p_devobj_pdo;
    Tmp_928 := TargetDevice_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} TargetDevice_1 != sdv_p_devobj_pdo;
    Tmp_928 := 0;
    goto L1;
}



procedure {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_62: int;

  anon0:
    call {:si_unique_call 469} vslice_dummy_var_62 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeInitializeMutex"} {:osmodel} KeInitializeMutex(actual_Mutex_1: int, actual_Level: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeInitializeMutex"} {:osmodel} KeInitializeMutex(actual_Mutex_1: int, actual_Level: int)
{
  var vslice_dummy_var_63: int;

  anon0:
    call {:si_unique_call 470} vslice_dummy_var_63 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_3: int)
{
  var vslice_dummy_var_64: int;

  anon0:
    call {:si_unique_call 471} vslice_dummy_var_64 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_8: int) returns (Tmp_936: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc, sdv_irql_current, yogi_error, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_8: int) returns (Tmp_936: int)
{
  var {:pointer} ps: int;
  var {:scalar} status_24: int;
  var {:pointer} po: int;
  var {:pointer} pirp_8: int;

  anon0:
    po := actual_po;
    pirp_8 := actual_pirp_8;
    status_24 := 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    havoc ps;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(pirp_8))] := 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    call {:si_unique_call 472} sdv_SetStatus(pirp_8);
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 473} sdv_stub_dispatch_begin();
    call {:si_unique_call 474} status_24 := Sbp2PnpDeviceControl(po, pirp_8);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 475} sdv_stub_dispatch_end(status_24, 0);
    Tmp_936 := status_24;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int)
{
  var vslice_dummy_var_65: int;

  anon0:
    call {:si_unique_call 476} vslice_dummy_var_65 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_940: int);
  free ensures {:va_keep} Tmp_940 == 0 || Tmp_940 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_940: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_940 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_940 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_66: int;

  anon0:
    call {:si_unique_call 477} vslice_dummy_var_66 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int)
{
  var vslice_dummy_var_67: int;

  anon0:
    call {:si_unique_call 478} vslice_dummy_var_67 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int);
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int)
{
  var {:scalar} NewIrql: int;
  var vslice_dummy_var_68: int;

  anon0:
    call {:si_unique_call 479} vslice_dummy_var_68 := __HAVOC_malloc(4);
    NewIrql := actual_NewIrql;
    sdv_irql_current := NewIrql;
    return;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_9: int);
  modifies alloc, markedPending;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_9: int)
{
  var vslice_dummy_var_69: int;

  anon0:
    call {:si_unique_call 480} vslice_dummy_var_69 := __HAVOC_malloc(4);
    call {:si_unique_call 481} SLIC_sdv_IoMarkIrpPending_entry(0);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_10: int) returns (Tmp_950: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, stack_location, yogi_error, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued, markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_10: int) returns (Tmp_950: int)
{
  var {:pointer} ps_1: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_951: int;
  var {:scalar} sdv_261: int;
  var {:scalar} status_25: int;
  var {:scalar} Tmp_953: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_10: int;

  anon0:
    po_1 := actual_po_1;
    pirp_10 := actual_pirp_10;
    status_25 := 0;
    minor := sdv_261;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    havoc ps_1;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    call {:si_unique_call 482} sdv_SetStatus(pirp_10);
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 483} sdv_stub_dispatch_begin();
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    goto L60;

  L60:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_951 := 0;
    goto L214;

  L214:
    assume Tmp_951 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L66;

  L66:
    call {:si_unique_call 484} status_25 := Sbp2PnpDeviceControl(po_1, pirp_10);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    call {:si_unique_call 485} sdv_stub_dispatch_end(status_25, 0);
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    Tmp_950 := status_25;
    goto LM2;

  LM2:
    return;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L66;

  anon61_Then:
    Tmp_951 := 1;
    goto L214;

  anon59_Then:
    goto L61;

  anon83_Then:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_953 := 0;
    goto L220;

  L220:
    assume Tmp_953 != 0;
    goto L60;

  anon58_Then:
    Tmp_953 := 1;
    goto L220;

  anon62_Then:
    call {:si_unique_call 486} status_25 := sdv_DoNothing();
    goto L72;

  anon63_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 487} status_25 := Sbp2SystemControl(po_1, pirp_10);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 488} sdv_SetPowerIrpMinorFunction(pirp_10);
    call {:si_unique_call 489} status_25 := Sbp2PowerControl(po_1, pirp_10);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 490} status_25 := sdv_DoNothing();
    goto L72;

  anon66_Then:
    call {:si_unique_call 491} status_25 := sdv_DoNothing();
    goto L72;

  anon67_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 492} status_25 := sdv_DoNothing();
    goto L72;

  anon68_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 493} status_25 := Sbp2ScsiRequests(po_1, pirp_10);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 494} status_25 := Sbp2DeviceControl(po_1, pirp_10);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 495} status_25 := sdv_DoNothing();
    goto L72;

  anon71_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 496} status_25 := sdv_DoNothing();
    goto L72;

  anon72_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 497} status_25 := sdv_DoNothing();
    goto L72;

  anon73_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 498} status_25 := sdv_DoNothing();
    goto L72;

  anon74_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 499} status_25 := sdv_DoNothing();
    goto L72;

  anon75_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 500} status_25 := sdv_DoNothing();
    goto L72;

  anon76_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 501} status_25 := Sbp2CreateClose(po_1, pirp_10);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 502} status_25 := Sbp2CreateClose(po_1, pirp_10);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_1: int) returns (Tmp_954: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_1: int) returns (Tmp_954: int)
{
  var {:scalar} OldState_1: int;
  var {:pointer} Event_1: int;

  anon0:
    Event_1 := actual_Event_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    havoc OldState_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    Tmp_954 := OldState_1;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_4: int, actual_new_1: int);
  modifies alloc, sdv_irql_current, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_4: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_70: int;

  anon0:
    call {:si_unique_call 503} vslice_dummy_var_70 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    call {:si_unique_call 504} SLIC_sdv_KeReleaseSpinLock_entry(0);
    sdv_irql_current := new_1;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_11: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_11: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_71: int;

  anon0:
    call {:si_unique_call 505} vslice_dummy_var_71 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_960: int);
  free ensures {:va_keep} Tmp_960 == 0 || Tmp_960 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_960: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_960 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_960 := -1073741823;
    goto L1;
}



procedure {:origName "ZwCreateDirectoryObject"} {:osmodel} ZwCreateDirectoryObject(actual_DirectoryHandle: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_962: int);
  free ensures {:va_keep} Tmp_962 == -1073741819 || Tmp_962 == 2 || Tmp_962 == -1073741790 || Tmp_962 == -1073741823 || Tmp_962 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ZwCreateDirectoryObject"} {:osmodel} ZwCreateDirectoryObject(actual_DirectoryHandle: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_962: int)
{

  anon0:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_962 := -1073741819;
    goto L1;

  L1:
    return;

  anon10_Then:
    Tmp_962 := 2;
    goto L1;

  anon11_Then:
    Tmp_962 := -1073741790;
    goto L1;

  anon12_Then:
    Tmp_962 := -1073741823;
    goto L1;

  anon9_Then:
    Tmp_962 := 0;
    goto L1;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_4: int)
{
  var vslice_dummy_var_72: int;

  anon0:
    call {:si_unique_call 506} vslice_dummy_var_72 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseInStackQueuedSpinLock"} {:osmodel} KeReleaseInStackQueuedSpinLock(actual_LockHandle_2: int);
  modifies alloc, sdv_irql_current, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeReleaseInStackQueuedSpinLock"} {:osmodel} KeReleaseInStackQueuedSpinLock(actual_LockHandle_2: int)
{
  var vslice_dummy_var_73: int;

  anon0:
    call {:si_unique_call 507} vslice_dummy_var_73 := __HAVOC_malloc(4);
    call {:si_unique_call 508} SLIC_KeReleaseInStackQueuedSpinLock_entry(0);
    havoc sdv_irql_current;
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_5: int, actual_ResultLength: int) returns (Tmp_968: int);
  free ensures {:va_keep} Tmp_968 == -1073741811 || Tmp_968 == -1073741823 || Tmp_968 == 0 || Tmp_968 == 5 || Tmp_968 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_5: int, actual_ResultLength: int) returns (Tmp_968: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_274: int;
  var {:scalar} Length_5: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_5 := actual_Length_5;
    ResultLength := actual_ResultLength;
    L := sdv_274;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_968 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_968 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_5;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_5 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_968 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_5 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_5;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_968 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_5 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_968 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_5;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_74: int;

  anon0:
    call {:si_unique_call 509} vslice_dummy_var_74 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExFreePoolWithTag"} {:osmodel} ExFreePoolWithTag(actual_P_1: int, actual_Tag_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ExFreePoolWithTag"} {:osmodel} ExFreePoolWithTag(actual_P_1: int, actual_Tag_2: int)
{
  var vslice_dummy_var_75: int;

  anon0:
    call {:si_unique_call 510} vslice_dummy_var_75 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_5: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State_1: int) returns (Tmp_974: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_5: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State_1: int) returns (Tmp_974: int)
{
  var {:pointer} r_4: int;
  var {:pointer} sdv_275: int;

  anon0:
    call {:si_unique_call 511} sdv_275 := __HAVOC_malloc(1);
    r_4 := sdv_275;
    Tmp_974 := r_4;
    return;
}



procedure {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_3: int) returns (Tmp_978: int);
  free ensures {:va_keep} Tmp_978 == -1073741823 || Tmp_978 == -1073741738 || Tmp_978 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_3: int) returns (Tmp_978: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_978 := -1073741823;
    goto L1;

  L1:
    return;

  anon5_Then:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_978 := -1073741738;
    goto L1;

  anon6_Then:
    Tmp_978 := 0;
    goto L1;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_980: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_980: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_980;
    return;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_76: int;

  anon0:
    call {:si_unique_call 512} vslice_dummy_var_76 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int);
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int)
{
  var vslice_dummy_var_77: int;

  anon0:
    call {:si_unique_call 513} vslice_dummy_var_77 := __HAVOC_malloc(4);
    havoc sdv_irql_current;
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_986: int);
  free ensures {:va_keep} Tmp_986 == 1 || Tmp_986 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_986: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_986 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_986 := 0;
    goto L1;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_988: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_988: int)
{
  var {:pointer} irpSp_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 514} irpSp_1 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    Tmp_988 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_988 := 0;
    goto L1;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_6: int, actual_Irp_5: int) returns (Tmp_990: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_990 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_6: int, actual_Irp_5: int) returns (Tmp_990: int)
{
  var {:scalar} status_26: int;
  var {:pointer} Irp_5: int;

  anon0:
    Irp_5 := actual_Irp_5;
    status_26 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_5))] := 259;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 259;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L25;

  L25:
    Tmp_990 := status_26;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_5))] := -1073741823;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741823;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_5))] := -1073741536;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741536;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_5))] := 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L36;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_992: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_992: int)
{
  var {:scalar} p_5: int;

  anon0:
    Tmp_992 := p_5;
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type_2: int, actual_State_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type_2: int, actual_State_2: int)
{
  var {:pointer} Event_2: int;
  var {:scalar} Type_2: int;
  var {:scalar} State_2: int;
  var vslice_dummy_var_78: int;

  anon0:
    call {:si_unique_call 515} vslice_dummy_var_78 := __HAVOC_malloc(4);
    Event_2 := actual_Event_2;
    Type_2 := actual_Type_2;
    State_2 := actual_State_2;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_79: int;

  anon0:
    call {:si_unique_call 516} vslice_dummy_var_79 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_7: int, actual_Irp_6: int) returns (Tmp_998: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_998 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_7: int, actual_Irp_6: int) returns (Tmp_998: int)
{
  var {:pointer} Irp_6: int;

  anon0:
    Irp_6 := actual_Irp_6;
    call {:si_unique_call 517} Tmp_998 := IofCallDriver(0, Irp_6);
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_12: int)
{
  var vslice_dummy_var_80: int;

  anon0:
    call {:si_unique_call 518} vslice_dummy_var_80 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_5: int)
{
  var {:pointer} SpinLock_5: int;
  var vslice_dummy_var_81: int;

  anon0:
    call {:si_unique_call 519} vslice_dummy_var_81 := __HAVOC_malloc(4);
    SpinLock_5 := actual_SpinLock_5;
    assume {:nonnull} SpinLock_5 != 0;
    assume SpinLock_5 > 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_4: int) returns (Tmp_1004: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_4: int) returns (Tmp_1004: int)
{
  var {:pointer} sdv_284: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 520} sdv_284 := __HAVOC_malloc(NumberOfBytes);
    Tmp_1004 := sdv_284;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1004 := 0;
    goto L1;
}



procedure {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_8: int) returns (Tmp_1006: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_8: int) returns (Tmp_1006: int)
{
  var {:pointer} ioWorkItem: int;
  var {:pointer} sdv_286: int;
  var {:scalar} Tmp_1008: int;

  anon0:
    call {:si_unique_call 521} sdv_286 := __HAVOC_malloc(1);
    ioWorkItem := sdv_286;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ioWorkItem == 0;
    Tmp_1008 := 0;
    goto L27;

  L27:
    assume Tmp_1008 != 0;
    assume {:nonnull} ioWorkItem != 0;
    assume ioWorkItem > 0;
    Tmp_1006 := ioWorkItem;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} ioWorkItem != 0;
    Tmp_1008 := 1;
    goto L27;

  anon6_Then:
    Tmp_1006 := 0;
    goto L1;
}



procedure {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int);
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int)
{
  var {:pointer} pdrivo: int;
  var vslice_dummy_var_82: int;

  anon0:
    call {:si_unique_call 522} vslice_dummy_var_82 := __HAVOC_malloc(4);
    pdrivo := actual_pdrivo;
    call {:si_unique_call 523} Sbp2Unload(pdrivo);
    return;
}



procedure {:origName "KeAcquireInStackQueuedSpinLock"} {:osmodel} KeAcquireInStackQueuedSpinLock(actual_SpinLock_6: int, actual_LockHandle_3: int);
  modifies alloc, sdv_irql_current, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} locked == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeAcquireInStackQueuedSpinLock"} {:osmodel} KeAcquireInStackQueuedSpinLock(actual_SpinLock_6: int, actual_LockHandle_3: int)
{
  var vslice_dummy_var_83: int;

  anon0:
    call {:si_unique_call 524} vslice_dummy_var_83 := __HAVOC_malloc(4);
    call {:si_unique_call 525} SLIC_KeAcquireInStackQueuedSpinLock_entry(0);
    sdv_irql_current := 2;
    return;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_84: int;

  anon0:
    call {:si_unique_call 526} vslice_dummy_var_84 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_85: int;

  anon0:
    call {:si_unique_call 527} vslice_dummy_var_85 := __HAVOC_malloc(4);
    sdv_irql_current := 0;
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_9: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_1017: int);
  free ensures {:va_keep} Tmp_1017 == -1073741811 || Tmp_1017 == -1073741808 || Tmp_1017 == -1073741823 || Tmp_1017 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_9: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_1017: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1017 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_1017 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_1017 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_1017 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_1019: int);
  free ensures {:va_keep} Tmp_1019 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_1019: int)
{

  anon0:
    Tmp_1019 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1021: int);
  free ensures {:va_keep} Tmp_1021 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1021: int)
{

  anon0:
    Tmp_1021 := -1073741823;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_1023: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_1023: int)
{
  var {:pointer} sdv_289: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 528} sdv_289 := __HAVOC_malloc(1);
    Tmp_1023 := sdv_289;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1023 := 0;
    goto L1;
}



procedure {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_10: int, actual_Action: int) returns (Tmp_1025: int);
  free ensures {:va_keep} Tmp_1025 == -1073741823 || Tmp_1025 == -1073741811 || Tmp_1025 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_10: int, actual_Action: int) returns (Tmp_1025: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1025 := -1073741823;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1025 := -1073741811;
    goto L1;

  anon5_Then:
    Tmp_1025 := 0;
    goto L1;
}



procedure {:origName "SLIC_Sbp2PowerControl_exit"} {:osmodel} SLIC_Sbp2PowerControl_exit(actual_caller_1: int, actual_Sbp2PowerControl_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_Sbp2PowerControl_exit"} {:osmodel} SLIC_Sbp2PowerControl_exit(actual_caller_1: int, actual_Sbp2PowerControl_1: int)
{
  var {:pointer} caller_1: int;
  var {:scalar} Sbp2PowerControl_1: int;

  anon0:
    caller_1 := actual_caller_1;
    Sbp2PowerControl_1 := actual_Sbp2PowerControl_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Sbp2PowerControl_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 529} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 530} SLIC_ABORT_22_0(caller_1, Sbp2PowerControl_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Sbp2PowerControl_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller_2: int);
  modifies queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller_2: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} locked != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} queued != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} markedPending == 0;
    queuedWithoutMarking := 1;
    goto L2;

  L2:
    locked := 0;
    return;

  anon8_Then:
    assume {:partition} markedPending != 0;
    goto L2;

  anon9_Then:
    assume {:partition} queued == 0;
    goto L2;

  anon7_Then:
    assume {:partition} locked == 0;
    goto L2;
}



procedure {:origName "SLIC_Sbp2DeviceControl_exit"} {:osmodel} SLIC_Sbp2DeviceControl_exit(actual_caller_3: int, actual_Sbp2DeviceControl_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_Sbp2DeviceControl_exit"} {:osmodel} SLIC_Sbp2DeviceControl_exit(actual_caller_3: int, actual_Sbp2DeviceControl_1: int)
{
  var {:pointer} caller_3: int;
  var {:scalar} Sbp2DeviceControl_1: int;

  anon0:
    caller_3 := actual_caller_3;
    Sbp2DeviceControl_1 := actual_Sbp2DeviceControl_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Sbp2DeviceControl_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 531} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 532} SLIC_ABORT_26_0(caller_3, Sbp2DeviceControl_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Sbp2DeviceControl_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller_4: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} stack_location == 1;
    call {:si_unique_call 533} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} stack_location != 1;
    goto L2;
}



procedure {:origName "SLIC_Sbp2SystemControl_exit"} {:osmodel} SLIC_Sbp2SystemControl_exit(actual_caller_5: int, actual_Sbp2SystemControl_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_Sbp2SystemControl_exit"} {:osmodel} SLIC_Sbp2SystemControl_exit(actual_caller_5: int, actual_Sbp2SystemControl_1: int)
{
  var {:pointer} caller_5: int;
  var {:scalar} Sbp2SystemControl_1: int;

  anon0:
    caller_5 := actual_caller_5;
    Sbp2SystemControl_1 := actual_Sbp2SystemControl_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Sbp2SystemControl_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 534} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 535} SLIC_ABORT_20_0(caller_5, Sbp2SystemControl_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Sbp2SystemControl_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_PoCallDriver_entry"} {:osmodel} SLIC_PoCallDriver_entry(actual_caller_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_PoCallDriver_entry"} {:osmodel} SLIC_PoCallDriver_entry(actual_caller_6: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} stack_location == 1;
    call {:si_unique_call 536} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} stack_location != 1;
    goto L2;
}



procedure {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_8: int, actual_Sbp2DeviceControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_8: int, actual_Sbp2DeviceControl_2: int)
{
  var {:pointer} caller_8: int;
  var {:scalar} Sbp2DeviceControl_2: int;

  anon0:
    caller_8 := actual_caller_8;
    Sbp2DeviceControl_2 := actual_Sbp2DeviceControl_2;
    call {:si_unique_call 537} SLIC_ERROR_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_9: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_9: int)
{

  anon0:
    call {:si_unique_call 538} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    return;
}



procedure {:origName "SLIC_sdv_InsertTailList_entry"} {:osmodel} SLIC_sdv_InsertTailList_entry(actual_caller_10: int);
  modifies queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_InsertTailList_entry"} {:osmodel} SLIC_sdv_InsertTailList_entry(actual_caller_10: int)
{

  anon0:
    queued := 1;
    return;
}



procedure {:origName "_sdv_init11"} {:osmodel} _sdv_init11();
  modifies SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} queued == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} stack_location == 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 0;
  free ensures {:va_keep} queuedWithoutMarking == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init11"} {:osmodel} _sdv_init11()
{

  anon0:
    SLAM_guard_S_0 := SLAM_guard_S_0_init;
    stack_location := 0;
    markedPending := 0;
    queuedWithoutMarking := 0;
    queued := 0;
    locked := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_Sbp2CreateClose_exit"} {:osmodel} SLIC_Sbp2CreateClose_exit(actual_caller_11: int, actual_Sbp2CreateClose_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_Sbp2CreateClose_exit"} {:osmodel} SLIC_Sbp2CreateClose_exit(actual_caller_11: int, actual_Sbp2CreateClose_1: int)
{
  var {:pointer} caller_11: int;
  var {:scalar} Sbp2CreateClose_1: int;

  anon0:
    caller_11 := actual_caller_11;
    Sbp2CreateClose_1 := actual_Sbp2CreateClose_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Sbp2CreateClose_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 539} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 540} SLIC_ABORT_28_0(caller_11, Sbp2CreateClose_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Sbp2CreateClose_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_KeReleaseInStackQueuedSpinLock_entry"} {:osmodel} SLIC_KeReleaseInStackQueuedSpinLock_entry(actual_caller_12: int);
  modifies queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_KeReleaseInStackQueuedSpinLock_entry"} {:osmodel} SLIC_KeReleaseInStackQueuedSpinLock_entry(actual_caller_12: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} locked != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} queued != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} markedPending == 0;
    queuedWithoutMarking := 1;
    goto L2;

  L2:
    locked := 0;
    return;

  anon8_Then:
    assume {:partition} markedPending != 0;
    goto L2;

  anon9_Then:
    assume {:partition} queued == 0;
    goto L2;

  anon7_Then:
    assume {:partition} locked == 0;
    goto L2;
}



procedure {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_13: int, actual_Sbp2SystemControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_13: int, actual_Sbp2SystemControl_2: int)
{
  var {:pointer} caller_13: int;
  var {:scalar} Sbp2SystemControl_2: int;

  anon0:
    caller_13 := actual_caller_13;
    Sbp2SystemControl_2 := actual_Sbp2SystemControl_2;
    call {:si_unique_call 541} SLIC_ERROR_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_sdv_IoMarkIrpPending_entry"} {:osmodel} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_14: int);
  modifies markedPending;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_IoMarkIrpPending_entry"} {:osmodel} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_14: int)
{

  anon0:
    markedPending := 1;
    return;
}



procedure {:origName "SLIC_InsertHeadList_entry"} {:osmodel} SLIC_InsertHeadList_entry(actual_caller_15: int);
  modifies queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_InsertHeadList_entry"} {:osmodel} SLIC_InsertHeadList_entry(actual_caller_15: int)
{

  anon0:
    queued := 1;
    return;
}



procedure {:origName "SLIC_sdv_KeAcquireSpinLock_entry"} {:osmodel} SLIC_sdv_KeAcquireSpinLock_entry(actual_caller_16: int);
  modifies locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} locked == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_KeAcquireSpinLock_entry"} {:osmodel} SLIC_sdv_KeAcquireSpinLock_entry(actual_caller_16: int)
{

  anon0:
    locked := 1;
    return;
}



procedure {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_17: int, actual_Sbp2ScsiRequests_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_17: int, actual_Sbp2ScsiRequests_1: int)
{
  var {:pointer} caller_17: int;
  var {:scalar} Sbp2ScsiRequests_1: int;

  anon0:
    caller_17 := actual_caller_17;
    Sbp2ScsiRequests_1 := actual_Sbp2ScsiRequests_1;
    call {:si_unique_call 542} SLIC_ERROR_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_19: int, actual_Sbp2PnpDeviceControl_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_19: int, actual_Sbp2PnpDeviceControl_1: int)
{
  var {:pointer} caller_19: int;
  var {:scalar} Sbp2PnpDeviceControl_1: int;

  anon0:
    caller_19 := actual_caller_19;
    Sbp2PnpDeviceControl_1 := actual_Sbp2PnpDeviceControl_1;
    call {:si_unique_call 543} SLIC_ERROR_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} {:osmodel} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_20: int);
  modifies stack_location;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} stack_location == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} {:osmodel} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_20: int)
{

  anon0:
    stack_location := 1;
    return;
}



procedure {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_21: int, actual_Sbp2PowerControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_21: int, actual_Sbp2PowerControl_2: int)
{
  var {:pointer} caller_21: int;
  var {:scalar} Sbp2PowerControl_2: int;

  anon0:
    caller_21 := actual_caller_21;
    Sbp2PowerControl_2 := actual_Sbp2PowerControl_2;
    call {:si_unique_call 544} SLIC_ERROR_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_22: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_22: int)
{

  anon0:
    call {:si_unique_call 545} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    return;
}



procedure {:origName "SLIC_ABORT_28_0"} SLIC_ABORT_28_0(actual_caller_23: int, actual_Sbp2CreateClose_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_28_0"} SLIC_ABORT_28_0(actual_caller_23: int, actual_Sbp2CreateClose_2: int)
{
  var {:pointer} caller_23: int;
  var {:scalar} Sbp2CreateClose_2: int;

  anon0:
    caller_23 := actual_caller_23;
    Sbp2CreateClose_2 := actual_Sbp2CreateClose_2;
    call {:si_unique_call 546} SLIC_ERROR_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_KeAcquireInStackQueuedSpinLock_entry"} {:osmodel} SLIC_KeAcquireInStackQueuedSpinLock_entry(actual_caller_24: int);
  modifies locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} locked == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_KeAcquireInStackQueuedSpinLock_entry"} {:osmodel} SLIC_KeAcquireInStackQueuedSpinLock_entry(actual_caller_24: int)
{

  anon0:
    locked := 1;
    return;
}



procedure {:origName "SLIC_Sbp2PnpDeviceControl_exit"} {:osmodel} SLIC_Sbp2PnpDeviceControl_exit(actual_caller_25: int, actual_Sbp2PnpDeviceControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_Sbp2PnpDeviceControl_exit"} {:osmodel} SLIC_Sbp2PnpDeviceControl_exit(actual_caller_25: int, actual_Sbp2PnpDeviceControl_2: int)
{
  var {:pointer} caller_25: int;
  var {:scalar} Sbp2PnpDeviceControl_2: int;

  anon0:
    caller_25 := actual_caller_25;
    Sbp2PnpDeviceControl_2 := actual_Sbp2PnpDeviceControl_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Sbp2PnpDeviceControl_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 547} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 548} SLIC_ABORT_18_0(caller_25, Sbp2PnpDeviceControl_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Sbp2PnpDeviceControl_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_Sbp2ScsiRequests_exit"} {:osmodel} SLIC_Sbp2ScsiRequests_exit(actual_caller_26: int, actual_Sbp2ScsiRequests_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_Sbp2ScsiRequests_exit"} {:osmodel} SLIC_Sbp2ScsiRequests_exit(actual_caller_26: int, actual_Sbp2ScsiRequests_2: int)
{
  var {:pointer} caller_26: int;
  var {:scalar} Sbp2ScsiRequests_2: int;

  anon0:
    caller_26 := actual_caller_26;
    Sbp2ScsiRequests_2 := actual_Sbp2ScsiRequests_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Sbp2ScsiRequests_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 549} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 550} SLIC_ABORT_24_0(caller_26, Sbp2ScsiRequests_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Sbp2ScsiRequests_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_299: int, actual_sdv_300: int) returns (Tmp_1035: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_299: int, actual_sdv_300: int) returns (Tmp_1035: int)
{
  var {:scalar} sdv_301: int;

  anon0:
    call {:si_unique_call 551} Tmp_1035 := __HAVOC_malloc(4);
    call {:si_unique_call 552} sdv_301 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1035 != 0;
    assume Tmp_1035 > 0;
    assume {:nonnull} sdv_301 != 0;
    assume sdv_301 > 0;
    return;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_335: int, actual_sdv_336: int) returns (Tmp_1051: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_335: int, actual_sdv_336: int) returns (Tmp_1051: int)
{
  var {:scalar} sdv_337: int;

  anon0:
    call {:si_unique_call 553} Tmp_1051 := __HAVOC_malloc(4);
    call {:si_unique_call 554} sdv_337 := __HAVOC_malloc(4);
    call {:si_unique_call 555} SLIC_sdv_InsertTailList_entry(0);
    assume {:nonnull} Tmp_1051 != 0;
    assume Tmp_1051 > 0;
    assume {:nonnull} sdv_337 != 0;
    assume sdv_337 > 0;
    return;
}



procedure {:origName "Sbp2PowerControl"} Sbp2PowerControl(actual_DeviceObject_11: int, actual_Irp_7: int) returns (Tmp_1059: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, stack_location, sdv_irql_current, yogi_error, markedPending, locked, queuedWithoutMarking, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2PowerControl"} Sbp2PowerControl(actual_DeviceObject_11: int, actual_Irp_7: int) returns (Tmp_1059: int)
{
  var {:scalar} Tmp_1060: int;
  var {:pointer} irpStack: int;
  var {:pointer} pdoExtension_5: int;
  var {:pointer} Tmp_1061: int;
  var {:pointer} Tmp_1062: int;
  var {:scalar} Tmp_1063: int;
  var {:scalar} Tmp_1064: int;
  var {:pointer} Tmp_1065: int;
  var {:scalar} status_27: int;
  var {:pointer} Tmp_1067: int;
  var {:scalar} Tmp_1068: int;
  var {:pointer} Tmp_1069: int;
  var {:scalar} minorFunction: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_2782: int;

  anon0:
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 556} Tmp_1067 := __HAVOC_malloc(4);
    call {:si_unique_call 557} Tmp_1069 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_11 != 0;
    assume DeviceObject_11 > 0;
    havoc pdoExtension_5;
    call {:si_unique_call 558} irpStack := sdv_IoGetCurrentIrpStackLocation(Irp_7);
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc minorFunction;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1067;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    Tmp_1068 := minorFunction;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    Tmp_1062 := strConst__li2bpl6;
    goto L25;

  L25:
    havoc Tmp_1061;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1060;
    call {:si_unique_call 559} WPP_SF_qsqD(Tmp_1060, 34, Tmp_1061, pdoExtension_5, Tmp_1062, Irp_7, Tmp_1068);
    goto L18;

  L18:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    Tmp_1063 := minorFunction;
    call {:si_unique_call 560} Sbp2AddLog(pdoExtension_5, 2, -800893890, Tmp_1063, Irp_7);
    call {:si_unique_call 561} status_27 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_27 < 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1069;
    assume {:nonnull} Tmp_1069 != 0;
    assume Tmp_1069 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_1065;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1064;
    call {:si_unique_call 562} WPP_SF_q(Tmp_1064, 35, Tmp_1065, pdoExtension_5);
    goto L69;

  L69:
    call {:si_unique_call 563} Sbp2AddLog(pdoExtension_5, 2, -800893903, status_27, 0);
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_7))] := status_27;
    call {:si_unique_call 564} PoStartNextPowerIrp(0);
    call {:si_unique_call 565} sdv_IoCompleteRequest(0, 0);
    Tmp_1059 := status_27;
    goto L1;

  L1:
    call {:si_unique_call 566} SLIC_Sbp2PowerControl_exit(strConst__li2bpl2, Tmp_1059);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon53_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon42_Then:
    goto L69;

  anon54_Then:
    goto L69;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L69;

  anon39_Then:
    assume {:partition} 0 <= status_27;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} minorFunction != 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} minorFunction != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} minorFunction != 2;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} minorFunction == 3;
    goto L46;

  L46:
    status_27 := 0;
    goto L56;

  L56:
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_7))] := status_27;
    call {:si_unique_call 567} PoStartNextPowerIrp(0);
    call {:si_unique_call 568} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 569} vslice_dummy_var_86 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_5), Irp_7);
    Tmp_1059 := status_27;
    goto L1;

  anon46_Then:
    assume {:partition} minorFunction != 3;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    status_27 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_7))];
    goto L56;

  anon47_Then:
    assume {:partition} minorFunction == 2;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc vslice_dummy_var_2782;
    call {:si_unique_call 570} Sbp2AddLog(pdoExtension_5, 2, -800893902, vslice_dummy_var_2782, Irp_7);
    call {:si_unique_call 571} status_27 := Sbp2PdoSetPower(DeviceObject_11, Irp_7);
    Tmp_1059 := status_27;
    goto L1;

  anon48_Then:
    assume {:partition} minorFunction == 1;
    goto L46;

  anon40_Then:
    assume {:partition} minorFunction == 0;
    goto L46;

  anon45_Then:
    status_27 := -1073741810;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_7))] := status_27;
    call {:si_unique_call 572} PoStartNextPowerIrp(0);
    call {:si_unique_call 573} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    Tmp_1059 := status_27;
    goto L1;

  anon37_Then:
    assume {:nonnull} DeviceObject_11 != 0;
    assume DeviceObject_11 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} minorFunction == 2;
    call {:si_unique_call 574} status_27 := Sbp2FdoSetPower(DeviceObject_11, Irp_7);
    goto L96;

  anon52_Then:
    assume {:partition} minorFunction != 2;
    call {:si_unique_call 575} PoStartNextPowerIrp(0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume Irp_7 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 576} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L129;

  L129:
    call {:si_unique_call 577} sdv_IoSkipCurrentIrpStackLocation(Irp_7);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume Irp_7 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 578} SLIC_PoCallDriver_entry(0);
    goto L132;

  L132:
    call {:si_unique_call 579} status_27 := PoCallDriver(0, Irp_7);
    goto L96;

  anon44_Then:
    assume !(Irp_7 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L132;

  anon43_Then:
    assume !(Irp_7 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L129;

  anon51_Then:
    Tmp_1062 := strConst__li2bpl5;
    goto L25;

  anon38_Then:
    goto L18;

  anon50_Then:
    goto L18;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2PdoCompleteSystemPowerIrp"} Sbp2PdoCompleteSystemPowerIrp(actual_DeviceObject_12: int, actual_Irp_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2PdoCompleteSystemPowerIrp"} Sbp2PdoCompleteSystemPowerIrp(actual_DeviceObject_12: int, actual_Irp_8: int)
{
  var {:pointer} Tmp_1070: int;
  var {:pointer} irpStack_1: int;
  var {:pointer} Tmp_1071: int;
  var {:pointer} pdoExtension_6: int;
  var {:scalar} newPowerState: int;
  var {:scalar} Tmp_1072: int;
  var {:scalar} newSystemState: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} Irp_8: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;

  anon0:
    call {:si_unique_call 580} newPowerState := __HAVOC_malloc(8);
    call {:si_unique_call 581} vslice_dummy_var_87 := __HAVOC_malloc(4);
    DeviceObject_12 := actual_DeviceObject_12;
    Irp_8 := actual_Irp_8;
    call {:si_unique_call 582} Tmp_1070 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    havoc pdoExtension_6;
    call {:si_unique_call 583} irpStack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} irpStack_1 != 0;
    assume irpStack_1 > 0;
    havoc newSystemState;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1070;
    assume {:nonnull} Tmp_1070 != 0;
    assume Tmp_1070 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_1071;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1072;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 584} WPP_SF_qqD(Tmp_1072, 11, Tmp_1071, pdoExtension_6, Irp_8, Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_8))]);
    goto L17;

  L17:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} newPowerState != 0;
    assume newPowerState > 0;
    call {:si_unique_call 585} Sbp2SetPowerState(DeviceObject_12, 0, newPowerState);
    goto L25;

  L25:
    call {:si_unique_call 586} PoStartNextPowerIrp(0);
    call {:si_unique_call 587} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 588} vslice_dummy_var_88 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_6), Irp_8);
    return;

  anon9_Then:
    goto L25;

  anon10_Then:
    goto L17;

  anon12_Then:
    goto L17;

  anon11_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L17;
}



procedure {:origName "Sbp2PdoSetPower"} Sbp2PdoSetPower(actual_DeviceObject_13: int, actual_Irp_9: int) returns (Tmp_1075: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, markedPending, locked, queuedWithoutMarking, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1075 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2PdoSetPower"} Sbp2PdoSetPower(actual_DeviceObject_13: int, actual_Irp_9: int) returns (Tmp_1075: int)
{
  var {:pointer} irpStack_2: int;
  var {:pointer} Tmp_1076: int;
  var {:scalar} Tmp_1077: int;
  var {:pointer} Tmp_1078: int;
  var {:pointer} Tmp_1079: int;
  var {:pointer} Tmp_1080: int;
  var {:pointer} pdoExtension_7: int;
  var {:pointer} Tmp_1081: int;
  var {:scalar} Tmp_1082: int;
  var {:scalar} newPowerState_1: int;
  var {:pointer} Tmp_1083: int;
  var {:scalar} Tmp_1084: int;
  var {:pointer} Tmp_1085: int;
  var {:scalar} orbLock_3: int;
  var {:pointer} Tmp_1086: int;
  var {:pointer} Tmp_1087: int;
  var {:scalar} Tmp_1088: int;
  var {:scalar} powerState: int;
  var {:scalar} Tmp_1089: int;
  var {:scalar} Tmp_1090: int;
  var {:pointer} Tmp_1091: int;
  var {:scalar} sdv_353: int;
  var {:pointer} Tmp_1092: int;
  var {:pointer} Tmp_1093: int;
  var {:scalar} newDeviceState: int;
  var {:scalar} Tmp_1094: int;
  var {:scalar} Tmp_1095: int;
  var {:pointer} Tmp_1096: int;
  var {:scalar} Tmp_1097: int;
  var {:pointer} fdoExtension_2: int;
  var {:scalar} Tmp_1098: int;
  var {:scalar} newPowerState_2: int;
  var {:scalar} Tmp_1099: int;
  var {:pointer} Tmp_1100: int;
  var {:pointer} Tmp_1101: int;
  var {:pointer} Tmp_1102: int;
  var {:pointer} Tmp_1103: int;
  var {:scalar} cIrql_2: int;
  var {:scalar} Tmp_1104: int;
  var {:scalar} status_28: int;
  var {:pointer} Tmp_1105: int;
  var {:pointer} Tmp_1106: int;
  var {:scalar} bAsyncPowerUp: int;
  var {:scalar} newSystemState_1: int;
  var {:pointer} Tmp_1107: int;
  var {:scalar} powerType: int;
  var {:pointer} Tmp_1108: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_9: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_2783: int;
  var vslice_dummy_var_2784: int;
  var vslice_dummy_var_2785: int;
  var vslice_dummy_var_2786: int;

  anon0:
    call {:si_unique_call 589} newPowerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 590} orbLock_3 := __HAVOC_malloc(12);
    call {:si_unique_call 591} powerState := __HAVOC_malloc(8);
    call {:si_unique_call 592} newPowerState_2 := __HAVOC_malloc(8);
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_9 := actual_Irp_9;
    call {:si_unique_call 593} Tmp_1079 := __HAVOC_malloc(4);
    call {:si_unique_call 594} Tmp_1081 := __HAVOC_malloc(4);
    call {:si_unique_call 595} Tmp_1092 := __HAVOC_malloc(4);
    call {:si_unique_call 596} Tmp_1093 := __HAVOC_malloc(4);
    call {:si_unique_call 597} Tmp_1100 := __HAVOC_malloc(4);
    call {:si_unique_call 598} Tmp_1103 := __HAVOC_malloc(4);
    call {:si_unique_call 599} Tmp_1105 := __HAVOC_malloc(4);
    call {:si_unique_call 600} Tmp_1107 := __HAVOC_malloc(4);
    call {:si_unique_call 601} irpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc pdoExtension_7;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc powerType;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1100;
    assume {:nonnull} Tmp_1100 != 0;
    assume Tmp_1100 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} powerType != 0;
    Tmp_1108 := strConst__li2bpl8;
    goto L26;

  L26:
    havoc Tmp_1106;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1084;
    call {:si_unique_call 602} WPP_SF_qsq(Tmp_1084, 13, Tmp_1106, pdoExtension_7, Tmp_1108, Irp_9);
    goto L18;

  L18:
    call {:si_unique_call 603} sdv_IoMarkIrpPending(0);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} powerType == 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc newSystemState_1;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1092;
    assume {:nonnull} Tmp_1092 != 0;
    assume Tmp_1092 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    Tmp_1089 := newSystemState_1 - 1;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc Tmp_1104;
    havoc Tmp_1101;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1099;
    call {:si_unique_call 604} WPP_SF_qDDq(Tmp_1099, 14, Tmp_1101, pdoExtension_7, Tmp_1104, Tmp_1089, Irp_9);
    goto L158;

  L158:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc vslice_dummy_var_2783;
    call {:si_unique_call 605} Sbp2AddLog(pdoExtension_7, 2, -800893837, vslice_dummy_var_2783, newSystemState_1);
    status_28 := 0;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} newSystemState_1 != 1;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    assume {:nonnull} newPowerState_2 != 0;
    assume newPowerState_2 > 0;
    call {:si_unique_call 606} Sbp2SetPowerState(DeviceObject_13, 0, newPowerState_2);
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 607} status_28 := PoRequestPowerIrp(0, 2, powerState, li2bplFunctionConstant694, 0, 0);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} status_28 < 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1105;
    assume {:nonnull} Tmp_1105 != 0;
    assume Tmp_1105 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    havoc Tmp_1080;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1095;
    call {:si_unique_call 608} WPP_SF_qD(Tmp_1095, 17, Tmp_1080, pdoExtension_7, status_28);
    goto L111;

  L111:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} status_28 == 259;
    goto L119;

  L119:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1081;
    assume {:nonnull} Tmp_1081 != 0;
    assume Tmp_1081 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_1087;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1077;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc vslice_dummy_var_2784;
    call {:si_unique_call 609} WPP_SF_qqD(Tmp_1077, 20, Tmp_1087, vslice_dummy_var_2784, Irp_9, status_28);
    goto L120;

  L120:
    Tmp_1075 := 259;
    goto L1;

  L1:
    return;

  anon99_Then:
    goto L120;

  anon118_Then:
    goto L120;

  anon98_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L120;

  anon97_Then:
    assume {:partition} status_28 != 259;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_9))] := status_28;
    call {:si_unique_call 610} Sbp2PdoCompletePowerIrp(DeviceObject_13, Irp_9);
    goto L119;

  anon111_Then:
    goto L111;

  anon129_Then:
    goto L111;

  anon110_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L111;

  anon109_Then:
    assume {:partition} 0 <= status_28;
    status_28 := 259;
    goto L111;

  anon103_Then:
    assume {:partition} newSystemState_1 == 1;
    bAsyncPowerUp := 0;
    call {:si_unique_call 611} Tmp_1096 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1096 != 0;
    assume Tmp_1096 > 0;
    call {:si_unique_call 612} sdv_KeAcquireSpinLock(0, Tmp_1096);
    assume {:nonnull} Tmp_1096 != 0;
    assume Tmp_1096 > 0;
    havoc cIrql_2;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc Tmp_1091;
    assume {:nonnull} Tmp_1091 != 0;
    assume Tmp_1091 > 0;
    havoc fdoExtension_2;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1079;
    assume {:nonnull} Tmp_1079 != 0;
    assume Tmp_1079 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    havoc Tmp_1076;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1097;
    call {:si_unique_call 613} WPP_SF_q(Tmp_1097, 15, Tmp_1076, pdoExtension_7);
    goto L188;

  L188:
    status_28 := -1073741810;
    call {:si_unique_call 614} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L111;

  anon104_Then:
    goto L188;

  anon126_Then:
    goto L188;

  anon125_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon124_Then:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc Tmp_1085;
    assume {:nonnull} Tmp_1085 != 0;
    assume Tmp_1085 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    bAsyncPowerUp := 1;
    goto L199;

  L199:
    call {:si_unique_call 615} sdv_KeReleaseSpinLock(0, cIrql_2);
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 616} vslice_dummy_var_91 := PoRequestPowerIrp(0, 2, powerState, 0, 0, 0);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} status_28 < 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1107;
    assume {:nonnull} Tmp_1107 != 0;
    assume Tmp_1107 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    havoc Tmp_1078;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1094;
    call {:si_unique_call 617} WPP_SF_qD(Tmp_1094, 16, Tmp_1078, pdoExtension_7, status_28);
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto L111;

  anon108_Then:
    goto L216;

  anon128_Then:
    goto L216;

  anon107_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L216;

  anon105_Then:
    assume {:partition} 0 <= status_28;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} bAsyncPowerUp != 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_9))] := 0;
    goto L213;

  L213:
    status_28 := 0;
    goto L111;

  anon106_Then:
    assume {:partition} bAsyncPowerUp == 0;
    goto L213;

  anon127_Then:
    goto L199;

  anon123_Then:
    goto L111;

  anon102_Then:
    goto L158;

  anon122_Then:
    goto L158;

  anon121_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L158;

  anon89_Then:
    assume {:partition} powerType != 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} powerType == 1;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc newDeviceState;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1103;
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    Tmp_1098 := newDeviceState - 1;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc Tmp_1090;
    havoc Tmp_1086;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1082;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc vslice_dummy_var_2785;
    call {:si_unique_call 618} WPP_SF_qDDqD(Tmp_1082, 18, Tmp_1086, pdoExtension_7, Tmp_1090, Tmp_1098, Irp_9, vslice_dummy_var_2785);
    goto L41;

  L41:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc vslice_dummy_var_2786;
    call {:si_unique_call 619} Sbp2AddLog(pdoExtension_7, 2, -800893852, vslice_dummy_var_2786, newDeviceState);
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    assume {:nonnull} newPowerState_1 != 0;
    assume newPowerState_1 > 0;
    call {:si_unique_call 620} Sbp2SetPowerState(DeviceObject_13, 1, newPowerState_1);
    call {:si_unique_call 621} AcquireOrbListLock(pdoExtension_7, orbLock_3, 0);
    call {:si_unique_call 622} sdv_353 := sdv_IsListEmpty(0);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} sdv_353 != 0;
    call {:si_unique_call 623} ReleaseOrbListLock(pdoExtension_7, orbLock_3, 0);
    call {:si_unique_call 624} Tmp_1096 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1096 != 0;
    assume Tmp_1096 > 0;
    call {:si_unique_call 625} sdv_KeAcquireSpinLock(0, Tmp_1096);
    assume {:nonnull} Tmp_1096 != 0;
    assume Tmp_1096 > 0;
    havoc cIrql_2;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc Tmp_1102;
    assume {:nonnull} Tmp_1102 != 0;
    assume Tmp_1102 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    call {:si_unique_call 626} sdv_KeReleaseSpinLock(0, cIrql_2);
    call {:si_unique_call 627} status_28 := Sbp2ManagementTransaction#1(pdoExtension_7, 7, -1);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1093;
    assume {:nonnull} Tmp_1093 != 0;
    assume Tmp_1093 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc Tmp_1083;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1088;
    call {:si_unique_call 628} WPP_SF_qD(Tmp_1088, 19, Tmp_1083, pdoExtension_7, status_28);
    goto L103;

  L103:
    status_28 := 0;
    goto L111;

  anon96_Then:
    goto L103;

  anon119_Then:
    goto L103;

  anon95_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon117_Then:
    goto L87;

  L87:
    call {:si_unique_call 629} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L103;

  anon116_Then:
    goto L87;

  anon94_Then:
    assume {:partition} sdv_353 == 0;
    call {:si_unique_call 630} sdv_IoMarkIrpPending(0);
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    call {:si_unique_call 631} vslice_dummy_var_89 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_7), Irp_9);
    call {:si_unique_call 632} ReleaseOrbListLock(pdoExtension_7, orbLock_3, 0);
    Tmp_1075 := 259;
    goto L1;

  anon93_Then:
    call {:si_unique_call 633} Tmp_1096 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1096 != 0;
    assume Tmp_1096 > 0;
    call {:si_unique_call 634} sdv_KeAcquireSpinLock(0, Tmp_1096);
    assume {:nonnull} Tmp_1096 != 0;
    assume Tmp_1096 > 0;
    havoc cIrql_2;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    status_28 := 0;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto L139;

  L139:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L143;

  L143:
    call {:si_unique_call 635} sdv_KeReleaseSpinLock(0, cIrql_2);
    call {:si_unique_call 636} Sbp2StartQueue#1(pdoExtension_7);
    goto L111;

  anon101_Then:
    call {:si_unique_call 637} vslice_dummy_var_90 := Sbp2QueueManagementWorkItem(pdoExtension_7, 4, -1);
    call {:si_unique_call 638} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L111;

  anon120_Then:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L143;

  anon100_Then:
    goto L139;

  anon92_Then:
    status_28 := 0;
    goto L111;

  anon91_Then:
    goto L41;

  anon115_Then:
    goto L41;

  anon114_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L41;

  anon90_Then:
    assume {:partition} powerType != 1;
    status_28 := -1073741822;
    goto L111;

  anon88_Then:
    assume {:partition} powerType == 0;
    Tmp_1108 := strConst__li2bpl7;
    goto L26;

  anon87_Then:
    goto L18;

  anon113_Then:
    goto L18;

  anon112_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2FdoSetPower"} Sbp2FdoSetPower(actual_DeviceObject_14: int, actual_Irp_11: int) returns (Tmp_1119: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, stack_location, markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} Tmp_1119 == 259 || Tmp_1119 == -1073741822;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2FdoSetPower"} Sbp2FdoSetPower(actual_DeviceObject_14: int, actual_Irp_11: int) returns (Tmp_1119: int)
{
  var {:pointer} Tmp_1120: int;
  var {:pointer} Tmp_1121: int;
  var {:pointer} irpStack_4: int;
  var {:pointer} Tmp_1122: int;
  var {:scalar} Tmp_1123: int;
  var {:scalar} Tmp_1124: int;
  var {:scalar} Tmp_1125: int;
  var {:scalar} Tmp_1126: int;
  var {:pointer} Tmp_1127: int;
  var {:scalar} Tmp_1128: int;
  var {:scalar} Tmp_1129: int;
  var {:pointer} Tmp_1130: int;
  var {:scalar} powerState_1: int;
  var {:pointer} Tmp_1131: int;
  var {:scalar} newDeviceState_1: int;
  var {:pointer} fdoExtension_3: int;
  var {:pointer} Tmp_1133: int;
  var {:pointer} Tmp_1134: int;
  var {:scalar} Tmp_1135: int;
  var {:pointer} Tmp_1136: int;
  var {:pointer} Tmp_1137: int;
  var {:scalar} Tmp_1138: int;
  var {:pointer} Tmp_1139: int;
  var {:pointer} Tmp_1140: int;
  var {:scalar} status_30: int;
  var {:scalar} Tmp_1141: int;
  var {:scalar} newSystemState_2: int;
  var {:pointer} Tmp_1142: int;
  var {:pointer} Tmp_1143: int;
  var {:scalar} Tmp_1144: int;
  var {:scalar} powerType_1: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Irp_11: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_2787: int;

  anon0:
    call {:si_unique_call 639} powerState_1 := __HAVOC_malloc(8);
    DeviceObject_14 := actual_DeviceObject_14;
    Irp_11 := actual_Irp_11;
    call {:si_unique_call 640} Tmp_1127 := __HAVOC_malloc(4);
    call {:si_unique_call 641} Tmp_1130 := __HAVOC_malloc(4);
    call {:si_unique_call 642} Tmp_1131 := __HAVOC_malloc(4);
    call {:si_unique_call 643} Tmp_1134 := __HAVOC_malloc(4);
    call {:si_unique_call 644} Tmp_1139 := __HAVOC_malloc(4);
    call {:si_unique_call 645} Tmp_1143 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc fdoExtension_3;
    call {:si_unique_call 646} irpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc powerType_1;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1143;
    assume {:nonnull} Tmp_1143 != 0;
    assume Tmp_1143 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} powerType_1 != 0;
    Tmp_1140 := strConst__li2bpl8;
    goto L23;

  L23:
    havoc Tmp_1121;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1126;
    call {:si_unique_call 647} WPP_SF_qsq(Tmp_1126, 28, Tmp_1121, fdoExtension_3, Tmp_1140, Irp_11);
    goto L17;

  L17:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} powerType_1 == 0;
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc newSystemState_2;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1134;
    assume {:nonnull} Tmp_1134 != 0;
    assume Tmp_1134 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    Tmp_1129 := newSystemState_2 - 1;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1144;
    havoc Tmp_1142;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1128;
    call {:si_unique_call 648} WPP_SF_qDDq(Tmp_1128, 29, Tmp_1142, fdoExtension_3, Tmp_1144, Tmp_1129, Irp_11);
    goto L94;

  L94:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 649} sdv_IoMarkIrpPending(0);
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1131;
    assume {:nonnull} Tmp_1131 != 0;
    assume Tmp_1131 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_1133;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1125;
    call {:si_unique_call 650} WPP_SF_qq(Tmp_1125, 30, Tmp_1133, fdoExtension_3, Irp_11);
    goto L120;

  L120:
    call {:si_unique_call 651} status_30 := PoRequestPowerIrp(0, 2, powerState_1, li2bplFunctionConstant697, 0, 0);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} status_30 < 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1139;
    assume {:nonnull} Tmp_1139 != 0;
    assume Tmp_1139 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    havoc Tmp_1137;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1138;
    call {:si_unique_call 652} WPP_SF_qD(Tmp_1138, 31, Tmp_1137, fdoExtension_3, status_30);
    goto L137;

  L137:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_11))] := status_30;
    call {:si_unique_call 653} PoStartNextPowerIrp(0);
    call {:si_unique_call 654} sdv_IoCompleteRequest(0, 0);
    goto L135;

  L135:
    status_30 := 259;
    goto L66;

  L66:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1130;
    assume {:nonnull} Tmp_1130 != 0;
    assume Tmp_1130 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} powerType_1 != 0;
    Tmp_1136 := strConst__li2bpl8;
    goto L73;

  L73:
    havoc Tmp_1120;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1135;
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc vslice_dummy_var_2787;
    call {:si_unique_call 655} WPP_SF_qsqD(Tmp_1135, 33, Tmp_1120, vslice_dummy_var_2787, Tmp_1136, Irp_11, status_30);
    goto L67;

  L67:
    Tmp_1119 := status_30;
    return;

  anon72_Then:
    assume {:partition} powerType_1 == 0;
    Tmp_1136 := strConst__li2bpl7;
    goto L73;

  anon71_Then:
    goto L67;

  anon88_Then:
    goto L67;

  anon70_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon80_Then:
    goto L137;

  anon93_Then:
    goto L137;

  anon79_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L137;

  anon78_Then:
    assume {:partition} 0 <= status_30;
    goto L135;

  anon77_Then:
    goto L120;

  anon92_Then:
    goto L120;

  anon91_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L120;

  anon76_Then:
    call {:si_unique_call 656} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_11);
    call {:si_unique_call 657} sdv_IoSetCompletionRoutine(Irp_11, li2bplFunctionConstant698, 0, 1, 1, 1);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume Irp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 658} SLIC_PoCallDriver_entry(0);
    goto L191;

  L191:
    call {:si_unique_call 659} vslice_dummy_var_93 := PoCallDriver(0, Irp_11);
    status_30 := 259;
    goto L66;

  anon81_Then:
    assume !(Irp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L191;

  anon74_Then:
    call {:si_unique_call 660} PoStartNextPowerIrp(0);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume Irp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 661} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L194;

  L194:
    call {:si_unique_call 662} sdv_IoSkipCurrentIrpStackLocation(Irp_11);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume Irp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 663} SLIC_PoCallDriver_entry(0);
    goto L197;

  L197:
    call {:si_unique_call 664} status_30 := PoCallDriver(0, Irp_11);
    goto L66;

  anon83_Then:
    assume !(Irp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L197;

  anon82_Then:
    assume !(Irp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L194;

  anon75_Then:
    goto L94;

  anon90_Then:
    goto L94;

  anon89_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L94;

  anon63_Then:
    assume {:partition} powerType_1 != 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} powerType_1 == 1;
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc newDeviceState_1;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1127;
    assume {:nonnull} Tmp_1127 != 0;
    assume Tmp_1127 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    Tmp_1124 := newDeviceState_1 - 1;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1141;
    havoc Tmp_1122;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1123;
    call {:si_unique_call 665} WPP_SF_qDDq(Tmp_1123, 32, Tmp_1122, fdoExtension_3, Tmp_1141, Tmp_1124, Irp_11);
    goto L37;

  L37:
    call {:si_unique_call 666} sdv_IoMarkIrpPending(0);
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 667} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_11);
    call {:si_unique_call 668} sdv_IoSetCompletionRoutine(Irp_11, li2bplFunctionConstant700, 0, 1, 1, 1);
    goto L59;

  L59:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume Irp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 669} SLIC_PoCallDriver_entry(0);
    goto L185;

  L185:
    call {:si_unique_call 670} vslice_dummy_var_92 := PoCallDriver(0, Irp_11);
    status_30 := 259;
    goto L66;

  anon69_Then:
    assume !(Irp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L185;

  anon68_Then:
    call {:si_unique_call 671} PoStartNextPowerIrp(0);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume Irp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 672} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L188;

  L188:
    call {:si_unique_call 673} sdv_IoSkipCurrentIrpStackLocation(Irp_11);
    goto L59;

  anon73_Then:
    assume !(Irp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L188;

  anon67_Then:
    goto L37;

  anon87_Then:
    goto L37;

  anon86_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L37;

  anon66_Then:
    assume {:partition} powerType_1 != 1;
    status_30 := -1073741822;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_11))] := status_30;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    call {:si_unique_call 674} PoStartNextPowerIrp(0);
    call {:si_unique_call 675} sdv_IoCompleteRequest(0, 0);
    goto L66;

  anon65_Then:
    assume {:partition} powerType_1 == 0;
    Tmp_1140 := strConst__li2bpl7;
    goto L23;

  anon64_Then:
    goto L17;

  anon85_Then:
    goto L17;

  anon84_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L17;
}



procedure {:origName "Sbp2PdoCompletePowerIrp"} Sbp2PdoCompletePowerIrp(actual_DeviceObject_15: int, actual_Irp_12: int);
  modifies alloc, sdv_irql_current, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2PdoCompletePowerIrp"} Sbp2PdoCompletePowerIrp(actual_DeviceObject_15: int, actual_Irp_12: int)
{
  var {:pointer} irpStack_5: int;
  var {:scalar} powerType_2: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} Irp_12: int;
  var vslice_dummy_var_94: int;

  anon0:
    call {:si_unique_call 676} vslice_dummy_var_94 := __HAVOC_malloc(4);
    DeviceObject_15 := actual_DeviceObject_15;
    Irp_12 := actual_Irp_12;
    call {:si_unique_call 677} irpStack_5 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    havoc powerType_2;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} powerType_2 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} powerType_2 == 1;
    call {:si_unique_call 678} Sbp2PdoCompleteDevicePowerIrp(DeviceObject_15, Irp_12);
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} powerType_2 != 1;
    call {:si_unique_call 679} PoStartNextPowerIrp(0);
    call {:si_unique_call 680} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon6_Then:
    assume {:partition} powerType_2 == 0;
    call {:si_unique_call 681} Sbp2PdoCompleteSystemPowerIrp(DeviceObject_15, Irp_12);
    goto L1;
}



procedure {:origName "WPP_SF_qsq"} WPP_SF_qsq(actual_Logger_9: int, actual_id_9: int, actual_TraceGuid_9: int, actual_s_p_e_c_i_a_l_39: int, actual_s_p_e_c_i_a_l_40: int, actual_s_p_e_c_i_a_l_41: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qsq"} WPP_SF_qsq(actual_Logger_9: int, actual_id_9: int, actual_TraceGuid_9: int, actual_s_p_e_c_i_a_l_39: int, actual_s_p_e_c_i_a_l_40: int, actual_s_p_e_c_i_a_l_41: int)
{
  var {:scalar} sdv_368: int;
  var {:pointer} TraceGuid_9: int;
  var {:pointer} s_p_e_c_i_a_l_40: int;
  var vslice_dummy_var_95: int;

  anon0:
    call {:si_unique_call 682} vslice_dummy_var_95 := __HAVOC_malloc(4);
    TraceGuid_9 := actual_TraceGuid_9;
    s_p_e_c_i_a_l_40 := actual_s_p_e_c_i_a_l_40;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_40 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_40 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_40 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_40 == 0;
    goto L9;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var {:scalar} Tmp_1152: int;
  var vslice_dummy_var_96: int;

  anon0:
    call {:si_unique_call 683} Tmp_1152 := __HAVOC_malloc(4);
    call {:si_unique_call 684} vslice_dummy_var_96 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1152 != 0;
    assume Tmp_1152 > 0;
    return;
}



procedure {:origName "WPP_SF_qDDqD"} WPP_SF_qDDqD(actual_Logger_10: int, actual_id_10: int, actual_TraceGuid_10: int, actual_s_p_e_c_i_a_l_42: int, actual_s_p_e_c_i_a_l_43: int, actual_s_p_e_c_i_a_l_44: int, actual_s_p_e_c_i_a_l_45: int, actual_s_p_e_c_i_a_l_46: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qDDqD"} WPP_SF_qDDqD(actual_Logger_10: int, actual_id_10: int, actual_TraceGuid_10: int, actual_s_p_e_c_i_a_l_42: int, actual_s_p_e_c_i_a_l_43: int, actual_s_p_e_c_i_a_l_44: int, actual_s_p_e_c_i_a_l_45: int, actual_s_p_e_c_i_a_l_46: int)
{
  var {:pointer} TraceGuid_10: int;
  var vslice_dummy_var_97: int;

  anon0:
    call {:si_unique_call 685} vslice_dummy_var_97 := __HAVOC_malloc(4);
    TraceGuid_10 := actual_TraceGuid_10;
    return;
}



procedure {:origName "WPP_SF_qsqD"} WPP_SF_qsqD(actual_Logger_11: int, actual_id_11: int, actual_TraceGuid_11: int, actual_s_p_e_c_i_a_l_47: int, actual_s_p_e_c_i_a_l_48: int, actual_s_p_e_c_i_a_l_49: int, actual_s_p_e_c_i_a_l_50: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qsqD"} WPP_SF_qsqD(actual_Logger_11: int, actual_id_11: int, actual_TraceGuid_11: int, actual_s_p_e_c_i_a_l_47: int, actual_s_p_e_c_i_a_l_48: int, actual_s_p_e_c_i_a_l_49: int, actual_s_p_e_c_i_a_l_50: int)
{
  var {:scalar} sdv_371: int;
  var {:pointer} TraceGuid_11: int;
  var {:pointer} s_p_e_c_i_a_l_48: int;
  var vslice_dummy_var_98: int;

  anon0:
    call {:si_unique_call 686} vslice_dummy_var_98 := __HAVOC_malloc(4);
    TraceGuid_11 := actual_TraceGuid_11;
    s_p_e_c_i_a_l_48 := actual_s_p_e_c_i_a_l_48;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_48 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_48 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_48 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_48 == 0;
    goto L9;
}



procedure {:origName "WPP_SF_qssd"} WPP_SF_qssd(actual_Logger_12: int, actual_id_12: int, actual_TraceGuid_12: int, actual_s_p_e_c_i_a_l_51: int, actual_s_p_e_c_i_a_l_52: int, actual_s_p_e_c_i_a_l_53: int, actual_s_p_e_c_i_a_l_54: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qssd"} WPP_SF_qssd(actual_Logger_12: int, actual_id_12: int, actual_TraceGuid_12: int, actual_s_p_e_c_i_a_l_51: int, actual_s_p_e_c_i_a_l_52: int, actual_s_p_e_c_i_a_l_53: int, actual_s_p_e_c_i_a_l_54: int)
{
  var {:scalar} sdv_373: int;
  var {:scalar} sdv_374: int;
  var {:pointer} TraceGuid_12: int;
  var {:pointer} s_p_e_c_i_a_l_52: int;
  var {:pointer} s_p_e_c_i_a_l_53: int;
  var vslice_dummy_var_99: int;

  anon0:
    call {:si_unique_call 687} vslice_dummy_var_99 := __HAVOC_malloc(4);
    TraceGuid_12 := actual_TraceGuid_12;
    s_p_e_c_i_a_l_52 := actual_s_p_e_c_i_a_l_52;
    s_p_e_c_i_a_l_53 := actual_s_p_e_c_i_a_l_53;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_53 != 0;
    goto L9;

  L9:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} s_p_e_c_i_a_l_53 != 0;
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_52 != 0;
    goto L18;

  L18:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} s_p_e_c_i_a_l_52 != 0;
    goto L21;

  L21:
    return;

  anon12_Then:
    assume {:partition} s_p_e_c_i_a_l_52 == 0;
    goto L21;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_52 == 0;
    goto L18;

  anon10_Then:
    assume {:partition} s_p_e_c_i_a_l_53 == 0;
    goto L12;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_53 == 0;
    goto L9;
}



procedure {:origName "Sbp2SetPowerState"} Sbp2SetPowerState(actual_DeviceObject_16: int, actual_Type_3: int, actual_structPtr888NewState: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2SetPowerState"} Sbp2SetPowerState(actual_DeviceObject_16: int, actual_Type_3: int, actual_structPtr888NewState: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:scalar} NewState: int;
  var {:pointer} Tmp_1170: int;
  var {:pointer} Tmp_1171: int;
  var {:pointer} devExt: int;
  var {:scalar} sdv: int;
  var {:scalar} Tmp_1172: int;
  var {:pointer} Tmp_1174: int;
  var {:scalar} Tmp_1175: int;
  var {:pointer} Tmp_1177: int;
  var {:pointer} DeviceObject_16: int;
  var {:scalar} Type_3: int;
  var {:pointer} structPtr888NewState: int;
  var vslice_dummy_var_100: int;

  anon0:
    call {:si_unique_call 688} NewState := __HAVOC_malloc(8);
    call {:si_unique_call 689} sdv := __HAVOC_malloc(8);
    call {:si_unique_call 690} vslice_dummy_var_100 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    Type_3 := actual_Type_3;
    structPtr888NewState := actual_structPtr888NewState;
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    assume {:nonnull} structPtr888NewState != 0;
    assume structPtr888NewState > 0;
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    assume {:nonnull} structPtr888NewState != 0;
    assume structPtr888NewState > 0;
    call {:si_unique_call 691} Tmp_1174 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc devExt;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1174;
    assume {:nonnull} Tmp_1174 != 0;
    assume Tmp_1174 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    havoc Tmp_1175;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Type_3 != 0;
    Tmp_1171 := strConst__li2bpl8;
    goto L18;

  L18:
    assume {:nonnull} devExt != 0;
    assume devExt > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1177 := strConst__li2bpl10;
    goto L21;

  L21:
    havoc Tmp_1170;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1172;
    call {:si_unique_call 692} WPP_SF_qssd(Tmp_1172, 10, Tmp_1170, devExt, Tmp_1177, Tmp_1171, Tmp_1175);
    goto L9;

  L9:
    call {:si_unique_call 693} structPtr888sdv := PoSetPowerState(0, Type_3, NewState);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    return;

  anon12_Then:
    Tmp_1177 := strConst__li2bpl9;
    goto L21;

  anon15_Then:
    assume {:partition} Type_3 == 0;
    Tmp_1171 := strConst__li2bpl7;
    goto L18;

  anon11_Then:
    goto L9;

  anon14_Then:
    goto L9;

  anon13_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L9;
}



procedure {:origName "Sbp2PdoCompleteDevicePowerIrp"} Sbp2PdoCompleteDevicePowerIrp(actual_DeviceObject_17: int, actual_Irp_13: int);
  modifies alloc, sdv_irql_current, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2PdoCompleteDevicePowerIrp"} Sbp2PdoCompleteDevicePowerIrp(actual_DeviceObject_17: int, actual_Irp_13: int)
{
  var {:pointer} irpStack_6: int;
  var {:scalar} Tmp_1178: int;
  var {:pointer} Tmp_1179: int;
  var {:pointer} pdoExtension_8: int;
  var {:pointer} Tmp_1180: int;
  var {:pointer} Tmp_1181: int;
  var {:scalar} newPowerState_3: int;
  var {:scalar} newDeviceState_2: int;
  var {:pointer} Tmp_1183: int;
  var {:scalar} cIrql_4: int;
  var {:scalar} status_31: int;
  var {:pointer} DeviceObject_17: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_2788: int;

  anon0:
    call {:si_unique_call 694} newPowerState_3 := __HAVOC_malloc(8);
    call {:si_unique_call 695} vslice_dummy_var_101 := __HAVOC_malloc(4);
    DeviceObject_17 := actual_DeviceObject_17;
    Irp_13 := actual_Irp_13;
    call {:si_unique_call 696} Tmp_1183 := __HAVOC_malloc(4);
    call {:si_unique_call 697} irpStack_6 := sdv_IoGetCurrentIrpStackLocation(Irp_13);
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    havoc pdoExtension_8;
    assume {:nonnull} irpStack_6 != 0;
    assume irpStack_6 > 0;
    havoc newDeviceState_2;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    status_31 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_13))];
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1183;
    assume {:nonnull} Tmp_1183 != 0;
    assume Tmp_1183 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    havoc Tmp_1180;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1178;
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    havoc vslice_dummy_var_2788;
    call {:si_unique_call 698} WPP_SF_qqDD(Tmp_1178, 12, Tmp_1180, pdoExtension_8, Irp_13, status_31, vslice_dummy_var_2788);
    goto L20;

  L20:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_31 != -1073741810;
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} newPowerState_3 != 0;
    assume newPowerState_3 > 0;
    call {:si_unique_call 699} Sbp2SetPowerState(DeviceObject_17, 1, newPowerState_3);
    goto L28;

  L28:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} newDeviceState_2 == 1;
    call {:si_unique_call 700} Tmp_1179 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1179 != 0;
    assume Tmp_1179 > 0;
    call {:si_unique_call 701} sdv_KeAcquireSpinLock(0, Tmp_1179);
    assume {:nonnull} Tmp_1179 != 0;
    assume Tmp_1179 > 0;
    havoc cIrql_4;
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    havoc Tmp_1181;
    assume {:nonnull} Tmp_1181 != 0;
    assume Tmp_1181 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto L44;

  L44:
    call {:si_unique_call 702} sdv_KeReleaseSpinLock(0, cIrql_4);
    goto L37;

  L37:
    call {:si_unique_call 703} PoStartNextPowerIrp(0);
    call {:si_unique_call 704} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    call {:si_unique_call 705} vslice_dummy_var_102 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_8), Irp_13);
    return;

  anon24_Then:
    goto L44;

  anon23_Then:
    assume {:partition} newDeviceState_2 != 1;
    goto L37;

  anon20_Then:
    goto L28;

  anon19_Then:
    assume {:partition} status_31 == -1073741810;
    goto L28;

  anon17_Then:
    goto L28;

  anon18_Then:
    goto L20;

  anon22_Then:
    goto L20;

  anon21_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L20;
}



procedure {:origName "WPP_SF_qDDq"} WPP_SF_qDDq(actual_Logger_13: int, actual_id_13: int, actual_TraceGuid_13: int, actual_s_p_e_c_i_a_l_55: int, actual_s_p_e_c_i_a_l_56: int, actual_s_p_e_c_i_a_l_57: int, actual_s_p_e_c_i_a_l_58: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qDDq"} WPP_SF_qDDq(actual_Logger_13: int, actual_id_13: int, actual_TraceGuid_13: int, actual_s_p_e_c_i_a_l_55: int, actual_s_p_e_c_i_a_l_56: int, actual_s_p_e_c_i_a_l_57: int, actual_s_p_e_c_i_a_l_58: int)
{
  var {:pointer} TraceGuid_13: int;
  var vslice_dummy_var_103: int;

  anon0:
    call {:si_unique_call 706} vslice_dummy_var_103 := __HAVOC_malloc(4);
    TraceGuid_13 := actual_TraceGuid_13;
    return;
}



procedure {:origName "Sbp2SetDeferLoginTimer"} Sbp2SetDeferLoginTimer(actual_PdoExtension_14: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2SetDeferLoginTimer"} Sbp2SetDeferLoginTimer(actual_PdoExtension_14: int)
{
  var {:scalar} Tmp_1189: int;
  var {:scalar} dueTime_1: int;
  var {:pointer} Tmp_1191: int;
  var {:pointer} Tmp_1192: int;
  var {:pointer} PdoExtension_14: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_2789: int;

  anon0:
    call {:si_unique_call 707} vslice_dummy_var_104 := __HAVOC_malloc(4);
    PdoExtension_14 := actual_PdoExtension_14;
    call {:si_unique_call 708} Tmp_1192 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    dueTime_1 := 1;
    goto L9;

  L9:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1192;
    assume {:nonnull} Tmp_1192 != 0;
    assume Tmp_1192 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    havoc Tmp_1191;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1189;
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    havoc vslice_dummy_var_2789;
    call {:si_unique_call 709} WPP_SF_qD(Tmp_1189, 27, Tmp_1191, PdoExtension_14, vslice_dummy_var_2789);
    goto L14;

  L14:
    call {:si_unique_call 710} Sbp2AddLog(PdoExtension_14, 64, -999919028, 0, 0);
    call {:si_unique_call 711} Sbp2SetManagementTimer(PdoExtension_14, dueTime_1);
    goto L1;

  L1:
    return;

  anon13_Then:
    goto L14;

  anon15_Then:
    goto L14;

  anon14_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L14;

  anon12_Then:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    call {:si_unique_call 712} dueTime_1 := corral_nondet();
    goto L9;

  anon11_Then:
    goto L1;
}



procedure {:origName "CheckStatusResponseValue"} CheckStatusResponseValue(actual_StatusBlock: int) returns (Tmp_1195: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1195 == -1073741275 || Tmp_1195 == -1073741649 || Tmp_1195 == -1073741823 || Tmp_1195 == -1073741503 || Tmp_1195 == -1073741811 || Tmp_1195 == 17 || Tmp_1195 == -1073741434 || Tmp_1195 == -1073741248 || Tmp_1195 == -1073741292 || Tmp_1195 == -1073741670 || Tmp_1195 == -1073741790 || Tmp_1195 == -1073741637 || Tmp_1195 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CheckStatusResponseValue"} CheckStatusResponseValue(actual_StatusBlock: int) returns (Tmp_1195: int)
{
  var {:scalar} Tmp_1196: int;
  var {:pointer} Tmp_1197: int;
  var {:scalar} resp: int;
  var {:scalar} Tmp_1198: int;
  var {:scalar} Tmp_1199: int;
  var {:scalar} status_32: int;
  var {:scalar} Tmp_1202: int;
  var {:pointer} Tmp_1203: int;
  var {:scalar} statusFlags: int;
  var {:pointer} StatusBlock: int;

  anon0:
    StatusBlock := actual_StatusBlock;
    call {:si_unique_call 713} Tmp_1203 := __HAVOC_malloc(4);
    assume {:nonnull} StatusBlock != 0;
    assume StatusBlock > 0;
    havoc statusFlags;
    Tmp_1199 := BAND(statusFlags, BOR(16384, 32768));
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} 32768 == Tmp_1199;
    Tmp_1195 := -1073741275;
    goto L1;

  L1:
    return;

  anon78_Then:
    assume {:partition} 32768 != Tmp_1199;
    call {:si_unique_call 714} resp := corral_nondet();
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} resp != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} resp != 1;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} resp == 2;
    status_32 := -1073741649;
    goto L18;

  L18:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} status_32 != 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1203;
    assume {:nonnull} Tmp_1203 != 0;
    assume Tmp_1203 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_1202 := statusFlags;
    Tmp_1198 := resp;
    havoc Tmp_1197;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1196;
    call {:si_unique_call 715} WPP_SF_DD(Tmp_1196, 23, Tmp_1197, Tmp_1198, Tmp_1202);
    goto L19;

  L19:
    Tmp_1195 := status_32;
    goto L1;

  anon58_Then:
    goto L19;

  anon80_Then:
    goto L19;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L19;

  anon56_Then:
    assume {:partition} status_32 == 0;
    goto L19;

  anon59_Then:
    assume {:partition} resp != 2;
    status_32 := -1073741823;
    goto L18;

  anon60_Then:
    assume {:partition} resp == 1;
    resp := BAND(statusFlags, BOR(BOR(BOR(1, 2), 4), 8));
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} resp != 2;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} resp != 4;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} resp != 5;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} resp != 6;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} resp != 12;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} resp != 13;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} resp != 14;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} resp == 15;
    status_32 := -1073741503;
    goto L18;

  anon71_Then:
    assume {:partition} resp != 15;
    status_32 := -1073741823;
    goto L18;

  anon72_Then:
    assume {:partition} resp == 14;
    status_32 := -1073741811;
    goto L18;

  anon73_Then:
    assume {:partition} resp == 13;
    goto L35;

  L35:
    status_32 := -1073741434;
    goto L18;

  anon74_Then:
    assume {:partition} resp == 12;
    goto L35;

  anon75_Then:
    assume {:partition} resp == 6;
    goto L36;

  L36:
    status_32 := 17;
    goto L18;

  anon76_Then:
    assume {:partition} resp == 5;
    goto L36;

  anon77_Then:
    assume {:partition} resp == 4;
    goto L36;

  anon81_Then:
    assume {:partition} resp == 2;
    goto L35;

  anon79_Then:
    assume {:partition} resp == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(statusFlags, 255) != 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(statusFlags, 255) != 1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(statusFlags, 255) != 2;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BAND(statusFlags, 255) != 3;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(statusFlags, 255) != 4;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} BAND(statusFlags, 255) != 5;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(statusFlags, 255) != 8;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} BAND(statusFlags, 255) != 9;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(statusFlags, 255) != 10;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(statusFlags, 255) != 11;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} BAND(statusFlags, 255) == 12;
    status_32 := -1073741248;
    goto L18;

  anon61_Then:
    assume {:partition} BAND(statusFlags, 255) != 12;
    status_32 := -1073741823;
    goto L18;

  anon62_Then:
    assume {:partition} BAND(statusFlags, 255) == 11;
    goto L46;

  L46:
    status_32 := 0;
    goto L18;

  anon63_Then:
    assume {:partition} BAND(statusFlags, 255) == 10;
    status_32 := -1073741292;
    goto L18;

  anon64_Then:
    assume {:partition} BAND(statusFlags, 255) == 9;
    status_32 := -1073741649;
    goto L18;

  anon65_Then:
    assume {:partition} BAND(statusFlags, 255) == 8;
    status_32 := -1073741670;
    goto L18;

  anon66_Then:
    assume {:partition} BAND(statusFlags, 255) == 5;
    goto L48;

  L48:
    status_32 := -1073741790;
    goto L18;

  anon67_Then:
    assume {:partition} BAND(statusFlags, 255) == 4;
    goto L48;

  anon68_Then:
    assume {:partition} BAND(statusFlags, 255) == 3;
    goto L47;

  L47:
    status_32 := -1073741637;
    goto L18;

  anon69_Then:
    assume {:partition} BAND(statusFlags, 255) == 2;
    goto L47;

  anon70_Then:
    assume {:partition} BAND(statusFlags, 255) == 1;
    goto L47;

  anon55_Then:
    assume {:partition} BAND(statusFlags, 255) == 0;
    goto L46;
}



procedure {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension: int, actual_Context_3: int);
  modifies alloc, sdv_irql_current, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension: int, actual_Context_3: int)
{
  var {:pointer} Tmp_1204: int;
  var {:pointer} Tmp_1205: int;
  var {:pointer} Tmp_1206: int;
  var {:pointer} Tmp_1207: int;
  var {:pointer} Tmp_1208: int;
  var {:pointer} Tmp_1209: int;
  var {:scalar} Tmp_1210: int;
  var {:scalar} routine: int;
  var {:scalar} cIrql_5: int;
  var {:pointer} Tmp_1211: int;
  var {:pointer} packet_8: int;
  var {:scalar} status_33: int;
  var {:pointer} Tmp_1212: int;
  var {:pointer} Tmp_1214: int;
  var {:pointer} DeviceExtension: int;
  var {:pointer} Context_3: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_2790: int;

  anon0:
    call {:si_unique_call 716} packet_8 := __HAVOC_malloc(4);
    call {:si_unique_call 717} vslice_dummy_var_105 := __HAVOC_malloc(4);
    DeviceExtension := actual_DeviceExtension;
    Context_3 := actual_Context_3;
    call {:si_unique_call 718} Tmp_1212 := __HAVOC_malloc(4);
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 719} AllocateIrpAndIrb(DeviceExtension, packet_8);
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_8] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1214;
    assume {:nonnull} Tmp_1214 != 0;
    assume Tmp_1214 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1208;
    assume {:nonnull} Tmp_1208 != 0;
    assume Tmp_1208 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1211;
    assume {:nonnull} Tmp_1211 != 0;
    assume Tmp_1211 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1206;
    assume {:nonnull} Tmp_1206 != 0;
    assume Tmp_1206 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1207;
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    assume {:nonnull} Tmp_1207 != 0;
    assume Tmp_1207 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1209;
    assume {:nonnull} Tmp_1209 != 0;
    assume Tmp_1209 > 0;
    call {:si_unique_call 720} Tmp_1205 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1205 != 0;
    assume Tmp_1205 > 0;
    call {:si_unique_call 721} sdv_KeRaiseIrql(2, Tmp_1205);
    assume {:nonnull} Tmp_1205 != 0;
    assume Tmp_1205 > 0;
    havoc cIrql_5;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc routine;
    assume routine == 0;
    call {:si_unique_call 722} sdv_KeLowerIrql(cIrql_5);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_33 < 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1212;
    assume {:nonnull} Tmp_1212 != 0;
    assume Tmp_1212 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1204;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1210;
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    havoc vslice_dummy_var_2790;
    call {:si_unique_call 723} WPP_SF_qD(Tmp_1210, 15, Tmp_1204, vslice_dummy_var_2790, status_33);
    goto L35;

  L35:
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 724} IoFreeMdl(0);
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    goto L36;

  L36:
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    call {:si_unique_call 725} DeAllocateIrpAndIrb(DeviceExtension, Mem_T.P_IRBIRP[packet_8]);
    goto L1;

  L1:
    return;

  anon18_Then:
    goto L36;

  anon20_Then:
    goto L35;

  anon21_Then:
    goto L35;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L35;

  anon17_Then:
    assume {:partition} 0 <= status_33;
    goto L35;

  anon16_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_8] == 0;
    goto L1;

  anon15_Then:
    goto L1;
}



procedure {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_1215: int);
  modifies alloc, sdv_irql_current;
  free ensures {:va_keep} Tmp_1215 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_1215: int)
{
  var {:pointer} nextEntry: int;
  var {:pointer} queueEntry: int;
  var {:scalar} sdv_383: int;
  var {:pointer} sdv_384: int;
  var {:pointer} sdv_386: int;
  var {:pointer} DeviceQueue: int;
  var {:scalar} SortKey: int;
  var vslice_dummy_var_106: int;

  anon0:
    DeviceQueue := actual_DeviceQueue;
    SortKey := actual_SortKey;
    queueEntry := 0;
    call {:si_unique_call 726} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 727} sdv_383 := sdv_IsListEmpty(0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_383 != 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    queueEntry := 0;
    goto L18;

  L18:
    call {:si_unique_call 728} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_1215 := queueEntry;
    return;

  anon12_Then:
    assume {:partition} sdv_383 == 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    havoc nextEntry;
    goto L22;

  L22:
    call {:si_unique_call 729} nextEntry, queueEntry, sdv_384 := Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(nextEntry, queueEntry, sdv_384, SortKey);
    goto L22_last;

  L22_last:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 730} sdv_384 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_384;
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} nextEntry != 0;
    assume nextEntry > 0;
    havoc nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    goto L23;

  L23:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 731} vslice_dummy_var_106 := sdv_RemoveEntryList(0);
    goto L37;

  L37:
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto L18;

  anon14_Then:
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    call {:si_unique_call 732} nextEntry := RemoveHeadList(DeviceListHead__KDEVICE_QUEUE(DeviceQueue));
    call {:si_unique_call 733} sdv_386 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_386;
    goto L37;

  anon13_Then:
    goto L23;

  anon11_Then:
    queueEntry := 0;
    goto L18;
}



procedure {:origName "ReleaseOrbListLock"} ReleaseOrbListLock(actual_DeviceExtension_1: int, actual_orbLock_4: int, actual_fFromDpcLevel: int);
  modifies alloc, sdv_irql_current, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ReleaseOrbListLock"} ReleaseOrbListLock(actual_DeviceExtension_1: int, actual_orbLock_4: int, actual_fFromDpcLevel: int)
{
  var {:pointer} currThread: int;
  var {:pointer} DeviceExtension_1: int;
  var {:scalar} fFromDpcLevel: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_2791: int;
  var vslice_dummy_var_2792: int;
  var vslice_dummy_var_2793: int;

  anon0:
    call {:si_unique_call 734} vslice_dummy_var_107 := __HAVOC_malloc(4);
    DeviceExtension_1 := actual_DeviceExtension_1;
    fFromDpcLevel := actual_fFromDpcLevel;
    call {:si_unique_call 735} currThread := sdv_KeGetCurrentThread();
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_2791;
    call {:si_unique_call 736} Sbp2AddLog(DeviceExtension_1, 256, -982751918, currThread, vslice_dummy_var_2791);
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_2792;
    call {:si_unique_call 737} Sbp2AddLog(DeviceExtension_1, 256, 543974738, currThread, vslice_dummy_var_2792);
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} fFromDpcLevel != 0;
    call {:si_unique_call 738} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L12;

  L12:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_2793;
    call {:si_unique_call 739} Sbp2AddLog(DeviceExtension_1, 256, -663984814, currThread, vslice_dummy_var_2793);
    return;

  anon9_Then:
    assume {:partition} fFromDpcLevel == 0;
    call {:si_unique_call 740} KeReleaseInStackQueuedSpinLock(0);
    goto L12;

  anon8_Then:
    goto L12;

  anon7_Then:
    goto L12;
}



procedure {:origName "Sbp2SetManagementTimer"} Sbp2SetManagementTimer(actual_PdoExtension_15: int, actual_DueTime_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2SetManagementTimer"} Sbp2SetManagementTimer(actual_PdoExtension_15: int, actual_DueTime_1: int)
{
  var {:scalar} Tmp_1219: int;
  var {:pointer} Tmp_1220: int;
  var {:pointer} Tmp_1222: int;
  var {:pointer} Tmp_1223: int;
  var {:scalar} Tmp_1225: int;
  var {:scalar} dueTime_2: int;
  var {:pointer} Tmp_1226: int;
  var {:pointer} PdoExtension_15: int;
  var {:scalar} DueTime_1: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_2794: int;

  anon0:
    call {:si_unique_call 741} vslice_dummy_var_108 := __HAVOC_malloc(4);
    call {:si_unique_call 742} dueTime_2 := __HAVOC_malloc(20);
    PdoExtension_15 := actual_PdoExtension_15;
    DueTime_1 := actual_DueTime_1;
    call {:si_unique_call 743} Tmp_1226 := __HAVOC_malloc(4);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} DueTime_1 != 0;
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;

  L10:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1226;
    assume {:nonnull} Tmp_1226 != 0;
    assume Tmp_1226 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    havoc Tmp_1225;
    havoc Tmp_1222;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1219;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc vslice_dummy_var_2794;
    call {:si_unique_call 744} WPP_SF_qDd(Tmp_1219, 26, Tmp_1222, PdoExtension_15, vslice_dummy_var_2794, Tmp_1225);
    goto L11;

  L11:
    call {:si_unique_call 745} Sbp2AddLog(PdoExtension_15, 64, -848007822, DueTime_1, 0);
    call {:si_unique_call 746} vslice_dummy_var_109 := KeSetTimer(0, dueTime_2, 0);
    return;

  anon13_Then:
    goto L11;

  anon14_Then:
    goto L11;

  anon12_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L11;

  anon11_Then:
    assume {:partition} DueTime_1 == 0;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_1223;
    assume {:nonnull} Tmp_1223 != 0;
    assume Tmp_1223 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_1220;
    assume {:nonnull} Tmp_1220 != 0;
    assume Tmp_1220 > 0;
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;

  anon15_Then:
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;
}



procedure {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_2: int, actual_Context_4: int) returns (Tmp_1227: int);
  modifies alloc, sdv_irql_current, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_2: int, actual_Context_4: int) returns (Tmp_1227: int)
{
  var {:pointer} Tmp_1228: int;
  var {:scalar} sdv_391: int;
  var {:pointer} Tmp_1229: int;
  var {:pointer} Tmp_1230: int;
  var {:scalar} Tmp_1231: int;
  var {:pointer} Tmp_1232: int;
  var {:scalar} Tmp_1233: int;
  var {:pointer} Tmp_1234: int;
  var {:pointer} DeviceExtension_2: int;
  var {:pointer} Context_4: int;
  var vslice_dummy_var_110: int;

  anon0:
    DeviceExtension_2 := actual_DeviceExtension_2;
    Context_4 := actual_Context_4;
    call {:si_unique_call 747} Tmp_1229 := __HAVOC_malloc(4);
    call {:si_unique_call 748} Tmp_1230 := __HAVOC_malloc(4);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Context_4 == 0;
    goto L37;

  L37:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1229;
    assume {:nonnull} Tmp_1229 != 0;
    assume Tmp_1229 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1234;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1231;
    call {:si_unique_call 749} WPP_SF_q(Tmp_1231, 16, Tmp_1234, Context_4);
    goto L38;

  L38:
    Tmp_1227 := 0;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto L38;

  anon28_Then:
    goto L38;

  anon26_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L38;

  anon21_Then:
    assume {:partition} Context_4 != 0;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L37;

  anon22_Then:
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 750} Free1394DataMapping(DeviceExtension_2, Context_4);
    goto L9;

  L9:
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L22;

  L22:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1230;
    assume {:nonnull} Tmp_1230 != 0;
    assume Tmp_1230 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_1228;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1233;
    call {:si_unique_call 751} WPP_SF_q(Tmp_1233, 17, Tmp_1228, Context_4);
    goto L23;

  L23:
    call {:si_unique_call 752} vslice_dummy_var_110 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    call {:si_unique_call 753} Tmp_1232 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_2 != 0;
    assume DeviceExtension_2 > 0;
    assume {:nonnull} Tmp_1232 != 0;
    assume Tmp_1232 > 0;
    call {:si_unique_call 754} sdv_391 := sdv_InterlockedDecrement(Tmp_1232);
    assume {:nonnull} DeviceExtension_2 != 0;
    assume DeviceExtension_2 > 0;
    assume {:nonnull} Tmp_1232 != 0;
    assume Tmp_1232 > 0;
    Tmp_1227 := sdv_391;
    goto L1;

  anon25_Then:
    goto L23;

  anon30_Then:
    goto L23;

  anon24_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L23;

  anon29_Then:
    call {:si_unique_call 755} sdv_ExFreePool(0);
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    goto L22;

  anon23_Then:
    goto L9;
}



procedure {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject_1: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_1235: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1235 == -1073741811 || Tmp_1235 == -1073741823 || Tmp_1235 == 0 || Tmp_1235 == 5 || Tmp_1235 == -1073741789 || Tmp_1235 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject_1: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_1235: int)
{
  var {:pointer} Tmp_1236: int;
  var {:scalar} Tmp_1237: int;
  var {:pointer} RootHandle: int;
  var {:pointer} Tmp_1238: int;
  var {:scalar} ResultLength_1: int;
  var {:pointer} Tmp_1239: int;
  var {:scalar} Tmp_1240: int;
  var {:scalar} Tmp_1241: int;
  var {:pointer} Tmp_1242: int;
  var {:pointer} Tmp_1243: int;
  var {:pointer} Tmp_1244: int;
  var {:pointer} sdv_394: int;
  var {:pointer} sdv_395: int;
  var {:scalar} Tmp_1245: int;
  var {:scalar} KeyLength: int;
  var {:scalar} status_34: int;
  var {:scalar} uniTempName: int;
  var {:pointer} KeyInfo: int;
  var {:pointer} PhysicalDeviceObject_1: int;
  var {:pointer} DwData: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_2795: int;
  var vslice_dummy_var_2796: int;
  var vslice_dummy_var_2797: int;

  anon0:
    call {:si_unique_call 756} uniTempName := __HAVOC_malloc(12);
    PhysicalDeviceObject_1 := actual_PhysicalDeviceObject_1;
    DwData := actual_DwData;
    call {:si_unique_call 757} Tmp_1238 := __HAVOC_malloc(4);
    call {:si_unique_call 758} Tmp_1244 := __HAVOC_malloc(4);
    status_34 := 0;
    RootHandle := 0;
    call {:si_unique_call 759} sdv_do_paged_code_check();
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 760} status_34 := IoOpenDeviceRegistryKey(0, 1, 131097, 0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_34 >= 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_1241;
    call {:si_unique_call 761} sdv_394 := ExAllocatePoolWithTag(512, Tmp_1241, 846226003);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    KeyLength := 20;
    call {:si_unique_call 762} sdv_395 := ExAllocatePoolWithTag(512, KeyLength, 846226003);
    KeyInfo := sdv_395;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} KeyInfo != 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_1240;
    call {:si_unique_call 763} sdv_RtlZeroMemory(0, Tmp_1240);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 764} vslice_dummy_var_112 := corral_nondet();
    call {:si_unique_call 765} Tmp_1242 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1242 != 0;
    assume Tmp_1242 > 0;
    call {:si_unique_call 766} status_34 := ZwQueryValueKey(0, 0, 2, 0, KeyLength, Tmp_1242);
    assume {:nonnull} Tmp_1242 != 0;
    assume Tmp_1242 > 0;
    havoc ResultLength_1;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_34 < 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1244;
    assume {:nonnull} Tmp_1244 != 0;
    assume Tmp_1244 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_1239;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1237;
    assume {:nonnull} PhysicalDeviceObject_1 != 0;
    assume PhysicalDeviceObject_1 > 0;
    havoc vslice_dummy_var_2795;
    call {:si_unique_call 767} WPP_SF_qD(Tmp_1237, 25, Tmp_1239, vslice_dummy_var_2795, status_34);
    goto L58;

  L58:
    call {:si_unique_call 768} sdv_ExFreePool(0);
    goto L68;

  L68:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} RootHandle != 0;
    call {:si_unique_call 769} vslice_dummy_var_111 := ZwClose(0);
    goto L69;

  L69:
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 770} sdv_ExFreePool(0);
    goto L73;

  L73:
    Tmp_1235 := status_34;
    return;

  anon29_Then:
    goto L73;

  anon28_Then:
    assume {:partition} RootHandle == 0;
    goto L69;

  anon31_Then:
    goto L58;

  anon36_Then:
    goto L58;

  anon30_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L58;

  anon26_Then:
    assume {:partition} 0 <= status_34;
    assume {:nonnull} KeyInfo != 0;
    assume KeyInfo > 0;
    Tmp_1243 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo);
    assume {:nonnull} DwData != 0;
    assume DwData > 0;
    assume {:nonnull} Tmp_1243 != 0;
    assume Tmp_1243 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1238;
    assume {:nonnull} Tmp_1238 != 0;
    assume Tmp_1238 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1236;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1245;
    assume {:nonnull} DwData != 0;
    assume DwData > 0;
    assume {:nonnull} PhysicalDeviceObject_1 != 0;
    assume PhysicalDeviceObject_1 > 0;
    havoc vslice_dummy_var_2796;
    havoc vslice_dummy_var_2797;
    call {:si_unique_call 771} WPP_SF_qD(Tmp_1245, 24, Tmp_1236, vslice_dummy_var_2796, vslice_dummy_var_2797);
    goto L58;

  anon27_Then:
    goto L58;

  anon35_Then:
    goto L58;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L58;

  anon33_Then:
    assume {:partition} KeyInfo == 0;
    status_34 := -1073741670;
    goto L68;

  anon32_Then:
    status_34 := -1073741670;
    goto L68;

  anon25_Then:
    assume {:partition} 0 > status_34;
    status_34 := -1073741670;
    goto L68;
}



procedure {:origName "AcquireOrbListLock"} AcquireOrbListLock(actual_DeviceExtension_3: int, actual_orbLock_5: int, actual_fFromDpcLevel_1: int);
  modifies alloc, sdv_irql_current, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 1 || locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "AcquireOrbListLock"} AcquireOrbListLock(actual_DeviceExtension_3: int, actual_orbLock_5: int, actual_fFromDpcLevel_1: int)
{
  var {:pointer} currThread_1: int;
  var {:pointer} prevOwner: int;
  var {:pointer} sdv_399: int;
  var {:pointer} sdv_400: int;
  var {:pointer} DeviceExtension_3: int;
  var {:scalar} fFromDpcLevel_1: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_2798: int;
  var vslice_dummy_var_2799: int;
  var vslice_dummy_var_2800: int;

  anon0:
    call {:si_unique_call 772} vslice_dummy_var_113 := __HAVOC_malloc(4);
    DeviceExtension_3 := actual_DeviceExtension_3;
    fFromDpcLevel_1 := actual_fFromDpcLevel_1;
    call {:si_unique_call 773} currThread_1 := sdv_KeGetCurrentThread();
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_2798;
    call {:si_unique_call 774} Sbp2AddLog(DeviceExtension_3, 256, -982424767, currThread_1, vslice_dummy_var_2798);
    goto L12;

  L12:
    call {:si_unique_call 775} prevOwner, sdv_399, sdv_400 := AcquireOrbListLock_loop_L12(currThread_1, prevOwner, sdv_399, sdv_400, DeviceExtension_3, fFromDpcLevel_1);
    goto L12_last;

  L12_last:
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 783} sdv_399 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(DeviceExtension_3), currThread_1, 0);
    prevOwner := sdv_399;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} prevOwner == currThread_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_2799;
    call {:si_unique_call 776} Sbp2AddLog(DeviceExtension_3, 256, 544301889, currThread_1, vslice_dummy_var_2799);
    goto L22;

  L22:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} prevOwner == currThread_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_2800;
    call {:si_unique_call 777} Sbp2AddLog(DeviceExtension_3, 256, -663657663, currThread_1, vslice_dummy_var_2800);
    return;

  anon14_Then:
    assume {:partition} prevOwner != currThread_1;
    goto anon14_Then_dummy;

  anon14_Then_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} prevOwner != currThread_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} fFromDpcLevel_1 != 0;
    call {:si_unique_call 778} KeAcquireInStackQueuedSpinLockAtDpcLevel(0, 0);
    goto L32;

  L32:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} prevOwner != 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 779} sdv_400 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(DeviceExtension_3), currThread_1, 0);
    prevOwner := sdv_400;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} prevOwner != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} fFromDpcLevel_1 != 0;
    call {:si_unique_call 780} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L22;

  anon16_Then:
    assume {:partition} fFromDpcLevel_1 == 0;
    call {:si_unique_call 781} KeReleaseInStackQueuedSpinLock(0);
    goto L22;

  anon18_Then:
    assume {:partition} prevOwner == 0;
    goto L22;

  anon15_Then:
    assume {:partition} prevOwner == 0;
    goto L22;

  anon13_Then:
    assume {:partition} fFromDpcLevel_1 == 0;
    call {:si_unique_call 782} KeAcquireInStackQueuedSpinLock(0, 0);
    goto L32;
}



procedure {:origName "WPP_SF_qqDq"} WPP_SF_qqDq(actual_Logger_14: int, actual_id_14: int, actual_TraceGuid_14: int, actual_s_p_e_c_i_a_l_59: int, actual_s_p_e_c_i_a_l_60: int, actual_s_p_e_c_i_a_l_61: int, actual_s_p_e_c_i_a_l_62: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qqDq"} WPP_SF_qqDq(actual_Logger_14: int, actual_id_14: int, actual_TraceGuid_14: int, actual_s_p_e_c_i_a_l_59: int, actual_s_p_e_c_i_a_l_60: int, actual_s_p_e_c_i_a_l_61: int, actual_s_p_e_c_i_a_l_62: int)
{
  var {:pointer} TraceGuid_14: int;
  var vslice_dummy_var_114: int;

  anon0:
    call {:si_unique_call 784} vslice_dummy_var_114 := __HAVOC_malloc(4);
    TraceGuid_14 := actual_TraceGuid_14;
    return;
}



procedure {:origName "Sbp2AddLog"} Sbp2AddLog(actual_PdoExt: int, actual_Mask: int, actual_Sig: int, actual_Data1: int, actual_Data2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2AddLog"} Sbp2AddLog(actual_PdoExt: int, actual_Mask: int, actual_Sig: int, actual_Data1: int, actual_Data2: int)
{
  var {:scalar} sdv_416: int;
  var {:pointer} logEntry: int;
  var {:scalar} sigRev: int;
  var {:scalar} index: int;
  var {:scalar} sig: int;
  var {:pointer} Tmp_1269: int;
  var {:pointer} log: int;
  var {:pointer} PdoExt: int;
  var {:scalar} Mask: int;
  var {:scalar} Sig: int;
  var {:scalar} Data1: int;
  var {:scalar} Data2: int;
  var vslice_dummy_var_115: int;

  anon0:
    call {:si_unique_call 785} sigRev := __HAVOC_malloc(20);
    call {:si_unique_call 786} sig := __HAVOC_malloc(20);
    call {:si_unique_call 787} vslice_dummy_var_115 := __HAVOC_malloc(4);
    PdoExt := actual_PdoExt;
    Mask := actual_Mask;
    Sig := actual_Sig;
    Data1 := actual_Data1;
    Data2 := actual_Data2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} BAND(Sbp2LogLevel, Mask) != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} PdoExt != 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    log := DbgLog__DEVICE_EXTENSION(PdoExt);
    call {:si_unique_call 788} Tmp_1269 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1269 != 0;
    assume Tmp_1269 > 0;
    assume {:nonnull} log != 0;
    assume log > 0;
    call {:si_unique_call 789} sdv_416 := sdv_InterlockedDecrement(Tmp_1269);
    assume {:nonnull} Tmp_1269 != 0;
    assume Tmp_1269 > 0;
    assume {:nonnull} log != 0;
    assume log > 0;
    index := sdv_416;
    assume {:nonnull} log != 0;
    assume log > 0;
    havoc index;
    assume {:nonnull} log != 0;
    assume log > 0;
    havoc logEntry;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    goto L1;

  anon8_Then:
    assume {:partition} PdoExt == 0;
    goto L1;

  anon7_Then:
    assume {:partition} BAND(Sbp2LogLevel, Mask) == 0;
    goto L1;
}



procedure {:origName "WPP_SF_DD"} WPP_SF_DD(actual_Logger_15: int, actual_id_15: int, actual_TraceGuid_15: int, actual_s_p_e_c_i_a_l_63: int, actual_s_p_e_c_i_a_l_64: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_DD"} WPP_SF_DD(actual_Logger_15: int, actual_id_15: int, actual_TraceGuid_15: int, actual_s_p_e_c_i_a_l_63: int, actual_s_p_e_c_i_a_l_64: int)
{
  var {:pointer} TraceGuid_15: int;
  var vslice_dummy_var_116: int;

  anon0:
    call {:si_unique_call 790} vslice_dummy_var_116 := __HAVOC_malloc(4);
    TraceGuid_15 := actual_TraceGuid_15;
    return;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var {:scalar} Tmp_1319: int;
  var vslice_dummy_var_117: int;

  anon0:
    call {:si_unique_call 791} vslice_dummy_var_117 := __HAVOC_malloc(4);
    call {:si_unique_call 792} Tmp_1319 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1319 != 0;
    assume Tmp_1319 > 0;
    return;
}



procedure {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_6: int, actual_Packet_1: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_6: int, actual_Packet_1: int)
{
  var {:pointer} pkt: int;
  var {:pointer} Tmp_1320: int;
  var {:scalar} Tmp_1321: int;
  var {:pointer} Tmp_1322: int;
  var {:pointer} sdv_429: int;
  var {:pointer} sdv_430: int;
  var {:pointer} sdv_431: int;
  var {:pointer} Tmp_1325: int;
  var {:pointer} Tmp_1326: int;
  var {:pointer} DeviceExtension_6: int;
  var {:pointer} Packet_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_2801: int;
  var vslice_dummy_var_2802: int;

  anon0:
    call {:si_unique_call 793} vslice_dummy_var_118 := __HAVOC_malloc(4);
    DeviceExtension_6 := actual_DeviceExtension_6;
    Packet_1 := actual_Packet_1;
    call {:si_unique_call 794} Tmp_1322 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 795} sdv_429 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    Mem_T.P_IRBIRP[Packet_1] := sdv_429;
    goto L10;

  L10:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.P_IRBIRP[Packet_1] == 0;
    call {:si_unique_call 796} sdv_430 := ExAllocatePoolWithTag(512, 24, -347053485);
    pkt := sdv_430;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} pkt != 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    call {:si_unique_call 797} sdv_431 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    Mem_T.Irp__IRBIRP[Irp__IRBIRP(pkt)] := 0;
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    havoc Tmp_1326;
    assume {:nonnull} Tmp_1326 != 0;
    assume Tmp_1326 > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    havoc vslice_dummy_var_2801;
    call {:si_unique_call 798} boogieTmp := IoAllocateIrp(vslice_dummy_var_2801, 0);
    Mem_T.Irp__IRBIRP[Irp__IRBIRP(pkt)] := boogieTmp;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.Irp__IRBIRP[Irp__IRBIRP(pkt)] != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1322;
    assume {:nonnull} Tmp_1322 != 0;
    assume Tmp_1322 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_1320 := strConst__li2bpl12;
    goto L46;

  L46:
    havoc Tmp_1325;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1321;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    havoc vslice_dummy_var_2802;
    call {:si_unique_call 799} WPP_SF_sqq(Tmp_1321, 10, Tmp_1325, Tmp_1320, Mem_T.Irp__IRBIRP[Irp__IRBIRP(pkt)], vslice_dummy_var_2802);
    goto L40;

  L40:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    Mem_T.P_IRBIRP[Packet_1] := pkt;
    goto L1;

  L1:
    return;

  anon24_Then:
    Tmp_1320 := strConst__li2bpl11;
    goto L46;

  anon23_Then:
    goto L40;

  anon27_Then:
    goto L40;

  anon22_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L40;

  anon21_Then:
    assume {:partition} Mem_T.Irp__IRBIRP[Irp__IRBIRP(pkt)] == 0;
    call {:si_unique_call 800} sdv_ExFreePool(0);
    call {:si_unique_call 801} sdv_ExFreePool(0);
    goto L1;

  anon26_Then:
    call {:si_unique_call 802} sdv_ExFreePool(0);
    goto L1;

  anon25_Then:
    assume {:partition} pkt == 0;
    goto L1;

  anon20_Then:
    assume {:partition} Mem_T.P_IRBIRP[Packet_1] != 0;
    goto L1;

  anon19_Then:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    Mem_T.P_IRBIRP[Packet_1] := 0;
    goto L10;
}



procedure {:origName "Sbp2QueueManagementWorkItem"} Sbp2QueueManagementWorkItem(actual_PdoExtension_18: int, actual_Action_1: int, actual_Generation_5: int) returns (Tmp_1327: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} Tmp_1327 == -1073741823 || Tmp_1327 == -1073741738 || Tmp_1327 == 0 || Tmp_1327 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2QueueManagementWorkItem"} Sbp2QueueManagementWorkItem(actual_PdoExtension_18: int, actual_Action_1: int, actual_Generation_5: int) returns (Tmp_1327: int)
{
  var {:pointer} Tmp_1328: int;
  var {:pointer} workItem: int;
  var {:scalar} Tmp_1330: int;
  var {:scalar} Tmp_1331: int;
  var {:pointer} sdv_434: int;
  var {:scalar} sdv_435: int;
  var {:pointer} Tmp_1332: int;
  var {:pointer} Tmp_1333: int;
  var {:scalar} status_38: int;
  var {:pointer} entry_1: int;
  var {:pointer} Tmp_1334: int;
  var {:pointer} PdoExtension_18: int;
  var {:scalar} Action_1: int;
  var {:scalar} Generation_5: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_2803: int;
  var vslice_dummy_var_2804: int;

  anon0:
    PdoExtension_18 := actual_PdoExtension_18;
    Action_1 := actual_Action_1;
    Generation_5 := actual_Generation_5;
    call {:si_unique_call 803} Tmp_1328 := __HAVOC_malloc(4);
    call {:si_unique_call 804} Tmp_1333 := __HAVOC_malloc(4);
    call {:si_unique_call 805} status_38 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_38 >= 0;
    call {:si_unique_call 806} sdv_434 := ExAllocatePoolWithTag(512, 16, -344497581);
    entry_1 := sdv_434;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} entry_1 != 0;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    call {:si_unique_call 807} InitializeListHead(Link__BUS_RESET_ENTRY(entry_1));
    call {:si_unique_call 808} sdv_435 := sdv_IsListEmpty(0);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_435 == 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1333;
    assume {:nonnull} Tmp_1333 != 0;
    assume Tmp_1333 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1332;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1331;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    havoc vslice_dummy_var_2803;
    call {:si_unique_call 809} WPP_SF_qD(Tmp_1331, 29, Tmp_1332, PdoExtension_18, vslice_dummy_var_2803);
    goto L60;

  L60:
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    call {:si_unique_call 810} vslice_dummy_var_119 := sdv_InsertTailList(BusResetEntry__DEVICE_EXTENSION(PdoExtension_18), Link__BUS_RESET_ENTRY(entry_1));
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 811} vslice_dummy_var_120 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    goto L54;

  L54:
    Tmp_1327 := status_38;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto L60;

  anon30_Then:
    goto L60;

  anon26_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon22_Then:
    assume {:partition} sdv_435 != 0;
    call {:si_unique_call 812} workItem := IoAllocateWorkItem(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} workItem != 0;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    call {:si_unique_call 813} InsertHeadList(BusResetEntry__DEVICE_EXTENSION(PdoExtension_18), Link__BUS_RESET_ENTRY(entry_1));
    call {:si_unique_call 814} IoQueueWorkItem(0, li2bplFunctionConstant461, 1, 0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1328;
    assume {:nonnull} Tmp_1328 != 0;
    assume Tmp_1328 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_1334;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1330;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    havoc vslice_dummy_var_2804;
    call {:si_unique_call 815} WPP_SF_qDd(Tmp_1330, 28, Tmp_1334, PdoExtension_18, vslice_dummy_var_2804, Generation_5);
    goto L46;

  L46:
    status_38 := 0;
    goto L54;

  anon25_Then:
    goto L46;

  anon29_Then:
    goto L46;

  anon24_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon23_Then:
    assume {:partition} workItem == 0;
    status_38 := -1073741670;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 816} vslice_dummy_var_121 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    Tmp_1327 := status_38;
    goto L1;

  anon28_Then:
    assume {:partition} entry_1 == 0;
    status_38 := -1073741670;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 817} vslice_dummy_var_122 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    Tmp_1327 := status_38;
    goto L1;

  anon21_Then:
    assume {:partition} 0 > status_38;
    Tmp_1327 := status_38;
    goto L1;
}



procedure {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_1335: int);
  modifies alloc, sdv_irql_current, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_1335: int)
{
  var {:pointer} irpStack_7: int;
  var {:pointer} nextEntry_1: int;
  var {:scalar} inserted: int;
  var {:pointer} queueEntry_1: int;
  var {:pointer} sdv_437: int;
  var {:pointer} queueEntry2: int;
  var {:pointer} sdv_439: int;
  var {:pointer} irp_1: int;
  var {:pointer} queue: int;
  var {:pointer} DeviceQueue_1: int;
  var {:pointer} DeviceQueueEntry: int;
  var {:scalar} SortKey_1: int;

  anon0:
    DeviceQueue_1 := actual_DeviceQueue_1;
    DeviceQueueEntry := actual_DeviceQueueEntry;
    SortKey_1 := actual_SortKey_1;
    queue := DeviceQueue_1;
    queueEntry_1 := DeviceQueueEntry;
    call {:si_unique_call 818} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    call {:si_unique_call 819} sdv_437 := sdv_containing_record(DeviceQueueEntry, 64);
    irp_1 := sdv_437;
    call {:si_unique_call 820} irpStack_7 := sdv_IoGetCurrentIrpStackLocation(irp_1);
    assume {:nonnull} irpStack_7 != 0;
    assume irpStack_7 > 0;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    inserted := 1;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    havoc nextEntry_1;
    goto L31;

  L31:
    call {:si_unique_call 821} nextEntry_1, queueEntry2, sdv_439 := Sbp2InsertByKeyDeviceQueue_loop_L31(nextEntry_1, queueEntry2, sdv_439, SortKey_1);
    goto L31_last;

  L31_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 822} sdv_439 := sdv_containing_record(nextEntry_1, 0);
    queueEntry2 := sdv_439;
    assume {:nonnull} queueEntry2 != 0;
    assume queueEntry2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    call {:si_unique_call 823} InsertHeadList(nextEntry_1, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_1));
    goto L43;

  L43:
    call {:si_unique_call 824} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_1335 := inserted;
    return;

  anon7_Then:
    goto L32;

  anon8_Then:
    assume {:nonnull} queue != 0;
    assume queue > 0;
    inserted := 0;
    goto L43;
}



procedure {:origName "WPP_SF_sqq"} WPP_SF_sqq(actual_Logger_16: int, actual_id_16: int, actual_TraceGuid_16: int, actual_s_p_e_c_i_a_l_67: int, actual_s_p_e_c_i_a_l_68: int, actual_s_p_e_c_i_a_l_69: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_sqq"} WPP_SF_sqq(actual_Logger_16: int, actual_id_16: int, actual_TraceGuid_16: int, actual_s_p_e_c_i_a_l_67: int, actual_s_p_e_c_i_a_l_68: int, actual_s_p_e_c_i_a_l_69: int)
{
  var {:scalar} sdv_440: int;
  var {:pointer} TraceGuid_16: int;
  var {:pointer} s_p_e_c_i_a_l_67: int;
  var vslice_dummy_var_123: int;

  anon0:
    call {:si_unique_call 825} vslice_dummy_var_123 := __HAVOC_malloc(4);
    TraceGuid_16 := actual_TraceGuid_16;
    s_p_e_c_i_a_l_67 := actual_s_p_e_c_i_a_l_67;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_67 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_67 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_67 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_67 == 0;
    goto L9;
}



procedure {:origName "Sbp2AllocateLog"} Sbp2AllocateLog(actual_PdoExtension_19: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2AllocateLog"} Sbp2AllocateLog(actual_PdoExtension_19: int)
{
  var {:scalar} logSize: int;
  var {:pointer} Tmp_1361: int;
  var {:pointer} PdoExtension_19: int;
  var vslice_dummy_var_124: int;

  anon0:
    call {:si_unique_call 826} vslice_dummy_var_124 := __HAVOC_malloc(4);
    PdoExtension_19 := actual_PdoExtension_19;
    call {:si_unique_call 827} Tmp_1361 := __HAVOC_malloc(4);
    logSize := 4096;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1361;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    return;
}



procedure {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_8: int, actual_Packet_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_8: int, actual_Packet_2: int)
{
  var {:pointer} DeviceExtension_8: int;
  var {:pointer} Packet_2: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;

  anon0:
    call {:si_unique_call 828} vslice_dummy_var_125 := __HAVOC_malloc(4);
    DeviceExtension_8 := actual_DeviceExtension_8;
    Packet_2 := actual_Packet_2;
    assume {:nonnull} Packet_2 != 0;
    assume Packet_2 > 0;
    assume {:nonnull} Packet_2 != 0;
    assume Packet_2 > 0;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 829} vslice_dummy_var_126 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 830} IoFreeIrp(0);
    call {:si_unique_call 831} sdv_ExFreePool(0);
    call {:si_unique_call 832} sdv_ExFreePool(0);
    goto L1;
}



procedure {:origName "WPP_SF_DDD"} WPP_SF_DDD(actual_Logger_17: int, actual_id_17: int, actual_TraceGuid_17: int, actual_s_p_e_c_i_a_l_70: int, actual_s_p_e_c_i_a_l_71: int, actual_s_p_e_c_i_a_l_72: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_DDD"} WPP_SF_DDD(actual_Logger_17: int, actual_id_17: int, actual_TraceGuid_17: int, actual_s_p_e_c_i_a_l_70: int, actual_s_p_e_c_i_a_l_71: int, actual_s_p_e_c_i_a_l_72: int)
{
  var {:pointer} TraceGuid_17: int;
  var vslice_dummy_var_127: int;

  anon0:
    call {:si_unique_call 833} vslice_dummy_var_127 := __HAVOC_malloc(4);
    TraceGuid_17 := actual_TraceGuid_17;
    return;
}



procedure {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_21: int, actual_DeviceInfo_1: int) returns (Tmp_1395: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1395 == -1073741811 || Tmp_1395 == -1073741823 || Tmp_1395 == 0 || Tmp_1395 == 5 || Tmp_1395 == -1073741789 || Tmp_1395 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_21: int, actual_DeviceInfo_1: int) returns (Tmp_1395: int)
{
  var {:pointer} Tmp_1396: int;
  var {:pointer} Tmp_1397: int;
  var {:scalar} sdv_451: int;
  var {:pointer} Tmp_1398: int;
  var {:pointer} Tmp_1399: int;
  var {:pointer} Tmp_1400: int;
  var {:scalar} sdv_452: int;
  var {:pointer} Tmp_1401: int;
  var {:scalar} devType: int;
  var {:pointer} Tmp_1402: int;
  var {:scalar} fw: int;
  var {:scalar} sdv_454: int;
  var {:pointer} Tmp_1403: int;
  var {:scalar} sdv_455: int;
  var {:scalar} sdv_456: int;
  var {:scalar} sdv_457: int;
  var {:scalar} sdv_458: int;
  var {:scalar} sdv_459: int;
  var {:pointer} Tmp_1404: int;
  var {:scalar} sdv_460: int;
  var {:scalar} sdv_461: int;
  var {:pointer} Tmp_1406: int;
  var {:scalar} uniTemp: int;
  var {:scalar} sdv_462: int;
  var {:scalar} status_41: int;
  var {:pointer} Tmp_1407: int;
  var {:pointer} Tmp_1408: int;
  var {:pointer} Tmp_1409: int;
  var {:scalar} sdv_463: int;
  var {:pointer} DeviceObject_21: int;
  var {:pointer} DeviceInfo_1: int;

  anon0:
    call {:si_unique_call 834} uniTemp := __HAVOC_malloc(12);
    DeviceObject_21 := actual_DeviceObject_21;
    DeviceInfo_1 := actual_DeviceInfo_1;
    call {:si_unique_call 835} Tmp_1396 := __HAVOC_malloc(144);
    call {:si_unique_call 836} Tmp_1397 := __HAVOC_malloc(20);
    call {:si_unique_call 837} Tmp_1398 := __HAVOC_malloc(76);
    call {:si_unique_call 838} Tmp_1399 := __HAVOC_malloc(40);
    call {:si_unique_call 839} Tmp_1400 := __HAVOC_malloc(68);
    call {:si_unique_call 840} Tmp_1401 := __HAVOC_malloc(32);
    call {:si_unique_call 841} Tmp_1402 := __HAVOC_malloc(36);
    call {:si_unique_call 842} Tmp_1403 := __HAVOC_malloc(68);
    call {:si_unique_call 843} Tmp_1404 := __HAVOC_malloc(32);
    call {:si_unique_call 844} Tmp_1406 := __HAVOC_malloc(48);
    call {:si_unique_call 845} Tmp_1407 := __HAVOC_malloc(64);
    call {:si_unique_call 846} Tmp_1408 := __HAVOC_malloc(40);
    call {:si_unique_call 847} Tmp_1409 := __HAVOC_malloc(40);
    status_41 := 0;
    call {:si_unique_call 848} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Tmp_1406 := strConst__li2bpl22;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    call {:si_unique_call 849} status_41 := Sbp2GetRegistryValue(DeviceObject_21, Tmp_1406, LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1));
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    havoc devType;
    call {:si_unique_call 850} fw := corral_nondet();
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} devType == 5;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Tmp_1409 := strConst__li2bpl23;
    call {:si_unique_call 851} RtlInitUnicodeString(uniTemp, Tmp_1409);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L45;

  L45:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L46;

  L46:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L48;

  L48:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L50;

  L50:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L52;

  L52:
    Tmp_1395 := status_41;
    return;

  anon80_Then:
    goto L52;

  anon79_Then:
    goto L50;

  anon78_Then:
    goto L48;

  anon77_Then:
    goto L46;

  anon73_Then:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} sdv_457 != 0;
    goto L45;

  anon74_Then:
    assume {:partition} sdv_457 == 0;
    Tmp_1396 := strConst__li2bpl14;
    call {:si_unique_call 852} RtlInitUnicodeString(uniTemp, Tmp_1396);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L45;

  anon75_Then:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} sdv_459 != 0;
    goto L45;

  anon76_Then:
    assume {:partition} sdv_459 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon108_Then:
    assume {:partition} devType != 5;
    Tmp_1402 := strConst__li2bpl13;
    call {:si_unique_call 853} RtlInitUnicodeString(uniTemp, Tmp_1402);
    call {:si_unique_call 854} sdv_460 := corral_nondet();
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} sdv_460 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L58;

  L58:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} devType != 14;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} devType == 0;
    goto L60;

  L60:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Tmp_1400 := strConst__li2bpl24;
    call {:si_unique_call 855} RtlInitUnicodeString(uniTemp, Tmp_1400);
    call {:si_unique_call 856} sdv_461 := corral_nondet();
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} sdv_461 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L70;

  L70:
    Tmp_1407 := strConst__li2bpl15;
    call {:si_unique_call 857} RtlInitUnicodeString(uniTemp, Tmp_1407);
    call {:si_unique_call 858} sdv_454 := corral_nondet();
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} sdv_454 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L78;

  L78:
    Tmp_1399 := strConst__li2bpl16;
    call {:si_unique_call 859} RtlInitUnicodeString(uniTemp, Tmp_1399);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} sdv_462 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L83;

  L83:
    Tmp_1404 := strConst__li2bpl17;
    call {:si_unique_call 860} RtlInitUnicodeString(uniTemp, Tmp_1404);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} sdv_456 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L93;

  L93:
    Tmp_1401 := strConst__li2bpl18;
    call {:si_unique_call 861} RtlInitUnicodeString(uniTemp, Tmp_1401);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} sdv_455 == 0;
    Tmp_1398 := strConst__li2bpl19;
    call {:si_unique_call 862} RtlInitUnicodeString(uniTemp, Tmp_1398);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} sdv_463 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L103;

  L103:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} fw != 0;
    goto L120;

  L120:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_41 >= 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto L121;

  L121:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} fw != 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} fw != 40;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} fw != 41;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} fw != 4097;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} fw != 41144;
    goto L128;

  L128:
    Tmp_1397 := strConst__li2bpl20;
    call {:si_unique_call 863} RtlInitUnicodeString(uniTemp, Tmp_1397);
    call {:si_unique_call 864} sdv_458 := corral_nondet();
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} sdv_458 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon100_Then:
    assume {:partition} sdv_458 == 0;
    Tmp_1403 := strConst__li2bpl21;
    call {:si_unique_call 865} RtlInitUnicodeString(uniTemp, Tmp_1403);
    call {:si_unique_call 866} sdv_451 := corral_nondet();
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} sdv_451 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon101_Then:
    assume {:partition} sdv_451 == 0;
    Tmp_1408 := strConst__li2bpl16;
    call {:si_unique_call 867} RtlInitUnicodeString(uniTemp, Tmp_1408);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_452 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon103_Then:
    assume {:partition} sdv_452 != 0;
    goto L45;

  anon102_Then:
    goto L45;

  anon104_Then:
    assume {:partition} fw == 41144;
    goto L126;

  L126:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L128;

  anon105_Then:
    assume {:partition} fw == 4097;
    goto L126;

  anon106_Then:
    assume {:partition} fw == 41;
    goto L126;

  anon107_Then:
    assume {:partition} fw == 40;
    goto L126;

  anon97_Then:
    assume {:partition} fw == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L128;

  anon99_Then:
    goto L126;

  anon98_Then:
    goto L45;

  anon96_Then:
    assume {:partition} 0 > status_41;
    goto L121;

  anon91_Then:
    assume {:partition} fw == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L120;

  anon95_Then:
    goto L120;

  anon94_Then:
    assume {:partition} sdv_463 != 0;
    goto L103;

  anon93_Then:
    goto L103;

  anon92_Then:
    assume {:partition} sdv_455 != 0;
    goto L103;

  anon90_Then:
    goto L103;

  anon89_Then:
    assume {:partition} sdv_456 != 0;
    goto L93;

  anon88_Then:
    goto L93;

  anon87_Then:
    assume {:partition} sdv_462 != 0;
    goto L83;

  anon86_Then:
    goto L83;

  anon85_Then:
    assume {:partition} sdv_454 == 0;
    goto L78;

  anon84_Then:
    assume {:partition} sdv_461 == 0;
    goto L70;

  anon83_Then:
    assume {:partition} devType != 0;
    goto L45;

  anon82_Then:
    assume {:partition} devType == 14;
    goto L60;

  anon81_Then:
    assume {:partition} sdv_460 == 0;
    goto L58;
}



procedure {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_23: int, actual_Context_8: int, actual_ErrorId: int, actual_Status: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_23: int, actual_Context_8: int, actual_ErrorId: int, actual_Status: int)
{
  var {:scalar} Tmp_1412: int;
  var {:pointer} sdv_466: int;
  var {:pointer} errorLogEntry: int;
  var {:scalar} Tmp_1415: int;
  var {:pointer} Tmp_1416: int;
  var {:pointer} Tmp_1417: int;
  var {:pointer} Tmp_1419: int;
  var {:pointer} Tmp_1420: int;
  var {:pointer} Tmp_1421: int;
  var {:pointer} DeviceObject_23: int;
  var {:pointer} Context_8: int;
  var {:scalar} ErrorId: int;
  var {:scalar} Status: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_2805: int;
  var vslice_dummy_var_2806: int;

  anon0:
    call {:si_unique_call 868} vslice_dummy_var_128 := __HAVOC_malloc(4);
    DeviceObject_23 := actual_DeviceObject_23;
    Context_8 := actual_Context_8;
    ErrorId := actual_ErrorId;
    Status := actual_Status;
    call {:si_unique_call 869} Tmp_1417 := __HAVOC_malloc(4);
    call {:si_unique_call 870} Tmp_1419 := __HAVOC_malloc(4);
    call {:si_unique_call 871} Tmp_1420 := __HAVOC_malloc(4);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Status != -1073741810;
    call {:si_unique_call 872} sdv_466 := IoAllocateErrorLogEntry(0, 88);
    errorLogEntry := sdv_466;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} errorLogEntry == 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1417;
    assume {:nonnull} Tmp_1417 != 0;
    assume Tmp_1417 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_1416;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1412;
    assume {:nonnull} DeviceObject_23 != 0;
    assume DeviceObject_23 > 0;
    havoc vslice_dummy_var_2805;
    call {:si_unique_call 873} WPP_SF_q(Tmp_1412, 22, Tmp_1416, vslice_dummy_var_2805);
    goto L1;

  L1:
    return;

  anon38_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon45_Then:
    assume {:partition} errorLogEntry != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Status != -1073741811;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Status != -1073741808;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Status != -1073741670;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Status != -1073741666;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Status != -1073741434;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Status != -1073741248;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Status == 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  L23:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Context_8 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_1419;
    call {:si_unique_call 874} sdv_RtlCopyMemory(0, 0, 40);
    goto L35;

  L35:
    call {:si_unique_call 875} IoWriteErrorLogEntry(0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1420;
    assume {:nonnull} Tmp_1420 != 0;
    assume Tmp_1420 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    havoc Tmp_1421;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1415;
    assume {:nonnull} DeviceObject_23 != 0;
    assume DeviceObject_23 > 0;
    havoc vslice_dummy_var_2806;
    call {:si_unique_call 876} WPP_SF_qqDq(Tmp_1415, 21, Tmp_1421, vslice_dummy_var_2806, DeviceObject_23, Status, Context_8);
    goto L1;

  anon36_Then:
    goto L1;

  anon47_Then:
    goto L1;

  anon35_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon46_Then:
    assume {:partition} Context_8 == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L35;

  anon39_Then:
    assume {:partition} Status != 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon40_Then:
    assume {:partition} Status == -1073741248;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon41_Then:
    assume {:partition} Status == -1073741434;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon42_Then:
    assume {:partition} Status == -1073741666;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon43_Then:
    assume {:partition} Status == -1073741670;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon44_Then:
    assume {:partition} Status == -1073741808;
    goto L16;

  L16:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon34_Then:
    assume {:partition} Status == -1073741811;
    goto L16;

  anon33_Then:
    assume {:partition} Status == -1073741810;
    goto L1;
}



procedure {:origName "WPP_SF_qqqDD"} WPP_SF_qqqDD(actual_Logger_18: int, actual_id_18: int, actual_TraceGuid_18: int, actual_s_p_e_c_i_a_l_73: int, actual_s_p_e_c_i_a_l_74: int, actual_s_p_e_c_i_a_l_75: int, actual_s_p_e_c_i_a_l_76: int, actual_s_p_e_c_i_a_l_77: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qqqDD"} WPP_SF_qqqDD(actual_Logger_18: int, actual_id_18: int, actual_TraceGuid_18: int, actual_s_p_e_c_i_a_l_73: int, actual_s_p_e_c_i_a_l_74: int, actual_s_p_e_c_i_a_l_75: int, actual_s_p_e_c_i_a_l_76: int, actual_s_p_e_c_i_a_l_77: int)
{
  var {:pointer} TraceGuid_18: int;
  var vslice_dummy_var_129: int;

  anon0:
    call {:si_unique_call 877} vslice_dummy_var_129 := __HAVOC_malloc(4);
    TraceGuid_18 := actual_TraceGuid_18;
    return;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var {:scalar} Tmp_1459: int;
  var vslice_dummy_var_130: int;

  anon0:
    call {:si_unique_call 878} Tmp_1459 := __HAVOC_malloc(4);
    call {:si_unique_call 879} vslice_dummy_var_130 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1459 != 0;
    assume Tmp_1459 > 0;
    return;
}



procedure {:origName "WPP_SF_qDqDD"} WPP_SF_qDqDD(actual_Logger_19: int, actual_id_19: int, actual_TraceGuid_19: int, actual_s_p_e_c_i_a_l_78: int, actual_s_p_e_c_i_a_l_79: int, actual_s_p_e_c_i_a_l_80: int, actual_s_p_e_c_i_a_l_81: int, actual_s_p_e_c_i_a_l_82: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qDqDD"} WPP_SF_qDqDD(actual_Logger_19: int, actual_id_19: int, actual_TraceGuid_19: int, actual_s_p_e_c_i_a_l_78: int, actual_s_p_e_c_i_a_l_79: int, actual_s_p_e_c_i_a_l_80: int, actual_s_p_e_c_i_a_l_81: int, actual_s_p_e_c_i_a_l_82: int)
{
  var {:pointer} TraceGuid_19: int;
  var vslice_dummy_var_131: int;

  anon0:
    call {:si_unique_call 880} vslice_dummy_var_131 := __HAVOC_malloc(4);
    TraceGuid_19 := actual_TraceGuid_19;
    return;
}



procedure {:origName "Sbp2ScsiPassThrough"} Sbp2ScsiPassThrough(actual_DeviceObject_24: int, actual_Irp_15: int, actual_Direct: int) returns (Tmp_1465: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} Tmp_1465 == -1073741808 || Tmp_1465 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ScsiPassThrough"} Sbp2ScsiPassThrough(actual_DeviceObject_24: int, actual_Irp_15: int, actual_Direct: int) returns (Tmp_1465: int)
{
  var {:pointer} irpStack_9: int;
  var {:pointer} Tmp_1467: int;
  var {:pointer} pdoExtension_10: int;
  var {:pointer} Tmp_1468: int;
  var {:scalar} Tmp_1469: int;
  var {:pointer} Tmp_1470: int;
  var {:scalar} maxPhysicalPages: int;
  var {:scalar} Tmp_1471: int;
  var {:pointer} Tmp_1472: int;
  var {:pointer} Tmp_1473: int;
  var {:scalar} maxTransferLength: int;
  var {:scalar} status_43: int;
  var {:pointer} DeviceObject_24: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_132: int;

  anon0:
    DeviceObject_24 := actual_DeviceObject_24;
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 881} Tmp_1467 := __HAVOC_malloc(4);
    call {:si_unique_call 882} Tmp_1468 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    havoc pdoExtension_10;
    call {:si_unique_call 883} sdv_do_paged_code_check();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1468;
    assume {:nonnull} Tmp_1468 != 0;
    assume Tmp_1468 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1472;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1471;
    call {:si_unique_call 884} WPP_SF_qq(Tmp_1471, 61, Tmp_1472, pdoExtension_10, DeviceObject_24);
    goto L14;

  L14:
    call {:si_unique_call 885} irpStack_9 := sdv_IoGetCurrentIrpStackLocation(Irp_15);
    assume {:nonnull} irpStack_9 != 0;
    assume irpStack_9 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L29;

  L29:
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    havoc Tmp_1473;
    assume {:nonnull} Tmp_1473 != 0;
    assume Tmp_1473 > 0;
    havoc maxTransferLength;
    maxPhysicalPages := INTDIV(maxTransferLength, 4096);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 511 > maxPhysicalPages;
    maxPhysicalPages := maxPhysicalPages + 1;
    goto L32;

  L32:
    call {:si_unique_call 886} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 887} vslice_dummy_var_132 := corral_nondet();
    status_43 := 259;
    goto L40;

  L40:
    Tmp_1465 := status_43;
    return;

  anon26_Then:
    assume {:partition} maxPhysicalPages >= 511;
    goto L32;

  anon21_Then:
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1467;
    assume {:nonnull} Tmp_1467 != 0;
    assume Tmp_1467 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_1470;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1469;
    call {:si_unique_call 888} WPP_SF_(Tmp_1469, 62, Tmp_1470);
    goto L45;

  L45:
    status_43 := -1073741808;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_15))] := status_43;
    call {:si_unique_call 889} sdv_IoCompleteRequest(0, 0);
    goto L40;

  anon24_Then:
    goto L45;

  anon27_Then:
    goto L45;

  anon23_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon22_Then:
    goto L29;

  anon20_Then:
    goto L14;

  anon25_Then:
    goto L14;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L14;
}



procedure {:origName "WPP_SF_dq"} WPP_SF_dq(actual_Logger_20: int, actual_id_20: int, actual_TraceGuid_20: int, actual_s_p_e_c_i_a_l_83: int, actual_s_p_e_c_i_a_l_84: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_dq"} WPP_SF_dq(actual_Logger_20: int, actual_id_20: int, actual_TraceGuid_20: int, actual_s_p_e_c_i_a_l_83: int, actual_s_p_e_c_i_a_l_84: int)
{
  var {:pointer} TraceGuid_20: int;
  var vslice_dummy_var_133: int;

  anon0:
    call {:si_unique_call 890} vslice_dummy_var_133 := __HAVOC_malloc(4);
    TraceGuid_20 := actual_TraceGuid_20;
    return;
}



procedure {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_9: int) returns (Tmp_1477: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1477 == -1073741670 || Tmp_1477 == -1073741823 || Tmp_1477 == 259 || Tmp_1477 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_9: int) returns (Tmp_1477: int)
{
  var {:pointer} Tmp_1478: int;
  var {:pointer} Tmp_1479: int;
  var {:pointer} Tmp_1480: int;
  var {:pointer} Tmp_1481: int;
  var {:pointer} cdb_1: int;
  var {:scalar} Tmp_1482: int;
  var {:scalar} Tmp_1483: int;
  var {:pointer} Tmp_1484: int;
  var {:pointer} pdoExtension_11: int;
  var {:pointer} Tmp_1485: int;
  var {:pointer} Tmp_1486: int;
  var {:pointer} Tmp_1487: int;
  var {:pointer} Tmp_1488: int;
  var {:pointer} Tmp_1489: int;
  var {:pointer} Tmp_1490: int;
  var {:pointer} Tmp_1491: int;
  var {:pointer} Tmp_1493: int;
  var {:pointer} Tmp_1494: int;
  var {:pointer} Tmp_1495: int;
  var {:pointer} Tmp_1496: int;
  var {:pointer} Tmp_1497: int;
  var {:pointer} Tmp_1498: int;
  var {:scalar} Tmp_1499: int;
  var {:pointer} Tmp_1500: int;
  var {:scalar} Tmp_1501: int;
  var {:scalar} Tmp_1502: int;
  var {:pointer} Tmp_1503: int;
  var {:pointer} Tmp_1504: int;
  var {:pointer} Tmp_1505: int;
  var {:pointer} Tmp_1506: int;
  var {:scalar} Tmp_1507: int;
  var {:scalar} Tmp_1508: int;
  var {:pointer} Tmp_1509: int;
  var {:scalar} Tmp_1510: int;
  var {:pointer} Tmp_1511: int;
  var {:pointer} Tmp_1512: int;
  var {:pointer} Tmp_1513: int;
  var {:scalar} bSetCacheHack: int;
  var {:pointer} Tmp_1514: int;
  var {:scalar} Tmp_1515: int;
  var {:pointer} Tmp_1516: int;
  var {:pointer} Tmp_1517: int;
  var {:pointer} Tmp_1518: int;
  var {:pointer} Tmp_1519: int;
  var {:pointer} Tmp_1520: int;
  var {:pointer} Tmp_1521: int;
  var {:pointer} Tmp_1522: int;
  var {:pointer} Tmp_1523: int;
  var {:pointer} Tmp_1524: int;
  var {:pointer} Tmp_1525: int;
  var {:pointer} Context_9: int;
  var vslice_dummy_var_2807: int;
  var vslice_dummy_var_2808: int;
  var vslice_dummy_var_2809: int;
  var vslice_dummy_var_2810: int;

  anon0:
    call {:si_unique_call 891} Tmp_1478 := __HAVOC_malloc(4);
    call {:si_unique_call 892} Tmp_1487 := __HAVOC_malloc(4);
    Context_9 := actual_Context_9;
    call {:si_unique_call 893} Tmp_1479 := __HAVOC_malloc(64);
    call {:si_unique_call 894} Tmp_1484 := __HAVOC_malloc(4);
    call {:si_unique_call 895} Tmp_1491 := __HAVOC_malloc(64);
    call {:si_unique_call 896} Tmp_1496 := __HAVOC_malloc(64);
    call {:si_unique_call 897} Tmp_1504 := __HAVOC_malloc(64);
    call {:si_unique_call 898} Tmp_1511 := __HAVOC_malloc(64);
    call {:si_unique_call 899} Tmp_1512 := __HAVOC_malloc(64);
    call {:si_unique_call 900} Tmp_1513 := __HAVOC_malloc(64);
    call {:si_unique_call 901} Tmp_1516 := __HAVOC_malloc(64);
    call {:si_unique_call 902} Tmp_1521 := __HAVOC_malloc(64);
    call {:si_unique_call 903} Tmp_1525 := __HAVOC_malloc(64);
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1500;
    assume {:nonnull} Tmp_1500 != 0;
    assume Tmp_1500 > 0;
    havoc pdoExtension_11;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1495;
    assume {:nonnull} Tmp_1495 != 0;
    assume Tmp_1495 > 0;
    havoc Tmp_1513;
    Tmp_1502 := Tmp_1513;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1514;
    assume {:nonnull} Tmp_1514 != 0;
    assume Tmp_1514 > 0;
    havoc Tmp_1507;
    call {:si_unique_call 904} Sbp2AddLog(pdoExtension_11, 128, -1016831415, Tmp_1507, Tmp_1502);
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} Tmp_1487 != 0;
    assume Tmp_1487 > 0;
    Tmp_1497 := Tmp_1487;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc vslice_dummy_var_2807;
    havoc vslice_dummy_var_2808;
    call {:si_unique_call 905} Tmp_1477 := Rbc_Scsi_Conversion(vslice_dummy_var_2807, Tmp_1497, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension_11), 0, vslice_dummy_var_2808, 0);
    goto L1;

  L1:
    return;

  anon41_Then:
    goto L14;

  L14:
    Tmp_1477 := 259;
    goto L1;

  anon48_Then:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc Tmp_1480;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1524;
    assume {:nonnull} Tmp_1480 != 0;
    assume Tmp_1480 > 0;
    assume {:nonnull} Tmp_1524 != 0;
    assume Tmp_1524 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1484;
    assume {:nonnull} Tmp_1484 != 0;
    assume Tmp_1484 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1520;
    assume {:nonnull} Tmp_1520 != 0;
    assume Tmp_1520 > 0;
    havoc Tmp_1511;
    assume {:nonnull} Tmp_1511 != 0;
    assume Tmp_1511 > 0;
    havoc Tmp_1508;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1490;
    assume {:nonnull} Tmp_1490 != 0;
    assume Tmp_1490 > 0;
    havoc Tmp_1499;
    havoc Tmp_1493;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1482;
    call {:si_unique_call 906} WPP_SF_DD(Tmp_1482, 41, Tmp_1493, Tmp_1499, Tmp_1508);
    goto L25;

  L25:
    Tmp_1477 := -1073741823;
    goto L1;

  anon43_Then:
    goto L25;

  anon50_Then:
    goto L25;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon49_Then:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1506;
    assume {:nonnull} Tmp_1506 != 0;
    assume Tmp_1506 > 0;
    havoc Tmp_1516;
    Tmp_1483 := Tmp_1516;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1498;
    assume {:nonnull} Tmp_1498 != 0;
    assume Tmp_1498 > 0;
    havoc Tmp_1515;
    call {:si_unique_call 907} Sbp2AddLog(pdoExtension_11, 128, -1016831409, Tmp_1515, Tmp_1483);
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1519;
    assume {:nonnull} Tmp_1519 != 0;
    assume Tmp_1519 > 0;
    havoc Tmp_1525;
    assume {:nonnull} Tmp_1525 != 0;
    assume Tmp_1525 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Tmp_1525 != 0;
    assume Tmp_1525 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Tmp_1525 != 0;
    assume Tmp_1525 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1505;
    assume {:nonnull} Tmp_1505 != 0;
    assume Tmp_1505 > 0;
    havoc Tmp_1496;
    assume {:nonnull} Tmp_1496 != 0;
    assume Tmp_1496 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1522;
    assume {:nonnull} Tmp_1522 != 0;
    assume Tmp_1522 > 0;
    havoc Tmp_1512;
    assume {:nonnull} Tmp_1512 != 0;
    assume Tmp_1512 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1503;
    assume {:nonnull} Tmp_1503 != 0;
    assume Tmp_1503 > 0;
    havoc Tmp_1491;
    assume {:nonnull} Tmp_1491 != 0;
    assume Tmp_1491 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1509;
    assume {:nonnull} Tmp_1509 != 0;
    assume Tmp_1509 > 0;
    havoc Tmp_1521;
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc Tmp_1481;
    assume {:nonnull} Tmp_1481 != 0;
    assume Tmp_1481 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    Tmp_1477 := -1073741823;
    goto L1;

  anon60_Then:
    goto L40;

  L40:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc Tmp_1488;
    assume {:nonnull} Tmp_1488 != 0;
    assume Tmp_1488 > 0;
    havoc Tmp_1510;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Tmp_1510 == 0;
    bSetCacheHack := 0;
    goto L121;

  L121:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} Tmp_1478 != 0;
    assume Tmp_1478 > 0;
    Tmp_1494 := Tmp_1478;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc vslice_dummy_var_2809;
    havoc vslice_dummy_var_2810;
    call {:si_unique_call 908} Tmp_1477 := Rbc_Scsi_Conversion(vslice_dummy_var_2809, Tmp_1494, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension_11), 1, vslice_dummy_var_2810, bSetCacheHack);
    goto L1;

  anon53_Then:
    assume {:partition} Tmp_1510 != 0;
    bSetCacheHack := 1;
    goto L121;

  anon44_Then:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1523;
    assume {:nonnull} Tmp_1523 != 0;
    assume Tmp_1523 > 0;
    havoc Tmp_1479;
    assume {:nonnull} Tmp_1479 != 0;
    assume Tmp_1479 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1518;
    assume {:nonnull} Tmp_1518 != 0;
    assume Tmp_1518 > 0;
    havoc Tmp_1504;
    cdb_1 := Tmp_1504;
    assume {:nonnull} cdb_1 != 0;
    assume cdb_1 > 0;
    goto L14;

  anon54_Then:
    goto L14;

  anon45_Then:
    goto L14;

  anon59_Then:
    goto L40;

  anon58_Then:
    goto L40;

  anon57_Then:
    goto L40;

  anon56_Then:
    goto L40;

  anon46_Then:
    goto L40;

  anon47_Then:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1517;
    assume {:nonnull} Tmp_1517 != 0;
    assume Tmp_1517 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_1501 := 3;
    goto L52;

  L52:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1485;
    assume {:nonnull} Tmp_1485 != 0;
    assume Tmp_1485 > 0;
    goto L40;

  anon55_Then:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1486;
    assume {:nonnull} Tmp_1486 != 0;
    assume Tmp_1486 > 0;
    havoc Tmp_1501;
    goto L52;

  anon51_Then:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc Tmp_1489;
    assume {:nonnull} Tmp_1489 != 0;
    assume Tmp_1489 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    Tmp_1477 := -1073741823;
    goto L1;

  anon52_Then:
    goto L40;
}



procedure {:origName "Sbp2ScsiRequests"} Sbp2ScsiRequests(actual_DeviceObject_26: int, actual_Irp_17: int) returns (Tmp_1596: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, queued, yogi_error, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ScsiRequests"} Sbp2ScsiRequests(actual_DeviceObject_26: int, actual_Irp_17: int) returns (Tmp_1596: int)
{
  var {:pointer} Tmp_1597: int;
  var {:pointer} irpStack_11: int;
  var {:pointer} Tmp_1598: int;
  var {:pointer} Tmp_1599: int;
  var {:pointer} Tmp_1600: int;
  var {:scalar} Tmp_1601: int;
  var {:pointer} pdoExtension_12: int;
  var {:pointer} Tmp_1602: int;
  var {:pointer} Tmp_1603: int;
  var {:pointer} Tmp_1604: int;
  var {:scalar} Tmp_1605: int;
  var {:scalar} Tmp_1606: int;
  var {:pointer} Tmp_1607: int;
  var {:pointer} Tmp_1608: int;
  var {:scalar} Tmp_1609: int;
  var {:scalar} orbLock_8: int;
  var {:scalar} Tmp_1610: int;
  var {:pointer} Tmp_1611: int;
  var {:pointer} Tmp_1612: int;
  var {:pointer} Tmp_1613: int;
  var {:pointer} Tmp_1614: int;
  var {:pointer} Tmp_1615: int;
  var {:scalar} Tmp_1616: int;
  var {:pointer} Tmp_1617: int;
  var {:scalar} Tmp_1618: int;
  var {:scalar} Tmp_1619: int;
  var {:pointer} sdv_504: int;
  var {:pointer} Tmp_1620: int;
  var {:pointer} Tmp_1621: int;
  var {:pointer} Tmp_1622: int;
  var {:pointer} Tmp_1623: int;
  var {:scalar} cIrql_7: int;
  var {:scalar} Tmp_1624: int;
  var {:scalar} Tmp_1625: int;
  var {:pointer} srb_5: int;
  var {:scalar} status_46: int;
  var {:pointer} tIrp: int;
  var {:pointer} Tmp_1626: int;
  var {:scalar} Tmp_1627: int;
  var {:pointer} Tmp_1628: int;
  var {:pointer} DeviceObject_26: int;
  var {:pointer} Irp_17: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_2811: int;
  var vslice_dummy_var_2812: int;
  var vslice_dummy_var_2813: int;
  var vslice_dummy_var_2814: int;
  var vslice_dummy_var_2815: int;

  anon0:
    call {:si_unique_call 909} orbLock_8 := __HAVOC_malloc(12);
    DeviceObject_26 := actual_DeviceObject_26;
    Irp_17 := actual_Irp_17;
    call {:si_unique_call 910} Tmp_1597 := __HAVOC_malloc(64);
    call {:si_unique_call 911} Tmp_1598 := __HAVOC_malloc(4);
    call {:si_unique_call 912} Tmp_1599 := __HAVOC_malloc(4);
    call {:si_unique_call 913} Tmp_1600 := __HAVOC_malloc(4);
    call {:si_unique_call 914} Tmp_1602 := __HAVOC_malloc(4);
    call {:si_unique_call 915} Tmp_1611 := __HAVOC_malloc(4);
    call {:si_unique_call 916} Tmp_1613 := __HAVOC_malloc(4);
    call {:si_unique_call 917} Tmp_1614 := __HAVOC_malloc(4);
    call {:si_unique_call 918} Tmp_1617 := __HAVOC_malloc(4);
    call {:si_unique_call 919} Tmp_1622 := __HAVOC_malloc(4);
    call {:si_unique_call 920} irpStack_11 := sdv_IoGetCurrentIrpStackLocation(Irp_17);
    assume {:nonnull} DeviceObject_26 != 0;
    assume DeviceObject_26 > 0;
    havoc pdoExtension_12;
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    call {:si_unique_call 921} status_46 := sdv_IoAcquireRemoveLock(0, 0);
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    havoc srb_5;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} status_46 >= 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1610;
    call {:si_unique_call 922} Sbp2AddLog(pdoExtension_12, 64, -748457111, Irp_17, Tmp_1610);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1614;
    assume {:nonnull} Tmp_1614 != 0;
    assume Tmp_1614 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    havoc Tmp_1612;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1616;
    call {:si_unique_call 923} WPP_SF_q(Tmp_1616, 16, Tmp_1612, pdoExtension_12);
    goto L52;

  L52:
    call {:si_unique_call 924} Tmp_1607 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    call {:si_unique_call 925} sdv_KeAcquireSpinLock(0, Tmp_1607);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 926} sdv_KeReleaseSpinLock(0, cIrql_7);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 927} sdv_504 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_12), 0);
    tIrp := sdv_504;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} tIrp != 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1602;
    assume {:nonnull} Tmp_1602 != 0;
    assume Tmp_1602 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    havoc Tmp_1608;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1618;
    call {:si_unique_call 928} WPP_SF_qq(Tmp_1618, 17, Tmp_1608, pdoExtension_12, tIrp);
    goto L77;

  L77:
    call {:si_unique_call 929} Sbp2StartPacket#1(DeviceObject_26, tIrp, 0);
    goto L72;

  L72:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    call {:si_unique_call 930} Tmp_1607 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    call {:si_unique_call 931} sdv_KeRaiseIrql(2, Tmp_1607);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    havoc vslice_dummy_var_2811;
    call {:si_unique_call 932} Sbp2StartNextPacketByKey#1(DeviceObject_26, vslice_dummy_var_2811);
    call {:si_unique_call 933} sdv_KeLowerIrql(cIrql_7);
    goto L87;

  L87:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    status_46 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  L103:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_17))] := status_46;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 934} vslice_dummy_var_138 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_12), Irp_17);
    call {:si_unique_call 935} sdv_IoCompleteRequest(0, 0);
    Tmp_1596 := status_46;
    goto L1;

  L1:
    call {:si_unique_call 936} SLIC_Sbp2ScsiRequests_exit(strConst__li2bpl2, Tmp_1596);
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon167_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon127_Then:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    call {:si_unique_call 937} AcquireOrbListLock(pdoExtension_12, orbLock_8, 0);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    havoc vslice_dummy_var_2812;
    call {:si_unique_call 938} vslice_dummy_var_134 := FreeAsyncRequestContext(pdoExtension_12, vslice_dummy_var_2812);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto L116;

  L116:
    call {:si_unique_call 939} ReleaseOrbListLock(pdoExtension_12, orbLock_8, 0);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    call {:si_unique_call 940} Tmp_1607 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    call {:si_unique_call 941} sdv_KeAcquireSpinLock(0, Tmp_1607);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 942} sdv_KeReleaseSpinLock(0, cIrql_7);
    goto L125;

  L125:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_17))] := 0;
    call {:si_unique_call 943} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    call {:si_unique_call 944} Tmp_1607 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    call {:si_unique_call 945} sdv_KeRaiseIrql(2, Tmp_1607);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    havoc vslice_dummy_var_2813;
    call {:si_unique_call 946} Sbp2StartNextPacketByKey#1(DeviceObject_26, vslice_dummy_var_2813);
    call {:si_unique_call 947} sdv_KeLowerIrql(cIrql_7);
    goto L138;

  L138:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 948} vslice_dummy_var_135 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_12), Irp_17);
    Tmp_1596 := 0;
    goto L1;

  anon131_Then:
    goto L138;

  anon130_Then:
    goto L125;

  anon129_Then:
    goto L116;

  anon128_Then:
    status_46 := 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon124_Then:
    goto L87;

  anon126_Then:
    goto L77;

  anon178_Then:
    goto L77;

  anon125_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L77;

  anon177_Then:
    assume {:partition} tIrp == 0;
    goto L72;

  anon123_Then:
    goto L52;

  anon176_Then:
    goto L52;

  anon122_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L52;

  anon157_Then:
    status_46 := -1073741637;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1613;
    assume {:nonnull} Tmp_1613 != 0;
    assume Tmp_1613 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1625;
    havoc Tmp_1628;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1624;
    call {:si_unique_call 949} WPP_SF_qD(Tmp_1624, 19, Tmp_1628, pdoExtension_12, Tmp_1625);
    goto L103;

  anon156_Then:
    goto L103;

  anon180_Then:
    goto L103;

  anon179_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon158_Then:
    call {:si_unique_call 950} Tmp_1607 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    call {:si_unique_call 951} sdv_KeAcquireSpinLock(0, Tmp_1607);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    call {:si_unique_call 952} sdv_KeReleaseSpinLock(0, cIrql_7);
    status_46 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon132_Then:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 953} sdv_KeReleaseSpinLock(0, cIrql_7);
    status_46 := 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1600;
    assume {:nonnull} Tmp_1600 != 0;
    assume Tmp_1600 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    havoc Tmp_1621;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1606;
    call {:si_unique_call 954} WPP_SF_q(Tmp_1606, 15, Tmp_1621, pdoExtension_12);
    goto L103;

  anon133_Then:
    goto L103;

  anon175_Then:
    goto L103;

  anon174_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon159_Then:
    goto L195;

  L195:
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1622;
    assume {:nonnull} Tmp_1622 != 0;
    assume Tmp_1622 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc Tmp_1615;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1601;
    call {:si_unique_call 955} WPP_SF_q(Tmp_1601, 12, Tmp_1615, pdoExtension_12);
    goto L196;

  L196:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1598;
    assume {:nonnull} Tmp_1598 != 0;
    assume Tmp_1598 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    havoc Tmp_1626;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1605;
    call {:si_unique_call 956} WPP_SF_q(Tmp_1605, 13, Tmp_1626, pdoExtension_12);
    goto L214;

  L214:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_46 := 0;
    goto L103;

  anon141_Then:
    goto L214;

  anon172_Then:
    goto L214;

  anon140_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L214;

  anon138_Then:
    call {:si_unique_call 957} CleanupOrbList#1(pdoExtension_12, -1073741248);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_46 := 0;
    goto L103;

  anon139_Then:
    goto L196;

  anon171_Then:
    goto L196;

  anon137_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon160_Then:
    call {:si_unique_call 958} status_46 := Sbp2Issue1394BusReset#1(pdoExtension_12);
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1617;
    assume {:nonnull} Tmp_1617 != 0;
    assume Tmp_1617 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    havoc Tmp_1604;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1619;
    call {:si_unique_call 959} WPP_SF_q(Tmp_1619, 14, Tmp_1604, pdoExtension_12);
    goto L183;

  L183:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} status_46 >= 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon135_Then:
    assume {:partition} 0 > status_46;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon136_Then:
    goto L183;

  anon173_Then:
    goto L183;

  anon134_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L183;

  anon161_Then:
    goto L195;

  anon162_Then:
    call {:si_unique_call 960} Tmp_1607 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    call {:si_unique_call 961} sdv_KeAcquireSpinLock(0, Tmp_1607);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 962} sdv_KeReleaseSpinLock(0, cIrql_7);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_46 := 0;
    goto L103;

  anon163_Then:
    call {:si_unique_call 963} Tmp_1607 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    call {:si_unique_call 964} sdv_KeAcquireSpinLock(0, Tmp_1607);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    status_46 := 17;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L235;

  L235:
    call {:si_unique_call 965} sdv_KeReleaseSpinLock(0, cIrql_7);
    goto L103;

  anon142_Then:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_46 := 0;
    goto L235;

  anon121_Then:
    call {:si_unique_call 966} Tmp_1607 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    call {:si_unique_call 967} sdv_KeAcquireSpinLock(0, Tmp_1607);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    call {:si_unique_call 968} sdv_KeReleaseSpinLock(0, cIrql_7);
    status_46 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1599;
    assume {:nonnull} Tmp_1599 != 0;
    assume Tmp_1599 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    havoc Tmp_1620;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1627;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    havoc vslice_dummy_var_2814;
    call {:si_unique_call 969} WPP_SF_qDD(Tmp_1627, 10, Tmp_1620, pdoExtension_12, vslice_dummy_var_2814, status_46);
    goto L254;

  L254:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc vslice_dummy_var_2815;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_17))] := vslice_dummy_var_2815;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 970} vslice_dummy_var_136 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_12), Irp_17);
    call {:si_unique_call 971} sdv_IoCompleteRequest(0, 0);
    Tmp_1596 := status_46;
    goto L1;

  anon144_Then:
    goto L254;

  anon166_Then:
    goto L254;

  anon165_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L254;

  anon143_Then:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    havoc Tmp_1623;
    assume {:nonnull} Tmp_1623 != 0;
    assume Tmp_1623 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1597;
    assume {:nonnull} Tmp_1597 != 0;
    assume Tmp_1597 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    goto L273;

  L273:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L269;

  L269:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    call {:si_unique_call 972} sdv_KeReleaseSpinLock(0, cIrql_7);
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1611;
    assume {:nonnull} Tmp_1611 != 0;
    assume Tmp_1611 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    havoc Tmp_1603;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1609;
    call {:si_unique_call 973} WPP_SF_qq(Tmp_1609, 11, Tmp_1603, pdoExtension_12, Irp_17);
    goto L285;

  L285:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_17))] := -1073741823;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 974} vslice_dummy_var_137 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_12), Irp_17);
    call {:si_unique_call 975} sdv_IoCompleteRequest(0, 0);
    Tmp_1596 := -1073741823;
    goto L1;

  anon150_Then:
    goto L285;

  anon170_Then:
    goto L285;

  anon149_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L285;

  anon148_Then:
    goto L274;

  L274:
    call {:si_unique_call 976} sdv_IoMarkIrpPending(0);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    goto L308;

  L308:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    call {:si_unique_call 977} sdv_KeReleaseSpinLock(0, cIrql_7);
    call {:si_unique_call 978} Tmp_1607 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    call {:si_unique_call 979} sdv_KeRaiseIrql(2, Tmp_1607);
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    havoc cIrql_7;
    call {:si_unique_call 980} Sbp2StartIo#1(DeviceObject_26, Irp_17);
    call {:si_unique_call 981} sdv_KeLowerIrql(cIrql_7);
    goto L324;

  L324:
    Tmp_1596 := 259;
    goto L1;

  anon155_Then:
    call {:si_unique_call 982} sdv_KeReleaseSpinLock(0, cIrql_7);
    call {:si_unique_call 983} Sbp2DeferPendingRequest(pdoExtension_12, Irp_17);
    call {:si_unique_call 984} Sbp2SetDeferLoginTimer(pdoExtension_12);
    goto L324;

  anon153_Then:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    call {:si_unique_call 985} sdv_KeReleaseSpinLock(0, cIrql_7);
    call {:si_unique_call 986} Sbp2DeferPendingRequest(pdoExtension_12, Irp_17);
    goto L324;

  anon154_Then:
    goto L308;

  anon152_Then:
    goto L302;

  L302:
    call {:si_unique_call 987} sdv_KeReleaseSpinLock(0, cIrql_7);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    call {:si_unique_call 988} Sbp2StartPacket#1(DeviceObject_26, Irp_17, QueueSortKey__SCSI_REQUEST_BLOCK(srb_5));
    goto L324;

  anon151_Then:
    goto L302;

  anon145_Then:
    goto L274;

  anon146_Then:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    goto L273;

  anon147_Then:
    goto L269;

  anon169_Then:
    goto L269;

  anon168_Then:
    goto L269;

  anon164_Then:
    assume {:partition} 0 > status_46;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_17))] := status_46;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    call {:si_unique_call 989} sdv_IoCompleteRequest(0, 0);
    Tmp_1596 := status_46;
    goto L1;
}



procedure {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_9: int, actual_CallbackContext_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_9: int, actual_CallbackContext_1: int)
{
  var {:scalar} i_3: int;
  var {:pointer} Tmp_1629: int;
  var {:scalar} size: int;
  var {:pointer} Tmp_1633: int;
  var {:pointer} Tmp_1634: int;
  var {:pointer} Tmp_1635: int;
  var {:pointer} Tmp_1636: int;
  var {:pointer} Tmp_1637: int;
  var {:pointer} Tmp_1638: int;
  var {:pointer} Tmp_1639: int;
  var {:pointer} Tmp_1640: int;
  var {:pointer} Tmp_1641: int;
  var {:pointer} Tmp_1642: int;
  var {:scalar} sdv_505: int;
  var {:scalar} Tmp_1643: int;
  var {:pointer} Tmp_1644: int;
  var {:pointer} Tmp_1645: int;
  var {:pointer} Tmp_1646: int;
  var {:pointer} Tmp_1647: int;
  var {:pointer} Tmp_1648: int;
  var {:scalar} sdv_506: int;
  var {:pointer} Tmp_1650: int;
  var {:pointer} Tmp_1652: int;
  var {:scalar} sdv_507: int;
  var {:scalar} Tmp_1654: int;
  var {:pointer} Tmp_1655: int;
  var {:pointer} Tmp_1656: int;
  var {:pointer} Tmp_1657: int;
  var {:scalar} sdv_508: int;
  var {:scalar} sdv_509: int;
  var {:scalar} sdv_510: int;
  var {:pointer} Tmp_1660: int;
  var {:pointer} Tmp_1661: int;
  var {:pointer} Tmp_1662: int;
  var {:pointer} Tmp_1663: int;
  var {:pointer} Tmp_1664: int;
  var {:scalar} Tmp_1666: int;
  var {:pointer} Tmp_1667: int;
  var {:pointer} Tmp_1669: int;
  var {:scalar} sdv_511: int;
  var {:pointer} Tmp_1670: int;
  var {:pointer} Tmp_1671: int;
  var {:pointer} Tmp_1672: int;
  var {:pointer} Tmp_1673: int;
  var {:pointer} Tmp_1674: int;
  var {:pointer} Tmp_1675: int;
  var {:pointer} Tmp_1676: int;
  var {:pointer} Tmp_1677: int;
  var {:pointer} Tmp_1678: int;
  var {:pointer} DeviceExtension_9: int;
  var {:pointer} CallbackContext_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_139: int;

  anon0:
    call {:si_unique_call 990} vslice_dummy_var_139 := __HAVOC_malloc(4);
    DeviceExtension_9 := actual_DeviceExtension_9;
    CallbackContext_1 := actual_CallbackContext_1;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1629;
    assume {:nonnull} Tmp_1629 != 0;
    assume Tmp_1629 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1663;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1663 != 0;
    assume Tmp_1663 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1663 != 0;
    assume Tmp_1663 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1663 != 0;
    assume Tmp_1663 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1663 != 0;
    assume Tmp_1663 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1670;
    assume {:nonnull} Tmp_1670 != 0;
    assume Tmp_1670 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1638;
    assume {:nonnull} Tmp_1638 != 0;
    assume Tmp_1638 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L22;

  L22:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1660;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1644;
    assume {:nonnull} Tmp_1644 != 0;
    assume Tmp_1644 > 0;
    assume {:nonnull} Tmp_1660 != 0;
    assume Tmp_1660 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1676;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1676 != 0;
    assume Tmp_1676 > 0;
    goto L24;

  L24:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1648;
    assume {:nonnull} Tmp_1648 != 0;
    assume Tmp_1648 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1672;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1672 != 0;
    assume Tmp_1672 > 0;
    call {:si_unique_call 991} boogieTmp := corral_nondet();
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1652;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1678;
    assume {:nonnull} Tmp_1652 != 0;
    assume Tmp_1652 > 0;
    assume {:nonnull} Tmp_1678 != 0;
    assume Tmp_1678 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1677;
    assume {:nonnull} Tmp_1677 != 0;
    assume Tmp_1677 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1669;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1633;
    assume {:nonnull} Tmp_1633 != 0;
    assume Tmp_1633 > 0;
    assume {:nonnull} Tmp_1669 != 0;
    assume Tmp_1669 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1642;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1650;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1642 != 0;
    assume Tmp_1642 > 0;
    assume {:nonnull} Tmp_1650 != 0;
    assume Tmp_1650 > 0;
    goto L31;

  L31:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1645;
    assume {:nonnull} Tmp_1645 != 0;
    assume Tmp_1645 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_1666 := 16;
    goto L34;

  L34:
    size := Tmp_1666;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 992} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 993} sdv_RtlCopyMemory(0, 0, size);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1640;
    assume {:nonnull} Tmp_1640 != 0;
    assume Tmp_1640 > 0;
    return;

  anon26_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1641;
    assume {:nonnull} Tmp_1641 != 0;
    assume Tmp_1641 > 0;
    havoc Tmp_1666;
    goto L34;

  anon25_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1667;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1639;
    assume {:nonnull} Tmp_1639 != 0;
    assume Tmp_1639 > 0;
    assume {:nonnull} Tmp_1667 != 0;
    assume Tmp_1667 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1655;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1657;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1655 != 0;
    assume Tmp_1655 > 0;
    assume {:nonnull} Tmp_1657 != 0;
    assume Tmp_1657 > 0;
    goto L31;

  anon20_Then:
    goto L20;

  L20:
    i_3 := 0;
    goto L46;

  L46:
    call {:si_unique_call 994} i_3, Tmp_1643, Tmp_1654, Tmp_1656, Tmp_1675 := Sbp2InitializeOrb_loop_L46(i_3, Tmp_1643, Tmp_1654, Tmp_1656, sdv_509, sdv_510, Tmp_1675, CallbackContext_1);
    goto L46_last;

  L46_last:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_1643 := i_3;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1675;
    assume {:nonnull} Tmp_1675 != 0;
    assume Tmp_1675 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_1654 := i_3;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1656;
    assume {:nonnull} Tmp_1656 != 0;
    assume Tmp_1656 > 0;
    i_3 := i_3 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    goto L22;

  anon24_Then:
    goto L20;

  anon19_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1664;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1636;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1635;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    Tmp_1661 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_9);
    assume {:nonnull} Tmp_1635 != 0;
    assume Tmp_1635 > 0;
    assume {:nonnull} Tmp_1661 != 0;
    assume Tmp_1661 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1637;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    Tmp_1646 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_9);
    assume {:nonnull} Tmp_1637 != 0;
    assume Tmp_1637 > 0;
    assume {:nonnull} Tmp_1646 != 0;
    assume Tmp_1646 > 0;
    goto L63;

  L63:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1671;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1674;
    assume {:nonnull} Tmp_1671 != 0;
    assume Tmp_1671 > 0;
    assume {:nonnull} Tmp_1674 != 0;
    assume Tmp_1674 > 0;
    goto L24;

  anon22_Then:
    goto L59;

  L59:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1662;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1662 != 0;
    assume Tmp_1662 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1662 != 0;
    assume Tmp_1662 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1673;
    assume {:nonnull} Tmp_1673 != 0;
    assume Tmp_1673 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1634;
    assume {:nonnull} Tmp_1634 != 0;
    assume Tmp_1634 > 0;
    goto L63;

  anon27_Then:
    goto L59;

  anon23_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1647;
    assume {:nonnull} Tmp_1647 != 0;
    assume Tmp_1647 > 0;
    goto L24;
}



procedure {:origName "Sbp2ScsiGetCapabilities"} Sbp2ScsiGetCapabilities(actual_DeviceObject_27: int, actual_Irp_18: int) returns (Tmp_1679: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_1679 == -1073741789 || Tmp_1679 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ScsiGetCapabilities"} Sbp2ScsiGetCapabilities(actual_DeviceObject_27: int, actual_Irp_18: int) returns (Tmp_1679: int)
{
  var {:pointer} irpStack_12: int;
  var {:pointer} pdoExtension_13: int;
  var {:pointer} Tmp_1680: int;
  var {:pointer} ioCapabilities: int;
  var {:scalar} status_47: int;
  var {:pointer} DeviceObject_27: int;
  var {:pointer} Irp_18: int;

  anon0:
    DeviceObject_27 := actual_DeviceObject_27;
    Irp_18 := actual_Irp_18;
    call {:si_unique_call 995} irpStack_12 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    havoc ioCapabilities;
    assume {:nonnull} DeviceObject_27 != 0;
    assume DeviceObject_27 > 0;
    havoc pdoExtension_13;
    call {:si_unique_call 996} sdv_do_paged_code_check();
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    status_47 := -1073741789;
    goto L21;

  L21:
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_18))] := status_47;
    call {:si_unique_call 997} sdv_IoCompleteRequest(0, 0);
    Tmp_1679 := status_47;
    return;

  anon5_Then:
    call {:si_unique_call 998} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} pdoExtension_13 != 0;
    assume pdoExtension_13 > 0;
    havoc Tmp_1680;
    assume {:nonnull} Tmp_1680 != 0;
    assume Tmp_1680 > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    goto L30;

  L30:
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} DeviceObject_27 != 0;
    assume DeviceObject_27 > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    status_47 := 0;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    goto L21;

  anon6_Then:
    goto L30;
}



procedure {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_10: int, actual_Scsiop: int) returns (Tmp_1682: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_10: int, actual_Scsiop: int) returns (Tmp_1682: int)
{
  var {:scalar} Tmp_1683: int;
  var {:scalar} waitValue_3: int;
  var {:pointer} cdb_2: int;
  var {:pointer} Tmp_1684: int;
  var {:pointer} modeMdl: int;
  var {:pointer} Tmp_1685: int;
  var {:pointer} Tmp_1686: int;
  var {:pointer} Tmp_1687: int;
  var {:pointer} Tmp_1688: int;
  var {:scalar} Tmp_1689: int;
  var {:pointer} Tmp_1690: int;
  var {:pointer} Tmp_1691: int;
  var {:scalar} Tmp_1692: int;
  var {:scalar} Tmp_1693: int;
  var {:scalar} Tmp_1694: int;
  var {:pointer} Tmp_1695: int;
  var {:pointer} Tmp_1696: int;
  var {:pointer} Tmp_1697: int;
  var {:pointer} sdv_516: int;
  var {:scalar} Tmp_1698: int;
  var {:pointer} irp_4: int;
  var {:pointer} senseInfoBuffer: int;
  var {:pointer} Tmp_1699: int;
  var {:pointer} Tmp_1700: int;
  var {:pointer} Tmp_1701: int;
  var {:pointer} Tmp_1702: int;
  var {:pointer} srb_6: int;
  var {:scalar} Tmp_1703: int;
  var {:pointer} Tmp_1704: int;
  var {:pointer} Tmp_1705: int;
  var {:scalar} event_1: int;
  var {:scalar} Tmp_1706: int;
  var {:scalar} Tmp_1707: int;
  var {:scalar} Tmp_1708: int;
  var {:scalar} Tmp_1709: int;
  var {:scalar} i_4: int;
  var {:pointer} Tmp_1710: int;
  var {:pointer} Tmp_1711: int;
  var {:pointer} irpStack_13: int;
  var {:pointer} Tmp_1712: int;
  var {:pointer} Tmp_1713: int;
  var {:pointer} inquiryMdl: int;
  var {:pointer} sdv_519: int;
  var {:pointer} context_1: int;
  var {:scalar} Tmp_1714: int;
  var {:pointer} sdv_520: int;
  var {:pointer} Tmp_1715: int;
  var {:scalar} Tmp_1716: int;
  var {:scalar} Tmp_1717: int;
  var {:scalar} Tmp_1718: int;
  var {:scalar} cIrql_8: int;
  var {:pointer} Tmp_1719: int;
  var {:scalar} Tmp_1720: int;
  var {:scalar} status_48: int;
  var {:scalar} Tmp_1721: int;
  var {:scalar} retryCount: int;
  var {:scalar} Tmp_1722: int;
  var {:pointer} Tmp_1723: int;
  var {:pointer} DeviceExtension_10: int;
  var {:scalar} Scsiop: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_2816: int;
  var vslice_dummy_var_2817: int;

  anon0:
    call {:si_unique_call 999} waitValue_3 := __HAVOC_malloc(20);
    call {:si_unique_call 1000} event_1 := __HAVOC_malloc(156);
    DeviceExtension_10 := actual_DeviceExtension_10;
    Scsiop := actual_Scsiop;
    call {:si_unique_call 1001} Tmp_1685 := __HAVOC_malloc(4);
    call {:si_unique_call 1002} Tmp_1691 := __HAVOC_malloc(4);
    call {:si_unique_call 1003} Tmp_1695 := __HAVOC_malloc(4);
    call {:si_unique_call 1004} Tmp_1699 := __HAVOC_malloc(4);
    call {:si_unique_call 1005} Tmp_1701 := __HAVOC_malloc(4);
    call {:si_unique_call 1006} Tmp_1702 := __HAVOC_malloc(4);
    call {:si_unique_call 1007} Tmp_1704 := __HAVOC_malloc(4);
    call {:si_unique_call 1008} Tmp_1713 := __HAVOC_malloc(4);
    call {:si_unique_call 1009} Tmp_1715 := __HAVOC_malloc(4);
    call {:si_unique_call 1010} Tmp_1723 := __HAVOC_malloc(4);
    status_48 := -1073741670;
    retryCount := 0;
    context_1 := 0;
    inquiryMdl := 0;
    modeMdl := 0;
    call {:si_unique_call 1011} Tmp_1719 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1719 != 0;
    assume Tmp_1719 > 0;
    call {:si_unique_call 1012} sdv_KeAcquireSpinLock(0, Tmp_1719);
    assume {:nonnull} Tmp_1719 != 0;
    assume Tmp_1719 > 0;
    havoc cIrql_8;
    call {:si_unique_call 1013} sdv_519 := sdv_ExAllocateFromNPagedLookasideList(0);
    context_1 := sdv_519;
    call {:si_unique_call 1014} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} context_1 == 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1685;
    assume {:nonnull} Tmp_1685 != 0;
    assume Tmp_1685 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    havoc Tmp_1690;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1689;
    call {:si_unique_call 1015} WPP_SF_q(Tmp_1689, 51, Tmp_1690, DeviceExtension_10);
    goto L320;

  L320:
    Tmp_1682 := status_48;
    goto L1;

  L1:
    return;

  anon142_Then:
    goto L320;

  anon162_Then:
    goto L320;

  anon141_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L320;

  anon109_Then:
    assume {:partition} context_1 != 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    call {:si_unique_call 1016} sdv_520 := ExAllocatePoolWithTag(516, 18, 846226035);
    senseInfoBuffer := sdv_520;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} senseInfoBuffer == 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1695;
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    havoc Tmp_1700;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1720;
    call {:si_unique_call 1017} WPP_SF_q(Tmp_1720, 52, Tmp_1700, DeviceExtension_10);
    goto L311;

  L311:
    Tmp_1682 := status_48;
    goto L1;

  anon140_Then:
    goto L311;

  anon161_Then:
    goto L311;

  anon139_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L311;

  anon144_Then:
    assume {:partition} senseInfoBuffer != 0;
    call {:si_unique_call 1018} sdv_516 := ExAllocatePoolWithTag(516, 64, 846226035);
    srb_6 := sdv_516;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} srb_6 != 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc Tmp_1687;
    assume {:nonnull} Tmp_1687 != 0;
    assume Tmp_1687 > 0;
    havoc vslice_dummy_var_2816;
    call {:si_unique_call 1019} irp_4 := IoAllocateIrp(vslice_dummy_var_2816, 0);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} irp_4 != 0;
    goto L63;

  L63:
    call {:si_unique_call 1020} Tmp_1683, cdb_2, modeMdl, Tmp_1686, Tmp_1688, Tmp_1691, Tmp_1692, Tmp_1693, Tmp_1694, Tmp_1696, Tmp_1697, Tmp_1698, Tmp_1699, Tmp_1701, Tmp_1703, Tmp_1706, Tmp_1707, i_4, Tmp_1710, Tmp_1711, irpStack_13, Tmp_1713, inquiryMdl, Tmp_1715, Tmp_1717, status_48, Tmp_1721, retryCount, Tmp_1722, vslice_dummy_var_140, vslice_dummy_var_141 := Sbp2IssueInternalCommand_loop_L63(Tmp_1683, waitValue_3, cdb_2, modeMdl, Tmp_1686, Tmp_1688, Tmp_1691, Tmp_1692, Tmp_1693, Tmp_1694, Tmp_1696, Tmp_1697, Tmp_1698, irp_4, senseInfoBuffer, Tmp_1699, Tmp_1701, srb_6, Tmp_1703, event_1, Tmp_1706, Tmp_1707, i_4, Tmp_1710, Tmp_1711, irpStack_13, Tmp_1713, inquiryMdl, context_1, Tmp_1715, Tmp_1717, status_48, Tmp_1721, retryCount, Tmp_1722, DeviceExtension_10, Scsiop, vslice_dummy_var_140, vslice_dummy_var_141);
    goto L63_last;

  L63_last:
    call {:si_unique_call 1057} irpStack_13 := sdv_IoGetNextIrpStackLocation(irp_4);
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    call {:si_unique_call 1058} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    cdb_2 := Cdb__SCSI_REQUEST_BLOCK(srb_6);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} Scsiop != 18;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Scsiop == 26;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} retryCount != 0;
    goto L96;

  L96:
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto L84;

  L84:
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    call {:si_unique_call 1021} KeInitializeEvent(Event__REQUEST_CONTEXT(context_1), 0, 0);
    call {:si_unique_call 1022} sdv_IoSetCompletionRoutine(irp_4, li2bplFunctionConstant523, context_1, 1, 1, 1);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1691;
    assume {:nonnull} Tmp_1691 != 0;
    assume Tmp_1691 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    Tmp_1722 := Scsiop;
    havoc Tmp_1710;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1683;
    call {:si_unique_call 1023} WPP_SF_qDq(Tmp_1683, 55, Tmp_1710, DeviceExtension_10, Tmp_1722, irp_4);
    goto L157;

  L157:
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc vslice_dummy_var_2817;
    call {:si_unique_call 1024} status_48 := sdv_IoCallDriver(vslice_dummy_var_2817, irp_4);
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_4))] >= 0;
    goto L171;

  L171:
    call {:si_unique_call 1025} vslice_dummy_var_140 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1721;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} Tmp_1721 != 1;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1713;
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1693;
    Tmp_1694 := Scsiop;
    havoc Tmp_1711;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1707;
    call {:si_unique_call 1026} WPP_SF_qDD(Tmp_1707, 57, Tmp_1711, DeviceExtension_10, Tmp_1694, Tmp_1693);
    goto L181;

  L181:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1717;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} Tmp_1717 == 18;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1715;
    assume {:nonnull} Tmp_1715 != 0;
    assume Tmp_1715 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    havoc Tmp_1697;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1706;
    call {:si_unique_call 1027} WPP_SF_q(Tmp_1706, 58, Tmp_1697, DeviceExtension_10);
    goto L197;

  L197:
    status_48 := 0;
    goto L205;

  L205:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} status_48 != 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} 5 > retryCount;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1701;
    assume {:nonnull} Tmp_1701 != 0;
    assume Tmp_1701 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    havoc Tmp_1686;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1703;
    call {:si_unique_call 1028} WPP_SF_q(Tmp_1703, 60, Tmp_1686, DeviceExtension_10);
    goto L213;

  L213:
    i_4 := 0;
    goto L221;

  L221:
    call {:si_unique_call 1029} i_4, vslice_dummy_var_141 := Sbp2IssueInternalCommand_loop_L221(waitValue_3, event_1, i_4, DeviceExtension_10, vslice_dummy_var_141);
    goto L221_last;

  L221_last:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} 6 > i_4;
    call {:si_unique_call 1030} KeInitializeEvent(event_1, 0, 0);
    assume {:nonnull} waitValue_3 != 0;
    assume waitValue_3 > 0;
    call {:si_unique_call 1031} vslice_dummy_var_141 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_3);
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    i_4 := i_4 + 1;
    goto anon130_Else_dummy;

  anon130_Else_dummy:
    assume false;
    return;

  anon130_Then:
    goto L206;

  L206:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} 3 > retryCount;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} status_48 == 0;
    goto L104;

  L104:
    call {:si_unique_call 1032} sdv_ExFreePool(0);
    call {:si_unique_call 1033} sdv_ExFreePool(0);
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    call {:si_unique_call 1034} IoFreeMdl(0);
    goto L111;

  L111:
    call {:si_unique_call 1035} IoFreeIrp(0);
    call {:si_unique_call 1036} Tmp_1719 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1719 != 0;
    assume Tmp_1719 > 0;
    call {:si_unique_call 1037} sdv_KeAcquireSpinLock(0, Tmp_1719);
    assume {:nonnull} Tmp_1719 != 0;
    assume Tmp_1719 > 0;
    havoc cIrql_8;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 1038} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    call {:si_unique_call 1039} sdv_KeReleaseSpinLock(0, cIrql_8);
    Tmp_1682 := status_48;
    goto L1;

  anon112_Then:
    goto L111;

  anon131_Then:
    assume {:partition} status_48 != 0;
    goto anon131_Then_dummy;

  anon131_Then_dummy:
    assume false;
    return;

  anon124_Then:
    assume {:partition} retryCount >= 3;
    goto L104;

  anon129_Then:
    assume {:partition} i_4 >= 6;
    goto L206;

  anon128_Then:
    goto L213;

  anon153_Then:
    goto L213;

  anon127_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L213;

  anon126_Then:
    assume {:partition} retryCount >= 5;
    goto L206;

  anon125_Then:
    goto L206;

  anon123_Then:
    assume {:partition} status_48 == 0;
    goto L206;

  anon122_Then:
    goto L197;

  anon152_Then:
    goto L197;

  anon121_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L197;

  anon151_Then:
    assume {:partition} Tmp_1717 != 18;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} senseInfoBuffer != 0;
    assume senseInfoBuffer > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    status_48 := -1073741808;
    retryCount := retryCount + 1;
    goto L205;

  anon132_Then:
    goto L233;

  L233:
    retryCount := retryCount + 1;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1699;
    assume {:nonnull} Tmp_1699 != 0;
    assume Tmp_1699 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    Tmp_1698 := Scsiop;
    havoc Tmp_1696;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1692;
    call {:si_unique_call 1040} WPP_SF_qDd(Tmp_1692, 59, Tmp_1696, DeviceExtension_10, Tmp_1698, retryCount);
    goto L241;

  L241:
    status_48 := -1073741823;
    goto L205;

  anon133_Then:
    goto L241;

  anon155_Then:
    goto L241;

  anon154_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L241;

  anon120_Then:
    goto L233;

  anon119_Then:
    goto L181;

  anon150_Then:
    goto L181;

  anon118_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L181;

  anon149_Then:
    assume {:partition} Tmp_1721 == 1;
    status_48 := 0;
    goto L206;

  anon116_Then:
    assume {:partition} 0 > Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_4))];
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} status_48 != 259;
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    status_48 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_4))];
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1702;
    assume {:nonnull} Tmp_1702 != 0;
    assume Tmp_1702 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1709;
    Tmp_1718 := Scsiop;
    havoc Tmp_1712;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1714;
    call {:si_unique_call 1041} WPP_SF_qDqDD(Tmp_1714, 56, Tmp_1712, DeviceExtension_10, Tmp_1718, irp_4, status_48, Tmp_1709);
    goto L104;

  anon134_Then:
    goto L104;

  anon157_Then:
    goto L104;

  anon156_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L104;

  anon117_Then:
    assume {:partition} status_48 == 259;
    goto L171;

  anon115_Then:
    goto L157;

  anon148_Then:
    goto L157;

  anon114_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L157;

  anon158_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 1042} modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} modeMdl == 0;
    goto L104;

  anon111_Then:
    assume {:partition} modeMdl != 0;
    goto L96;

  anon143_Then:
    assume {:partition} Scsiop != 26;
    goto L84;

  anon146_Then:
    assume {:partition} Scsiop == 18;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc Tmp_1688;
    assume {:nonnull} Tmp_1688 != 0;
    assume Tmp_1688 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} retryCount != 0;
    goto L138;

  L138:
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto L84;

  anon147_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 1043} inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} inquiryMdl != 0;
    goto L138;

  anon113_Then:
    assume {:partition} inquiryMdl == 0;
    goto L104;

  anon110_Then:
    assume {:partition} irp_4 == 0;
    call {:si_unique_call 1044} sdv_ExFreePool(0);
    call {:si_unique_call 1045} sdv_ExFreePool(0);
    call {:si_unique_call 1046} Tmp_1719 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1719 != 0;
    assume Tmp_1719 > 0;
    call {:si_unique_call 1047} sdv_KeAcquireSpinLock(0, Tmp_1719);
    assume {:nonnull} Tmp_1719 != 0;
    assume Tmp_1719 > 0;
    havoc cIrql_8;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 1048} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    call {:si_unique_call 1049} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1704;
    assume {:nonnull} Tmp_1704 != 0;
    assume Tmp_1704 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    havoc Tmp_1684;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1716;
    call {:si_unique_call 1050} WPP_SF_q(Tmp_1716, 54, Tmp_1684, DeviceExtension_10);
    goto L281;

  L281:
    Tmp_1682 := status_48;
    goto L1;

  anon136_Then:
    goto L281;

  anon159_Then:
    goto L281;

  anon135_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L281;

  anon145_Then:
    assume {:partition} srb_6 == 0;
    call {:si_unique_call 1051} sdv_ExFreePool(0);
    call {:si_unique_call 1052} Tmp_1719 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1719 != 0;
    assume Tmp_1719 > 0;
    call {:si_unique_call 1053} sdv_KeAcquireSpinLock(0, Tmp_1719);
    assume {:nonnull} Tmp_1719 != 0;
    assume Tmp_1719 > 0;
    havoc cIrql_8;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 1054} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    call {:si_unique_call 1055} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1723;
    assume {:nonnull} Tmp_1723 != 0;
    assume Tmp_1723 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    havoc Tmp_1705;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1708;
    call {:si_unique_call 1056} WPP_SF_q(Tmp_1708, 53, Tmp_1705, DeviceExtension_10);
    goto L302;

  L302:
    Tmp_1682 := status_48;
    goto L1;

  anon138_Then:
    goto L302;

  anon160_Then:
    goto L302;

  anon137_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L302;
}



procedure {:origName "ConvertSbp2SenseDataToScsi"} ConvertSbp2SenseDataToScsi(actual_StatusBlock_1: int, actual_SenseBuffer: int, actual_SenseBufferLength: int) returns (Tmp_1724: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1724 == 1 || Tmp_1724 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ConvertSbp2SenseDataToScsi"} ConvertSbp2SenseDataToScsi(actual_StatusBlock_1: int, actual_SenseBuffer: int, actual_SenseBufferLength: int) returns (Tmp_1724: int)
{
  var {:pointer} Tmp_1725: int;
  var {:pointer} Tmp_1726: int;
  var {:pointer} Tmp_1727: int;
  var {:pointer} Tmp_1728: int;
  var {:pointer} Tmp_1729: int;
  var {:pointer} Tmp_1732: int;
  var {:pointer} Tmp_1733: int;
  var {:pointer} Tmp_1734: int;
  var {:scalar} Tmp_1735: int;
  var {:pointer} Tmp_1736: int;
  var {:scalar} validSense: int;
  var {:pointer} Tmp_1737: int;
  var {:pointer} Tmp_1738: int;
  var {:pointer} Tmp_1739: int;
  var {:pointer} Tmp_1740: int;
  var {:pointer} Tmp_1741: int;
  var {:pointer} Tmp_1742: int;
  var {:pointer} Tmp_1743: int;
  var {:pointer} Tmp_1744: int;
  var {:pointer} Tmp_1745: int;
  var {:pointer} Tmp_1746: int;
  var {:pointer} StatusBlock_1: int;
  var {:pointer} SenseBuffer: int;
  var {:scalar} SenseBufferLength: int;
  var boogieTmp: int;

  anon0:
    StatusBlock_1 := actual_StatusBlock_1;
    SenseBuffer := actual_SenseBuffer;
    SenseBufferLength := actual_SenseBufferLength;
    call {:si_unique_call 1059} Tmp_1725 := __HAVOC_malloc(228);
    call {:si_unique_call 1060} Tmp_1726 := __HAVOC_malloc(228);
    call {:si_unique_call 1061} Tmp_1727 := __HAVOC_malloc(228);
    call {:si_unique_call 1062} Tmp_1728 := __HAVOC_malloc(228);
    call {:si_unique_call 1063} Tmp_1729 := __HAVOC_malloc(228);
    call {:si_unique_call 1064} Tmp_1732 := __HAVOC_malloc(228);
    call {:si_unique_call 1065} Tmp_1733 := __HAVOC_malloc(228);
    call {:si_unique_call 1066} Tmp_1734 := __HAVOC_malloc(228);
    call {:si_unique_call 1067} Tmp_1736 := __HAVOC_malloc(228);
    call {:si_unique_call 1068} Tmp_1737 := __HAVOC_malloc(228);
    call {:si_unique_call 1069} Tmp_1738 := __HAVOC_malloc(228);
    call {:si_unique_call 1070} Tmp_1739 := __HAVOC_malloc(228);
    call {:si_unique_call 1071} Tmp_1740 := __HAVOC_malloc(228);
    call {:si_unique_call 1072} Tmp_1741 := __HAVOC_malloc(228);
    call {:si_unique_call 1073} Tmp_1742 := __HAVOC_malloc(228);
    call {:si_unique_call 1074} Tmp_1743 := __HAVOC_malloc(228);
    call {:si_unique_call 1075} Tmp_1744 := __HAVOC_malloc(228);
    call {:si_unique_call 1076} Tmp_1745 := __HAVOC_malloc(228);
    call {:si_unique_call 1077} Tmp_1746 := __HAVOC_malloc(228);
    validSense := 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} SenseBuffer != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} 14 <= SenseBufferLength;
    call {:si_unique_call 1078} sdv_RtlZeroMemory(0, SenseBufferLength);
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1733;
    assume {:nonnull} Tmp_1733 != 0;
    assume Tmp_1733 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1726;
    assume {:nonnull} Tmp_1726 != 0;
    assume Tmp_1726 > 0;
    havoc Tmp_1735;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Tmp_1735 == 1;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    validSense := 1;
    goto L15;

  L15:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} validSense != 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1732;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1732 != 0;
    assume Tmp_1732 > 0;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1741;
    assume {:nonnull} Tmp_1741 != 0;
    assume Tmp_1741 > 0;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    call {:si_unique_call 1079} boogieTmp := corral_nondet();
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1727;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1727 != 0;
    assume Tmp_1727 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1745;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1745 != 0;
    assume Tmp_1745 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1743;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1743 != 0;
    assume Tmp_1743 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1738;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1738 != 0;
    assume Tmp_1738 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1744;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1744 != 0;
    assume Tmp_1744 > 0;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1746;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1746 != 0;
    assume Tmp_1746 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1729;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1729 != 0;
    assume Tmp_1729 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1739;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1739 != 0;
    assume Tmp_1739 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1736;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1736 != 0;
    assume Tmp_1736 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1737;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1737 != 0;
    assume Tmp_1737 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1725;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1725 != 0;
    assume Tmp_1725 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} SenseBufferLength >= 18;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1728;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1728 != 0;
    assume Tmp_1728 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1740;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1740 != 0;
    assume Tmp_1740 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1742;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1742 != 0;
    assume Tmp_1742 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1734;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1734 != 0;
    assume Tmp_1734 > 0;
    goto L18;

  L18:
    Tmp_1724 := validSense;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} 18 > SenseBufferLength;
    goto L18;

  anon14_Then:
    assume {:partition} validSense == 0;
    goto L18;

  anon17_Then:
    assume {:partition} Tmp_1735 != 1;
    goto L15;

  anon16_Then:
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    validSense := 1;
    goto L15;

  anon13_Then:
    assume {:partition} SenseBufferLength < 14;
    goto L6;

  L6:
    Tmp_1724 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} SenseBuffer == 0;
    goto L6;
}



procedure {:origName "WPP_SF_qDq"} WPP_SF_qDq(actual_Logger_21: int, actual_id_21: int, actual_TraceGuid_21: int, actual_s_p_e_c_i_a_l_85: int, actual_s_p_e_c_i_a_l_86: int, actual_s_p_e_c_i_a_l_87: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qDq"} WPP_SF_qDq(actual_Logger_21: int, actual_id_21: int, actual_TraceGuid_21: int, actual_s_p_e_c_i_a_l_85: int, actual_s_p_e_c_i_a_l_86: int, actual_s_p_e_c_i_a_l_87: int)
{
  var {:pointer} TraceGuid_21: int;
  var vslice_dummy_var_142: int;

  anon0:
    call {:si_unique_call 1080} vslice_dummy_var_142 := __HAVOC_malloc(4);
    TraceGuid_21 := actual_TraceGuid_21;
    return;
}



procedure {:origName "Sbp2BuildMiniportDescriptor"} Sbp2BuildMiniportDescriptor(actual_DeviceObject_28: int, actual_Descriptor: int, actual_DescriptorLength: int) returns (Tmp_1786: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1786 == -1073741808 || Tmp_1786 == -1073741789 || Tmp_1786 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2BuildMiniportDescriptor"} Sbp2BuildMiniportDescriptor(actual_DeviceObject_28: int, actual_Descriptor: int, actual_DescriptorLength: int) returns (Tmp_1786: int)
{
  var {:pointer} Descriptor: int;
  var {:pointer} DescriptorLength: int;

  anon0:
    Descriptor := actual_Descriptor;
    DescriptorLength := actual_DescriptorLength;
    call {:si_unique_call 1081} sdv_do_paged_code_check();
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1786 := -1073741808;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1786 := -1073741789;
    goto L1;

  anon10_Then:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1786 := 0;
    goto L1;

  anon12_Then:
    goto L13;

  L13:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1786 := 0;
    goto L1;

  anon11_Then:
    goto L13;
}



procedure {:origName "Sbp2QueryProperty"} Sbp2QueryProperty(actual_DeviceObject_29: int, actual_QueryIrp: int) returns (Tmp_1788: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_1788 == -1073741585 || Tmp_1788 == 0 || Tmp_1788 == -1073741808 || Tmp_1788 == -1073741789 || Tmp_1788 == 17 || Tmp_1788 == -1073741823 || Tmp_1788 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2QueryProperty"} Sbp2QueryProperty(actual_DeviceObject_29: int, actual_QueryIrp: int) returns (Tmp_1788: int)
{
  var {:pointer} irpStack_14: int;
  var {:pointer} Tmp_1789: int;
  var {:pointer} query: int;
  var {:pointer} Tmp_1790: int;
  var {:dopa} {:scalar} queryLength: int;
  var {:scalar} status_50: int;
  var {:pointer} Tmp_1791: int;
  var {:pointer} deviceExtension_5: int;
  var {:pointer} DeviceObject_29: int;
  var {:pointer} QueryIrp: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_2818: int;
  var vslice_dummy_var_2819: int;
  var vslice_dummy_var_2820: int;

  anon0:
    call {:si_unique_call 1082} queryLength := __HAVOC_malloc(4);
    DeviceObject_29 := actual_DeviceObject_29;
    QueryIrp := actual_QueryIrp;
    call {:si_unique_call 1083} irpStack_14 := sdv_IoGetCurrentIrpStackLocation(QueryIrp);
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    havoc deviceExtension_5;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    havoc query;
    assume {:nonnull} irpStack_14 != 0;
    assume irpStack_14 > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    call {:si_unique_call 1084} sdv_do_paged_code_check();
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    status_50 := -1073741585;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(QueryIrp))] := status_50;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 1085} sdv_IoCompleteRequest(0, 0);
    Tmp_1788 := status_50;
    goto L1;

  L1:
    return;

  anon17_Then:
    call {:si_unique_call 1086} status_50 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} status_50 >= 0;
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    status_50 := 0;
    goto L42;

  L42:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(QueryIrp))] := status_50;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 1087} vslice_dummy_var_143 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), 0);
    call {:si_unique_call 1088} sdv_IoCompleteRequest(0, 1);
    Tmp_1788 := status_50;
    goto L1;

  anon22_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1790 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1790 != 0;
    assume Tmp_1790 > 0;
    havoc vslice_dummy_var_2818;
    call {:si_unique_call 1089} status_50 := Sbp2BuildMiniportDescriptor(DeviceObject_29, vslice_dummy_var_2818, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon23_Then:
    status_50 := -1073741585;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    goto L42;

  anon24_Then:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    status_50 := 0;
    goto L42;

  anon21_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1791 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1791 != 0;
    assume Tmp_1791 > 0;
    havoc vslice_dummy_var_2819;
    call {:si_unique_call 1090} status_50 := Sbp2BuildAdapterDescriptor(DeviceObject_29, vslice_dummy_var_2819, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon19_Then:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    status_50 := 0;
    goto L42;

  anon20_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1789 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1789 != 0;
    assume Tmp_1789 > 0;
    havoc vslice_dummy_var_2820;
    call {:si_unique_call 1091} status_50 := Sbp2BuildDeviceDescriptor(DeviceObject_29, vslice_dummy_var_2820, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon18_Then:
    assume {:partition} 0 > status_50;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(QueryIrp))] := status_50;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 1092} sdv_IoCompleteRequest(0, 0);
    Tmp_1788 := status_50;
    goto L1;
}



procedure {:origName "Sbp2BuildAdapterDescriptor"} Sbp2BuildAdapterDescriptor(actual_DeviceObject_30: int, actual_Descriptor_1: int, actual_DescriptorLength_1: int) returns (Tmp_1793: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1793 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2BuildAdapterDescriptor"} Sbp2BuildAdapterDescriptor(actual_DeviceObject_30: int, actual_Descriptor_1: int, actual_DescriptorLength_1: int) returns (Tmp_1793: int)
{
  var {:scalar} realLength: int;
  var {:scalar} tmp_1: int;
  var {:pointer} Tmp_1795: int;
  var {:pointer} deviceExtension_6: int;
  var {:pointer} DeviceObject_30: int;
  var {:pointer} DescriptorLength_1: int;
  var vslice_dummy_var_2821: int;

  anon0:
    call {:si_unique_call 1093} tmp_1 := __HAVOC_malloc(56);
    DeviceObject_30 := actual_DeviceObject_30;
    DescriptorLength_1 := actual_DescriptorLength_1;
    assume {:nonnull} DeviceObject_30 != 0;
    assume DeviceObject_30 > 0;
    havoc deviceExtension_6;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    call {:si_unique_call 1094} sdv_do_paged_code_check();
    realLength := 32;
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L30;

  L30:
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    havoc vslice_dummy_var_2821;
    call {:si_unique_call 1095} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2821);
    Tmp_1793 := 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_1795;
    assume {:nonnull} Tmp_1795 != 0;
    assume Tmp_1795 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L38;

  L38:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1096} sdv_RtlCopyMemory(0, 0, 30);
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto L55;

  L55:
    Tmp_1793 := 0;
    goto L1;

  anon15_Then:
    call {:si_unique_call 1097} sdv_RtlCopyMemory(0, 0, 32);
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto L55;

  anon14_Then:
    goto L38;

  anon11_Then:
    goto L26;

  L26:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L30;

  anon13_Then:
    goto L26;
}



procedure {:origName "Sbp2BuildDeviceDescriptor"} Sbp2BuildDeviceDescriptor(actual_DeviceObject_31: int, actual_Descriptor_2: int, actual_DescriptorLength_2: int) returns (Tmp_1796: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1796 == 0 || Tmp_1796 == 17;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2BuildDeviceDescriptor"} Sbp2BuildDeviceDescriptor(actual_DeviceObject_31: int, actual_Descriptor_2: int, actual_DescriptorLength_2: int) returns (Tmp_1796: int)
{
  var {:scalar} Tmp_1797: int;
  var {:scalar} bytesRemaining: int;
  var {:scalar} infoLength: int;
  var {:scalar} maxLength: int;
  var {:pointer} Tmp_1798: int;
  var {:pointer} Tmp_1799: int;
  var {:pointer} Tmp_1800: int;
  var {:pointer} Tmp_1801: int;
  var {:scalar} Tmp_1802: int;
  var {:pointer} inquiryData: int;
  var {:scalar} Tmp_1803: int;
  var {:pointer} Tmp_1804: int;
  var {:pointer} Tmp_1805: int;
  var {:pointer} Tmp_1806: int;
  var {:pointer} currentOffset: int;
  var {:pointer} Tmp_1808: int;
  var {:pointer} Tmp_1809: int;
  var {:pointer} Tmp_1810: int;
  var {:scalar} realLength_1: int;
  var {:scalar} tmp_2: int;
  var {:scalar} status_51: int;
  var {:pointer} deviceExtension_7: int;
  var {:pointer} Tmp_1811: int;
  var {:pointer} DeviceObject_31: int;
  var {:pointer} Descriptor_2: int;
  var {:pointer} DescriptorLength_2: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_2822: int;
  var vslice_dummy_var_2823: int;
  var vslice_dummy_var_2824: int;

  anon0:
    call {:si_unique_call 1098} tmp_2 := __HAVOC_malloc(52);
    DeviceObject_31 := actual_DeviceObject_31;
    Descriptor_2 := actual_Descriptor_2;
    DescriptorLength_2 := actual_DescriptorLength_2;
    call {:si_unique_call 1099} Tmp_1799 := __HAVOC_malloc(28);
    call {:si_unique_call 1100} Tmp_1800 := __HAVOC_malloc(8);
    call {:si_unique_call 1101} Tmp_1801 := __HAVOC_malloc(36);
    call {:si_unique_call 1102} Tmp_1804 := __HAVOC_malloc(8);
    call {:si_unique_call 1103} Tmp_1808 := __HAVOC_malloc(16);
    call {:si_unique_call 1104} Tmp_1809 := __HAVOC_malloc(20);
    call {:si_unique_call 1105} Tmp_1810 := __HAVOC_malloc(32);
    status_51 := 0;
    assume {:nonnull} DescriptorLength_2 != 0;
    assume DescriptorLength_2 > 0;
    havoc maxLength;
    bytesRemaining := maxLength;
    realLength_1 := 40;
    currentOffset := Descriptor_2;
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    havoc deviceExtension_7;
    call {:si_unique_call 1106} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    inquiryData := InquiryData__DEVICE_EXTENSION(deviceExtension_7);
    infoLength := 48;
    realLength_1 := realLength_1 + infoLength;
    call {:si_unique_call 1107} sdv_RtlZeroMemory(0, maxLength);
    call {:si_unique_call 1108} sdv_RtlZeroMemory(0, 40);
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L36;

  L36:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    goto L38;

  L38:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} bytesRemaining > 40;
    Tmp_1803 := 40;
    goto L43;

  L43:
    call {:si_unique_call 1109} sdv_RtlCopyMemory(0, 0, Tmp_1803);
    bytesRemaining := bytesRemaining - 40;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 0 >= bytesRemaining;
    Tmp_1796 := status_51;
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} bytesRemaining > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_1810;
    assume {:nonnull} Tmp_1810 != 0;
    assume Tmp_1810 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L54;

  L54:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} 8 >= bytesRemaining;
    Tmp_1796 := 0;
    goto L1;

  anon22_Then:
    assume {:partition} bytesRemaining > 8;
    call {:si_unique_call 1110} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 9;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} 16 >= bytesRemaining;
    Tmp_1796 := status_51;
    goto L1;

  anon28_Then:
    assume {:partition} bytesRemaining > 16;
    call {:si_unique_call 1111} sdv_RtlCopyMemory(0, 0, 16);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 17;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} 4 >= bytesRemaining;
    Tmp_1796 := status_51;
    goto L1;

  anon29_Then:
    assume {:partition} bytesRemaining > 4;
    call {:si_unique_call 1112} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 5;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 16 >= bytesRemaining;
    Tmp_1796 := status_51;
    goto L1;

  anon30_Then:
    assume {:partition} bytesRemaining > 16;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_1811;
    assume {:nonnull} Tmp_1811 != 0;
    assume Tmp_1811 > 0;
    havoc Tmp_1798;
    assume {:nonnull} Tmp_1798 != 0;
    assume Tmp_1798 > 0;
    havoc Tmp_1800;
    assume {:nonnull} Tmp_1800 != 0;
    assume Tmp_1800 > 0;
    havoc Tmp_1802;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_1805;
    assume {:nonnull} Tmp_1805 != 0;
    assume Tmp_1805 > 0;
    havoc Tmp_1806;
    assume {:nonnull} Tmp_1806 != 0;
    assume Tmp_1806 > 0;
    havoc Tmp_1804;
    assume {:nonnull} Tmp_1804 != 0;
    assume Tmp_1804 > 0;
    havoc Tmp_1797;
    Tmp_1801 := strConst__li2bpl28;
    call {:si_unique_call 1113} vslice_dummy_var_144 := RtlStringCbPrintfA(currentOffset, bytesRemaining, Tmp_1801);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    assume {:nonnull} DescriptorLength_2 != 0;
    assume DescriptorLength_2 > 0;
    Tmp_1796 := status_51;
    goto L1;

  anon27_Then:
    Tmp_1799 := strConst__li2bpl25;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_2822;
    call {:si_unique_call 1114} vslice_dummy_var_145 := RtlStringCbPrintfA(vslice_dummy_var_2822, 8, Tmp_1799);
    Tmp_1809 := strConst__li2bpl26;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_2823;
    call {:si_unique_call 1115} vslice_dummy_var_146 := RtlStringCbPrintfA(vslice_dummy_var_2823, 16, Tmp_1809);
    Tmp_1808 := strConst__li2bpl27;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_2824;
    call {:si_unique_call 1116} vslice_dummy_var_147 := RtlStringCbPrintfA(vslice_dummy_var_2824, 4, Tmp_1808);
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    status_51 := 17;
    goto L54;

  anon23_Then:
    goto L54;

  anon25_Then:
    assume {:partition} 40 >= bytesRemaining;
    Tmp_1803 := bytesRemaining;
    goto L43;

  anon24_Then:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto L38;

  anon21_Then:
    goto L36;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_148: int;

  anon0:
    call {:si_unique_call 1117} vslice_dummy_var_148 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "WppCleanupKm"} WppCleanupKm(actual_DeviceObject_32: int);
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WppCleanupKm"} WppCleanupKm(actual_DeviceObject_32: int)
{
  var {:pointer} WppReg: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;

  anon0:
    call {:si_unique_call 1118} vslice_dummy_var_149 := __HAVOC_malloc(4);
    call {:si_unique_call 1119} sdv_do_paged_code_check();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    WppReg := Control_WPP_PROJECT_CONTROL_BLOCK(Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control]);
    goto L12;

  L12:
    call {:si_unique_call 1120} WppReg := WppCleanupKm_loop_L12(WppReg);
    goto L12_last;

  L12_last:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} WppReg != 0;
    assume {:nonnull} WppReg != 0;
    assume WppReg > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L15;

  L15:
    assume {:nonnull} WppReg != 0;
    assume WppReg > 0;
    havoc WppReg;
    goto L15_dummy;

  L15_dummy:
    assume false;
    return;

  anon15_Then:
    goto L15;

  anon14_Then:
    assume {:partition} WppReg == 0;
    goto L13;

  L13:
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    goto L1;

  L1:
    return;

  anon12_Then:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    call {:si_unique_call 1121} vslice_dummy_var_150 := IoWMIRegistrationControl(0, 2);
    goto L13;

  anon13_Then:
    goto L13;

  anon11_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;
}



procedure {:origName "WPP_SF_qS"} WPP_SF_qS(actual_Logger_22: int, actual_id_22: int, actual_TraceGuid_22: int, actual_s_p_e_c_i_a_l_88: int, actual_s_p_e_c_i_a_l_89: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qS"} WPP_SF_qS(actual_Logger_22: int, actual_id_22: int, actual_TraceGuid_22: int, actual_s_p_e_c_i_a_l_88: int, actual_s_p_e_c_i_a_l_89: int)
{
  var {:pointer} Tmp_1816: int;
  var {:scalar} sdv_546: int;
  var {:scalar} Tmp_1818: int;
  var {:pointer} TraceGuid_22: int;
  var {:pointer} s_p_e_c_i_a_l_89: int;
  var vslice_dummy_var_151: int;

  anon0:
    call {:si_unique_call 1122} vslice_dummy_var_151 := __HAVOC_malloc(4);
    TraceGuid_22 := actual_TraceGuid_22;
    s_p_e_c_i_a_l_89 := actual_s_p_e_c_i_a_l_89;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_89 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_89 != 0;
    assume s_p_e_c_i_a_l_89 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_1818 := (sdv_546 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_89 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_89 != 0;
    assume s_p_e_c_i_a_l_89 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1816 := s_p_e_c_i_a_l_89;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_1816 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_89 == 0;
    goto L18;

  anon10_Then:
    Tmp_1818 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_89 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qqq"} WPP_SF_qqq(actual_Logger_23: int, actual_id_23: int, actual_TraceGuid_23: int, actual_s_p_e_c_i_a_l_90: int, actual_s_p_e_c_i_a_l_91: int, actual_s_p_e_c_i_a_l_92: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qqq"} WPP_SF_qqq(actual_Logger_23: int, actual_id_23: int, actual_TraceGuid_23: int, actual_s_p_e_c_i_a_l_90: int, actual_s_p_e_c_i_a_l_91: int, actual_s_p_e_c_i_a_l_92: int)
{
  var {:pointer} TraceGuid_23: int;
  var vslice_dummy_var_152: int;

  anon0:
    call {:si_unique_call 1123} vslice_dummy_var_152 := __HAVOC_malloc(4);
    TraceGuid_23 := actual_TraceGuid_23;
    return;
}



procedure {:origName "IsRetryLogin"} IsRetryLogin(actual_PdoExtension_23: int, actual_NtStatus_2: int) returns (Tmp_1832: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1832 == 1 || Tmp_1832 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IsRetryLogin"} IsRetryLogin(actual_PdoExtension_23: int, actual_NtStatus_2: int) returns (Tmp_1832: int)
{
  var {:pointer} Tmp_1833: int;
  var {:scalar} sdv_551: int;
  var {:pointer} PdoExtension_23: int;
  var {:scalar} NtStatus_2: int;

  anon0:
    PdoExtension_23 := actual_PdoExtension_23;
    NtStatus_2 := actual_NtStatus_2;
    call {:si_unique_call 1124} Sbp2AddLog(PdoExtension_23, 1, -766742681, NtStatus_2, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} NtStatus_2 == -1072562032;
    Tmp_1832 := 1;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} NtStatus_2 != -1072562032;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} NtStatus_2 != -1073741810;
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1125} Tmp_1833 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    assume {:nonnull} Tmp_1833 != 0;
    assume Tmp_1833 > 0;
    call {:si_unique_call 1126} sdv_551 := sdv_InterlockedDecrement(Tmp_1833);
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    assume {:nonnull} Tmp_1833 != 0;
    assume Tmp_1833 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_551 > 0;
    Tmp_1832 := 1;
    goto L1;

  anon12_Then:
    assume {:partition} 0 >= sdv_551;
    goto L9;

  L9:
    Tmp_1832 := 0;
    goto L1;

  anon11_Then:
    goto L9;

  anon10_Then:
    assume {:partition} NtStatus_2 == -1073741810;
    goto L9;
}



procedure {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_1834: int);
  free ensures {:va_keep} Tmp_1834 == 0 || Tmp_1834 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_1834: int)
{
  var {:scalar} cchNewDestLength: int;
  var {:scalar} iRet: int;
  var {:scalar} cchMax: int;
  var {:scalar} status_52: int;
  var {:pointer} pszDest: int;
  var {:scalar} cchDest: int;
  var {:pointer} pcchNewDestLength: int;

  anon0:
    pszDest := actual_pszDest;
    cchDest := actual_cchDest;
    pcchNewDestLength := actual_pcchNewDestLength;
    status_52 := 0;
    cchNewDestLength := 0;
    cchMax := cchDest - 1;
    call {:si_unique_call 1127} iRet := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet;
    goto L16;

  L16:
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    cchNewDestLength := cchMax;
    status_52 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength != 0;
    assume {:nonnull} pcchNewDestLength != 0;
    assume pcchNewDestLength > 0;
    goto L21;

  L21:
    Tmp_1834 := status_52;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet <= cchMax;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet == cchMax;
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    cchNewDestLength := cchMax;
    goto L20;

  anon12_Then:
    assume {:partition} iRet != cchMax;
    cchNewDestLength := iRet;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax < iRet;
    goto L16;
}



procedure {:origName "WPP_SF_qDdd"} WPP_SF_qDdd(actual_Logger_24: int, actual_id_24: int, actual_TraceGuid_24: int, actual_s_p_e_c_i_a_l_93: int, actual_s_p_e_c_i_a_l_94: int, actual_s_p_e_c_i_a_l_95: int, actual_s_p_e_c_i_a_l_96: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qDdd"} WPP_SF_qDdd(actual_Logger_24: int, actual_id_24: int, actual_TraceGuid_24: int, actual_s_p_e_c_i_a_l_93: int, actual_s_p_e_c_i_a_l_94: int, actual_s_p_e_c_i_a_l_95: int, actual_s_p_e_c_i_a_l_96: int)
{
  var {:pointer} TraceGuid_24: int;
  var vslice_dummy_var_153: int;

  anon0:
    call {:si_unique_call 1128} vslice_dummy_var_153 := __HAVOC_malloc(4);
    TraceGuid_24 := actual_TraceGuid_24;
    return;
}



procedure {:origName "Sbp2ReInitializePdo"} Sbp2ReInitializePdo(actual_FdoExtension_4: int, actual_DeviceInfo_2: int, actual_InstanceNumber: int) returns (Tmp_1839: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1839 == 0 || Tmp_1839 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ReInitializePdo"} Sbp2ReInitializePdo(actual_FdoExtension_4: int, actual_DeviceInfo_2: int, actual_InstanceNumber: int) returns (Tmp_1839: int)
{
  var {:pointer} Tmp_1840: int;
  var {:scalar} size_1: int;
  var {:pointer} Tmp_1841: int;
  var {:scalar} Tmp_1842: int;
  var {:pointer} symlinkBuffer: int;
  var {:pointer} pdoExtension_14: int;
  var {:scalar} uniDeviceName: int;
  var {:pointer} Tmp_1843: int;
  var {:pointer} Tmp_1844: int;
  var {:pointer} Tmp_1845: int;
  var {:pointer} Tmp_1846: int;
  var {:scalar} Tmp_1847: int;
  var {:pointer} Tmp_1848: int;
  var {:pointer} Tmp_1849: int;
  var {:pointer} Tmp_1850: int;
  var {:pointer} Tmp_1851: int;
  var {:pointer} Tmp_1853: int;
  var {:pointer} Tmp_1854: int;
  var {:scalar} Tmp_1855: int;
  var {:pointer} sdv_556: int;
  var {:pointer} Tmp_1856: int;
  var {:pointer} Tmp_1857: int;
  var {:pointer} Tmp_1858: int;
  var {:scalar} Tmp_1859: int;
  var {:scalar} sdv_557: int;
  var {:scalar} sdv_558: int;
  var {:scalar} prevRemoveLock: int;
  var {:pointer} Tmp_1861: int;
  var {:pointer} Tmp_1862: int;
  var {:scalar} status_53: int;
  var {:pointer} Tmp_1863: int;
  var {:scalar} prevDeviceFlags: int;
  var {:pointer} FdoExtension_4: int;
  var {:pointer} DeviceInfo_2: int;
  var {:scalar} InstanceNumber: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_2825: int;

  anon0:
    call {:si_unique_call 1129} uniDeviceName := __HAVOC_malloc(12);
    call {:si_unique_call 1130} prevRemoveLock := __HAVOC_malloc(168);
    FdoExtension_4 := actual_FdoExtension_4;
    DeviceInfo_2 := actual_DeviceInfo_2;
    InstanceNumber := actual_InstanceNumber;
    call {:si_unique_call 1131} Tmp_1840 := __HAVOC_malloc(4);
    call {:si_unique_call 1132} Tmp_1848 := __HAVOC_malloc(4);
    call {:si_unique_call 1133} Tmp_1851 := __HAVOC_malloc(180);
    call {:si_unique_call 1134} vslice_dummy_var_154 := __HAVOC_malloc(8);
    call {:si_unique_call 1135} Tmp_1857 := __HAVOC_malloc(4);
    call {:si_unique_call 1136} Tmp_1858 := __HAVOC_malloc(4);
    call {:si_unique_call 1137} vslice_dummy_var_155 := __HAVOC_malloc(8);
    call {:si_unique_call 1138} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1854;
    assume {:nonnull} Tmp_1854 != 0;
    assume Tmp_1854 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1849;
    assume {:nonnull} Tmp_1849 != 0;
    assume Tmp_1849 > 0;
    goto L15;

  L15:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1843;
    assume {:nonnull} Tmp_1843 != 0;
    assume Tmp_1843 > 0;
    havoc pdoExtension_14;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc prevDeviceFlags;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    call {:si_unique_call 1139} sdv_RtlZeroMemory(0, 1160);
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc Tmp_1844;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} Tmp_1844 != 0;
    assume Tmp_1844 > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    call {:si_unique_call 1140} KeInitializeEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_14), 0, 0);
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    call {:si_unique_call 1141} KeInitializeEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_14), 0, 0);
    call {:si_unique_call 1142} Tmp_1862 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1862 != 0;
    assume Tmp_1862 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    call {:si_unique_call 1143} sdv_KeInitializeSpinLock(Tmp_1862);
    assume {:nonnull} Tmp_1862 != 0;
    assume Tmp_1862 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1848;
    assume {:nonnull} Tmp_1848 != 0;
    assume Tmp_1848 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_1863;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1842;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc vslice_dummy_var_2825;
    call {:si_unique_call 1144} WPP_SF_S(Tmp_1842, 109, Tmp_1863, vslice_dummy_var_2825);
    goto L42;

  L42:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1846;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1853;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} Tmp_1853 != 0;
    assume Tmp_1853 > 0;
    call {:si_unique_call 1145} status_53 := Sbp2PreAllocateLists(pdoExtension_14);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_53 >= 0;
    size_1 := 1536;
    call {:si_unique_call 1146} sdv_556 := ExAllocatePoolWithTag(1, size_1, -330079661);
    symlinkBuffer := sdv_556;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} symlinkBuffer == 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1858;
    assume {:nonnull} Tmp_1858 != 0;
    assume Tmp_1858 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_1845;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1847;
    call {:si_unique_call 1147} WPP_SF_(Tmp_1847, 112, Tmp_1845);
    goto L95;

  L95:
    status_53 := 0;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1856;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1841;
    assume {:nonnull} Tmp_1841 != 0;
    assume Tmp_1841 > 0;
    assume {:nonnull} Tmp_1856 != 0;
    assume Tmp_1856 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto L105;

  L105:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    call {:si_unique_call 1148} InitializeListHead(BusResetEntry__DEVICE_EXTENSION(pdoExtension_14));
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    Tmp_1839 := status_53;
    return;

  anon42_Then:
    goto L95;

  anon48_Then:
    goto L95;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon45_Then:
    assume {:partition} symlinkBuffer != 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    Tmp_1851 := strConst__li2bpl29;
    call {:si_unique_call 1149} vslice_dummy_var_156 := RtlStringCbPrintfW(symlinkBuffer, size_1, Tmp_1851);
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    call {:si_unique_call 1150} RtlInitUnicodeString(UniSymLinkName__DEVICE_EXTENSION(pdoExtension_14), symlinkBuffer);
    call {:si_unique_call 1151} RtlInitUnicodeString(uniDeviceName, symlinkBuffer);
    call {:si_unique_call 1152} status_53 := IoCreateUnprotectedSymbolicLink(0, 0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} status_53 < 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1840;
    assume {:nonnull} Tmp_1840 != 0;
    assume Tmp_1840 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    havoc Tmp_1861;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1855;
    call {:si_unique_call 1153} WPP_SF_D(Tmp_1855, 111, Tmp_1861, status_53);
    goto L95;

  anon40_Then:
    goto L95;

  anon47_Then:
    goto L95;

  anon39_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon36_Then:
    assume {:partition} 0 <= status_53;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1857;
    assume {:nonnull} Tmp_1857 != 0;
    assume Tmp_1857 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_1850;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1859;
    call {:si_unique_call 1154} WPP_SF_S(Tmp_1859, 110, Tmp_1850, symlinkBuffer);
    goto L95;

  anon38_Then:
    goto L95;

  anon46_Then:
    goto L95;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon35_Then:
    assume {:partition} 0 > status_53;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto L105;

  anon34_Then:
    goto L42;

  anon44_Then:
    goto L42;

  anon33_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L42;

  anon43_Then:
    goto L15;
}



procedure {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_1864: int);
  free ensures {:va_keep} Tmp_1864 == 0 || Tmp_1864 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_1864: int)
{
  var {:scalar} status_54: int;
  var {:scalar} cchDest_1: int;
  var {:scalar} cchMax_1: int;

  anon0:
    cchDest_1 := actual_cchDest_1;
    cchMax_1 := actual_cchMax_1;
    status_54 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_1 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_1 <= cchMax_1;
    goto L8;

  L8:
    Tmp_1864 := status_54;
    return;

  anon5_Then:
    assume {:partition} cchMax_1 < cchDest_1;
    goto L6;

  L6:
    status_54 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_1 == 0;
    goto L6;
}



procedure {:origName "Sbp2SystemControl"} Sbp2SystemControl(actual_DeviceObject_33: int, actual_Irp_19: int) returns (Tmp_1866: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2SystemControl"} Sbp2SystemControl(actual_DeviceObject_33: int, actual_Irp_19: int) returns (Tmp_1866: int)
{
  var {:pointer} Tmp_1867: int;
  var {:scalar} Tmp_1868: int;
  var {:pointer} Tmp_1869: int;
  var {:scalar} status_55: int;
  var {:pointer} deviceExtension_8: int;
  var {:pointer} DeviceObject_33: int;
  var {:pointer} Irp_19: int;
  var vslice_dummy_var_2826: int;

  anon0:
    DeviceObject_33 := actual_DeviceObject_33;
    Irp_19 := actual_Irp_19;
    call {:si_unique_call 1155} Tmp_1869 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    havoc deviceExtension_8;
    call {:si_unique_call 1156} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1869;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    havoc Tmp_1867;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1868;
    call {:si_unique_call 1157} WPP_SF_qq(Tmp_1868, 101, Tmp_1867, deviceExtension_8, Irp_19);
    goto L15;

  L15:
    call {:si_unique_call 1158} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_19);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume Irp_19 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1159} SLIC_sdv_IoCallDriver_entry(0);
    goto L38;

  L38:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc vslice_dummy_var_2826;
    call {:si_unique_call 1160} Tmp_1866 := sdv_IoCallDriver(vslice_dummy_var_2826, Irp_19);
    goto L1;

  L1:
    call {:si_unique_call 1161} SLIC_Sbp2SystemControl_exit(strConst__li2bpl2, Tmp_1866);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    assume !(Irp_19 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L38;

  anon15_Then:
    goto L15;

  anon17_Then:
    goto L15;

  anon14_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L15;

  anon13_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    status_55 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_19))];
    call {:si_unique_call 1162} sdv_IoCompleteRequest(0, 0);
    Tmp_1866 := status_55;
    goto L1;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var {:scalar} Tmp_1873: int;
  var vslice_dummy_var_157: int;

  anon0:
    call {:si_unique_call 1163} vslice_dummy_var_157 := __HAVOC_malloc(4);
    call {:si_unique_call 1164} Tmp_1873 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1873 != 0;
    assume Tmp_1873 > 0;
    assume Sbp2LogLevel == 15;
    return;
}



procedure {:origName "WPP_SF_qqD"} WPP_SF_qqD(actual_Logger_25: int, actual_id_25: int, actual_TraceGuid_25: int, actual_s_p_e_c_i_a_l_97: int, actual_s_p_e_c_i_a_l_98: int, actual_s_p_e_c_i_a_l_99: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qqD"} WPP_SF_qqD(actual_Logger_25: int, actual_id_25: int, actual_TraceGuid_25: int, actual_s_p_e_c_i_a_l_97: int, actual_s_p_e_c_i_a_l_98: int, actual_s_p_e_c_i_a_l_99: int)
{
  var {:pointer} TraceGuid_25: int;
  var vslice_dummy_var_158: int;

  anon0:
    call {:si_unique_call 1165} vslice_dummy_var_158 := __HAVOC_malloc(4);
    TraceGuid_25 := actual_TraceGuid_25;
    return;
}



procedure {:origName "RtlStringValidateDestA_sdv_static_function_1"} RtlStringValidateDestA_sdv_static_function_1(actual_pszDest_2: int, actual_cchDest_2: int, actual_cchMax_2: int) returns (Tmp_1877: int);
  free ensures {:va_keep} Tmp_1877 == 0 || Tmp_1877 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlStringValidateDestA_sdv_static_function_1"} RtlStringValidateDestA_sdv_static_function_1(actual_pszDest_2: int, actual_cchDest_2: int, actual_cchMax_2: int) returns (Tmp_1877: int)
{
  var {:scalar} status_56: int;
  var {:scalar} cchDest_2: int;
  var {:scalar} cchMax_2: int;

  anon0:
    cchDest_2 := actual_cchDest_2;
    cchMax_2 := actual_cchMax_2;
    status_56 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_2 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_2 <= cchMax_2;
    goto L8;

  L8:
    Tmp_1877 := status_56;
    return;

  anon5_Then:
    assume {:partition} cchMax_2 < cchDest_2;
    goto L6;

  L6:
    status_56 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_2 == 0;
    goto L6;
}



procedure {:origName "Sbp2DeviceControl"} Sbp2DeviceControl(actual_DeviceObject_34: int, actual_Irp_20: int) returns (Tmp_1879: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, markedPending, yogi_error, Mem_T.Irp__IRBIRP, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2DeviceControl"} Sbp2DeviceControl(actual_DeviceObject_34: int, actual_Irp_20: int) returns (Tmp_1879: int)
{
  var {:pointer} irpStack_15: int;
  var {:pointer} pdoExtension_15: int;
  var {:scalar} Tmp_1880: int;
  var {:pointer} Tmp_1882: int;
  var {:pointer} Tmp_1883: int;
  var {:scalar} status_57: int;
  var {:pointer} DeviceObject_34: int;
  var {:pointer} Irp_20: int;
  var vslice_dummy_var_2827: int;

  anon0:
    DeviceObject_34 := actual_DeviceObject_34;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 1166} Tmp_1883 := __HAVOC_malloc(4);
    call {:si_unique_call 1167} irpStack_15 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    havoc pdoExtension_15;
    call {:si_unique_call 1168} sdv_do_paged_code_check();
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1883;
    assume {:nonnull} Tmp_1883 != 0;
    assume Tmp_1883 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1882;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1880;
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    havoc vslice_dummy_var_2827;
    call {:si_unique_call 1169} WPP_SF_qqD(Tmp_1880, 66, Tmp_1882, pdoExtension_15, Irp_20, vslice_dummy_var_2827);
    goto L56;

  L56:
    status_57 := -1073741637;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := status_57;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 1170} sdv_IoCompleteRequest(0, 0);
    goto L44;

  L44:
    Tmp_1879 := status_57;
    call {:si_unique_call 1171} SLIC_Sbp2DeviceControl_exit(strConst__li2bpl2, Tmp_1879);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    goto L56;

  anon33_Then:
    goto L56;

  anon26_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon28_Then:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    status_57 := -1073741811;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := status_57;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 1172} sdv_IoCompleteRequest(0, 0);
    goto L44;

  anon25_Then:
    call {:si_unique_call 1173} status_57 := Sbp2QueryProperty(DeviceObject_34, Irp_20);
    goto L44;

  anon29_Then:
    call {:si_unique_call 1174} status_57 := Sbp2HandleApiRequest(pdoExtension_15, Irp_20);
    goto L44;

  anon30_Then:
    call {:si_unique_call 1175} status_57 := Sbp2ScsiPassThrough(DeviceObject_34, Irp_20, 1);
    goto L44;

  anon31_Then:
    call {:si_unique_call 1176} status_57 := Sbp2ScsiPassThrough(DeviceObject_34, Irp_20, 0);
    goto L44;

  anon24_Then:
    call {:si_unique_call 1177} status_57 := Sbp2ScsiGetCapabilities(DeviceObject_34, Irp_20);
    goto L44;

  anon23_Then:
    status_57 := -1073741637;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := status_57;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 1178} sdv_IoCompleteRequest(0, 0);
    goto L44;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int)
{
  var {:pointer} NextEntry: int;
  var {:pointer} ListHead_3: int;
  var {:pointer} Entry_1: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_2828: int;

  anon0:
    call {:si_unique_call 1179} vslice_dummy_var_159 := __HAVOC_malloc(4);
    ListHead_3 := actual_ListHead_3;
    Entry_1 := actual_Entry_1;
    call {:si_unique_call 1180} SLIC_InsertHeadList_entry(0);
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    havoc NextEntry;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    havoc vslice_dummy_var_2828;
    call {:si_unique_call 1181} FatalListEntryError(ListHead_3, NextEntry, vslice_dummy_var_2828);
    goto L8;

  L8:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    return;

  anon3_Then:
    goto L8;
}



procedure {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_3: int, actual_uniCompatIds: int) returns (Tmp_1886: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1886 == -1073741670 || Tmp_1886 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_3: int, actual_uniCompatIds: int) returns (Tmp_1886: int)
{
  var {:pointer} Tmp_1887: int;
  var {:scalar} Tmp_1888: int;
  var {:scalar} Tmp_1889: int;
  var {:pointer} Tmp_1890: int;
  var {:pointer} sdv_568: int;
  var {:scalar} Tmp_1891: int;
  var {:scalar} Tmp_1892: int;
  var {:pointer} Tmp_1893: int;
  var {:scalar} Tmp_1895: int;
  var {:scalar} status_58: int;
  var {:pointer} DeviceInfo_3: int;
  var {:pointer} uniCompatIds: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_2829: int;

  anon0:
    DeviceInfo_3 := actual_DeviceInfo_3;
    uniCompatIds := actual_uniCompatIds;
    call {:si_unique_call 1182} Tmp_1887 := __HAVOC_malloc(4);
    call {:si_unique_call 1183} Tmp_1890 := __HAVOC_malloc(56);
    status_58 := 0;
    call {:si_unique_call 1184} sdv_do_paged_code_check();
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1889;
    call {:si_unique_call 1185} sdv_568 := ExAllocatePoolWithTag(1, Tmp_1889, 846226003);
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1887;
    assume {:nonnull} Tmp_1887 != 0;
    assume Tmp_1887 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_1893;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1895;
    call {:si_unique_call 1186} WPP_SF_(Tmp_1895, 106, Tmp_1893);
    goto L30;

  L30:
    status_58 := -1073741670;
    goto L28;

  L28:
    Tmp_1886 := status_58;
    return;

  anon10_Then:
    goto L30;

  anon12_Then:
    goto L30;

  anon9_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L30;

  anon11_Then:
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1891;
    call {:si_unique_call 1187} sdv_RtlZeroMemory(0, Tmp_1891);
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    havoc Tmp_1892;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1888;
    Tmp_1890 := strConst__li2bpl30;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc vslice_dummy_var_2829;
    call {:si_unique_call 1188} vslice_dummy_var_160 := RtlStringCbPrintfW(vslice_dummy_var_2829, Tmp_1888, Tmp_1890);
    goto L28;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int)
{
  var {:pointer} ListHead_4: int;
  var vslice_dummy_var_161: int;

  anon0:
    call {:si_unique_call 1189} vslice_dummy_var_161 := __HAVOC_malloc(4);
    ListHead_4 := actual_ListHead_4;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    return;
}



procedure {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_35: int, actual_Irp_21: int) returns (Tmp_1898: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_35: int, actual_Irp_21: int) returns (Tmp_1898: int)
{
  var {:pointer} newIrpSp: int;
  var {:pointer} newIrp: int;
  var {:scalar} status_59: int;
  var {:scalar} event_2: int;
  var {:pointer} DeviceObject_35: int;
  var {:pointer} Irp_21: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_2830: int;

  anon0:
    call {:si_unique_call 1190} event_2 := __HAVOC_malloc(156);
    DeviceObject_35 := actual_DeviceObject_35;
    Irp_21 := actual_Irp_21;
    status_59 := 0;
    call {:si_unique_call 1191} sdv_do_paged_code_check();
    assume {:nonnull} DeviceObject_35 != 0;
    assume DeviceObject_35 > 0;
    havoc vslice_dummy_var_2830;
    call {:si_unique_call 1192} newIrp := IoAllocateIrp(vslice_dummy_var_2830, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} newIrp != 0;
    call {:si_unique_call 1193} vslice_dummy_var_162 := sdv_IoGetCurrentIrpStackLocation(Irp_21);
    call {:si_unique_call 1194} newIrpSp := sdv_IoGetNextIrpStackLocation(newIrp);
    call {:si_unique_call 1195} sdv_RtlCopyMemory(0, 0, 28);
    assume {:nonnull} newIrpSp != 0;
    assume newIrpSp > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(newIrp))] := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_21))];
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    call {:si_unique_call 1196} KeInitializeEvent(event_2, 0, 0);
    call {:si_unique_call 1197} sdv_IoSetCompletionRoutine(newIrp, li2bplFunctionConstant399, event_2, 1, 1, 1);
    call {:si_unique_call 1198} status_59 := sdv_IoCallDriver(DeviceObject_35, newIrp);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} status_59 == 259;
    call {:si_unique_call 1199} vslice_dummy_var_163 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L42;

  L42:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    status_59 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(newIrp))];
    call {:si_unique_call 1200} IoFreeIrp(0);
    goto L49;

  L49:
    Tmp_1898 := status_59;
    return;

  anon6_Then:
    assume {:partition} status_59 != 259;
    goto L42;

  anon5_Then:
    assume {:partition} newIrp == 0;
    status_59 := -1073741670;
    goto L49;
}



procedure {:origName "WPP_SF_qDd"} WPP_SF_qDd(actual_Logger_26: int, actual_id_26: int, actual_TraceGuid_26: int, actual_s_p_e_c_i_a_l_100: int, actual_s_p_e_c_i_a_l_101: int, actual_s_p_e_c_i_a_l_102: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qDd"} WPP_SF_qDd(actual_Logger_26: int, actual_id_26: int, actual_TraceGuid_26: int, actual_s_p_e_c_i_a_l_100: int, actual_s_p_e_c_i_a_l_101: int, actual_s_p_e_c_i_a_l_102: int)
{
  var {:pointer} TraceGuid_26: int;
  var vslice_dummy_var_164: int;

  anon0:
    call {:si_unique_call 1201} vslice_dummy_var_164 := __HAVOC_malloc(4);
    TraceGuid_26 := actual_TraceGuid_26;
    return;
}



procedure {:origName "WPP_SF_"} WPP_SF_(actual_Logger_27: int, actual_id_27: int, actual_TraceGuid_27: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_"} WPP_SF_(actual_Logger_27: int, actual_id_27: int, actual_TraceGuid_27: int)
{
  var {:pointer} TraceGuid_27: int;
  var vslice_dummy_var_165: int;

  anon0:
    call {:si_unique_call 1202} vslice_dummy_var_165 := __HAVOC_malloc(4);
    TraceGuid_27 := actual_TraceGuid_27;
    return;
}



procedure {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_4: int, actual_uniDeviceText: int) returns (Tmp_1906: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1906 == -1073741670 || Tmp_1906 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_4: int, actual_uniDeviceText: int) returns (Tmp_1906: int)
{
  var {:scalar} Tmp_1907: int;
  var {:pointer} Tmp_1909: int;
  var {:pointer} Tmp_1910: int;
  var {:scalar} Tmp_1911: int;
  var {:scalar} Tmp_1912: int;
  var {:pointer} sdv_577: int;
  var {:scalar} Tmp_1913: int;
  var {:scalar} Tmp_1914: int;
  var {:pointer} Tmp_1915: int;
  var {:pointer} Tmp_1916: int;
  var {:pointer} Tmp_1917: int;
  var {:scalar} status_60: int;
  var {:pointer} Tmp_1918: int;
  var {:scalar} Tmp_1919: int;
  var {:scalar} TextType: int;
  var {:pointer} DeviceInfo_4: int;
  var {:pointer} uniDeviceText: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_2831: int;
  var vslice_dummy_var_2832: int;
  var vslice_dummy_var_2833: int;

  anon0:
    TextType := actual_TextType;
    DeviceInfo_4 := actual_DeviceInfo_4;
    uniDeviceText := actual_uniDeviceText;
    call {:si_unique_call 1203} Tmp_1910 := __HAVOC_malloc(188);
    call {:si_unique_call 1204} Tmp_1915 := __HAVOC_malloc(120);
    call {:si_unique_call 1205} Tmp_1917 := __HAVOC_malloc(4);
    call {:si_unique_call 1206} Tmp_1918 := __HAVOC_malloc(28);
    status_60 := 0;
    call {:si_unique_call 1207} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1907;
    call {:si_unique_call 1208} sdv_577 := ExAllocatePoolWithTag(1, Tmp_1907, 846226003);
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1917;
    assume {:nonnull} Tmp_1917 != 0;
    assume Tmp_1917 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    havoc Tmp_1909;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1914;
    call {:si_unique_call 1209} WPP_SF_(Tmp_1914, 108, Tmp_1909);
    goto L43;

  L43:
    status_60 := -1073741670;
    goto L26;

  L26:
    Tmp_1906 := status_60;
    return;

  anon22_Then:
    goto L43;

  anon24_Then:
    goto L43;

  anon21_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L43;

  anon23_Then:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1911;
    call {:si_unique_call 1210} sdv_RtlZeroMemory(0, Tmp_1911);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} TextType != 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} TextType == 1;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1919;
    Tmp_1918 := strConst__li2bpl32;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_2831;
    call {:si_unique_call 1211} vslice_dummy_var_166 := RtlStringCbPrintfW(vslice_dummy_var_2831, Tmp_1919, Tmp_1918);
    goto L26;

  anon19_Then:
    assume {:partition} TextType != 1;
    goto L26;

  anon17_Then:
    assume {:partition} TextType == 0;
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    havoc Tmp_1916;
    goto L35;

  L35:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1912;
    Tmp_1915 := strConst__li2bpl33;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_2832;
    call {:si_unique_call 1212} vslice_dummy_var_167 := RtlStringCbPrintfW(vslice_dummy_var_2832, Tmp_1912, Tmp_1915);
    goto L26;

  anon20_Then:
    Tmp_1916 := strConst__li2bpl31;
    goto L35;

  anon18_Then:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1913;
    Tmp_1910 := strConst__li2bpl34;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_2833;
    call {:si_unique_call 1213} vslice_dummy_var_168 := RtlStringCbPrintfW(vslice_dummy_var_2833, Tmp_1913, Tmp_1910);
    goto L26;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_1920: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_1920: int)
{
  var {:pointer} NextEntry_1: int;
  var {:pointer} Entry_2: int;
  var {:pointer} ListHead_5: int;

  anon0:
    ListHead_5 := actual_ListHead_5;
    call {:si_unique_call 1214} SLIC_RemoveHeadList_entry(strConst__li2bpl2);
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    havoc Entry_2;
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc NextEntry_1;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L9;

  L9:
    call {:si_unique_call 1215} FatalListEntryError(ListHead_5, Entry_2, NextEntry_1);
    goto L12;

  L12:
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    assume {:nonnull} NextEntry_1 != 0;
    assume NextEntry_1 > 0;
    Tmp_1920 := Entry_2;
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L12;

  anon5_Then:
    goto L9;
}



procedure {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_37: int, actual_Irp_22: int) returns (Tmp_1951: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, sdv_irql_current, queued, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_37: int, actual_Irp_22: int) returns (Tmp_1951: int)
{
  var {:pointer} deviceRelations: int;
  var {:pointer} irpStack_16: int;
  var {:pointer} Tmp_1952: int;
  var {:scalar} Tmp_1953: int;
  var {:pointer} Tmp_1954: int;
  var {:scalar} Tmp_1955: int;
  var {:pointer} Tmp_1956: int;
  var {:pointer} deviceCapabilities: int;
  var {:pointer} fdoExtension_6: int;
  var {:pointer} sdv_602: int;
  var {:pointer} Tmp_1957: int;
  var {:scalar} status_62: int;
  var {:scalar} event_3: int;
  var {:pointer} DeviceObject_37: int;
  var {:pointer} Irp_22: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_2834: int;
  var vslice_dummy_var_2835: int;
  var vslice_dummy_var_2836: int;
  var vslice_dummy_var_2837: int;

  anon0:
    call {:si_unique_call 1216} event_3 := __HAVOC_malloc(156);
    DeviceObject_37 := actual_DeviceObject_37;
    Irp_22 := actual_Irp_22;
    call {:si_unique_call 1217} Tmp_1956 := __HAVOC_malloc(4);
    call {:si_unique_call 1218} Tmp_1957 := __HAVOC_malloc(4);
    call {:si_unique_call 1219} irpStack_16 := sdv_IoGetCurrentIrpStackLocation(Irp_22);
    assume {:nonnull} DeviceObject_37 != 0;
    assume DeviceObject_37 > 0;
    havoc fdoExtension_6;
    call {:si_unique_call 1220} status_62 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_62 >= 0;
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto L34;

  L34:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    call {:si_unique_call 1221} vslice_dummy_var_169 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_6), 0);
    call {:si_unique_call 1222} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_22);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume Irp_22 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1223} SLIC_sdv_IoCallDriver_entry(0);
    goto L173;

  L173:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc vslice_dummy_var_2834;
    call {:si_unique_call 1224} status_62 := sdv_IoCallDriver(vslice_dummy_var_2834, Irp_22);
    Tmp_1951 := status_62;
    goto L1;

  L1:
    return;

  anon43_Then:
    assume !(Irp_22 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L173;

  anon53_Then:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto L34;

  anon54_Then:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    havoc deviceCapabilities;
    assume {:nonnull} deviceCapabilities != 0;
    assume deviceCapabilities > 0;
    goto L34;

  anon55_Then:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1957;
    assume {:nonnull} Tmp_1957 != 0;
    assume Tmp_1957 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    havoc Tmp_1952;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1955;
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    havoc vslice_dummy_var_2835;
    call {:si_unique_call 1225} WPP_SF_qD(Tmp_1955, 97, Tmp_1952, fdoExtension_6, vslice_dummy_var_2835);
    goto L48;

  L48:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 1226} sdv_602 := ExAllocatePoolWithTag(1, 48, -230399405);
    deviceRelations := sdv_602;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} deviceRelations == 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1956;
    assume {:nonnull} Tmp_1956 != 0;
    assume Tmp_1956 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    havoc Tmp_1954;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1953;
    call {:si_unique_call 1227} WPP_SF_q(Tmp_1953, 98, Tmp_1954, fdoExtension_6);
    goto L86;

  L86:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_22))] := -1073741670;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    call {:si_unique_call 1228} vslice_dummy_var_174 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_6), 0);
    call {:si_unique_call 1229} sdv_IoCompleteRequest(0, 0);
    Tmp_1951 := -1073741670;
    goto L1;

  anon48_Then:
    goto L86;

  anon60_Then:
    goto L86;

  anon47_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L86;

  anon58_Then:
    assume {:partition} deviceRelations != 0;
    call {:si_unique_call 1230} status_62 := Sbp2CreateDeviceRelations(fdoExtension_6, deviceRelations);
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_22))] := status_62;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_62 >= 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto L34;

  anon59_Then:
    assume {:partition} 0 > status_62;
    call {:si_unique_call 1231} ExFreePoolWithTag(0, -230399405);
    deviceRelations := 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    call {:si_unique_call 1232} vslice_dummy_var_173 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_6), 0);
    call {:si_unique_call 1233} sdv_IoCompleteRequest(0, 0);
    Tmp_1951 := status_62;
    goto L1;

  anon45_Then:
    goto L34;

  anon46_Then:
    goto L48;

  anon57_Then:
    goto L48;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L48;

  anon56_Then:
    call {:si_unique_call 1234} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 1235} vslice_dummy_var_170 := Sbp2CleanDeviceExtension#1(DeviceObject_37, 1, 1);
    call {:si_unique_call 1236} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_22);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume Irp_22 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1237} SLIC_sdv_IoCallDriver_entry(0);
    goto L170;

  L170:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc vslice_dummy_var_2836;
    call {:si_unique_call 1238} status_62 := sdv_IoCallDriver(vslice_dummy_var_2836, Irp_22);
    call {:si_unique_call 1239} IoDetachDevice(0);
    call {:si_unique_call 1240} IoDeleteDevice(0);
    Tmp_1951 := status_62;
    goto L1;

  anon49_Then:
    assume !(Irp_22 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L170;

  anon42_Then:
    call {:si_unique_call 1241} KeInitializeEvent(event_3, 1, 0);
    call {:si_unique_call 1242} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_22);
    call {:si_unique_call 1243} sdv_IoSetCompletionRoutine(Irp_22, li2bplFunctionConstant385, event_3, 1, 1, 1);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume Irp_22 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1244} SLIC_sdv_IoCallDriver_entry(0);
    goto L167;

  L167:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc vslice_dummy_var_2837;
    call {:si_unique_call 1245} status_62 := sdv_IoCallDriver(vslice_dummy_var_2837, Irp_22);
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_22))] >= 0;
    goto L131;

  L131:
    call {:si_unique_call 1246} vslice_dummy_var_171 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 1247} status_62 := Sbp2StartDevice(DeviceObject_37);
    goto L138;

  L138:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_22))] := status_62;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    call {:si_unique_call 1248} vslice_dummy_var_172 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_6), 0);
    call {:si_unique_call 1249} sdv_IoCompleteRequest(0, 0);
    Tmp_1951 := status_62;
    goto L1;

  anon51_Then:
    assume {:partition} 0 > Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_22))];
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} status_62 != 259;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    status_62 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_22))];
    goto L138;

  anon52_Then:
    assume {:partition} status_62 == 259;
    goto L131;

  anon50_Then:
    assume !(Irp_22 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L167;

  anon41_Then:
    assume {:partition} 0 > status_62;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_22))] := status_62;
    call {:si_unique_call 1250} sdv_IoCompleteRequest(0, 0);
    Tmp_1951 := status_62;
    goto L1;
}



procedure {:origName "WPP_SF_q"} WPP_SF_q(actual_Logger_28: int, actual_id_28: int, actual_TraceGuid_28: int, actual_s_p_e_c_i_a_l_103: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_q"} WPP_SF_q(actual_Logger_28: int, actual_id_28: int, actual_TraceGuid_28: int, actual_s_p_e_c_i_a_l_103: int)
{
  var {:pointer} TraceGuid_28: int;
  var vslice_dummy_var_175: int;

  anon0:
    call {:si_unique_call 1251} vslice_dummy_var_175 := __HAVOC_malloc(4);
    TraceGuid_28 := actual_TraceGuid_28;
    return;
}



procedure {:origName "Sbp2CreateDevObject"} Sbp2CreateDevObject(actual_DriverObject_1: int, actual_Pdo: int) returns (Tmp_1962: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1962 == 0 || Tmp_1962 == -1073741808 || Tmp_1962 == -1073741824 || Tmp_1962 == -1073741771 || Tmp_1962 == -1073741670 || Tmp_1962 == -1073741823 || Tmp_1962 == 5 || Tmp_1962 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2CreateDevObject"} Sbp2CreateDevObject(actual_DriverObject_1: int, actual_Pdo: int) returns (Tmp_1962: int)
{
  var {:scalar} Tmp_1963: int;
  var {:scalar} NextId: int;
  var {:pointer} deviceObject_3: int;
  var {:pointer} Tmp_1964: int;
  var {:scalar} uniDeviceName_1: int;
  var {:pointer} Tmp_1965: int;
  var {:pointer} Tmp_1966: int;
  var {:scalar} unicodeDirectoryName: int;
  var {:pointer} buffer_1: int;
  var {:pointer} fdoExtension_7: int;
  var {:pointer} Tmp_1967: int;
  var {:pointer} Tmp_1968: int;
  var {:scalar} status_63: int;
  var {:pointer} Pdo: int;
  var boogieTmp: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;

  anon0:
    call {:si_unique_call 1252} deviceObject_3 := __HAVOC_malloc(4);
    call {:si_unique_call 1253} uniDeviceName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1254} vslice_dummy_var_176 := __HAVOC_malloc(24);
    call {:si_unique_call 1255} unicodeDirectoryName := __HAVOC_malloc(12);
    Pdo := actual_Pdo;
    call {:si_unique_call 1256} Tmp_1965 := __HAVOC_malloc(4);
    call {:si_unique_call 1257} buffer_1 := __HAVOC_malloc(256);
    call {:si_unique_call 1258} Tmp_1967 := __HAVOC_malloc(76);
    call {:si_unique_call 1259} Tmp_1968 := __HAVOC_malloc(52);
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    NextId := 0;
    call {:si_unique_call 1260} sdv_do_paged_code_check();
    goto L17;

  L17:
    call {:si_unique_call 1261} NextId, Tmp_1967, status_63 := Sbp2CreateDevObject_loop_L17(NextId, deviceObject_3, uniDeviceName_1, buffer_1, Tmp_1967, status_63);
    goto L17_last;

  L17_last:
    Tmp_1967 := strConst__li2bpl35;
    call {:si_unique_call 1278} status_63 := RtlStringCbPrintfW(buffer_1, 128, Tmp_1967);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_63 >= 0;
    call {:si_unique_call 1262} RtlInitUnicodeString(uniDeviceName_1, buffer_1);
    call {:si_unique_call 1263} status_63 := IoCreateDevice(0, 5144, 0, 42, 256, 0, deviceObject_3);
    NextId := NextId + 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_63 != -1073741771;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} status_63 >= 0;
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    havoc fdoExtension_7;
    call {:si_unique_call 1264} sdv_RtlZeroMemory(0, 1048);
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    call {:si_unique_call 1265} boogieTmp := IoAttachDeviceToDeviceStack(0, Pdo);
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    call {:si_unique_call 1266} Tmp_1964 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1964 != 0;
    assume Tmp_1964 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    call {:si_unique_call 1267} sdv_KeInitializeSpinLock(Tmp_1964);
    assume {:nonnull} Tmp_1964 != 0;
    assume Tmp_1964 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    call {:si_unique_call 1268} KeInitializeMutex(0, 0);
    Tmp_1968 := strConst__li2bpl36;
    call {:si_unique_call 1269} vslice_dummy_var_178 := RtlStringCbPrintfW(buffer_1, 128, Tmp_1968);
    call {:si_unique_call 1270} RtlInitUnicodeString(unicodeDirectoryName, buffer_1);
    call {:si_unique_call 1271} sdv_InitializeObjectAttributes(0, 0, 592, 0, 0);
    call {:si_unique_call 1272} status_63 := ZwCreateDirectoryObject(0, 983055, 0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} status_63 < 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1965;
    assume {:nonnull} Tmp_1965 != 0;
    assume Tmp_1965 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    havoc Tmp_1966;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1963;
    call {:si_unique_call 1273} WPP_SF_qD(Tmp_1963, 12, Tmp_1966, fdoExtension_7, status_63);
    goto L87;

  L87:
    status_63 := 0;
    goto L77;

  L77:
    call {:si_unique_call 1274} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 1275} sdv_IoInitializeRemoveLock(0, 846226003, 2, 8192);
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    Tmp_1962 := 0;
    goto L1;

  L1:
    return;

  anon22_Then:
    goto L87;

  anon24_Then:
    goto L87;

  anon21_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L87;

  anon20_Then:
    assume {:partition} 0 <= status_63;
    call {:si_unique_call 1276} vslice_dummy_var_177 := ZwClose(0);
    goto L77;

  anon19_Then:
    status_63 := -1073741808;
    call {:si_unique_call 1277} IoDeleteDevice(0);
    Tmp_1962 := status_63;
    goto L1;

  anon18_Then:
    assume {:partition} 0 > status_63;
    Tmp_1962 := status_63;
    goto L1;

  anon23_Then:
    assume {:partition} status_63 == -1073741771;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} 0 > status_63;
    Tmp_1962 := status_63;
    goto L1;
}



procedure {:origName "RtlStringCbPrintfA"} RtlStringCbPrintfA(actual_pszDest_3: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_1969: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1969 == 0 || Tmp_1969 == 5 || Tmp_1969 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlStringCbPrintfA"} RtlStringCbPrintfA(actual_pszDest_3: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_1969: int)
{
  var {:scalar} cchDest_3: int;
  var {:pointer} argList_1: int;
  var {:scalar} status_64: int;
  var {:pointer} pszDest_3: int;
  var {:scalar} cbDest: int;
  var {:pointer} pszFormat_1: int;
  var vslice_dummy_var_2838: int;

  anon0:
    pszDest_3 := actual_pszDest_3;
    cbDest := actual_cbDest;
    call {:si_unique_call 1279} pszFormat_1 := __HAVOC_malloc(4);
    cchDest_3 := INTDIV(cbDest, 1);
    call {:si_unique_call 1280} status_64 := RtlStringValidateDestA_sdv_static_function_1(pszDest_3, cchDest_3, -1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_64 >= 0;
    argList_1 := pszFormat_1;
    assume {:nonnull} pszFormat_1 != 0;
    assume pszFormat_1 > 0;
    havoc vslice_dummy_var_2838;
    call {:si_unique_call 1281} status_64 := RtlStringVPrintfWorkerA_sdv_static_function_1(pszDest_3, cchDest_3, 0, vslice_dummy_var_2838, argList_1);
    argList_1 := 0;
    goto L19;

  L19:
    Tmp_1969 := status_64;
    return;

  anon5_Then:
    assume {:partition} 0 > status_64;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_3 > 0;
    assume {:nonnull} pszDest_3 != 0;
    assume pszDest_3 > 0;
    goto L19;

  anon6_Then:
    assume {:partition} 0 >= cchDest_3;
    goto L19;
}



procedure {:origName "_InlineInterlockedCompareExchangePointer"} _InlineInterlockedCompareExchangePointer(actual_Destination_2: int, actual_ExChange: int, actual_Comperand: int) returns (Tmp_1971: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_InlineInterlockedCompareExchangePointer"} _InlineInterlockedCompareExchangePointer(actual_Destination_2: int, actual_ExChange: int, actual_Comperand: int) returns (Tmp_1971: int)
{
  var {:scalar} sdv_614: int;

  anon0:
    Tmp_1971 := sdv_614;
    return;
}



procedure {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_5: int, actual_uniHardwareIds: int) returns (Tmp_1973: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1973 == -1073741670 || Tmp_1973 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_5: int, actual_uniHardwareIds: int) returns (Tmp_1973: int)
{
  var {:pointer} Tmp_1984: int;
  var {:scalar} uniCmdSetId: int;
  var {:pointer} Tmp_1988: int;
  var {:pointer} sdv_631: int;
  var {:scalar} Tmp_1990: int;
  var {:scalar} Tmp_1991: int;
  var {:pointer} Tmp_1992: int;
  var {:scalar} Tmp_1993: int;
  var {:pointer} Tmp_1995: int;
  var {:scalar} Tmp_1999: int;
  var {:scalar} Tmp_2000: int;
  var {:scalar} uniModelId: int;
  var {:scalar} uniLunNumber: int;
  var {:scalar} Tmp_2001: int;
  var {:pointer} Tmp_2003: int;
  var {:scalar} uniRevision: int;
  var {:pointer} sdv_643: int;
  var {:pointer} sdv_645: int;
  var {:pointer} Tmp_2004: int;
  var {:pointer} Tmp_2005: int;
  var {:scalar} Tmp_2006: int;
  var {:scalar} Tmp_2008: int;
  var {:scalar} Tmp_2009: int;
  var {:pointer} sdv_652: int;
  var {:scalar} status_65: int;
  var {:scalar} Tmp_2011: int;
  var {:scalar} Tmp_2014: int;
  var {:scalar} Tmp_2016: int;
  var {:scalar} Tmp_2017: int;
  var {:pointer} DeviceInfo_5: int;
  var {:pointer} uniHardwareIds: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_2839: int;

  anon0:
    call {:si_unique_call 1282} uniCmdSetId := __HAVOC_malloc(12);
    call {:si_unique_call 1283} uniModelId := __HAVOC_malloc(12);
    call {:si_unique_call 1284} uniLunNumber := __HAVOC_malloc(12);
    call {:si_unique_call 1285} uniRevision := __HAVOC_malloc(12);
    DeviceInfo_5 := actual_DeviceInfo_5;
    uniHardwareIds := actual_uniHardwareIds;
    call {:si_unique_call 1286} vslice_dummy_var_195 := __HAVOC_malloc(116);
    call {:si_unique_call 1287} vslice_dummy_var_196 := __HAVOC_malloc(16);
    call {:si_unique_call 1288} vslice_dummy_var_197 := __HAVOC_malloc(8);
    call {:si_unique_call 1289} vslice_dummy_var_198 := __HAVOC_malloc(116);
    call {:si_unique_call 1290} vslice_dummy_var_199 := __HAVOC_malloc(116);
    call {:si_unique_call 1291} vslice_dummy_var_200 := __HAVOC_malloc(24);
    call {:si_unique_call 1292} vslice_dummy_var_201 := __HAVOC_malloc(20);
    call {:si_unique_call 1293} vslice_dummy_var_202 := __HAVOC_malloc(36);
    call {:si_unique_call 1294} vslice_dummy_var_203 := __HAVOC_malloc(8);
    call {:si_unique_call 1295} Tmp_1984 := __HAVOC_malloc(4);
    call {:si_unique_call 1296} vslice_dummy_var_204 := __HAVOC_malloc(16);
    call {:si_unique_call 1297} vslice_dummy_var_205 := __HAVOC_malloc(36);
    call {:si_unique_call 1298} vslice_dummy_var_206 := __HAVOC_malloc(24);
    call {:si_unique_call 1299} Tmp_1988 := __HAVOC_malloc(56);
    call {:si_unique_call 1300} vslice_dummy_var_207 := __HAVOC_malloc(8);
    call {:si_unique_call 1301} Tmp_1992 := __HAVOC_malloc(4);
    call {:si_unique_call 1302} vslice_dummy_var_208 := __HAVOC_malloc(24);
    call {:si_unique_call 1303} vslice_dummy_var_209 := __HAVOC_malloc(8);
    call {:si_unique_call 1304} vslice_dummy_var_210 := __HAVOC_malloc(8);
    call {:si_unique_call 1305} vslice_dummy_var_211 := __HAVOC_malloc(24);
    call {:si_unique_call 1306} vslice_dummy_var_212 := __HAVOC_malloc(8);
    call {:si_unique_call 1307} Tmp_2004 := __HAVOC_malloc(4);
    call {:si_unique_call 1308} vslice_dummy_var_213 := __HAVOC_malloc(8);
    call {:si_unique_call 1309} vslice_dummy_var_214 := __HAVOC_malloc(8);
    call {:si_unique_call 1310} vslice_dummy_var_215 := __HAVOC_malloc(8);
    call {:si_unique_call 1311} vslice_dummy_var_216 := __HAVOC_malloc(24);
    call {:si_unique_call 1312} vslice_dummy_var_217 := __HAVOC_malloc(116);
    status_65 := 0;
    call {:si_unique_call 1313} sdv_do_paged_code_check();
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_2001;
    call {:si_unique_call 1314} sdv_631 := ExAllocatePoolWithTag(1, Tmp_2001, 846226003);
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1992;
    assume {:nonnull} Tmp_1992 != 0;
    assume Tmp_1992 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    havoc Tmp_1995;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2014;
    call {:si_unique_call 1315} WPP_SF_(Tmp_2014, 103, Tmp_1995);
    goto L252;

  L252:
    status_65 := -1073741670;
    goto L218;

  L218:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    call {:si_unique_call 1316} sdv_ExFreePool(0);
    goto L219;

  L219:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1317} sdv_ExFreePool(0);
    goto L223;

  L223:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 1318} sdv_ExFreePool(0);
    goto L227;

  L227:
    Tmp_1973 := status_65;
    return;

  anon55_Then:
    goto L227;

  anon54_Then:
    goto L223;

  anon53_Then:
    goto L219;

  anon61_Then:
    goto L252;

  anon69_Then:
    goto L252;

  anon60_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L252;

  anon62_Then:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_2016;
    call {:si_unique_call 1319} sdv_RtlZeroMemory(0, Tmp_2016);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc Tmp_2006;
    call {:si_unique_call 1320} vslice_dummy_var_218 := RtlIntegerToUnicodeString(Tmp_2006, 16, 0);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    havoc Tmp_2000;
    call {:si_unique_call 1321} sdv_643 := ExAllocatePoolWithTag(1, Tmp_2000, 846226003);
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    havoc Tmp_2017;
    call {:si_unique_call 1322} sdv_RtlZeroMemory(0, Tmp_2017);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc Tmp_2011;
    call {:si_unique_call 1323} vslice_dummy_var_219 := RtlIntegerToUnicodeString(Tmp_2011, 16, 0);
    goto L35;

  L35:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_1991;
    call {:si_unique_call 1324} sdv_645 := ExAllocatePoolWithTag(1, Tmp_1991, 846226003);
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2004;
    assume {:nonnull} Tmp_2004 != 0;
    assume Tmp_2004 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_2005;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2008;
    call {:si_unique_call 1325} WPP_SF_(Tmp_2008, 104, Tmp_2005);
    goto L242;

  L242:
    status_65 := -1073741670;
    goto L218;

  anon59_Then:
    goto L242;

  anon68_Then:
    goto L242;

  anon58_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L242;

  anon64_Then:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_1990;
    call {:si_unique_call 1326} sdv_RtlZeroMemory(0, Tmp_1990);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc vslice_dummy_var_2839;
    call {:si_unique_call 1327} vslice_dummy_var_179 := RtlIntegerToUnicodeString(vslice_dummy_var_2839, 16, 0);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    goto L76;

  L76:
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_1999;
    call {:si_unique_call 1328} sdv_652 := ExAllocatePoolWithTag(1, Tmp_1999, 846226003);
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1984;
    assume {:nonnull} Tmp_1984 != 0;
    assume Tmp_1984 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_2003;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1993;
    call {:si_unique_call 1329} WPP_SF_(Tmp_1993, 105, Tmp_2003);
    goto L232;

  L232:
    status_65 := -1073741670;
    goto L218;

  anon57_Then:
    goto L232;

  anon67_Then:
    goto L232;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L232;

  anon65_Then:
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_2009;
    call {:si_unique_call 1330} sdv_RtlZeroMemory(0, Tmp_2009);
    call {:si_unique_call 1331} vslice_dummy_var_220 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 1332} vslice_dummy_var_180 := corral_nondet();
    call {:si_unique_call 1333} vslice_dummy_var_221 := corral_nondet();
    call {:si_unique_call 1334} vslice_dummy_var_181 := corral_nondet();
    goto L107;

  L107:
    call {:si_unique_call 1335} vslice_dummy_var_222 := corral_nondet();
    call {:si_unique_call 1336} vslice_dummy_var_223 := corral_nondet();
    call {:si_unique_call 1337} vslice_dummy_var_182 := corral_nondet();
    call {:si_unique_call 1338} vslice_dummy_var_224 := corral_nondet();
    call {:si_unique_call 1339} vslice_dummy_var_183 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1340} vslice_dummy_var_225 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1341} vslice_dummy_var_184 := corral_nondet();
    call {:si_unique_call 1342} vslice_dummy_var_226 := corral_nondet();
    call {:si_unique_call 1343} vslice_dummy_var_185 := corral_nondet();
    goto L139;

  L139:
    call {:si_unique_call 1344} vslice_dummy_var_227 := corral_nondet();
    call {:si_unique_call 1345} vslice_dummy_var_228 := corral_nondet();
    call {:si_unique_call 1346} vslice_dummy_var_186 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 1347} vslice_dummy_var_229 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 1348} vslice_dummy_var_187 := corral_nondet();
    call {:si_unique_call 1349} vslice_dummy_var_230 := corral_nondet();
    call {:si_unique_call 1350} vslice_dummy_var_188 := corral_nondet();
    goto L169;

  L169:
    call {:si_unique_call 1351} vslice_dummy_var_231 := corral_nondet();
    call {:si_unique_call 1352} vslice_dummy_var_232 := corral_nondet();
    call {:si_unique_call 1353} vslice_dummy_var_189 := corral_nondet();
    call {:si_unique_call 1354} vslice_dummy_var_233 := corral_nondet();
    call {:si_unique_call 1355} vslice_dummy_var_190 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    goto L150;

  L150:
    call {:si_unique_call 1356} vslice_dummy_var_234 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 1357} vslice_dummy_var_191 := corral_nondet();
    call {:si_unique_call 1358} vslice_dummy_var_235 := corral_nondet();
    call {:si_unique_call 1359} vslice_dummy_var_192 := corral_nondet();
    goto L198;

  L198:
    call {:si_unique_call 1360} vslice_dummy_var_236 := corral_nondet();
    call {:si_unique_call 1361} vslice_dummy_var_237 := corral_nondet();
    call {:si_unique_call 1362} vslice_dummy_var_193 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1363} vslice_dummy_var_238 := corral_nondet();
    call {:si_unique_call 1364} vslice_dummy_var_194 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1365} vslice_dummy_var_239 := corral_nondet();
    goto L218;

  anon52_Then:
    call {:si_unique_call 1366} vslice_dummy_var_240 := corral_nondet();
    goto L198;

  anon51_Then:
    call {:si_unique_call 1367} vslice_dummy_var_241 := corral_nondet();
    goto L169;

  anon66_Then:
    goto L150;

  anon50_Then:
    call {:si_unique_call 1368} vslice_dummy_var_242 := corral_nondet();
    goto L139;

  anon49_Then:
    call {:si_unique_call 1369} vslice_dummy_var_243 := corral_nondet();
    goto L107;

  anon48_Then:
    Tmp_1988 := strConst__li2bpl31;
    call {:si_unique_call 1370} RtlInitUnicodeString(uniModelId, Tmp_1988);
    goto L76;

  anon63_Then:
    goto L35;

  anon47_Then:
    goto L35;
}



procedure {:origName "Sbp2AddDevice"} Sbp2AddDevice(actual_DriverObject_2: int, actual_Pdo_1: int) returns (Tmp_2018: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2018 == 0 || Tmp_2018 == -1073741808 || Tmp_2018 == -1073741824 || Tmp_2018 == -1073741771 || Tmp_2018 == -1073741670 || Tmp_2018 == -1073741823 || Tmp_2018 == 5 || Tmp_2018 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2AddDevice"} Sbp2AddDevice(actual_DriverObject_2: int, actual_Pdo_1: int) returns (Tmp_2018: int)
{
  var {:pointer} Tmp_2019: int;
  var {:scalar} Tmp_2020: int;
  var {:pointer} Tmp_2021: int;
  var {:pointer} Tmp_2023: int;
  var {:scalar} Tmp_2024: int;
  var {:scalar} status_66: int;
  var {:pointer} Tmp_2025: int;
  var {:pointer} DriverObject_2: int;
  var {:pointer} Pdo_1: int;

  anon0:
    DriverObject_2 := actual_DriverObject_2;
    Pdo_1 := actual_Pdo_1;
    call {:si_unique_call 1371} Tmp_2021 := __HAVOC_malloc(4);
    call {:si_unique_call 1372} Tmp_2023 := __HAVOC_malloc(4);
    call {:si_unique_call 1373} sdv_do_paged_code_check();
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2023;
    assume {:nonnull} Tmp_2023 != 0;
    assume Tmp_2023 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    havoc Tmp_2025;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2024;
    call {:si_unique_call 1374} WPP_SF_qq(Tmp_2024, 10, Tmp_2025, DriverObject_2, Pdo_1);
    goto L11;

  L11:
    call {:si_unique_call 1375} status_66 := Sbp2CreateDevObject(DriverObject_2, Pdo_1);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_66 < 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2021;
    assume {:nonnull} Tmp_2021 != 0;
    assume Tmp_2021 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_2019;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2020;
    call {:si_unique_call 1376} WPP_SF_qD(Tmp_2020, 11, Tmp_2019, Pdo_1, status_66);
    goto L26;

  L26:
    Tmp_2018 := status_66;
    return;

  anon19_Then:
    goto L26;

  anon21_Then:
    goto L26;

  anon18_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L26;

  anon17_Then:
    assume {:partition} 0 <= status_66;
    goto L26;

  anon16_Then:
    goto L11;

  anon20_Then:
    goto L11;

  anon15_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L11;
}



procedure {:origName "FatalListEntryError"} FatalListEntryError(actual_p1_1: int, actual_p2_1: int, actual_p3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "FatalListEntryError"} FatalListEntryError(actual_p1_1: int, actual_p2_1: int, actual_p3: int)
{
  var vslice_dummy_var_244: int;

  anon0:
    call {:si_unique_call 1377} vslice_dummy_var_244 := __HAVOC_malloc(4);
    call {:si_unique_call 1378} RtlFailFast(3);
    return;
}



procedure {:origName "Sbp2CreateNiveusId"} Sbp2CreateNiveusId(actual_devInfo_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2CreateNiveusId"} Sbp2CreateNiveusId(actual_devInfo_1: int)
{
  var {:pointer} Tmp_2153: int;
  var {:scalar} Tmp_2154: int;
  var {:scalar} sdv_678: int;
  var {:scalar} sdv_679: int;
  var {:scalar} uniTemp_1: int;
  var {:pointer} devInfo_1: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;

  anon0:
    call {:si_unique_call 1379} uniTemp_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1380} vslice_dummy_var_245 := __HAVOC_malloc(4);
    devInfo_1 := actual_devInfo_1;
    call {:si_unique_call 1381} Tmp_2153 := __HAVOC_malloc(28);
    call {:si_unique_call 1382} vslice_dummy_var_246 := __HAVOC_malloc(36);
    call {:si_unique_call 1383} vslice_dummy_var_247 := __HAVOC_malloc(20);
    Tmp_2153 := strConst__li2bpl43;
    call {:si_unique_call 1384} RtlInitUnicodeString(uniTemp_1, Tmp_2153);
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1385} sdv_678 := corral_nondet();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_678 != 0;
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    call {:si_unique_call 1386} sdv_679 := RtlCompareMemory(0, 0, 8);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_679 == 8;
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    havoc Tmp_2154;
    call {:si_unique_call 1387} sdv_RtlCopyMemory(0, 0, Tmp_2154);
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L1;

  anon14_Then:
    goto L1;

  anon13_Then:
    assume {:partition} sdv_679 != 8;
    goto L1;

  anon12_Then:
    assume {:partition} sdv_678 == 0;
    goto L1;

  anon11_Then:
    goto L1;
}



procedure {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_39: int, actual_Irp_23: int) returns (Tmp_2160: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, yogi_error, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_39: int, actual_Irp_23: int) returns (Tmp_2160: int)
{
  var {:scalar} uniRetString: int;
  var {:pointer} Tmp_2161: int;
  var {:pointer} Tmp_2162: int;
  var {:pointer} Tmp_2163: int;
  var {:scalar} Tmp_2164: int;
  var {:pointer} Tmp_2165: int;
  var {:scalar} Tmp_2166: int;
  var {:pointer} DevInfo: int;
  var {:scalar} Tmp_2167: int;
  var {:scalar} Tmp_2168: int;
  var {:pointer} Tmp_2169: int;
  var {:scalar} Tmp_2170: int;
  var {:pointer} sdv_682: int;
  var {:pointer} Tmp_2171: int;
  var {:pointer} Tmp_2172: int;
  var {:pointer} Tmp_2173: int;
  var {:scalar} Tmp_2174: int;
  var {:pointer} Tmp_2175: int;
  var {:pointer} Tmp_2176: int;
  var {:pointer} Tmp_2177: int;
  var {:pointer} Tmp_2178: int;
  var {:pointer} Tmp_2179: int;
  var {:scalar} Tmp_2180: int;
  var {:pointer} Tmp_2181: int;
  var {:pointer} Tmp_2182: int;
  var {:scalar} Tmp_2183: int;
  var {:pointer} Tmp_2185: int;
  var {:scalar} Tmp_2186: int;
  var {:scalar} Tmp_2187: int;
  var {:pointer} Tmp_2188: int;
  var {:scalar} Tmp_2189: int;
  var {:scalar} i_6: int;
  var {:pointer} Tmp_2190: int;
  var {:pointer} DeviceInfo_6: int;
  var {:pointer} irpStack_17: int;
  var {:pointer} Tmp_2191: int;
  var {:pointer} Tmp_2192: int;
  var {:scalar} Tmp_2193: int;
  var {:pointer} Tmp_2194: int;
  var {:scalar} Tmp_2195: int;
  var {:pointer} Tmp_2196: int;
  var {:scalar} Tmp_2197: int;
  var {:pointer} Tmp_2198: int;
  var {:pointer} Tmp_2199: int;
  var {:scalar} reportedMissing: int;
  var {:pointer} Tmp_2200: int;
  var {:scalar} sdv_688: int;
  var {:pointer} Tmp_2201: int;
  var {:pointer} Tmp_2202: int;
  var {:scalar} Tmp_2203: int;
  var {:pointer} Tmp_2204: int;
  var {:pointer} Tmp_2205: int;
  var {:pointer} Tmp_2206: int;
  var {:pointer} fdoExtension_9: int;
  var {:pointer} Tmp_2207: int;
  var {:pointer} Tmp_2208: int;
  var {:scalar} Tmp_2209: int;
  var {:pointer} Tmp_2210: int;
  var {:pointer} Tmp_2211: int;
  var {:scalar} status_69: int;
  var {:pointer} sdv_692: int;
  var {:pointer} Tmp_2212: int;
  var {:pointer} Tmp_2213: int;
  var {:pointer} Tmp_2215: int;
  var {:pointer} Tmp_2217: int;
  var {:pointer} Tmp_2218: int;
  var {:pointer} Tmp_2219: int;
  var {:pointer} Tmp_2220: int;
  var {:scalar} Tmp_2221: int;
  var {:pointer} Tmp_2222: int;
  var {:pointer} count: int;
  var {:pointer} Tmp_2223: int;
  var {:pointer} Tmp_2224: int;
  var {:pointer} Tmp_2225: int;
  var {:pointer} pdoExtension_18: int;
  var {:pointer} Tmp_2226: int;
  var {:scalar} Tmp_2227: int;
  var {:scalar} Tmp_2228: int;
  var {:pointer} Tmp_2229: int;
  var {:pointer} Tmp_2230: int;
  var {:pointer} Tmp_2231: int;
  var {:pointer} Tmp_2232: int;
  var {:pointer} Tmp_2233: int;
  var {:pointer} Tmp_2234: int;
  var {:pointer} Tmp_2235: int;
  var {:pointer} Tmp_2236: int;
  var {:scalar} Tmp_2237: int;
  var {:pointer} Tmp_2238: int;
  var {:pointer} irp_7: int;
  var {:scalar} Tmp_2240: int;
  var {:pointer} Tmp_2241: int;
  var {:scalar} Tmp_2242: int;
  var {:pointer} Tmp_2243: int;
  var {:scalar} Tmp_2244: int;
  var {:pointer} Tmp_2246: int;
  var {:pointer} Tmp_2247: int;
  var {:pointer} Tmp_2248: int;
  var {:pointer} Tmp_2250: int;
  var {:pointer} deviceRelations_1: int;
  var {:pointer} Tmp_2251: int;
  var {:pointer} Tmp_2252: int;
  var {:pointer} Tmp_2253: int;
  var {:scalar} Tmp_2254: int;
  var {:scalar} Tmp_2255: int;
  var {:scalar} Tmp_2256: int;
  var {:pointer} Tmp_2257: int;
  var {:pointer} Tmp_2258: int;
  var {:scalar} Tmp_2259: int;
  var {:pointer} Tmp_2260: int;
  var {:pointer} Tmp_2261: int;
  var {:pointer} Tmp_2262: int;
  var {:pointer} Tmp_2263: int;
  var {:pointer} Tmp_2264: int;
  var {:scalar} Tmp_2265: int;
  var {:pointer} deviceCapabilities_1: int;
  var {:pointer} Tmp_2266: int;
  var {:pointer} Tmp_2267: int;
  var {:pointer} Tmp_2268: int;
  var {:pointer} Tmp_2269: int;
  var {:scalar} Tmp_2270: int;
  var {:scalar} cIrql_10: int;
  var {:pointer} Tmp_2271: int;
  var {:pointer} Tmp_2272: int;
  var {:pointer} Tmp_2273: int;
  var {:scalar} reported: int;
  var {:pointer} Tmp_2274: int;
  var {:pointer} Tmp_2275: int;
  var {:pointer} Tmp_2276: int;
  var {:pointer} DeviceObject_39: int;
  var {:pointer} Irp_23: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_2840: int;
  var vslice_dummy_var_2841: int;
  var vslice_dummy_var_2842: int;
  var vslice_dummy_var_2843: int;
  var vslice_dummy_var_2844: int;
  var vslice_dummy_var_2845: int;
  var vslice_dummy_var_2846: int;
  var vslice_dummy_var_2847: int;
  var vslice_dummy_var_2848: int;
  var vslice_dummy_var_2849: int;
  var vslice_dummy_var_2850: int;
  var vslice_dummy_var_2851: int;
  var vslice_dummy_var_2852: int;
  var vslice_dummy_var_2853: int;
  var vslice_dummy_var_2854: int;
  var vslice_dummy_var_2855: int;

  anon0:
    call {:si_unique_call 1388} uniRetString := __HAVOC_malloc(12);
    DeviceObject_39 := actual_DeviceObject_39;
    Irp_23 := actual_Irp_23;
    call {:si_unique_call 1389} Tmp_2161 := __HAVOC_malloc(2680);
    call {:si_unique_call 1390} Tmp_2165 := __HAVOC_malloc(4);
    call {:si_unique_call 1391} Tmp_2171 := __HAVOC_malloc(4);
    call {:si_unique_call 1392} Tmp_2172 := __HAVOC_malloc(28);
    call {:si_unique_call 1393} Tmp_2173 := __HAVOC_malloc(4);
    call {:si_unique_call 1394} Tmp_2176 := __HAVOC_malloc(4);
    call {:si_unique_call 1395} Tmp_2178 := __HAVOC_malloc(4);
    call {:si_unique_call 1396} Tmp_2182 := __HAVOC_malloc(4);
    call {:si_unique_call 1397} Tmp_2190 := __HAVOC_malloc(2680);
    call {:si_unique_call 1398} Tmp_2191 := __HAVOC_malloc(4);
    call {:si_unique_call 1399} Tmp_2199 := __HAVOC_malloc(4);
    call {:si_unique_call 1400} Tmp_2200 := __HAVOC_malloc(4);
    call {:si_unique_call 1401} Tmp_2204 := __HAVOC_malloc(2680);
    call {:si_unique_call 1402} Tmp_2210 := __HAVOC_malloc(4);
    call {:si_unique_call 1403} Tmp_2213 := __HAVOC_malloc(4);
    call {:si_unique_call 1404} Tmp_2218 := __HAVOC_malloc(4);
    call {:si_unique_call 1405} Tmp_2220 := __HAVOC_malloc(4);
    call {:si_unique_call 1406} Tmp_2222 := __HAVOC_malloc(4);
    call {:si_unique_call 1407} Tmp_2224 := __HAVOC_malloc(28);
    call {:si_unique_call 1408} Tmp_2226 := __HAVOC_malloc(4);
    call {:si_unique_call 1409} Tmp_2229 := __HAVOC_malloc(2680);
    call {:si_unique_call 1410} Tmp_2230 := __HAVOC_malloc(4);
    call {:si_unique_call 1411} Tmp_2231 := __HAVOC_malloc(4);
    call {:si_unique_call 1412} Tmp_2238 := __HAVOC_malloc(4);
    call {:si_unique_call 1413} Tmp_2241 := __HAVOC_malloc(4);
    call {:si_unique_call 1414} Tmp_2243 := __HAVOC_malloc(4);
    call {:si_unique_call 1415} Tmp_2246 := __HAVOC_malloc(4);
    call {:si_unique_call 1416} Tmp_2250 := __HAVOC_malloc(4);
    call {:si_unique_call 1417} Tmp_2252 := __HAVOC_malloc(4);
    call {:si_unique_call 1418} Tmp_2258 := __HAVOC_malloc(4);
    call {:si_unique_call 1419} Tmp_2260 := __HAVOC_malloc(28);
    call {:si_unique_call 1420} Tmp_2267 := __HAVOC_malloc(28);
    call {:si_unique_call 1421} Tmp_2272 := __HAVOC_malloc(28);
    assume {:nonnull} DeviceObject_39 != 0;
    assume DeviceObject_39 > 0;
    havoc pdoExtension_18;
    call {:si_unique_call 1422} irpStack_17 := sdv_IoGetCurrentIrpStackLocation(Irp_23);
    DevInfo := 0;
    assume {:nonnull} DeviceObject_39 != 0;
    assume DeviceObject_39 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := -1073741810;
    call {:si_unique_call 1423} sdv_IoCompleteRequest(0, 0);
    Tmp_2160 := -1073741810;
    goto L1;

  L1:
    call {:si_unique_call 1424} SLIC_Sbp2PnpDeviceControl_exit(strConst__li2bpl2, Tmp_2160);
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon381_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon380_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    call {:si_unique_call 1425} status_69 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon286_Then, anon286_Else;

  anon286_Else:
    assume {:partition} status_69 >= 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc DeviceInfo_6;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc Tmp_2187;
    call {:si_unique_call 1426} Sbp2AddLog(pdoExtension_18, 1, -798076866, Tmp_2187, 0);
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    status_69 := 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := status_69;
    goto L74;

  L74:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1427} vslice_dummy_var_248 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_18), 0);
    call {:si_unique_call 1428} sdv_IoCompleteRequest(0, 0);
    Tmp_2160 := status_69;
    goto L1;

  anon359_Then:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    goto L74;

  anon360_Then:
    reportedMissing := 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2192;
    assume {:nonnull} Tmp_2192 != 0;
    assume Tmp_2192 > 0;
    havoc fdoExtension_9;
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    havoc vslice_dummy_var_2840;
    call {:si_unique_call 1429} Sbp2AddLog(pdoExtension_18, 1, -747278254, fdoExtension_9, vslice_dummy_var_2840);
    call {:si_unique_call 1430} Tmp_2233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    call {:si_unique_call 1431} sdv_KeAcquireSpinLock(0, Tmp_2233);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    reportedMissing := 0;
    goto L94;

  L94:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1432} vslice_dummy_var_263 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_18), 0, 0);
    call {:si_unique_call 1433} sdv_KeReleaseSpinLock(0, cIrql_10);
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume {:partition} reportedMissing != 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2215;
    assume {:nonnull} Tmp_2215 != 0;
    assume Tmp_2215 > 0;
    havoc vslice_dummy_var_2841;
    call {:si_unique_call 1434} vslice_dummy_var_264 := Sbp2EnableBusResetNotification#1(vslice_dummy_var_2841, 0);
    goto L103;

  L103:
    call {:si_unique_call 1435} Tmp_2233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    call {:si_unique_call 1436} sdv_KeRaiseIrql(2, Tmp_2233);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1437} sdv_682 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_18), 0);
    irp_7 := sdv_682;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} irp_7 != 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc vslice_dummy_var_2842;
    call {:si_unique_call 1438} Sbp2StartIo#1(vslice_dummy_var_2842, irp_7);
    goto L114;

  L114:
    call {:si_unique_call 1439} Sbp2StartNextPacketByKey#1(DeviceObject_39, 0);
    call {:si_unique_call 1440} sdv_KeLowerIrql(cIrql_10);
    call {:si_unique_call 1441} vslice_dummy_var_249 := Sbp2CleanDeviceExtension#1(DeviceObject_39, 1, 0);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := 0;
    goto L74;

  anon425_Then:
    assume {:partition} irp_7 == 0;
    goto L114;

  anon293_Then:
    assume {:partition} reportedMissing == 0;
    goto L103;

  anon292_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    reportedMissing := 1;
    goto L94;

  anon426_Then:
    goto L94;

  anon361_Then:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon291_Then, anon291_Else;

  anon291_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    count := HibernateCount__DEVICE_EXTENSION(pdoExtension_18);
    goto L134;

  L134:
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume {:partition} count != 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc vslice_dummy_var_2843;
    call {:si_unique_call 1442} status_69 := Sbp2ForwardIrpSynchronous(vslice_dummy_var_2843, Irp_23);
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume {:partition} status_69 >= 0;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc vslice_dummy_var_2844;
    call {:si_unique_call 1443} sdv_IoAdjustPagingPathCount(0, vslice_dummy_var_2844);
    goto L141;

  L141:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := status_69;
    goto L74;

  anon295_Then:
    assume {:partition} 0 > status_69;
    goto L141;

  anon294_Then:
    assume {:partition} count == 0;
    status_69 := -1073741637;
    goto L141;

  anon379_Then:
    count := 0;
    goto L134;

  anon291_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    count := PagingPathCount__DEVICE_EXTENSION(pdoExtension_18);
    goto L134;

  anon362_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon290_Then, anon290_Else;

  anon290_Else:
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2250;
    assume {:nonnull} Tmp_2250 != 0;
    assume Tmp_2250 > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc Tmp_2208;
    havoc Tmp_2177;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2186;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc vslice_dummy_var_2845;
    call {:si_unique_call 1444} WPP_SF_qqD(Tmp_2186, 90, Tmp_2177, pdoExtension_18, Tmp_2208, vslice_dummy_var_2845);
    goto L153;

  L153:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    goto L74;

  anon298_Then:
    goto L153;

  anon422_Then:
    goto L153;

  anon297_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L153;

  anon290_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    call {:si_unique_call 1445} Tmp_2233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    call {:si_unique_call 1446} sdv_KeAcquireSpinLock(0, Tmp_2233);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1447} sdv_KeReleaseSpinLock(0, cIrql_10);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2218;
    assume {:nonnull} Tmp_2218 != 0;
    assume Tmp_2218 > 0;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc Tmp_2202;
    havoc Tmp_2194;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2195;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc vslice_dummy_var_2846;
    call {:si_unique_call 1448} WPP_SF_qqD(Tmp_2195, 91, Tmp_2194, pdoExtension_18, Tmp_2202, vslice_dummy_var_2846);
    goto L153;

  anon300_Then:
    goto L153;

  anon424_Then:
    goto L153;

  anon423_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L153;

  anon299_Then:
    goto L153;

  anon296_Then:
    goto L153;

  anon363_Then:
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2243;
    assume {:nonnull} Tmp_2243 != 0;
    assume Tmp_2243 > 0;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    havoc Tmp_2175;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2166;
    call {:si_unique_call 1449} WPP_SF_(Tmp_2166, 76, Tmp_2175);
    goto L186;

  L186:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    goto anon327_Then, anon327_Else;

  anon327_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2178;
    assume {:nonnull} Tmp_2178 != 0;
    assume Tmp_2178 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    havoc Tmp_2234;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2244;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc vslice_dummy_var_2847;
    call {:si_unique_call 1450} WPP_SF_qD(Tmp_2244, 89, Tmp_2234, pdoExtension_18, vslice_dummy_var_2847);
    goto L361;

  L361:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    goto L239;

  L239:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := status_69;
    goto L74;

  anon328_Then:
    goto L361;

  anon421_Then:
    goto L361;

  anon327_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L361;

  anon376_Then:
    goto anon303_Then, anon303_Else;

  anon303_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2171;
    assume {:nonnull} Tmp_2171 != 0;
    assume Tmp_2171 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    havoc Tmp_2163;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2240;
    call {:si_unique_call 1451} WPP_SF_(Tmp_2240, 86, Tmp_2163);
    goto L211;

  L211:
    call {:si_unique_call 1452} status_69 := Sbp2_BuildInstanceId(DeviceInfo_6, uniRetString);
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume {:partition} status_69 < 0;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2191;
    assume {:nonnull} Tmp_2191 != 0;
    assume Tmp_2191 > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    havoc Tmp_2205;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2254;
    call {:si_unique_call 1453} WPP_SF_D(Tmp_2254, 87, Tmp_2205, status_69);
    goto L239;

  anon308_Then:
    goto L239;

  anon420_Then:
    goto L239;

  anon307_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon305_Then:
    assume {:partition} 0 <= status_69;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon418_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2226;
    assume {:nonnull} Tmp_2226 != 0;
    assume Tmp_2226 > 0;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    goto L239;

  anon419_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    goto L239;

  anon306_Then:
    havoc Tmp_2206;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2256;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_2848;
    call {:si_unique_call 1454} WPP_SF_S(Tmp_2256, 88, Tmp_2206, vslice_dummy_var_2848);
    goto L239;

  anon304_Then:
    goto L211;

  anon417_Then:
    goto L211;

  anon303_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L211;

  anon377_Then:
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2213;
    assume {:nonnull} Tmp_2213 != 0;
    assume Tmp_2213 > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon310_Then, anon310_Else;

  anon310_Else:
    havoc Tmp_2264;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2180;
    call {:si_unique_call 1455} WPP_SF_(Tmp_2180, 83, Tmp_2264);
    goto L250;

  L250:
    call {:si_unique_call 1456} status_69 := Sbp2_BuildCompatIds(DeviceInfo_6, uniRetString);
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume {:partition} status_69 < 0;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2220;
    assume {:nonnull} Tmp_2220 != 0;
    assume Tmp_2220 > 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    havoc Tmp_2261;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2183;
    call {:si_unique_call 1457} WPP_SF_D(Tmp_2183, 84, Tmp_2261, status_69);
    goto L239;

  anon314_Then:
    goto L239;

  anon416_Then:
    goto L239;

  anon313_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon311_Then:
    assume {:partition} 0 <= status_69;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2252;
    assume {:nonnull} Tmp_2252 != 0;
    assume Tmp_2252 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    havoc Tmp_2275;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2228;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_2849;
    call {:si_unique_call 1458} WPP_SF_S(Tmp_2228, 85, Tmp_2275, vslice_dummy_var_2849);
    goto L239;

  anon312_Then:
    goto L239;

  anon415_Then:
    goto L239;

  anon414_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon310_Then:
    goto L250;

  anon413_Then:
    goto L250;

  anon309_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L250;

  anon378_Then:
    goto anon315_Then, anon315_Else;

  anon315_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2222;
    assume {:nonnull} Tmp_2222 != 0;
    assume Tmp_2222 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    havoc Tmp_2273;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2167;
    call {:si_unique_call 1459} WPP_SF_(Tmp_2167, 80, Tmp_2273);
    goto L287;

  L287:
    call {:si_unique_call 1460} status_69 := Sbp2_BuildHardwareIds(DeviceInfo_6, uniRetString);
    goto anon317_Then, anon317_Else;

  anon317_Else:
    assume {:partition} status_69 < 0;
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2165;
    assume {:nonnull} Tmp_2165 != 0;
    assume Tmp_2165 > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    havoc Tmp_2251;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2203;
    call {:si_unique_call 1461} WPP_SF_D(Tmp_2203, 81, Tmp_2251, status_69);
    goto L239;

  anon320_Then:
    goto L239;

  anon412_Then:
    goto L239;

  anon319_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon317_Then:
    assume {:partition} 0 <= status_69;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2258;
    assume {:nonnull} Tmp_2258 != 0;
    assume Tmp_2258 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    havoc Tmp_2268;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2209;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_2850;
    call {:si_unique_call 1462} WPP_SF_S(Tmp_2209, 82, Tmp_2268, vslice_dummy_var_2850);
    goto L239;

  anon318_Then:
    goto L239;

  anon411_Then:
    goto L239;

  anon410_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon316_Then:
    goto L287;

  anon409_Then:
    goto L287;

  anon315_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L287;

  anon404_Then:
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2182;
    assume {:nonnull} Tmp_2182 != 0;
    assume Tmp_2182 > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    havoc Tmp_2269;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2242;
    call {:si_unique_call 1463} WPP_SF_(Tmp_2242, 77, Tmp_2269);
    goto L324;

  L324:
    call {:si_unique_call 1464} status_69 := Sbp2_BuildDeviceId(DeviceInfo_6, uniRetString);
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} status_69 < 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2210;
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    havoc Tmp_2225;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2164;
    call {:si_unique_call 1465} WPP_SF_D(Tmp_2164, 78, Tmp_2225, status_69);
    goto L239;

  anon326_Then:
    goto L239;

  anon408_Then:
    goto L239;

  anon325_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon323_Then:
    assume {:partition} 0 <= status_69;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2238;
    assume {:nonnull} Tmp_2238 != 0;
    assume Tmp_2238 > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    havoc Tmp_2235;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2170;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_2851;
    call {:si_unique_call 1466} WPP_SF_S(Tmp_2170, 79, Tmp_2235, vslice_dummy_var_2851);
    goto L239;

  anon324_Then:
    goto L239;

  anon407_Then:
    goto L239;

  anon406_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon322_Then:
    goto L324;

  anon405_Then:
    goto L324;

  anon321_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L324;

  anon302_Then:
    goto L186;

  anon403_Then:
    goto L186;

  anon301_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L186;

  anon364_Then:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon289_Then, anon289_Else;

  anon289_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    status_69 := -1073741637;
    goto L375;

  L375:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := status_69;
    goto L74;

  anon329_Then:
    goto L370;

  L370:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc vslice_dummy_var_2852;
    call {:si_unique_call 1467} status_69 := Sbp2_BuildDeviceText(vslice_dummy_var_2852, DeviceInfo_6, uniRetString);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2199;
    assume {:nonnull} Tmp_2199 != 0;
    assume Tmp_2199 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc Tmp_2263;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2227;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_2853;
    call {:si_unique_call 1468} WPP_SF_qS(Tmp_2227, 75, Tmp_2263, pdoExtension_18, vslice_dummy_var_2853);
    goto L375;

  anon330_Then:
    goto L375;

  anon402_Then:
    goto L375;

  anon401_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L375;

  anon289_Then:
    goto L370;

  anon365_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2212;
    assume {:nonnull} Tmp_2212 != 0;
    assume Tmp_2212 > 0;
    havoc fdoExtension_9;
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    havoc Tmp_2185;
    assume {:nonnull} DeviceObject_39 != 0;
    assume DeviceObject_39 > 0;
    assume {:nonnull} Tmp_2185 != 0;
    assume Tmp_2185 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    goto L74;

  anon366_Then:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc deviceCapabilities_1;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2262;
    assume {:nonnull} Tmp_2262 != 0;
    assume Tmp_2262 > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:nonnull} Tmp_2262 != 0;
    assume Tmp_2262 > 0;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    goto L404;

  L404:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2272;
    assume {:nonnull} Tmp_2272 != 0;
    assume Tmp_2272 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2172;
    assume {:nonnull} Tmp_2172 != 0;
    assume Tmp_2172 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2260;
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2267;
    assume {:nonnull} Tmp_2267 != 0;
    assume Tmp_2267 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2224;
    assume {:nonnull} Tmp_2224 != 0;
    assume Tmp_2224 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon374_Then:
    goto L398;

  L398:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2217;
    assume {:nonnull} Tmp_2217 != 0;
    assume Tmp_2217 > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} Tmp_2217 != 0;
    assume Tmp_2217 > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    goto L400;

  L400:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L404;

  anon375_Then:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L404;

  anon400_Then:
    goto L400;

  anon399_Then:
    goto L398;

  anon367_Then:
    goto anon331_Then, anon331_Else;

  anon331_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2230;
    assume {:nonnull} Tmp_2230 != 0;
    assume Tmp_2230 > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    havoc Tmp_2169;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2174;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc vslice_dummy_var_2854;
    call {:si_unique_call 1469} WPP_SF_qD(Tmp_2174, 74, Tmp_2169, pdoExtension_18, vslice_dummy_var_2854);
    goto L420;

  L420:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    goto L74;

  anon332_Then:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc deviceRelations_1;
    goto L435;

  L435:
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_2168;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_2176;
    assume {:nonnull} Tmp_2176 != 0;
    assume Tmp_2176 > 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    call {:si_unique_call 1470} vslice_dummy_var_262 := sdv_ObReferenceObject(0);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon334_Then:
    call {:si_unique_call 1471} sdv_692 := ExAllocatePoolWithTag(1, 8, 846226003);
    deviceRelations_1 := sdv_692;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} deviceRelations_1 != 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    goto L435;

  anon398_Then:
    assume {:partition} deviceRelations_1 == 0;
    status_69 := -1073741670;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := status_69;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon333_Then:
    goto L420;

  anon397_Then:
    goto L420;

  anon331_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L420;

  anon368_Then:
    goto L58;

  L58:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    goto L74;

  anon369_Then:
    goto L58;

  anon370_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2257;
    assume {:nonnull} Tmp_2257 != 0;
    assume Tmp_2257 > 0;
    havoc vslice_dummy_var_2855;
    call {:si_unique_call 1472} vslice_dummy_var_261 := Sbp2EnableBusResetNotification#1(vslice_dummy_var_2855, 0);
    call {:si_unique_call 1473} vslice_dummy_var_250 := PoRegisterDeviceForIdleDetection(0, 0, 0, 4);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1474} Tmp_2233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    call {:si_unique_call 1475} sdv_KeAcquireSpinLock(0, Tmp_2233);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1476} sdv_KeReleaseSpinLock(0, cIrql_10);
    call {:si_unique_call 1477} vslice_dummy_var_251 := KeCancelTimer(0);
    goto L469;

  L469:
    status_69 := 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := status_69;
    goto L74;

  anon335_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1478} sdv_KeReleaseSpinLock(0, cIrql_10);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2179;
    assume {:nonnull} Tmp_2179 != 0;
    assume Tmp_2179 > 0;
    havoc fdoExtension_9;
    call {:si_unique_call 1479} ExAcquireFastMutex(0);
    call {:si_unique_call 1480} vslice_dummy_var_252 := Sbp2ManagementTransaction#1(pdoExtension_18, 7, -1);
    call {:si_unique_call 1481} ExReleaseFastMutex(0);
    call {:si_unique_call 1482} vslice_dummy_var_253 := Sbp2CleanDeviceExtension#1(DeviceObject_39, 0, 0);
    call {:si_unique_call 1483} vslice_dummy_var_254 := Sbp2InitializeDeviceExtension#1(pdoExtension_18);
    goto L469;

  anon371_Then:
    call {:si_unique_call 1484} Tmp_2233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    call {:si_unique_call 1485} sdv_KeAcquireSpinLock(0, Tmp_2233);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1486} sdv_KeReleaseSpinLock(0, cIrql_10);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    goto L74;

  anon372_Then:
    status_69 := 0;
    call {:si_unique_call 1487} Tmp_2233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    call {:si_unique_call 1488} sdv_KeAcquireSpinLock(0, Tmp_2233);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    call {:si_unique_call 1489} vslice_dummy_var_255 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1490} vslice_dummy_var_258 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_18), 0, 0);
    goto L504;

  L504:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    reported := 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2207;
    assume {:nonnull} Tmp_2207 != 0;
    assume Tmp_2207 > 0;
    havoc fdoExtension_9;
    i_6 := 0;
    goto L517;

  L517:
    call {:si_unique_call 1491} Tmp_2161, i_6, Tmp_2197 := Sbp2PnpDeviceControl_loop_L517(Tmp_2161, i_6, Tmp_2197, fdoExtension_9, DeviceObject_39);
    goto L517_last;

  L517_last:
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    Tmp_2197 := i_6;
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    havoc Tmp_2161;
    assume {:nonnull} Tmp_2161 != 0;
    assume Tmp_2161 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    reported := 1;
    goto L518;

  L518:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1492} vslice_dummy_var_259 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_18), 0, 0);
    call {:si_unique_call 1493} sdv_KeReleaseSpinLock(0, cIrql_10);
    call {:si_unique_call 1494} Tmp_2233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    call {:si_unique_call 1495} sdv_KeRaiseIrql(2, Tmp_2233);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    havoc cIrql_10;
    call {:si_unique_call 1496} Sbp2StartNextPacketByKey#1(DeviceObject_39, 0);
    call {:si_unique_call 1497} sdv_KeLowerIrql(cIrql_10);
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2241;
    assume {:nonnull} Tmp_2241 != 0;
    assume Tmp_2241 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    havoc Tmp_2253;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2265;
    call {:si_unique_call 1498} WPP_SF_qq(Tmp_2265, 92, Tmp_2253, pdoExtension_18, DeviceObject_39);
    goto L542;

  L542:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1499} vslice_dummy_var_260 := KeCancelTimer(0);
    goto anon341_Then, anon341_Else;

  anon341_Else:
    assume {:partition} reported != 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := 0;
    call {:si_unique_call 1500} sdv_IoCompleteRequest(0, 0);
    Tmp_2160 := 0;
    goto L1;

  anon341_Then:
    assume {:partition} reported == 0;
    call {:si_unique_call 1501} sdv_IoReleaseRemoveLockAndWait(0, 0);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2266;
    assume {:nonnull} Tmp_2266 != 0;
    assume Tmp_2266 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2219;
    assume {:nonnull} Tmp_2219 != 0;
    assume Tmp_2219 > 0;
    call {:si_unique_call 1502} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2201;
    assume {:nonnull} Tmp_2201 != 0;
    assume Tmp_2201 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2274;
    assume {:nonnull} Tmp_2274 != 0;
    assume Tmp_2274 > 0;
    goto L563;

  L563:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2162;
    assume {:nonnull} Tmp_2162 != 0;
    assume Tmp_2162 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2236;
    assume {:nonnull} Tmp_2236 != 0;
    assume Tmp_2236 > 0;
    call {:si_unique_call 1503} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2276;
    assume {:nonnull} Tmp_2276 != 0;
    assume Tmp_2276 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2196;
    assume {:nonnull} Tmp_2196 != 0;
    assume Tmp_2196 > 0;
    goto L569;

  L569:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2211;
    assume {:nonnull} Tmp_2211 != 0;
    assume Tmp_2211 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2247;
    assume {:nonnull} Tmp_2247 != 0;
    assume Tmp_2247 > 0;
    call {:si_unique_call 1504} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2198;
    assume {:nonnull} Tmp_2198 != 0;
    assume Tmp_2198 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2188;
    assume {:nonnull} Tmp_2188 != 0;
    assume Tmp_2188 > 0;
    goto L575;

  L575:
    call {:si_unique_call 1505} Tmp_2233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    call {:si_unique_call 1506} sdv_KeAcquireSpinLock(0, Tmp_2233);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    havoc cIrql_10;
    i_6 := 0;
    goto L584;

  L584:
    call {:si_unique_call 1507} i_6, Tmp_2190, Tmp_2229, Tmp_2255, Tmp_2270 := Sbp2PnpDeviceControl_loop_L584(i_6, Tmp_2190, fdoExtension_9, Tmp_2229, Tmp_2255, Tmp_2270, DeviceObject_39);
    goto L584_last;

  L584_last:
    Tmp_2270 := i_6;
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    havoc Tmp_2190;
    assume {:nonnull} Tmp_2190 != 0;
    assume Tmp_2190 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    Tmp_2255 := i_6;
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    havoc Tmp_2229;
    assume {:nonnull} Tmp_2229 != 0;
    assume Tmp_2229 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    Tmp_2221 := i_6;
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    havoc Tmp_2204;
    DevInfo := Tmp_2204 + Tmp_2221 * 268;
    goto L585;

  L585:
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:partition} DevInfo != 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1508} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L595;

  L595:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1509} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L601;

  L601:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1510} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L590;

  L590:
    call {:si_unique_call 1511} sdv_KeReleaseSpinLock(0, cIrql_10);
    call {:si_unique_call 1512} IoDeleteDevice(0);
    goto anon345_Then, anon345_Else;

  anon345_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2173;
    assume {:nonnull} Tmp_2173 != 0;
    assume Tmp_2173 > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon346_Then, anon346_Else;

  anon346_Else:
    havoc Tmp_2223;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2237;
    call {:si_unique_call 1513} WPP_SF_qq(Tmp_2237, 93, Tmp_2223, pdoExtension_18, DeviceObject_39);
    goto L619;

  L619:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := status_69;
    call {:si_unique_call 1514} sdv_IoCompleteRequest(0, 0);
    Tmp_2160 := status_69;
    goto L1;

  anon346_Then:
    goto L619;

  anon391_Then:
    goto L619;

  anon345_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L619;

  anon344_Then:
    goto L590;

  anon343_Then:
    goto L601;

  anon390_Then:
    goto L595;

  anon342_Then:
    assume {:partition} DevInfo == 0;
    goto L590;

  anon389_Then:
    i_6 := i_6 + 1;
    goto anon389_Then_dummy;

  anon389_Then_dummy:
    assume false;
    return;

  anon388_Then:
    goto L585;

  anon387_Then:
    goto L575;

  anon386_Then:
    goto L569;

  anon385_Then:
    goto L563;

  anon340_Then:
    goto L542;

  anon384_Then:
    goto L542;

  anon339_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L542;

  anon383_Then:
    i_6 := i_6 + 1;
    goto anon383_Then_dummy;

  anon383_Then_dummy:
    assume false;
    return;

  anon338_Then:
    goto L518;

  anon336_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2246;
    assume {:nonnull} Tmp_2246 != 0;
    assume Tmp_2246 > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    havoc Tmp_2248;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2259;
    call {:si_unique_call 1515} WPP_SF_q(Tmp_2259, 94, Tmp_2248, pdoExtension_18);
    goto L638;

  L638:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2271;
    assume {:nonnull} Tmp_2271 != 0;
    assume Tmp_2271 > 0;
    havoc fdoExtension_9;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    call {:si_unique_call 1516} vslice_dummy_var_256 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto L647;

  L647:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1517} sdv_KeReleaseSpinLock(0, cIrql_10);
    call {:si_unique_call 1518} ExAcquireFastMutex(0);
    call {:si_unique_call 1519} vslice_dummy_var_257 := Sbp2ManagementTransaction#1(pdoExtension_18, 7, -1);
    call {:si_unique_call 1520} ExReleaseFastMutex(0);
    call {:si_unique_call 1521} Tmp_2233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    call {:si_unique_call 1522} sdv_KeAcquireSpinLock(0, Tmp_2233);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    havoc cIrql_10;
    goto L633;

  L633:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto L669;

  L669:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1523} sdv_KeReleaseSpinLock(0, cIrql_10);
    call {:si_unique_call 1524} sdv_688 := Sbp2CleanDeviceExtension#1(DeviceObject_39, 1, 0);
    goto anon352_Then, anon352_Else;

  anon352_Else:
    assume {:partition} sdv_688 == 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2231;
    assume {:nonnull} Tmp_2231 != 0;
    assume Tmp_2231 > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    havoc Tmp_2181;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2193;
    call {:si_unique_call 1525} WPP_SF_q(Tmp_2193, 96, Tmp_2181, pdoExtension_18);
    goto L680;

  L680:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := status_69;
    goto L74;

  anon354_Then:
    goto L680;

  anon394_Then:
    goto L680;

  anon353_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L680;

  anon352_Then:
    assume {:partition} sdv_688 != 0;
    goto L680;

  anon351_Then:
    goto L633;

  anon393_Then:
    goto L647;

  anon350_Then:
    goto L638;

  anon392_Then:
    goto L638;

  anon349_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L638;

  anon348_Then:
    goto L633;

  anon337_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2200;
    assume {:nonnull} Tmp_2200 != 0;
    assume Tmp_2200 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    havoc Tmp_2232;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2189;
    call {:si_unique_call 1526} WPP_SF_q(Tmp_2189, 95, Tmp_2232, pdoExtension_18);
    goto L669;

  anon355_Then:
    goto L669;

  anon396_Then:
    goto L669;

  anon395_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L669;

  anon347_Then:
    goto L669;

  anon382_Then:
    goto L504;

  anon373_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    goto L704;

  L704:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := -1073741823;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    goto L74;

  anon288_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    call {:si_unique_call 1527} Tmp_2233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    call {:si_unique_call 1528} sdv_KeAcquireSpinLock(0, Tmp_2233);
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1529} sdv_KeReleaseSpinLock(0, cIrql_10);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    status_69 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    goto L74;

  anon357_Then:
    goto L704;

  anon356_Then:
    goto L704;

  anon287_Then:
    call {:si_unique_call 1530} status_69 := Sbp2StartDevice(DeviceObject_39);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := status_69;
    goto L74;

  anon286_Then:
    assume {:partition} 0 > status_69;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := status_69;
    call {:si_unique_call 1531} sdv_IoCompleteRequest(0, 0);
    Tmp_2160 := status_69;
    goto L1;

  anon358_Then:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))] := -1073741810;
    call {:si_unique_call 1532} sdv_IoCompleteRequest(0, 0);
    Tmp_2160 := -1073741810;
    goto L1;

  anon285_Then:
    call {:si_unique_call 1533} Tmp_2160 := Sbp2FDOPnpDeviceControl(DeviceObject_39, Irp_23);
    goto L1;
}



procedure {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_7: int, actual_uniDeviceId: int) returns (Tmp_2277: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2277 == -1073741670 || Tmp_2277 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_7: int, actual_uniDeviceId: int) returns (Tmp_2277: int)
{
  var {:scalar} Tmp_2278: int;
  var {:pointer} Tmp_2279: int;
  var {:pointer} sdv_709: int;
  var {:scalar} Tmp_2280: int;
  var {:scalar} Tmp_2281: int;
  var {:pointer} Tmp_2282: int;
  var {:pointer} Tmp_2283: int;
  var {:scalar} Tmp_2284: int;
  var {:pointer} Tmp_2285: int;
  var {:scalar} Tmp_2286: int;
  var {:pointer} Tmp_2287: int;
  var {:scalar} Tmp_2288: int;
  var {:pointer} Tmp_2289: int;
  var {:scalar} Tmp_2290: int;
  var {:scalar} status_70: int;
  var {:pointer} Tmp_2291: int;
  var {:pointer} DeviceInfo_7: int;
  var {:pointer} uniDeviceId: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_2856: int;
  var vslice_dummy_var_2857: int;
  var vslice_dummy_var_2858: int;

  anon0:
    DeviceInfo_7 := actual_DeviceInfo_7;
    uniDeviceId := actual_uniDeviceId;
    call {:si_unique_call 1534} Tmp_2282 := __HAVOC_malloc(4);
    call {:si_unique_call 1535} Tmp_2283 := __HAVOC_malloc(100);
    call {:si_unique_call 1536} Tmp_2289 := __HAVOC_malloc(76);
    call {:si_unique_call 1537} Tmp_2291 := __HAVOC_malloc(160);
    status_70 := 0;
    call {:si_unique_call 1538} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2284;
    call {:si_unique_call 1539} sdv_709 := ExAllocatePoolWithTag(1, Tmp_2284, -498638253);
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2282;
    assume {:nonnull} Tmp_2282 != 0;
    assume Tmp_2282 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_2279;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2288;
    call {:si_unique_call 1540} WPP_SF_(Tmp_2288, 102, Tmp_2279);
    goto L49;

  L49:
    status_70 := -1073741670;
    goto L38;

  L38:
    Tmp_2277 := status_70;
    return;

  anon21_Then:
    goto L49;

  anon24_Then:
    goto L49;

  anon20_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon22_Then:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2280;
    call {:si_unique_call 1541} sdv_RtlZeroMemory(0, Tmp_2280);
    call {:si_unique_call 1542} Sbp2CreateNiveusId(DeviceInfo_7);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2290;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2285;
    goto L34;

  L34:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2278;
    Tmp_2283 := strConst__li2bpl46;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_2856;
    call {:si_unique_call 1543} vslice_dummy_var_265 := RtlStringCbPrintfW(vslice_dummy_var_2856, Tmp_2278, Tmp_2283);
    goto L38;

  anon23_Then:
    Tmp_2285 := strConst__li2bpl31;
    goto L34;

  anon18_Then:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2287;
    goto L41;

  L41:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2281;
    Tmp_2289 := strConst__li2bpl47;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_2857;
    call {:si_unique_call 1544} vslice_dummy_var_266 := RtlStringCbPrintfW(vslice_dummy_var_2857, Tmp_2281, Tmp_2289);
    goto L38;

  anon19_Then:
    Tmp_2287 := strConst__li2bpl31;
    goto L41;

  anon17_Then:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2286;
    Tmp_2291 := strConst__li2bpl48;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_2858;
    call {:si_unique_call 1545} vslice_dummy_var_267 := RtlStringCbPrintfW(vslice_dummy_var_2858, Tmp_2286, Tmp_2291);
    goto L38;
}



procedure {:origName "WPP_SF_qSD"} WPP_SF_qSD(actual_Logger_29: int, actual_id_29: int, actual_TraceGuid_29: int, actual_s_p_e_c_i_a_l_104: int, actual_s_p_e_c_i_a_l_105: int, actual_s_p_e_c_i_a_l_106: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qSD"} WPP_SF_qSD(actual_Logger_29: int, actual_id_29: int, actual_TraceGuid_29: int, actual_s_p_e_c_i_a_l_104: int, actual_s_p_e_c_i_a_l_105: int, actual_s_p_e_c_i_a_l_106: int)
{
  var {:scalar} Tmp_2299: int;
  var {:scalar} sdv_714: int;
  var {:pointer} Tmp_2300: int;
  var {:pointer} TraceGuid_29: int;
  var {:pointer} s_p_e_c_i_a_l_105: int;
  var vslice_dummy_var_268: int;

  anon0:
    call {:si_unique_call 1546} vslice_dummy_var_268 := __HAVOC_malloc(4);
    TraceGuid_29 := actual_TraceGuid_29;
    s_p_e_c_i_a_l_105 := actual_s_p_e_c_i_a_l_105;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_105 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_105 != 0;
    assume s_p_e_c_i_a_l_105 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2299 := (sdv_714 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_105 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_105 != 0;
    assume s_p_e_c_i_a_l_105 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2300 := s_p_e_c_i_a_l_105;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2300 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_105 == 0;
    goto L18;

  anon10_Then:
    Tmp_2299 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_105 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_D"} WPP_SF_D(actual_Logger_30: int, actual_id_30: int, actual_TraceGuid_30: int, actual_s_p_e_c_i_a_l_107: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_D"} WPP_SF_D(actual_Logger_30: int, actual_id_30: int, actual_TraceGuid_30: int, actual_s_p_e_c_i_a_l_107: int)
{
  var {:pointer} TraceGuid_30: int;
  var vslice_dummy_var_269: int;

  anon0:
    call {:si_unique_call 1547} vslice_dummy_var_269 := __HAVOC_malloc(4);
    TraceGuid_30 := actual_TraceGuid_30;
    return;
}



procedure {:origName "Sbp2CreateClose"} Sbp2CreateClose(actual_DeviceObject_40: int, actual_Irp_24: int) returns (Tmp_2309: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued, yogi_error, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2CreateClose"} Sbp2CreateClose(actual_DeviceObject_40: int, actual_Irp_24: int) returns (Tmp_2309: int)
{
  var {:pointer} Tmp_2310: int;
  var {:pointer} irpStack_18: int;
  var {:scalar} waitValue_4: int;
  var {:scalar} Tmp_2311: int;
  var {:pointer} pdoExtension_19: int;
  var {:scalar} Tmp_2312: int;
  var {:pointer} Tmp_2313: int;
  var {:pointer} Tmp_2314: int;
  var {:pointer} Tmp_2315: int;
  var {:pointer} Tmp_2316: int;
  var {:pointer} Tmp_2317: int;
  var {:scalar} Tmp_2318: int;
  var {:scalar} Tmp_2319: int;
  var {:pointer} Tmp_2320: int;
  var {:pointer} Tmp_2321: int;
  var {:scalar} cIrql_11: int;
  var {:scalar} status_71: int;
  var {:pointer} Tmp_2322: int;
  var {:pointer} DeviceObject_40: int;
  var {:pointer} Irp_24: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_2859: int;
  var vslice_dummy_var_2860: int;
  var vslice_dummy_var_2861: int;

  anon0:
    call {:si_unique_call 1548} waitValue_4 := __HAVOC_malloc(20);
    DeviceObject_40 := actual_DeviceObject_40;
    Irp_24 := actual_Irp_24;
    call {:si_unique_call 1549} Tmp_2313 := __HAVOC_malloc(4);
    call {:si_unique_call 1550} Tmp_2315 := __HAVOC_malloc(4);
    call {:si_unique_call 1551} Tmp_2316 := __HAVOC_malloc(4);
    call {:si_unique_call 1552} Tmp_2322 := __HAVOC_malloc(4);
    status_71 := 0;
    call {:si_unique_call 1553} irpStack_18 := sdv_IoGetCurrentIrpStackLocation(Irp_24);
    assume {:nonnull} DeviceObject_40 != 0;
    assume DeviceObject_40 > 0;
    havoc pdoExtension_19;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L17;

  L17:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L21;

  L21:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_24))] := status_71;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    call {:si_unique_call 1554} sdv_IoCompleteRequest(0, 0);
    Tmp_2309 := status_71;
    call {:si_unique_call 1555} SLIC_Sbp2CreateClose_exit(strConst__li2bpl2, Tmp_2309);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    call {:si_unique_call 1556} status_71 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_71 >= 0;
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L44;

  L44:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2322;
    assume {:nonnull} Tmp_2322 != 0;
    assume Tmp_2322 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    havoc Tmp_2320;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2312;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_2859;
    call {:si_unique_call 1557} WPP_SF_qd(Tmp_2312, 71, Tmp_2320, pdoExtension_19, vslice_dummy_var_2859);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2316;
    assume {:nonnull} Tmp_2316 != 0;
    assume Tmp_2316 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_2317;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2318;
    call {:si_unique_call 1558} WPP_SF_q(Tmp_2318, 72, Tmp_2317, pdoExtension_19);
    goto L59;

  L59:
    call {:si_unique_call 1559} Tmp_2314 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    call {:si_unique_call 1560} sdv_KeAcquireSpinLock(0, Tmp_2314);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    havoc cIrql_11;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1561} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 1562} vslice_dummy_var_271 := Sbp2ManagementTransaction#1(pdoExtension_19, 7, -1);
    call {:si_unique_call 1563} CleanupOrbList#1(pdoExtension_19, -1073741248);
    goto L31;

  L31:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1564} vslice_dummy_var_270 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_19), 0);
    goto L21;

  anon69_Then:
    goto L59;

  anon84_Then:
    goto L59;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon67_Then:
    goto L31;

  anon65_Then:
    goto L31;

  anon66_Then:
    goto L45;

  anon83_Then:
    goto L45;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon63_Then:
    call {:si_unique_call 1565} Tmp_2314 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1566} vslice_dummy_var_276 := sdv_InterlockedDecrement(Tmp_2314);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto L44;

  anon78_Then:
    goto L31;

  anon62_Then:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2313;
    assume {:nonnull} Tmp_2313 != 0;
    assume Tmp_2313 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    havoc Tmp_2321;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2319;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_2860;
    call {:si_unique_call 1567} WPP_SF_qd(Tmp_2319, 69, Tmp_2321, pdoExtension_19, vslice_dummy_var_2860);
    goto L81;

  L81:
    call {:si_unique_call 1568} Tmp_2314 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    call {:si_unique_call 1569} sdv_KeAcquireSpinLock(0, Tmp_2314);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    havoc cIrql_11;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    call {:si_unique_call 1570} sdv_KeReleaseSpinLock(0, cIrql_11);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2315;
    assume {:nonnull} Tmp_2315 != 0;
    assume Tmp_2315 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_2310;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2311;
    call {:si_unique_call 1571} WPP_SF_q(Tmp_2311, 70, Tmp_2310, pdoExtension_19);
    goto L102;

  L102:
    call {:si_unique_call 1572} status_71 := Sbp2ManagementTransaction#1(pdoExtension_19, 0, -1);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} status_71 == 259;
    assume {:nonnull} waitValue_4 != 0;
    assume waitValue_4 > 0;
    call {:si_unique_call 1573} vslice_dummy_var_273 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_4);
    call {:si_unique_call 1574} Tmp_2314 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    call {:si_unique_call 1575} sdv_KeAcquireSpinLock(0, Tmp_2314);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    havoc cIrql_11;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    status_71 := -1073741823;
    goto L126;

  L126:
    call {:si_unique_call 1576} sdv_KeReleaseSpinLock(0, cIrql_11);
    goto L114;

  L114:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_71 == 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_2861;
    call {:si_unique_call 1577} vslice_dummy_var_272 := Sbp2Reset#1(vslice_dummy_var_2861, 1);
    call {:si_unique_call 1578} Tmp_2314 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    call {:si_unique_call 1579} sdv_KeAcquireSpinLock(0, Tmp_2314);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    havoc cIrql_11;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1580} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 1581} Tmp_2314 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1582} vslice_dummy_var_274 := sdv_InterlockedIncrement(Tmp_2314);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto L31;

  anon76_Then:
    assume {:partition} status_71 != 0;
    goto L31;

  anon77_Then:
    status_71 := 0;
    goto L126;

  anon75_Then:
    assume {:partition} status_71 != 259;
    goto L114;

  anon74_Then:
    goto L102;

  anon82_Then:
    goto L102;

  anon73_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L102;

  anon72_Then:
    call {:si_unique_call 1583} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 1584} Tmp_2314 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1585} vslice_dummy_var_275 := sdv_InterlockedIncrement(Tmp_2314);
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto L31;

  anon71_Then:
    goto L81;

  anon81_Then:
    goto L81;

  anon70_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L81;

  anon61_Then:
    assume {:partition} 0 > status_71;
    goto L21;

  anon58_Then:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto L21;

  anon59_Then:
    goto L17;

  anon79_Then:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    status_71 := -1073741810;
    goto L21;

  anon57_Then:
    goto L21;
}



procedure {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_4: int, actual_cbDest_1: int, actual_pszFormat_2: int) returns (Tmp_2323: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2323 == 0 || Tmp_2323 == 5 || Tmp_2323 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_4: int, actual_cbDest_1: int, actual_pszFormat_2: int) returns (Tmp_2323: int)
{
  var {:scalar} cchDest_4: int;
  var {:pointer} argList_2: int;
  var {:scalar} status_72: int;
  var {:pointer} pszDest_4: int;
  var {:scalar} cbDest_1: int;
  var {:pointer} pszFormat_2: int;
  var vslice_dummy_var_2862: int;

  anon0:
    pszDest_4 := actual_pszDest_4;
    cbDest_1 := actual_cbDest_1;
    call {:si_unique_call 1586} pszFormat_2 := __HAVOC_malloc(4);
    cchDest_4 := INTDIV(cbDest_1, 2);
    call {:si_unique_call 1587} status_72 := RtlStringValidateDestW_sdv_static_function_1(pszDest_4, cchDest_4, -1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_72 >= 0;
    argList_2 := pszFormat_2;
    assume {:nonnull} pszFormat_2 != 0;
    assume pszFormat_2 > 0;
    havoc vslice_dummy_var_2862;
    call {:si_unique_call 1588} status_72 := RtlStringVPrintfWorkerW_sdv_static_function_1(pszDest_4, cchDest_4, 0, vslice_dummy_var_2862, argList_2);
    argList_2 := 0;
    goto L19;

  L19:
    Tmp_2323 := status_72;
    return;

  anon5_Then:
    assume {:partition} 0 > status_72;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_4 > 0;
    assume {:nonnull} pszDest_4 != 0;
    assume pszDest_4 > 0;
    goto L19;

  anon6_Then:
    assume {:partition} 0 >= cchDest_4;
    goto L19;
}



procedure {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension_6: int, actual_DeviceInfo_8: int, actual_InstanceNumber_1: int) returns (Tmp_2325: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_2325 == 0 || Tmp_2325 == -1073741823 || Tmp_2325 == 5 || Tmp_2325 == -1073741811 || Tmp_2325 == -1073741670 || Tmp_2325 == -1073741824 || Tmp_2325 == -1073741771;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension_6: int, actual_DeviceInfo_8: int, actual_InstanceNumber_1: int) returns (Tmp_2325: int)
{
  var {:pointer} Tmp_2326: int;
  var {:scalar} Tmp_2327: int;
  var {:pointer} Tmp_2330: int;
  var {:pointer} Tmp_2331: int;
  var {:pointer} Tmp_2332: int;
  var {:scalar} size_2: int;
  var {:scalar} Tmp_2333: int;
  var {:pointer} symlinkBuffer_1: int;
  var {:pointer} Tmp_2335: int;
  var {:pointer} pdoExtension_20: int;
  var {:scalar} uniDeviceName_2: int;
  var {:pointer} Tmp_2336: int;
  var {:scalar} Tmp_2338: int;
  var {:pointer} Tmp_2339: int;
  var {:scalar} sdv_733: int;
  var {:pointer} Tmp_2340: int;
  var {:pointer} sdv_734: int;
  var {:scalar} Tmp_2342: int;
  var {:scalar} devType_1: int;
  var {:scalar} Tmp_2343: int;
  var {:pointer} sdv_735: int;
  var {:pointer} sdv_736: int;
  var {:scalar} sdv_737: int;
  var {:pointer} Tmp_2347: int;
  var {:scalar} sdv_740: int;
  var {:pointer} Tmp_2349: int;
  var {:scalar} sdv_742: int;
  var {:scalar} sdv_743: int;
  var {:pointer} Tmp_2351: int;
  var {:pointer} Tmp_2354: int;
  var {:pointer} Tmp_2355: int;
  var {:scalar} Tmp_2356: int;
  var {:pointer} Tmp_2357: int;
  var {:scalar} status_73: int;
  var {:pointer} devnameBuffer: int;
  var {:pointer} Tmp_2359: int;
  var {:pointer} Tmp_2360: int;
  var {:pointer} Tmp_2361: int;
  var {:pointer} Tmp_2362: int;
  var {:pointer} Tmp_2363: int;
  var {:pointer} Tmp_2364: int;
  var {:pointer} Tmp_2367: int;
  var {:scalar} sdv_752: int;
  var {:pointer} FdoExtension_6: int;
  var {:pointer} DeviceInfo_8: int;
  var {:scalar} InstanceNumber_1: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_2863: int;

  anon0:
    call {:si_unique_call 1589} uniDeviceName_2 := __HAVOC_malloc(12);
    FdoExtension_6 := actual_FdoExtension_6;
    DeviceInfo_8 := actual_DeviceInfo_8;
    InstanceNumber_1 := actual_InstanceNumber_1;
    call {:si_unique_call 1590} vslice_dummy_var_277 := __HAVOC_malloc(56);
    call {:si_unique_call 1591} vslice_dummy_var_278 := __HAVOC_malloc(44);
    call {:si_unique_call 1592} vslice_dummy_var_279 := __HAVOC_malloc(56);
    call {:si_unique_call 1593} Tmp_2335 := __HAVOC_malloc(272);
    call {:si_unique_call 1594} Tmp_2336 := __HAVOC_malloc(180);
    call {:si_unique_call 1595} vslice_dummy_var_280 := __HAVOC_malloc(36);
    call {:si_unique_call 1596} Tmp_2340 := __HAVOC_malloc(4);
    call {:si_unique_call 1597} vslice_dummy_var_281 := __HAVOC_malloc(32);
    call {:si_unique_call 1598} vslice_dummy_var_282 := __HAVOC_malloc(8);
    call {:si_unique_call 1599} vslice_dummy_var_283 := __HAVOC_malloc(56);
    call {:si_unique_call 1600} vslice_dummy_var_284 := __HAVOC_malloc(44);
    call {:si_unique_call 1601} vslice_dummy_var_285 := __HAVOC_malloc(44);
    call {:si_unique_call 1602} vslice_dummy_var_286 := __HAVOC_malloc(8);
    call {:si_unique_call 1603} vslice_dummy_var_287 := __HAVOC_malloc(8);
    call {:si_unique_call 1604} Tmp_2354 := __HAVOC_malloc(4);
    call {:si_unique_call 1605} Tmp_2357 := __HAVOC_malloc(4);
    call {:si_unique_call 1606} vslice_dummy_var_288 := __HAVOC_malloc(8);
    call {:si_unique_call 1607} Tmp_2361 := __HAVOC_malloc(4);
    call {:si_unique_call 1608} Tmp_2362 := __HAVOC_malloc(188);
    call {:si_unique_call 1609} vslice_dummy_var_289 := __HAVOC_malloc(8);
    call {:si_unique_call 1610} vslice_dummy_var_290 := __HAVOC_malloc(44);
    call {:si_unique_call 1611} vslice_dummy_var_291 := __HAVOC_malloc(32);
    call {:si_unique_call 1612} vslice_dummy_var_292 := __HAVOC_malloc(8);
    devnameBuffer := 0;
    symlinkBuffer_1 := 0;
    call {:si_unique_call 1613} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto L18;

  L18:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    devType_1 := 25;
    goto L24;

  L24:
    size_2 := 2560;
    call {:si_unique_call 1614} sdv_734 := ExAllocatePoolWithTag(512, size_2, -330079661);
    devnameBuffer := sdv_734;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} devnameBuffer != 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2331;
    goto L44;

  L44:
    Tmp_2362 := strConst__li2bpl50;
    call {:si_unique_call 1615} status_73 := RtlStringCbPrintfW(devnameBuffer, size_2, Tmp_2362);
    goto L48;

  L48:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} status_73 >= 0;
    call {:si_unique_call 1616} RtlInitUnicodeString(uniDeviceName_2, devnameBuffer);
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    call {:si_unique_call 1617} status_73 := IoCreateDevice(0, 5256, 0, devType_1, 0, 0, DeviceObject__DEVICE_INFORMATION(DeviceInfo_8));
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} status_73 >= 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2364;
    assume {:nonnull} Tmp_2364 != 0;
    assume Tmp_2364 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2349;
    assume {:nonnull} Tmp_2349 != 0;
    assume Tmp_2349 > 0;
    goto L64;

  L64:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2347;
    assume {:nonnull} Tmp_2347 != 0;
    assume Tmp_2347 > 0;
    havoc pdoExtension_20;
    call {:si_unique_call 1618} sdv_RtlZeroMemory(0, 1160);
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2360;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} Tmp_2360 != 0;
    assume Tmp_2360 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1619} KeInitializeEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_20), 0, 0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1620} KeInitializeEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_20), 0, 0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1621} Tmp_2351 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2351 != 0;
    assume Tmp_2351 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1622} sdv_KeInitializeSpinLock(Tmp_2351);
    assume {:nonnull} Tmp_2351 != 0;
    assume Tmp_2351 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1623} sdv_IoInitializeRemoveLock(0, 846226003, 2, 8192);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1624} Sbp2AllocateLog(pdoExtension_20);
    call {:si_unique_call 1625} Sbp2AddLog(pdoExtension_20, 1, -917616300, pdoExtension_20, 0);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2333;
    call {:si_unique_call 1626} sdv_736 := ExAllocatePoolWithTag(512, Tmp_2333, -498638253);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2357;
    assume {:nonnull} Tmp_2357 != 0;
    assume Tmp_2357 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    havoc Tmp_2332;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2356;
    call {:si_unique_call 1627} WPP_SF_(Tmp_2356, 14, Tmp_2332);
    goto L148;

  L148:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2363;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2326;
    assume {:nonnull} Tmp_2326 != 0;
    assume Tmp_2326 > 0;
    assume {:nonnull} Tmp_2363 != 0;
    assume Tmp_2363 > 0;
    call {:si_unique_call 1628} status_73 := Sbp2PreAllocateLists(pdoExtension_20);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} status_73 >= 0;
    size_2 := 1536;
    call {:si_unique_call 1629} sdv_735 := ExAllocatePoolWithTag(1, size_2, -330079661);
    symlinkBuffer_1 := sdv_735;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} symlinkBuffer_1 != 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    Tmp_2336 := strConst__li2bpl29;
    call {:si_unique_call 1630} status_73 := RtlStringCbPrintfW(symlinkBuffer_1, size_2, Tmp_2336);
    goto L183;

  L183:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} status_73 >= 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1631} RtlInitUnicodeString(UniSymLinkName__DEVICE_EXTENSION(pdoExtension_20), symlinkBuffer_1);
    call {:si_unique_call 1632} status_73 := IoCreateUnprotectedSymbolicLink(0, 0);
    goto L184;

  L184:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} status_73 < 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2354;
    assume {:nonnull} Tmp_2354 != 0;
    assume Tmp_2354 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_2330;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2342;
    call {:si_unique_call 1633} WPP_SF_qD(Tmp_2342, 16, Tmp_2330, pdoExtension_20, status_73);
    goto L227;

  L227:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} symlinkBuffer_1 != 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1634} ExFreePoolWithTag(0, -330079661);
    symlinkBuffer_1 := 0;
    goto L235;

  L235:
    status_73 := 0;
    goto L199;

  L199:
    call {:si_unique_call 1635} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1636} KeInitializeDpc(DeviceManagementTimeoutDpc__DEVICE_EXTENSION(pdoExtension_20), li2bplFunctionConstant375, 0);
    call {:si_unique_call 1637} KeInitializeTimer(0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1638} InitializeListHead(BusResetEntry__DEVICE_EXTENSION(pdoExtension_20));
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1639} Sbp2SqmInsertLunInformation(DeviceInfo_8);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2359;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2339;
    assume {:nonnull} Tmp_2339 != 0;
    assume Tmp_2339 > 0;
    assume {:nonnull} Tmp_2359 != 0;
    assume Tmp_2359 > 0;
    Tmp_2325 := status_73;
    goto L1;

  L1:
    return;

  anon98_Then:
    assume {:partition} symlinkBuffer_1 == 0;
    goto L235;

  anon99_Then:
    goto L227;

  anon122_Then:
    goto L227;

  anon97_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L227;

  anon94_Then:
    assume {:partition} 0 <= status_73;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2361;
    assume {:nonnull} Tmp_2361 != 0;
    assume Tmp_2361 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc Tmp_2355;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2327;
    call {:si_unique_call 1640} WPP_SF_qS(Tmp_2327, 15, Tmp_2355, pdoExtension_20, symlinkBuffer_1);
    goto L199;

  anon96_Then:
    goto L199;

  anon121_Then:
    goto L199;

  anon95_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L199;

  anon93_Then:
    assume {:partition} 0 > status_73;
    goto L184;

  anon120_Then:
    assume {:partition} symlinkBuffer_1 == 0;
    status_73 := -1073741670;
    goto L183;

  anon92_Then:
    assume {:partition} 0 > status_73;
    call {:si_unique_call 1641} IoDeleteDevice(0);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Tmp_2325 := status_73;
    goto L1;

  anon101_Then:
    goto L148;

  anon123_Then:
    goto L148;

  anon100_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon118_Then:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2338;
    call {:si_unique_call 1642} sdv_RtlZeroMemory(0, Tmp_2338);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    goto L114;

  L114:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    goto L118;

  L118:
    call {:si_unique_call 1643} vslice_dummy_var_293 := corral_nondet();
    goto L147;

  L147:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2340;
    assume {:nonnull} Tmp_2340 != 0;
    assume Tmp_2340 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc Tmp_2367;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2343;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc vslice_dummy_var_2863;
    call {:si_unique_call 1644} WPP_SF_qS(Tmp_2343, 13, Tmp_2367, pdoExtension_20, vslice_dummy_var_2863);
    goto L148;

  anon91_Then:
    goto L148;

  anon119_Then:
    goto L148;

  anon90_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon107_Then:
    call {:si_unique_call 1645} vslice_dummy_var_301 := corral_nondet();
    goto L147;

  anon108_Then:
    call {:si_unique_call 1646} vslice_dummy_var_300 := corral_nondet();
    goto L147;

  anon109_Then:
    call {:si_unique_call 1647} vslice_dummy_var_299 := corral_nondet();
    goto L147;

  anon110_Then:
    call {:si_unique_call 1648} vslice_dummy_var_298 := corral_nondet();
    goto L147;

  anon111_Then:
    call {:si_unique_call 1649} vslice_dummy_var_297 := corral_nondet();
    goto L147;

  anon112_Then:
    call {:si_unique_call 1650} vslice_dummy_var_296 := corral_nondet();
    goto L147;

  anon113_Then:
    call {:si_unique_call 1651} vslice_dummy_var_295 := corral_nondet();
    goto L147;

  anon114_Then:
    call {:si_unique_call 1652} vslice_dummy_var_294 := corral_nondet();
    goto L147;

  anon89_Then:
    goto L118;

  anon106_Then:
    call {:si_unique_call 1653} vslice_dummy_var_302 := corral_nondet();
    goto L147;

  anon88_Then:
    goto L114;

  anon117_Then:
    goto L64;

  anon87_Then:
    assume {:partition} 0 > status_73;
    call {:si_unique_call 1654} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    Tmp_2325 := status_73;
    goto L1;

  anon86_Then:
    assume {:partition} 0 > status_73;
    call {:si_unique_call 1655} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    Tmp_2325 := status_73;
    goto L1;

  anon116_Then:
    Tmp_2331 := strConst__li2bpl49;
    goto L44;

  anon85_Then:
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    Tmp_2335 := strConst__li2bpl60;
    call {:si_unique_call 1656} status_73 := RtlStringCbPrintfW(devnameBuffer, size_2, Tmp_2335);
    goto L48;

  anon115_Then:
    assume {:partition} devnameBuffer == 0;
    Tmp_2325 := -1073741670;
    goto L1;

  anon103_Then:
    goto L19;

  L19:
    devType_1 := 45;
    goto L24;

  anon104_Then:
    goto L19;

  anon105_Then:
    devType_1 := 24;
    goto L24;

  anon84_Then:
    goto L19;

  anon102_Then:
    devType_1 := 34;
    goto L24;

  anon83_Then:
    goto L18;
}



procedure {:origName "DriverEntry"} DriverEntry(actual_DriverObject_3: int, actual_RegistryPath: int) returns (Tmp_2370: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2370 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "DriverEntry"} DriverEntry(actual_DriverObject_3: int, actual_RegistryPath: int) returns (Tmp_2370: int)
{
  var {:pointer} Tmp_2371: int;
  var {:pointer} Tmp_2373: int;
  var {:pointer} Tmp_2374: int;
  var {:pointer} Tmp_2375: int;
  var {:pointer} Tmp_2376: int;
  var {:pointer} Tmp_2377: int;
  var {:pointer} Tmp_2378: int;
  var {:pointer} Tmp_2379: int;
  var {:pointer} Tmp_2380: int;
  var {:pointer} DriverObject_3: int;
  var vslice_dummy_var_303: int;

  anon0:
    DriverObject_3 := actual_DriverObject_3;
    call {:si_unique_call 1657} Tmp_2371 := __HAVOC_malloc(112);
    call {:si_unique_call 1658} Tmp_2373 := __HAVOC_malloc(112);
    call {:si_unique_call 1659} Tmp_2374 := __HAVOC_malloc(112);
    call {:si_unique_call 1660} Tmp_2375 := __HAVOC_malloc(112);
    call {:si_unique_call 1661} Tmp_2376 := __HAVOC_malloc(112);
    call {:si_unique_call 1662} Tmp_2377 := __HAVOC_malloc(112);
    call {:si_unique_call 1663} Tmp_2378 := __HAVOC_malloc(112);
    call {:si_unique_call 1664} Tmp_2380 := __HAVOC_malloc(112);
    call {:si_unique_call 1665} sdv_do_paged_code_check();
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_2380;
    assume {:nonnull} Tmp_2380 != 0;
    assume Tmp_2380 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_2374;
    assume {:nonnull} Tmp_2374 != 0;
    assume Tmp_2374 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_2375;
    assume {:nonnull} Tmp_2375 != 0;
    assume Tmp_2375 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_2373;
    assume {:nonnull} Tmp_2373 != 0;
    assume Tmp_2373 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_2371;
    assume {:nonnull} Tmp_2371 != 0;
    assume Tmp_2371 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_2376;
    assume {:nonnull} Tmp_2376 != 0;
    assume Tmp_2376 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_2378;
    assume {:nonnull} Tmp_2378 != 0;
    assume Tmp_2378 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_2377;
    assume {:nonnull} Tmp_2377 != 0;
    assume Tmp_2377 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    havoc Tmp_2379;
    assume {:nonnull} Tmp_2379 != 0;
    assume Tmp_2379 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    assume {:nonnull} DriverObject_3 != 0;
    assume DriverObject_3 > 0;
    call {:si_unique_call 1666} vslice_dummy_var_303 := Sbp2SqmStart();
    Tmp_2370 := 0;
    return;
}



procedure {:origName "RtlStringVPrintfWorkerA_sdv_static_function_1"} RtlStringVPrintfWorkerA_sdv_static_function_1(actual_pszDest_5: int, actual_cchDest_5: int, actual_pcchNewDestLength_1: int, actual_pszFormat_3: int, actual_argList_3: int) returns (Tmp_2381: int);
  free ensures {:va_keep} Tmp_2381 == 0 || Tmp_2381 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlStringVPrintfWorkerA_sdv_static_function_1"} RtlStringVPrintfWorkerA_sdv_static_function_1(actual_pszDest_5: int, actual_cchDest_5: int, actual_pcchNewDestLength_1: int, actual_pszFormat_3: int, actual_argList_3: int) returns (Tmp_2381: int)
{
  var {:scalar} cchNewDestLength_1: int;
  var {:scalar} iRet_1: int;
  var {:scalar} cchMax_3: int;
  var {:scalar} status_74: int;
  var {:pointer} pszDest_5: int;
  var {:scalar} cchDest_5: int;
  var {:pointer} pcchNewDestLength_1: int;

  anon0:
    pszDest_5 := actual_pszDest_5;
    cchDest_5 := actual_cchDest_5;
    pcchNewDestLength_1 := actual_pcchNewDestLength_1;
    status_74 := 0;
    cchNewDestLength_1 := 0;
    cchMax_3 := cchDest_5 - 1;
    call {:si_unique_call 1667} iRet_1 := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet_1;
    goto L16;

  L16:
    assume {:nonnull} pszDest_5 != 0;
    assume pszDest_5 > 0;
    cchNewDestLength_1 := cchMax_3;
    status_74 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength_1 != 0;
    assume {:nonnull} pcchNewDestLength_1 != 0;
    assume pcchNewDestLength_1 > 0;
    goto L21;

  L21:
    Tmp_2381 := status_74;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength_1 == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet_1 >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet_1 <= cchMax_3;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet_1 == cchMax_3;
    assume {:nonnull} pszDest_5 != 0;
    assume pszDest_5 > 0;
    cchNewDestLength_1 := cchMax_3;
    goto L20;

  anon12_Then:
    assume {:partition} iRet_1 != cchMax_3;
    cchNewDestLength_1 := iRet_1;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax_3 < iRet_1;
    goto L16;
}



procedure {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_9: int, actual_uniInstanceId: int) returns (Tmp_2383: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2383 == -1073741670 || Tmp_2383 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_9: int, actual_uniInstanceId: int) returns (Tmp_2383: int)
{
  var {:pointer} Tmp_2384: int;
  var {:scalar} Tmp_2385: int;
  var {:pointer} Tmp_2386: int;
  var {:pointer} sdv_755: int;
  var {:scalar} Tmp_2387: int;
  var {:pointer} Tmp_2388: int;
  var {:scalar} sdv_756: int;
  var {:scalar} Tmp_2389: int;
  var {:pointer} Tmp_2390: int;
  var {:scalar} sdv_757: int;
  var {:pointer} Tmp_2391: int;
  var {:scalar} Tmp_2392: int;
  var {:scalar} status_75: int;
  var {:pointer} DeviceInfo_9: int;
  var {:pointer} uniInstanceId: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_2864: int;

  anon0:
    DeviceInfo_9 := actual_DeviceInfo_9;
    uniInstanceId := actual_uniInstanceId;
    call {:si_unique_call 1668} Tmp_2388 := __HAVOC_malloc(4);
    call {:si_unique_call 1669} Tmp_2390 := __HAVOC_malloc(36);
    call {:si_unique_call 1670} vslice_dummy_var_304 := __HAVOC_malloc(8);
    call {:si_unique_call 1671} vslice_dummy_var_305 := __HAVOC_malloc(8);
    status_75 := 0;
    call {:si_unique_call 1672} sdv_do_paged_code_check();
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2392;
    call {:si_unique_call 1673} sdv_755 := ExAllocatePoolWithTag(1, Tmp_2392, 846226003);
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2388;
    assume {:nonnull} Tmp_2388 != 0;
    assume Tmp_2388 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_2386;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2385;
    call {:si_unique_call 1674} WPP_SF_(Tmp_2385, 107, Tmp_2386);
    goto L37;

  L37:
    status_75 := -1073741670;
    goto L35;

  L35:
    Tmp_2383 := status_75;
    return;

  anon10_Then:
    goto L37;

  anon12_Then:
    goto L37;

  anon9_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L37;

  anon11_Then:
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2389;
    call {:si_unique_call 1675} sdv_RtlZeroMemory(0, Tmp_2389);
    assume {:nonnull} DeviceInfo_9 != 0;
    assume DeviceInfo_9 > 0;
    havoc Tmp_2384;
    assume {:nonnull} Tmp_2384 != 0;
    assume Tmp_2384 > 0;
    assume {:nonnull} DeviceInfo_9 != 0;
    assume DeviceInfo_9 > 0;
    havoc Tmp_2391;
    assume {:nonnull} Tmp_2391 != 0;
    assume Tmp_2391 > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2387;
    Tmp_2390 := strConst__li2bpl28;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc vslice_dummy_var_2864;
    call {:si_unique_call 1676} vslice_dummy_var_306 := RtlStringCbPrintfW(vslice_dummy_var_2864, Tmp_2387, Tmp_2390);
    goto L35;
}



procedure {:origName "_InlineInterlockedExchangePointer"} _InlineInterlockedExchangePointer(actual_Destination_3: int, actual_Value_1: int) returns (Tmp_2396: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_InlineInterlockedExchangePointer"} _InlineInterlockedExchangePointer(actual_Destination_3: int, actual_Value_1: int) returns (Tmp_2396: int)
{
  var {:scalar} sdv_759: int;

  anon0:
    Tmp_2396 := sdv_759;
    return;
}



procedure {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_PdoExtension_24: int) returns (Tmp_2398: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_2398 == 0 || Tmp_2398 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_PdoExtension_24: int) returns (Tmp_2398: int)
{
  var {:pointer} Tmp_2399: int;
  var {:pointer} Tmp_2400: int;
  var {:scalar} cnt: int;
  var {:pointer} Tmp_2401: int;
  var {:pointer} sdv_762: int;
  var {:pointer} context_3: int;
  var {:pointer} Tmp_2402: int;
  var {:pointer} Tmp_2403: int;
  var {:pointer} Tmp_2404: int;
  var {:pointer} sdv_763: int;
  var {:pointer} Tmp_2405: int;
  var {:pointer} Tmp_2406: int;
  var {:pointer} Tmp_2407: int;
  var {:pointer} sdv_764: int;
  var {:pointer} sdv_766: int;
  var {:pointer} Tmp_2408: int;
  var {:pointer} Tmp_2409: int;
  var {:pointer} sdv_767: int;
  var {:pointer} Tmp_2411: int;
  var {:pointer} Tmp_2412: int;
  var {:pointer} Tmp_2413: int;
  var {:pointer} statusFifoElement_1: int;
  var {:pointer} Tmp_2414: int;
  var {:pointer} Tmp_2415: int;
  var {:pointer} packet_15: int;
  var {:scalar} status_76: int;
  var {:pointer} Tmp_2416: int;
  var {:pointer} Tmp_2417: int;
  var {:pointer} Tmp_2418: int;
  var {:pointer} Tmp_2419: int;
  var {:pointer} PdoExtension_24: int;
  var boogieTmp: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_2865: int;
  var vslice_dummy_var_2866: int;

  anon0:
    call {:si_unique_call 1677} packet_15 := __HAVOC_malloc(4);
    PdoExtension_24 := actual_PdoExtension_24;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1678} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(PdoExtension_24));
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1679} InitializeSListHead(FreeContextListHead__DEVICE_EXTENSION(PdoExtension_24));
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1680} InitializeSListHead(BusRequestIrpIrbListHead__DEVICE_EXTENSION(PdoExtension_24));
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1681} InitializeSListHead(StatusFifoListHead__DEVICE_EXTENSION(PdoExtension_24));
    call {:si_unique_call 1682} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 32, 846226003, 0);
    call {:si_unique_call 1683} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    call {:si_unique_call 1684} sdv_KeInitializeSpinLock(Tmp_2403);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    call {:si_unique_call 1685} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    call {:si_unique_call 1686} sdv_KeInitializeSpinLock(Tmp_2403);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    call {:si_unique_call 1687} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    call {:si_unique_call 1688} sdv_KeInitializeSpinLock(Tmp_2403);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    call {:si_unique_call 1689} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    call {:si_unique_call 1690} sdv_KeInitializeSpinLock(Tmp_2403);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    call {:si_unique_call 1691} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    call {:si_unique_call 1692} sdv_KeInitializeSpinLock(Tmp_2403);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cnt := 0;
    goto L41;

  L41:
    call {:si_unique_call 1693} cnt, sdv_762, sdv_766, Tmp_2408, boogieTmp, vslice_dummy_var_307 := Sbp2PreAllocateLists_loop_L41(cnt, sdv_762, sdv_766, Tmp_2408, packet_15, PdoExtension_24, boogieTmp, vslice_dummy_var_307);
    goto L41_last;

  L41_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} 8 > cnt;
    call {:si_unique_call 1694} sdv_762 := ExAllocatePoolWithTag(512, 24, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    Mem_T.P_IRBIRP[packet_15] := sdv_762;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_15] == 0;
    goto L74;

  L74:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc vslice_dummy_var_2865;
    call {:si_unique_call 1695} vslice_dummy_var_309 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_2865, 1, 0);
    Tmp_2398 := -1073741670;
    goto L1;

  L1:
    return;

  anon33_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_15] != 0;
    call {:si_unique_call 1696} sdv_766 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc Tmp_2408;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} Tmp_2408 != 0;
    assume Tmp_2408 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_2866;
    call {:si_unique_call 1697} boogieTmp := IoAllocateIrp(vslice_dummy_var_2866, 0);
    Mem_T.Irp__IRBIRP[Irp__IRBIRP(Mem_T.P_IRBIRP[packet_15])] := boogieTmp;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.Irp__IRBIRP[Irp__IRBIRP(Mem_T.P_IRBIRP[packet_15])] != 0;
    call {:si_unique_call 1698} vslice_dummy_var_307 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon26_Else_dummy;

  anon26_Else_dummy:
    assume false;
    return;

  anon26_Then:
    assume {:partition} Mem_T.Irp__IRBIRP[Irp__IRBIRP(Mem_T.P_IRBIRP[packet_15])] == 0;
    call {:si_unique_call 1699} sdv_ExFreePool(0);
    call {:si_unique_call 1700} ExFreePoolWithTag(0, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    Mem_T.P_IRBIRP[packet_15] := 0;
    goto L74;

  anon34_Then:
    call {:si_unique_call 1701} ExFreePoolWithTag(0, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    Mem_T.P_IRBIRP[packet_15] := 0;
    goto L74;

  anon25_Then:
    assume {:partition} cnt >= 8;
    cnt := 640;
    call {:si_unique_call 1702} sdv_763 := ExAllocatePoolWithTag(512, cnt, -430742957);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    cnt := 0;
    goto L88;

  L88:
    call {:si_unique_call 1703} cnt, statusFifoElement_1, boogieTmp, vslice_dummy_var_308 := Sbp2PreAllocateLists_loop_L88(cnt, statusFifoElement_1, PdoExtension_24, boogieTmp, vslice_dummy_var_308);
    goto L88_last;

  L88_last:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} 15 > cnt;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc statusFifoElement_1;
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    call {:si_unique_call 1704} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 1705} vslice_dummy_var_308 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    assume false;
    return;

  anon28_Then:
    goto L74;

  anon27_Then:
    assume {:partition} cnt >= 15;
    cnt := 1600;
    call {:si_unique_call 1706} sdv_764 := ExAllocatePoolWithTag(512, cnt, -499031469);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 1707} sdv_RtlZeroMemory(0, cnt);
    call {:si_unique_call 1708} AllocateIrpAndIrb(PdoExtension_24, packet_15);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_15] != 0;
    cnt := 0;
    goto L120;

  L120:
    call {:si_unique_call 1709} Tmp_2399, Tmp_2400, cnt, Tmp_2401, context_3, Tmp_2402, Tmp_2404, Tmp_2405, Tmp_2406, Tmp_2407, Tmp_2409, sdv_767, Tmp_2411, Tmp_2412, Tmp_2413, Tmp_2414, Tmp_2415, status_76, Tmp_2416, Tmp_2417, Tmp_2418, Tmp_2419, vslice_dummy_var_310 := Sbp2PreAllocateLists_loop_L120(Tmp_2399, Tmp_2400, cnt, Tmp_2401, context_3, Tmp_2402, Tmp_2404, Tmp_2405, Tmp_2406, Tmp_2407, Tmp_2409, sdv_767, Tmp_2411, Tmp_2412, Tmp_2413, Tmp_2414, Tmp_2415, packet_15, status_76, Tmp_2416, Tmp_2417, Tmp_2418, Tmp_2419, PdoExtension_24, vslice_dummy_var_310);
    goto L120_last;

  L120_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 8 > cnt;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc context_3;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 1710} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(context_3), li2bplFunctionConstant378, 0);
    call {:si_unique_call 1711} KeInitializeTimer(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2418;
    assume {:nonnull} Tmp_2418 != 0;
    assume Tmp_2418 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2405;
    assume {:nonnull} Tmp_2405 != 0;
    assume Tmp_2405 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2411;
    assume {:nonnull} Tmp_2411 != 0;
    assume Tmp_2411 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2401;
    assume {:nonnull} Tmp_2401 != 0;
    assume Tmp_2401 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2402;
    assume {:nonnull} Tmp_2402 != 0;
    assume Tmp_2402 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2413;
    assume {:nonnull} Tmp_2413 != 0;
    assume Tmp_2413 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2406;
    assume {:nonnull} Tmp_2406 != 0;
    assume Tmp_2406 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2400;
    assume {:nonnull} Tmp_2400 != 0;
    assume Tmp_2400 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2404;
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2407;
    assume {:nonnull} Tmp_2407 != 0;
    assume Tmp_2407 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2414;
    assume {:nonnull} Tmp_2414 != 0;
    assume Tmp_2414 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2412;
    assume {:nonnull} Tmp_2412 != 0;
    assume Tmp_2412 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2416;
    assume {:nonnull} Tmp_2416 != 0;
    assume Tmp_2416 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2417;
    assume {:nonnull} Tmp_2417 != 0;
    assume Tmp_2417 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2409;
    assume {:nonnull} Tmp_2409 != 0;
    assume Tmp_2409 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2419;
    assume {:nonnull} Tmp_2419 != 0;
    assume Tmp_2419 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    call {:si_unique_call 1712} status_76 := Sbp2SendRequest#1(PdoExtension_24, Mem_T.P_IRBIRP[packet_15], 2);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_76 >= 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2415;
    assume {:nonnull} Tmp_2415 != 0;
    assume Tmp_2415 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    call {:si_unique_call 1713} sdv_767 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2399;
    assume {:nonnull} Tmp_2399 != 0;
    assume Tmp_2399 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 1714} vslice_dummy_var_310 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    assume false;
    return;

  anon31_Then:
    assume {:partition} 0 > status_76;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    call {:si_unique_call 1715} DeAllocateIrpAndIrb(PdoExtension_24, Mem_T.P_IRBIRP[packet_15]);
    goto L74;

  anon30_Then:
    assume {:partition} cnt >= 8;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    call {:si_unique_call 1716} DeAllocateIrpAndIrb(PdoExtension_24, Mem_T.P_IRBIRP[packet_15]);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1717} boogieTmp := IoAllocateMdl(0, 4, 0, 0, 0);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_2398 := 0;
    goto L1;

  anon32_Then:
    goto L74;

  anon29_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_15] == 0;
    goto L74;

  anon36_Then:
    goto L74;

  anon35_Then:
    goto L74;
}



procedure {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int)
{
  var vslice_dummy_var_311: int;

  anon0:
    call {:si_unique_call 1718} vslice_dummy_var_311 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "WPP_SF_qq"} WPP_SF_qq(actual_Logger_31: int, actual_id_31: int, actual_TraceGuid_31: int, actual_s_p_e_c_i_a_l_108: int, actual_s_p_e_c_i_a_l_109: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qq"} WPP_SF_qq(actual_Logger_31: int, actual_id_31: int, actual_TraceGuid_31: int, actual_s_p_e_c_i_a_l_108: int, actual_s_p_e_c_i_a_l_109: int)
{
  var {:pointer} TraceGuid_31: int;
  var vslice_dummy_var_312: int;

  anon0:
    call {:si_unique_call 1719} vslice_dummy_var_312 := __HAVOC_malloc(4);
    TraceGuid_31 := actual_TraceGuid_31;
    return;
}



procedure {:origName "WPP_SF_qdSdd"} WPP_SF_qdSdd(actual_Logger_32: int, actual_id_32: int, actual_TraceGuid_32: int, actual_s_p_e_c_i_a_l_110: int, actual_s_p_e_c_i_a_l_111: int, actual_s_p_e_c_i_a_l_112: int, actual_s_p_e_c_i_a_l_113: int, actual_s_p_e_c_i_a_l_114: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qdSdd"} WPP_SF_qdSdd(actual_Logger_32: int, actual_id_32: int, actual_TraceGuid_32: int, actual_s_p_e_c_i_a_l_110: int, actual_s_p_e_c_i_a_l_111: int, actual_s_p_e_c_i_a_l_112: int, actual_s_p_e_c_i_a_l_113: int, actual_s_p_e_c_i_a_l_114: int)
{
  var {:pointer} Tmp_2425: int;
  var {:scalar} Tmp_2428: int;
  var {:scalar} sdv_775: int;
  var {:pointer} TraceGuid_32: int;
  var {:pointer} s_p_e_c_i_a_l_112: int;
  var vslice_dummy_var_313: int;

  anon0:
    call {:si_unique_call 1720} vslice_dummy_var_313 := __HAVOC_malloc(4);
    TraceGuid_32 := actual_TraceGuid_32;
    s_p_e_c_i_a_l_112 := actual_s_p_e_c_i_a_l_112;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_112 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_112 != 0;
    assume s_p_e_c_i_a_l_112 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2428 := (sdv_775 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_112 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_112 != 0;
    assume s_p_e_c_i_a_l_112 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2425 := s_p_e_c_i_a_l_112;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2425 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_112 == 0;
    goto L18;

  anon10_Then:
    Tmp_2428 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_112 == 0;
    goto L12;
}



procedure {:origName "GET_LUN"} GET_LUN(actual_PdoExtension_25: int) returns (Tmp_2432: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "GET_LUN"} GET_LUN(actual_PdoExtension_25: int) returns (Tmp_2432: int)
{
  var {:pointer} Tmp_2433: int;
  var {:pointer} PdoExtension_25: int;

  anon0:
    PdoExtension_25 := actual_PdoExtension_25;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    havoc Tmp_2433;
    assume {:nonnull} Tmp_2433 != 0;
    assume Tmp_2433 > 0;
    havoc Tmp_2432;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_2432 := 0;
    goto L1;
}



procedure {:origName "WPP_SF_qSDD"} WPP_SF_qSDD(actual_Logger_33: int, actual_id_33: int, actual_TraceGuid_33: int, actual_s_p_e_c_i_a_l_115: int, actual_s_p_e_c_i_a_l_116: int, actual_s_p_e_c_i_a_l_117: int, actual_s_p_e_c_i_a_l_118: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qSDD"} WPP_SF_qSDD(actual_Logger_33: int, actual_id_33: int, actual_TraceGuid_33: int, actual_s_p_e_c_i_a_l_115: int, actual_s_p_e_c_i_a_l_116: int, actual_s_p_e_c_i_a_l_117: int, actual_s_p_e_c_i_a_l_118: int)
{
  var {:scalar} Tmp_2436: int;
  var {:scalar} sdv_777: int;
  var {:pointer} Tmp_2439: int;
  var {:pointer} TraceGuid_33: int;
  var {:pointer} s_p_e_c_i_a_l_116: int;
  var vslice_dummy_var_314: int;

  anon0:
    call {:si_unique_call 1721} vslice_dummy_var_314 := __HAVOC_malloc(4);
    TraceGuid_33 := actual_TraceGuid_33;
    s_p_e_c_i_a_l_116 := actual_s_p_e_c_i_a_l_116;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_116 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_116 != 0;
    assume s_p_e_c_i_a_l_116 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2436 := (sdv_777 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_116 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_116 != 0;
    assume s_p_e_c_i_a_l_116 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2439 := s_p_e_c_i_a_l_116;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2439 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_116 == 0;
    goto L18;

  anon10_Then:
    Tmp_2436 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_116 == 0;
    goto L12;
}



procedure {:origName "Sbp2Unload"} Sbp2Unload(actual_DriverObject_4: int);
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2Unload"} Sbp2Unload(actual_DriverObject_4: int)
{
  var {:pointer} Tmp_2461: int;
  var {:pointer} Tmp_2462: int;
  var {:scalar} Tmp_2463: int;
  var {:pointer} DriverObject_4: int;
  var vslice_dummy_var_315: int;

  anon0:
    call {:si_unique_call 1722} vslice_dummy_var_315 := __HAVOC_malloc(4);
    DriverObject_4 := actual_DriverObject_4;
    call {:si_unique_call 1723} Tmp_2462 := __HAVOC_malloc(4);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2462;
    assume {:nonnull} Tmp_2462 != 0;
    assume Tmp_2462 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    havoc Tmp_2461;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2463;
    call {:si_unique_call 1724} WPP_SF_(Tmp_2463, 41, Tmp_2461);
    goto L7;

  L7:
    call {:si_unique_call 1725} WppCleanupKm(DriverObject_4);
    call {:si_unique_call 1726} Sbp2SqmEnd();
    return;

  anon8_Then:
    goto L7;

  anon9_Then:
    goto L7;

  anon7_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L7;
}



procedure {:origName "RtlFailFast"} RtlFailFast(actual_Code: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlFailFast"} RtlFailFast(actual_Code: int)
{
  var vslice_dummy_var_316: int;

  anon0:
    call {:si_unique_call 1727} vslice_dummy_var_316 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "GET_DEVICE_NAME"} GET_DEVICE_NAME(actual_PdoExtension_27: int) returns (Tmp_2478: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "GET_DEVICE_NAME"} GET_DEVICE_NAME(actual_PdoExtension_27: int) returns (Tmp_2478: int)
{
  var {:pointer} Tmp_2480: int;
  var {:pointer} Tmp_2481: int;
  var {:pointer} PdoExtension_27: int;

  anon0:
    PdoExtension_27 := actual_PdoExtension_27;
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    havoc Tmp_2481;
    assume {:nonnull} Tmp_2481 != 0;
    assume Tmp_2481 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    havoc Tmp_2480;
    assume {:nonnull} Tmp_2480 != 0;
    assume Tmp_2480 > 0;
    havoc Tmp_2478;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto L4;

  L4:
    Tmp_2478 := strConst__li2bpl61;
    goto L1;

  anon5_Then:
    goto L4;
}



procedure {:origName "WPP_SF_qDD"} WPP_SF_qDD(actual_Logger_34: int, actual_id_34: int, actual_TraceGuid_34: int, actual_s_p_e_c_i_a_l_119: int, actual_s_p_e_c_i_a_l_120: int, actual_s_p_e_c_i_a_l_121: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qDD"} WPP_SF_qDD(actual_Logger_34: int, actual_id_34: int, actual_TraceGuid_34: int, actual_s_p_e_c_i_a_l_119: int, actual_s_p_e_c_i_a_l_120: int, actual_s_p_e_c_i_a_l_121: int)
{
  var {:pointer} TraceGuid_34: int;
  var vslice_dummy_var_317: int;

  anon0:
    call {:si_unique_call 1728} vslice_dummy_var_317 := __HAVOC_malloc(4);
    TraceGuid_34 := actual_TraceGuid_34;
    return;
}



procedure {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_8: int, actual_DeviceRelations: int) returns (Tmp_2485: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_8: int, actual_DeviceRelations: int) returns (Tmp_2485: int)
{
  var {:scalar} i_8: int;
  var {:scalar} Tmp_2486: int;
  var {:pointer} Tmp_2487: int;
  var {:scalar} Tmp_2488: int;
  var {:scalar} Tmp_2489: int;
  var {:scalar} Tmp_2490: int;
  var {:scalar} subStatus: int;
  var {:pointer} Tmp_2492: int;
  var {:pointer} pdoExtension_21: int;
  var {:pointer} workItem_1: int;
  var {:scalar} Status_2: int;
  var {:scalar} Tmp_2494: int;
  var {:scalar} Tmp_2495: int;
  var {:pointer} Tmp_2496: int;
  var {:pointer} Tmp_2497: int;
  var {:pointer} Tmp_2498: int;
  var {:scalar} Tmp_2499: int;
  var {:pointer} Tmp_2500: int;
  var {:pointer} Tmp_2501: int;
  var {:pointer} Tmp_2502: int;
  var {:scalar} Tmp_2503: int;
  var {:pointer} PdoExtension_28: int;
  var {:scalar} Tmp_2504: int;
  var {:pointer} Tmp_2505: int;
  var {:pointer} Tmp_2506: int;
  var {:scalar} Tmp_2507: int;
  var {:scalar} Tmp_2508: int;
  var {:pointer} Tmp_2509: int;
  var {:pointer} Tmp_2510: int;
  var {:pointer} Tmp_2512: int;
  var {:pointer} Tmp_2513: int;
  var {:pointer} Tmp_2514: int;
  var {:pointer} Tmp_2515: int;
  var {:scalar} Tmp_2516: int;
  var {:pointer} Tmp_2517: int;
  var {:scalar} status_78: int;
  var {:scalar} instanceNum: int;
  var {:pointer} Tmp_2518: int;
  var {:scalar} Tmp_2519: int;
  var {:scalar} Tmp_2520: int;
  var {:scalar} OrgLUNCount: int;
  var {:scalar} Tmp_2521: int;
  var {:scalar} Tmp_2522: int;
  var {:pointer} Tmp_2523: int;
  var {:pointer} Tmp_2524: int;
  var {:pointer} FdoExtension_8: int;
  var {:pointer} DeviceRelations: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;

  anon0:
    FdoExtension_8 := actual_FdoExtension_8;
    DeviceRelations := actual_DeviceRelations;
    call {:si_unique_call 1729} Tmp_2487 := __HAVOC_malloc(2680);
    call {:si_unique_call 1730} Tmp_2492 := __HAVOC_malloc(4);
    call {:si_unique_call 1731} Tmp_2498 := __HAVOC_malloc(2680);
    call {:si_unique_call 1732} Tmp_2501 := __HAVOC_malloc(4);
    call {:si_unique_call 1733} Tmp_2502 := __HAVOC_malloc(2680);
    call {:si_unique_call 1734} Tmp_2505 := __HAVOC_malloc(2680);
    call {:si_unique_call 1735} Tmp_2506 := __HAVOC_malloc(2680);
    call {:si_unique_call 1736} Tmp_2509 := __HAVOC_malloc(2680);
    call {:si_unique_call 1737} Tmp_2510 := __HAVOC_malloc(2680);
    call {:si_unique_call 1738} Tmp_2512 := __HAVOC_malloc(2680);
    call {:si_unique_call 1739} Tmp_2515 := __HAVOC_malloc(2680);
    call {:si_unique_call 1740} Tmp_2517 := __HAVOC_malloc(4);
    call {:si_unique_call 1741} Tmp_2518 := __HAVOC_malloc(2680);
    call {:si_unique_call 1742} Tmp_2523 := __HAVOC_malloc(2680);
    call {:si_unique_call 1743} Tmp_2524 := __HAVOC_malloc(2680);
    status_78 := 0;
    instanceNum := 0;
    OrgLUNCount := 0;
    PdoExtension_28 := 0;
    call {:si_unique_call 1744} sdv_do_paged_code_check();
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc OrgLUNCount;
    call {:si_unique_call 1745} status_78 := Sbp2Get1394ConfigInfo(FdoExtension_8, 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_78 >= 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    status_78 := -1073741823;
    goto L27;

  L27:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2523;
    assume {:nonnull} Tmp_2523 != 0;
    assume Tmp_2523 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2505;
    assume {:nonnull} Tmp_2505 != 0;
    assume Tmp_2505 > 0;
    havoc Tmp_2496;
    assume {:nonnull} Tmp_2496 != 0;
    assume Tmp_2496 > 0;
    havoc PdoExtension_28;
    goto L28;

  L28:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} PdoExtension_28 != 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2524;
    assume {:nonnull} Tmp_2524 != 0;
    assume Tmp_2524 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    i_8 := 0;
    goto L35;

  L35:
    call {:si_unique_call 1746} i_8, Tmp_2507, Tmp_2512 := Sbp2CreateDeviceRelations_loop_L35(i_8, Tmp_2507, Tmp_2512, OrgLUNCount, FdoExtension_8);
    goto L35_last;

  L35_last:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} OrgLUNCount > i_8;
    Tmp_2507 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2512;
    assume {:nonnull} Tmp_2512 != 0;
    assume Tmp_2512 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    i_8 := i_8 + 1;
    goto anon53_Else_dummy;

  anon53_Else_dummy:
    assume false;
    return;

  anon53_Then:
    goto L36;

  L36:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} status_78 < 0;
    call {:si_unique_call 1747} Status_2 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Status_2 >= 0;
    call {:si_unique_call 1748} workItem_1 := IoAllocateWorkItem(0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} workItem_1 != 0;
    call {:si_unique_call 1749} IoQueueWorkItem(0, li2bplFunctionConstant389, 0, 0);
    goto L30;

  L30:
    Tmp_2485 := status_78;
    goto L1;

  L1:
    return;

  anon44_Then:
    assume {:partition} workItem_1 == 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    call {:si_unique_call 1750} vslice_dummy_var_318 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(FdoExtension_8), 0);
    goto L30;

  anon43_Then:
    assume {:partition} 0 > Status_2;
    goto L30;

  anon54_Then:
    assume {:partition} 0 <= status_78;
    goto L30;

  anon42_Then:
    assume {:partition} i_8 >= OrgLUNCount;
    goto L36;

  anon52_Then:
    goto L30;

  anon41_Then:
    assume {:partition} PdoExtension_28 == 0;
    goto L30;

  anon51_Then:
    goto L28;

  anon40_Then:
    status_78 := 0;
    i_8 := 0;
    goto L58;

  L58:
    call {:si_unique_call 1751} i_8, Tmp_2486, Tmp_2487, Tmp_2488, Tmp_2489, Tmp_2490, subStatus, Tmp_2492, pdoExtension_21, Tmp_2494, Tmp_2495, Tmp_2497, Tmp_2498, Tmp_2499, Tmp_2500, Tmp_2502, Tmp_2503, Tmp_2504, Tmp_2506, Tmp_2508, Tmp_2509, Tmp_2510, Tmp_2514, Tmp_2515, Tmp_2516, Tmp_2517, status_78, instanceNum, Tmp_2518, Tmp_2520, Tmp_2521, Tmp_2522, vslice_dummy_var_319, vslice_dummy_var_320 := Sbp2CreateDeviceRelations_loop_L58(i_8, Tmp_2486, Tmp_2487, Tmp_2488, Tmp_2489, Tmp_2490, subStatus, Tmp_2492, pdoExtension_21, Tmp_2494, Tmp_2495, Tmp_2497, Tmp_2498, Tmp_2499, Tmp_2500, Tmp_2502, Tmp_2503, Tmp_2504, Tmp_2506, Tmp_2508, Tmp_2509, Tmp_2510, Tmp_2514, Tmp_2515, Tmp_2516, Tmp_2517, status_78, instanceNum, Tmp_2518, Tmp_2520, Tmp_2521, Tmp_2522, FdoExtension_8, DeviceRelations, vslice_dummy_var_319, vslice_dummy_var_320);
    goto L58_last;

  L58_last:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    Tmp_2521 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2506;
    assume {:nonnull} Tmp_2506 != 0;
    assume Tmp_2506 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    subStatus := 0;
    Tmp_2490 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2498;
    assume {:nonnull} Tmp_2498 != 0;
    assume Tmp_2498 > 0;
    havoc Tmp_2497;
    assume {:nonnull} Tmp_2497 != 0;
    assume Tmp_2497 > 0;
    havoc pdoExtension_21;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    Tmp_2508 := instanceNum;
    instanceNum := instanceNum + 1;
    Tmp_2495 := Tmp_2508;
    Tmp_2516 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2515;
    Tmp_2500 := Tmp_2515 + Tmp_2516 * 268;
    call {:si_unique_call 1752} subStatus := Sbp2ReInitializePdo(FdoExtension_8, Tmp_2500, Tmp_2495);
    goto L66;

  L66:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} subStatus >= 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2522;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2517;
    Tmp_2489 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2510;
    assume {:nonnull} Tmp_2510 != 0;
    assume Tmp_2510 > 0;
    assume {:nonnull} Tmp_2517 != 0;
    assume Tmp_2517 > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_2520 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2487;
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    call {:si_unique_call 1753} vslice_dummy_var_319 := sdv_ObReferenceObject(0);
    goto L73;

  L73:
    i_8 := i_8 + 1;
    goto L73_dummy;

  L73_dummy:
    assume false;
    return;

  anon46_Then:
    assume {:partition} 0 > subStatus;
    goto L73;

  anon56_Then:
    goto L66;

  anon55_Then:
    instanceNum := 0;
    goto L80;

  L80:
    call {:si_unique_call 1754} Tmp_2486, Tmp_2494, Tmp_2502, Tmp_2504, Tmp_2514, status_78, instanceNum := Sbp2CreateDeviceRelations_loop_L80(i_8, Tmp_2486, Tmp_2494, Tmp_2502, Tmp_2504, Tmp_2514, status_78, instanceNum, FdoExtension_8);
    goto L80_last;

  L80_last:
    Tmp_2494 := instanceNum;
    instanceNum := instanceNum + 1;
    Tmp_2504 := Tmp_2494;
    Tmp_2486 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2502;
    Tmp_2514 := Tmp_2502 + Tmp_2486 * 268;
    call {:si_unique_call 1757} status_78 := Sbp2CreatePdo(FdoExtension_8, Tmp_2514, Tmp_2504);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} status_78 != -1073741771;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_78 < 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2501;
    assume {:nonnull} Tmp_2501 != 0;
    assume Tmp_2501 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    havoc Tmp_2513;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2519;
    call {:si_unique_call 1755} WPP_SF_D(Tmp_2519, 100, Tmp_2513, status_78);
    goto L98;

  L98:
    Tmp_2485 := status_78;
    goto L1;

  anon50_Then:
    goto L98;

  anon57_Then:
    goto L98;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L98;

  anon48_Then:
    assume {:partition} 0 <= status_78;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2503;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2492;
    Tmp_2499 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2518;
    assume {:nonnull} Tmp_2492 != 0;
    assume Tmp_2492 > 0;
    assume {:nonnull} Tmp_2518 != 0;
    assume Tmp_2518 > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_2488 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2509;
    assume {:nonnull} Tmp_2509 != 0;
    assume Tmp_2509 > 0;
    call {:si_unique_call 1756} vslice_dummy_var_320 := sdv_ObReferenceObject(0);
    goto L73;

  anon47_Then:
    assume {:partition} status_78 == -1073741771;
    goto anon47_Then_dummy;

  anon47_Then_dummy:
    assume false;
    return;

  anon45_Then:
    goto L27;

  anon39_Then:
    assume {:partition} 0 > status_78;
    Tmp_2485 := status_78;
    goto L1;
}



procedure {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_41: int) returns (Tmp_2525: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_41: int) returns (Tmp_2525: int)
{
  var {:scalar} Tmp_2526: int;
  var {:scalar} errorId: int;
  var {:scalar} waitValue_6: int;
  var {:pointer} sdv_802: int;
  var {:scalar} Tmp_2527: int;
  var {:pointer} Tmp_2528: int;
  var {:pointer} pdoExtension_22: int;
  var {:pointer} Tmp_2529: int;
  var {:pointer} Tmp_2530: int;
  var {:pointer} Tmp_2531: int;
  var {:pointer} Tmp_2532: int;
  var {:pointer} Tmp_2533: int;
  var {:pointer} Tmp_2534: int;
  var {:pointer} Tmp_2535: int;
  var {:scalar} sdv_804: int;
  var {:scalar} sdv_805: int;
  var {:pointer} Tmp_2536: int;
  var {:scalar} Tmp_2537: int;
  var {:scalar} Tmp_2538: int;
  var {:pointer} sdv_807: int;
  var {:pointer} Tmp_2539: int;
  var {:pointer} Tmp_2540: int;
  var {:pointer} Tmp_2541: int;
  var {:pointer} Tmp_2542: int;
  var {:scalar} Tmp_2543: int;
  var {:pointer} Tmp_2544: int;
  var {:scalar} Tmp_2545: int;
  var {:pointer} Tmp_2546: int;
  var {:pointer} Tmp_2547: int;
  var {:pointer} Tmp_2548: int;
  var {:pointer} Tmp_2549: int;
  var {:scalar} Tmp_2550: int;
  var {:scalar} Tmp_2551: int;
  var {:scalar} enabledBusResetNotification: int;
  var {:pointer} Tmp_2552: int;
  var {:scalar} Tmp_2553: int;
  var {:pointer} Tmp_2554: int;
  var {:pointer} Tmp_2555: int;
  var {:pointer} Tmp_2556: int;
  var {:pointer} Tmp_2557: int;
  var {:pointer} Tmp_2558: int;
  var {:pointer} Tmp_2559: int;
  var {:pointer} Tmp_2560: int;
  var {:pointer} Tmp_2561: int;
  var {:scalar} Tmp_2562: int;
  var {:pointer} Tmp_2563: int;
  var {:pointer} Tmp_2564: int;
  var {:pointer} Tmp_2565: int;
  var {:scalar} Tmp_2566: int;
  var {:pointer} fdoDeviceExtension: int;
  var {:scalar} Tmp_2567: int;
  var {:scalar} Tmp_2568: int;
  var {:pointer} Tmp_2569: int;
  var {:pointer} Tmp_2570: int;
  var {:scalar} Tmp_2571: int;
  var {:pointer} Tmp_2572: int;
  var {:pointer} Tmp_2573: int;
  var {:pointer} fdoExtension_10: int;
  var {:scalar} Tmp_2574: int;
  var {:pointer} sdv_818: int;
  var {:pointer} Tmp_2575: int;
  var {:pointer} Tmp_2576: int;
  var {:pointer} Tmp_2577: int;
  var {:scalar} Tmp_2578: int;
  var {:scalar} status_79: int;
  var {:scalar} Tmp_2580: int;
  var {:pointer} Tmp_2581: int;
  var {:scalar} Tmp_2582: int;
  var {:scalar} Tmp_2584: int;
  var {:pointer} DeviceObject_41: int;
  var boogieTmp: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_2867: int;
  var vslice_dummy_var_2868: int;
  var vslice_dummy_var_2869: int;
  var vslice_dummy_var_2870: int;
  var vslice_dummy_var_2871: int;
  var vslice_dummy_var_2872: int;
  var vslice_dummy_var_2873: int;

  anon0:
    call {:si_unique_call 1758} waitValue_6 := __HAVOC_malloc(20);
    DeviceObject_41 := actual_DeviceObject_41;
    call {:si_unique_call 1759} Tmp_2531 := __HAVOC_malloc(4);
    call {:si_unique_call 1760} Tmp_2532 := __HAVOC_malloc(4);
    call {:si_unique_call 1761} Tmp_2533 := __HAVOC_malloc(4);
    call {:si_unique_call 1762} Tmp_2534 := __HAVOC_malloc(4);
    call {:si_unique_call 1763} Tmp_2536 := __HAVOC_malloc(4);
    call {:si_unique_call 1764} Tmp_2539 := __HAVOC_malloc(4);
    call {:si_unique_call 1765} Tmp_2540 := __HAVOC_malloc(4);
    call {:si_unique_call 1766} Tmp_2548 := __HAVOC_malloc(4);
    call {:si_unique_call 1767} Tmp_2549 := __HAVOC_malloc(4);
    call {:si_unique_call 1768} Tmp_2570 := __HAVOC_malloc(4);
    call {:si_unique_call 1769} Tmp_2572 := __HAVOC_malloc(4);
    call {:si_unique_call 1770} Tmp_2577 := __HAVOC_malloc(4);
    call {:si_unique_call 1771} Tmp_2581 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_41 != 0;
    assume DeviceObject_41 > 0;
    havoc pdoExtension_22;
    assume {:nonnull} DeviceObject_41 != 0;
    assume DeviceObject_41 > 0;
    havoc fdoExtension_10;
    enabledBusResetNotification := 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    Tmp_2525 := -1073741130;
    goto L1;

  L1:
    return;

  anon140_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2556;
    assume {:nonnull} Tmp_2556 != 0;
    assume Tmp_2556 > 0;
    havoc fdoDeviceExtension;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_2867;
    call {:si_unique_call 1772} vslice_dummy_var_327 := Sbp2ConfigLegacyDevice(DeviceObject_41, vslice_dummy_var_2867);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2541;
    assume {:nonnull} Tmp_2541 != 0;
    assume Tmp_2541 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} fdoDeviceExtension != 0;
    assume fdoDeviceExtension > 0;
    goto L20;

  L20:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1773} status_79 := Sbp2InitializeDeviceExtension#1(pdoExtension_22);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} status_79 >= 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2532;
    assume {:nonnull} Tmp_2532 != 0;
    assume Tmp_2532 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    havoc Tmp_2576;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2582;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2547;
    assume {:nonnull} Tmp_2547 != 0;
    assume Tmp_2547 > 0;
    havoc vslice_dummy_var_2868;
    call {:si_unique_call 1774} WPP_SF_qD(Tmp_2582, 17, Tmp_2576, pdoExtension_22, vslice_dummy_var_2868);
    goto L31;

  L31:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2528;
    assume {:nonnull} Tmp_2528 != 0;
    assume Tmp_2528 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} Tmp_2528 != 0;
    assume Tmp_2528 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} Tmp_2528 != 0;
    assume Tmp_2528 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L42;

  L42:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2540;
    assume {:nonnull} Tmp_2540 != 0;
    assume Tmp_2540 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    havoc Tmp_2557;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2568;
    call {:si_unique_call 1775} WPP_SF_q(Tmp_2568, 18, Tmp_2557, pdoExtension_22);
    goto L39;

  L39:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2544;
    assume {:nonnull} Tmp_2544 != 0;
    assume Tmp_2544 > 0;
    havoc vslice_dummy_var_2869;
    call {:si_unique_call 1776} status_79 := Sbp2EnableBusResetNotification#1(vslice_dummy_var_2869, 1);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} status_79 >= 0;
    enabledBusResetNotification := 1;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1777} vslice_dummy_var_324 := KeResetEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_22));
    call {:si_unique_call 1778} status_79 := Sbp2Issue1394BusReset#1(pdoExtension_22);
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} status_79 < 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2577;
    assume {:nonnull} Tmp_2577 != 0;
    assume Tmp_2577 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc Tmp_2575;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2580;
    call {:si_unique_call 1779} WPP_SF_qD(Tmp_2580, 19, Tmp_2575, pdoExtension_22, status_79);
    goto L265;

  L265:
    call {:si_unique_call 1780} sdv_804 := IsDeviceGone#1(pdoExtension_22, status_79);
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} sdv_804 != 0;
    errorId := 997;
    goto L169;

  L169:
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} status_79 >= 0;
    assume {:nonnull} DeviceObject_41 != 0;
    assume DeviceObject_41 > 0;
    goto L174;

  L174:
    Tmp_2525 := status_79;
    goto L1;

  anon163_Then:
    assume {:partition} 0 > status_79;
    call {:si_unique_call 1781} Sbp2CreateRequestErrorLog(DeviceObject_41, 0, errorId, status_79);
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2581;
    assume {:nonnull} Tmp_2581 != 0;
    assume Tmp_2581 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    havoc Tmp_2560;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2527;
    call {:si_unique_call 1782} WPP_SF_qD(Tmp_2527, 28, Tmp_2560, pdoExtension_22, status_79);
    goto L179;

  L179:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} enabledBusResetNotification != 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2546;
    assume {:nonnull} Tmp_2546 != 0;
    assume Tmp_2546 > 0;
    havoc vslice_dummy_var_2870;
    call {:si_unique_call 1783} vslice_dummy_var_325 := Sbp2EnableBusResetNotification#1(vslice_dummy_var_2870, 0);
    goto L174;

  anon194_Then:
    assume {:partition} enabledBusResetNotification == 0;
    goto L174;

  anon165_Then:
    goto L179;

  anon193_Then:
    goto L179;

  anon164_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L179;

  anon181_Then:
    assume {:partition} sdv_804 == 0;
    goto L73;

  L73:
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2539;
    assume {:nonnull} Tmp_2539 != 0;
    assume Tmp_2539 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1784} Tmp_2553 := corral_nondet();
    call {:si_unique_call 1785} sdv_818 := GET_DEVICE_NAME(pdoExtension_22);
    call {:si_unique_call 1786} sdv_805 := GET_LUN(pdoExtension_22);
    havoc Tmp_2554;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2578;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2542;
    assume {:nonnull} Tmp_2542 != 0;
    assume Tmp_2542 > 0;
    havoc vslice_dummy_var_2871;
    call {:si_unique_call 1787} WPP_SF_qdSdd(Tmp_2578, 20, Tmp_2554, pdoExtension_22, sdv_805, sdv_818, vslice_dummy_var_2871, Tmp_2553);
    goto L74;

  L74:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2559;
    assume {:nonnull} Tmp_2559 != 0;
    assume Tmp_2559 > 0;
    assume {:nonnull} waitValue_6 != 0;
    assume waitValue_6 > 0;
    call {:si_unique_call 1788} status_79 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} status_79 != 0;
    goto L99;

  L99:
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2531;
    assume {:nonnull} Tmp_2531 != 0;
    assume Tmp_2531 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    call {:si_unique_call 1789} sdv_807 := GET_DEVICE_NAME(pdoExtension_22);
    havoc Tmp_2558;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2537;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_2872;
    call {:si_unique_call 1790} WPP_SF_qSDD(Tmp_2537, 21, Tmp_2558, pdoExtension_22, sdv_807, status_79, vslice_dummy_var_2872);
    goto L100;

  L100:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto L251;

  L251:
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2536;
    assume {:nonnull} Tmp_2536 != 0;
    assume Tmp_2536 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    call {:si_unique_call 1791} sdv_802 := GET_DEVICE_NAME(pdoExtension_22);
    havoc Tmp_2535;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2543;
    call {:si_unique_call 1792} WPP_SF_qSD(Tmp_2543, 22, Tmp_2535, pdoExtension_22, sdv_802, status_79);
    goto L252;

  L252:
    errorId := 1052;
    goto L169;

  anon178_Then:
    goto L252;

  anon192_Then:
    goto L252;

  anon177_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L252;

  anon152_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    goto L251;

  anon154_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1793} vslice_dummy_var_321 := Sbp2AccessRegister#1(pdoExtension_22, Reserved__DEVICE_EXTENSION(pdoExtension_22), 258);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1794} vslice_dummy_var_322 := Sbp2AccessRegister#1(pdoExtension_22, Reserved__DEVICE_EXTENSION(pdoExtension_22), 272);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto L126;

  L126:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    call {:si_unique_call 1795} status_79 := Sbp2IssueInternalCommand(pdoExtension_22, 18);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} status_79 >= 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2534;
    assume {:nonnull} Tmp_2534 != 0;
    assume Tmp_2534 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2566;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2555;
    assume {:nonnull} Tmp_2555 != 0;
    assume Tmp_2555 > 0;
    havoc Tmp_2526;
    havoc Tmp_2565;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2584;
    call {:si_unique_call 1796} WPP_SF_qDD(Tmp_2584, 23, Tmp_2565, pdoExtension_22, Tmp_2526, Tmp_2566);
    goto L129;

  L129:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2529;
    assume {:nonnull} Tmp_2529 != 0;
    assume Tmp_2529 > 0;
    havoc Tmp_2538;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2549;
    assume {:nonnull} Tmp_2549 != 0;
    assume Tmp_2549 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2530;
    assume {:nonnull} Tmp_2530 != 0;
    assume Tmp_2530 > 0;
    havoc Tmp_2550;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2574;
    havoc Tmp_2563;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2562;
    call {:si_unique_call 1797} WPP_SF_qDD(Tmp_2562, 26, Tmp_2563, pdoExtension_22, Tmp_2574, Tmp_2550);
    goto L210;

  L210:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2564;
    assume {:nonnull} Tmp_2564 != 0;
    assume Tmp_2564 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto L205;

  L205:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    goto L221;

  L221:
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} status_79 >= 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1798} CleanupOrbList#1(pdoExtension_22, -1073741248);
    call {:si_unique_call 1799} vslice_dummy_var_323 := Sbp2ManagementTransaction#1(pdoExtension_22, 7, -1);
    goto L169;

  anon171_Then:
    assume {:partition} 0 > status_79;
    goto L169;

  anon167_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} status_79 >= 0;
    call {:si_unique_call 1800} status_79 := Sbp2IssueInternalCommand(pdoExtension_22, 26);
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} status_79 < 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2548;
    assume {:nonnull} Tmp_2548 != 0;
    assume Tmp_2548 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    havoc Tmp_2561;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2551;
    call {:si_unique_call 1801} WPP_SF_q(Tmp_2551, 27, Tmp_2561, pdoExtension_22);
    goto L241;

  L241:
    errorId := 1196;
    goto L169;

  anon176_Then:
    goto L241;

  anon200_Then:
    goto L241;

  anon175_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L241;

  anon174_Then:
    assume {:partition} 0 <= status_79;
    goto L169;

  anon173_Then:
    assume {:partition} 0 > status_79;
    goto L169;

  anon172_Then:
    goto L169;

  anon170_Then:
    goto L221;

  anon169_Then:
    goto L210;

  anon199_Then:
    goto L210;

  anon168_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L210;

  anon198_Then:
    goto L205;

  anon158_Then:
    goto L129;

  anon197_Then:
    goto L129;

  anon157_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L129;

  anon155_Then:
    assume {:partition} 0 > status_79;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} status_79 == -1073741632;
    goto L153;

  L153:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2572;
    assume {:nonnull} Tmp_2572 != 0;
    assume Tmp_2572 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    havoc Tmp_2573;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2545;
    call {:si_unique_call 1802} WPP_SF_qD(Tmp_2545, 24, Tmp_2573, pdoExtension_22, status_79);
    goto L154;

  L154:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1803} vslice_dummy_var_326 := Sbp2ManagementTransaction#1(pdoExtension_22, 7, -1);
    goto L162;

  L162:
    status_79 := -1073741435;
    errorId := 1136;
    goto L169;

  anon161_Then:
    goto L162;

  anon162_Then:
    goto L154;

  anon201_Then:
    goto L154;

  anon160_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L154;

  anon156_Then:
    assume {:partition} status_79 != -1073741632;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} status_79 != 17;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2533;
    assume {:nonnull} Tmp_2533 != 0;
    assume Tmp_2533 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    havoc Tmp_2552;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2571;
    call {:si_unique_call 1804} WPP_SF_qD(Tmp_2571, 25, Tmp_2552, pdoExtension_22, status_79);
    goto L196;

  L196:
    status_79 := 0;
    goto L129;

  anon166_Then:
    goto L196;

  anon203_Then:
    goto L196;

  anon202_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon159_Then:
    assume {:partition} status_79 == 17;
    goto L153;

  anon196_Then:
    goto L129;

  anon195_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1805} boogieTmp := PoRegisterDeviceForIdleDetection(0, -1, -1, 4);
    goto L126;

  anon153_Then:
    goto L100;

  anon191_Then:
    goto L100;

  anon151_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L100;

  anon150_Then:
    assume {:partition} status_79 == 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc status_79;
    goto L99;

  anon149_Then:
    goto L74;

  anon190_Then:
    goto L74;

  anon148_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L74;

  anon180_Then:
    goto L265;

  anon204_Then:
    goto L265;

  anon179_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L265;

  anon147_Then:
    assume {:partition} 0 <= status_79;
    goto L73;

  anon146_Then:
    assume {:partition} 0 > status_79;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1806} CleanupOrbList#1(pdoExtension_22, -1073741248);
    errorId := 975;
    goto L169;

  anon145_Then:
    goto L39;

  anon189_Then:
    goto L39;

  anon188_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L39;

  anon183_Then:
    goto L39;

  anon184_Then:
    goto L42;

  anon187_Then:
    goto L42;

  anon144_Then:
    goto L31;

  anon186_Then:
    goto L31;

  anon143_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L31;

  anon142_Then:
    assume {:partition} 0 > status_79;
    errorId := 941;
    goto L169;

  anon205_Then:
    goto L20;

  anon141_Then:
    goto L20;

  anon185_Then:
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2570;
    assume {:nonnull} Tmp_2570 != 0;
    assume Tmp_2570 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    havoc Tmp_2569;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2567;
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    havoc vslice_dummy_var_2873;
    call {:si_unique_call 1807} WPP_SF_qD(Tmp_2567, 29, Tmp_2569, fdoExtension_10, vslice_dummy_var_2873);
    goto L300;

  L300:
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    status_79 := 0;
    goto L174;

  anon182_Then:
    goto L300;

  anon207_Then:
    goto L300;

  anon206_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon139_Then:
    status_79 := -1073741810;
    goto L174;
}



procedure {:origName "WPP_SF_qd"} WPP_SF_qd(actual_Logger_35: int, actual_id_35: int, actual_TraceGuid_35: int, actual_s_p_e_c_i_a_l_122: int, actual_s_p_e_c_i_a_l_123: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qd"} WPP_SF_qd(actual_Logger_35: int, actual_id_35: int, actual_TraceGuid_35: int, actual_s_p_e_c_i_a_l_122: int, actual_s_p_e_c_i_a_l_123: int)
{
  var {:pointer} TraceGuid_35: int;
  var vslice_dummy_var_328: int;

  anon0:
    call {:si_unique_call 1808} vslice_dummy_var_328 := __HAVOC_malloc(4);
    TraceGuid_35 := actual_TraceGuid_35;
    return;
}



procedure {:origName "Sbp2HandleApiRequest"} Sbp2HandleApiRequest(actual_DeviceExtension_12: int, actual_Irp_25: int) returns (Tmp_2588: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2HandleApiRequest"} Sbp2HandleApiRequest(actual_DeviceExtension_12: int, actual_Irp_25: int) returns (Tmp_2588: int)
{
  var {:pointer} Tmp_2589: int;
  var {:pointer} irpStack_19: int;
  var {:pointer} Tmp_2590: int;
  var {:scalar} Tmp_2591: int;
  var {:pointer} Tmp_2593: int;
  var {:pointer} sbp2Req: int;
  var {:pointer} Tmp_2594: int;
  var {:scalar} Tmp_2595: int;
  var {:scalar} status_80: int;
  var {:pointer} Tmp_2596: int;
  var {:pointer} DeviceExtension_12: int;
  var {:pointer} Irp_25: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_2874: int;
  var vslice_dummy_var_2875: int;

  anon0:
    DeviceExtension_12 := actual_DeviceExtension_12;
    Irp_25 := actual_Irp_25;
    call {:si_unique_call 1809} Tmp_2589 := __HAVOC_malloc(4);
    call {:si_unique_call 1810} Tmp_2596 := __HAVOC_malloc(4);
    call {:si_unique_call 1811} irpStack_19 := sdv_IoGetCurrentIrpStackLocation(Irp_25);
    call {:si_unique_call 1812} status_80 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_80 >= 0;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    havoc sbp2Req;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2589;
    assume {:nonnull} Tmp_2589 != 0;
    assume Tmp_2589 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    havoc Tmp_2594;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2595;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    havoc vslice_dummy_var_2874;
    call {:si_unique_call 1813} WPP_SF_qDD(Tmp_2595, 67, Tmp_2594, DeviceExtension_12, vslice_dummy_var_2874, 24);
    goto L25;

  L25:
    status_80 := -1073741811;
    goto L34;

  L34:
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_25))] := status_80;
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    call {:si_unique_call 1814} vslice_dummy_var_329 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_12), Irp_25);
    call {:si_unique_call 1815} sdv_IoCompleteRequest(0, 0);
    Tmp_2588 := status_80;
    goto L1;

  L1:
    return;

  anon29_Then:
    goto L25;

  anon34_Then:
    goto L25;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon33_Then:
    goto L20;

  L20:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sbp2Req == 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2596;
    assume {:nonnull} Tmp_2596 != 0;
    assume Tmp_2596 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_2590;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2591;
    call {:si_unique_call 1816} WPP_SF_q(Tmp_2591, 68, Tmp_2590, DeviceExtension_12);
    goto L56;

  L56:
    status_80 := -1073741811;
    goto L34;

  anon32_Then:
    goto L56;

  anon36_Then:
    goto L56;

  anon31_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon27_Then:
    assume {:partition} sbp2Req != 0;
    status_80 := -1073741822;
    assume {:nonnull} sbp2Req != 0;
    assume sbp2Req > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    havoc Tmp_2593;
    assume {:nonnull} Tmp_2593 != 0;
    assume Tmp_2593 > 0;
    havoc vslice_dummy_var_2875;
    call {:si_unique_call 1817} status_80 := Sbp2Get1394ConfigInfo(vslice_dummy_var_2875, sbp2Req);
    goto L34;

  anon30_Then:
    goto L34;

  anon35_Then:
    status_80 := -1073741811;
    goto L34;

  anon26_Then:
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    havoc sbp2Req;
    goto L20;

  anon25_Then:
    assume {:partition} 0 > status_80;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_25))] := status_80;
    call {:si_unique_call 1818} sdv_IoCompleteRequest(0, 0);
    Tmp_2588 := status_80;
    goto L1;
}



procedure {:origName "WPP_SF_S"} WPP_SF_S(actual_Logger_36: int, actual_id_36: int, actual_TraceGuid_36: int, actual_s_p_e_c_i_a_l_124: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_S"} WPP_SF_S(actual_Logger_36: int, actual_id_36: int, actual_TraceGuid_36: int, actual_s_p_e_c_i_a_l_124: int)
{
  var {:scalar} sdv_825: int;
  var {:pointer} Tmp_2600: int;
  var {:scalar} Tmp_2603: int;
  var {:pointer} TraceGuid_36: int;
  var {:pointer} s_p_e_c_i_a_l_124: int;
  var vslice_dummy_var_330: int;

  anon0:
    call {:si_unique_call 1819} vslice_dummy_var_330 := __HAVOC_malloc(4);
    TraceGuid_36 := actual_TraceGuid_36;
    s_p_e_c_i_a_l_124 := actual_s_p_e_c_i_a_l_124;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_124 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_124 != 0;
    assume s_p_e_c_i_a_l_124 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2603 := (sdv_825 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_124 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_124 != 0;
    assume s_p_e_c_i_a_l_124 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2600 := s_p_e_c_i_a_l_124;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2600 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_124 == 0;
    goto L18;

  anon10_Then:
    Tmp_2603 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_124 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qD"} WPP_SF_qD(actual_Logger_37: int, actual_id_37: int, actual_TraceGuid_37: int, actual_s_p_e_c_i_a_l_125: int, actual_s_p_e_c_i_a_l_126: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WPP_SF_qD"} WPP_SF_qD(actual_Logger_37: int, actual_id_37: int, actual_TraceGuid_37: int, actual_s_p_e_c_i_a_l_125: int, actual_s_p_e_c_i_a_l_126: int)
{
  var {:pointer} TraceGuid_37: int;
  var vslice_dummy_var_331: int;

  anon0:
    call {:si_unique_call 1820} vslice_dummy_var_331 := __HAVOC_malloc(4);
    TraceGuid_37 := actual_TraceGuid_37;
    return;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    assume (forall x: int :: { Mem_T.Free__GENERAL_LOOKASIDE[x] } Mem_T.Free__GENERAL_LOOKASIDE[x] <= 0 || Mem_T.Free__GENERAL_LOOKASIDE[x] > 804);
    return;
}



function {:inline true} {:fieldmap "Mem_T.AR_Length__ADDRESS_RANGE"} {:fieldname "AR_Length"} AR_Length__ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Abandoned__DISPATCHER_HEADER"} {:fieldname "Abandoned"} Abandoned__DISPATCHER_HEADER(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Absolute__DISPATCHER_HEADER"} {:fieldname "Absolute"} Absolute__DISPATCHER_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AcceleratedTransfer"} AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Action__BUS_RESET_ENTRY"} {:fieldname "Action"} Action__BUS_RESET_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__IO_SCSI_CAPABILITIES"} {:fieldname "AdapterScansDown"} AdapterScansDown__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterScansDown"} AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__IO_SCSI_CAPABILITIES"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AddDevice__DRIVER_EXTENSION"} {:fieldname "AddDevice"} AddDevice__DRIVER_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AddressAndStatus__STATUS_FIFO_BLOCK"} {:fieldname "AddressAndStatus"} AddressAndStatus__STATUS_FIFO_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "AddressContext"} AddressContext__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "AddressHandle"} AddressHandle__ADDRESS_CONTEXT(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.AddressType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AddressType"} AddressType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "Address"} Address__ADDRESS_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "AddressesReturned"} AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.AffinitySet__DISPATCHER_HEADER"} {:fieldname "AffinitySet"} AffinitySet__DISPATCHER_HEADER(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__IO_SCSI_CAPABILITIES"} {:fieldname "AlignmentMask"} AlignmentMask__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AlignmentMask"} AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentRequirement__DEVICE_OBJECT"} {:fieldname "AlignmentRequirement"} AlignmentRequirement__DEVICE_OBJECT(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.AllocateAddressRange_unnamed_tag_72"} {:fieldname "AllocateAddressRange"} AllocateAddressRange_unnamed_tag_72(x: int) : int
{
  x + 472
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__CDB6INQUIRY"} {:fieldname "AllocationLength"} AllocationLength__CDB6INQUIRY(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__MODE_SENSE"} {:fieldname "AllocationLength"} AllocationLength__MODE_SENSE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AppendToNextContextToFree__DEVICE_EXTENSION"} {:fieldname "AppendToNextContextToFree"} AppendToNextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 748
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_42"} {:fieldname "Argument1"} Argument1_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_1"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AsyncContextBase__DEVICE_EXTENSION"} {:fieldname "AsyncContextBase"} AsyncContextBase__DEVICE_EXTENSION(x: int) : int
{
  x + 4524
}

function {:inline true} {:fieldmap "Mem_T.AsyncRead_unnamed_tag_72"} {:fieldname "AsyncRead"} AsyncRead_unnamed_tag_72(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncReqCtx__ARCP_ORB"} {:fieldname "AsyncReqCtx"} AsyncReqCtx__ARCP_ORB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncWrite_unnamed_tag_72"} {:fieldname "AsyncWrite"} AsyncWrite_unnamed_tag_72(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BlockDescriptorLength__MODE_PARAMETER_HEADER"} {:fieldname "BlockDescriptorLength"} BlockDescriptorLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BlockLength__MODE_PARAMETER_BLOCK"} {:fieldname "BlockLength"} BlockLength__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Buffer"} Buffer__STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Buffer"} Buffer_unnamed_tag_74(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BusAddress__OCTLET"} {:fieldname "BusAddress"} BusAddress__OCTLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusFdo__DEVICE_EXTENSION"} {:fieldname "BusFdo"} BusFdo__DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMajorVersion"} BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMinorVersion"} BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "BusRequestContextPool"} BusRequestContextPool__DEVICE_EXTENSION(x: int) : int
{
  x + 4388
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "BusRequestIrpIrbListHead"} BusRequestIrpIrbListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4500
}

function {:inline true} {:fieldmap "Mem_T.BusRequestLock__DEVICE_EXTENSION"} {:fieldname "BusRequestLock"} BusRequestLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4516
}

function {:inline true} {:fieldmap "Mem_T.BusResetEntryCount__DEVICE_EXTENSION"} {:fieldname "BusResetEntryCount"} BusResetEntryCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4776
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "BusResetEntry"} BusResetEntry__DEVICE_EXTENSION(x: int) : int
{
  x + 4768
}

function {:inline true} {:fieldmap "Mem_T.BusResetGeneration__BUS_RESET_ENTRY"} {:fieldname "BusResetGeneration"} BusResetGeneration__BUS_RESET_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BusResetGeneration__DEVICE_EXTENSION"} {:fieldname "BusResetGeneration"} BusResetGeneration__DEVICE_EXTENSION(x: int) : int
{
  x + 1424
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotification_unnamed_tag_72"} {:fieldname "BusResetNotification"} BusResetNotification_unnamed_tag_72(x: int) : int
{
  x + 1060
}

function {:inline true} {:fieldmap "Mem_T.BusResetPacket__FDO_DEVICE_EXTENSION"} {:fieldname "BusResetPacket"} BusResetPacket__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3468
}

function {:inline true} {:fieldmap "Mem_T.BusReset_unnamed_tag_72"} {:fieldname "BusReset"} BusReset_unnamed_tag_72(x: int) : int
{
  x + 972
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Busy__KDEVICE_QUEUE"} {:fieldname "Busy"} Busy__KDEVICE_QUEUE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte0_unnamed_tag_78"} {:fieldname "Byte0"} Byte0_unnamed_tag_78(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Byte1_unnamed_tag_78"} {:fieldname "Byte1"} Byte1_unnamed_tag_78(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Byte2_unnamed_tag_78"} {:fieldname "Byte2"} Byte2_unnamed_tag_78(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Byte3_unnamed_tag_78"} {:fieldname "Byte3"} Byte3_unnamed_tag_78(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Byte4_unnamed_tag_70"} {:fieldname "Byte4"} Byte4_unnamed_tag_70(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Byte5_unnamed_tag_70"} {:fieldname "Byte5"} Byte5_unnamed_tag_70(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte6_unnamed_tag_70"} {:fieldname "Byte6"} Byte6_unnamed_tag_70(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Byte7_unnamed_tag_70"} {:fieldname "Byte7"} Byte7_unnamed_tag_70(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ByteArray__OCTLET"} {:fieldname "ByteArray"} ByteArray__OCTLET(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.CDB10__CDB"} {:fieldname "CDB10"} CDB10__CDB(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.CDB6GENERIC__CDB"} {:fieldname "CDB6GENERIC"} CDB6GENERIC__CDB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CDB6INQUIRY__CDB"} {:fieldname "CDB6INQUIRY"} CDB6INQUIRY__CDB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.CR_Node_UniqueID__CONFIG_ROM"} {:fieldname "CR_Node_UniqueID"} CR_Node_UniqueID__CONFIG_ROM(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Callback"} Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_30"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_30(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CdbLength__SCSI_REQUEST_BLOCK"} {:fieldname "CdbLength"} CdbLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Cdb"} Cdb__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Characteristics__DEVICE_OBJECT"} {:fieldname "Characteristics"} Characteristics__DEVICE_OBJECT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "CmdOrbAddress"} CmdOrbAddress__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.CmdOrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "CmdOrb"} CmdOrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CmdOrbs__COMMON_BUFFER_DATA"} {:fieldname "CmdOrbs"} CmdOrbs__COMMON_BUFFER_DATA(x: int) : int
{
  x + 916
}

function {:inline true} {:fieldmap "Mem_T.CmdSetId__DEVICE_INFORMATION"} {:fieldname "CmdSetId"} CmdSetId__DEVICE_INFORMATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.CmdSetSpecId__DEVICE_INFORMATION"} {:fieldname "CmdSetSpecId"} CmdSetSpecId__DEVICE_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "CommonBufferContext"} CommonBufferContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1864
}

function {:inline true} {:fieldmap "Mem_T.CommonBuffer__DEVICE_EXTENSION"} {:fieldname "CommonBuffer"} CommonBuffer__DEVICE_EXTENSION(x: int) : int
{
  x + 1860
}

function {:inline true} {:fieldmap "Mem_T.Common__IO_REMOVE_LOCK"} {:fieldname "Common"} Common__IO_REMOVE_LOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Complete"} Complete__REQUEST_CONTEXT(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__DEVICE_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__DEVICE_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._CONFIG_ROM"} {:fieldname "ConfigRom"} ConfigRom__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3272
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ConsecutiveFailedRequestCount__DEVICE_EXTENSION"} {:fieldname "ConsecutiveFailedRequestCount"} ConsecutiveFailedRequestCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4788
}

function {:inline true} {:fieldmap "Mem_T.Contents__STATUS_FIFO_BLOCK"} {:fieldname "Contents"} Contents__STATUS_FIFO_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Context"} Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Context__NOTIFICATION_INFO_WXP"} {:fieldname "Context"} Context__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Control"} Control_WPP_PROJECT_CONTROL_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Control__CDB6INQUIRY"} {:fieldname "Control"} Control__CDB6INQUIRY(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Control__IO_STACK_LOCATION"} {:fieldname "Control"} Control__IO_STACK_LOCATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Count__DEVICE_RELATIONS"} {:fieldname "Count"} Count__DEVICE_RELATIONS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CounterProfiling__DISPATCHER_HEADER"} {:fieldname "CounterProfiling"} CounterProfiling__DISPATCHER_HEADER(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.CrashDumpCount__DEVICE_EXTENSION"} {:fieldname "CrashDumpCount"} CrashDumpCount__DEVICE_EXTENSION(x: int) : int
{
  x + 780
}

function {:inline true} {:fieldmap "Mem_T.CsrRegisterBase__DEVICE_INFORMATION"} {:fieldname "CsrRegisterBase"} CsrRegisterBase__DEVICE_INFORMATION(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_High__LOGIN_RESPONSE"} {:fieldname "Csr_Off_High"} Csr_Off_High__LOGIN_RESPONSE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_Low__LOGIN_RESPONSE"} {:fieldname "Csr_Off_Low"} Csr_Off_Low__LOGIN_RESPONSE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CurrentGeneration__DEVICE_EXTENSION"} {:fieldname "CurrentGeneration"} CurrentGeneration__DEVICE_EXTENSION(x: int) : int
{
  x + 1420
}

function {:inline true} {:fieldmap "Mem_T.CurrentKey__DEVICE_EXTENSION"} {:fieldname "CurrentKey"} CurrentKey__DEVICE_EXTENSION(x: int) : int
{
  x + 436
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_6"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_6(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CycleProfiling__DISPATCHER_HEADER"} {:fieldname "CycleProfiling"} CycleProfiling__DISPATCHER_HEADER(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.DI_Length__DIRECTORY_INFO"} {:fieldname "DI_Length"} DI_Length__DIRECTORY_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1_LOG_ENTRY32"} {:fieldname "Data1"} Data1_LOG_ENTRY32(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2_LOG_ENTRY32"} {:fieldname "Data2"} Data2_LOG_ENTRY32(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "DataBuffer"} DataBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DataDescriptor__ORB_EXT_CMD"} {:fieldname "DataDescriptor"} DataDescriptor__ORB_EXT_CMD(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "DataMappingHandle"} DataMappingHandle__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.DataTransferLength__SCSI_REQUEST_BLOCK"} {:fieldname "DataTransferLength"} DataTransferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Data"} Data__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE"} {:fieldname "Dbd"} Dbd__MODE_SENSE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE10"} {:fieldname "Dbd"} Dbd__MODE_SENSE10(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._DEBUG_LOG"} {:fieldname "DbgLog"} DbgLog__DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.DebugActive__DISPATCHER_HEADER"} {:fieldname "DebugActive"} DebugActive__DISPATCHER_HEADER(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "DeferredPowerRequest"} DeferredPowerRequest__DEVICE_EXTENSION(x: int) : int
{
  x + 764
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DensityCode__MODE_PARAMETER_BLOCK"} {:fieldname "DensityCode"} DensityCode__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_READ"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_WRITE"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__REQUEST_CONTEXT"} {:fieldname "DeviceExtension"} DeviceExtension__REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.DeviceInfo__DEVICE_EXTENSION"} {:fieldname "DeviceInfo"} DeviceInfo__DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListEntry"} DeviceListEntry__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListHead"} DeviceListHead__KDEVICE_QUEUE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceListLock__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceListLock"} DeviceListLock__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 588
}

function {:inline true} {:fieldmap "Mem_T.DeviceListSize__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceListSize"} DeviceListSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 584
}

function {:inline true} {:fieldmap "Mem_T.DeviceList__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceList"} DeviceList__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 592
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "DeviceManagementTimeoutDpc"} DeviceManagementTimeoutDpc__DEVICE_EXTENSION(x: int) : int
{
  x + 4532
}

function {:inline true} {:fieldmap "Mem_T._MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "DeviceModeHeaderAndPage"} DeviceModeHeaderAndPage__DEVICE_EXTENSION(x: int) : int
{
  x + 1316
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ADDRESS_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ADDRESS_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ASYNC_REQUEST_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.P_DEVICE_OBJECT"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 752
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__FDO_DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE_ENTRY"} {:fieldname "DeviceQueueEntry"} DeviceQueueEntry_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE"} {:fieldname "DeviceQueue"} DeviceQueue__DEVICE_OBJECT(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.DeviceSpecificParameter__MODE_PARAMETER_HEADER"} {:fieldname "DeviceSpecificParameter"} DeviceSpecificParameter__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_35"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_35(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceTypeModifier__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceTypeModifier"} DeviceTypeModifier__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__INQUIRYDATA"} {:fieldname "DeviceType"} DeviceType__INQUIRYDATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceType"} DeviceType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.DirectoryHeader_unnamed_tag_80"} {:fieldname "DirectoryHeader"} DirectoryHeader_unnamed_tag_80(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DisableIncrement__DISPATCHER_HEADER"} {:fieldname "DisableIncrement"} DisableIncrement__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DpcActive__DISPATCHER_HEADER"} {:fieldname "DpcActive"} DpcActive__DISPATCHER_HEADER(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.DriverExtension__DRIVER_OBJECT"} {:fieldname "DriverExtension"} DriverExtension__DRIVER_OBJECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DriverStartIo__DRIVER_OBJECT"} {:fieldname "DriverStartIo"} DriverStartIo__DRIVER_OBJECT(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DriverUnload__DRIVER_OBJECT"} {:fieldname "DriverUnload"} DriverUnload__DRIVER_OBJECT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "DummyContext"} DummyContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1688
}

function {:inline true} {:fieldmap "Mem_T._ORB_EXT_CMD"} {:fieldname "Dummy"} Dummy__DEVICE_EXTENSION(x: int) : int
{
  x + 1460
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Elements__QUERY_LOGIN_RESPONSE"} {:fieldname "Elements"} Elements__QUERY_LOGIN_RESPONSE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.EncodedTolerableDelay__DISPATCHER_HEADER"} {:fieldname "EncodedTolerableDelay"} EncodedTolerableDelay__DISPATCHER_HEADER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "Event"} Event__REQUEST_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Expired__DISPATCHER_HEADER"} {:fieldname "Expired"} Expired__DISPATCHER_HEADER(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.ExtensionDataSpinLock__DEVICE_EXTENSION"} {:fieldname "ExtensionDataSpinLock"} ExtensionDataSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4528
}

function {:inline true} {:fieldmap "Mem_T.FifoMdl__ADDRESS_FIFO"} {:fieldname "FifoMdl"} FifoMdl__ADDRESS_FIFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSListHead"} FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSpinLock"} FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Fifo__NOTIFICATION_INFO_WXP"} {:fieldname "Fifo"} Fifo__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirmwareVersion__DEVICE_INFORMATION"} {:fieldname "FirmwareVersion"} FirmwareVersion__DEVICE_INFORMATION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.Flag_LOG_ENTRY32"} {:fieldname "Flag"} Flag_LOG_ENTRY32(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__ASYNC_REQUEST_CONTEXT"} {:fieldname "Flags"} Flags__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRB"} {:fieldname "Flags"} Flags__IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Flags"} Flags__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FreeAddressRange_unnamed_tag_72"} {:fieldname "FreeAddressRange"} FreeAddressRange_unnamed_tag_72(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "FreeContextListHead"} FreeContextListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4372
}

function {:inline true} {:fieldmap "Mem_T.FreeContextLock__DEVICE_EXTENSION"} {:fieldname "FreeContextLock"} FreeContextLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4520
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FunctionNumber__IRB"} {:fieldname "FunctionNumber"} FunctionNumber__IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Function__SCSI_REQUEST_BLOCK"} {:fieldname "Function"} Function__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__BUS_RESET_DATA"} {:fieldname "GenerationCount"} GenerationCount__BUS_RESET_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__IRB_REQ_GET_GENERATION_COUNT"} {:fieldname "GenerationCount"} GenerationCount__IRB_REQ_GET_GENERATION_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Generation__SBP2_BUSRESET_WORKITEM"} {:fieldname "Generation"} Generation__SBP2_BUSRESET_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Get1394AddressFromDeviceObject_unnamed_tag_72"} {:fieldname "Get1394AddressFromDeviceObject"} Get1394AddressFromDeviceObject_unnamed_tag_72(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T._IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "GetConfigurationInformation"} GetConfigurationInformation_unnamed_tag_72(x: int) : int
{
  x + 880
}

function {:inline true} {:fieldmap "Mem_T.GetGenerationCount_unnamed_tag_72"} {:fieldname "GetGenerationCount"} GetGenerationCount_unnamed_tag_72(x: int) : int
{
  x + 976
}

function {:inline true} {:fieldmap "Mem_T.GetLocalHostInformation_unnamed_tag_72"} {:fieldname "GetLocalHostInformation"} GetLocalHostInformation_unnamed_tag_72(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.GetMaxSpeedBetweenDevices_unnamed_tag_72"} {:fieldname "GetMaxSpeedBetweenDevices"} GetMaxSpeedBetweenDevices_unnamed_tag_72(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "GlobalStatusContext"} GlobalStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 4176
}

function {:inline true} {:fieldmap "Mem_T.GroupScheduling__DISPATCHER_HEADER"} {:fieldname "GroupScheduling"} GroupScheduling__DISPATCHER_HEADER(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.Hand__DISPATCHER_HEADER"} {:fieldname "Hand"} Hand__DISPATCHER_HEADER(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.HandleCount__DEVICE_EXTENSION"} {:fieldname "HandleCount"} HandleCount__DEVICE_EXTENSION(x: int) : int
{
  x + 784
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "HibernateCount"} HibernateCount__DEVICE_EXTENSION(x: int) : int
{
  x + 776
}

function {:inline true} {:fieldmap "Mem_T.High1Time__KSYSTEM_TIME"} {:fieldname "High1Time"} High1Time__KSYSTEM_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.High2Time__KSYSTEM_TIME"} {:fieldname "High2Time"} High2Time__KSYSTEM_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HighQuad_unnamed_tag_68"} {:fieldname "HighQuad"} HighQuad_unnamed_tag_68(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO2"} {:fieldname "HostControllerInformation"} HostControllerInformation__DEVICE_EXTENSION(x: int) : int
{
  x + 1440
}

function {:inline true} {:fieldmap "Mem_T.HostDDIMajorVersion__FDO_DEVICE_EXTENSION"} {:fieldname "HostDDIMajorVersion"} HostDDIMajorVersion__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3472
}

function {:inline true} {:fieldmap "Mem_T.HostDDIMinorVersion__FDO_DEVICE_EXTENSION"} {:fieldname "HostDDIMinorVersion"} HostDDIMinorVersion__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3476
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO4"} {:fieldname "HostRoutineAPI"} HostRoutineAPI__DEVICE_EXTENSION(x: int) : int
{
  x + 1452
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_ID__IO_ADDRESS"} {:fieldname "IA_Destination_ID"} IA_Destination_ID__IO_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_Offset__IO_ADDRESS"} {:fieldname "IA_Destination_Offset"} IA_Destination_Offset__IO_ADDRESS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IReserved__CDB6INQUIRY"} {:fieldname "IReserved"} IReserved__CDB6INQUIRY(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_34"} {:fieldname "IdType"} IdType_unnamed_tag_34(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IdleCounter__DEVICE_EXTENSION"} {:fieldname "IdleCounter"} IdleCounter__DEVICE_EXTENSION(x: int) : int
{
  x + 788
}

function {:inline true} {:fieldmap "Mem_T.InPath_unnamed_tag_36"} {:fieldname "InPath"} InPath_unnamed_tag_36(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Index__DEBUG_LOG"} {:fieldname "Index"} Index__DEBUG_LOG(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Index__DISPATCHER_HEADER"} {:fieldname "Index"} Index__DISPATCHER_HEADER(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "Information"} Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._NODE_ADDRESS"} {:fieldname "InitiatorAddressId"} InitiatorAddressId__DEVICE_EXTENSION(x: int) : int
{
  x + 1412
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_22"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_22(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._INQUIRYDATA"} {:fieldname "InquiryData"} InquiryData__DEVICE_EXTENSION(x: int) : int
{
  x + 804
}

function {:inline true} {:fieldmap "Mem_T.Inserted__DISPATCHER_HEADER"} {:fieldname "Inserted"} Inserted__DISPATCHER_HEADER(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.Inserted__KDEVICE_QUEUE_ENTRY"} {:fieldname "Inserted"} Inserted__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.InternalStatus__SCSI_REQUEST_BLOCK"} {:fieldname "InternalStatus"} InternalStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_22"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_22(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoCount__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "IoCount"} IoCount__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IoTimeoutValue__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "IoTimeoutValue"} IoTimeoutValue__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.IoWi__SBP2_BUSRESET_WORKITEM"} {:fieldname "IoWi"} IoWi__SBP2_BUSRESET_WORKITEM(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irb__IRBIRP"} {:fieldname "Irb"} Irb__IRBIRP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irp__IRBIRP"} {:fieldname "Irp"} Irp__IRBIRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Key_unnamed_tag_74"} {:fieldname "Key"} Key_unnamed_tag_74(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LUNResetSupported__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "LUNResetSupported"} LUNResetSupported__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LastStatusBlock__DEVICE_EXTENSION"} {:fieldname "LastStatusBlock"} LastStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.LastTransactionStatus__DEVICE_EXTENSION"} {:fieldname "LastTransactionStatus"} LastTransactionStatus__DEVICE_EXTENSION(x: int) : int
{
  x + 796
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "LegacyFlags"} LegacyFlags__DEVICE_INFORMATION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.LengthAndLoginId__LOGIN_RESPONSE"} {:fieldname "LengthAndLoginId"} LengthAndLoginId__LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthAndNumLogins__QUERY_LOGIN_RESPONSE"} {:fieldname "LengthAndNumLogins"} LengthAndNumLogins__QUERY_LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_QUERY_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_18"} {:fieldname "Length"} Length_unnamed_tag_18(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Level__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Level"} Level__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Link"} Link__BUS_RESET_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ListPointer__IRBIRP"} {:fieldname "ListPointer"} ListPointer__IRBIRP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.List__WORK_QUEUE_ITEM"} {:fieldname "List"} List__WORK_QUEUE_ITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LoadEject__START_STOP_RBC"} {:fieldname "LoadEject"} LoadEject__START_STOP_RBC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LockNV__DISPATCHER_HEADER"} {:fieldname "LockNV"} LockNV__DISPATCHER_HEADER(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.LockQueue__KLOCK_QUEUE_HANDLE"} {:fieldname "LockQueue"} LockQueue__KLOCK_QUEUE_HANDLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Lock__DISPATCHER_HEADER"} {:fieldname "Lock"} Lock__DISPATCHER_HEADER(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.Lock__KSPIN_LOCK_QUEUE"} {:fieldname "Lock"} Lock__KSPIN_LOCK_QUEUE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LogEnd__DEBUG_LOG"} {:fieldname "LogEnd"} LogEnd__DEBUG_LOG(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LogEntry__DEVICE_EXTENSION"} {:fieldname "LogEntry"} LogEntry__DEVICE_EXTENSION(x: int) : int
{
  x + 4792
}

function {:inline true} {:fieldmap "Mem_T.LogStart__DEBUG_LOG"} {:fieldname "LogStart"} LogStart__DEBUG_LOG(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Logger__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Logger"} Logger__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "LogicalBlockSize"} LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LogicalUnitNumber__CDB6INQUIRY"} {:fieldname "LogicalUnitNumber"} LogicalUnitNumber__CDB6INQUIRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.LoginRespContext__DEVICE_EXTENSION"} {:fieldname "LoginRespContext"} LoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2704
}

function {:inline true} {:fieldmap "Mem_T.LoginResponseAddress__ORB_LOGIN"} {:fieldname "LoginResponseAddress"} LoginResponseAddress__ORB_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T._LOGIN_RESPONSE"} {:fieldname "LoginResponse"} LoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.LoginResponse__DEVICE_EXTENSION"} {:fieldname "LoginResponse"} LoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2700
}

function {:inline true} {:fieldmap "Mem_T.LowPart__KSYSTEM_TIME"} {:fieldname "LowPart"} LowPart__KSYSTEM_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowQuad_unnamed_tag_68"} {:fieldname "LowQuad"} LowQuad_unnamed_tag_68(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.Lun__DEVICE_INFORMATION"} {:fieldname "Lun"} Lun__DEVICE_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MODE_SELECT__CDB"} {:fieldname "MODE_SELECT"} MODE_SELECT__CDB(x: int) : int
{
  x + 1944
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE10__CDB"} {:fieldname "MODE_SENSE10"} MODE_SENSE10__CDB(x: int) : int
{
  x + 1888
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE__CDB"} {:fieldname "MODE_SENSE"} MODE_SENSE__CDB(x: int) : int
{
  x + 1852
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorVersion__GET_LOCAL_HOST_INFO8"} {:fieldname "MajorVersion"} MajorVersion__GET_LOCAL_HOST_INFO8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ManagementAgentBaseReg__DEVICE_INFORMATION"} {:fieldname "ManagementAgentBaseReg"} ManagementAgentBaseReg__DEVICE_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "ManagementEvent"} ManagementEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 2388
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrbContext__DEVICE_EXTENSION"} {:fieldname "ManagementOrbContext"} ManagementOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2216
}

function {:inline true} {:fieldmap "Mem_T._STATUS_FIFO_BLOCK"} {:fieldname "ManagementOrbStatusBlock"} ManagementOrbStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 3224
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "ManagementOrbStatusContext"} ManagementOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3528
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrbTimeout__DEVICE_INFORMATION"} {:fieldname "ManagementOrbTimeout"} ManagementOrbTimeout__DEVICE_INFORMATION(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T._ORB_MNG"} {:fieldname "ManagementOrb"} ManagementOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrb__DEVICE_EXTENSION"} {:fieldname "ManagementOrb"} ManagementOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 2212
}

function {:inline true} {:fieldmap "Mem_T.Mask__DEBUG_LOG"} {:fieldname "Mask"} Mask__DEBUG_LOG(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncReadRequest"} MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncWriteRequest"} MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaxCdbLength__DEVICE_INFORMATION"} {:fieldname "MaxCdbLength"} MaxCdbLength__DEVICE_INFORMATION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__DEVICE_INFORMATION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__DEVICE_INFORMATION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__FDO_DEVICE_EXTENSION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.MaxControllerPhySpeed__DEVICE_EXTENSION"} {:fieldname "MaxControllerPhySpeed"} MaxControllerPhySpeed__DEVICE_EXTENSION(x: int) : int
{
  x + 1428
}

function {:inline true} {:fieldmap "Mem_T.MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP"} {:fieldname "MaxDmaBufferSize"} MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxOrbListDepth__DEVICE_EXTENSION"} {:fieldname "MaxOrbListDepth"} MaxOrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.MaxPages__PAGE_TABLE_CONTEXT"} {:fieldname "MaxPages"} MaxPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "MaxSegmentSize"} MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__STRING"} {:fieldname "MaximumLength"} MaximumLength__STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__IO_SCSI_CAPABILITIES"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__IO_SCSI_CAPABILITIES"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MdlAddress__IRP"} {:fieldname "MdlAddress"} MdlAddress__IRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_READ"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_WRITE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.MediumType__MODE_PARAMETER_HEADER"} {:fieldname "MediumType"} MediumType__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorVersion__GET_LOCAL_HOST_INFO8"} {:fieldname "MinorVersion"} MinorVersion__GET_LOCAL_HOST_INFO8(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModeDataLength__MODE_PARAMETER_HEADER"} {:fieldname "ModeDataLength"} ModeDataLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeafBufferSize"} ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeaf"} ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MultiplicationFactor__MODE_CACHING_PAGE"} {:fieldname "MultiplicationFactor"} MultiplicationFactor__MODE_CACHING_PAGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.NA_Bus_Number__NODE_ADDRESS"} {:fieldname "NA_Bus_Number"} NA_Bus_Number__NODE_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NA_Node_Number__NODE_ADDRESS"} {:fieldname "NA_Node_Number"} NA_Node_Number__NODE_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NextContextToFree__DEVICE_EXTENSION"} {:fieldname "NextContextToFree"} NextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 744
}

function {:inline true} {:fieldmap "Mem_T.NextOrbAddress__ORB_EXT_CMD"} {:fieldname "NextOrbAddress"} NextOrbAddress__ORB_EXT_CMD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__KSPIN_LOCK_QUEUE"} {:fieldname "Next"} Next__KSPIN_LOCK_QUEUE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__SINGLE_LIST_ENTRY"} {:fieldname "Next"} Next__SINGLE_LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Next"} Next__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT"} {:fieldname "NodeAddress"} NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NodeAndLoginId__QUERY_RESPONSE_ELEMENT"} {:fieldname "NodeAndLoginId"} NodeAndLoginId__QUERY_RESPONSE_ELEMENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeId__B1394_ADDRESS"} {:fieldname "NodeId"} NodeId__B1394_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumPDOsStarted__FDO_DEVICE_EXTENSION"} {:fieldname "NumPDOsStarted"} NumPDOsStarted__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.NumberOfBlocks__MODE_PARAMETER_BLOCK"} {:fieldname "NumberOfBlocks"} NumberOfBlocks__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "NumberOfLogicalBlocks"} NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.NumberOfPages__PAGE_TABLE_CONTEXT"} {:fieldname "NumberOfPages"} NumberOfPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Objects__DEVICE_RELATIONS"} {:fieldname "Objects"} Objects__DEVICE_RELATIONS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OctletPart__OCTLET"} {:fieldname "OctletPart"} OctletPart__OCTLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Octlet__IRBIRP"} {:fieldname "Octlet"} Octlet__IRBIRP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Off_High__ADDRESS_OFFSET"} {:fieldname "Off_High"} Off_High__ADDRESS_OFFSET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_High__B1394_ADDRESS"} {:fieldname "Off_High"} Off_High__B1394_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__ADDRESS_OFFSET"} {:fieldname "Off_Low"} Off_Low__ADDRESS_OFFSET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__B1394_ADDRESS"} {:fieldname "Off_Low"} Off_Low__B1394_ADDRESS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.OldIrql__KLOCK_QUEUE_HANDLE"} {:fieldname "OldIrql"} OldIrql__KLOCK_QUEUE_HANDLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB10"} {:fieldname "OperationCode"} OperationCode__CDB10(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB6GENERIC"} {:fieldname "OperationCode"} OperationCode__CDB6GENERIC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_EXT_CMD"} {:fieldname "OrbInfo"} OrbInfo__ORB_EXT_CMD(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_MNG"} {:fieldname "OrbInfo"} OrbInfo__ORB_MNG(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_QUERY_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_TASK_MNG"} {:fieldname "OrbInfo"} OrbInfo__ORB_TASK_MNG(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__ASYNC_REQUEST_CONTEXT"} {:fieldname "OrbListDepth"} OrbListDepth__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 548
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__DEVICE_EXTENSION"} {:fieldname "OrbListDepth"} OrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.OrbListOwnedCount__DEVICE_EXTENSION"} {:fieldname "OrbListOwnedCount"} OrbListOwnedCount__DEVICE_EXTENSION(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.P_KTHREAD"} {:fieldname "OrbListOwner"} OrbListOwner__DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T.OrbListSpinLock__DEVICE_EXTENSION"} {:fieldname "OrbListSpinLock"} OrbListSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 412
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "OrbList"} OrbList__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbPoolContext__DEVICE_EXTENSION"} {:fieldname "OrbPoolContext"} OrbPoolContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3052
}

function {:inline true} {:fieldmap "Mem_T.OrbReadPayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbReadPayloadMask"} OrbReadPayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1432
}

function {:inline true} {:fieldmap "Mem_T.OrbWritePayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbWritePayloadMask"} OrbWritePayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1436
}

function {:inline true} {:fieldmap "Mem_T._ORB_EXT_CMD"} {:fieldname "Orb"} Orb__ARCP_ORB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalRequest__SCSI_REQUEST_BLOCK"} {:fieldname "OriginalRequest"} OriginalRequest__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.OriginalSrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "OriginalSrb"} OriginalSrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 544
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_22"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_22(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_5"} {:fieldname "Overlay"} Overlay_unnamed_tag_5(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PFBit__MODE_SELECT"} {:fieldname "PFBit"} PFBit__MODE_SELECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Packet__ASYNC_REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 540
}

function {:inline true} {:fieldmap "Mem_T.Packet__REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__REQUEST_CONTEXT(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.PageCode__CDB6INQUIRY"} {:fieldname "PageCode"} PageCode__CDB6INQUIRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_CACHING_PAGE"} {:fieldname "PageCode"} PageCode__MODE_CACHING_PAGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_SENSE"} {:fieldname "PageCode"} PageCode__MODE_SENSE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PageLength__MODE_CACHING_PAGE"} {:fieldname "PageLength"} PageLength__MODE_CACHING_PAGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageSavable__MODE_CACHING_PAGE"} {:fieldname "PageSavable"} PageSavable__MODE_CACHING_PAGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PageTableContext__ASYNC_REQUEST_CONTEXT"} {:fieldname "PageTableContext"} PageTableContext__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.PageTable__PAGE_TABLE_CONTEXT"} {:fieldname "PageTable"} PageTable__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "Page"} Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PagingPathCount"} PagingPathCount__DEVICE_EXTENSION(x: int) : int
{
  x + 772
}

function {:inline true} {:fieldmap "Mem_T.ParameterListLength__MODE_SELECT"} {:fieldname "ParameterListLength"} ParameterListLength__MODE_SELECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PartialMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "PartialMdl"} PartialMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.Password__ORB_LOGIN"} {:fieldname "Password"} Password__ORB_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pc__MODE_SENSE"} {:fieldname "Pc"} Pc__MODE_SENSE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Pdo__FDO_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingOrbList"} PendingOrbList__DEVICE_EXTENSION(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "PendingPowerIrp"} PendingPowerIrp__DEVICE_EXTENSION(x: int) : int
{
  x + 768
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4"} {:fieldname "PhysAddrMappingRoutine"} PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pointer__IO_STATUS_BLOCK"} {:fieldname "Pointer"} Pointer__IO_STATUS_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Portdriver__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Portdriver"} Portdriver__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PowerConditions__START_STOP_RBC"} {:fieldname "PowerConditions"} PowerConditions__START_STOP_RBC(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "PowerDeferredIrp"} PowerDeferredIrp__DEVICE_EXTENSION(x: int) : int
{
  x + 760
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.Processor__DISPATCHER_HEADER"} {:fieldname "Processor"} Processor__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductIdOffset"} ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ProductId__INQUIRYDATA"} {:fieldname "ProductId"} ProductId__INQUIRYDATA(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionLevel__INQUIRYDATA"} {:fieldname "ProductRevisionLevel"} ProductRevisionLevel__INQUIRYDATA(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductRevisionOffset"} ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.PropertyId__STORAGE_PROPERTY_QUERY"} {:fieldname "PropertyId"} PropertyId__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__QUADLET"} {:fieldname "QuadPart"} QuadPart__QUADLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__ULARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__ULARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginRespContext__DEVICE_EXTENSION"} {:fieldname "QueryLoginRespContext"} QueryLoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2880
}

function {:inline true} {:fieldmap "Mem_T._QUERY_LOGIN_RESPONSE"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginResponse__DEVICE_EXTENSION"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2876
}

function {:inline true} {:fieldmap "Mem_T.QueryResponseAddress__ORB_QUERY_LOGIN"} {:fieldname "QueryResponseAddress"} QueryResponseAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.QueryType__STORAGE_PROPERTY_QUERY"} {:fieldname "QueryType"} QueryType__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.QueueControlFlags__DISPATCHER_HEADER"} {:fieldname "QueueControlFlags"} QueueControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "QueueSortKey"} QueueSortKey__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RawDeviceOK__DEVICE_CAPABILITIES"} {:fieldname "RawDeviceOK"} RawDeviceOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.ReLoginCount__DEVICE_EXTENSION"} {:fieldname "ReLoginCount"} ReLoginCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4784
}

function {:inline true} {:fieldmap "Mem_T.ReadDisableCache__MODE_CACHING_PAGE"} {:fieldname "ReadDisableCache"} ReadDisableCache__MODE_CACHING_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ReadRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "ReadRetensionPriority"} ReadRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.ReconnectHold__DEVICE_INFORMATION"} {:fieldname "ReconnectHold"} ReconnectHold__DEVICE_INFORMATION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.RegHandle__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "RegHandle"} RegHandle__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__INQUIRYDATA"} {:fieldname "RemovableMedia"} RemovableMedia__INQUIRYDATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "RemovableMedia"} RemovableMedia__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Removable__DEVICE_CAPABILITIES"} {:fieldname "Removable"} Removable__DEVICE_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.RemoveEvent__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "RemoveEvent"} RemoveEvent__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.Removed__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "Removed"} Removed__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ADDRESS_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ADDRESS_CONTEXT(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.RequestNumber__SBP2_REQUEST"} {:fieldname "RequestNumber"} RequestNumber__SBP2_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RequestType__REQUEST_CONTEXT"} {:fieldname "RequestType"} RequestType__REQUEST_CONTEXT(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.RequestorMode__IRP"} {:fieldname "RequestorMode"} RequestorMode__IRP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Required1394Offset"} Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__CDB6INQUIRY"} {:fieldname "Reserved1"} Reserved1__CDB6INQUIRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__DISPATCHER_HEADER"} {:fieldname "Reserved1"} Reserved1__DISPATCHER_HEADER(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Reserved2__DISPATCHER_HEADER"} {:fieldname "Reserved2"} Reserved2__DISPATCHER_HEADER(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Reserved3__DISPATCHER_HEADER"} {:fieldname "Reserved3"} Reserved3__DISPATCHER_HEADER(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.Reserved5__DISPATCHER_HEADER"} {:fieldname "Reserved5"} Reserved5__DISPATCHER_HEADER(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.ReservedMdl__DEVICE_EXTENSION"} {:fieldname "ReservedMdl"} ReservedMdl__DEVICE_EXTENSION(x: int) : int
{
  x + 800
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ADDRESS_CONTEXT"} {:fieldname "Reserved"} Reserved__ADDRESS_CONTEXT(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Reserved"} Reserved__DEVICE_EXTENSION(x: int) : int
{
  x + 792
}

function {:inline true} {:fieldmap "Mem_T.Reserved__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "Reserved"} Reserved__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ORB_QUERY_LOGIN"} {:fieldname "Reserved"} Reserved__ORB_QUERY_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__BUS_RESET_DATA"} {:fieldname "ResetContext"} ResetContext__BUS_RESET_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetContext"} ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetRoutine"} ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.RetrieveTextLeaf_unnamed_tag_73"} {:fieldname "RetrieveTextLeaf"} RetrieveTextLeaf_unnamed_tag_73(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SPBit__MODE_SELECT"} {:fieldname "SPBit"} SPBit__MODE_SELECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.START_STOP_RBC__CDB_RBC"} {:fieldname "START_STOP_RBC"} START_STOP_RBC__CDB_RBC(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.ScsiStatus__SCSI_REQUEST_BLOCK"} {:fieldname "ScsiStatus"} ScsiStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Scsi_unnamed_tag_8"} {:fieldname "Scsi"} Scsi_unnamed_tag_8(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBufferLength__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBufferLength"} SenseInfoBufferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBuffer"} SenseInfoBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SenseKey__SENSE_DATA"} {:fieldname "SenseKey"} SenseKey__SENSE_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "SerialNumberOffset"} SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Sig_LOG_ENTRY32"} {:fieldname "Sig"} Sig_LOG_ENTRY32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SortKey__KDEVICE_QUEUE_ENTRY"} {:fieldname "SortKey"} SortKey__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SrbFlags__SCSI_REQUEST_BLOCK"} {:fieldname "SrbFlags"} SrbFlags__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SrbStatus__SCSI_REQUEST_BLOCK"} {:fieldname "SrbStatus"} SrbStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SrbType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "SrbType"} SrbType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Srb__ASYNC_REQUEST_CONTEXT"} {:fieldname "Srb"} Srb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Srb_unnamed_tag_26"} {:fieldname "Srb"} Srb_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "StartEvent"} StartEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 2544
}

function {:inline true} {:fieldmap "Mem_T.StartNextPacketCount__DEVICE_EXTENSION"} {:fieldname "StartNextPacketCount"} StartNextPacketCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4780
}

function {:inline true} {:fieldmap "Mem_T.Start__START_STOP_RBC"} {:fieldname "Start"} Start__START_STOP_RBC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_39"} {:fieldname "State"} State_unnamed_tag_39(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_MNG"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_MNG(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_QUERY_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_TASK_MNG"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_TASK_MNG(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusFifoBase__DEVICE_EXTENSION"} {:fieldname "StatusFifoBase"} StatusFifoBase__DEVICE_EXTENSION(x: int) : int
{
  x + 4368
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "StatusFifoListHead"} StatusFifoListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4348
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "StatusFifoLock"} StatusFifoLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4364
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SupportedAsynchronousEvents__IO_SCSI_CAPABILITIES"} {:fieldname "SupportedAsynchronousEvents"} SupportedAsynchronousEvents__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SurpriseRemovalOK__DEVICE_CAPABILITIES"} {:fieldname "SurpriseRemovalOK"} SurpriseRemovalOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_1"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_1(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 756
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__FDO_DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TL_Length__TEXTUAL_LEAF"} {:fieldname "TL_Length"} TL_Length__TEXTUAL_LEAF(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Tag__ASYNC_REQUEST_CONTEXT"} {:fieldname "Tag"} Tag__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.TaggedQueuing__IO_SCSI_CAPABILITIES"} {:fieldname "TaggedQueuing"} TaggedQueuing__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TargetResetSupported__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "TargetResetSupported"} TargetResetSupported__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.TaskOrbContext__DEVICE_EXTENSION"} {:fieldname "TaskOrbContext"} TaskOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2040
}

function {:inline true} {:fieldmap "Mem_T._STATUS_FIFO_BLOCK"} {:fieldname "TaskOrbStatusBlock"} TaskOrbStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 3700
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "TaskOrbStatusContext"} TaskOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 4004
}

function {:inline true} {:fieldmap "Mem_T._ORB_TASK_MNG"} {:fieldname "TaskOrb"} TaskOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.TaskOrb__DEVICE_EXTENSION"} {:fieldname "TaskOrb"} TaskOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 2036
}

function {:inline true} {:fieldmap "Mem_T.ThreadControlFlags__DISPATCHER_HEADER"} {:fieldname "ThreadControlFlags"} ThreadControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.TimeOutValue__SCSI_REQUEST_BLOCK"} {:fieldname "TimeOutValue"} TimeOutValue__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.Timer2CancelPending__DISPATCHER_HEADER"} {:fieldname "Timer2CancelPending"} Timer2CancelPending__DISPATCHER_HEADER(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Timer2Disabled__DISPATCHER_HEADER"} {:fieldname "Timer2Disabled"} Timer2Disabled__DISPATCHER_HEADER(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.Timer2Expiring__DISPATCHER_HEADER"} {:fieldname "Timer2Expiring"} Timer2Expiring__DISPATCHER_HEADER(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Timer2Flags__DISPATCHER_HEADER"} {:fieldname "Timer2Flags"} Timer2Flags__DISPATCHER_HEADER(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Timer2Inserted__DISPATCHER_HEADER"} {:fieldname "Timer2Inserted"} Timer2Inserted__DISPATCHER_HEADER(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Timer2Running__DISPATCHER_HEADER"} {:fieldname "Timer2Running"} Timer2Running__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Timer2SetPending__DISPATCHER_HEADER"} {:fieldname "Timer2SetPending"} Timer2SetPending__DISPATCHER_HEADER(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.TimerControlFlags__DISPATCHER_HEADER"} {:fieldname "TimerControlFlags"} TimerControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TimerDpc"} TimerDpc__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.TimerMiscFlags__DISPATCHER_HEADER"} {:fieldname "TimerMiscFlags"} TimerMiscFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TransactionType__ADDRESS_CONTEXT"} {:fieldname "TransactionType"} TransactionType__ADDRESS_CONTEXT(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Type__DEVICE_EXTENSION"} {:fieldname "Type"} Type__DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.Type__FDO_DEVICE_EXTENSION"} {:fieldname "Type"} Type__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_28"} {:fieldname "Type"} Type_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_36"} {:fieldname "Type"} Type_unnamed_tag_36(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_39"} {:fieldname "Type"} Type_unnamed_tag_39(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UniSymLinkName"} UniSymLinkName__DEVICE_EXTENSION(x: int) : int
{
  x + 1304
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitCharacteristics__DEVICE_INFORMATION"} {:fieldname "UnitCharacteristics"} UnitCharacteristics__DEVICE_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryBufferSize"} UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryLocation"} UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectory"} UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryBufferSize"} UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryLocation"} UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectory"} UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.UsageNotification_unnamed_tag_8"} {:fieldname "UsageNotification"} UsageNotification_unnamed_tag_8(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "VendorIdOffset"} VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VendorId__INQUIRYDATA"} {:fieldname "VendorId"} VendorId__INQUIRYDATA(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeafBufferSize"} VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeaf"} VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WaitListHead__DISPATCHER_HEADER"} {:fieldname "WaitListHead"} WaitListHead__DISPATCHER_HEADER(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.Wake__DISPATCHER_HEADER"} {:fieldname "Wake"} Wake__DISPATCHER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.WorkItem__IO_WORKITEM"} {:fieldname "WorkItem"} WorkItem__IO_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "WriteCacheDisable"} WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheEnable__MODE_CACHING_PAGE"} {:fieldname "WriteCacheEnable"} WriteCacheEnable__MODE_CACHING_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.WriteRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "WriteRetensionPriority"} WriteRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.asUlong_unnamed_tag_80"} {:fieldname "asUlong"} asUlong_unnamed_tag_80(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.b__LOG_SIGNATURE"} {:fieldname "b"} b__LOG_SIGNATURE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulAccessType"} fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_READ"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_WRITE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_BUS_RESET"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_BUS_RESET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__NOTIFICATION_INFO_WXP"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "hAddressRange"} hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.l__LOG_SIGNATURE"} {:fieldname "l"} l__LOG_SIGNATURE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "nAddressesToFree"} nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_READ"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_WRITE"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "nLength"} nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "nLevel"} nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToRead__IRB_REQ_ASYNC_READ"} {:fieldname "nNumberOfBytesToRead"} nNumberOfBytesToRead__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE"} {:fieldname "nNumberOfBytesToWrite"} nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nSpeed__IRB_REQ_ASYNC_READ"} {:fieldname "nSpeed"} nSpeed__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "pAddressRange"} pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__IRB"} {:fieldname "u"} u__IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__OCTLET"} {:fieldname "u"} u__OCTLET(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.u__QUADLET"} {:fieldname "u"} u__QUADLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.u__SBP2_REQUEST"} {:fieldname "u"} u__SBP2_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_READ"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_WRITE"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulLength_unnamed_tag_74"} {:fieldname "ulLength"} ulLength_unnamed_tag_74(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "ulNumberOfDestinations"} ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniGenericName"} uniGenericName__DEVICE_INFORMATION(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniModelId"} uniModelId__DEVICE_INFORMATION(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniVendorId"} uniVendorId__DEVICE_INFORMATION(x: int) : int
{
  x + 232
}

const {:string "%08x%08x"} unique strConst__li2bpl28: int;

const {:string "%ws %ws IEEE 1394 SBP2 Device"} unique strConst__li2bpl33: int;

const {:string "&"} unique strConst__li2bpl39: int;

const {:string "&REV"} unique strConst__li2bpl42: int;

const {:string "1.0"} unique strConst__li2bpl27: int;

const {:string "<NULL>"} unique strConst__li2bpl1: int;

const {:string "CmdSetId"} unique strConst__li2bpl40: int;

const {:string "D"} unique strConst__li2bpl8: int;

const {:string "F"} unique strConst__li2bpl9: int;

const {:string "FireLite Drive  "} unique strConst__li2bpl21: int;

const {:string "FireREX Storage"} unique strConst__li2bpl15: int;

const {:string "GSA-5163D Super Multi DVD Rewriter"} unique strConst__li2bpl14: int;

const {:string "GenCdRom"} unique strConst__li2bpl56: int;

const {:string "GenChanger"} unique strConst__li2bpl59: int;

const {:string "GenDisk"} unique strConst__li2bpl52: int;

const {:string "GenOptical"} unique strConst__li2bpl58: int;

const {:string "GenPrinter"} unique strConst__li2bpl54: int;

const {:string "GenSbp2Device"} unique strConst__li2bpl51: int;

const {:string "GenScanner"} unique strConst__li2bpl57: int;

const {:string "GenSequential"} unique strConst__li2bpl53: int;

const {:string "GenWorm"} unique strConst__li2bpl55: int;

const {:string "HDD USB 2.0/1394A"} unique strConst__li2bpl19: int;

const {:string "HL-DT-ST"} unique strConst__li2bpl23: int;

const {:string "IV00"} unique strConst__li2bpl44: int;

const {:string "IV00XXXX"} unique strConst__li2bpl45: int;

const {:string "Iomega"} unique strConst__li2bpl18: int;

const {:string "LUN"} unique strConst__li2bpl41: int;

const {:string "LUN %d"} unique strConst__li2bpl32: int;

const {:string "LegacyFlags"} unique strConst__li2bpl22: int;

const {:string "NULL"} unique strConst__li2bpl0: int;

const {:string "Niveus"} unique strConst__li2bpl43: int;

const {:string "P"} unique strConst__li2bpl10: int;

const {:string "PL3507"} unique strConst__li2bpl17: int;

const {:string "Prolific"} unique strConst__li2bpl16: int;

const {:string "S"} unique strConst__li2bpl7: int;

const {:string "SBP2\\"} unique strConst__li2bpl37: int;

const {:string "SBP2\\%d&%d&%d"} unique strConst__li2bpl30: int;

const {:string "SBP2\\%ws&%ws&LUN%x"} unique strConst__li2bpl47: int;

const {:string "SBP2\\%ws&%ws&LUN%x&REV%x"} unique strConst__li2bpl46: int;

const {:string "SBP2\\UNKNOWN VENDOR&UNKNOWN MODEL&LUN%x"} unique strConst__li2bpl48: int;

const {:string "Sbp2"} unique strConst__li2bpl26: int;

const {:string "TI STORAGELYNX!!"} unique strConst__li2bpl24: int;

const {:string "UNKNOWN MODEL"} unique strConst__li2bpl31: int;

const {:string "UNKNOWN VENDOR AND MODEL IEEE 1394 SBP2 Device"} unique strConst__li2bpl34: int;

const {:string "UNKNOWN VENDOR&UNKNOWN MODEL"} unique strConst__li2bpl38: int;

const {:string "UNKNOWN_MODEL"} unique strConst__li2bpl49: int;

const {:string "Unknown"} unique strConst__li2bpl61: int;

const {:string "VGP-XL1B"} unique strConst__li2bpl13: int;

const {:string "Vendor"} unique strConst__li2bpl25: int;

const {:string "Warning: Driver may have queued the IRP without marking it as pending inside the locked state."} unique strConst__li2bpl4: int;

const {:string "\\Device\\Sbp2"} unique strConst__li2bpl36: int;

const {:string "\\Device\\Sbp2Port%x"} unique strConst__li2bpl35: int;

const {:string "\\Device\\Sbp2\\%ws&%ws&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl50: int;

const {:string "\\Device\\Sbp2\\UNKNOWN_VENDOR&UNKNOWN_MODEL&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl60: int;

const {:string "\\DosDevices\\Sbp2&LUN%x&%08x%08x&Instance%02d"} unique strConst__li2bpl29: int;

const {:string "callee"} unique strConst__li2bpl2: int;

const {:string "f"} unique strConst__li2bpl11: int;

const {:string "fdo"} unique strConst__li2bpl6: int;

const {:string "halt"} unique strConst__li2bpl3: int;

const {:string "iPod"} unique strConst__li2bpl20: int;

const {:string "p"} unique strConst__li2bpl12: int;

const {:string "pdo"} unique strConst__li2bpl5: int;

const {:allocated} li2bplFunctionConstant363: int;

axiom li2bplFunctionConstant363 == 363;

const {:allocated} li2bplFunctionConstant364: int;

axiom li2bplFunctionConstant364 == 364;

const {:allocated} li2bplFunctionConstant365: int;

axiom li2bplFunctionConstant365 == 365;

const {:allocated} li2bplFunctionConstant366: int;

axiom li2bplFunctionConstant366 == 366;

const {:allocated} li2bplFunctionConstant367: int;

axiom li2bplFunctionConstant367 == 367;

const {:allocated} li2bplFunctionConstant368: int;

axiom li2bplFunctionConstant368 == 368;

const {:allocated} li2bplFunctionConstant369: int;

axiom li2bplFunctionConstant369 == 369;

const {:allocated} li2bplFunctionConstant370: int;

axiom li2bplFunctionConstant370 == 370;

const {:allocated} li2bplFunctionConstant371: int;

axiom li2bplFunctionConstant371 == 371;

const {:allocated} li2bplFunctionConstant375: int;

axiom li2bplFunctionConstant375 == 375;

const {:allocated} li2bplFunctionConstant378: int;

axiom li2bplFunctionConstant378 == 378;

const {:allocated} li2bplFunctionConstant385: int;

axiom li2bplFunctionConstant385 == 385;

const {:allocated} li2bplFunctionConstant389: int;

axiom li2bplFunctionConstant389 == 389;

const {:allocated} li2bplFunctionConstant391: int;

axiom li2bplFunctionConstant391 == 391;

const {:allocated} li2bplFunctionConstant392: int;

axiom li2bplFunctionConstant392 == 392;

const {:allocated} li2bplFunctionConstant399: int;

axiom li2bplFunctionConstant399 == 399;

const {:allocated} li2bplFunctionConstant461: int;

axiom li2bplFunctionConstant461 == 461;

const {:allocated} li2bplFunctionConstant463: int;

axiom li2bplFunctionConstant463 == 463;

const {:allocated} li2bplFunctionConstant464: int;

axiom li2bplFunctionConstant464 == 464;

const {:allocated} li2bplFunctionConstant465: int;

axiom li2bplFunctionConstant465 == 465;

const {:allocated} li2bplFunctionConstant523: int;

axiom li2bplFunctionConstant523 == 523;

const {:allocated} li2bplFunctionConstant641: int;

axiom li2bplFunctionConstant641 == 641;

const {:allocated} li2bplFunctionConstant694: int;

axiom li2bplFunctionConstant694 == 694;

const {:allocated} li2bplFunctionConstant697: int;

axiom li2bplFunctionConstant697 == 697;

const {:allocated} li2bplFunctionConstant698: int;

axiom li2bplFunctionConstant698 == 698;

const {:allocated} li2bplFunctionConstant700: int;

axiom li2bplFunctionConstant700 == 700;

const {:allocated} li2bplFunctionConstant799: int;

axiom li2bplFunctionConstant799 == 799;

const {:allocated} li2bplFunctionConstant801: int;

axiom li2bplFunctionConstant801 == 801;

const {:allocated} li2bplFunctionConstant804: int;

axiom li2bplFunctionConstant804 == 804;

implementation {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#0(actual_PdoExtension_1: int) returns (Tmp_165: int)
{
  var {:pointer} Tmp_166: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} Tmp_168: int;
  var {:pointer} Tmp_169: int;
  var {:scalar} Tmp_170: int;
  var {:scalar} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:pointer} Tmp_173: int;
  var {:pointer} Tmp_174: int;
  var {:scalar} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:pointer} Tmp_178: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:pointer} Tmp_183: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:scalar} Tmp_187: int;
  var {:scalar} Tmp_188: int;
  var {:scalar} Tmp_189: int;
  var {:pointer} Tmp_190: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} getLocalHostInfo7: int;
  var {:scalar} Tmp_192: int;
  var {:pointer} Tmp_193: int;
  var {:pointer} Tmp_194: int;
  var {:scalar} Tmp_195: int;
  var {:scalar} Tmp_196: int;
  var {:scalar} Tmp_197: int;
  var {:pointer} Tmp_198: int;
  var {:pointer} Tmp_199: int;
  var {:scalar} Tmp_200: int;
  var {:scalar} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:pointer} packet: int;
  var {:scalar} status_4: int;
  var {:pointer} Tmp_203: int;
  var {:pointer} Tmp_204: int;
  var {:scalar} Tmp_205: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:pointer} Tmp_209: int;
  var {:scalar} Tmp_210: int;
  var {:pointer} Tmp_211: int;
  var {:pointer} Tmp_212: int;
  var {:pointer} PdoExtension_1: int;

  anon0:
    call {:si_unique_call 1821} getLocalHostInfo7 := __HAVOC_malloc(24);
    call {:si_unique_call 1822} packet := __HAVOC_malloc(4);
    PdoExtension_1 := actual_PdoExtension_1;
    call {:si_unique_call 1823} Tmp_167 := __HAVOC_malloc(4);
    call {:si_unique_call 1824} Tmp_169 := __HAVOC_malloc(4);
    call {:si_unique_call 1825} Tmp_185 := __HAVOC_malloc(4);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    Mem_T.P_IRBIRP[packet] := 0;
    call {:si_unique_call 1826} AllocateIrpAndIrb(PdoExtension_1, packet);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_178;
    assume {:nonnull} Tmp_178 != 0;
    assume Tmp_178 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_173;
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_172;
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_180;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    assume false;
    return;

  anon83_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet] == 0;
    Tmp_165 := -1073741670;
    goto L1;

  L1:
    return;
}



procedure {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#0(actual_PdoExtension_1: int) returns (Tmp_165: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} Tmp_165 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#1(actual_PdoExtension_1: int) returns (Tmp_165: int)
{
  var {:pointer} Tmp_166: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} Tmp_168: int;
  var {:pointer} Tmp_169: int;
  var {:scalar} Tmp_170: int;
  var {:scalar} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:pointer} Tmp_173: int;
  var {:pointer} Tmp_174: int;
  var {:scalar} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:pointer} Tmp_178: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:pointer} Tmp_183: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:scalar} Tmp_187: int;
  var {:scalar} Tmp_188: int;
  var {:scalar} Tmp_189: int;
  var {:pointer} Tmp_190: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} getLocalHostInfo7: int;
  var {:scalar} Tmp_192: int;
  var {:pointer} Tmp_193: int;
  var {:pointer} Tmp_194: int;
  var {:scalar} Tmp_195: int;
  var {:scalar} Tmp_196: int;
  var {:scalar} Tmp_197: int;
  var {:pointer} Tmp_198: int;
  var {:pointer} Tmp_199: int;
  var {:scalar} Tmp_200: int;
  var {:scalar} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:pointer} packet: int;
  var {:scalar} status_4: int;
  var {:pointer} Tmp_203: int;
  var {:pointer} Tmp_204: int;
  var {:scalar} Tmp_205: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:pointer} Tmp_209: int;
  var {:scalar} Tmp_210: int;
  var {:pointer} Tmp_211: int;
  var {:pointer} Tmp_212: int;
  var {:pointer} PdoExtension_1: int;
  var vslice_dummy_var_2876: int;
  var vslice_dummy_var_2877: int;
  var vslice_dummy_var_2878: int;

  anon0:
    call {:si_unique_call 1827} getLocalHostInfo7 := __HAVOC_malloc(24);
    call {:si_unique_call 1828} packet := __HAVOC_malloc(4);
    PdoExtension_1 := actual_PdoExtension_1;
    call {:si_unique_call 1829} Tmp_167 := __HAVOC_malloc(4);
    call {:si_unique_call 1830} Tmp_169 := __HAVOC_malloc(4);
    call {:si_unique_call 1831} Tmp_185 := __HAVOC_malloc(4);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    Mem_T.P_IRBIRP[packet] := 0;
    call {:si_unique_call 1832} AllocateIrpAndIrb(PdoExtension_1, packet);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_178;
    assume {:nonnull} Tmp_178 != 0;
    assume Tmp_178 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_173;
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_172;
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_180;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1833} status_4 := Sbp2SendRequest#0(PdoExtension_1, Mem_T.P_IRBIRP[packet], 2);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} status_4 < 0;
    goto L121;

  L121:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1834} DeAllocateIrpAndIrb(PdoExtension_1, Mem_T.P_IRBIRP[packet]);
    Tmp_165 := status_4;
    goto L1;

  L1:
    return;

  anon84_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_199;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  L32:
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_204;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_190;
    assume {:nonnull} Tmp_190 != 0;
    assume Tmp_190 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_193;
    assume {:nonnull} Tmp_193 != 0;
    assume Tmp_193 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_166;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_166 != 0;
    assume Tmp_166 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1835} status_4 := Sbp2SendRequest#0(PdoExtension_1, Mem_T.P_IRBIRP[packet], 2);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} status_4 < 0;
    goto L121;

  anon85_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    Tmp_189 := 160;
    goto L50;

  L50:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    Tmp_191 := 160;
    goto L71;

  L71:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  L64:
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_212;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_174;
    assume {:nonnull} Tmp_174 != 0;
    assume Tmp_174 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_211;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_209;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1836} status_4 := Sbp2SendRequest#0(PdoExtension_1, Mem_T.P_IRBIRP[packet], 2);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_4 < 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_169;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    havoc Tmp_182;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_187;
    call {:si_unique_call 1837} WPP_SF_q(Tmp_187, 119, Tmp_182, PdoExtension_1);
    goto L121;

  anon106_Then:
    goto L121;

  anon123_Then:
    goto L121;

  anon105_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L121;

  anon96_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_183;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_206;
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_202;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_207;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1838} status_4 := Sbp2SendRequest#0(PdoExtension_1, Mem_T.P_IRBIRP[packet], 2);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} status_4 < 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_185;
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    havoc Tmp_177;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_196;
    call {:si_unique_call 1839} WPP_SF_q(Tmp_196, 120, Tmp_177, PdoExtension_1);
    goto L139;

  L139:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_176;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    status_4 := 0;
    goto L121;

  anon104_Then:
    goto L139;

  anon122_Then:
    goto L139;

  anon103_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L139;

  anon97_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_175;
    goto L113;

  L113:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_198;
    assume {:nonnull} Tmp_198 != 0;
    assume Tmp_198 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_179;
    assume {:nonnull} Tmp_179 != 0;
    assume Tmp_179 > 0;
    havoc Tmp_205;
    goto L116;

  L116:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_186;
    assume {:nonnull} Tmp_186 != 0;
    assume Tmp_186 > 0;
    goto L120;

  L120:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_167;
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    havoc Tmp_184;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_197;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_168;
    assume {:nonnull} Tmp_168 != 0;
    assume Tmp_168 > 0;
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc vslice_dummy_var_2876;
    havoc vslice_dummy_var_2877;
    havoc vslice_dummy_var_2878;
    call {:si_unique_call 1840} WPP_SF_qDDD(Tmp_197, 121, Tmp_184, PdoExtension_1, vslice_dummy_var_2876, vslice_dummy_var_2877, vslice_dummy_var_2878);
    goto L121;

  anon102_Then:
    goto L121;

  anon120_Then:
    goto L121;

  anon101_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L121;

  anon119_Then:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_195;
    goto L134;

  L134:
    Tmp_205 := Tmp_195;
    goto L116;

  anon100_Then:
    Tmp_195 := 2093056;
    goto L134;

  anon99_Then:
    Tmp_175 := 2093056;
    goto L113;

  anon98_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_181;
    assume {:nonnull} Tmp_181 != 0;
    assume Tmp_181 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_203;
    assume {:nonnull} Tmp_203 != 0;
    assume Tmp_203 > 0;
    havoc Tmp_192;
    goto L137;

  L137:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_194;
    assume {:nonnull} Tmp_194 != 0;
    assume Tmp_194 > 0;
    goto L120;

  anon121_Then:
    Tmp_192 := 2093056;
    goto L137;

  anon95_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_191;
    goto L71;

  anon115_Then:
    goto L64;

  anon116_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    Tmp_200 := 144;
    goto L75;

  L75:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon94_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_200;
    goto L75;

  anon117_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    Tmp_201 := 128;
    goto L79;

  L79:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon93_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_201;
    goto L79;

  anon87_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    Tmp_210 := 112;
    goto L83;

  L83:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon92_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_210;
    goto L83;

  anon91_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_189;
    goto L50;

  anon112_Then:
    goto L43;

  anon113_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    Tmp_188 := 144;
    goto L54;

  L54:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon90_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_188;
    goto L54;

  anon114_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    Tmp_171 := 128;
    goto L58;

  L58:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon89_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_171;
    goto L58;

  anon86_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    Tmp_170 := 112;
    goto L62;

  L62:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon88_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_170;
    goto L62;

  anon107_Then:
    goto L23;

  L23:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon108_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon109_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon110_Then:
    goto L23;

  anon111_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon118_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon83_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet] == 0;
    Tmp_165 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#1(actual_PdoExtension_1: int) returns (Tmp_165: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest#0(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1298: int)
{
  var {:pointer} Tmp_1299: int;
  var {:scalar} Tmp_1300: int;
  var {:scalar} tick: int;
  var {:pointer} s_p_e_c_i_a_l_65: int;
  var {:pointer} Tmp_1301: int;
  var {:pointer} pdoExtension_9: int;
  var {:pointer} Tmp_1302: int;
  var {:pointer} Tmp_1303: int;
  var {:pointer} sdv_421: int;
  var {:scalar} Tmp_1304: int;
  var {:pointer} Tmp_1305: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_1306: int;
  var {:pointer} pComplete: int;
  var {:scalar} Tmp_1307: int;
  var {:pointer} Tmp_1308: int;
  var {:pointer} Tmp_1309: int;
  var {:scalar} sdv_423: int;
  var {:pointer} sdv_424: int;
  var {:pointer} Tmp_1310: int;
  var {:pointer} s_p_e_c_i_a_l_66: int;
  var {:pointer} Tmp_1311: int;
  var {:scalar} delay: int;
  var {:scalar} sdv_425: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:pointer} Tmp_1312: int;
  var {:scalar} cIrql_6: int;
  var {:scalar} sdv_428: int;
  var {:scalar} status_37: int;
  var {:pointer} Tmp_1313: int;
  var {:pointer} Tmp_1314: int;
  var {:scalar} completed: int;
  var {:pointer} Tmp_1315: int;
  var {:pointer} Tmp_1316: int;
  var {:pointer} DeviceExtension_5: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_2879: int;
  var vslice_dummy_var_2880: int;
  var vslice_dummy_var_2881: int;
  var vslice_dummy_var_2882: int;

  anon0:
    call {:si_unique_call 1841} tick := __HAVOC_malloc(20);
    call {:si_unique_call 1842} delay := __HAVOC_malloc(20);
    DeviceExtension_5 := actual_DeviceExtension_5;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    call {:si_unique_call 1843} Tmp_1310 := __HAVOC_malloc(4);
    call {:si_unique_call 1844} Tmp_1314 := __HAVOC_malloc(4);
    call {:si_unique_call 1845} Tmp_1316 := __HAVOC_malloc(4);
    originalTransferMode := TransferMode;
    requestContext := 0;
    pdoExtension_9 := 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    Tmp_1311 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)];
    assume {:nonnull} Tmp_1311 != 0;
    assume Tmp_1311 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_1311))] := 259;
    goto L13;

  L13:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    pdoExtension_9 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1305;
    assume {:nonnull} Tmp_1305 != 0;
    assume Tmp_1305 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    Tmp_1298 := -1073741823;
    goto L1;

  L1:
    return;

  anon76_Then:
    goto L20;

  L20:
    call {:si_unique_call 1846} Tmp_1306 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    call {:si_unique_call 1847} sdv_KeAcquireSpinLock(0, Tmp_1306);
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    havoc cIrql_6;
    call {:si_unique_call 1848} sdv_424 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_424;
    call {:si_unique_call 1849} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L32;

  L32:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} requestContext == 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1316;
    assume {:nonnull} Tmp_1316 != 0;
    assume Tmp_1316 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    havoc Tmp_1309;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1307;
    call {:si_unique_call 1850} WPP_SF_(Tmp_1307, 18, Tmp_1309);
    goto L152;

  L152:
    Tmp_1298 := -1073741670;
    goto L1;

  anon73_Then:
    goto L152;

  anon84_Then:
    goto L152;

  anon72_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon58_Then:
    assume {:partition} requestContext != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 1851} sdv_425 := sdv_KeGetCurrentIrql();
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_425 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L37;

  L37:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  L51:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    call {:si_unique_call 1852} nextIrpStack := sdv_IoGetNextIrpStackLocation(Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)]);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    call {:si_unique_call 1853} sdv_IoSetCompletionRoutine(Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)], li2bplFunctionConstant523, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_2879;
    call {:si_unique_call 1854} status_37 := sdv_IoCallDriver(vslice_dummy_var_2879, Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)]);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_37 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    Tmp_1313 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)];
    assume {:nonnull} Tmp_1313 != 0;
    assume Tmp_1313 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_1313))] := status_37;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  L82:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1314;
    assume {:nonnull} Tmp_1314 != 0;
    assume Tmp_1314 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    havoc Tmp_1301;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1300;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1312;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1299;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1312 != 0;
    assume Tmp_1312 > 0;
    havoc vslice_dummy_var_2880;
    havoc vslice_dummy_var_2881;
    havoc vslice_dummy_var_2882;
    call {:si_unique_call 1855} WPP_SF_DDD(Tmp_1300, 20, Tmp_1301, vslice_dummy_var_2880, vslice_dummy_var_2881, vslice_dummy_var_2882);
    goto L83;

  L83:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    pdoExtension_9 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto L66;

  L66:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    Tmp_1315 := KeTickCount;
    assume {:nonnull} Tmp_1315 != 0;
    assume Tmp_1315 > 0;
    havoc s_p_e_c_i_a_l_65;
    goto L121;

  L121:
    call {:si_unique_call 1856} Sbp2SendRequest#0_loop_L121(s_p_e_c_i_a_l_65, delay);
    goto L121_last;

  L121_last:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    call {:si_unique_call 1857} sdv_428 := corral_nondet();
    assume {:nonnull} delay != 0;
    assume delay > 0;
    goto L132;

  L132:
    call {:si_unique_call 1858} Tmp_1308, s_p_e_c_i_a_l_66 := Sbp2SendRequest#0_loop_L132(tick, pComplete, Tmp_1308, s_p_e_c_i_a_l_66, delay);
    goto L132_last;

  L132_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    Tmp_1308 := KeTickCount;
    assume {:nonnull} Tmp_1308 != 0;
    assume Tmp_1308 > 0;
    havoc s_p_e_c_i_a_l_66;
    goto L142;

  L142:
    call {:si_unique_call 1859} Sbp2SendRequest#0_loop_L142(tick, s_p_e_c_i_a_l_66);
    goto L142_last;

  L142_last:
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto L137;

  L137:
    completed := sdv_423;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} completed == 0;
    Tmp_1298 := -1073741823;
    goto L1;

  anon82_Then:
    assume {:partition} completed != 0;
    goto L97;

  L97:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    call {:si_unique_call 1860} Tmp_1306 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    call {:si_unique_call 1861} sdv_KeAcquireSpinLock(0, Tmp_1306);
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    havoc cIrql_6;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1862} ExFreeToNPagedLookasideList#0(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_5), requestContext);
    call {:si_unique_call 1863} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L113;

  L113:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    Tmp_1302 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)];
    assume {:nonnull} Tmp_1302 != 0;
    assume Tmp_1302 > 0;
    Tmp_1298 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_1302))];
    goto L1;

  anon69_Then:
    call {:si_unique_call 1864} sdv_ExFreePool(0);
    goto L113;

  anon71_Then:
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    assume false;
    return;

  anon83_Then:
    goto anon83_Then_dummy;

  anon83_Then_dummy:
    assume false;
    return;

  anon70_Then:
    goto L137;

  anon81_Then:
    goto anon81_Then_dummy;

  anon81_Then_dummy:
    assume false;
    return;

  anon67_Then:
    assume {:partition} TransferMode == 2;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} status_37 == 259;
    call {:si_unique_call 1865} vslice_dummy_var_332 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L97;

  anon68_Then:
    assume {:partition} status_37 != 259;
    goto L97;

  anon62_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_1298 := status_37;
    goto L1;

  anon65_Then:
    goto L66;

  anon66_Then:
    goto L83;

  anon80_Then:
    goto L83;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon78_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1310;
    assume {:nonnull} Tmp_1310 != 0;
    assume Tmp_1310 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto L82;

  anon79_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L82;

  anon63_Then:
    havoc Tmp_1303;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1304;
    call {:si_unique_call 1866} WPP_SF_(Tmp_1304, 19, Tmp_1303);
    goto L82;

  anon61_Then:
    assume {:partition} status_37 != -1072562032;
    goto L66;

  anon77_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  anon60_Then:
    assume {:partition} 2 > sdv_425;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 1867} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L37;

  anon59_Then:
    assume {:partition} TransferMode != 2;
    goto L37;

  anon75_Then:
    goto L20;

  anon57_Then:
    call {:si_unique_call 1868} sdv_421 := ExAllocatePoolWithTag(512, 32, -481140141);
    requestContext := sdv_421;
    goto L32;

  anon74_Then:
    assume {:partition} originalTransferMode == 2;
    goto L13;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest#0(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1298: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest#1(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1298: int)
{
  var {:pointer} Tmp_1299: int;
  var {:scalar} Tmp_1300: int;
  var {:scalar} tick: int;
  var {:pointer} s_p_e_c_i_a_l_65: int;
  var {:pointer} Tmp_1301: int;
  var {:pointer} pdoExtension_9: int;
  var {:pointer} Tmp_1302: int;
  var {:pointer} Tmp_1303: int;
  var {:pointer} sdv_421: int;
  var {:scalar} Tmp_1304: int;
  var {:pointer} Tmp_1305: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_1306: int;
  var {:pointer} pComplete: int;
  var {:scalar} Tmp_1307: int;
  var {:pointer} Tmp_1308: int;
  var {:pointer} Tmp_1309: int;
  var {:scalar} sdv_423: int;
  var {:pointer} sdv_424: int;
  var {:pointer} Tmp_1310: int;
  var {:pointer} s_p_e_c_i_a_l_66: int;
  var {:pointer} Tmp_1311: int;
  var {:scalar} delay: int;
  var {:scalar} sdv_425: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:pointer} Tmp_1312: int;
  var {:scalar} cIrql_6: int;
  var {:scalar} sdv_428: int;
  var {:scalar} status_37: int;
  var {:pointer} Tmp_1313: int;
  var {:pointer} Tmp_1314: int;
  var {:scalar} completed: int;
  var {:pointer} Tmp_1315: int;
  var {:pointer} Tmp_1316: int;
  var {:pointer} DeviceExtension_5: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_2883: int;
  var vslice_dummy_var_2884: int;
  var vslice_dummy_var_2885: int;
  var vslice_dummy_var_2886: int;

  anon0:
    call {:si_unique_call 1869} tick := __HAVOC_malloc(20);
    call {:si_unique_call 1870} delay := __HAVOC_malloc(20);
    DeviceExtension_5 := actual_DeviceExtension_5;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    call {:si_unique_call 1871} Tmp_1310 := __HAVOC_malloc(4);
    call {:si_unique_call 1872} Tmp_1314 := __HAVOC_malloc(4);
    call {:si_unique_call 1873} Tmp_1316 := __HAVOC_malloc(4);
    originalTransferMode := TransferMode;
    requestContext := 0;
    pdoExtension_9 := 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    Tmp_1311 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)];
    assume {:nonnull} Tmp_1311 != 0;
    assume Tmp_1311 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_1311))] := 259;
    goto L13;

  L13:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    pdoExtension_9 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1305;
    assume {:nonnull} Tmp_1305 != 0;
    assume Tmp_1305 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    Tmp_1298 := -1073741823;
    goto L1;

  L1:
    return;

  anon76_Then:
    goto L20;

  L20:
    call {:si_unique_call 1874} Tmp_1306 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    call {:si_unique_call 1875} sdv_KeAcquireSpinLock(0, Tmp_1306);
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    havoc cIrql_6;
    call {:si_unique_call 1876} sdv_424 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_424;
    call {:si_unique_call 1877} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L32;

  L32:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} requestContext == 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1316;
    assume {:nonnull} Tmp_1316 != 0;
    assume Tmp_1316 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    havoc Tmp_1309;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1307;
    call {:si_unique_call 1878} WPP_SF_(Tmp_1307, 18, Tmp_1309);
    goto L152;

  L152:
    Tmp_1298 := -1073741670;
    goto L1;

  anon73_Then:
    goto L152;

  anon84_Then:
    goto L152;

  anon72_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon58_Then:
    assume {:partition} requestContext != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 1879} sdv_425 := sdv_KeGetCurrentIrql();
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_425 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L37;

  L37:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  L51:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    call {:si_unique_call 1880} nextIrpStack := sdv_IoGetNextIrpStackLocation(Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)]);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    call {:si_unique_call 1881} sdv_IoSetCompletionRoutine(Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)], li2bplFunctionConstant523, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_2883;
    call {:si_unique_call 1882} status_37 := sdv_IoCallDriver(vslice_dummy_var_2883, Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)]);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_37 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    Tmp_1313 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)];
    assume {:nonnull} Tmp_1313 != 0;
    assume Tmp_1313 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_1313))] := status_37;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  L82:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1314;
    assume {:nonnull} Tmp_1314 != 0;
    assume Tmp_1314 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    havoc Tmp_1301;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1300;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1312;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1299;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1312 != 0;
    assume Tmp_1312 > 0;
    havoc vslice_dummy_var_2884;
    havoc vslice_dummy_var_2885;
    havoc vslice_dummy_var_2886;
    call {:si_unique_call 1883} WPP_SF_DDD(Tmp_1300, 20, Tmp_1301, vslice_dummy_var_2884, vslice_dummy_var_2885, vslice_dummy_var_2886);
    goto L83;

  L83:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    pdoExtension_9 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto L66;

  L66:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    Tmp_1315 := KeTickCount;
    assume {:nonnull} Tmp_1315 != 0;
    assume Tmp_1315 > 0;
    havoc s_p_e_c_i_a_l_65;
    goto L121;

  L121:
    call {:si_unique_call 1884} Sbp2SendRequest#1_loop_L121(s_p_e_c_i_a_l_65, delay);
    goto L121_last;

  L121_last:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    call {:si_unique_call 1885} sdv_428 := corral_nondet();
    assume {:nonnull} delay != 0;
    assume delay > 0;
    goto L132;

  L132:
    call {:si_unique_call 1886} Tmp_1308, s_p_e_c_i_a_l_66 := Sbp2SendRequest#1_loop_L132(tick, pComplete, Tmp_1308, s_p_e_c_i_a_l_66, delay);
    goto L132_last;

  L132_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    Tmp_1308 := KeTickCount;
    assume {:nonnull} Tmp_1308 != 0;
    assume Tmp_1308 > 0;
    havoc s_p_e_c_i_a_l_66;
    goto L142;

  L142:
    call {:si_unique_call 1887} Sbp2SendRequest#1_loop_L142(tick, s_p_e_c_i_a_l_66);
    goto L142_last;

  L142_last:
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto L137;

  L137:
    completed := sdv_423;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} completed == 0;
    Tmp_1298 := -1073741823;
    goto L1;

  anon82_Then:
    assume {:partition} completed != 0;
    goto L97;

  L97:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    call {:si_unique_call 1888} Tmp_1306 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    call {:si_unique_call 1889} sdv_KeAcquireSpinLock(0, Tmp_1306);
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    havoc cIrql_6;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1890} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_5), requestContext);
    call {:si_unique_call 1891} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L113;

  L113:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    Tmp_1302 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(RequestPacket)];
    assume {:nonnull} Tmp_1302 != 0;
    assume Tmp_1302 > 0;
    Tmp_1298 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_1302))];
    goto L1;

  anon69_Then:
    call {:si_unique_call 1892} sdv_ExFreePool(0);
    goto L113;

  anon71_Then:
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    assume false;
    return;

  anon83_Then:
    goto anon83_Then_dummy;

  anon83_Then_dummy:
    assume false;
    return;

  anon70_Then:
    goto L137;

  anon81_Then:
    goto anon81_Then_dummy;

  anon81_Then_dummy:
    assume false;
    return;

  anon67_Then:
    assume {:partition} TransferMode == 2;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} status_37 == 259;
    call {:si_unique_call 1893} vslice_dummy_var_333 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L97;

  anon68_Then:
    assume {:partition} status_37 != 259;
    goto L97;

  anon62_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_1298 := status_37;
    goto L1;

  anon65_Then:
    goto L66;

  anon66_Then:
    goto L83;

  anon80_Then:
    goto L83;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon78_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1310;
    assume {:nonnull} Tmp_1310 != 0;
    assume Tmp_1310 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto L82;

  anon79_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L82;

  anon63_Then:
    havoc Tmp_1303;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1304;
    call {:si_unique_call 1894} WPP_SF_(Tmp_1304, 19, Tmp_1303);
    goto L82;

  anon61_Then:
    assume {:partition} status_37 != -1072562032;
    goto L66;

  anon77_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  anon60_Then:
    assume {:partition} 2 > sdv_425;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 1895} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L37;

  anon59_Then:
    assume {:partition} TransferMode != 2;
    goto L37;

  anon75_Then:
    goto L20;

  anon57_Then:
    call {:si_unique_call 1896} sdv_421 := ExAllocatePoolWithTag(512, 32, -481140141);
    requestContext := sdv_421;
    goto L32;

  anon74_Then:
    assume {:partition} originalTransferMode == 2;
    goto L13;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest#1(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1298: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_2444: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;

  anon0:
    call {:si_unique_call 1897} vslice_dummy_var_334 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_2444 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_2444 != 0;
    assume Tmp_2444 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant641;
    call {:si_unique_call 1898} Sbp2AllocComplete#0(Entry_3);
    goto L1;

  L1:
    return;

  anon19_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant392;
    call {:si_unique_call 1899} Sbp2BusResetNotification(Entry_3);
    goto L1;

  anon18_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant391;
    call {:si_unique_call 1900} Sbp2BusResetNotificationEx(Entry_3);
    goto L1;

  anon17_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant463;
    call {:si_unique_call 1901} vslice_dummy_var_337 := Sbp2GlobalStatusCallback#0(Entry_3);
    goto L1;

  anon16_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant464;
    call {:si_unique_call 1902} vslice_dummy_var_336 := Sbp2ManagementOrbStatusCallback#0(Entry_3);
    goto L1;

  anon21_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant465;
    call {:si_unique_call 1903} vslice_dummy_var_335 := Sbp2TaskOrbStatusCallback#0(Entry_3);
    goto L1;

  anon20_Then:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L1;

  anon15_Then:
    call {:si_unique_call 1904} vslice_dummy_var_338 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc, Mem_T.P_IRBIRP, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.Irp__IRBIRP, queued, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_2444: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;

  anon0:
    call {:si_unique_call 1905} vslice_dummy_var_339 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_2444 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_2444 != 0;
    assume Tmp_2444 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant641;
    call {:si_unique_call 1906} Sbp2AllocComplete#1(Entry_3);
    goto L1;

  L1:
    return;

  anon19_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant392;
    call {:si_unique_call 1907} Sbp2BusResetNotification(Entry_3);
    goto L1;

  anon18_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant391;
    call {:si_unique_call 1908} Sbp2BusResetNotificationEx(Entry_3);
    goto L1;

  anon17_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant463;
    call {:si_unique_call 1909} vslice_dummy_var_342 := Sbp2GlobalStatusCallback#1(Entry_3);
    goto L1;

  anon16_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant464;
    call {:si_unique_call 1910} vslice_dummy_var_341 := Sbp2ManagementOrbStatusCallback#1(Entry_3);
    goto L1;

  anon21_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume Mem_T.Free__GENERAL_LOOKASIDE[Free__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3))] == li2bplFunctionConstant465;
    call {:si_unique_call 1911} vslice_dummy_var_340 := Sbp2TaskOrbStatusCallback#1(Entry_3);
    goto L1;

  anon20_Then:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L1;

  anon15_Then:
    call {:si_unique_call 1912} vslice_dummy_var_343 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc, Mem_T.P_IRBIRP, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.Irp__IRBIRP, queued, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#0(actual_NotificationInfo: int) returns (Tmp_42: int)
{
  var {:scalar} Tmp_43: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} deviceObject: int;
  var {:scalar} Tmp_45: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} Tmp_47: int;
  var {:scalar} Tmp_48: int;
  var {:pointer} Tmp_49: int;
  var {:scalar} sdv_12: int;
  var {:pointer} Tmp_50: int;
  var {:scalar} sdv_13: int;
  var {:pointer} Tmp_52: int;
  var {:scalar} Tmp_53: int;
  var {:pointer} Tmp_54: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:scalar} Tmp_57: int;
  var {:scalar} status_1: int;
  var {:pointer} NotificationInfo: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_2887: int;
  var vslice_dummy_var_2888: int;
  var vslice_dummy_var_2889: int;
  var vslice_dummy_var_2890: int;
  var vslice_dummy_var_2891: int;
  var vslice_dummy_var_2892: int;
  var vslice_dummy_var_2893: int;

  anon0:
    NotificationInfo := actual_NotificationInfo;
    call {:si_unique_call 1913} Tmp_46 := __HAVOC_malloc(4);
    call {:si_unique_call 1914} Tmp_47 := __HAVOC_malloc(4);
    call {:si_unique_call 1915} Tmp_50 := __HAVOC_malloc(4);
    call {:si_unique_call 1916} Tmp_54 := __HAVOC_malloc(4);
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    havoc deviceObject;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    havoc pdoExtension;
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_42 := 6;
    goto L1;

  L1:
    return;

  anon58_Then:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    call {:si_unique_call 1917} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 1918} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_42 := 0;
    goto L1;

  anon46_Then:
    call {:si_unique_call 1919} vslice_dummy_var_344 := KeCancelTimer(0);
    call {:si_unique_call 1920} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1921} status_1 := CheckStatusResponseValue(TaskOrbStatusBlock__DEVICE_EXTENSION(pdoExtension));
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} status_1 != 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_54;
    assume {:nonnull} Tmp_54 != 0;
    assume Tmp_54 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    havoc Tmp_52;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_43;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2887;
    havoc vslice_dummy_var_2888;
    call {:si_unique_call 1922} WPP_SF_qDd(Tmp_43, 115, Tmp_52, pdoExtension, vslice_dummy_var_2887, vslice_dummy_var_2888);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2889;
    call {:si_unique_call 1923} vslice_dummy_var_345 := Sbp2Reset#0(vslice_dummy_var_2889, 1);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_50;
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    havoc Tmp_44;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_45;
    call {:si_unique_call 1924} WPP_SF_q(Tmp_45, 116, Tmp_44, pdoExtension);
    goto L82;

  L82:
    call {:si_unique_call 1925} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1926} Sbp2AddLog(pdoExtension, 1, -732793996, status_1, 0);
    goto L94;

  L94:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_57 := 5;
    goto L101;

  L101:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1927} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1928} CleanupOrbList#0(pdoExtension, -1073741248);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2890;
    call {:si_unique_call 1929} Sbp2StartNextPacketByKey#0(vslice_dummy_var_2890, 0);
    goto L13;

  L13:
    Tmp_42 := 0;
    goto L1;

  anon55_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_57;
    goto L101;

  anon62_Then:
    goto L94;

  anon54_Then:
    goto L82;

  anon61_Then:
    goto L82;

  anon53_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  anon52_Then:
    goto L45;

  anon60_Then:
    goto L45;

  anon51_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon48_Then:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_46;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    havoc Tmp_49;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_53;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2891;
    call {:si_unique_call 1930} WPP_SF_qDd(Tmp_53, 114, Tmp_49, pdoExtension, vslice_dummy_var_2891, 15);
    goto L56;

  L56:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2892;
    call {:si_unique_call 1931} Sbp2CreateRequestErrorLog(vslice_dummy_var_2892, 0, 4381, 16);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2893;
    call {:si_unique_call 1932} vslice_dummy_var_346 := Sbp2Reset#0(vslice_dummy_var_2893, 5);
    Tmp_42 := 0;
    goto L1;

  anon50_Then:
    goto L56;

  anon59_Then:
    goto L56;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon47_Then:
    assume {:partition} status_1 == 0;
    goto L45;

  anon45_Then:
    call {:si_unique_call 1933} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_55;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_48;
    call {:si_unique_call 1934} WPP_SF_q(Tmp_48, 113, Tmp_55, pdoExtension);
    goto L115;

  L115:
    Tmp_42 := 0;
    goto L1;

  anon57_Then:
    goto L115;

  anon63_Then:
    goto L115;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L115;

  anon44_Then:
    goto L13;

  anon43_Then:
    Tmp_42 := 0;
    goto L1;
}



procedure {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#0(actual_NotificationInfo: int) returns (Tmp_42: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_42 == 6 || Tmp_42 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#1(actual_NotificationInfo: int) returns (Tmp_42: int)
{
  var {:scalar} Tmp_43: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} deviceObject: int;
  var {:scalar} Tmp_45: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} Tmp_47: int;
  var {:scalar} Tmp_48: int;
  var {:pointer} Tmp_49: int;
  var {:scalar} sdv_12: int;
  var {:pointer} Tmp_50: int;
  var {:scalar} sdv_13: int;
  var {:pointer} Tmp_52: int;
  var {:scalar} Tmp_53: int;
  var {:pointer} Tmp_54: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:scalar} Tmp_57: int;
  var {:scalar} status_1: int;
  var {:pointer} NotificationInfo: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_2894: int;
  var vslice_dummy_var_2895: int;
  var vslice_dummy_var_2896: int;
  var vslice_dummy_var_2897: int;
  var vslice_dummy_var_2898: int;
  var vslice_dummy_var_2899: int;
  var vslice_dummy_var_2900: int;

  anon0:
    NotificationInfo := actual_NotificationInfo;
    call {:si_unique_call 1935} Tmp_46 := __HAVOC_malloc(4);
    call {:si_unique_call 1936} Tmp_47 := __HAVOC_malloc(4);
    call {:si_unique_call 1937} Tmp_50 := __HAVOC_malloc(4);
    call {:si_unique_call 1938} Tmp_54 := __HAVOC_malloc(4);
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    havoc deviceObject;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    havoc pdoExtension;
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_42 := 6;
    goto L1;

  L1:
    return;

  anon58_Then:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    call {:si_unique_call 1939} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 1940} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_42 := 0;
    goto L1;

  anon46_Then:
    call {:si_unique_call 1941} vslice_dummy_var_347 := KeCancelTimer(0);
    call {:si_unique_call 1942} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1943} status_1 := CheckStatusResponseValue(TaskOrbStatusBlock__DEVICE_EXTENSION(pdoExtension));
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} status_1 != 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_54;
    assume {:nonnull} Tmp_54 != 0;
    assume Tmp_54 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    havoc Tmp_52;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_43;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2894;
    havoc vslice_dummy_var_2895;
    call {:si_unique_call 1944} WPP_SF_qDd(Tmp_43, 115, Tmp_52, pdoExtension, vslice_dummy_var_2894, vslice_dummy_var_2895);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2896;
    call {:si_unique_call 1945} vslice_dummy_var_348 := Sbp2Reset#1(vslice_dummy_var_2896, 1);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_50;
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    havoc Tmp_44;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_45;
    call {:si_unique_call 1946} WPP_SF_q(Tmp_45, 116, Tmp_44, pdoExtension);
    goto L82;

  L82:
    call {:si_unique_call 1947} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1948} Sbp2AddLog(pdoExtension, 1, -732793996, status_1, 0);
    goto L94;

  L94:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_57 := 5;
    goto L101;

  L101:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1949} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1950} CleanupOrbList#1(pdoExtension, -1073741248);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2897;
    call {:si_unique_call 1951} Sbp2StartNextPacketByKey#1(vslice_dummy_var_2897, 0);
    goto L13;

  L13:
    Tmp_42 := 0;
    goto L1;

  anon55_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_57;
    goto L101;

  anon62_Then:
    goto L94;

  anon54_Then:
    goto L82;

  anon61_Then:
    goto L82;

  anon53_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  anon52_Then:
    goto L45;

  anon60_Then:
    goto L45;

  anon51_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon48_Then:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_46;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    havoc Tmp_49;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_53;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2898;
    call {:si_unique_call 1952} WPP_SF_qDd(Tmp_53, 114, Tmp_49, pdoExtension, vslice_dummy_var_2898, 15);
    goto L56;

  L56:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2899;
    call {:si_unique_call 1953} Sbp2CreateRequestErrorLog(vslice_dummy_var_2899, 0, 4381, 16);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_2900;
    call {:si_unique_call 1954} vslice_dummy_var_349 := Sbp2Reset#1(vslice_dummy_var_2900, 5);
    Tmp_42 := 0;
    goto L1;

  anon50_Then:
    goto L56;

  anon59_Then:
    goto L56;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon47_Then:
    assume {:partition} status_1 == 0;
    goto L45;

  anon45_Then:
    call {:si_unique_call 1955} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_55;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_48;
    call {:si_unique_call 1956} WPP_SF_q(Tmp_48, 113, Tmp_55, pdoExtension);
    goto L115;

  L115:
    Tmp_42 := 0;
    goto L1;

  anon57_Then:
    goto L115;

  anon63_Then:
    goto L115;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L115;

  anon44_Then:
    goto L13;

  anon43_Then:
    Tmp_42 := 0;
    goto L1;
}



procedure {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#1(actual_NotificationInfo: int) returns (Tmp_42: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_42 == 6 || Tmp_42 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2Reset"} Sbp2Reset#0(actual_DeviceObject_36: int, actual_ResetLevel: int) returns (Tmp_1922: int)
{
  var {:pointer} Tmp_1923: int;
  var {:pointer} Tmp_1924: int;
  var {:pointer} Tmp_1925: int;
  var {:scalar} transTimeout: int;
  var {:scalar} retry: int;
  var {:pointer} pdoExtension_16: int;
  var {:pointer} Tmp_1926: int;
  var {:pointer} Tmp_1927: int;
  var {:pointer} Tmp_1928: int;
  var {:pointer} Tmp_1929: int;
  var {:scalar} Tmp_1930: int;
  var {:scalar} sdv_583: int;
  var {:pointer} Tmp_1931: int;
  var {:pointer} Tmp_1932: int;
  var {:pointer} Tmp_1933: int;
  var {:scalar} transType: int;
  var {:scalar} sdv_585: int;
  var {:pointer} Tmp_1934: int;
  var {:scalar} sdv_587: int;
  var {:scalar} Tmp_1935: int;
  var {:pointer} Tmp_1936: int;
  var {:scalar} Tmp_1937: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} Tmp_1938: int;
  var {:pointer} Tmp_1939: int;
  var {:pointer} fdoExtension_5: int;
  var {:scalar} sdv_589: int;
  var {:pointer} Tmp_1940: int;
  var {:pointer} Tmp_1941: int;
  var {:pointer} Tmp_1942: int;
  var {:pointer} irp_5: int;
  var {:pointer} Tmp_1943: int;
  var {:scalar} Tmp_1944: int;
  var {:pointer} Tmp_1945: int;
  var {:scalar} Tmp_1946: int;
  var {:pointer} sdv_593: int;
  var {:scalar} status_61: int;
  var {:pointer} Tmp_1947: int;
  var {:pointer} Tmp_1948: int;
  var {:pointer} Tmp_1949: int;
  var {:pointer} Tmp_1950: int;
  var {:pointer} DeviceObject_36: int;
  var {:scalar} ResetLevel: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_2901: int;
  var vslice_dummy_var_2902: int;
  var vslice_dummy_var_2903: int;

  anon0:
    DeviceObject_36 := actual_DeviceObject_36;
    ResetLevel := actual_ResetLevel;
    call {:si_unique_call 1957} Tmp_1929 := __HAVOC_malloc(4);
    call {:si_unique_call 1958} Tmp_1933 := __HAVOC_malloc(4);
    call {:si_unique_call 1959} Tmp_1934 := __HAVOC_malloc(4);
    call {:si_unique_call 1960} Tmp_1939 := __HAVOC_malloc(4);
    call {:si_unique_call 1961} Tmp_1949 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_36 != 0;
    assume DeviceObject_36 > 0;
    havoc pdoExtension_16;
    status_61 := 0;
    retry := 2;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1931;
    assume {:nonnull} Tmp_1931 != 0;
    assume Tmp_1931 > 0;
    havoc fdoExtension_5;
    call {:si_unique_call 1962} Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    call {:si_unique_call 1963} sdv_KeAcquireSpinLock(0, Tmp_1942);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 1964} sdv_KeReleaseSpinLock(0, oldIrql_5);
    Tmp_1922 := -1073741632;
    goto L1;

  L1:
    return;

  anon59_Then:
    call {:si_unique_call 1965} sdv_KeReleaseSpinLock(0, oldIrql_5);
    goto L26;

  L26:
    call {:si_unique_call 1966} Tmp_1923, Tmp_1924, Tmp_1925, transTimeout, retry, Tmp_1926, Tmp_1927, Tmp_1928, Tmp_1929, Tmp_1930, Tmp_1932, Tmp_1933, transType, sdv_585, Tmp_1934, Tmp_1935, Tmp_1936, Tmp_1937, oldIrql_5, Tmp_1938, Tmp_1939, Tmp_1940, Tmp_1941, Tmp_1942, Tmp_1943, Tmp_1944, Tmp_1945, Tmp_1946, status_61, Tmp_1947, Tmp_1948, Tmp_1949, Tmp_1950, vslice_dummy_var_350, vslice_dummy_var_352, vslice_dummy_var_353 := Sbp2Reset#0_loop_L26(Tmp_1923, Tmp_1924, Tmp_1925, transTimeout, retry, pdoExtension_16, Tmp_1926, Tmp_1927, Tmp_1928, Tmp_1929, Tmp_1930, sdv_583, Tmp_1932, Tmp_1933, transType, sdv_585, Tmp_1934, sdv_587, Tmp_1935, Tmp_1936, Tmp_1937, oldIrql_5, Tmp_1938, Tmp_1939, fdoExtension_5, sdv_589, Tmp_1940, Tmp_1941, Tmp_1942, Tmp_1943, Tmp_1944, Tmp_1945, Tmp_1946, status_61, Tmp_1947, Tmp_1948, Tmp_1949, Tmp_1950, ResetLevel, vslice_dummy_var_350, vslice_dummy_var_352, vslice_dummy_var_353);
    goto L26_last;

  L26_last:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} 0 >= retry;
    Tmp_1922 := status_61;
    goto L1;

  anon60_Then:
    assume {:partition} retry > 0;
    retry := retry - 1;
    call {:si_unique_call 1967} Sbp2AddLog(pdoExtension_16, 1, -227314626, ResetLevel, 0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} ResetLevel != 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} ResetLevel != 1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} ResetLevel != 2;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} ResetLevel != 3;
    goto L187;

  L187:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1933;
    assume {:nonnull} Tmp_1933 != 0;
    assume Tmp_1933 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_1938;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1946;
    call {:si_unique_call 1968} WPP_SF_q(Tmp_1946, 64, Tmp_1938, pdoExtension_16);
    goto L188;

  L188:
    call {:si_unique_call 1969} Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    call {:si_unique_call 1970} sdv_KeAcquireSpinLock(0, Tmp_1942);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    goto L201;

  L201:
    call {:si_unique_call 1971} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 1972} CleanupOrbList#0(pdoExtension_16, -1073741248);
    call {:si_unique_call 1973} status_61 := Sbp2QueueManagementWorkItem(pdoExtension_16, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 1974} Sbp2AddLog(pdoExtension_16, 1, -227314639, status_61, retry);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_61 == -1072562032;
    goto L98;

  L98:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} retry != 0;
    call {:si_unique_call 1975} vslice_dummy_var_350 := KeCancelTimer(0);
    call {:si_unique_call 1976} status_61 := Sbp2UpdateNodeInformation#0(pdoExtension_16);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1949;
    assume {:nonnull} Tmp_1949 != 0;
    assume Tmp_1949 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_1943;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1937;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_2901;
    call {:si_unique_call 1977} WPP_SF_qDD(Tmp_1937, 65, Tmp_1943, pdoExtension_16, status_61, vslice_dummy_var_2901);
    goto anon69_Else_dummy;

  anon69_Else_dummy:
    assume false;
    return;

  anon69_Then:
    goto anon69_Then_dummy;

  anon69_Then_dummy:
    assume false;
    return;

  anon82_Then:
    goto anon82_Then_dummy;

  anon82_Then_dummy:
    assume false;
    return;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon68_Then_dummy;

  anon68_Then_dummy:
    assume false;
    return;

  anon66_Then:
    assume {:partition} retry == 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} 3 > ResetLevel;
    Tmp_1922 := status_61;
    goto L1;

  anon67_Then:
    assume {:partition} ResetLevel >= 3;
    call {:si_unique_call 1978} Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    call {:si_unique_call 1979} sdv_KeAcquireSpinLock(0, Tmp_1942);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1980} sdv_KeReleaseSpinLock(0, oldIrql_5);
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1981} sdv_593 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_16), 0);
    irp_5 := sdv_593;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} irp_5 != 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_2902;
    call {:si_unique_call 1982} Sbp2StartIo#0(vslice_dummy_var_2902, irp_5);
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_2903;
    call {:si_unique_call 1983} Sbp2StartNextPacketByKey#0(vslice_dummy_var_2903, 0);
    Tmp_1922 := status_61;
    goto L1;

  anon83_Then:
    assume {:partition} irp_5 == 0;
    goto L133;

  anon64_Then:
    assume {:partition} status_61 != -1072562032;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_61 != -1073741248;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} status_61 >= 0;
    goto L144;

  L144:
    Tmp_1922 := status_61;
    goto L1;

  anon70_Then:
    assume {:partition} 0 > status_61;
    call {:si_unique_call 1984} vslice_dummy_var_351 := KeCancelTimer(0);
    call {:si_unique_call 1985} IoInvalidateDeviceState(0);
    goto L144;

  anon65_Then:
    assume {:partition} status_61 == -1073741248;
    goto L98;

  anon87_Then:
    goto L201;

  anon77_Then:
    goto L188;

  anon86_Then:
    goto L188;

  anon76_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon78_Then:
    assume {:partition} ResetLevel == 3;
    goto L187;

  anon79_Then:
    assume {:partition} ResetLevel == 2;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1934;
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_1941;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1935;
    call {:si_unique_call 1986} WPP_SF_q(Tmp_1935, 63, Tmp_1941, pdoExtension_16);
    goto L46;

  L46:
    transType := 12;
    transTimeout := 2;
    retry := 0;
    call {:si_unique_call 1987} Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    call {:si_unique_call 1988} sdv_KeAcquireSpinLock(0, Tmp_1942);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1928;
    assume {:nonnull} Tmp_1928 != 0;
    assume Tmp_1928 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1927;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1950;
    assume {:nonnull} Tmp_1927 != 0;
    assume Tmp_1927 > 0;
    assume {:nonnull} Tmp_1950 != 0;
    assume Tmp_1950 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1947;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1926;
    assume {:nonnull} Tmp_1926 != 0;
    assume Tmp_1926 > 0;
    assume {:nonnull} Tmp_1947 != 0;
    assume Tmp_1947 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1924;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1940;
    assume {:nonnull} Tmp_1924 != 0;
    assume Tmp_1924 > 0;
    assume {:nonnull} Tmp_1940 != 0;
    assume Tmp_1940 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1945;
    assume {:nonnull} Tmp_1945 != 0;
    assume Tmp_1945 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1945 != 0;
    assume Tmp_1945 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1945 != 0;
    assume Tmp_1945 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1945 != 0;
    assume Tmp_1945 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1923;
    assume {:nonnull} Tmp_1923 != 0;
    assume Tmp_1923 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1948;
    assume {:nonnull} Tmp_1948 != 0;
    assume Tmp_1948 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1936;
    assume {:nonnull} Tmp_1936 != 0;
    assume Tmp_1936 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1989} Sbp2SetManagementTimer(pdoExtension_16, transTimeout);
    call {:si_unique_call 1990} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 1991} CleanupOrbList#0(pdoExtension_16, -1073741248);
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1992} status_61 := Sbp2AccessRegister#0(pdoExtension_16, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(pdoExtension_16)), 1024);
    goto L92;

  anon63_Then:
    goto L46;

  anon85_Then:
    goto L46;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon80_Then:
    assume {:partition} ResetLevel == 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1929;
    assume {:nonnull} Tmp_1929 != 0;
    assume Tmp_1929 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc Tmp_1932;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1944;
    call {:si_unique_call 1993} WPP_SF_q(Tmp_1944, 62, Tmp_1932, pdoExtension_16);
    goto L149;

  L149:
    call {:si_unique_call 1994} sdv_585 := sdv_KeGetCurrentIrql();
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} 2 > sdv_585;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1995} vslice_dummy_var_352 := Sbp2AccessRegister#0(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 320);
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1996} status_61 := Sbp2AccessRegister#0(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 258);
    goto L92;

  anon73_Then:
    assume {:partition} sdv_585 >= 2;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1997} vslice_dummy_var_353 := Sbp2AccessRegister#0(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 1088);
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1998} status_61 := Sbp2AccessRegister#0(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 1026);
    goto L92;

  anon72_Then:
    goto L149;

  anon84_Then:
    goto L149;

  anon71_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon61_Then:
    assume {:partition} ResetLevel == 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1939;
    assume {:nonnull} Tmp_1939 != 0;
    assume Tmp_1939 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    havoc Tmp_1925;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1930;
    call {:si_unique_call 1999} WPP_SF_q(Tmp_1930, 61, Tmp_1925, pdoExtension_16);
    goto L178;

  L178:
    retry := 0;
    goto L92;

  anon75_Then:
    goto L178;

  anon81_Then:
    goto L178;

  anon74_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:origName "Sbp2Reset"} Sbp2Reset#0(actual_DeviceObject_36: int, actual_ResetLevel: int) returns (Tmp_1922: int);
  modifies alloc, sdv_irql_current, queued, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1922 == -1073741632 || Tmp_1922 == 0 || Tmp_1922 == -1073741670 || Tmp_1922 == -1073741823 || Tmp_1922 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2Reset"} Sbp2Reset#1(actual_DeviceObject_36: int, actual_ResetLevel: int) returns (Tmp_1922: int)
{
  var {:pointer} Tmp_1923: int;
  var {:pointer} Tmp_1924: int;
  var {:pointer} Tmp_1925: int;
  var {:scalar} transTimeout: int;
  var {:scalar} retry: int;
  var {:pointer} pdoExtension_16: int;
  var {:pointer} Tmp_1926: int;
  var {:pointer} Tmp_1927: int;
  var {:pointer} Tmp_1928: int;
  var {:pointer} Tmp_1929: int;
  var {:scalar} Tmp_1930: int;
  var {:scalar} sdv_583: int;
  var {:pointer} Tmp_1931: int;
  var {:pointer} Tmp_1932: int;
  var {:pointer} Tmp_1933: int;
  var {:scalar} transType: int;
  var {:scalar} sdv_585: int;
  var {:pointer} Tmp_1934: int;
  var {:scalar} sdv_587: int;
  var {:scalar} Tmp_1935: int;
  var {:pointer} Tmp_1936: int;
  var {:scalar} Tmp_1937: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} Tmp_1938: int;
  var {:pointer} Tmp_1939: int;
  var {:pointer} fdoExtension_5: int;
  var {:scalar} sdv_589: int;
  var {:pointer} Tmp_1940: int;
  var {:pointer} Tmp_1941: int;
  var {:pointer} Tmp_1942: int;
  var {:pointer} irp_5: int;
  var {:pointer} Tmp_1943: int;
  var {:scalar} Tmp_1944: int;
  var {:pointer} Tmp_1945: int;
  var {:scalar} Tmp_1946: int;
  var {:pointer} sdv_593: int;
  var {:scalar} status_61: int;
  var {:pointer} Tmp_1947: int;
  var {:pointer} Tmp_1948: int;
  var {:pointer} Tmp_1949: int;
  var {:pointer} Tmp_1950: int;
  var {:pointer} DeviceObject_36: int;
  var {:scalar} ResetLevel: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_2904: int;
  var vslice_dummy_var_2905: int;
  var vslice_dummy_var_2906: int;

  anon0:
    DeviceObject_36 := actual_DeviceObject_36;
    ResetLevel := actual_ResetLevel;
    call {:si_unique_call 2000} Tmp_1929 := __HAVOC_malloc(4);
    call {:si_unique_call 2001} Tmp_1933 := __HAVOC_malloc(4);
    call {:si_unique_call 2002} Tmp_1934 := __HAVOC_malloc(4);
    call {:si_unique_call 2003} Tmp_1939 := __HAVOC_malloc(4);
    call {:si_unique_call 2004} Tmp_1949 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_36 != 0;
    assume DeviceObject_36 > 0;
    havoc pdoExtension_16;
    status_61 := 0;
    retry := 2;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1931;
    assume {:nonnull} Tmp_1931 != 0;
    assume Tmp_1931 > 0;
    havoc fdoExtension_5;
    call {:si_unique_call 2005} Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    call {:si_unique_call 2006} sdv_KeAcquireSpinLock(0, Tmp_1942);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 2007} sdv_KeReleaseSpinLock(0, oldIrql_5);
    Tmp_1922 := -1073741632;
    goto L1;

  L1:
    return;

  anon59_Then:
    call {:si_unique_call 2008} sdv_KeReleaseSpinLock(0, oldIrql_5);
    goto L26;

  L26:
    call {:si_unique_call 2009} Tmp_1923, Tmp_1924, Tmp_1925, transTimeout, retry, Tmp_1926, Tmp_1927, Tmp_1928, Tmp_1929, Tmp_1930, Tmp_1932, Tmp_1933, transType, sdv_585, Tmp_1934, Tmp_1935, Tmp_1936, Tmp_1937, oldIrql_5, Tmp_1938, Tmp_1939, Tmp_1940, Tmp_1941, Tmp_1942, Tmp_1943, Tmp_1944, Tmp_1945, Tmp_1946, status_61, Tmp_1947, Tmp_1948, Tmp_1949, Tmp_1950, vslice_dummy_var_354, vslice_dummy_var_356, vslice_dummy_var_357 := Sbp2Reset#1_loop_L26(Tmp_1923, Tmp_1924, Tmp_1925, transTimeout, retry, pdoExtension_16, Tmp_1926, Tmp_1927, Tmp_1928, Tmp_1929, Tmp_1930, sdv_583, Tmp_1932, Tmp_1933, transType, sdv_585, Tmp_1934, sdv_587, Tmp_1935, Tmp_1936, Tmp_1937, oldIrql_5, Tmp_1938, Tmp_1939, fdoExtension_5, sdv_589, Tmp_1940, Tmp_1941, Tmp_1942, Tmp_1943, Tmp_1944, Tmp_1945, Tmp_1946, status_61, Tmp_1947, Tmp_1948, Tmp_1949, Tmp_1950, ResetLevel, vslice_dummy_var_354, vslice_dummy_var_356, vslice_dummy_var_357);
    goto L26_last;

  L26_last:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} 0 >= retry;
    Tmp_1922 := status_61;
    goto L1;

  anon60_Then:
    assume {:partition} retry > 0;
    retry := retry - 1;
    call {:si_unique_call 2010} Sbp2AddLog(pdoExtension_16, 1, -227314626, ResetLevel, 0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} ResetLevel != 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} ResetLevel != 1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} ResetLevel != 2;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} ResetLevel != 3;
    goto L187;

  L187:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1933;
    assume {:nonnull} Tmp_1933 != 0;
    assume Tmp_1933 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_1938;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1946;
    call {:si_unique_call 2011} WPP_SF_q(Tmp_1946, 64, Tmp_1938, pdoExtension_16);
    goto L188;

  L188:
    call {:si_unique_call 2012} Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    call {:si_unique_call 2013} sdv_KeAcquireSpinLock(0, Tmp_1942);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    goto L201;

  L201:
    call {:si_unique_call 2014} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 2015} CleanupOrbList#1(pdoExtension_16, -1073741248);
    call {:si_unique_call 2016} status_61 := Sbp2QueueManagementWorkItem(pdoExtension_16, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 2017} Sbp2AddLog(pdoExtension_16, 1, -227314639, status_61, retry);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_61 == -1072562032;
    goto L98;

  L98:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} retry != 0;
    call {:si_unique_call 2018} vslice_dummy_var_354 := KeCancelTimer(0);
    call {:si_unique_call 2019} status_61 := Sbp2UpdateNodeInformation#1(pdoExtension_16);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1949;
    assume {:nonnull} Tmp_1949 != 0;
    assume Tmp_1949 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_1943;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1937;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_2904;
    call {:si_unique_call 2020} WPP_SF_qDD(Tmp_1937, 65, Tmp_1943, pdoExtension_16, status_61, vslice_dummy_var_2904);
    goto anon69_Else_dummy;

  anon69_Else_dummy:
    assume false;
    return;

  anon69_Then:
    goto anon69_Then_dummy;

  anon69_Then_dummy:
    assume false;
    return;

  anon82_Then:
    goto anon82_Then_dummy;

  anon82_Then_dummy:
    assume false;
    return;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon68_Then_dummy;

  anon68_Then_dummy:
    assume false;
    return;

  anon66_Then:
    assume {:partition} retry == 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} 3 > ResetLevel;
    Tmp_1922 := status_61;
    goto L1;

  anon67_Then:
    assume {:partition} ResetLevel >= 3;
    call {:si_unique_call 2021} Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    call {:si_unique_call 2022} sdv_KeAcquireSpinLock(0, Tmp_1942);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 2023} sdv_KeReleaseSpinLock(0, oldIrql_5);
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 2024} sdv_593 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_16), 0);
    irp_5 := sdv_593;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} irp_5 != 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_2905;
    call {:si_unique_call 2025} Sbp2StartIo#1(vslice_dummy_var_2905, irp_5);
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_2906;
    call {:si_unique_call 2026} Sbp2StartNextPacketByKey#1(vslice_dummy_var_2906, 0);
    Tmp_1922 := status_61;
    goto L1;

  anon83_Then:
    assume {:partition} irp_5 == 0;
    goto L133;

  anon64_Then:
    assume {:partition} status_61 != -1072562032;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_61 != -1073741248;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} status_61 >= 0;
    goto L144;

  L144:
    Tmp_1922 := status_61;
    goto L1;

  anon70_Then:
    assume {:partition} 0 > status_61;
    call {:si_unique_call 2027} vslice_dummy_var_355 := KeCancelTimer(0);
    call {:si_unique_call 2028} IoInvalidateDeviceState(0);
    goto L144;

  anon65_Then:
    assume {:partition} status_61 == -1073741248;
    goto L98;

  anon87_Then:
    goto L201;

  anon77_Then:
    goto L188;

  anon86_Then:
    goto L188;

  anon76_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon78_Then:
    assume {:partition} ResetLevel == 3;
    goto L187;

  anon79_Then:
    assume {:partition} ResetLevel == 2;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1934;
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_1941;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1935;
    call {:si_unique_call 2029} WPP_SF_q(Tmp_1935, 63, Tmp_1941, pdoExtension_16);
    goto L46;

  L46:
    transType := 12;
    transTimeout := 2;
    retry := 0;
    call {:si_unique_call 2030} Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    call {:si_unique_call 2031} sdv_KeAcquireSpinLock(0, Tmp_1942);
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1928;
    assume {:nonnull} Tmp_1928 != 0;
    assume Tmp_1928 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1927;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1950;
    assume {:nonnull} Tmp_1927 != 0;
    assume Tmp_1927 > 0;
    assume {:nonnull} Tmp_1950 != 0;
    assume Tmp_1950 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1947;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1926;
    assume {:nonnull} Tmp_1926 != 0;
    assume Tmp_1926 > 0;
    assume {:nonnull} Tmp_1947 != 0;
    assume Tmp_1947 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1924;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1940;
    assume {:nonnull} Tmp_1924 != 0;
    assume Tmp_1924 > 0;
    assume {:nonnull} Tmp_1940 != 0;
    assume Tmp_1940 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1945;
    assume {:nonnull} Tmp_1945 != 0;
    assume Tmp_1945 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1945 != 0;
    assume Tmp_1945 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1945 != 0;
    assume Tmp_1945 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1945 != 0;
    assume Tmp_1945 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1923;
    assume {:nonnull} Tmp_1923 != 0;
    assume Tmp_1923 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1948;
    assume {:nonnull} Tmp_1948 != 0;
    assume Tmp_1948 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1936;
    assume {:nonnull} Tmp_1936 != 0;
    assume Tmp_1936 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 2032} Sbp2SetManagementTimer(pdoExtension_16, transTimeout);
    call {:si_unique_call 2033} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 2034} CleanupOrbList#1(pdoExtension_16, -1073741248);
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 2035} status_61 := Sbp2AccessRegister#1(pdoExtension_16, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(pdoExtension_16)), 1024);
    goto L92;

  anon63_Then:
    goto L46;

  anon85_Then:
    goto L46;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon80_Then:
    assume {:partition} ResetLevel == 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1929;
    assume {:nonnull} Tmp_1929 != 0;
    assume Tmp_1929 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc Tmp_1932;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1944;
    call {:si_unique_call 2036} WPP_SF_q(Tmp_1944, 62, Tmp_1932, pdoExtension_16);
    goto L149;

  L149:
    call {:si_unique_call 2037} sdv_585 := sdv_KeGetCurrentIrql();
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} 2 > sdv_585;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 2038} vslice_dummy_var_356 := Sbp2AccessRegister#1(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 320);
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 2039} status_61 := Sbp2AccessRegister#1(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 258);
    goto L92;

  anon73_Then:
    assume {:partition} sdv_585 >= 2;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 2040} vslice_dummy_var_357 := Sbp2AccessRegister#1(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 1088);
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 2041} status_61 := Sbp2AccessRegister#1(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 1026);
    goto L92;

  anon72_Then:
    goto L149;

  anon84_Then:
    goto L149;

  anon71_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon61_Then:
    assume {:partition} ResetLevel == 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1939;
    assume {:nonnull} Tmp_1939 != 0;
    assume Tmp_1939 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    havoc Tmp_1925;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1930;
    call {:si_unique_call 2042} WPP_SF_q(Tmp_1930, 61, Tmp_1925, pdoExtension_16);
    goto L178;

  L178:
    retry := 0;
    goto L92;

  anon75_Then:
    goto L178;

  anon81_Then:
    goto L178;

  anon74_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:origName "Sbp2Reset"} Sbp2Reset#1(actual_DeviceObject_36: int, actual_ResetLevel: int) returns (Tmp_1922: int);
  modifies alloc, sdv_irql_current, queued, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CleanupOrbList"} CleanupOrbList#0(actual_DeviceExtension_4: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_1248: int;
  var {:pointer} Tmp_1250: int;
  var {:pointer} Tmp_1251: int;
  var {:scalar} pendingOrbListHead: int;
  var {:pointer} Tmp_1252: int;
  var {:scalar} Tmp_1253: int;
  var {:scalar} sdv_402: int;
  var {:scalar} orbLock_6: int;
  var {:pointer} pEntry: int;
  var {:scalar} Tmp_1255: int;
  var {:pointer} Tmp_1256: int;
  var {:pointer} Tmp_1257: int;
  var {:pointer} requestIrp_1: int;
  var {:pointer} Tmp_1258: int;
  var {:pointer} Tmp_1259: int;
  var {:pointer} sdv_409: int;
  var {:pointer} Tmp_1260: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_1261: int;
  var {:scalar} sdv_411: int;
  var {:pointer} Tmp_1262: int;
  var {:pointer} DeviceExtension_4: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_2907: int;
  var vslice_dummy_var_2908: int;

  anon0:
    call {:si_unique_call 2043} vslice_dummy_var_358 := __HAVOC_malloc(4);
    call {:si_unique_call 2044} pendingOrbListHead := __HAVOC_malloc(8);
    call {:si_unique_call 2045} orbLock_6 := __HAVOC_malloc(12);
    DeviceExtension_4 := actual_DeviceExtension_4;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 2046} Tmp_1251 := __HAVOC_malloc(4);
    call {:si_unique_call 2047} Tmp_1260 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    call {:si_unique_call 2048} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2049} Sbp2AddLog(DeviceExtension_4, 32, -1018203550, DeviceExtension_4, CompletionStatus);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc vslice_dummy_var_2907;
    call {:si_unique_call 2050} vslice_dummy_var_359 := FreeAsyncRequestContext(DeviceExtension_4, vslice_dummy_var_2907);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto L18;

  L18:
    call {:si_unique_call 2051} sdv_402 := sdv_IsListEmpty(0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_402 != 0;
    call {:si_unique_call 2052} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L1;

  L1:
    return;

  anon36_Then:
    assume {:partition} sdv_402 == 0;
    call {:si_unique_call 2053} InitializeListHead(pendingOrbListHead);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2054} vslice_dummy_var_360 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4), pendingOrbListHead);
    call {:si_unique_call 2055} vslice_dummy_var_361 := sdv_RemoveEntryList(0);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2056} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4));
    goto L42;

  L42:
    call {:si_unique_call 2057} Tmp_1248, Tmp_1250, Tmp_1251, Tmp_1252, Tmp_1253, pEntry, Tmp_1255, Tmp_1256, Tmp_1257, requestIrp_1, Tmp_1258, Tmp_1259, sdv_409, Tmp_1260, currentListItem_1, Tmp_1261, sdv_411, Tmp_1262, vslice_dummy_var_362, vslice_dummy_var_364, vslice_dummy_var_365, vslice_dummy_var_366, vslice_dummy_var_367, vslice_dummy_var_368 := CleanupOrbList#0_loop_L42(Tmp_1248, Tmp_1250, Tmp_1251, pendingOrbListHead, Tmp_1252, Tmp_1253, orbLock_6, pEntry, Tmp_1255, Tmp_1256, Tmp_1257, requestIrp_1, Tmp_1258, Tmp_1259, sdv_409, Tmp_1260, currentListItem_1, Tmp_1261, sdv_411, Tmp_1262, DeviceExtension_4, CompletionStatus, vslice_dummy_var_362, vslice_dummy_var_364, vslice_dummy_var_365, vslice_dummy_var_366, vslice_dummy_var_367, vslice_dummy_var_368);
    goto L42_last;

  L42_last:
    call {:si_unique_call 2074} pEntry := RemoveHeadList(pendingOrbListHead);
    call {:si_unique_call 2075} InitializeListHead(pEntry);
    call {:si_unique_call 2076} sdv_409 := sdv_containing_record(pEntry, 0);
    currentListItem_1 := sdv_409;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 2058} vslice_dummy_var_362 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 2059} sdv_411 := sdv_IsListEmpty(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_411 != 0;
    call {:si_unique_call 2060} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2061} vslice_dummy_var_363 := Sbp2RestartPendingPowerIrp#0(DeviceExtension_4);
    goto L1;

  anon37_Then:
    assume {:partition} sdv_411 == 0;
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    assume false;
    return;

  anon47_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2062} vslice_dummy_var_366 := KeCancelTimer(0);
    call {:si_unique_call 2063} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2064} vslice_dummy_var_364 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1260;
    assume {:nonnull} Tmp_1260 != 0;
    assume Tmp_1260 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_1256;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1253;
    call {:si_unique_call 2065} WPP_SF_q(Tmp_1253, 11, Tmp_1256, currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1261;
    assume {:nonnull} Tmp_1261 != 0;
    assume Tmp_1261 > 0;
    havoc requestIrp_1;
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(requestIrp_1))] := CompletionStatus;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1262;
    assume {:nonnull} Tmp_1262 != 0;
    assume Tmp_1262 > 0;
    goto L98;

  L98:
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1250;
    assume {:nonnull} Tmp_1250 != 0;
    assume Tmp_1250 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 2066} Sbp2DeferPendingRequest(DeviceExtension_4, requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2067} vslice_dummy_var_367 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 2068} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L58;

  anon50_Then:
    goto L105;

  L105:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1248;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_1248 != 0;
    assume Tmp_1248 > 0;
    havoc vslice_dummy_var_2908;
    call {:si_unique_call 2069} Sbp2StartPacket#0(vslice_dummy_var_2908, requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_1248));
    goto L112;

  anon42_Then:
    goto L105;

  anon41_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2070} vslice_dummy_var_368 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1251;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc Tmp_1257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1255;
    call {:si_unique_call 2071} WPP_SF_qq(Tmp_1255, 12, Tmp_1257, DeviceExtension_4, requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2072} vslice_dummy_var_365 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_4), requestIrp_1);
    call {:si_unique_call 2073} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon44_Then:
    goto L123;

  anon51_Then:
    goto L123;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon40_Then:
    goto L99;

  anon45_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1252;
    assume {:nonnull} Tmp_1252 != 0;
    assume Tmp_1252 > 0;
    goto L98;

  anon46_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1259;
    assume {:nonnull} Tmp_1259 != 0;
    assume Tmp_1259 > 0;
    goto L98;

  anon49_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1258;
    assume {:nonnull} Tmp_1258 != 0;
    assume Tmp_1258 > 0;
    goto L98;

  anon39_Then:
    goto L83;

  anon48_Then:
    goto L83;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon35_Then:
    goto L18;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList#0(actual_DeviceExtension_4: int, actual_CompletionStatus: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, queuedWithoutMarking, locked, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CleanupOrbList"} CleanupOrbList#1(actual_DeviceExtension_4: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_1248: int;
  var {:pointer} Tmp_1250: int;
  var {:pointer} Tmp_1251: int;
  var {:scalar} pendingOrbListHead: int;
  var {:pointer} Tmp_1252: int;
  var {:scalar} Tmp_1253: int;
  var {:scalar} sdv_402: int;
  var {:scalar} orbLock_6: int;
  var {:pointer} pEntry: int;
  var {:scalar} Tmp_1255: int;
  var {:pointer} Tmp_1256: int;
  var {:pointer} Tmp_1257: int;
  var {:pointer} requestIrp_1: int;
  var {:pointer} Tmp_1258: int;
  var {:pointer} Tmp_1259: int;
  var {:pointer} sdv_409: int;
  var {:pointer} Tmp_1260: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_1261: int;
  var {:scalar} sdv_411: int;
  var {:pointer} Tmp_1262: int;
  var {:pointer} DeviceExtension_4: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_2909: int;
  var vslice_dummy_var_2910: int;

  anon0:
    call {:si_unique_call 2077} vslice_dummy_var_369 := __HAVOC_malloc(4);
    call {:si_unique_call 2078} pendingOrbListHead := __HAVOC_malloc(8);
    call {:si_unique_call 2079} orbLock_6 := __HAVOC_malloc(12);
    DeviceExtension_4 := actual_DeviceExtension_4;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 2080} Tmp_1251 := __HAVOC_malloc(4);
    call {:si_unique_call 2081} Tmp_1260 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    call {:si_unique_call 2082} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2083} Sbp2AddLog(DeviceExtension_4, 32, -1018203550, DeviceExtension_4, CompletionStatus);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc vslice_dummy_var_2909;
    call {:si_unique_call 2084} vslice_dummy_var_370 := FreeAsyncRequestContext(DeviceExtension_4, vslice_dummy_var_2909);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto L18;

  L18:
    call {:si_unique_call 2085} sdv_402 := sdv_IsListEmpty(0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_402 != 0;
    call {:si_unique_call 2086} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L1;

  L1:
    return;

  anon36_Then:
    assume {:partition} sdv_402 == 0;
    call {:si_unique_call 2087} InitializeListHead(pendingOrbListHead);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2088} vslice_dummy_var_371 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4), pendingOrbListHead);
    call {:si_unique_call 2089} vslice_dummy_var_372 := sdv_RemoveEntryList(0);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2090} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4));
    goto L42;

  L42:
    call {:si_unique_call 2091} Tmp_1248, Tmp_1250, Tmp_1251, Tmp_1252, Tmp_1253, pEntry, Tmp_1255, Tmp_1256, Tmp_1257, requestIrp_1, Tmp_1258, Tmp_1259, sdv_409, Tmp_1260, currentListItem_1, Tmp_1261, sdv_411, Tmp_1262, vslice_dummy_var_373, vslice_dummy_var_375, vslice_dummy_var_376, vslice_dummy_var_377, vslice_dummy_var_378, vslice_dummy_var_379 := CleanupOrbList#1_loop_L42(Tmp_1248, Tmp_1250, Tmp_1251, pendingOrbListHead, Tmp_1252, Tmp_1253, orbLock_6, pEntry, Tmp_1255, Tmp_1256, Tmp_1257, requestIrp_1, Tmp_1258, Tmp_1259, sdv_409, Tmp_1260, currentListItem_1, Tmp_1261, sdv_411, Tmp_1262, DeviceExtension_4, CompletionStatus, vslice_dummy_var_373, vslice_dummy_var_375, vslice_dummy_var_376, vslice_dummy_var_377, vslice_dummy_var_378, vslice_dummy_var_379);
    goto L42_last;

  L42_last:
    call {:si_unique_call 2108} pEntry := RemoveHeadList(pendingOrbListHead);
    call {:si_unique_call 2109} InitializeListHead(pEntry);
    call {:si_unique_call 2110} sdv_409 := sdv_containing_record(pEntry, 0);
    currentListItem_1 := sdv_409;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 2092} vslice_dummy_var_373 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 2093} sdv_411 := sdv_IsListEmpty(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_411 != 0;
    call {:si_unique_call 2094} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2095} vslice_dummy_var_374 := Sbp2RestartPendingPowerIrp#1(DeviceExtension_4);
    goto L1;

  anon37_Then:
    assume {:partition} sdv_411 == 0;
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    assume false;
    return;

  anon47_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2096} vslice_dummy_var_377 := KeCancelTimer(0);
    call {:si_unique_call 2097} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2098} vslice_dummy_var_375 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1260;
    assume {:nonnull} Tmp_1260 != 0;
    assume Tmp_1260 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_1256;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1253;
    call {:si_unique_call 2099} WPP_SF_q(Tmp_1253, 11, Tmp_1256, currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1261;
    assume {:nonnull} Tmp_1261 != 0;
    assume Tmp_1261 > 0;
    havoc requestIrp_1;
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(requestIrp_1))] := CompletionStatus;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1262;
    assume {:nonnull} Tmp_1262 != 0;
    assume Tmp_1262 > 0;
    goto L98;

  L98:
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1250;
    assume {:nonnull} Tmp_1250 != 0;
    assume Tmp_1250 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 2100} Sbp2DeferPendingRequest(DeviceExtension_4, requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2101} vslice_dummy_var_378 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 2102} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L58;

  anon50_Then:
    goto L105;

  L105:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1248;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_1248 != 0;
    assume Tmp_1248 > 0;
    havoc vslice_dummy_var_2910;
    call {:si_unique_call 2103} Sbp2StartPacket#1(vslice_dummy_var_2910, requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_1248));
    goto L112;

  anon42_Then:
    goto L105;

  anon41_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2104} vslice_dummy_var_379 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1251;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc Tmp_1257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1255;
    call {:si_unique_call 2105} WPP_SF_qq(Tmp_1255, 12, Tmp_1257, DeviceExtension_4, requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2106} vslice_dummy_var_376 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_4), requestIrp_1);
    call {:si_unique_call 2107} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon44_Then:
    goto L123;

  anon51_Then:
    goto L123;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon40_Then:
    goto L99;

  anon45_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1252;
    assume {:nonnull} Tmp_1252 != 0;
    assume Tmp_1252 > 0;
    goto L98;

  anon46_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1259;
    assume {:nonnull} Tmp_1259 != 0;
    assume Tmp_1259 > 0;
    goto L98;

  anon49_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1258;
    assume {:nonnull} Tmp_1258 != 0;
    assume Tmp_1258 > 0;
    goto L98;

  anon39_Then:
    goto L83;

  anon48_Then:
    goto L83;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon35_Then:
    goto L18;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList#1(actual_DeviceExtension_4: int, actual_CompletionStatus: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, queuedWithoutMarking, locked, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#0(actual_PdoExtension_13: int) returns (Tmp_1109: int)
{
  var {:pointer} irpStack_3: int;
  var {:pointer} Irp_10: int;
  var {:pointer} Tmp_1110: int;
  var {:pointer} Tmp_1111: int;
  var {:pointer} sdv_358: int;
  var {:pointer} Tmp_1112: int;
  var {:pointer} Tmp_1113: int;
  var {:pointer} Tmp_1114: int;
  var {:pointer} Tmp_1115: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} status_29: int;
  var {:scalar} Tmp_1116: int;
  var {:scalar} Tmp_1117: int;
  var {:scalar} Tmp_1118: int;
  var {:pointer} PdoExtension_13: int;
  var vslice_dummy_var_2911: int;

  anon0:
    PdoExtension_13 := actual_PdoExtension_13;
    call {:si_unique_call 2111} Tmp_1110 := __HAVOC_malloc(4);
    call {:si_unique_call 2112} Tmp_1115 := __HAVOC_malloc(4);
    status_29 := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2113} sdv_358 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(PdoExtension_13), 0);
    Irp_10 := sdv_358;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Irp_10 != 0;
    call {:si_unique_call 2114} Sbp2AddLog(PdoExtension_13, 2, -800492944, Irp_10, 0);
    call {:si_unique_call 2115} irpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1115;
    assume {:nonnull} Tmp_1115 != 0;
    assume Tmp_1115 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc Tmp_1118;
    havoc Tmp_1111;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1116;
    call {:si_unique_call 2116} WPP_SF_qD(Tmp_1116, 36, Tmp_1111, PdoExtension_13, Tmp_1118);
    goto L25;

  L25:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 2117} Tmp_1112 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1112 != 0;
    assume Tmp_1112 > 0;
    call {:si_unique_call 2118} sdv_KeAcquireSpinLock(0, Tmp_1112);
    assume {:nonnull} Tmp_1112 != 0;
    assume Tmp_1112 > 0;
    havoc cIrql_3;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_1113;
    assume {:nonnull} Tmp_1113 != 0;
    assume Tmp_1113 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2119} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 2120} status_29 := Sbp2ManagementTransaction#0(PdoExtension_13, 7, -1);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1110;
    assume {:nonnull} Tmp_1110 != 0;
    assume Tmp_1110 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    havoc Tmp_1114;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1117;
    call {:si_unique_call 2121} WPP_SF_qD(Tmp_1117, 37, Tmp_1114, PdoExtension_13, status_29);
    goto L56;

  L56:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_10))] := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc vslice_dummy_var_2911;
    call {:si_unique_call 2122} Sbp2PdoCompletePowerIrp(vslice_dummy_var_2911, Irp_10);
    Tmp_1109 := status_29;
    goto L1;

  L1:
    return;

  anon28_Then:
    goto L56;

  anon33_Then:
    goto L56;

  anon27_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon32_Then:
    goto L40;

  L40:
    call {:si_unique_call 2123} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L56;

  anon31_Then:
    goto L40;

  anon24_Then:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 2124} status_29 := Sbp2Issue1394BusReset#0(PdoExtension_13);
    goto L56;

  anon26_Then:
    goto L56;

  anon25_Then:
    goto L25;

  anon30_Then:
    goto L25;

  anon23_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon29_Then:
    assume {:partition} Irp_10 == 0;
    Tmp_1109 := 0;
    goto L1;
}



procedure {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#0(actual_PdoExtension_13: int) returns (Tmp_1109: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#1(actual_PdoExtension_13: int) returns (Tmp_1109: int)
{
  var {:pointer} irpStack_3: int;
  var {:pointer} Irp_10: int;
  var {:pointer} Tmp_1110: int;
  var {:pointer} Tmp_1111: int;
  var {:pointer} sdv_358: int;
  var {:pointer} Tmp_1112: int;
  var {:pointer} Tmp_1113: int;
  var {:pointer} Tmp_1114: int;
  var {:pointer} Tmp_1115: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} status_29: int;
  var {:scalar} Tmp_1116: int;
  var {:scalar} Tmp_1117: int;
  var {:scalar} Tmp_1118: int;
  var {:pointer} PdoExtension_13: int;
  var vslice_dummy_var_2912: int;

  anon0:
    PdoExtension_13 := actual_PdoExtension_13;
    call {:si_unique_call 2125} Tmp_1110 := __HAVOC_malloc(4);
    call {:si_unique_call 2126} Tmp_1115 := __HAVOC_malloc(4);
    status_29 := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2127} sdv_358 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(PdoExtension_13), 0);
    Irp_10 := sdv_358;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Irp_10 != 0;
    call {:si_unique_call 2128} Sbp2AddLog(PdoExtension_13, 2, -800492944, Irp_10, 0);
    call {:si_unique_call 2129} irpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1115;
    assume {:nonnull} Tmp_1115 != 0;
    assume Tmp_1115 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc Tmp_1118;
    havoc Tmp_1111;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1116;
    call {:si_unique_call 2130} WPP_SF_qD(Tmp_1116, 36, Tmp_1111, PdoExtension_13, Tmp_1118);
    goto L25;

  L25:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 2131} Tmp_1112 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1112 != 0;
    assume Tmp_1112 > 0;
    call {:si_unique_call 2132} sdv_KeAcquireSpinLock(0, Tmp_1112);
    assume {:nonnull} Tmp_1112 != 0;
    assume Tmp_1112 > 0;
    havoc cIrql_3;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_1113;
    assume {:nonnull} Tmp_1113 != 0;
    assume Tmp_1113 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2133} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 2134} status_29 := Sbp2ManagementTransaction#1(PdoExtension_13, 7, -1);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1110;
    assume {:nonnull} Tmp_1110 != 0;
    assume Tmp_1110 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    havoc Tmp_1114;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1117;
    call {:si_unique_call 2135} WPP_SF_qD(Tmp_1117, 37, Tmp_1114, PdoExtension_13, status_29);
    goto L56;

  L56:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_10))] := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc vslice_dummy_var_2912;
    call {:si_unique_call 2136} Sbp2PdoCompletePowerIrp(vslice_dummy_var_2912, Irp_10);
    Tmp_1109 := status_29;
    goto L1;

  L1:
    return;

  anon28_Then:
    goto L56;

  anon33_Then:
    goto L56;

  anon27_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon32_Then:
    goto L40;

  L40:
    call {:si_unique_call 2137} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L56;

  anon31_Then:
    goto L40;

  anon24_Then:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 2138} status_29 := Sbp2Issue1394BusReset#1(PdoExtension_13);
    goto L56;

  anon26_Then:
    goto L56;

  anon25_Then:
    goto L25;

  anon30_Then:
    goto L25;

  anon23_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon29_Then:
    assume {:partition} Irp_10 == 0;
    Tmp_1109 := 0;
    goto L1;
}



procedure {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#1(actual_PdoExtension_13: int) returns (Tmp_1109: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#0(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_585: int)
{
  var {:scalar} Tmp_586: int;
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_167: int;
  var {:pointer} Tmp_587: int;
  var {:pointer} Tmp_588: int;
  var {:scalar} Tmp_589: int;
  var {:scalar} Tmp_590: int;
  var {:pointer} Tmp_591: int;
  var {:pointer} Tmp_592: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:pointer} Tmp_595: int;
  var {:scalar} sdv_170: int;
  var {:scalar} regType: int;
  var {:scalar} sdv_171: int;
  var {:scalar} Tmp_597: int;
  var {:scalar} sdv_172: int;
  var {:scalar} bSync: int;
  var {:pointer} Tmp_598: int;
  var {:scalar} sdv_177: int;
  var {:scalar} sdv_178: int;
  var {:scalar} sdv_179: int;
  var {:pointer} Tmp_599: int;
  var {:scalar} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:pointer} Tmp_602: int;
  var {:scalar} sdv_180: int;
  var {:pointer} Tmp_603: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_181: int;
  var {:pointer} Tmp_604: int;
  var {:scalar} sdv_182: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_605: int;
  var {:scalar} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:pointer} sbpRequest_2: int;
  var {:pointer} Tmp_608: int;
  var {:pointer} PdoExtension_7: int;
  var {:scalar} Type: int;
  var {:scalar} Generation_3: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_2913: int;

  anon0:
    call {:si_unique_call 2139} waitValue_2 := __HAVOC_malloc(20);
    PdoExtension_7 := actual_PdoExtension_7;
    Type := actual_Type;
    Generation_3 := actual_Generation_3;
    call {:si_unique_call 2140} Tmp_587 := __HAVOC_malloc(4);
    call {:si_unique_call 2141} Tmp_593 := __HAVOC_malloc(4);
    call {:si_unique_call 2142} Tmp_594 := __HAVOC_malloc(4);
    call {:si_unique_call 2143} Tmp_595 := __HAVOC_malloc(4);
    call {:si_unique_call 2144} Tmp_598 := __HAVOC_malloc(4);
    call {:si_unique_call 2145} Tmp_608 := __HAVOC_malloc(4);
    call {:si_unique_call 2146} Sbp2AddLog(PdoExtension_7, 1, -848859842, Type, 0);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    Tmp_585 := -1073741632;
    goto L1;

  L1:
    return;

  anon67_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc sbpRequest_2;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} sbpRequest_2 != 0;
    call {:si_unique_call 2147} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} Type != 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Type != 1;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} Type != 3;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Type == 7;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    status_14 := 0;
    goto L39;

  L39:
    call {:si_unique_call 2148} Sbp2AddLog(PdoExtension_7, 1, -848859844, Type, status_14);
    Tmp_585 := status_14;
    goto L1;

  anon68_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_608;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_604;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_586;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc vslice_dummy_var_2913;
    call {:si_unique_call 2149} WPP_SF_qD(Tmp_586, 88, Tmp_604, PdoExtension_7, vslice_dummy_var_2913);
    goto L25;

  L25:
    call {:si_unique_call 2150} status_14 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_591;
    assume {:nonnull} Tmp_591 != 0;
    assume Tmp_591 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    call {:si_unique_call 2151} sdv_182 := sdv_KeGetCurrentIrql();
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} 2 > sdv_182;
    bSync := 1;
    regType := 256;
    goto L160;

  L160:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2152} vslice_dummy_var_380 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    Tmp_597 := bSync;
    call {:si_unique_call 2153} Sbp2AddLog(PdoExtension_7, 1, -848859855, Type, Tmp_597);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2154} status_14 := Sbp2AccessRegister#0(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), regType);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} status_14 < 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_595;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    havoc Tmp_599;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_590;
    call {:si_unique_call 2155} WPP_SF_qdD(Tmp_590, 91, Tmp_599, PdoExtension_7, Type, status_14);
    goto L218;

  L218:
    call {:si_unique_call 2156} Sbp2AddLog(PdoExtension_7, 1, -848859852, Type, status_14);
    goto L176;

  L176:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2157} vslice_dummy_var_381 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_7), 0);
    goto L39;

  anon87_Then:
    goto L218;

  anon99_Then:
    goto L218;

  anon86_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L218;

  anon78_Then:
    assume {:partition} 0 <= status_14;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} bSync != 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_602;
    assume {:nonnull} Tmp_602 != 0;
    assume Tmp_602 > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    call {:si_unique_call 2158} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    call {:si_unique_call 2159} Sbp2AddLog(PdoExtension_7, 1, -848859854, Type, status_14);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} status_14 == 258;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_593;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_603;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_606;
    call {:si_unique_call 2160} WPP_SF_qd(Tmp_606, 89, Tmp_603, PdoExtension_7, Type);
    goto L193;

  L193:
    status_14 := -1073741823;
    goto L176;

  anon83_Then:
    goto L193;

  anon97_Then:
    goto L193;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L193;

  anon80_Then:
    assume {:partition} status_14 != 258;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_14 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc status_14;
    call {:si_unique_call 2161} Sbp2AddLog(PdoExtension_7, 1, -848859853, status_14, 0);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_594;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_592;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_605;
    call {:si_unique_call 2162} WPP_SF_qD(Tmp_605, 90, Tmp_592, PdoExtension_7, status_14);
    goto L176;

  anon85_Then:
    goto L176;

  anon98_Then:
    goto L176;

  anon84_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L176;

  anon81_Then:
    assume {:partition} status_14 != 0;
    goto L176;

  anon79_Then:
    assume {:partition} bSync == 0;
    goto L176;

  anon77_Then:
    assume {:partition} sdv_182 >= 2;
    bSync := 0;
    regType := 1024;
    goto L160;

  anon76_Then:
    assume {:partition} 0 > status_14;
    Tmp_585 := status_14;
    goto L1;

  anon69_Then:
    goto L25;

  anon96_Then:
    goto L25;

  anon95_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon88_Then:
    assume {:partition} Type != 7;
    goto L25;

  anon89_Then:
    assume {:partition} Type == 3;
    call {:si_unique_call 2163} status_14 := Sbp2DoReconnect#0(PdoExtension_7, Generation_3);
    goto L39;

  anon90_Then:
    assume {:partition} Type == 1;
    queryOrb := sbpRequest_2;
    call {:si_unique_call 2164} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_607;
    assume {:nonnull} Tmp_607 != 0;
    assume Tmp_607 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2165} vslice_dummy_var_382 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2166} status_14 := Sbp2AccessRegister#0(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), 256);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} status_14 < 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_587;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    havoc Tmp_601;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_589;
    call {:si_unique_call 2167} WPP_SF_qD(Tmp_589, 86, Tmp_601, PdoExtension_7, status_14);
    goto L123;

  L123:
    Tmp_585 := status_14;
    goto L1;

  anon75_Then:
    goto L123;

  anon94_Then:
    goto L123;

  anon74_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon70_Then:
    assume {:partition} 0 <= status_14;
    call {:si_unique_call 2168} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_14 == 258;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_598;
    assume {:nonnull} Tmp_598 != 0;
    assume Tmp_598 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    havoc Tmp_588;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_600;
    call {:si_unique_call 2169} WPP_SF_q(Tmp_600, 87, Tmp_588, PdoExtension_7);
    goto L114;

  L114:
    Tmp_585 := -1073741823;
    goto L1;

  anon73_Then:
    goto L114;

  anon93_Then:
    goto L114;

  anon72_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L114;

  anon71_Then:
    assume {:partition} status_14 != 258;
    goto L39;

  anon92_Then:
    assume {:partition} Type == 0;
    call {:si_unique_call 2170} status_14 := Sbp2DoLogin#0(PdoExtension_7, Generation_3);
    goto L39;

  anon91_Then:
    assume {:partition} sbpRequest_2 == 0;
    Tmp_585 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#0(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_585: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#1(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_585: int)
{
  var {:scalar} Tmp_586: int;
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_167: int;
  var {:pointer} Tmp_587: int;
  var {:pointer} Tmp_588: int;
  var {:scalar} Tmp_589: int;
  var {:scalar} Tmp_590: int;
  var {:pointer} Tmp_591: int;
  var {:pointer} Tmp_592: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:pointer} Tmp_595: int;
  var {:scalar} sdv_170: int;
  var {:scalar} regType: int;
  var {:scalar} sdv_171: int;
  var {:scalar} Tmp_597: int;
  var {:scalar} sdv_172: int;
  var {:scalar} bSync: int;
  var {:pointer} Tmp_598: int;
  var {:scalar} sdv_177: int;
  var {:scalar} sdv_178: int;
  var {:scalar} sdv_179: int;
  var {:pointer} Tmp_599: int;
  var {:scalar} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:pointer} Tmp_602: int;
  var {:scalar} sdv_180: int;
  var {:pointer} Tmp_603: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_181: int;
  var {:pointer} Tmp_604: int;
  var {:scalar} sdv_182: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_605: int;
  var {:scalar} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:pointer} sbpRequest_2: int;
  var {:pointer} Tmp_608: int;
  var {:pointer} PdoExtension_7: int;
  var {:scalar} Type: int;
  var {:scalar} Generation_3: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_2914: int;

  anon0:
    call {:si_unique_call 2171} waitValue_2 := __HAVOC_malloc(20);
    PdoExtension_7 := actual_PdoExtension_7;
    Type := actual_Type;
    Generation_3 := actual_Generation_3;
    call {:si_unique_call 2172} Tmp_587 := __HAVOC_malloc(4);
    call {:si_unique_call 2173} Tmp_593 := __HAVOC_malloc(4);
    call {:si_unique_call 2174} Tmp_594 := __HAVOC_malloc(4);
    call {:si_unique_call 2175} Tmp_595 := __HAVOC_malloc(4);
    call {:si_unique_call 2176} Tmp_598 := __HAVOC_malloc(4);
    call {:si_unique_call 2177} Tmp_608 := __HAVOC_malloc(4);
    call {:si_unique_call 2178} Sbp2AddLog(PdoExtension_7, 1, -848859842, Type, 0);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    Tmp_585 := -1073741632;
    goto L1;

  L1:
    return;

  anon67_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc sbpRequest_2;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} sbpRequest_2 != 0;
    call {:si_unique_call 2179} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} Type != 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Type != 1;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} Type != 3;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Type == 7;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    status_14 := 0;
    goto L39;

  L39:
    call {:si_unique_call 2180} Sbp2AddLog(PdoExtension_7, 1, -848859844, Type, status_14);
    Tmp_585 := status_14;
    goto L1;

  anon68_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_608;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_604;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_586;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc vslice_dummy_var_2914;
    call {:si_unique_call 2181} WPP_SF_qD(Tmp_586, 88, Tmp_604, PdoExtension_7, vslice_dummy_var_2914);
    goto L25;

  L25:
    call {:si_unique_call 2182} status_14 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_591;
    assume {:nonnull} Tmp_591 != 0;
    assume Tmp_591 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    call {:si_unique_call 2183} sdv_182 := sdv_KeGetCurrentIrql();
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} 2 > sdv_182;
    bSync := 1;
    regType := 256;
    goto L160;

  L160:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2184} vslice_dummy_var_383 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    Tmp_597 := bSync;
    call {:si_unique_call 2185} Sbp2AddLog(PdoExtension_7, 1, -848859855, Type, Tmp_597);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2186} status_14 := Sbp2AccessRegister#1(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), regType);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} status_14 < 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_595;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    havoc Tmp_599;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_590;
    call {:si_unique_call 2187} WPP_SF_qdD(Tmp_590, 91, Tmp_599, PdoExtension_7, Type, status_14);
    goto L218;

  L218:
    call {:si_unique_call 2188} Sbp2AddLog(PdoExtension_7, 1, -848859852, Type, status_14);
    goto L176;

  L176:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2189} vslice_dummy_var_384 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_7), 0);
    goto L39;

  anon87_Then:
    goto L218;

  anon99_Then:
    goto L218;

  anon86_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L218;

  anon78_Then:
    assume {:partition} 0 <= status_14;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} bSync != 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_602;
    assume {:nonnull} Tmp_602 != 0;
    assume Tmp_602 > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    call {:si_unique_call 2190} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    call {:si_unique_call 2191} Sbp2AddLog(PdoExtension_7, 1, -848859854, Type, status_14);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} status_14 == 258;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_593;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_603;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_606;
    call {:si_unique_call 2192} WPP_SF_qd(Tmp_606, 89, Tmp_603, PdoExtension_7, Type);
    goto L193;

  L193:
    status_14 := -1073741823;
    goto L176;

  anon83_Then:
    goto L193;

  anon97_Then:
    goto L193;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L193;

  anon80_Then:
    assume {:partition} status_14 != 258;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_14 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc status_14;
    call {:si_unique_call 2193} Sbp2AddLog(PdoExtension_7, 1, -848859853, status_14, 0);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_594;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_592;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_605;
    call {:si_unique_call 2194} WPP_SF_qD(Tmp_605, 90, Tmp_592, PdoExtension_7, status_14);
    goto L176;

  anon85_Then:
    goto L176;

  anon98_Then:
    goto L176;

  anon84_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L176;

  anon81_Then:
    assume {:partition} status_14 != 0;
    goto L176;

  anon79_Then:
    assume {:partition} bSync == 0;
    goto L176;

  anon77_Then:
    assume {:partition} sdv_182 >= 2;
    bSync := 0;
    regType := 1024;
    goto L160;

  anon76_Then:
    assume {:partition} 0 > status_14;
    Tmp_585 := status_14;
    goto L1;

  anon69_Then:
    goto L25;

  anon96_Then:
    goto L25;

  anon95_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon88_Then:
    assume {:partition} Type != 7;
    goto L25;

  anon89_Then:
    assume {:partition} Type == 3;
    call {:si_unique_call 2195} status_14 := Sbp2DoReconnect#1(PdoExtension_7, Generation_3);
    goto L39;

  anon90_Then:
    assume {:partition} Type == 1;
    queryOrb := sbpRequest_2;
    call {:si_unique_call 2196} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_607;
    assume {:nonnull} Tmp_607 != 0;
    assume Tmp_607 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2197} vslice_dummy_var_385 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2198} status_14 := Sbp2AccessRegister#1(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), 256);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} status_14 < 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_587;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    havoc Tmp_601;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_589;
    call {:si_unique_call 2199} WPP_SF_qD(Tmp_589, 86, Tmp_601, PdoExtension_7, status_14);
    goto L123;

  L123:
    Tmp_585 := status_14;
    goto L1;

  anon75_Then:
    goto L123;

  anon94_Then:
    goto L123;

  anon74_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon70_Then:
    assume {:partition} 0 <= status_14;
    call {:si_unique_call 2200} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_14 == 258;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_598;
    assume {:nonnull} Tmp_598 != 0;
    assume Tmp_598 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    havoc Tmp_588;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_600;
    call {:si_unique_call 2201} WPP_SF_q(Tmp_600, 87, Tmp_588, PdoExtension_7);
    goto L114;

  L114:
    Tmp_585 := -1073741823;
    goto L1;

  anon73_Then:
    goto L114;

  anon93_Then:
    goto L114;

  anon72_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L114;

  anon71_Then:
    assume {:partition} status_14 != 258;
    goto L39;

  anon92_Then:
    assume {:partition} Type == 0;
    call {:si_unique_call 2202} status_14 := Sbp2DoLogin#1(PdoExtension_7, Generation_3);
    goto L39;

  anon91_Then:
    assume {:partition} sbpRequest_2 == 0;
    Tmp_585 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#1(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_585: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin#0(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_366: int)
{
  var {:pointer} Tmp_367: int;
  var {:scalar} Tmp_368: int;
  var {:scalar} waitValue: int;
  var {:pointer} Tmp_369: int;
  var {:pointer} Tmp_370: int;
  var {:scalar} sdv_87: int;
  var {:scalar} sdv_88: int;
  var {:scalar} Tmp_371: int;
  var {:scalar} Tmp_372: int;
  var {:scalar} sdv_90: int;
  var {:pointer} Tmp_373: int;
  var {:scalar} sdv_91: int;
  var {:scalar} sdv_92: int;
  var {:scalar} Tmp_374: int;
  var {:pointer} Tmp_375: int;
  var {:pointer} sdv_94: int;
  var {:pointer} loginOrb: int;
  var {:scalar} Tmp_376: int;
  var {:pointer} Tmp_377: int;
  var {:pointer} Tmp_378: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} sdv_97: int;
  var {:pointer} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} Tmp_384: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} Tmp_386: int;
  var {:scalar} sdv_98: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} Tmp_391: int;
  var {:scalar} Tmp_392: int;
  var {:pointer} Tmp_393: int;
  var {:pointer} Tmp_394: int;
  var {:scalar} Tmp_395: int;
  var {:scalar} sdv_100: int;
  var {:pointer} Tmp_396: int;
  var {:scalar} Tmp_397: int;
  var {:scalar} sdv_101: int;
  var {:scalar} sdv_102: int;
  var {:scalar} sdv_103: int;
  var {:pointer} Tmp_398: int;
  var {:scalar} sdv_104: int;
  var {:pointer} Tmp_399: int;
  var {:pointer} Tmp_400: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} Tmp_401: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_402: int;
  var {:pointer} Tmp_403: int;
  var {:pointer} sbpRequest: int;
  var {:scalar} sdv_107: int;
  var {:pointer} PdoExtension_2: int;
  var {:scalar} Generation_1: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_2915: int;
  var vslice_dummy_var_2916: int;
  var vslice_dummy_var_2917: int;
  var vslice_dummy_var_2918: int;
  var vslice_dummy_var_2919: int;
  var vslice_dummy_var_2920: int;
  var vslice_dummy_var_2921: int;

  anon0:
    call {:si_unique_call 2203} waitValue := __HAVOC_malloc(20);
    PdoExtension_2 := actual_PdoExtension_2;
    Generation_1 := actual_Generation_1;
    call {:si_unique_call 2204} Tmp_370 := __HAVOC_malloc(4);
    call {:si_unique_call 2205} Tmp_373 := __HAVOC_malloc(4);
    call {:si_unique_call 2206} Tmp_377 := __HAVOC_malloc(4);
    call {:si_unique_call 2207} Tmp_380 := __HAVOC_malloc(4);
    call {:si_unique_call 2208} Tmp_385 := __HAVOC_malloc(4);
    call {:si_unique_call 2209} Tmp_387 := __HAVOC_malloc(4);
    call {:si_unique_call 2210} Tmp_388 := __HAVOC_malloc(4);
    call {:si_unique_call 2211} Tmp_390 := __HAVOC_malloc(4);
    call {:si_unique_call 2212} Tmp_391 := __HAVOC_malloc(4);
    call {:si_unique_call 2213} Tmp_400 := __HAVOC_malloc(4);
    call {:si_unique_call 2214} vslice_dummy_var_386 := sdv_KeGetCurrentIrql();
    call {:si_unique_call 2215} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2216} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2217} Sbp2AddLog(PdoExtension_2, 1, -867219650, 0, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_388;
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    havoc Tmp_402;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_371;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2915;
    call {:si_unique_call 2218} WPP_SF_qD(Tmp_371, 68, Tmp_402, PdoExtension_2, vslice_dummy_var_2915);
    goto L25;

  L25:
    call {:si_unique_call 2219} Sbp2AddLog(PdoExtension_2, 1, -867219663, 0, 0);
    call {:si_unique_call 2220} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_366 := 0;
    goto L1;

  L1:
    return;

  anon102_Then:
    goto L25;

  anon133_Then:
    goto L25;

  anon101_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon99_Then:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2221} Sbp2AddLog(PdoExtension_2, 1, -867219662, 0, 0);
    goto L39;

  L39:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2222} sdv_KeReleaseSpinLock(0, cIrql_1);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2916;
    call {:si_unique_call 2223} sdv_101 := Sbp2CleanDeviceExtension#0(vslice_dummy_var_2916, 0, 0);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_101 == 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_370;
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    havoc Tmp_389;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_382;
    call {:si_unique_call 2224} WPP_SF_q(Tmp_382, 69, Tmp_389, PdoExtension_2);
    goto L54;

  L54:
    call {:si_unique_call 2225} status_8 := Sbp2InitializeDeviceExtension#0(PdoExtension_2);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} status_8 < 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_377;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    havoc Tmp_394;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_386;
    call {:si_unique_call 2226} WPP_SF_qD(Tmp_386, 70, Tmp_394, PdoExtension_2, status_8);
    goto L315;

  L315:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    Tmp_366 := status_8;
    goto L1;

  anon129_Then:
    goto L315;

  anon146_Then:
    goto L315;

  anon128_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L315;

  anon104_Then:
    assume {:partition} 0 <= status_8;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc sbpRequest;
    loginOrb := sbpRequest;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_380;
    assume {:nonnull} Tmp_380 != 0;
    assume Tmp_380 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    call {:si_unique_call 2227} sdv_94 := GET_DEVICE_NAME(PdoExtension_2);
    call {:si_unique_call 2228} sdv_104 := GET_LUN(PdoExtension_2);
    havoc Tmp_401;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_395;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2917;
    call {:si_unique_call 2229} WPP_SF_qdSDd(Tmp_395, 71, Tmp_401, PdoExtension_2, sdv_104, sdv_94, vslice_dummy_var_2917, Generation_1);
    goto L68;

  L68:
    call {:si_unique_call 2230} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_367;
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    goto L107;

  L107:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L106;

  L106:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_379;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2231} vslice_dummy_var_389 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_2));
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2232} status_8 := Sbp2AccessRegisterEx#0(PdoExtension_2, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_2)), 256, Generation_1);
    call {:si_unique_call 2233} Sbp2AddLog(PdoExtension_2, 1, -867219660, status_8, 0);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} status_8 < 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    havoc Tmp_393;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_372;
    call {:si_unique_call 2234} WPP_SF_qD(Tmp_372, 76, Tmp_393, PdoExtension_2, status_8);
    goto L254;

  L254:
    call {:si_unique_call 2235} Sbp2AddLog(PdoExtension_2, 1, -867219658, status_8, 0);
    call {:si_unique_call 2236} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2237} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} status_8 == -1072562032;
    goto L270;

  L270:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2238} Sbp2SetManagementTimer(PdoExtension_2, 3);
    call {:si_unique_call 2239} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_366 := 0;
    goto L1;

  anon144_Then:
    assume {:partition} status_8 != -1072562032;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} status_8 != -1073741248;
    call {:si_unique_call 2240} sdv_88 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} sdv_88 == 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_387;
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    havoc Tmp_403;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_392;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2918;
    call {:si_unique_call 2241} WPP_SF_qD(Tmp_392, 77, Tmp_403, PdoExtension_2, vslice_dummy_var_2918);
    goto L298;

  L298:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_375;
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    call {:si_unique_call 2242} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2243} Sbp2LoginErrorHandler#0(PdoExtension_2, status_8, 2793);
    Tmp_366 := status_8;
    goto L1;

  anon127_Then:
    goto L298;

  anon145_Then:
    goto L298;

  anon126_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L298;

  anon125_Then:
    assume {:partition} sdv_88 != 0;
    call {:si_unique_call 2244} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2245} vslice_dummy_var_388 := Sbp2Issue1394BusReset#0(PdoExtension_2);
    call {:si_unique_call 2246} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2247} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2248} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  L193:
    Tmp_366 := status_8;
    goto L1;

  anon124_Then:
    assume {:partition} status_8 == -1073741248;
    goto L270;

  anon123_Then:
    goto L254;

  anon143_Then:
    goto L254;

  anon122_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L254;

  anon106_Then:
    assume {:partition} 0 <= status_8;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_400;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    havoc Tmp_381;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_374;
    call {:si_unique_call 2249} WPP_SF_qD(Tmp_374, 72, Tmp_381, PdoExtension_2, status_8);
    goto L146;

  L146:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_369;
    assume {:nonnull} Tmp_369 != 0;
    assume Tmp_369 > 0;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    call {:si_unique_call 2250} status_8 := KeWaitForSingleObject(0, 0, 0, 0, waitValue);
    call {:si_unique_call 2251} Sbp2AddLog(PdoExtension_2, 1, -867219659, status_8, 0);
    call {:si_unique_call 2252} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2253} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} status_8 == 258;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_390;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_399;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_376;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    havoc vslice_dummy_var_2919;
    call {:si_unique_call 2254} WPP_SF_qd(Tmp_376, 73, Tmp_399, PdoExtension_2, vslice_dummy_var_2919);
    goto L171;

  L171:
    status_8 := -1073741643;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto L180;

  L180:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    status_8 := -1073741810;
    goto L181;

  L181:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} status_8 < 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    havoc Tmp_398;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_397;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2920;
    call {:si_unique_call 2255} WPP_SF_qDd(Tmp_397, 74, Tmp_398, PdoExtension_2, status_8, vslice_dummy_var_2920);
    goto L204;

  L204:
    call {:si_unique_call 2256} Sbp2AddLog(PdoExtension_2, 1, -867219657, status_8, 0);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} status_8 != 29;
    call {:si_unique_call 2257} sdv_103 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} sdv_103 == 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_391;
    assume {:nonnull} Tmp_391 != 0;
    assume Tmp_391 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    havoc Tmp_378;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_368;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2921;
    call {:si_unique_call 2258} WPP_SF_qD(Tmp_368, 75, Tmp_378, PdoExtension_2, vslice_dummy_var_2921);
    goto L237;

  L237:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_396;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    call {:si_unique_call 2259} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2260} Sbp2LoginErrorHandler#0(PdoExtension_2, status_8, 2707);
    Tmp_366 := status_8;
    goto L1;

  anon121_Then:
    goto L237;

  anon142_Then:
    goto L237;

  anon120_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L237;

  anon117_Then:
    assume {:partition} sdv_103 != 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} status_8 != -1072562032;
    call {:si_unique_call 2261} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2262} sdv_100 := Sbp2Issue1394BusReset#0(PdoExtension_2);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} sdv_100 >= 0;
    goto L233;

  L233:
    call {:si_unique_call 2263} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2264} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    goto L186;

  L186:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} status_8 != 0;
    goto L190;

  L190:
    call {:si_unique_call 2265} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  anon113_Then:
    assume {:partition} status_8 == 0;
    call {:si_unique_call 2266} Sbp2AddLog(PdoExtension_2, 1, -867219655, status_8, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2267} vslice_dummy_var_387 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_2), 0, 0);
    goto L197;

  L197:
    assume false;
    return;

  anon140_Then:
    goto L197;

  anon119_Then:
    assume {:partition} 0 > sdv_100;
    call {:si_unique_call 2268} Sbp2SetDeferLoginTimer(PdoExtension_2);
    goto L233;

  anon118_Then:
    assume {:partition} status_8 == -1072562032;
    goto L186;

  anon116_Then:
    assume {:partition} status_8 == 29;
    goto L186;

  anon115_Then:
    goto L204;

  anon141_Then:
    goto L204;

  anon114_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L204;

  anon112_Then:
    assume {:partition} 0 <= status_8;
    goto L186;

  anon111_Then:
    goto L181;

  anon110_Then:
    goto L171;

  anon139_Then:
    goto L171;

  anon109_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L171;

  anon138_Then:
    assume {:partition} status_8 != 258;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc status_8;
    goto L180;

  anon108_Then:
    goto L146;

  anon137_Then:
    goto L146;

  anon107_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L146;

  anon132_Then:
    goto L106;

  anon136_Then:
    goto L107;

  anon105_Then:
    goto L68;

  anon135_Then:
    goto L68;

  anon134_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L68;

  anon131_Then:
    goto L54;

  anon147_Then:
    goto L54;

  anon130_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon103_Then:
    assume {:partition} sdv_101 != 0;
    goto L54;

  anon100_Then:
    goto L39;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin#0(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_366: int);
  modifies alloc, sdv_irql_current, locked, queuedWithoutMarking, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin#1(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_366: int)
{
  var {:pointer} Tmp_367: int;
  var {:scalar} Tmp_368: int;
  var {:scalar} waitValue: int;
  var {:pointer} Tmp_369: int;
  var {:pointer} Tmp_370: int;
  var {:scalar} sdv_87: int;
  var {:scalar} sdv_88: int;
  var {:scalar} Tmp_371: int;
  var {:scalar} Tmp_372: int;
  var {:scalar} sdv_90: int;
  var {:pointer} Tmp_373: int;
  var {:scalar} sdv_91: int;
  var {:scalar} sdv_92: int;
  var {:scalar} Tmp_374: int;
  var {:pointer} Tmp_375: int;
  var {:pointer} sdv_94: int;
  var {:pointer} loginOrb: int;
  var {:scalar} Tmp_376: int;
  var {:pointer} Tmp_377: int;
  var {:pointer} Tmp_378: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} sdv_97: int;
  var {:pointer} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} Tmp_384: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} Tmp_386: int;
  var {:scalar} sdv_98: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} Tmp_391: int;
  var {:scalar} Tmp_392: int;
  var {:pointer} Tmp_393: int;
  var {:pointer} Tmp_394: int;
  var {:scalar} Tmp_395: int;
  var {:scalar} sdv_100: int;
  var {:pointer} Tmp_396: int;
  var {:scalar} Tmp_397: int;
  var {:scalar} sdv_101: int;
  var {:scalar} sdv_102: int;
  var {:scalar} sdv_103: int;
  var {:pointer} Tmp_398: int;
  var {:scalar} sdv_104: int;
  var {:pointer} Tmp_399: int;
  var {:pointer} Tmp_400: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} Tmp_401: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_402: int;
  var {:pointer} Tmp_403: int;
  var {:pointer} sbpRequest: int;
  var {:scalar} sdv_107: int;
  var {:pointer} PdoExtension_2: int;
  var {:scalar} Generation_1: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_2922: int;
  var vslice_dummy_var_2923: int;
  var vslice_dummy_var_2924: int;
  var vslice_dummy_var_2925: int;
  var vslice_dummy_var_2926: int;
  var vslice_dummy_var_2927: int;
  var vslice_dummy_var_2928: int;

  anon0:
    call {:si_unique_call 2269} waitValue := __HAVOC_malloc(20);
    PdoExtension_2 := actual_PdoExtension_2;
    Generation_1 := actual_Generation_1;
    call {:si_unique_call 2270} Tmp_370 := __HAVOC_malloc(4);
    call {:si_unique_call 2271} Tmp_373 := __HAVOC_malloc(4);
    call {:si_unique_call 2272} Tmp_377 := __HAVOC_malloc(4);
    call {:si_unique_call 2273} Tmp_380 := __HAVOC_malloc(4);
    call {:si_unique_call 2274} Tmp_385 := __HAVOC_malloc(4);
    call {:si_unique_call 2275} Tmp_387 := __HAVOC_malloc(4);
    call {:si_unique_call 2276} Tmp_388 := __HAVOC_malloc(4);
    call {:si_unique_call 2277} Tmp_390 := __HAVOC_malloc(4);
    call {:si_unique_call 2278} Tmp_391 := __HAVOC_malloc(4);
    call {:si_unique_call 2279} Tmp_400 := __HAVOC_malloc(4);
    call {:si_unique_call 2280} vslice_dummy_var_390 := sdv_KeGetCurrentIrql();
    call {:si_unique_call 2281} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2282} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2283} Sbp2AddLog(PdoExtension_2, 1, -867219650, 0, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_388;
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    havoc Tmp_402;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_371;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2922;
    call {:si_unique_call 2284} WPP_SF_qD(Tmp_371, 68, Tmp_402, PdoExtension_2, vslice_dummy_var_2922);
    goto L25;

  L25:
    call {:si_unique_call 2285} Sbp2AddLog(PdoExtension_2, 1, -867219663, 0, 0);
    call {:si_unique_call 2286} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_366 := 0;
    goto L1;

  L1:
    return;

  anon102_Then:
    goto L25;

  anon133_Then:
    goto L25;

  anon101_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon99_Then:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2287} Sbp2AddLog(PdoExtension_2, 1, -867219662, 0, 0);
    goto L39;

  L39:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2288} sdv_KeReleaseSpinLock(0, cIrql_1);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2923;
    call {:si_unique_call 2289} sdv_101 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_2923, 0, 0);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_101 == 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_370;
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    havoc Tmp_389;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_382;
    call {:si_unique_call 2290} WPP_SF_q(Tmp_382, 69, Tmp_389, PdoExtension_2);
    goto L54;

  L54:
    call {:si_unique_call 2291} status_8 := Sbp2InitializeDeviceExtension#1(PdoExtension_2);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} status_8 < 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_377;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    havoc Tmp_394;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_386;
    call {:si_unique_call 2292} WPP_SF_qD(Tmp_386, 70, Tmp_394, PdoExtension_2, status_8);
    goto L315;

  L315:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    Tmp_366 := status_8;
    goto L1;

  anon129_Then:
    goto L315;

  anon146_Then:
    goto L315;

  anon128_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L315;

  anon104_Then:
    assume {:partition} 0 <= status_8;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc sbpRequest;
    loginOrb := sbpRequest;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_380;
    assume {:nonnull} Tmp_380 != 0;
    assume Tmp_380 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    call {:si_unique_call 2293} sdv_94 := GET_DEVICE_NAME(PdoExtension_2);
    call {:si_unique_call 2294} sdv_104 := GET_LUN(PdoExtension_2);
    havoc Tmp_401;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_395;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2924;
    call {:si_unique_call 2295} WPP_SF_qdSDd(Tmp_395, 71, Tmp_401, PdoExtension_2, sdv_104, sdv_94, vslice_dummy_var_2924, Generation_1);
    goto L68;

  L68:
    call {:si_unique_call 2296} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_367;
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    goto L107;

  L107:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L106;

  L106:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_379;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2297} vslice_dummy_var_394 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_2));
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2298} status_8 := Sbp2AccessRegisterEx#1(PdoExtension_2, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_2)), 256, Generation_1);
    call {:si_unique_call 2299} Sbp2AddLog(PdoExtension_2, 1, -867219660, status_8, 0);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} status_8 < 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    havoc Tmp_393;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_372;
    call {:si_unique_call 2300} WPP_SF_qD(Tmp_372, 76, Tmp_393, PdoExtension_2, status_8);
    goto L254;

  L254:
    call {:si_unique_call 2301} Sbp2AddLog(PdoExtension_2, 1, -867219658, status_8, 0);
    call {:si_unique_call 2302} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2303} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} status_8 == -1072562032;
    goto L270;

  L270:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2304} Sbp2SetManagementTimer(PdoExtension_2, 3);
    call {:si_unique_call 2305} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_366 := 0;
    goto L1;

  anon144_Then:
    assume {:partition} status_8 != -1072562032;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} status_8 != -1073741248;
    call {:si_unique_call 2306} sdv_88 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} sdv_88 == 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_387;
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    havoc Tmp_403;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_392;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2925;
    call {:si_unique_call 2307} WPP_SF_qD(Tmp_392, 77, Tmp_403, PdoExtension_2, vslice_dummy_var_2925);
    goto L298;

  L298:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_375;
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    call {:si_unique_call 2308} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2309} Sbp2LoginErrorHandler#1(PdoExtension_2, status_8, 2793);
    Tmp_366 := status_8;
    goto L1;

  anon127_Then:
    goto L298;

  anon145_Then:
    goto L298;

  anon126_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L298;

  anon125_Then:
    assume {:partition} sdv_88 != 0;
    call {:si_unique_call 2310} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2311} vslice_dummy_var_393 := Sbp2Issue1394BusReset#1(PdoExtension_2);
    call {:si_unique_call 2312} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2313} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2314} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  L193:
    Tmp_366 := status_8;
    goto L1;

  anon124_Then:
    assume {:partition} status_8 == -1073741248;
    goto L270;

  anon123_Then:
    goto L254;

  anon143_Then:
    goto L254;

  anon122_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L254;

  anon106_Then:
    assume {:partition} 0 <= status_8;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_400;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    havoc Tmp_381;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_374;
    call {:si_unique_call 2315} WPP_SF_qD(Tmp_374, 72, Tmp_381, PdoExtension_2, status_8);
    goto L146;

  L146:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_369;
    assume {:nonnull} Tmp_369 != 0;
    assume Tmp_369 > 0;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    call {:si_unique_call 2316} status_8 := KeWaitForSingleObject(0, 0, 0, 0, waitValue);
    call {:si_unique_call 2317} Sbp2AddLog(PdoExtension_2, 1, -867219659, status_8, 0);
    call {:si_unique_call 2318} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2319} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} status_8 == 258;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_390;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_399;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_376;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    havoc vslice_dummy_var_2926;
    call {:si_unique_call 2320} WPP_SF_qd(Tmp_376, 73, Tmp_399, PdoExtension_2, vslice_dummy_var_2926);
    goto L171;

  L171:
    status_8 := -1073741643;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto L180;

  L180:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    status_8 := -1073741810;
    goto L181;

  L181:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} status_8 < 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    havoc Tmp_398;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_397;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2927;
    call {:si_unique_call 2321} WPP_SF_qDd(Tmp_397, 74, Tmp_398, PdoExtension_2, status_8, vslice_dummy_var_2927);
    goto L204;

  L204:
    call {:si_unique_call 2322} Sbp2AddLog(PdoExtension_2, 1, -867219657, status_8, 0);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} status_8 != 29;
    call {:si_unique_call 2323} sdv_103 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} sdv_103 == 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_391;
    assume {:nonnull} Tmp_391 != 0;
    assume Tmp_391 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    havoc Tmp_378;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_368;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_2928;
    call {:si_unique_call 2324} WPP_SF_qD(Tmp_368, 75, Tmp_378, PdoExtension_2, vslice_dummy_var_2928);
    goto L237;

  L237:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_396;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    call {:si_unique_call 2325} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2326} Sbp2LoginErrorHandler#1(PdoExtension_2, status_8, 2707);
    Tmp_366 := status_8;
    goto L1;

  anon121_Then:
    goto L237;

  anon142_Then:
    goto L237;

  anon120_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L237;

  anon117_Then:
    assume {:partition} sdv_103 != 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} status_8 != -1072562032;
    call {:si_unique_call 2327} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2328} sdv_100 := Sbp2Issue1394BusReset#1(PdoExtension_2);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} sdv_100 >= 0;
    goto L233;

  L233:
    call {:si_unique_call 2329} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2330} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    goto L186;

  L186:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} status_8 != 0;
    goto L190;

  L190:
    call {:si_unique_call 2331} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  anon113_Then:
    assume {:partition} status_8 == 0;
    call {:si_unique_call 2332} Sbp2AddLog(PdoExtension_2, 1, -867219655, status_8, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2333} vslice_dummy_var_392 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_2), 0, 0);
    goto L197;

  L197:
    call {:si_unique_call 2334} vslice_dummy_var_391 := Sbp2RestartPendingPowerIrp#0(PdoExtension_2);
    goto L190;

  anon140_Then:
    goto L197;

  anon119_Then:
    assume {:partition} 0 > sdv_100;
    call {:si_unique_call 2335} Sbp2SetDeferLoginTimer(PdoExtension_2);
    goto L233;

  anon118_Then:
    assume {:partition} status_8 == -1072562032;
    goto L186;

  anon116_Then:
    assume {:partition} status_8 == 29;
    goto L186;

  anon115_Then:
    goto L204;

  anon141_Then:
    goto L204;

  anon114_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L204;

  anon112_Then:
    assume {:partition} 0 <= status_8;
    goto L186;

  anon111_Then:
    goto L181;

  anon110_Then:
    goto L171;

  anon139_Then:
    goto L171;

  anon109_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L171;

  anon138_Then:
    assume {:partition} status_8 != 258;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc status_8;
    goto L180;

  anon108_Then:
    goto L146;

  anon137_Then:
    goto L146;

  anon107_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L146;

  anon132_Then:
    goto L106;

  anon136_Then:
    goto L107;

  anon105_Then:
    goto L68;

  anon135_Then:
    goto L68;

  anon134_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L68;

  anon131_Then:
    goto L54;

  anon147_Then:
    goto L54;

  anon130_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon103_Then:
    assume {:partition} sdv_101 != 0;
    goto L54;

  anon100_Then:
    goto L39;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin#1(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_366: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_38: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2028: int)
{
  var {:scalar} Tmp_2029: int;
  var {:scalar} Tmp_2030: int;
  var {:pointer} Tmp_2032: int;
  var {:scalar} Tmp_2033: int;
  var {:scalar} Tmp_2034: int;
  var {:pointer} Tmp_2035: int;
  var {:pointer} Tmp_2036: int;
  var {:scalar} Tmp_2037: int;
  var {:pointer} Tmp_2039: int;
  var {:pointer} pdoExtension_17: int;
  var {:scalar} Tmp_2041: int;
  var {:scalar} Tmp_2042: int;
  var {:pointer} Tmp_2043: int;
  var {:pointer} Tmp_2044: int;
  var {:pointer} Tmp_2045: int;
  var {:scalar} Tmp_2046: int;
  var {:pointer} Tmp_2047: int;
  var {:pointer} Tmp_2048: int;
  var {:pointer} Tmp_2049: int;
  var {:pointer} Tmp_2050: int;
  var {:pointer} Tmp_2051: int;
  var {:pointer} sdv_663: int;
  var {:pointer} Tmp_2052: int;
  var {:scalar} Tmp_2053: int;
  var {:pointer} Tmp_2054: int;
  var {:pointer} Tmp_2055: int;
  var {:pointer} Tmp_2056: int;
  var {:scalar} Tmp_2057: int;
  var {:scalar} Tmp_2058: int;
  var {:pointer} sdv_664: int;
  var {:pointer} sdv_665: int;
  var {:scalar} Tmp_2059: int;
  var {:pointer} Tmp_2060: int;
  var {:pointer} Tmp_2061: int;
  var {:pointer} Tmp_2062: int;
  var {:pointer} sdv_666: int;
  var {:pointer} Tmp_2063: int;
  var {:pointer} Tmp_2064: int;
  var {:pointer} sdv_667: int;
  var {:scalar} Tmp_2065: int;
  var {:pointer} Tmp_2066: int;
  var {:pointer} Tmp_2067: int;
  var {:pointer} irp_6: int;
  var {:pointer} Tmp_2068: int;
  var {:pointer} Tmp_2069: int;
  var {:pointer} Tmp_2070: int;
  var {:pointer} Tmp_2071: int;
  var {:scalar} sdv_669: int;
  var {:pointer} Tmp_2072: int;
  var {:pointer} Tmp_2073: int;
  var {:scalar} Tmp_2074: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} Tmp_2075: int;
  var {:pointer} sdv_670: int;
  var {:scalar} Tmp_2076: int;
  var {:pointer} Tmp_2077: int;
  var {:pointer} Tmp_2078: int;
  var {:pointer} Tmp_2079: int;
  var {:scalar} valid: int;
  var {:pointer} Tmp_2081: int;
  var {:scalar} Tmp_2082: int;
  var {:scalar} status_67: int;
  var {:pointer} Tmp_2083: int;
  var {:scalar} Tmp_2084: int;
  var {:pointer} Tmp_2085: int;
  var {:scalar} Tmp_2086: int;
  var {:pointer} Tmp_2087: int;
  var {:pointer} Tmp_2088: int;
  var {:scalar} Tmp_2089: int;
  var {:pointer} Tmp_2090: int;
  var {:scalar} Tmp_2091: int;
  var {:scalar} i_5: int;
  var {:pointer} Tmp_2092: int;
  var {:pointer} Tmp_2093: int;
  var {:pointer} Tmp_2094: int;
  var {:pointer} Tmp_2095: int;
  var {:scalar} Tmp_2096: int;
  var {:scalar} Tmp_2097: int;
  var {:pointer} Tmp_2098: int;
  var {:scalar} Tmp_2099: int;
  var {:scalar} Tmp_2100: int;
  var {:scalar} Tmp_2102: int;
  var {:pointer} Tmp_2104: int;
  var {:pointer} Tmp_2105: int;
  var {:pointer} Tmp_2106: int;
  var {:scalar} Tmp_2107: int;
  var {:scalar} Tmp_2110: int;
  var {:scalar} Tmp_2111: int;
  var {:pointer} context_2: int;
  var {:scalar} Tmp_2112: int;
  var {:scalar} Tmp_2113: int;
  var {:scalar} Tmp_2114: int;
  var {:scalar} Tmp_2116: int;
  var {:pointer} Tmp_2117: int;
  var {:pointer} Tmp_2118: int;
  var {:scalar} Tmp_2119: int;
  var {:pointer} Tmp_2120: int;
  var {:scalar} Tmp_2121: int;
  var {:pointer} Tmp_2122: int;
  var {:pointer} Tmp_2123: int;
  var {:pointer} Tmp_2124: int;
  var {:pointer} Tmp_2125: int;
  var {:scalar} Tmp_2126: int;
  var {:pointer} sdv_673: int;
  var {:scalar} sdv_674: int;
  var {:pointer} Tmp_2127: int;
  var {:scalar} Tmp_2128: int;
  var {:pointer} fdoExtension_8: int;
  var {:pointer} Tmp_2129: int;
  var {:pointer} Tmp_2130: int;
  var {:pointer} Tmp_2131: int;
  var {:pointer} Tmp_2132: int;
  var {:pointer} Tmp_2133: int;
  var {:pointer} Tmp_2134: int;
  var {:pointer} Tmp_2135: int;
  var {:scalar} Tmp_2136: int;
  var {:scalar} Tmp_2137: int;
  var {:pointer} Tmp_2138: int;
  var {:scalar} Tmp_2139: int;
  var {:scalar} cIrql_9: int;
  var {:pointer} Tmp_2140: int;
  var {:scalar} Tmp_2142: int;
  var {:scalar} status_68: int;
  var {:pointer} packet_13: int;
  var {:scalar} Tmp_2143: int;
  var {:scalar} Tmp_2144: int;
  var {:pointer} Tmp_2145: int;
  var {:scalar} Tmp_2146: int;
  var {:scalar} Tmp_2147: int;
  var {:pointer} Tmp_2148: int;
  var {:pointer} Tmp_2149: int;
  var {:pointer} Tmp_2150: int;
  var {:scalar} Tmp_2151: int;
  var {:pointer} Tmp_2152: int;
  var {:pointer} DeviceObject_38: int;
  var {:scalar} FreeLists: int;
  var {:scalar} OnRemove: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_2929: int;
  var vslice_dummy_var_2930: int;
  var vslice_dummy_var_2931: int;
  var vslice_dummy_var_2932: int;
  var vslice_dummy_var_2933: int;

  anon0:
    DeviceObject_38 := actual_DeviceObject_38;
    FreeLists := actual_FreeLists;
    OnRemove := actual_OnRemove;
    call {:si_unique_call 2336} Tmp_2032 := __HAVOC_malloc(2680);
    call {:si_unique_call 2337} Tmp_2036 := __HAVOC_malloc(2680);
    call {:si_unique_call 2338} Tmp_2043 := __HAVOC_malloc(4);
    call {:si_unique_call 2339} Tmp_2044 := __HAVOC_malloc(2680);
    call {:si_unique_call 2340} Tmp_2045 := __HAVOC_malloc(2680);
    call {:si_unique_call 2341} Tmp_2047 := __HAVOC_malloc(2680);
    call {:si_unique_call 2342} Tmp_2048 := __HAVOC_malloc(2680);
    call {:si_unique_call 2343} Tmp_2049 := __HAVOC_malloc(2680);
    call {:si_unique_call 2344} Tmp_2051 := __HAVOC_malloc(2680);
    call {:si_unique_call 2345} Tmp_2056 := __HAVOC_malloc(2680);
    call {:si_unique_call 2346} Tmp_2061 := __HAVOC_malloc(2680);
    call {:si_unique_call 2347} Tmp_2062 := __HAVOC_malloc(4);
    call {:si_unique_call 2348} Tmp_2063 := __HAVOC_malloc(2680);
    call {:si_unique_call 2349} Tmp_2064 := __HAVOC_malloc(4);
    call {:si_unique_call 2350} Tmp_2066 := __HAVOC_malloc(2680);
    call {:si_unique_call 2351} Tmp_2067 := __HAVOC_malloc(2680);
    call {:si_unique_call 2352} Tmp_2070 := __HAVOC_malloc(4);
    call {:si_unique_call 2353} Tmp_2073 := __HAVOC_malloc(2680);
    call {:si_unique_call 2354} Tmp_2077 := __HAVOC_malloc(2680);
    call {:si_unique_call 2355} Tmp_2078 := __HAVOC_malloc(2680);
    call {:si_unique_call 2356} Tmp_2085 := __HAVOC_malloc(2680);
    call {:si_unique_call 2357} Tmp_2087 := __HAVOC_malloc(2680);
    call {:si_unique_call 2358} Tmp_2092 := __HAVOC_malloc(4);
    call {:si_unique_call 2359} Tmp_2093 := __HAVOC_malloc(4);
    call {:si_unique_call 2360} Tmp_2094 := __HAVOC_malloc(2680);
    call {:si_unique_call 2361} Tmp_2098 := __HAVOC_malloc(4);
    call {:si_unique_call 2362} Tmp_2104 := __HAVOC_malloc(2680);
    call {:si_unique_call 2363} Tmp_2106 := __HAVOC_malloc(2680);
    call {:si_unique_call 2364} Tmp_2117 := __HAVOC_malloc(2680);
    call {:si_unique_call 2365} Tmp_2120 := __HAVOC_malloc(4);
    call {:si_unique_call 2366} Tmp_2122 := __HAVOC_malloc(2680);
    call {:si_unique_call 2367} Tmp_2123 := __HAVOC_malloc(4);
    call {:si_unique_call 2368} Tmp_2125 := __HAVOC_malloc(2680);
    call {:si_unique_call 2369} Tmp_2127 := __HAVOC_malloc(2680);
    call {:si_unique_call 2370} Tmp_2129 := __HAVOC_malloc(2680);
    call {:si_unique_call 2371} Tmp_2131 := __HAVOC_malloc(2680);
    call {:si_unique_call 2372} Tmp_2134 := __HAVOC_malloc(2680);
    call {:si_unique_call 2373} Tmp_2140 := __HAVOC_malloc(2680);
    call {:si_unique_call 2374} Tmp_2145 := __HAVOC_malloc(2680);
    call {:si_unique_call 2375} Tmp_2149 := __HAVOC_malloc(4);
    call {:si_unique_call 2376} Tmp_2150 := __HAVOC_malloc(2680);
    call {:si_unique_call 2377} Tmp_2152 := __HAVOC_malloc(2680);
    valid := 0;
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    havoc pdoExtension_17;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2064;
    assume {:nonnull} Tmp_2064 != 0;
    assume Tmp_2064 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    Tmp_2128 := FreeLists;
    havoc Tmp_2039;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2151;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_2929;
    call {:si_unique_call 2378} WPP_SF_qDd(Tmp_2151, 31, Tmp_2039, pdoExtension_17, vslice_dummy_var_2929, Tmp_2128);
    goto L19;

  L19:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2060;
    assume {:nonnull} Tmp_2060 != 0;
    assume Tmp_2060 > 0;
    havoc fdoExtension_8;
    Tmp_2142 := FreeLists;
    call {:si_unique_call 2379} Sbp2AddLog(pdoExtension_17, 1, -1016304048, Tmp_2142, fdoExtension_8);
    i_5 := 0;
    goto L33;

  L33:
    call {:si_unique_call 2380} Tmp_2041, i_5, Tmp_2112, Tmp_2122, Tmp_2127 := Sbp2CleanDeviceExtension#0_loop_L33(Tmp_2041, i_5, Tmp_2112, Tmp_2122, Tmp_2127, fdoExtension_8, DeviceObject_38);
    goto L33_last;

  L33_last:
    Tmp_2112 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2127;
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    Tmp_2041 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2122;
    assume {:nonnull} Tmp_2122 != 0;
    assume Tmp_2122 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    valid := 1;
    goto L34;

  L34:
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    call {:si_unique_call 2381} vslice_dummy_var_395 := KeCancelTimer(0);
    assume false;
    return;

  anon146_Then:
    goto L43;

  L43:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2382} FreeAddressRange#0(pdoExtension_17, DummyContext__DEVICE_EXTENSION(pdoExtension_17));
    goto L50;

  L50:
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} FreeLists != 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2043;
    assume {:nonnull} Tmp_2043 != 0;
    assume Tmp_2043 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    Tmp_2082 := OnRemove;
    Tmp_2075 := FreeLists;
    havoc Tmp_2095;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2100;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_2930;
    call {:si_unique_call 2383} WPP_SF_qDdd(Tmp_2100, 32, Tmp_2095, pdoExtension_17, vslice_dummy_var_2930, Tmp_2075, Tmp_2082);
    goto L60;

  L60:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2384} FreeAddressRange#0(pdoExtension_17, TaskOrbStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2385} FreeAddressRange#0(pdoExtension_17, GlobalStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2386} FreeAddressRange#0(pdoExtension_17, ManagementOrbStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2387} sdv_673 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_673;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_6))] := -1073741810;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2388} vslice_dummy_var_398 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2389} sdv_IoCompleteRequest(0, 0);
    goto L84;

  L84:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2390} sdv_666 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_666;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_6))] := -1073741810;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2391} vslice_dummy_var_399 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2392} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2393} sdv_667 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_667;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_6))] := -1073741810;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2394} vslice_dummy_var_400 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2395} sdv_IoCompleteRequest(0, 0);
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    call {:si_unique_call 2396} vslice_dummy_var_396 := IoDeleteSymbolicLink(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2397} ExFreePoolWithTag(0, -330079661);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L116;

  L116:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2062;
    assume {:nonnull} Tmp_2062 != 0;
    assume Tmp_2062 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    havoc Tmp_2055;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2147;
    call {:si_unique_call 2398} WPP_SF_q(Tmp_2147, 33, Tmp_2055, pdoExtension_17);
    goto L240;

  L240:
    Tmp_2028 := 1;
    goto L1;

  L1:
    return;

  anon165_Then:
    goto L240;

  anon198_Then:
    goto L240;

  anon164_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L240;

  anon153_Then:
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2123;
    assume {:nonnull} Tmp_2123 != 0;
    assume Tmp_2123 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    havoc Tmp_2148;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2121;
    call {:si_unique_call 2399} WPP_SF_q(Tmp_2121, 34, Tmp_2148, pdoExtension_17);
    goto L132;

  L132:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2400} FreeAddressRange#0(pdoExtension_17, CommonBufferContext__DEVICE_EXTENSION(pdoExtension_17));
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    i_5 := 0;
    goto L147;

  L147:
    call {:si_unique_call 2401} i_5, context_2 := Sbp2CleanDeviceExtension#0_loop_L147(pdoExtension_17, i_5, context_2);
    goto L147_last;

  L147_last:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} 8 > i_5;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc context_2;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    call {:si_unique_call 2402} FreeAddressRange#0(pdoExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_2)));
    goto L154;

  L154:
    i_5 := i_5 + 1;
    goto L154_dummy;

  L154_dummy:
    assume false;
    return;

  anon192_Then:
    goto L154;

  anon157_Then:
    assume {:partition} i_5 >= 8;
    call {:si_unique_call 2403} ExFreePoolWithTag(0, -499031469);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L145;

  L145:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    call {:si_unique_call 2404} sdv_670 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_670;
    goto L167;

  L167:
    call {:si_unique_call 2405} Tmp_2033, sdv_665, statusFifoElement, Tmp_2098, Tmp_2138 := Sbp2CleanDeviceExtension#0_loop_L167(Tmp_2033, pdoExtension_17, sdv_665, statusFifoElement, Tmp_2098, Tmp_2138);
    goto L167_last;

  L167_last:
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} statusFifoElement != 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2098;
    assume {:nonnull} Tmp_2098 != 0;
    assume Tmp_2098 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    havoc Tmp_2138;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2033;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_2931;
    call {:si_unique_call 2406} WPP_SF_qqq(Tmp_2033, 35, Tmp_2138, pdoExtension_17, statusFifoElement, vslice_dummy_var_2931);
    goto L175;

  L175:
    call {:si_unique_call 2407} IoFreeMdl(0);
    call {:si_unique_call 2408} sdv_665 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_665;
    goto L175_dummy;

  L175_dummy:
    assume false;
    return;

  anon160_Then:
    goto L175;

  anon193_Then:
    goto L175;

  anon159_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;

  anon158_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 2409} ExFreePoolWithTag(0, -430742957);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L160;

  L160:
    call {:si_unique_call 2410} sdv_663 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_663;
    goto L191;

  L191:
    call {:si_unique_call 2411} sdv_664, Tmp_2132, packet_13 := Sbp2CleanDeviceExtension#0_loop_L191(sdv_664, Tmp_2132, packet_13);
    goto L191_last;

  L191_last:
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} packet_13 != 0;
    call {:si_unique_call 2412} sdv_ExFreePool(0);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    Tmp_2132 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(packet_13)];
    assume {:nonnull} Tmp_2132 != 0;
    assume Tmp_2132 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    call {:si_unique_call 2413} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 2414} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 2415} sdv_664 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_664;
    goto L199_dummy;

  L199_dummy:
    assume false;
    return;

  anon194_Then:
    goto L199;

  anon161_Then:
    assume {:partition} packet_13 == 0;
    call {:si_unique_call 2416} Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    call {:si_unique_call 2417} sdv_KeAcquireSpinLock(0, Tmp_2090);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    havoc cIrql_9;
    call {:si_unique_call 2418} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 2419} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    call {:si_unique_call 2420} IoFreeMdl(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2083;
    assume {:nonnull} Tmp_2083 != 0;
    assume Tmp_2083 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2118;
    assume {:nonnull} Tmp_2118 != 0;
    assume Tmp_2118 > 0;
    call {:si_unique_call 2421} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2050;
    assume {:nonnull} Tmp_2050 != 0;
    assume Tmp_2050 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2071;
    assume {:nonnull} Tmp_2071 != 0;
    assume Tmp_2071 > 0;
    goto L222;

  L222:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2081;
    assume {:nonnull} Tmp_2081 != 0;
    assume Tmp_2081 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2135;
    assume {:nonnull} Tmp_2135 != 0;
    assume Tmp_2135 > 0;
    call {:si_unique_call 2422} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2069;
    assume {:nonnull} Tmp_2069 != 0;
    assume Tmp_2069 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2088;
    assume {:nonnull} Tmp_2088 != 0;
    assume Tmp_2088 > 0;
    goto L228;

  L228:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2130;
    assume {:nonnull} Tmp_2130 != 0;
    assume Tmp_2130 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2054;
    assume {:nonnull} Tmp_2054 != 0;
    assume Tmp_2054 > 0;
    call {:si_unique_call 2423} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2035;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2124;
    assume {:nonnull} Tmp_2124 != 0;
    assume Tmp_2124 > 0;
    goto L54;

  L54:
    Tmp_2028 := 1;
    goto L1;

  anon197_Then:
    goto L54;

  anon196_Then:
    goto L228;

  anon195_Then:
    goto L222;

  anon163_Then:
    goto L54;

  anon162_Then:
    goto L216;

  anon156_Then:
    goto L160;

  anon191_Then:
    goto L145;

  anon155_Then:
    goto L132;

  anon190_Then:
    goto L132;

  anon154_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  anon152_Then:
    goto L116;

  anon189_Then:
    assume {:partition} irp_6 == 0;
    goto L108;

  anon188_Then:
    assume {:partition} irp_6 == 0;
    goto L96;

  anon187_Then:
    assume {:partition} irp_6 == 0;
    goto L84;

  anon150_Then:
    goto L54;

  anon151_Then:
    goto L60;

  anon186_Then:
    goto L60;

  anon149_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon148_Then:
    assume {:partition} FreeLists == 0;
    goto L54;

  anon147_Then:
    goto L50;

  anon145_Then:
    assume {:partition} valid == 0;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc vslice_dummy_var_2932;
    call {:si_unique_call 2424} Sbp2AddLog(pdoExtension_17, 1, -1016304078, vslice_dummy_var_2932, 0);
    Tmp_2028 := 0;
    goto L1;

  anon185_Then:
    i_5 := i_5 + 1;
    goto anon185_Then_dummy;

  anon185_Then_dummy:
    assume false;
    return;

  anon184_Then:
    goto L34;

  anon144_Then:
    goto L19;

  anon183_Then:
    goto L19;

  anon143_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L19;

  anon182_Then:
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    havoc fdoExtension_8;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    Tmp_2028 := 0;
    goto L1;

  anon199_Then:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    call {:si_unique_call 2425} status_68 := Sbp2EnableBusResetNotification#0(fdoExtension_8, 0);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} status_68 < 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2093;
    assume {:nonnull} Tmp_2093 != 0;
    assume Tmp_2093 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    havoc Tmp_2133;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2143;
    call {:si_unique_call 2426} WPP_SF_qD(Tmp_2143, 36, Tmp_2133, fdoExtension_8, status_68);
    goto L253;

  L253:
    call {:si_unique_call 2427} Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    call {:si_unique_call 2428} sdv_KeAcquireSpinLock(0, Tmp_2090);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    havoc cIrql_9;
    goto L273;

  L273:
    call {:si_unique_call 2429} Tmp_2029, Tmp_2030, Tmp_2032, Tmp_2036, pdoExtension_17, Tmp_2042, Tmp_2044, Tmp_2045, Tmp_2046, Tmp_2047, Tmp_2048, Tmp_2049, Tmp_2051, Tmp_2052, Tmp_2053, Tmp_2056, Tmp_2057, Tmp_2058, Tmp_2059, Tmp_2061, Tmp_2063, Tmp_2065, Tmp_2066, Tmp_2067, Tmp_2070, Tmp_2073, Tmp_2074, Tmp_2076, Tmp_2077, Tmp_2078, Tmp_2079, Tmp_2084, Tmp_2086, Tmp_2087, Tmp_2089, Tmp_2090, Tmp_2091, i_5, Tmp_2094, Tmp_2096, Tmp_2097, Tmp_2102, Tmp_2104, Tmp_2106, Tmp_2110, Tmp_2111, Tmp_2113, Tmp_2114, Tmp_2116, Tmp_2117, Tmp_2119, Tmp_2125, Tmp_2126, Tmp_2131, Tmp_2134, Tmp_2136, Tmp_2137, Tmp_2139, cIrql_9, Tmp_2140, Tmp_2144, Tmp_2145, Tmp_2150, Tmp_2152, DeviceObject_38 := Sbp2CleanDeviceExtension#0_loop_L273(Tmp_2029, Tmp_2030, Tmp_2032, Tmp_2036, pdoExtension_17, Tmp_2042, Tmp_2044, Tmp_2045, Tmp_2046, Tmp_2047, Tmp_2048, Tmp_2049, Tmp_2051, Tmp_2052, Tmp_2053, Tmp_2056, Tmp_2057, Tmp_2058, Tmp_2059, Tmp_2061, Tmp_2063, Tmp_2065, Tmp_2066, Tmp_2067, Tmp_2070, Tmp_2073, Tmp_2074, Tmp_2076, Tmp_2077, Tmp_2078, Tmp_2079, Tmp_2084, Tmp_2086, Tmp_2087, Tmp_2089, Tmp_2090, Tmp_2091, i_5, Tmp_2094, Tmp_2096, Tmp_2097, Tmp_2102, Tmp_2104, Tmp_2106, Tmp_2110, Tmp_2111, Tmp_2113, Tmp_2114, Tmp_2116, Tmp_2117, Tmp_2119, Tmp_2125, Tmp_2126, fdoExtension_8, Tmp_2131, Tmp_2134, Tmp_2136, Tmp_2137, Tmp_2139, cIrql_9, Tmp_2140, Tmp_2144, Tmp_2145, Tmp_2150, Tmp_2152, DeviceObject_38);
    goto L273_last;

  L273_last:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc i_5;
    Tmp_2076 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2045;
    assume {:nonnull} Tmp_2045 != 0;
    assume Tmp_2045 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    Tmp_2029 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2061;
    assume {:nonnull} Tmp_2061 != 0;
    assume Tmp_2061 > 0;
    havoc Tmp_2052;
    assume {:nonnull} Tmp_2052 != 0;
    assume Tmp_2052 > 0;
    havoc pdoExtension_17;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    Tmp_2111 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2094;
    assume {:nonnull} Tmp_2094 != 0;
    assume Tmp_2094 > 0;
    havoc DeviceObject_38;
    Tmp_2102 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2140;
    assume {:nonnull} Tmp_2140 != 0;
    assume Tmp_2140 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    Tmp_2091 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2125;
    assume {:nonnull} Tmp_2125 != 0;
    assume Tmp_2125 > 0;
    call {:si_unique_call 2430} sdv_ExFreePool(0);
    Tmp_2086 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2104;
    assume {:nonnull} Tmp_2104 != 0;
    assume Tmp_2104 > 0;
    Tmp_2030 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2150;
    assume {:nonnull} Tmp_2150 != 0;
    assume Tmp_2150 > 0;
    goto L283;

  L283:
    Tmp_2110 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2067;
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    Tmp_2058 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2152;
    assume {:nonnull} Tmp_2152 != 0;
    assume Tmp_2152 > 0;
    call {:si_unique_call 2431} sdv_ExFreePool(0);
    Tmp_2137 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2106;
    assume {:nonnull} Tmp_2106 != 0;
    assume Tmp_2106 > 0;
    Tmp_2116 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2145;
    assume {:nonnull} Tmp_2145 != 0;
    assume Tmp_2145 > 0;
    goto L290;

  L290:
    Tmp_2053 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2063;
    assume {:nonnull} Tmp_2063 != 0;
    assume Tmp_2063 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    Tmp_2126 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2077;
    assume {:nonnull} Tmp_2077 != 0;
    assume Tmp_2077 > 0;
    call {:si_unique_call 2432} sdv_ExFreePool(0);
    Tmp_2089 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2048;
    assume {:nonnull} Tmp_2048 != 0;
    assume Tmp_2048 > 0;
    Tmp_2113 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2036;
    assume {:nonnull} Tmp_2036 != 0;
    assume Tmp_2036 > 0;
    goto L297;

  L297:
    Tmp_2096 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2051;
    assume {:nonnull} Tmp_2051 != 0;
    assume Tmp_2051 > 0;
    call {:si_unique_call 2433} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 2434} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 2435} IoDeleteDevice(0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2070;
    assume {:nonnull} Tmp_2070 != 0;
    assume Tmp_2070 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    havoc Tmp_2079;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2065;
    call {:si_unique_call 2436} WPP_SF_q(Tmp_2065, 37, Tmp_2079, pdoExtension_17);
    goto L317;

  L317:
    call {:si_unique_call 2437} Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    call {:si_unique_call 2438} sdv_KeAcquireSpinLock(0, Tmp_2090);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    havoc cIrql_9;
    goto L328;

  L328:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto L328_dummy;

  L328_dummy:
    assume false;
    return;

  anon172_Then:
    goto L317;

  anon206_Then:
    goto L317;

  anon171_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon205_Then:
    goto L297;

  anon204_Then:
    goto L290;

  anon203_Then:
    goto L283;

  anon202_Then:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    Tmp_2037 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2085;
    assume {:nonnull} Tmp_2085 != 0;
    assume Tmp_2085 > 0;
    havoc DeviceObject_38;
    call {:si_unique_call 2439} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume false;
    return;

  anon201_Then:
    goto L277;

  L277:
    Tmp_2074 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2047;
    assume {:nonnull} Tmp_2047 != 0;
    assume Tmp_2047 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    Tmp_2097 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2073;
    assume {:nonnull} Tmp_2073 != 0;
    assume Tmp_2073 > 0;
    call {:si_unique_call 2440} sdv_ExFreePool(0);
    Tmp_2042 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2049;
    assume {:nonnull} Tmp_2049 != 0;
    assume Tmp_2049 > 0;
    Tmp_2084 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2131;
    assume {:nonnull} Tmp_2131 != 0;
    assume Tmp_2131 > 0;
    goto L423;

  L423:
    Tmp_2144 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2078;
    assume {:nonnull} Tmp_2078 != 0;
    assume Tmp_2078 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    Tmp_2059 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2134;
    assume {:nonnull} Tmp_2134 != 0;
    assume Tmp_2134 > 0;
    call {:si_unique_call 2441} sdv_ExFreePool(0);
    Tmp_2057 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2087;
    assume {:nonnull} Tmp_2087 != 0;
    assume Tmp_2087 > 0;
    Tmp_2114 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2066;
    assume {:nonnull} Tmp_2066 != 0;
    assume Tmp_2066 > 0;
    goto L430;

  L430:
    Tmp_2119 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2056;
    assume {:nonnull} Tmp_2056 != 0;
    assume Tmp_2056 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    Tmp_2046 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2117;
    assume {:nonnull} Tmp_2117 != 0;
    assume Tmp_2117 > 0;
    call {:si_unique_call 2442} sdv_ExFreePool(0);
    Tmp_2136 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2044;
    assume {:nonnull} Tmp_2044 != 0;
    assume Tmp_2044 > 0;
    Tmp_2139 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2032;
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    goto L328;

  anon211_Then:
    goto L328;

  anon210_Then:
    goto L430;

  anon209_Then:
    goto L423;

  anon169_Then:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc vslice_dummy_var_2933;
    call {:si_unique_call 2443} DeAllocateIrpAndIrb(fdoExtension_8, vslice_dummy_var_2933);
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto L443;

  L443:
    call {:si_unique_call 2444} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto L54;

  anon170_Then:
    goto L443;

  anon168_Then:
    goto L253;

  anon213_Then:
    goto L253;

  anon167_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L253;

  anon166_Then:
    assume {:partition} 0 <= status_68;
    goto L253;

  anon200_Then:
    goto L253;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_38: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2028: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_2028 == 1 || Tmp_2028 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_38: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2028: int)
{
  var {:scalar} Tmp_2029: int;
  var {:scalar} Tmp_2030: int;
  var {:pointer} Tmp_2032: int;
  var {:scalar} Tmp_2033: int;
  var {:scalar} Tmp_2034: int;
  var {:pointer} Tmp_2035: int;
  var {:pointer} Tmp_2036: int;
  var {:scalar} Tmp_2037: int;
  var {:pointer} Tmp_2039: int;
  var {:pointer} pdoExtension_17: int;
  var {:scalar} Tmp_2041: int;
  var {:scalar} Tmp_2042: int;
  var {:pointer} Tmp_2043: int;
  var {:pointer} Tmp_2044: int;
  var {:pointer} Tmp_2045: int;
  var {:scalar} Tmp_2046: int;
  var {:pointer} Tmp_2047: int;
  var {:pointer} Tmp_2048: int;
  var {:pointer} Tmp_2049: int;
  var {:pointer} Tmp_2050: int;
  var {:pointer} Tmp_2051: int;
  var {:pointer} sdv_663: int;
  var {:pointer} Tmp_2052: int;
  var {:scalar} Tmp_2053: int;
  var {:pointer} Tmp_2054: int;
  var {:pointer} Tmp_2055: int;
  var {:pointer} Tmp_2056: int;
  var {:scalar} Tmp_2057: int;
  var {:scalar} Tmp_2058: int;
  var {:pointer} sdv_664: int;
  var {:pointer} sdv_665: int;
  var {:scalar} Tmp_2059: int;
  var {:pointer} Tmp_2060: int;
  var {:pointer} Tmp_2061: int;
  var {:pointer} Tmp_2062: int;
  var {:pointer} sdv_666: int;
  var {:pointer} Tmp_2063: int;
  var {:pointer} Tmp_2064: int;
  var {:pointer} sdv_667: int;
  var {:scalar} Tmp_2065: int;
  var {:pointer} Tmp_2066: int;
  var {:pointer} Tmp_2067: int;
  var {:pointer} irp_6: int;
  var {:pointer} Tmp_2068: int;
  var {:pointer} Tmp_2069: int;
  var {:pointer} Tmp_2070: int;
  var {:pointer} Tmp_2071: int;
  var {:scalar} sdv_669: int;
  var {:pointer} Tmp_2072: int;
  var {:pointer} Tmp_2073: int;
  var {:scalar} Tmp_2074: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} Tmp_2075: int;
  var {:pointer} sdv_670: int;
  var {:scalar} Tmp_2076: int;
  var {:pointer} Tmp_2077: int;
  var {:pointer} Tmp_2078: int;
  var {:pointer} Tmp_2079: int;
  var {:scalar} valid: int;
  var {:pointer} Tmp_2081: int;
  var {:scalar} Tmp_2082: int;
  var {:scalar} status_67: int;
  var {:pointer} Tmp_2083: int;
  var {:scalar} Tmp_2084: int;
  var {:pointer} Tmp_2085: int;
  var {:scalar} Tmp_2086: int;
  var {:pointer} Tmp_2087: int;
  var {:pointer} Tmp_2088: int;
  var {:scalar} Tmp_2089: int;
  var {:pointer} Tmp_2090: int;
  var {:scalar} Tmp_2091: int;
  var {:scalar} i_5: int;
  var {:pointer} Tmp_2092: int;
  var {:pointer} Tmp_2093: int;
  var {:pointer} Tmp_2094: int;
  var {:pointer} Tmp_2095: int;
  var {:scalar} Tmp_2096: int;
  var {:scalar} Tmp_2097: int;
  var {:pointer} Tmp_2098: int;
  var {:scalar} Tmp_2099: int;
  var {:scalar} Tmp_2100: int;
  var {:scalar} Tmp_2102: int;
  var {:pointer} Tmp_2104: int;
  var {:pointer} Tmp_2105: int;
  var {:pointer} Tmp_2106: int;
  var {:scalar} Tmp_2107: int;
  var {:scalar} Tmp_2110: int;
  var {:scalar} Tmp_2111: int;
  var {:pointer} context_2: int;
  var {:scalar} Tmp_2112: int;
  var {:scalar} Tmp_2113: int;
  var {:scalar} Tmp_2114: int;
  var {:scalar} Tmp_2116: int;
  var {:pointer} Tmp_2117: int;
  var {:pointer} Tmp_2118: int;
  var {:scalar} Tmp_2119: int;
  var {:pointer} Tmp_2120: int;
  var {:scalar} Tmp_2121: int;
  var {:pointer} Tmp_2122: int;
  var {:pointer} Tmp_2123: int;
  var {:pointer} Tmp_2124: int;
  var {:pointer} Tmp_2125: int;
  var {:scalar} Tmp_2126: int;
  var {:pointer} sdv_673: int;
  var {:scalar} sdv_674: int;
  var {:pointer} Tmp_2127: int;
  var {:scalar} Tmp_2128: int;
  var {:pointer} fdoExtension_8: int;
  var {:pointer} Tmp_2129: int;
  var {:pointer} Tmp_2130: int;
  var {:pointer} Tmp_2131: int;
  var {:pointer} Tmp_2132: int;
  var {:pointer} Tmp_2133: int;
  var {:pointer} Tmp_2134: int;
  var {:pointer} Tmp_2135: int;
  var {:scalar} Tmp_2136: int;
  var {:scalar} Tmp_2137: int;
  var {:pointer} Tmp_2138: int;
  var {:scalar} Tmp_2139: int;
  var {:scalar} cIrql_9: int;
  var {:pointer} Tmp_2140: int;
  var {:scalar} Tmp_2142: int;
  var {:scalar} status_68: int;
  var {:pointer} packet_13: int;
  var {:scalar} Tmp_2143: int;
  var {:scalar} Tmp_2144: int;
  var {:pointer} Tmp_2145: int;
  var {:scalar} Tmp_2146: int;
  var {:scalar} Tmp_2147: int;
  var {:pointer} Tmp_2148: int;
  var {:pointer} Tmp_2149: int;
  var {:pointer} Tmp_2150: int;
  var {:scalar} Tmp_2151: int;
  var {:pointer} Tmp_2152: int;
  var {:pointer} DeviceObject_38: int;
  var {:scalar} FreeLists: int;
  var {:scalar} OnRemove: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_2934: int;
  var vslice_dummy_var_2935: int;
  var vslice_dummy_var_2936: int;
  var vslice_dummy_var_2937: int;
  var vslice_dummy_var_2938: int;

  anon0:
    DeviceObject_38 := actual_DeviceObject_38;
    FreeLists := actual_FreeLists;
    OnRemove := actual_OnRemove;
    call {:si_unique_call 2445} Tmp_2032 := __HAVOC_malloc(2680);
    call {:si_unique_call 2446} Tmp_2036 := __HAVOC_malloc(2680);
    call {:si_unique_call 2447} Tmp_2043 := __HAVOC_malloc(4);
    call {:si_unique_call 2448} Tmp_2044 := __HAVOC_malloc(2680);
    call {:si_unique_call 2449} Tmp_2045 := __HAVOC_malloc(2680);
    call {:si_unique_call 2450} Tmp_2047 := __HAVOC_malloc(2680);
    call {:si_unique_call 2451} Tmp_2048 := __HAVOC_malloc(2680);
    call {:si_unique_call 2452} Tmp_2049 := __HAVOC_malloc(2680);
    call {:si_unique_call 2453} Tmp_2051 := __HAVOC_malloc(2680);
    call {:si_unique_call 2454} Tmp_2056 := __HAVOC_malloc(2680);
    call {:si_unique_call 2455} Tmp_2061 := __HAVOC_malloc(2680);
    call {:si_unique_call 2456} Tmp_2062 := __HAVOC_malloc(4);
    call {:si_unique_call 2457} Tmp_2063 := __HAVOC_malloc(2680);
    call {:si_unique_call 2458} Tmp_2064 := __HAVOC_malloc(4);
    call {:si_unique_call 2459} Tmp_2066 := __HAVOC_malloc(2680);
    call {:si_unique_call 2460} Tmp_2067 := __HAVOC_malloc(2680);
    call {:si_unique_call 2461} Tmp_2070 := __HAVOC_malloc(4);
    call {:si_unique_call 2462} Tmp_2073 := __HAVOC_malloc(2680);
    call {:si_unique_call 2463} Tmp_2077 := __HAVOC_malloc(2680);
    call {:si_unique_call 2464} Tmp_2078 := __HAVOC_malloc(2680);
    call {:si_unique_call 2465} Tmp_2085 := __HAVOC_malloc(2680);
    call {:si_unique_call 2466} Tmp_2087 := __HAVOC_malloc(2680);
    call {:si_unique_call 2467} Tmp_2092 := __HAVOC_malloc(4);
    call {:si_unique_call 2468} Tmp_2093 := __HAVOC_malloc(4);
    call {:si_unique_call 2469} Tmp_2094 := __HAVOC_malloc(2680);
    call {:si_unique_call 2470} Tmp_2098 := __HAVOC_malloc(4);
    call {:si_unique_call 2471} Tmp_2104 := __HAVOC_malloc(2680);
    call {:si_unique_call 2472} Tmp_2106 := __HAVOC_malloc(2680);
    call {:si_unique_call 2473} Tmp_2117 := __HAVOC_malloc(2680);
    call {:si_unique_call 2474} Tmp_2120 := __HAVOC_malloc(4);
    call {:si_unique_call 2475} Tmp_2122 := __HAVOC_malloc(2680);
    call {:si_unique_call 2476} Tmp_2123 := __HAVOC_malloc(4);
    call {:si_unique_call 2477} Tmp_2125 := __HAVOC_malloc(2680);
    call {:si_unique_call 2478} Tmp_2127 := __HAVOC_malloc(2680);
    call {:si_unique_call 2479} Tmp_2129 := __HAVOC_malloc(2680);
    call {:si_unique_call 2480} Tmp_2131 := __HAVOC_malloc(2680);
    call {:si_unique_call 2481} Tmp_2134 := __HAVOC_malloc(2680);
    call {:si_unique_call 2482} Tmp_2140 := __HAVOC_malloc(2680);
    call {:si_unique_call 2483} Tmp_2145 := __HAVOC_malloc(2680);
    call {:si_unique_call 2484} Tmp_2149 := __HAVOC_malloc(4);
    call {:si_unique_call 2485} Tmp_2150 := __HAVOC_malloc(2680);
    call {:si_unique_call 2486} Tmp_2152 := __HAVOC_malloc(2680);
    valid := 0;
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    havoc pdoExtension_17;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2064;
    assume {:nonnull} Tmp_2064 != 0;
    assume Tmp_2064 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    Tmp_2128 := FreeLists;
    havoc Tmp_2039;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2151;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_2934;
    call {:si_unique_call 2487} WPP_SF_qDd(Tmp_2151, 31, Tmp_2039, pdoExtension_17, vslice_dummy_var_2934, Tmp_2128);
    goto L19;

  L19:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2060;
    assume {:nonnull} Tmp_2060 != 0;
    assume Tmp_2060 > 0;
    havoc fdoExtension_8;
    Tmp_2142 := FreeLists;
    call {:si_unique_call 2488} Sbp2AddLog(pdoExtension_17, 1, -1016304048, Tmp_2142, fdoExtension_8);
    i_5 := 0;
    goto L33;

  L33:
    call {:si_unique_call 2489} Tmp_2041, i_5, Tmp_2112, Tmp_2122, Tmp_2127 := Sbp2CleanDeviceExtension#1_loop_L33(Tmp_2041, i_5, Tmp_2112, Tmp_2122, Tmp_2127, fdoExtension_8, DeviceObject_38);
    goto L33_last;

  L33_last:
    Tmp_2112 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2127;
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    Tmp_2041 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2122;
    assume {:nonnull} Tmp_2122 != 0;
    assume Tmp_2122 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    valid := 1;
    goto L34;

  L34:
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    call {:si_unique_call 2490} vslice_dummy_var_403 := KeCancelTimer(0);
    call {:si_unique_call 2491} CleanupOrbList#0(pdoExtension_17, -1073741248);
    goto L43;

  L43:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2492} FreeAddressRange#1(pdoExtension_17, DummyContext__DEVICE_EXTENSION(pdoExtension_17));
    goto L50;

  L50:
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} FreeLists != 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2043;
    assume {:nonnull} Tmp_2043 != 0;
    assume Tmp_2043 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    Tmp_2082 := OnRemove;
    Tmp_2075 := FreeLists;
    havoc Tmp_2095;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2100;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_2935;
    call {:si_unique_call 2493} WPP_SF_qDdd(Tmp_2100, 32, Tmp_2095, pdoExtension_17, vslice_dummy_var_2935, Tmp_2075, Tmp_2082);
    goto L60;

  L60:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2494} FreeAddressRange#1(pdoExtension_17, TaskOrbStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2495} FreeAddressRange#1(pdoExtension_17, GlobalStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2496} FreeAddressRange#1(pdoExtension_17, ManagementOrbStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2497} sdv_673 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_673;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_6))] := -1073741810;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2498} vslice_dummy_var_406 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2499} sdv_IoCompleteRequest(0, 0);
    goto L84;

  L84:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2500} sdv_666 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_666;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_6))] := -1073741810;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2501} vslice_dummy_var_407 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2502} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2503} sdv_667 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_667;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_6))] := -1073741810;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2504} vslice_dummy_var_408 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2505} sdv_IoCompleteRequest(0, 0);
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    call {:si_unique_call 2506} vslice_dummy_var_404 := IoDeleteSymbolicLink(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2507} ExFreePoolWithTag(0, -330079661);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L116;

  L116:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2062;
    assume {:nonnull} Tmp_2062 != 0;
    assume Tmp_2062 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    havoc Tmp_2055;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2147;
    call {:si_unique_call 2508} WPP_SF_q(Tmp_2147, 33, Tmp_2055, pdoExtension_17);
    goto L240;

  L240:
    Tmp_2028 := 1;
    goto L1;

  L1:
    return;

  anon165_Then:
    goto L240;

  anon198_Then:
    goto L240;

  anon164_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L240;

  anon153_Then:
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2123;
    assume {:nonnull} Tmp_2123 != 0;
    assume Tmp_2123 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    havoc Tmp_2148;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2121;
    call {:si_unique_call 2509} WPP_SF_q(Tmp_2121, 34, Tmp_2148, pdoExtension_17);
    goto L132;

  L132:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2510} FreeAddressRange#1(pdoExtension_17, CommonBufferContext__DEVICE_EXTENSION(pdoExtension_17));
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    i_5 := 0;
    goto L147;

  L147:
    call {:si_unique_call 2511} i_5, context_2 := Sbp2CleanDeviceExtension#1_loop_L147(pdoExtension_17, i_5, context_2);
    goto L147_last;

  L147_last:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} 8 > i_5;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc context_2;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    call {:si_unique_call 2512} FreeAddressRange#1(pdoExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_2)));
    goto L154;

  L154:
    i_5 := i_5 + 1;
    goto L154_dummy;

  L154_dummy:
    assume false;
    return;

  anon192_Then:
    goto L154;

  anon157_Then:
    assume {:partition} i_5 >= 8;
    call {:si_unique_call 2513} ExFreePoolWithTag(0, -499031469);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L145;

  L145:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    call {:si_unique_call 2514} sdv_670 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_670;
    goto L167;

  L167:
    call {:si_unique_call 2515} Tmp_2033, sdv_665, statusFifoElement, Tmp_2098, Tmp_2138 := Sbp2CleanDeviceExtension#1_loop_L167(Tmp_2033, pdoExtension_17, sdv_665, statusFifoElement, Tmp_2098, Tmp_2138);
    goto L167_last;

  L167_last:
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} statusFifoElement != 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2098;
    assume {:nonnull} Tmp_2098 != 0;
    assume Tmp_2098 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    havoc Tmp_2138;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2033;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_2936;
    call {:si_unique_call 2516} WPP_SF_qqq(Tmp_2033, 35, Tmp_2138, pdoExtension_17, statusFifoElement, vslice_dummy_var_2936);
    goto L175;

  L175:
    call {:si_unique_call 2517} IoFreeMdl(0);
    call {:si_unique_call 2518} sdv_665 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_665;
    goto L175_dummy;

  L175_dummy:
    assume false;
    return;

  anon160_Then:
    goto L175;

  anon193_Then:
    goto L175;

  anon159_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;

  anon158_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 2519} ExFreePoolWithTag(0, -430742957);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L160;

  L160:
    call {:si_unique_call 2520} sdv_663 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_663;
    goto L191;

  L191:
    call {:si_unique_call 2521} sdv_664, Tmp_2132, packet_13 := Sbp2CleanDeviceExtension#1_loop_L191(sdv_664, Tmp_2132, packet_13);
    goto L191_last;

  L191_last:
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} packet_13 != 0;
    call {:si_unique_call 2522} sdv_ExFreePool(0);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    Tmp_2132 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(packet_13)];
    assume {:nonnull} Tmp_2132 != 0;
    assume Tmp_2132 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    call {:si_unique_call 2523} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 2524} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 2525} sdv_664 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_664;
    goto L199_dummy;

  L199_dummy:
    assume false;
    return;

  anon194_Then:
    goto L199;

  anon161_Then:
    assume {:partition} packet_13 == 0;
    call {:si_unique_call 2526} Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    call {:si_unique_call 2527} sdv_KeAcquireSpinLock(0, Tmp_2090);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    havoc cIrql_9;
    call {:si_unique_call 2528} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 2529} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    call {:si_unique_call 2530} IoFreeMdl(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2083;
    assume {:nonnull} Tmp_2083 != 0;
    assume Tmp_2083 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2118;
    assume {:nonnull} Tmp_2118 != 0;
    assume Tmp_2118 > 0;
    call {:si_unique_call 2531} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2050;
    assume {:nonnull} Tmp_2050 != 0;
    assume Tmp_2050 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2071;
    assume {:nonnull} Tmp_2071 != 0;
    assume Tmp_2071 > 0;
    goto L222;

  L222:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2081;
    assume {:nonnull} Tmp_2081 != 0;
    assume Tmp_2081 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2135;
    assume {:nonnull} Tmp_2135 != 0;
    assume Tmp_2135 > 0;
    call {:si_unique_call 2532} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2069;
    assume {:nonnull} Tmp_2069 != 0;
    assume Tmp_2069 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2088;
    assume {:nonnull} Tmp_2088 != 0;
    assume Tmp_2088 > 0;
    goto L228;

  L228:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2130;
    assume {:nonnull} Tmp_2130 != 0;
    assume Tmp_2130 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2054;
    assume {:nonnull} Tmp_2054 != 0;
    assume Tmp_2054 > 0;
    call {:si_unique_call 2533} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2035;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2124;
    assume {:nonnull} Tmp_2124 != 0;
    assume Tmp_2124 > 0;
    goto L54;

  L54:
    Tmp_2028 := 1;
    goto L1;

  anon197_Then:
    goto L54;

  anon196_Then:
    goto L228;

  anon195_Then:
    goto L222;

  anon163_Then:
    goto L54;

  anon162_Then:
    goto L216;

  anon156_Then:
    goto L160;

  anon191_Then:
    goto L145;

  anon155_Then:
    goto L132;

  anon190_Then:
    goto L132;

  anon154_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  anon152_Then:
    goto L116;

  anon189_Then:
    assume {:partition} irp_6 == 0;
    goto L108;

  anon188_Then:
    assume {:partition} irp_6 == 0;
    goto L96;

  anon187_Then:
    assume {:partition} irp_6 == 0;
    goto L84;

  anon150_Then:
    goto L54;

  anon151_Then:
    goto L60;

  anon186_Then:
    goto L60;

  anon149_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon148_Then:
    assume {:partition} FreeLists == 0;
    goto L54;

  anon147_Then:
    goto L50;

  anon146_Then:
    goto L43;

  anon145_Then:
    assume {:partition} valid == 0;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc vslice_dummy_var_2937;
    call {:si_unique_call 2534} Sbp2AddLog(pdoExtension_17, 1, -1016304078, vslice_dummy_var_2937, 0);
    Tmp_2028 := 0;
    goto L1;

  anon185_Then:
    i_5 := i_5 + 1;
    goto anon185_Then_dummy;

  anon185_Then_dummy:
    assume false;
    return;

  anon184_Then:
    goto L34;

  anon144_Then:
    goto L19;

  anon183_Then:
    goto L19;

  anon143_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L19;

  anon182_Then:
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    havoc fdoExtension_8;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    Tmp_2028 := 0;
    goto L1;

  anon199_Then:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    call {:si_unique_call 2535} status_68 := Sbp2EnableBusResetNotification#1(fdoExtension_8, 0);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} status_68 < 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2093;
    assume {:nonnull} Tmp_2093 != 0;
    assume Tmp_2093 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    havoc Tmp_2133;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2143;
    call {:si_unique_call 2536} WPP_SF_qD(Tmp_2143, 36, Tmp_2133, fdoExtension_8, status_68);
    goto L253;

  L253:
    call {:si_unique_call 2537} Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    call {:si_unique_call 2538} sdv_KeAcquireSpinLock(0, Tmp_2090);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    havoc cIrql_9;
    goto L273;

  L273:
    call {:si_unique_call 2539} Tmp_2029, Tmp_2030, Tmp_2032, Tmp_2034, Tmp_2036, Tmp_2037, pdoExtension_17, Tmp_2042, Tmp_2044, Tmp_2045, Tmp_2046, Tmp_2047, Tmp_2048, Tmp_2049, Tmp_2051, Tmp_2052, Tmp_2053, Tmp_2056, Tmp_2057, Tmp_2058, Tmp_2059, Tmp_2061, Tmp_2063, Tmp_2065, Tmp_2066, Tmp_2067, Tmp_2068, Tmp_2070, sdv_669, Tmp_2072, Tmp_2073, Tmp_2074, Tmp_2076, Tmp_2077, Tmp_2078, Tmp_2079, status_67, Tmp_2084, Tmp_2085, Tmp_2086, Tmp_2087, Tmp_2089, Tmp_2090, Tmp_2091, i_5, Tmp_2092, Tmp_2094, Tmp_2096, Tmp_2097, Tmp_2099, Tmp_2102, Tmp_2104, Tmp_2105, Tmp_2106, Tmp_2107, Tmp_2110, Tmp_2111, Tmp_2113, Tmp_2114, Tmp_2116, Tmp_2117, Tmp_2119, Tmp_2120, Tmp_2125, Tmp_2126, sdv_674, Tmp_2129, Tmp_2131, Tmp_2134, Tmp_2136, Tmp_2137, Tmp_2139, cIrql_9, Tmp_2140, Tmp_2144, Tmp_2145, Tmp_2146, Tmp_2149, Tmp_2150, Tmp_2152, DeviceObject_38, vslice_dummy_var_405, vslice_dummy_var_409, vslice_dummy_var_410 := Sbp2CleanDeviceExtension#1_loop_L273(Tmp_2029, Tmp_2030, Tmp_2032, Tmp_2034, Tmp_2036, Tmp_2037, pdoExtension_17, Tmp_2042, Tmp_2044, Tmp_2045, Tmp_2046, Tmp_2047, Tmp_2048, Tmp_2049, Tmp_2051, Tmp_2052, Tmp_2053, Tmp_2056, Tmp_2057, Tmp_2058, Tmp_2059, Tmp_2061, Tmp_2063, Tmp_2065, Tmp_2066, Tmp_2067, Tmp_2068, Tmp_2070, sdv_669, Tmp_2072, Tmp_2073, Tmp_2074, Tmp_2076, Tmp_2077, Tmp_2078, Tmp_2079, status_67, Tmp_2084, Tmp_2085, Tmp_2086, Tmp_2087, Tmp_2089, Tmp_2090, Tmp_2091, i_5, Tmp_2092, Tmp_2094, Tmp_2096, Tmp_2097, Tmp_2099, Tmp_2102, Tmp_2104, Tmp_2105, Tmp_2106, Tmp_2107, Tmp_2110, Tmp_2111, Tmp_2113, Tmp_2114, Tmp_2116, Tmp_2117, Tmp_2119, Tmp_2120, Tmp_2125, Tmp_2126, sdv_674, fdoExtension_8, Tmp_2129, Tmp_2131, Tmp_2134, Tmp_2136, Tmp_2137, Tmp_2139, cIrql_9, Tmp_2140, Tmp_2144, Tmp_2145, Tmp_2146, Tmp_2149, Tmp_2150, Tmp_2152, DeviceObject_38, vslice_dummy_var_405, vslice_dummy_var_409, vslice_dummy_var_410);
    goto L273_last;

  L273_last:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc i_5;
    Tmp_2076 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2045;
    assume {:nonnull} Tmp_2045 != 0;
    assume Tmp_2045 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    Tmp_2029 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2061;
    assume {:nonnull} Tmp_2061 != 0;
    assume Tmp_2061 > 0;
    havoc Tmp_2052;
    assume {:nonnull} Tmp_2052 != 0;
    assume Tmp_2052 > 0;
    havoc pdoExtension_17;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    Tmp_2111 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2094;
    assume {:nonnull} Tmp_2094 != 0;
    assume Tmp_2094 > 0;
    havoc DeviceObject_38;
    Tmp_2102 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2140;
    assume {:nonnull} Tmp_2140 != 0;
    assume Tmp_2140 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    Tmp_2091 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2125;
    assume {:nonnull} Tmp_2125 != 0;
    assume Tmp_2125 > 0;
    call {:si_unique_call 2540} sdv_ExFreePool(0);
    Tmp_2086 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2104;
    assume {:nonnull} Tmp_2104 != 0;
    assume Tmp_2104 > 0;
    Tmp_2030 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2150;
    assume {:nonnull} Tmp_2150 != 0;
    assume Tmp_2150 > 0;
    goto L283;

  L283:
    Tmp_2110 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2067;
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    Tmp_2058 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2152;
    assume {:nonnull} Tmp_2152 != 0;
    assume Tmp_2152 > 0;
    call {:si_unique_call 2541} sdv_ExFreePool(0);
    Tmp_2137 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2106;
    assume {:nonnull} Tmp_2106 != 0;
    assume Tmp_2106 > 0;
    Tmp_2116 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2145;
    assume {:nonnull} Tmp_2145 != 0;
    assume Tmp_2145 > 0;
    goto L290;

  L290:
    Tmp_2053 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2063;
    assume {:nonnull} Tmp_2063 != 0;
    assume Tmp_2063 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    Tmp_2126 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2077;
    assume {:nonnull} Tmp_2077 != 0;
    assume Tmp_2077 > 0;
    call {:si_unique_call 2542} sdv_ExFreePool(0);
    Tmp_2089 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2048;
    assume {:nonnull} Tmp_2048 != 0;
    assume Tmp_2048 > 0;
    Tmp_2113 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2036;
    assume {:nonnull} Tmp_2036 != 0;
    assume Tmp_2036 > 0;
    goto L297;

  L297:
    Tmp_2096 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2051;
    assume {:nonnull} Tmp_2051 != 0;
    assume Tmp_2051 > 0;
    call {:si_unique_call 2543} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 2544} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 2545} IoDeleteDevice(0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2070;
    assume {:nonnull} Tmp_2070 != 0;
    assume Tmp_2070 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    havoc Tmp_2079;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2065;
    call {:si_unique_call 2546} WPP_SF_q(Tmp_2065, 37, Tmp_2079, pdoExtension_17);
    goto L317;

  L317:
    call {:si_unique_call 2547} Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    call {:si_unique_call 2548} sdv_KeAcquireSpinLock(0, Tmp_2090);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    havoc cIrql_9;
    goto L328;

  L328:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto L328_dummy;

  L328_dummy:
    assume false;
    return;

  anon172_Then:
    goto L317;

  anon206_Then:
    goto L317;

  anon171_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon205_Then:
    goto L297;

  anon204_Then:
    goto L290;

  anon203_Then:
    goto L283;

  anon202_Then:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    Tmp_2037 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2085;
    assume {:nonnull} Tmp_2085 != 0;
    assume Tmp_2085 > 0;
    havoc DeviceObject_38;
    call {:si_unique_call 2549} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 2550} sdv_674 := Sbp2CleanDeviceExtension#0(DeviceObject_38, 1, 0);
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} sdv_674 != 0;
    call {:si_unique_call 2551} status_67 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} status_67 < 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2120;
    assume {:nonnull} Tmp_2120 != 0;
    assume Tmp_2120 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    havoc Tmp_2105;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2146;
    call {:si_unique_call 2552} WPP_SF_qD(Tmp_2146, 38, Tmp_2105, DeviceObject_38, status_67);
    goto L348;

  L348:
    call {:si_unique_call 2553} Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    call {:si_unique_call 2554} sdv_KeRaiseIrql(2, Tmp_2090);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    havoc cIrql_9;
    call {:si_unique_call 2555} Sbp2StartNextPacketByKey#1(DeviceObject_38, 0);
    call {:si_unique_call 2556} sdv_KeLowerIrql(cIrql_9);
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2092;
    assume {:nonnull} Tmp_2092 != 0;
    assume Tmp_2092 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    havoc Tmp_2072;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2034;
    call {:si_unique_call 2557} WPP_SF_qq(Tmp_2034, 39, Tmp_2072, pdoExtension_17, DeviceObject_38);
    goto L361;

  L361:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2558} vslice_dummy_var_409 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_17), 0, 0);
    call {:si_unique_call 2559} vslice_dummy_var_405 := KeCancelTimer(0);
    call {:si_unique_call 2560} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto L379;

  L379:
    call {:si_unique_call 2561} sdv_669, vslice_dummy_var_410 := Sbp2CleanDeviceExtension#1_loop_L379(pdoExtension_17, sdv_669, vslice_dummy_var_410);
    goto L379_last;

  L379_last:
    call {:si_unique_call 2578} sdv_669 := sdv_IsListEmpty(0);
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} sdv_669 == 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2562} vslice_dummy_var_410 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2563} sdv_ExFreePool(0);
    goto anon177_Else_dummy;

  anon177_Else_dummy:
    assume false;
    return;

  anon177_Then:
    assume {:partition} sdv_669 != 0;
    call {:si_unique_call 2564} Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    call {:si_unique_call 2565} sdv_KeAcquireSpinLock(0, Tmp_2090);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    havoc cIrql_9;
    Tmp_2099 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2129;
    assume {:nonnull} Tmp_2129 != 0;
    assume Tmp_2129 > 0;
    call {:si_unique_call 2566} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 2567} IoDeleteDevice(0);
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2149;
    assume {:nonnull} Tmp_2149 != 0;
    assume Tmp_2149 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    havoc Tmp_2068;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2107;
    call {:si_unique_call 2568} WPP_SF_q(Tmp_2107, 40, Tmp_2068, pdoExtension_17);
    goto L398;

  L398:
    call {:si_unique_call 2569} Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    call {:si_unique_call 2570} sdv_KeAcquireSpinLock(0, Tmp_2090);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    havoc cIrql_9;
    goto L277;

  L277:
    Tmp_2074 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2047;
    assume {:nonnull} Tmp_2047 != 0;
    assume Tmp_2047 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    Tmp_2097 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2073;
    assume {:nonnull} Tmp_2073 != 0;
    assume Tmp_2073 > 0;
    call {:si_unique_call 2571} sdv_ExFreePool(0);
    Tmp_2042 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2049;
    assume {:nonnull} Tmp_2049 != 0;
    assume Tmp_2049 > 0;
    Tmp_2084 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2131;
    assume {:nonnull} Tmp_2131 != 0;
    assume Tmp_2131 > 0;
    goto L423;

  L423:
    Tmp_2144 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2078;
    assume {:nonnull} Tmp_2078 != 0;
    assume Tmp_2078 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    Tmp_2059 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2134;
    assume {:nonnull} Tmp_2134 != 0;
    assume Tmp_2134 > 0;
    call {:si_unique_call 2572} sdv_ExFreePool(0);
    Tmp_2057 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2087;
    assume {:nonnull} Tmp_2087 != 0;
    assume Tmp_2087 > 0;
    Tmp_2114 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2066;
    assume {:nonnull} Tmp_2066 != 0;
    assume Tmp_2066 > 0;
    goto L430;

  L430:
    Tmp_2119 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2056;
    assume {:nonnull} Tmp_2056 != 0;
    assume Tmp_2056 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    Tmp_2046 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2117;
    assume {:nonnull} Tmp_2117 != 0;
    assume Tmp_2117 > 0;
    call {:si_unique_call 2573} sdv_ExFreePool(0);
    Tmp_2136 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2044;
    assume {:nonnull} Tmp_2044 != 0;
    assume Tmp_2044 > 0;
    Tmp_2139 := i_5;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2032;
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    goto L328;

  anon211_Then:
    goto L328;

  anon210_Then:
    goto L430;

  anon209_Then:
    goto L423;

  anon179_Then:
    goto L398;

  anon208_Then:
    goto L398;

  anon178_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L398;

  anon176_Then:
    goto L361;

  anon207_Then:
    goto L361;

  anon175_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L361;

  anon181_Then:
    goto L348;

  anon212_Then:
    goto L348;

  anon180_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L348;

  anon174_Then:
    assume {:partition} 0 <= status_67;
    goto L348;

  anon173_Then:
    assume {:partition} sdv_674 == 0;
    call {:si_unique_call 2574} Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    call {:si_unique_call 2575} sdv_KeAcquireSpinLock(0, Tmp_2090);
    assume {:nonnull} Tmp_2090 != 0;
    assume Tmp_2090 > 0;
    havoc cIrql_9;
    goto L277;

  anon201_Then:
    goto L277;

  anon169_Then:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc vslice_dummy_var_2938;
    call {:si_unique_call 2576} DeAllocateIrpAndIrb(fdoExtension_8, vslice_dummy_var_2938);
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto L443;

  L443:
    call {:si_unique_call 2577} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto L54;

  anon170_Then:
    goto L443;

  anon168_Then:
    goto L253;

  anon213_Then:
    goto L253;

  anon167_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L253;

  anon166_Then:
    assume {:partition} 0 <= status_68;
    goto L253;

  anon200_Then:
    goto L253;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_38: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2028: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, queuedWithoutMarking, locked, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_2028 == 1 || Tmp_2028 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "FreeAddressRange"} FreeAddressRange#0(actual_DeviceExtension_7: int, actual_Context_6: int)
{
  var {:pointer} Tmp_1342: int;
  var {:pointer} Tmp_1344: int;
  var {:scalar} Tmp_1345: int;
  var {:scalar} sdv_442: int;
  var {:pointer} Tmp_1346: int;
  var {:pointer} Tmp_1347: int;
  var {:pointer} Tmp_1348: int;
  var {:pointer} Tmp_1349: int;
  var {:scalar} sdv_443: int;
  var {:pointer} Tmp_1350: int;
  var {:pointer} Tmp_1351: int;
  var {:pointer} Tmp_1352: int;
  var {:pointer} Tmp_1353: int;
  var {:pointer} Tmp_1354: int;
  var {:scalar} routine_1: int;
  var {:pointer} Tmp_1355: int;
  var {:pointer} packet_10: int;
  var {:scalar} status_39: int;
  var {:pointer} Tmp_1356: int;
  var {:pointer} Tmp_1357: int;
  var {:scalar} Tmp_1358: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Context_6: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_2939: int;

  anon0:
    call {:si_unique_call 2579} vslice_dummy_var_411 := __HAVOC_malloc(4);
    call {:si_unique_call 2580} packet_10 := __HAVOC_malloc(4);
    DeviceExtension_7 := actual_DeviceExtension_7;
    Context_6 := actual_Context_6;
    call {:si_unique_call 2581} Tmp_1344 := __HAVOC_malloc(4);
    call {:si_unique_call 2582} Tmp_1352 := __HAVOC_malloc(4);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 2583} AllocateIrpAndIrb(DeviceExtension_7, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_10] != 0;
    call {:si_unique_call 2584} Sbp2AddLog(DeviceExtension_7, 32, -968797586, DeviceExtension_7, Context_6);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1347;
    assume {:nonnull} Tmp_1347 != 0;
    assume Tmp_1347 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1356;
    assume {:nonnull} Tmp_1356 != 0;
    assume Tmp_1356 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1353;
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1355;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_1355 != 0;
    assume Tmp_1355 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1349;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_1349 != 0;
    assume Tmp_1349 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Context_6 == CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto L27;

  L27:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1354;
    assume {:nonnull} Tmp_1354 != 0;
    assume Tmp_1354 > 0;
    call {:si_unique_call 2585} sdv_443 := sdv_KeGetCurrentIrql();
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_443 >= 2;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc routine_1;
    assume routine_1 == 0;
    call {:si_unique_call 2586} Sbp2AddLog(DeviceExtension_7, 32, -968797647, DeviceExtension_7, status_39);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_39 < 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1352;
    assume {:nonnull} Tmp_1352 != 0;
    assume Tmp_1352 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_1348;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1358;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    havoc vslice_dummy_var_2939;
    call {:si_unique_call 2587} WPP_SF_qD(Tmp_1358, 13, Tmp_1348, vslice_dummy_var_2939, status_39);
    goto L49;

  L49:
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 2588} IoFreeMdl(0);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto L51;

  L51:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    call {:si_unique_call 2589} DeAllocateIrpAndIrb(DeviceExtension_7, Mem_T.P_IRBIRP[packet_10]);
    goto L1;

  L1:
    return;

  anon46_Then:
    goto L51;

  anon41_Then:
    goto L49;

  anon48_Then:
    goto L49;

  anon40_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon39_Then:
    assume {:partition} 0 <= status_39;
    goto L49;

  anon38_Then:
    goto L32;

  L32:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    assume false;
    call {:si_unique_call 2590} Sbp2AddLog(DeviceExtension_7, 32, -968797646, DeviceExtension_7, status_39);
    return;

  anon37_Then:
    assume {:partition} 2 > sdv_443;
    goto L32;

  anon36_Then:
    assume {:partition} Context_6 != CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    call {:si_unique_call 2591} sdv_442 := sdv_MmGetMdlByteCount(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1351;
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    havoc Tmp_1357;
    assume {:nonnull} Tmp_1357 != 0;
    assume Tmp_1357 > 0;
    goto L27;

  anon45_Then:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Context_6 == GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1350;
    assume {:nonnull} Tmp_1350 != 0;
    assume Tmp_1350 > 0;
    havoc Tmp_1346;
    assume {:nonnull} Tmp_1346 != 0;
    assume Tmp_1346 > 0;
    goto L27;

  anon35_Then:
    assume {:partition} Context_6 != GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    goto L27;

  anon34_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_10] == 0;
    goto L1;

  anon33_Then:
    goto L1;
}



procedure {:origName "FreeAddressRange"} FreeAddressRange#0(actual_DeviceExtension_7: int, actual_Context_6: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "FreeAddressRange"} FreeAddressRange#1(actual_DeviceExtension_7: int, actual_Context_6: int)
{
  var {:pointer} Tmp_1342: int;
  var {:pointer} Tmp_1344: int;
  var {:scalar} Tmp_1345: int;
  var {:scalar} sdv_442: int;
  var {:pointer} Tmp_1346: int;
  var {:pointer} Tmp_1347: int;
  var {:pointer} Tmp_1348: int;
  var {:pointer} Tmp_1349: int;
  var {:scalar} sdv_443: int;
  var {:pointer} Tmp_1350: int;
  var {:pointer} Tmp_1351: int;
  var {:pointer} Tmp_1352: int;
  var {:pointer} Tmp_1353: int;
  var {:pointer} Tmp_1354: int;
  var {:scalar} routine_1: int;
  var {:pointer} Tmp_1355: int;
  var {:pointer} packet_10: int;
  var {:scalar} status_39: int;
  var {:pointer} Tmp_1356: int;
  var {:pointer} Tmp_1357: int;
  var {:scalar} Tmp_1358: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Context_6: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_2940: int;
  var vslice_dummy_var_2941: int;

  anon0:
    call {:si_unique_call 2592} vslice_dummy_var_412 := __HAVOC_malloc(4);
    call {:si_unique_call 2593} packet_10 := __HAVOC_malloc(4);
    DeviceExtension_7 := actual_DeviceExtension_7;
    Context_6 := actual_Context_6;
    call {:si_unique_call 2594} Tmp_1344 := __HAVOC_malloc(4);
    call {:si_unique_call 2595} Tmp_1352 := __HAVOC_malloc(4);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 2596} AllocateIrpAndIrb(DeviceExtension_7, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_10] != 0;
    call {:si_unique_call 2597} Sbp2AddLog(DeviceExtension_7, 32, -968797586, DeviceExtension_7, Context_6);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1347;
    assume {:nonnull} Tmp_1347 != 0;
    assume Tmp_1347 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1356;
    assume {:nonnull} Tmp_1356 != 0;
    assume Tmp_1356 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1353;
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1355;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_1355 != 0;
    assume Tmp_1355 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1349;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_1349 != 0;
    assume Tmp_1349 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Context_6 == CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto L27;

  L27:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1354;
    assume {:nonnull} Tmp_1354 != 0;
    assume Tmp_1354 > 0;
    call {:si_unique_call 2598} sdv_443 := sdv_KeGetCurrentIrql();
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_443 >= 2;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc routine_1;
    assume routine_1 == 0;
    call {:si_unique_call 2599} Sbp2AddLog(DeviceExtension_7, 32, -968797647, DeviceExtension_7, status_39);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_39 < 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1352;
    assume {:nonnull} Tmp_1352 != 0;
    assume Tmp_1352 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_1348;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1358;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    havoc vslice_dummy_var_2940;
    call {:si_unique_call 2600} WPP_SF_qD(Tmp_1358, 13, Tmp_1348, vslice_dummy_var_2940, status_39);
    goto L49;

  L49:
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 2601} IoFreeMdl(0);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto L51;

  L51:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    call {:si_unique_call 2602} DeAllocateIrpAndIrb(DeviceExtension_7, Mem_T.P_IRBIRP[packet_10]);
    goto L1;

  L1:
    return;

  anon46_Then:
    goto L51;

  anon41_Then:
    goto L49;

  anon48_Then:
    goto L49;

  anon40_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon39_Then:
    assume {:partition} 0 <= status_39;
    goto L49;

  anon38_Then:
    goto L32;

  L32:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    call {:si_unique_call 2603} status_39 := Sbp2SendRequest#0(DeviceExtension_7, Mem_T.P_IRBIRP[packet_10], 2);
    call {:si_unique_call 2604} Sbp2AddLog(DeviceExtension_7, 32, -968797646, DeviceExtension_7, status_39);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_39 < 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1344;
    assume {:nonnull} Tmp_1344 != 0;
    assume Tmp_1344 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc Tmp_1342;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1345;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    havoc vslice_dummy_var_2941;
    call {:si_unique_call 2605} WPP_SF_qD(Tmp_1345, 14, Tmp_1342, vslice_dummy_var_2941, status_39);
    goto L49;

  anon44_Then:
    goto L49;

  anon47_Then:
    goto L49;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon42_Then:
    assume {:partition} 0 <= status_39;
    goto L49;

  anon37_Then:
    assume {:partition} 2 > sdv_443;
    goto L32;

  anon36_Then:
    assume {:partition} Context_6 != CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    call {:si_unique_call 2606} sdv_442 := sdv_MmGetMdlByteCount(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1351;
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    havoc Tmp_1357;
    assume {:nonnull} Tmp_1357 != 0;
    assume Tmp_1357 > 0;
    goto L27;

  anon45_Then:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Context_6 == GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1350;
    assume {:nonnull} Tmp_1350 != 0;
    assume Tmp_1350 > 0;
    havoc Tmp_1346;
    assume {:nonnull} Tmp_1346 != 0;
    assume Tmp_1346 > 0;
    goto L27;

  anon35_Then:
    assume {:partition} Context_6 != GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    goto L27;

  anon34_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_10] == 0;
    goto L1;

  anon33_Then:
    goto L1;
}



procedure {:origName "FreeAddressRange"} FreeAddressRange#1(actual_DeviceExtension_7: int, actual_Context_6: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#0(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2466: int)
{
  var {:scalar} waitValue_5: int;
  var {:pointer} Tmp_2467: int;
  var {:pointer} Tmp_2468: int;
  var {:pointer} Tmp_2469: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} Tmp_2470: int;
  var {:pointer} Tmp_2471: int;
  var {:pointer} Tmp_2472: int;
  var {:pointer} Tmp_2474: int;
  var {:pointer} Tmp_2475: int;
  var {:pointer} packet_16: int;
  var {:pointer} FdoExtension_7: int;
  var {:scalar} Enable: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_2942: int;

  anon0:
    call {:si_unique_call 2607} waitValue_5 := __HAVOC_malloc(20);
    call {:si_unique_call 2608} packet_16 := __HAVOC_malloc(4);
    FdoExtension_7 := actual_FdoExtension_7;
    Enable := actual_Enable;
    ntStatus_1 := 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc vslice_dummy_var_2942;
    Mem_T.P_IRBIRP[packet_16] := vslice_dummy_var_2942;
    goto L12;

  L12:
    assume {:nonnull} waitValue_5 != 0;
    assume waitValue_5 > 0;
    call {:si_unique_call 2609} vslice_dummy_var_415 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_5);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L22;

  L22:
    call {:si_unique_call 2610} vslice_dummy_var_413 := KeReleaseMutex(0, 0);
    goto L25;

  L25:
    Tmp_2466 := ntStatus_1;
    return;

  anon28_Then:
    goto L20;

  L20:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2472;
    assume {:nonnull} Tmp_2472 != 0;
    assume Tmp_2472 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2475;
    assume {:nonnull} Tmp_2475 != 0;
    assume Tmp_2475 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Enable != 0;
    call {:si_unique_call 2611} vslice_dummy_var_414 := Sbp2GetHostDDIVersion#0(FdoExtension_7);
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2468;
    assume {:nonnull} Tmp_2468 != 0;
    assume Tmp_2468 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2469;
    assume {:nonnull} Tmp_2469 != 0;
    assume Tmp_2469 > 0;
    goto L36;

  L36:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2470;
    assume {:nonnull} Tmp_2470 != 0;
    assume Tmp_2470 > 0;
    goto L37;

  L37:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    assume false;
    return;

  anon23_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2467;
    assume {:nonnull} Tmp_2467 != 0;
    assume Tmp_2467 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2471;
    assume {:nonnull} Tmp_2471 != 0;
    assume Tmp_2471 > 0;
    goto L36;

  anon29_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2474;
    assume {:nonnull} Tmp_2474 != 0;
    assume Tmp_2474 > 0;
    goto L37;

  anon21_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L20;

  anon22_Then:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L22;

  anon30_Then:
    goto L20;

  anon27_Then:
    call {:si_unique_call 2612} AllocateIrpAndIrb(FdoExtension_7, packet_16);
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_16] != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  anon26_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_16] == 0;
    ntStatus_1 := -1073741670;
    goto L25;
}



procedure {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#0(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2466: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} Tmp_2466 == 0 || Tmp_2466 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#1(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2466: int)
{
  var {:scalar} waitValue_5: int;
  var {:pointer} Tmp_2467: int;
  var {:pointer} Tmp_2468: int;
  var {:pointer} Tmp_2469: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} Tmp_2470: int;
  var {:pointer} Tmp_2471: int;
  var {:pointer} Tmp_2472: int;
  var {:pointer} Tmp_2474: int;
  var {:pointer} Tmp_2475: int;
  var {:pointer} packet_16: int;
  var {:pointer} FdoExtension_7: int;
  var {:scalar} Enable: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_2943: int;

  anon0:
    call {:si_unique_call 2613} waitValue_5 := __HAVOC_malloc(20);
    call {:si_unique_call 2614} packet_16 := __HAVOC_malloc(4);
    FdoExtension_7 := actual_FdoExtension_7;
    Enable := actual_Enable;
    ntStatus_1 := 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc vslice_dummy_var_2943;
    Mem_T.P_IRBIRP[packet_16] := vslice_dummy_var_2943;
    goto L12;

  L12:
    assume {:nonnull} waitValue_5 != 0;
    assume waitValue_5 > 0;
    call {:si_unique_call 2615} vslice_dummy_var_418 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_5);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L22;

  L22:
    call {:si_unique_call 2616} vslice_dummy_var_416 := KeReleaseMutex(0, 0);
    goto L25;

  L25:
    Tmp_2466 := ntStatus_1;
    return;

  anon28_Then:
    goto L20;

  L20:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2472;
    assume {:nonnull} Tmp_2472 != 0;
    assume Tmp_2472 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2475;
    assume {:nonnull} Tmp_2475 != 0;
    assume Tmp_2475 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Enable != 0;
    call {:si_unique_call 2617} vslice_dummy_var_417 := Sbp2GetHostDDIVersion#1(FdoExtension_7);
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2468;
    assume {:nonnull} Tmp_2468 != 0;
    assume Tmp_2468 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2469;
    assume {:nonnull} Tmp_2469 != 0;
    assume Tmp_2469 > 0;
    goto L36;

  L36:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2470;
    assume {:nonnull} Tmp_2470 != 0;
    assume Tmp_2470 > 0;
    goto L37;

  L37:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    call {:si_unique_call 2618} ntStatus_1 := Sbp2SendRequest#0(FdoExtension_7, Mem_T.P_IRBIRP[packet_16], 2);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} ntStatus_1 < 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L22;

  anon25_Then:
    assume {:partition} Enable == 0;
    goto L22;

  anon24_Then:
    assume {:partition} 0 <= ntStatus_1;
    goto L22;

  anon23_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2467;
    assume {:nonnull} Tmp_2467 != 0;
    assume Tmp_2467 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2471;
    assume {:nonnull} Tmp_2471 != 0;
    assume Tmp_2471 > 0;
    goto L36;

  anon29_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2474;
    assume {:nonnull} Tmp_2474 != 0;
    assume Tmp_2474 > 0;
    goto L37;

  anon21_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L20;

  anon22_Then:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L22;

  anon30_Then:
    goto L20;

  anon27_Then:
    call {:si_unique_call 2619} AllocateIrpAndIrb(FdoExtension_7, packet_16);
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_16] != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  anon26_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_16] == 0;
    ntStatus_1 := -1073741670;
    goto L25;
}



procedure {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#1(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2466: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, Mem_T.Irp__IRBIRP, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#0(actual_FdoExtension_5: int) returns (Tmp_2293: int)
{
  var {:pointer} Tmp_2294: int;
  var {:scalar} ntStatus: int;
  var {:pointer} Tmp_2295: int;
  var {:pointer} packet_14: int;
  var {:pointer} Tmp_2297: int;
  var {:scalar} HostDDIVersion: int;
  var {:pointer} Tmp_2298: int;
  var {:pointer} FdoExtension_5: int;

  anon0:
    call {:si_unique_call 2620} packet_14 := __HAVOC_malloc(4);
    call {:si_unique_call 2621} HostDDIVersion := __HAVOC_malloc(8);
    FdoExtension_5 := actual_FdoExtension_5;
    ntStatus := 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    Mem_T.P_IRBIRP[packet_14] := 0;
    call {:si_unique_call 2622} sdv_do_paged_code_check();
    call {:si_unique_call 2623} AllocateIrpAndIrb(FdoExtension_5, packet_14);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_14] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2298;
    assume {:nonnull} Tmp_2298 != 0;
    assume Tmp_2298 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2294;
    assume {:nonnull} Tmp_2294 != 0;
    assume Tmp_2294 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2295;
    assume {:nonnull} Tmp_2295 != 0;
    assume Tmp_2295 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2297;
    assume {:nonnull} Tmp_2297 != 0;
    assume Tmp_2297 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    assume false;
    return;

  anon5_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_14] == 0;
    Tmp_2293 := -1073741670;
    goto L1;

  L1:
    return;
}



procedure {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#0(actual_FdoExtension_5: int) returns (Tmp_2293: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} Tmp_2293 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#1(actual_FdoExtension_5: int) returns (Tmp_2293: int)
{
  var {:pointer} Tmp_2294: int;
  var {:scalar} ntStatus: int;
  var {:pointer} Tmp_2295: int;
  var {:pointer} packet_14: int;
  var {:pointer} Tmp_2297: int;
  var {:scalar} HostDDIVersion: int;
  var {:pointer} Tmp_2298: int;
  var {:pointer} FdoExtension_5: int;

  anon0:
    call {:si_unique_call 2624} packet_14 := __HAVOC_malloc(4);
    call {:si_unique_call 2625} HostDDIVersion := __HAVOC_malloc(8);
    FdoExtension_5 := actual_FdoExtension_5;
    ntStatus := 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    Mem_T.P_IRBIRP[packet_14] := 0;
    call {:si_unique_call 2626} sdv_do_paged_code_check();
    call {:si_unique_call 2627} AllocateIrpAndIrb(FdoExtension_5, packet_14);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_14] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2298;
    assume {:nonnull} Tmp_2298 != 0;
    assume Tmp_2298 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2294;
    assume {:nonnull} Tmp_2294 != 0;
    assume Tmp_2294 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2295;
    assume {:nonnull} Tmp_2295 != 0;
    assume Tmp_2295 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2297;
    assume {:nonnull} Tmp_2297 != 0;
    assume Tmp_2297 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    call {:si_unique_call 2628} ntStatus := Sbp2SendRequest#0(FdoExtension_5, Mem_T.P_IRBIRP[packet_14], 2);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} ntStatus >= 0;
    assume {:nonnull} FdoExtension_5 != 0;
    assume FdoExtension_5 > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} FdoExtension_5 != 0;
    assume FdoExtension_5 > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    goto L31;

  L31:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    call {:si_unique_call 2629} DeAllocateIrpAndIrb(FdoExtension_5, Mem_T.P_IRBIRP[packet_14]);
    Tmp_2293 := ntStatus;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} 0 > ntStatus;
    ntStatus := 0;
    goto L31;

  anon5_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_14] == 0;
    Tmp_2293 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#1(actual_FdoExtension_5: int) returns (Tmp_2293: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_18: int, actual_Key: int)
{
  var {:pointer} Tmp_1193: int;
  var {:scalar} sdv_378: int;
  var {:scalar} sdv_380: int;
  var {:pointer} sdv_381: int;
  var {:pointer} irp: int;
  var {:pointer} packet_7: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} DeviceObject_18: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_419: int;

  anon0:
    call {:si_unique_call 2630} vslice_dummy_var_419 := __HAVOC_malloc(4);
    DeviceObject_18 := actual_DeviceObject_18;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc deviceExtension;
    call {:si_unique_call 2631} Tmp_1193 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1193 != 0;
    assume Tmp_1193 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2632} sdv_378 := sdv_InterlockedIncrement(Tmp_1193);
    assume {:nonnull} Tmp_1193 != 0;
    assume Tmp_1193 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_378 == 1;
    goto L11;

  L11:
    call {:si_unique_call 2633} Tmp_1193, sdv_380, sdv_381, irp, packet_7 := Sbp2StartNextPacketByKey#0_loop_L11(Tmp_1193, sdv_380, sdv_381, irp, packet_7, deviceExtension, DeviceObject_18, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    call {:si_unique_call 2638} packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_18), Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} packet_7 != 0;
    call {:si_unique_call 2634} sdv_381 := sdv_containing_record(packet_7, 64);
    irp := sdv_381;
    call {:si_unique_call 2635} Sbp2StartIo#0(DeviceObject_18, irp);
    goto L17;

  L17:
    call {:si_unique_call 2636} Tmp_1193 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1193 != 0;
    assume Tmp_1193 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2637} sdv_380 := sdv_InterlockedDecrement(Tmp_1193);
    assume {:nonnull} Tmp_1193 != 0;
    assume Tmp_1193 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_380 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} sdv_380 == 0;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} packet_7 == 0;
    goto L17;

  anon7_Then:
    assume {:partition} sdv_378 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_18: int, actual_Key: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_18: int, actual_Key: int)
{
  var {:pointer} Tmp_1193: int;
  var {:scalar} sdv_378: int;
  var {:scalar} sdv_380: int;
  var {:pointer} sdv_381: int;
  var {:pointer} irp: int;
  var {:pointer} packet_7: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} DeviceObject_18: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_420: int;

  anon0:
    call {:si_unique_call 2639} vslice_dummy_var_420 := __HAVOC_malloc(4);
    DeviceObject_18 := actual_DeviceObject_18;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc deviceExtension;
    call {:si_unique_call 2640} Tmp_1193 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1193 != 0;
    assume Tmp_1193 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2641} sdv_378 := sdv_InterlockedIncrement(Tmp_1193);
    assume {:nonnull} Tmp_1193 != 0;
    assume Tmp_1193 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_378 == 1;
    goto L11;

  L11:
    call {:si_unique_call 2642} Tmp_1193, sdv_380, sdv_381, irp, packet_7 := Sbp2StartNextPacketByKey#1_loop_L11(Tmp_1193, sdv_380, sdv_381, irp, packet_7, deviceExtension, DeviceObject_18, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    call {:si_unique_call 2647} packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_18), Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} packet_7 != 0;
    call {:si_unique_call 2643} sdv_381 := sdv_containing_record(packet_7, 64);
    irp := sdv_381;
    call {:si_unique_call 2644} Sbp2StartIo#1(DeviceObject_18, irp);
    goto L17;

  L17:
    call {:si_unique_call 2645} Tmp_1193 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1193 != 0;
    assume Tmp_1193 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2646} sdv_380 := sdv_InterlockedDecrement(Tmp_1193);
    assume {:nonnull} Tmp_1193 != 0;
    assume Tmp_1193 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_380 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} sdv_380 == 0;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} packet_7 == 0;
    goto L17;

  anon7_Then:
    assume {:partition} sdv_378 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_18: int, actual_Key: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_25: int, actual_Irp_16: int)
{
  var {:scalar} Tmp_1546: int;
  var {:pointer} Tmp_1547: int;
  var {:pointer} Tmp_1549: int;
  var {:pointer} Tmp_1550: int;
  var {:scalar} Tmp_1551: int;
  var {:scalar} sdv_485: int;
  var {:scalar} Tmp_1552: int;
  var {:pointer} Tmp_1553: int;
  var {:pointer} Tmp_1554: int;
  var {:scalar} Tmp_1555: int;
  var {:pointer} Tmp_1556: int;
  var {:pointer} Tmp_1557: int;
  var {:pointer} Tmp_1558: int;
  var {:pointer} Tmp_1559: int;
  var {:scalar} Tmp_1560: int;
  var {:scalar} sdv_487: int;
  var {:pointer} Tmp_1561: int;
  var {:pointer} sdv_488: int;
  var {:pointer} qIrp: int;
  var {:pointer} sdv_491: int;
  var {:pointer} Tmp_1562: int;
  var {:scalar} sdv_492: int;
  var {:scalar} queued_1: int;
  var {:scalar} Tmp_1563: int;
  var {:pointer} sdv_493: int;
  var {:pointer} srb_4: int;
  var {:scalar} Tmp_1564: int;
  var {:pointer} Tmp_1565: int;
  var {:pointer} deviceExtension_4: int;
  var {:scalar} Tmp_1566: int;
  var {:pointer} irpStack_10: int;
  var {:pointer} deferredIrp_2: int;
  var {:scalar} Tmp_1567: int;
  var {:scalar} Tmp_1568: int;
  var {:pointer} Tmp_1569: int;
  var {:pointer} sdv_494: int;
  var {:scalar} Tmp_1570: int;
  var {:pointer} Tmp_1571: int;
  var {:pointer} Tmp_1573: int;
  var {:pointer} Tmp_1574: int;
  var {:pointer} context: int;
  var {:scalar} Tmp_1575: int;
  var {:pointer} Tmp_1576: int;
  var {:pointer} Tmp_1577: int;
  var {:scalar} sdv_496: int;
  var {:scalar} sdv_497: int;
  var {:scalar} Tmp_1578: int;
  var {:scalar} Tmp_1579: int;
  var {:pointer} Tmp_1580: int;
  var {:scalar} Tmp_1581: int;
  var {:pointer} Tmp_1582: int;
  var {:pointer} Tmp_1583: int;
  var {:pointer} sdv_498: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} Tmp_1584: int;
  var {:pointer} Tmp_1585: int;
  var {:pointer} Tmp_1586: int;
  var {:pointer} Tmp_1587: int;
  var {:scalar} Tmp_1588: int;
  var {:pointer} Tmp_1589: int;
  var {:pointer} Tmp_1590: int;
  var {:pointer} Tmp_1591: int;
  var {:scalar} Tmp_1592: int;
  var {:scalar} status_45: int;
  var {:pointer} entry_2: int;
  var {:pointer} Tmp_1593: int;
  var {:pointer} Tmp_1594: int;
  var {:scalar} sdv_499: int;
  var {:pointer} queue_2: int;
  var {:scalar} state_1: int;
  var {:pointer} Tmp_1595: int;
  var {:pointer} DeviceObject_25: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_422: int;
  var vslice_dummy_var_423: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_427: int;
  var vslice_dummy_var_2944: int;
  var vslice_dummy_var_2945: int;
  var vslice_dummy_var_2946: int;
  var vslice_dummy_var_2947: int;
  var vslice_dummy_var_2948: int;
  var vslice_dummy_var_2949: int;
  var vslice_dummy_var_2950: int;
  var vslice_dummy_var_2951: int;
  var vslice_dummy_var_2952: int;
  var vslice_dummy_var_2953: int;

  anon0:
    call {:si_unique_call 2648} vslice_dummy_var_421 := __HAVOC_malloc(4);
    call {:si_unique_call 2649} context := __HAVOC_malloc(4);
    call {:si_unique_call 2650} state_1 := __HAVOC_malloc(8);
    DeviceObject_25 := actual_DeviceObject_25;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 2651} Tmp_1549 := __HAVOC_malloc(4);
    call {:si_unique_call 2652} Tmp_1550 := __HAVOC_malloc(4);
    call {:si_unique_call 2653} Tmp_1554 := __HAVOC_malloc(4);
    call {:si_unique_call 2654} Tmp_1559 := __HAVOC_malloc(4);
    call {:si_unique_call 2655} Tmp_1561 := __HAVOC_malloc(4);
    call {:si_unique_call 2656} Tmp_1562 := __HAVOC_malloc(4);
    call {:si_unique_call 2657} Tmp_1571 := __HAVOC_malloc(4);
    call {:si_unique_call 2658} Tmp_1573 := __HAVOC_malloc(4);
    call {:si_unique_call 2659} Tmp_1576 := __HAVOC_malloc(4);
    call {:si_unique_call 2660} Tmp_1584 := __HAVOC_malloc(4);
    call {:si_unique_call 2661} Tmp_1589 := __HAVOC_malloc(4);
    call {:si_unique_call 2662} Tmp_1590 := __HAVOC_malloc(4);
    call {:si_unique_call 2663} Tmp_1591 := __HAVOC_malloc(4);
    call {:si_unique_call 2664} Tmp_1593 := __HAVOC_malloc(4);
    call {:si_unique_call 2665} Tmp_1594 := __HAVOC_malloc(4);
    call {:si_unique_call 2666} irpStack_10 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    havoc deviceExtension_4;
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    havoc srb_4;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := 259;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2667} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2668} Sbp2AddLog(deviceExtension_4, 64, -747353745, Irp_16, srb_4);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    goto L24;

  L24:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    call {:si_unique_call 2669} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_45 := -1073741632;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := status_45;
    call {:si_unique_call 2670} sdv_IoCompleteRequest(0, 0);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1554;
    assume {:nonnull} Tmp_1554 != 0;
    assume Tmp_1554 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    havoc Tmp_1586;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1578;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc vslice_dummy_var_2944;
    call {:si_unique_call 2671} WPP_SF_qqD(Tmp_1578, 23, Tmp_1586, deviceExtension_4, Irp_16, vslice_dummy_var_2944);
    goto L39;

  L39:
    assume false;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2672} vslice_dummy_var_422 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    return;

  anon158_Then:
    goto L39;

  anon209_Then:
    goto L39;

  anon157_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L39;

  anon155_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    call {:si_unique_call 2673} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1549;
    assume {:nonnull} Tmp_1549 != 0;
    assume Tmp_1549 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    havoc Tmp_1569;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1560;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2945;
    havoc vslice_dummy_var_2946;
    call {:si_unique_call 2674} WPP_SF_qqqDD(Tmp_1560, 25, Tmp_1569, DeviceObject_25, Irp_16, srb_4, vslice_dummy_var_2945, vslice_dummy_var_2946);
    goto L67;

  L67:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    goto L76;

  L76:
    call {:si_unique_call 2675} Create1394TransactionForSrb#0(deviceExtension_4, srb_4, context);
    goto L1;

  L1:
    return;

  anon161_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc Tmp_1587;
    assume {:nonnull} Tmp_1587 != 0;
    assume Tmp_1587 > 0;
    goto L76;

  anon163_Then:
    goto L76;

  anon162_Then:
    goto L67;

  anon210_Then:
    goto L67;

  anon160_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon159_Then:
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2947;
    call {:si_unique_call 2676} sdv_496 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2947);
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} sdv_496 == 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1594;
    assume {:nonnull} Tmp_1594 != 0;
    assume Tmp_1594 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    havoc Tmp_1585;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1552;
    call {:si_unique_call 2677} WPP_SF_qq(Tmp_1552, 24, Tmp_1585, deviceExtension_4, Irp_16);
    goto L87;

  L87:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := 17;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2678} vslice_dummy_var_425 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    call {:si_unique_call 2679} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon166_Then:
    goto L87;

  anon211_Then:
    goto L87;

  anon165_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L87;

  anon164_Then:
    assume {:partition} sdv_496 != 0;
    goto L1;

  anon156_Then:
    call {:si_unique_call 2680} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2948;
    call {:si_unique_call 2681} queued_1 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2948);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} queued_1 == 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1576;
    assume {:nonnull} Tmp_1576 != 0;
    assume Tmp_1576 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    havoc Tmp_1556;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1592;
    call {:si_unique_call 2682} WPP_SF_qq(Tmp_1592, 26, Tmp_1556, deviceExtension_4, Irp_16);
    goto L215;

  L215:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2683} sdv_488 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto L116;

  L116:
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1550;
    assume {:nonnull} Tmp_1550 != 0;
    assume Tmp_1550 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    Tmp_1588 := queued_1;
    havoc Tmp_1577;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1566;
    call {:si_unique_call 2684} WPP_SF_qDq(Tmp_1566, 27, Tmp_1577, deviceExtension_4, Tmp_1588, Irp_16);
    goto L117;

  L117:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1561;
    assume {:nonnull} Tmp_1561 != 0;
    assume Tmp_1561 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    havoc Tmp_1563;
    havoc Tmp_1595;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1568;
    call {:si_unique_call 2685} WPP_SF_qd(Tmp_1568, 28, Tmp_1595, deviceExtension_4, Tmp_1563);
    goto L130;

  L130:
    call {:si_unique_call 2686} status_45 := PoRequestPowerIrp(0, 2, state_1, 0, 0, 0);
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} status_45 < 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1591;
    assume {:nonnull} Tmp_1591 != 0;
    assume Tmp_1591 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    havoc Tmp_1558;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1579;
    call {:si_unique_call 2687} WPP_SF_qD(Tmp_1579, 29, Tmp_1558, deviceExtension_4, status_45);
    goto L148;

  L148:
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} queued_1 == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2688} sdv_493 := _InlineInterlockedCompareExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), 0, Irp_16);
    deferredIrp_2 := sdv_493;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} deferredIrp_2 != Irp_16;
    Irp_16 := 0;
    goto L181;

  L181:
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} Irp_16 == 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1559;
    assume {:nonnull} Tmp_1559 != 0;
    assume Tmp_1559 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    havoc Tmp_1583;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1551;
    call {:si_unique_call 2689} WPP_SF_q(Tmp_1551, 30, Tmp_1583, deviceExtension_4);
    goto L1;

  anon182_Then:
    goto L1;

  anon217_Then:
    goto L1;

  anon181_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon180_Then:
    assume {:partition} Irp_16 != 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := -1073741823;
    call {:si_unique_call 2690} sdv_IoCompleteRequest(0, 0);
    assume false;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2691} vslice_dummy_var_424 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    return;

  anon218_Then:
    assume {:partition} deferredIrp_2 == Irp_16;
    goto L181;

  anon176_Then:
    assume {:partition} queued_1 != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_25);
    call {:si_unique_call 2692} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry_2;
    goto L166;

  L166:
    call {:si_unique_call 2693} qIrp, sdv_498, entry_2 := Sbp2StartIo#0_loop_L166(qIrp, sdv_498, entry_2, Irp_16);
    goto L166_last;

  L166_last:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    call {:si_unique_call 2694} sdv_498 := sdv_containing_record(entry_2, 64);
    qIrp := sdv_498;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} qIrp == Irp_16;
    call {:si_unique_call 2695} vslice_dummy_var_423 := sdv_RemoveEntryList(0);
    goto L167;

  L167:
    call {:si_unique_call 2696} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} qIrp != Irp_16;
    Irp_16 := 0;
    goto L181;

  anon179_Then:
    assume {:partition} qIrp == Irp_16;
    goto L181;

  anon216_Then:
    assume {:partition} qIrp != Irp_16;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    havoc entry_2;
    goto anon216_Then_dummy;

  anon216_Then_dummy:
    assume false;
    return;

  anon178_Then:
    goto L167;

  anon177_Then:
    goto L148;

  anon215_Then:
    goto L148;

  anon175_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon174_Then:
    assume {:partition} 0 <= status_45;
    goto L1;

  anon173_Then:
    goto L130;

  anon214_Then:
    goto L130;

  anon213_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L130;

  anon172_Then:
    goto L117;

  anon212_Then:
    goto L117;

  anon171_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L117;

  anon184_Then:
    goto L215;

  anon219_Then:
    goto L215;

  anon183_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L215;

  anon170_Then:
    assume {:partition} queued_1 != 0;
    goto L116;

  anon169_Then:
    goto L103;

  L103:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    call {:si_unique_call 2697} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2949;
    call {:si_unique_call 2698} sdv_487 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2949);
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} sdv_487 != 0;
    goto L238;

  L238:
    call {:si_unique_call 2699} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1590;
    assume {:nonnull} Tmp_1590 != 0;
    assume Tmp_1590 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_1547;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1581;
    call {:si_unique_call 2700} WPP_SF_qq(Tmp_1581, 31, Tmp_1547, deviceExtension_4, Irp_16);
    goto L1;

  anon188_Then:
    goto L1;

  anon220_Then:
    goto L1;

  anon187_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon186_Then:
    assume {:partition} sdv_487 == 0;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2950;
    call {:si_unique_call 2701} sdv_499 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2950);
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} sdv_499 == 0;
    call {:si_unique_call 2702} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1573;
    assume {:nonnull} Tmp_1573 != 0;
    assume Tmp_1573 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    havoc Tmp_1565;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1567;
    call {:si_unique_call 2703} WPP_SF_qq(Tmp_1567, 32, Tmp_1565, deviceExtension_4, Irp_16);
    goto L261;

  L261:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := 17;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2704} vslice_dummy_var_426 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    call {:si_unique_call 2705} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon191_Then:
    goto L261;

  anon221_Then:
    goto L261;

  anon190_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L261;

  anon189_Then:
    assume {:partition} sdv_499 != 0;
    goto L238;

  anon168_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    goto L279;

  L279:
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2951;
    call {:si_unique_call 2706} sdv_497 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2951);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} sdv_497 == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2707} sdv_494 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1562;
    assume {:nonnull} Tmp_1562 != 0;
    assume Tmp_1562 > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_1557;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1564;
    call {:si_unique_call 2708} WPP_SF_q(Tmp_1564, 33, Tmp_1557, Irp_16);
    goto L1;

  anon197_Then:
    goto L1;

  anon224_Then:
    goto L1;

  anon223_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon194_Then:
    assume {:partition} sdv_497 != 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1593;
    assume {:nonnull} Tmp_1593 != 0;
    assume Tmp_1593 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc Tmp_1580;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1575;
    call {:si_unique_call 2709} WPP_SF_q(Tmp_1575, 34, Tmp_1580, Irp_16);
    goto L1;

  anon196_Then:
    goto L1;

  anon222_Then:
    goto L1;

  anon195_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon193_Then:
    goto L277;

  L277:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    goto L279;

  anon192_Then:
    goto L67;

  anon185_Then:
    goto L277;

  anon167_Then:
    goto L103;

  anon153_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2710} sdv_491 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    oldIrp_1 := sdv_491;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1571;
    assume {:nonnull} Tmp_1571 != 0;
    assume Tmp_1571 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_1574;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1546;
    call {:si_unique_call 2711} WPP_SF_qqq(Tmp_1546, 20, Tmp_1574, deviceExtension_4, Irp_16, oldIrp_1);
    goto L327;

  L327:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto L338;

  L338:
    call {:si_unique_call 2712} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon201_Then:
    call {:si_unique_call 2713} Sbp2SetDeferLoginTimer(deviceExtension_4);
    goto L338;

  anon202_Then:
    goto L327;

  anon226_Then:
    goto L327;

  anon225_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L327;

  anon200_Then:
    goto L314;

  L314:
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2952;
    call {:si_unique_call 2714} sdv_485 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2952);
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} sdv_485 != 0;
    goto L346;

  L346:
    call {:si_unique_call 2715} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1589;
    assume {:nonnull} Tmp_1589 != 0;
    assume Tmp_1589 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    havoc Tmp_1582;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1570;
    call {:si_unique_call 2716} WPP_SF_qq(Tmp_1570, 21, Tmp_1582, deviceExtension_4, Irp_16);
    goto L1;

  anon205_Then:
    goto L1;

  anon227_Then:
    goto L1;

  anon204_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon203_Then:
    assume {:partition} sdv_485 == 0;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2953;
    call {:si_unique_call 2717} sdv_492 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2953);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} sdv_492 == 0;
    call {:si_unique_call 2718} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1584;
    assume {:nonnull} Tmp_1584 != 0;
    assume Tmp_1584 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    havoc Tmp_1553;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1555;
    call {:si_unique_call 2719} WPP_SF_qq(Tmp_1555, 22, Tmp_1553, deviceExtension_4, Irp_16);
    goto L369;

  L369:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := 17;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2720} vslice_dummy_var_427 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    call {:si_unique_call 2721} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon208_Then:
    goto L369;

  anon228_Then:
    goto L369;

  anon207_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L369;

  anon206_Then:
    assume {:partition} sdv_492 != 0;
    goto L346;

  anon199_Then:
    goto L314;

  anon198_Then:
    goto L24;

  anon154_Then:
    goto L24;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_25: int, actual_Irp_16: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_25: int, actual_Irp_16: int)
{
  var {:scalar} Tmp_1546: int;
  var {:pointer} Tmp_1547: int;
  var {:pointer} Tmp_1549: int;
  var {:pointer} Tmp_1550: int;
  var {:scalar} Tmp_1551: int;
  var {:scalar} sdv_485: int;
  var {:scalar} Tmp_1552: int;
  var {:pointer} Tmp_1553: int;
  var {:pointer} Tmp_1554: int;
  var {:scalar} Tmp_1555: int;
  var {:pointer} Tmp_1556: int;
  var {:pointer} Tmp_1557: int;
  var {:pointer} Tmp_1558: int;
  var {:pointer} Tmp_1559: int;
  var {:scalar} Tmp_1560: int;
  var {:scalar} sdv_487: int;
  var {:pointer} Tmp_1561: int;
  var {:pointer} sdv_488: int;
  var {:pointer} qIrp: int;
  var {:pointer} sdv_491: int;
  var {:pointer} Tmp_1562: int;
  var {:scalar} sdv_492: int;
  var {:scalar} queued_1: int;
  var {:scalar} Tmp_1563: int;
  var {:pointer} sdv_493: int;
  var {:pointer} srb_4: int;
  var {:scalar} Tmp_1564: int;
  var {:pointer} Tmp_1565: int;
  var {:pointer} deviceExtension_4: int;
  var {:scalar} Tmp_1566: int;
  var {:pointer} irpStack_10: int;
  var {:pointer} deferredIrp_2: int;
  var {:scalar} Tmp_1567: int;
  var {:scalar} Tmp_1568: int;
  var {:pointer} Tmp_1569: int;
  var {:pointer} sdv_494: int;
  var {:scalar} Tmp_1570: int;
  var {:pointer} Tmp_1571: int;
  var {:pointer} Tmp_1573: int;
  var {:pointer} Tmp_1574: int;
  var {:pointer} context: int;
  var {:scalar} Tmp_1575: int;
  var {:pointer} Tmp_1576: int;
  var {:pointer} Tmp_1577: int;
  var {:scalar} sdv_496: int;
  var {:scalar} sdv_497: int;
  var {:scalar} Tmp_1578: int;
  var {:scalar} Tmp_1579: int;
  var {:pointer} Tmp_1580: int;
  var {:scalar} Tmp_1581: int;
  var {:pointer} Tmp_1582: int;
  var {:pointer} Tmp_1583: int;
  var {:pointer} sdv_498: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} Tmp_1584: int;
  var {:pointer} Tmp_1585: int;
  var {:pointer} Tmp_1586: int;
  var {:pointer} Tmp_1587: int;
  var {:scalar} Tmp_1588: int;
  var {:pointer} Tmp_1589: int;
  var {:pointer} Tmp_1590: int;
  var {:pointer} Tmp_1591: int;
  var {:scalar} Tmp_1592: int;
  var {:scalar} status_45: int;
  var {:pointer} entry_2: int;
  var {:pointer} Tmp_1593: int;
  var {:pointer} Tmp_1594: int;
  var {:scalar} sdv_499: int;
  var {:pointer} queue_2: int;
  var {:scalar} state_1: int;
  var {:pointer} Tmp_1595: int;
  var {:pointer} DeviceObject_25: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_2954: int;
  var vslice_dummy_var_2955: int;
  var vslice_dummy_var_2956: int;
  var vslice_dummy_var_2957: int;
  var vslice_dummy_var_2958: int;
  var vslice_dummy_var_2959: int;
  var vslice_dummy_var_2960: int;
  var vslice_dummy_var_2961: int;
  var vslice_dummy_var_2962: int;
  var vslice_dummy_var_2963: int;

  anon0:
    call {:si_unique_call 2722} vslice_dummy_var_428 := __HAVOC_malloc(4);
    call {:si_unique_call 2723} context := __HAVOC_malloc(4);
    call {:si_unique_call 2724} state_1 := __HAVOC_malloc(8);
    DeviceObject_25 := actual_DeviceObject_25;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 2725} Tmp_1549 := __HAVOC_malloc(4);
    call {:si_unique_call 2726} Tmp_1550 := __HAVOC_malloc(4);
    call {:si_unique_call 2727} Tmp_1554 := __HAVOC_malloc(4);
    call {:si_unique_call 2728} Tmp_1559 := __HAVOC_malloc(4);
    call {:si_unique_call 2729} Tmp_1561 := __HAVOC_malloc(4);
    call {:si_unique_call 2730} Tmp_1562 := __HAVOC_malloc(4);
    call {:si_unique_call 2731} Tmp_1571 := __HAVOC_malloc(4);
    call {:si_unique_call 2732} Tmp_1573 := __HAVOC_malloc(4);
    call {:si_unique_call 2733} Tmp_1576 := __HAVOC_malloc(4);
    call {:si_unique_call 2734} Tmp_1584 := __HAVOC_malloc(4);
    call {:si_unique_call 2735} Tmp_1589 := __HAVOC_malloc(4);
    call {:si_unique_call 2736} Tmp_1590 := __HAVOC_malloc(4);
    call {:si_unique_call 2737} Tmp_1591 := __HAVOC_malloc(4);
    call {:si_unique_call 2738} Tmp_1593 := __HAVOC_malloc(4);
    call {:si_unique_call 2739} Tmp_1594 := __HAVOC_malloc(4);
    call {:si_unique_call 2740} irpStack_10 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    havoc deviceExtension_4;
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    havoc srb_4;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := 259;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2741} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2742} Sbp2AddLog(deviceExtension_4, 64, -747353745, Irp_16, srb_4);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    goto L24;

  L24:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    call {:si_unique_call 2743} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_45 := -1073741632;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := status_45;
    call {:si_unique_call 2744} sdv_IoCompleteRequest(0, 0);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1554;
    assume {:nonnull} Tmp_1554 != 0;
    assume Tmp_1554 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    havoc Tmp_1586;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1578;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc vslice_dummy_var_2954;
    call {:si_unique_call 2745} WPP_SF_qqD(Tmp_1578, 23, Tmp_1586, deviceExtension_4, Irp_16, vslice_dummy_var_2954);
    goto L39;

  L39:
    call {:si_unique_call 2746} Sbp2StartNextPacketByKey#0(DeviceObject_25, 0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2747} vslice_dummy_var_429 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto L1;

  L1:
    return;

  anon158_Then:
    goto L39;

  anon209_Then:
    goto L39;

  anon157_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L39;

  anon155_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    call {:si_unique_call 2748} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1549;
    assume {:nonnull} Tmp_1549 != 0;
    assume Tmp_1549 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    havoc Tmp_1569;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1560;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2955;
    havoc vslice_dummy_var_2956;
    call {:si_unique_call 2749} WPP_SF_qqqDD(Tmp_1560, 25, Tmp_1569, DeviceObject_25, Irp_16, srb_4, vslice_dummy_var_2955, vslice_dummy_var_2956);
    goto L67;

  L67:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    goto L76;

  L76:
    call {:si_unique_call 2750} Create1394TransactionForSrb#1(deviceExtension_4, srb_4, context);
    goto L1;

  anon161_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc Tmp_1587;
    assume {:nonnull} Tmp_1587 != 0;
    assume Tmp_1587 > 0;
    goto L76;

  anon163_Then:
    goto L76;

  anon162_Then:
    goto L67;

  anon210_Then:
    goto L67;

  anon160_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon159_Then:
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2957;
    call {:si_unique_call 2751} sdv_496 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2957);
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} sdv_496 == 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1594;
    assume {:nonnull} Tmp_1594 != 0;
    assume Tmp_1594 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    havoc Tmp_1585;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1552;
    call {:si_unique_call 2752} WPP_SF_qq(Tmp_1552, 24, Tmp_1585, deviceExtension_4, Irp_16);
    goto L87;

  L87:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := 17;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2753} vslice_dummy_var_432 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    call {:si_unique_call 2754} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon166_Then:
    goto L87;

  anon211_Then:
    goto L87;

  anon165_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L87;

  anon164_Then:
    assume {:partition} sdv_496 != 0;
    goto L1;

  anon156_Then:
    call {:si_unique_call 2755} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2958;
    call {:si_unique_call 2756} queued_1 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2958);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} queued_1 == 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1576;
    assume {:nonnull} Tmp_1576 != 0;
    assume Tmp_1576 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    havoc Tmp_1556;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1592;
    call {:si_unique_call 2757} WPP_SF_qq(Tmp_1592, 26, Tmp_1556, deviceExtension_4, Irp_16);
    goto L215;

  L215:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2758} sdv_488 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto L116;

  L116:
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1550;
    assume {:nonnull} Tmp_1550 != 0;
    assume Tmp_1550 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    Tmp_1588 := queued_1;
    havoc Tmp_1577;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1566;
    call {:si_unique_call 2759} WPP_SF_qDq(Tmp_1566, 27, Tmp_1577, deviceExtension_4, Tmp_1588, Irp_16);
    goto L117;

  L117:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1561;
    assume {:nonnull} Tmp_1561 != 0;
    assume Tmp_1561 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    havoc Tmp_1563;
    havoc Tmp_1595;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1568;
    call {:si_unique_call 2760} WPP_SF_qd(Tmp_1568, 28, Tmp_1595, deviceExtension_4, Tmp_1563);
    goto L130;

  L130:
    call {:si_unique_call 2761} status_45 := PoRequestPowerIrp(0, 2, state_1, 0, 0, 0);
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} status_45 < 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1591;
    assume {:nonnull} Tmp_1591 != 0;
    assume Tmp_1591 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    havoc Tmp_1558;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1579;
    call {:si_unique_call 2762} WPP_SF_qD(Tmp_1579, 29, Tmp_1558, deviceExtension_4, status_45);
    goto L148;

  L148:
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} queued_1 == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2763} sdv_493 := _InlineInterlockedCompareExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), 0, Irp_16);
    deferredIrp_2 := sdv_493;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} deferredIrp_2 != Irp_16;
    Irp_16 := 0;
    goto L181;

  L181:
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} Irp_16 == 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1559;
    assume {:nonnull} Tmp_1559 != 0;
    assume Tmp_1559 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    havoc Tmp_1583;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1551;
    call {:si_unique_call 2764} WPP_SF_q(Tmp_1551, 30, Tmp_1583, deviceExtension_4);
    goto L1;

  anon182_Then:
    goto L1;

  anon217_Then:
    goto L1;

  anon181_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon180_Then:
    assume {:partition} Irp_16 != 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := -1073741823;
    call {:si_unique_call 2765} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2766} Sbp2StartNextPacketByKey#0(DeviceObject_25, 0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2767} vslice_dummy_var_431 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto L1;

  anon218_Then:
    assume {:partition} deferredIrp_2 == Irp_16;
    goto L181;

  anon176_Then:
    assume {:partition} queued_1 != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_25);
    call {:si_unique_call 2768} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry_2;
    goto L166;

  L166:
    call {:si_unique_call 2769} qIrp, sdv_498, entry_2 := Sbp2StartIo#1_loop_L166(qIrp, sdv_498, entry_2, Irp_16);
    goto L166_last;

  L166_last:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    call {:si_unique_call 2770} sdv_498 := sdv_containing_record(entry_2, 64);
    qIrp := sdv_498;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} qIrp == Irp_16;
    call {:si_unique_call 2771} vslice_dummy_var_430 := sdv_RemoveEntryList(0);
    goto L167;

  L167:
    call {:si_unique_call 2772} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} qIrp != Irp_16;
    Irp_16 := 0;
    goto L181;

  anon179_Then:
    assume {:partition} qIrp == Irp_16;
    goto L181;

  anon216_Then:
    assume {:partition} qIrp != Irp_16;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    havoc entry_2;
    goto anon216_Then_dummy;

  anon216_Then_dummy:
    assume false;
    return;

  anon178_Then:
    goto L167;

  anon177_Then:
    goto L148;

  anon215_Then:
    goto L148;

  anon175_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon174_Then:
    assume {:partition} 0 <= status_45;
    goto L1;

  anon173_Then:
    goto L130;

  anon214_Then:
    goto L130;

  anon213_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L130;

  anon172_Then:
    goto L117;

  anon212_Then:
    goto L117;

  anon171_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L117;

  anon184_Then:
    goto L215;

  anon219_Then:
    goto L215;

  anon183_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L215;

  anon170_Then:
    assume {:partition} queued_1 != 0;
    goto L116;

  anon169_Then:
    goto L103;

  L103:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    call {:si_unique_call 2773} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2959;
    call {:si_unique_call 2774} sdv_487 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2959);
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} sdv_487 != 0;
    goto L238;

  L238:
    call {:si_unique_call 2775} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1590;
    assume {:nonnull} Tmp_1590 != 0;
    assume Tmp_1590 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_1547;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1581;
    call {:si_unique_call 2776} WPP_SF_qq(Tmp_1581, 31, Tmp_1547, deviceExtension_4, Irp_16);
    goto L1;

  anon188_Then:
    goto L1;

  anon220_Then:
    goto L1;

  anon187_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon186_Then:
    assume {:partition} sdv_487 == 0;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2960;
    call {:si_unique_call 2777} sdv_499 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2960);
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} sdv_499 == 0;
    call {:si_unique_call 2778} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1573;
    assume {:nonnull} Tmp_1573 != 0;
    assume Tmp_1573 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    havoc Tmp_1565;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1567;
    call {:si_unique_call 2779} WPP_SF_qq(Tmp_1567, 32, Tmp_1565, deviceExtension_4, Irp_16);
    goto L261;

  L261:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := 17;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2780} vslice_dummy_var_433 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    call {:si_unique_call 2781} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon191_Then:
    goto L261;

  anon221_Then:
    goto L261;

  anon190_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L261;

  anon189_Then:
    assume {:partition} sdv_499 != 0;
    goto L238;

  anon168_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    goto L279;

  L279:
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2961;
    call {:si_unique_call 2782} sdv_497 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2961);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} sdv_497 == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2783} sdv_494 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1562;
    assume {:nonnull} Tmp_1562 != 0;
    assume Tmp_1562 > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_1557;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1564;
    call {:si_unique_call 2784} WPP_SF_q(Tmp_1564, 33, Tmp_1557, Irp_16);
    goto L1;

  anon197_Then:
    goto L1;

  anon224_Then:
    goto L1;

  anon223_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon194_Then:
    assume {:partition} sdv_497 != 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1593;
    assume {:nonnull} Tmp_1593 != 0;
    assume Tmp_1593 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc Tmp_1580;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1575;
    call {:si_unique_call 2785} WPP_SF_q(Tmp_1575, 34, Tmp_1580, Irp_16);
    goto L1;

  anon196_Then:
    goto L1;

  anon222_Then:
    goto L1;

  anon195_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon193_Then:
    goto L277;

  L277:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    goto L279;

  anon192_Then:
    goto L67;

  anon185_Then:
    goto L277;

  anon167_Then:
    goto L103;

  anon153_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2786} sdv_491 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    oldIrp_1 := sdv_491;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1571;
    assume {:nonnull} Tmp_1571 != 0;
    assume Tmp_1571 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_1574;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1546;
    call {:si_unique_call 2787} WPP_SF_qqq(Tmp_1546, 20, Tmp_1574, deviceExtension_4, Irp_16, oldIrp_1);
    goto L327;

  L327:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto L338;

  L338:
    call {:si_unique_call 2788} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon201_Then:
    call {:si_unique_call 2789} Sbp2SetDeferLoginTimer(deviceExtension_4);
    goto L338;

  anon202_Then:
    goto L327;

  anon226_Then:
    goto L327;

  anon225_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L327;

  anon200_Then:
    goto L314;

  L314:
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2962;
    call {:si_unique_call 2790} sdv_485 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2962);
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} sdv_485 != 0;
    goto L346;

  L346:
    call {:si_unique_call 2791} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1589;
    assume {:nonnull} Tmp_1589 != 0;
    assume Tmp_1589 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    havoc Tmp_1582;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1570;
    call {:si_unique_call 2792} WPP_SF_qq(Tmp_1570, 21, Tmp_1582, deviceExtension_4, Irp_16);
    goto L1;

  anon205_Then:
    goto L1;

  anon227_Then:
    goto L1;

  anon204_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon203_Then:
    assume {:partition} sdv_485 == 0;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_2963;
    call {:si_unique_call 2793} sdv_492 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_2963);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} sdv_492 == 0;
    call {:si_unique_call 2794} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1584;
    assume {:nonnull} Tmp_1584 != 0;
    assume Tmp_1584 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    havoc Tmp_1553;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1555;
    call {:si_unique_call 2795} WPP_SF_qq(Tmp_1555, 22, Tmp_1553, deviceExtension_4, Irp_16);
    goto L369;

  L369:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := 17;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2796} vslice_dummy_var_434 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    call {:si_unique_call 2797} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon208_Then:
    goto L369;

  anon228_Then:
    goto L369;

  anon207_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L369;

  anon206_Then:
    assume {:partition} sdv_492 != 0;
    goto L346;

  anon199_Then:
    goto L314;

  anon198_Then:
    goto L24;

  anon154_Then:
    goto L24;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_25: int, actual_Irp_16: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int)
{
  var {:pointer} Tmp_1527: int;
  var {:pointer} Tmp_1528: int;
  var {:pointer} Tmp_1529: int;
  var {:pointer} Tmp_1530: int;
  var {:pointer} Tmp_1531: int;
  var {:pointer} sdv_476: int;
  var {:scalar} orbLock_7: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_1532: int;
  var {:scalar} Tmp_1533: int;
  var {:pointer} callbackContext: int;
  var {:scalar} Tmp_1534: int;
  var {:pointer} Tmp_1535: int;
  var {:pointer} sdv_480: int;
  var {:pointer} Tmp_1536: int;
  var {:scalar} sdv_481: int;
  var {:pointer} Tmp_1537: int;
  var {:scalar} Tmp_1538: int;
  var {:pointer} Tmp_1539: int;
  var {:pointer} irp_3: int;
  var {:scalar} Tmp_1540: int;
  var {:scalar} Tmp_1541: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_1542: int;
  var {:scalar} status_44: int;
  var {:pointer} Tmp_1543: int;
  var {:pointer} Tmp_1544: int;
  var {:pointer} Tmp_1545: int;
  var {:pointer} PdoExtension_20: int;
  var {:pointer} Srb_1: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_2964: int;
  var vslice_dummy_var_2965: int;
  var vslice_dummy_var_2966: int;

  anon0:
    call {:si_unique_call 2798} vslice_dummy_var_435 := __HAVOC_malloc(4);
    call {:si_unique_call 2799} orbLock_7 := __HAVOC_malloc(12);
    PdoExtension_20 := actual_PdoExtension_20;
    Srb_1 := actual_Srb_1;
    RequestContext := actual_RequestContext;
    call {:si_unique_call 2800} Tmp_1531 := __HAVOC_malloc(4);
    call {:si_unique_call 2801} Tmp_1535 := __HAVOC_malloc(4);
    call {:si_unique_call 2802} Tmp_1536 := __HAVOC_malloc(4);
    call {:si_unique_call 2803} Tmp_1537 := __HAVOC_malloc(4);
    call {:si_unique_call 2804} Tmp_1542 := __HAVOC_malloc(4);
    status_44 := 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    call {:si_unique_call 2805} sdv_476 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_476;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} callbackContext == 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1537;
    assume {:nonnull} Tmp_1537 != 0;
    assume Tmp_1537 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc Tmp_1539;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1533;
    call {:si_unique_call 2806} WPP_SF_q(Tmp_1533, 35, Tmp_1539, PdoExtension_20);
    goto L179;

  L179:
    status_44 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_2964;
    call {:si_unique_call 2807} Sbp2CreateRequestErrorLog(vslice_dummy_var_2964, 0, 1053, status_44);
    goto L124;

  L124:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_44 != 259;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_44 != 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2808} vslice_dummy_var_439 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto L131;

  L131:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_3;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_3))] := status_44;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    call {:si_unique_call 2809} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume false;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 2810} vslice_dummy_var_437 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_20), irp_3);
    return;

  anon66_Then:
    assume {:partition} callbackContext == 0;
    goto L131;

  anon65_Then:
    assume {:partition} status_44 == 0;
    call {:si_unique_call 2811} Sbp2InsertTailList#0(PdoExtension_20, callbackContext);
    goto L1;

  L1:
    return;

  anon64_Then:
    assume {:partition} status_44 == 259;
    goto L1;

  anon72_Then:
    goto L179;

  anon81_Then:
    goto L179;

  anon71_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L179;

  anon73_Then:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 2812} sdv_480 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_480;
    call {:si_unique_call 2813} AcquireOrbListLock(PdoExtension_20, orbLock_7, 1);
    call {:si_unique_call 2814} Tmp_1529 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1529 != 0;
    assume Tmp_1529 > 0;
    call {:si_unique_call 2815} sdv_481 := sdv_InterlockedIncrement(Tmp_1529);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1529 != 0;
    assume Tmp_1529 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2816} ReleaseOrbListLock(PdoExtension_20, orbLock_7, 1);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2817} status_44 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_44 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2818} vslice_dummy_var_438 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} status_44 < 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1542;
    assume {:nonnull} Tmp_1542 != 0;
    assume Tmp_1542 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_1544;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1541;
    call {:si_unique_call 2819} WPP_SF_(Tmp_1541, 37, Tmp_1544);
    goto L72;

  L72:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1532;
    assume {:nonnull} Tmp_1532 != 0;
    assume Tmp_1532 > 0;
    goto L59;

  L59:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_3;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_3))] := status_44;
    call {:si_unique_call 2820} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume false;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 2821} vslice_dummy_var_436 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_20), irp_3);
    return;

  anon58_Then:
    goto L72;

  anon74_Then:
    goto L72;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L72;

  anon56_Then:
    assume {:partition} 0 <= status_44;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1527;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Tmp_1527 != 0;
    assume Tmp_1527 > 0;
    goto L59;

  anon55_Then:
    assume {:partition} status_44 == 259;
    status_44 := 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1528;
    assume {:nonnull} Tmp_1528 != 0;
    assume Tmp_1528 > 0;
    havoc requestMdl;
    call {:si_unique_call 2822} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_2965;
    call {:si_unique_call 2823} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_2965, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc vslice_dummy_var_2966;
    call {:si_unique_call 2824} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_2966);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1536;
    assume {:nonnull} Tmp_1536 != 0;
    assume Tmp_1536 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_1543;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1538;
    call {:si_unique_call 2825} WPP_SF_q(Tmp_1538, 39, Tmp_1543, requestMdl);
    goto L108;

  L108:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2826} status_44 := Sbp2BusMapTransfer#0(PdoExtension_20, callbackContext);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_44 < 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1535;
    assume {:nonnull} Tmp_1535 != 0;
    assume Tmp_1535 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_1530;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1540;
    call {:si_unique_call 2827} WPP_SF_D(Tmp_1540, 40, Tmp_1530, status_44);
    goto L152;

  L152:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 2828} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L124;

  anon68_Then:
    goto L124;

  anon69_Then:
    goto L152;

  anon78_Then:
    goto L152;

  anon67_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon63_Then:
    assume {:partition} 0 <= status_44;
    goto L124;

  anon62_Then:
    goto L108;

  anon77_Then:
    goto L108;

  anon76_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L108;

  anon61_Then:
    status_44 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1531;
    assume {:nonnull} Tmp_1531 != 0;
    assume Tmp_1531 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_1545;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1534;
    call {:si_unique_call 2829} WPP_SF_(Tmp_1534, 38, Tmp_1545);
    goto L124;

  anon70_Then:
    goto L124;

  anon80_Then:
    goto L124;

  anon79_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L124;

  anon60_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L108;

  anon59_Then:
    goto L83;

  L83:
    call {:si_unique_call 2830} Sbp2InitializeOrb(PdoExtension_20, callbackContext);
    goto L124;

  anon75_Then:
    goto L83;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int)
{
  var {:pointer} Tmp_1527: int;
  var {:pointer} Tmp_1528: int;
  var {:pointer} Tmp_1529: int;
  var {:pointer} Tmp_1530: int;
  var {:pointer} Tmp_1531: int;
  var {:pointer} sdv_476: int;
  var {:scalar} orbLock_7: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_1532: int;
  var {:scalar} Tmp_1533: int;
  var {:pointer} callbackContext: int;
  var {:scalar} Tmp_1534: int;
  var {:pointer} Tmp_1535: int;
  var {:pointer} sdv_480: int;
  var {:pointer} Tmp_1536: int;
  var {:scalar} sdv_481: int;
  var {:pointer} Tmp_1537: int;
  var {:scalar} Tmp_1538: int;
  var {:pointer} Tmp_1539: int;
  var {:pointer} irp_3: int;
  var {:scalar} Tmp_1540: int;
  var {:scalar} Tmp_1541: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_1542: int;
  var {:scalar} status_44: int;
  var {:pointer} Tmp_1543: int;
  var {:pointer} Tmp_1544: int;
  var {:pointer} Tmp_1545: int;
  var {:pointer} PdoExtension_20: int;
  var {:pointer} Srb_1: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_440: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_2967: int;
  var vslice_dummy_var_2968: int;
  var vslice_dummy_var_2969: int;
  var vslice_dummy_var_2970: int;
  var vslice_dummy_var_2971: int;
  var vslice_dummy_var_2972: int;

  anon0:
    call {:si_unique_call 2831} vslice_dummy_var_440 := __HAVOC_malloc(4);
    call {:si_unique_call 2832} orbLock_7 := __HAVOC_malloc(12);
    PdoExtension_20 := actual_PdoExtension_20;
    Srb_1 := actual_Srb_1;
    RequestContext := actual_RequestContext;
    call {:si_unique_call 2833} Tmp_1531 := __HAVOC_malloc(4);
    call {:si_unique_call 2834} Tmp_1535 := __HAVOC_malloc(4);
    call {:si_unique_call 2835} Tmp_1536 := __HAVOC_malloc(4);
    call {:si_unique_call 2836} Tmp_1537 := __HAVOC_malloc(4);
    call {:si_unique_call 2837} Tmp_1542 := __HAVOC_malloc(4);
    status_44 := 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    call {:si_unique_call 2838} sdv_476 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_476;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} callbackContext == 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1537;
    assume {:nonnull} Tmp_1537 != 0;
    assume Tmp_1537 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc Tmp_1539;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1533;
    call {:si_unique_call 2839} WPP_SF_q(Tmp_1533, 35, Tmp_1539, PdoExtension_20);
    goto L179;

  L179:
    status_44 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_2967;
    call {:si_unique_call 2840} Sbp2CreateRequestErrorLog(vslice_dummy_var_2967, 0, 1053, status_44);
    goto L124;

  L124:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_44 != 259;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_44 != 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2841} vslice_dummy_var_444 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto L131;

  L131:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_3;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_3))] := status_44;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    call {:si_unique_call 2842} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_2968;
    call {:si_unique_call 2843} Sbp2StartNextPacketByKey#0(vslice_dummy_var_2968, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 2844} vslice_dummy_var_442 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_20), irp_3);
    goto L1;

  L1:
    return;

  anon66_Then:
    assume {:partition} callbackContext == 0;
    goto L131;

  anon65_Then:
    assume {:partition} status_44 == 0;
    call {:si_unique_call 2845} Sbp2InsertTailList#1(PdoExtension_20, callbackContext);
    goto L1;

  anon64_Then:
    assume {:partition} status_44 == 259;
    goto L1;

  anon72_Then:
    goto L179;

  anon81_Then:
    goto L179;

  anon71_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L179;

  anon73_Then:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 2846} sdv_480 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_480;
    call {:si_unique_call 2847} AcquireOrbListLock(PdoExtension_20, orbLock_7, 1);
    call {:si_unique_call 2848} Tmp_1529 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1529 != 0;
    assume Tmp_1529 > 0;
    call {:si_unique_call 2849} sdv_481 := sdv_InterlockedIncrement(Tmp_1529);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1529 != 0;
    assume Tmp_1529 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2850} ReleaseOrbListLock(PdoExtension_20, orbLock_7, 1);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2851} status_44 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_44 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2852} vslice_dummy_var_443 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} status_44 < 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1542;
    assume {:nonnull} Tmp_1542 != 0;
    assume Tmp_1542 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_1544;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1541;
    call {:si_unique_call 2853} WPP_SF_(Tmp_1541, 37, Tmp_1544);
    goto L72;

  L72:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1532;
    assume {:nonnull} Tmp_1532 != 0;
    assume Tmp_1532 > 0;
    goto L59;

  L59:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_3;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_3))] := status_44;
    call {:si_unique_call 2854} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_2969;
    havoc vslice_dummy_var_2970;
    call {:si_unique_call 2855} Sbp2StartNextPacketByKey#0(vslice_dummy_var_2969, vslice_dummy_var_2970);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 2856} vslice_dummy_var_441 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_20), irp_3);
    goto L1;

  anon58_Then:
    goto L72;

  anon74_Then:
    goto L72;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L72;

  anon56_Then:
    assume {:partition} 0 <= status_44;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1527;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Tmp_1527 != 0;
    assume Tmp_1527 > 0;
    goto L59;

  anon55_Then:
    assume {:partition} status_44 == 259;
    status_44 := 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1528;
    assume {:nonnull} Tmp_1528 != 0;
    assume Tmp_1528 > 0;
    havoc requestMdl;
    call {:si_unique_call 2857} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_2971;
    call {:si_unique_call 2858} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_2971, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc vslice_dummy_var_2972;
    call {:si_unique_call 2859} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_2972);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1536;
    assume {:nonnull} Tmp_1536 != 0;
    assume Tmp_1536 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_1543;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1538;
    call {:si_unique_call 2860} WPP_SF_q(Tmp_1538, 39, Tmp_1543, requestMdl);
    goto L108;

  L108:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2861} status_44 := Sbp2BusMapTransfer#1(PdoExtension_20, callbackContext);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_44 < 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1535;
    assume {:nonnull} Tmp_1535 != 0;
    assume Tmp_1535 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_1530;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1540;
    call {:si_unique_call 2862} WPP_SF_D(Tmp_1540, 40, Tmp_1530, status_44);
    goto L152;

  L152:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 2863} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L124;

  anon68_Then:
    goto L124;

  anon69_Then:
    goto L152;

  anon78_Then:
    goto L152;

  anon67_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon63_Then:
    assume {:partition} 0 <= status_44;
    goto L124;

  anon62_Then:
    goto L108;

  anon77_Then:
    goto L108;

  anon76_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L108;

  anon61_Then:
    status_44 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1531;
    assume {:nonnull} Tmp_1531 != 0;
    assume Tmp_1531 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_1545;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1534;
    call {:si_unique_call 2864} WPP_SF_(Tmp_1534, 38, Tmp_1545);
    goto L124;

  anon70_Then:
    goto L124;

  anon80_Then:
    goto L124;

  anon79_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L124;

  anon60_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L108;

  anon59_Then:
    goto L83;

  L83:
    call {:si_unique_call 2865} Sbp2InitializeOrb(PdoExtension_20, callbackContext);
    goto L124;

  anon75_Then:
    goto L83;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_PdoExtension_21: int, actual_Context_10: int)
{
  var {:pointer} Tmp_1750: int;
  var {:pointer} Tmp_1751: int;
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_1752: int;
  var {:pointer} Tmp_1753: int;
  var {:pointer} Tmp_1754: int;
  var {:scalar} Tmp_1755: int;
  var {:pointer} Tmp_1756: int;
  var {:scalar} sdv_524: int;
  var {:scalar} orbLock_9: int;
  var {:pointer} Tmp_1757: int;
  var {:pointer} Tmp_1758: int;
  var {:pointer} Tmp_1759: int;
  var {:pointer} Tmp_1760: int;
  var {:pointer} Tmp_1761: int;
  var {:pointer} Tmp_1762: int;
  var {:pointer} Tmp_1763: int;
  var {:scalar} Tmp_1764: int;
  var {:scalar} sdv_526: int;
  var {:scalar} sdv_530: int;
  var {:scalar} sdv_532: int;
  var {:scalar} Tmp_1765: int;
  var {:scalar} dueTime_3: int;
  var {:pointer} Tmp_1766: int;
  var {:pointer} Tmp_1767: int;
  var {:scalar} Tmp_1768: int;
  var {:scalar} dueTime_4: int;
  var {:pointer} Tmp_1769: int;
  var {:pointer} Tmp_1771: int;
  var {:pointer} Tmp_1772: int;
  var {:scalar} status_49: int;
  var {:pointer} Tmp_1773: int;
  var {:scalar} newAddr: int;
  var {:pointer} Tmp_1774: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_1775: int;
  var {:scalar} sdv_534: int;
  var {:pointer} Tmp_1776: int;
  var {:pointer} PdoExtension_21: int;
  var {:pointer} Context_10: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_2973: int;

  anon0:
    call {:si_unique_call 2866} orbLock_9 := __HAVOC_malloc(12);
    call {:si_unique_call 2867} dueTime_3 := __HAVOC_malloc(20);
    call {:si_unique_call 2868} dueTime_4 := __HAVOC_malloc(20);
    call {:si_unique_call 2869} newAddr := __HAVOC_malloc(76);
    call {:si_unique_call 2870} vslice_dummy_var_445 := __HAVOC_malloc(4);
    PdoExtension_21 := actual_PdoExtension_21;
    Context_10 := actual_Context_10;
    call {:si_unique_call 2871} Tmp_1752 := __HAVOC_malloc(4);
    call {:si_unique_call 2872} Tmp_1753 := __HAVOC_malloc(4);
    call {:si_unique_call 2873} Tmp_1772 := __HAVOC_malloc(4);
    call {:si_unique_call 2874} Tmp_1774 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1775;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc orbListDepth;
    call {:si_unique_call 2875} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1756;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} Tmp_1756 != 0;
    assume Tmp_1756 > 0;
    call {:si_unique_call 2876} sdv_524 := sdv_IsListEmpty(0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_524 != 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1754;
    assume {:nonnull} Tmp_1754 != 0;
    assume Tmp_1754 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1757;
    assume {:nonnull} Tmp_1757 != 0;
    assume Tmp_1757 > 0;
    havoc timeOutValue;
    assume {:nonnull} dueTime_3 != 0;
    assume dueTime_3 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    call {:si_unique_call 2877} vslice_dummy_var_449 := KeSetTimer(0, dueTime_3, 0);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2878} vslice_dummy_var_446 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_10));
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1763;
    assume {:nonnull} Tmp_1763 != 0;
    assume Tmp_1763 > 0;
    havoc Tmp_1771;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1767;
    assume {:nonnull} Tmp_1767 != 0;
    assume Tmp_1767 > 0;
    havoc Tmp_1762;
    assume {:nonnull} Tmp_1762 != 0;
    assume Tmp_1762 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1761;
    assume {:nonnull} Tmp_1761 != 0;
    assume Tmp_1761 > 0;
    havoc Tmp_1769;
    assume {:nonnull} Tmp_1769 != 0;
    assume Tmp_1769 > 0;
    call {:si_unique_call 2879} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1753;
    assume {:nonnull} Tmp_1753 != 0;
    assume Tmp_1753 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    havoc Tmp_1766;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1755;
    call {:si_unique_call 2880} WPP_SF_q(Tmp_1755, 47, Tmp_1766, Context_10);
    goto L60;

  L60:
    call {:si_unique_call 2881} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2882} status_49 := Sbp2AccessRegister#0(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    call {:si_unique_call 2883} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2884} Sbp2AddLog(PdoExtension_21, 16, -999144852, Reserved__DEVICE_EXTENSION(PdoExtension_21), 0);
    goto L80;

  L80:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_49 == -1072562032;
    call {:si_unique_call 2885} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 2886} vslice_dummy_var_447 := KeCancelTimer(0);
    assume {:nonnull} dueTime_4 != 0;
    assume dueTime_4 > 0;
    call {:si_unique_call 2887} vslice_dummy_var_450 := KeSetTimer(0, dueTime_4, 0);
    goto L86;

  L86:
    call {:si_unique_call 2888} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} timeOutValue != 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1752;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_1760;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1764;
    call {:si_unique_call 2889} WPP_SF_q(Tmp_1764, 49, Tmp_1760, PdoExtension_21);
    goto L99;

  L99:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L1;

  L1:
    return;

  anon55_Then:
    goto L99;

  anon63_Then:
    goto L99;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L99;

  anon53_Then:
    assume {:partition} timeOutValue == 0;
    goto L99;

  anon52_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L86;

  anon51_Then:
    goto L86;

  anon49_Then:
    assume {:partition} status_49 != -1072562032;
    goto L81;

  L81:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume false;
    return;

  anon50_Then:
    goto L1;

  anon48_Then:
    goto L60;

  anon62_Then:
    goto L60;

  anon47_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon46_Then:
    goto L37;

  L37:
    call {:si_unique_call 2890} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1774;
    assume {:nonnull} Tmp_1774 != 0;
    assume Tmp_1774 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_1776;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1765;
    call {:si_unique_call 2891} WPP_SF_q(Tmp_1765, 48, Tmp_1776, Context_10);
    goto L119;

  L119:
    call {:si_unique_call 2892} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2893} status_49 := Sbp2AccessRegister#0(PdoExtension_21, newAddr, 1028);
    call {:si_unique_call 2894} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 2895} Sbp2AddLog(PdoExtension_21, 32, -814587312, newAddr, Context_10);
    goto L80;

  anon57_Then:
    goto L119;

  anon64_Then:
    goto L119;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L119;

  anon61_Then:
    goto L37;

  anon45_Then:
    assume {:partition} sdv_524 == 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1751;
    assume {:nonnull} Tmp_1751 != 0;
    assume Tmp_1751 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L153;

  L153:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1758;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1759;
    assume {:nonnull} Tmp_1759 != 0;
    assume Tmp_1759 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1773;
    assume {:nonnull} Tmp_1773 != 0;
    assume Tmp_1773 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2896} vslice_dummy_var_451 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_10));
    call {:si_unique_call 2897} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1772;
    assume {:nonnull} Tmp_1772 != 0;
    assume Tmp_1772 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc Tmp_1750;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1768;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_2973;
    call {:si_unique_call 2898} WPP_SF_dq(Tmp_1768, 50, Tmp_1750, vslice_dummy_var_2973, Context_10);
    goto L166;

  L166:
    call {:si_unique_call 2899} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2900} vslice_dummy_var_448 := Sbp2AccessRegister#0(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    call {:si_unique_call 2901} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L81;

  anon60_Then:
    goto L166;

  anon66_Then:
    goto L166;

  anon59_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L166;

  anon58_Then:
    goto L149;

  L149:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    goto L153;

  anon65_Then:
    goto L149;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_PdoExtension_21: int, actual_Context_10: int);
  modifies alloc, sdv_irql_current, queued, queuedWithoutMarking, locked, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_PdoExtension_21: int, actual_Context_10: int)
{
  var {:pointer} Tmp_1750: int;
  var {:pointer} Tmp_1751: int;
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_1752: int;
  var {:pointer} Tmp_1753: int;
  var {:pointer} Tmp_1754: int;
  var {:scalar} Tmp_1755: int;
  var {:pointer} Tmp_1756: int;
  var {:scalar} sdv_524: int;
  var {:scalar} orbLock_9: int;
  var {:pointer} Tmp_1757: int;
  var {:pointer} Tmp_1758: int;
  var {:pointer} Tmp_1759: int;
  var {:pointer} Tmp_1760: int;
  var {:pointer} Tmp_1761: int;
  var {:pointer} Tmp_1762: int;
  var {:pointer} Tmp_1763: int;
  var {:scalar} Tmp_1764: int;
  var {:scalar} sdv_526: int;
  var {:scalar} sdv_530: int;
  var {:scalar} sdv_532: int;
  var {:scalar} Tmp_1765: int;
  var {:scalar} dueTime_3: int;
  var {:pointer} Tmp_1766: int;
  var {:pointer} Tmp_1767: int;
  var {:scalar} Tmp_1768: int;
  var {:scalar} dueTime_4: int;
  var {:pointer} Tmp_1769: int;
  var {:pointer} Tmp_1771: int;
  var {:pointer} Tmp_1772: int;
  var {:scalar} status_49: int;
  var {:pointer} Tmp_1773: int;
  var {:scalar} newAddr: int;
  var {:pointer} Tmp_1774: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_1775: int;
  var {:scalar} sdv_534: int;
  var {:pointer} Tmp_1776: int;
  var {:pointer} PdoExtension_21: int;
  var {:pointer} Context_10: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_457: int;
  var vslice_dummy_var_458: int;
  var vslice_dummy_var_2974: int;
  var vslice_dummy_var_2975: int;
  var vslice_dummy_var_2976: int;

  anon0:
    call {:si_unique_call 2902} orbLock_9 := __HAVOC_malloc(12);
    call {:si_unique_call 2903} dueTime_3 := __HAVOC_malloc(20);
    call {:si_unique_call 2904} dueTime_4 := __HAVOC_malloc(20);
    call {:si_unique_call 2905} newAddr := __HAVOC_malloc(76);
    call {:si_unique_call 2906} vslice_dummy_var_452 := __HAVOC_malloc(4);
    PdoExtension_21 := actual_PdoExtension_21;
    Context_10 := actual_Context_10;
    call {:si_unique_call 2907} Tmp_1752 := __HAVOC_malloc(4);
    call {:si_unique_call 2908} Tmp_1753 := __HAVOC_malloc(4);
    call {:si_unique_call 2909} Tmp_1772 := __HAVOC_malloc(4);
    call {:si_unique_call 2910} Tmp_1774 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1775;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc orbListDepth;
    call {:si_unique_call 2911} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1756;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} Tmp_1756 != 0;
    assume Tmp_1756 > 0;
    call {:si_unique_call 2912} sdv_524 := sdv_IsListEmpty(0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_524 != 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1754;
    assume {:nonnull} Tmp_1754 != 0;
    assume Tmp_1754 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1757;
    assume {:nonnull} Tmp_1757 != 0;
    assume Tmp_1757 > 0;
    havoc timeOutValue;
    assume {:nonnull} dueTime_3 != 0;
    assume dueTime_3 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    call {:si_unique_call 2913} vslice_dummy_var_456 := KeSetTimer(0, dueTime_3, 0);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2914} vslice_dummy_var_453 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_10));
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1763;
    assume {:nonnull} Tmp_1763 != 0;
    assume Tmp_1763 > 0;
    havoc Tmp_1771;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1767;
    assume {:nonnull} Tmp_1767 != 0;
    assume Tmp_1767 > 0;
    havoc Tmp_1762;
    assume {:nonnull} Tmp_1762 != 0;
    assume Tmp_1762 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1761;
    assume {:nonnull} Tmp_1761 != 0;
    assume Tmp_1761 > 0;
    havoc Tmp_1769;
    assume {:nonnull} Tmp_1769 != 0;
    assume Tmp_1769 > 0;
    call {:si_unique_call 2915} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1753;
    assume {:nonnull} Tmp_1753 != 0;
    assume Tmp_1753 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    havoc Tmp_1766;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1755;
    call {:si_unique_call 2916} WPP_SF_q(Tmp_1755, 47, Tmp_1766, Context_10);
    goto L60;

  L60:
    call {:si_unique_call 2917} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2918} status_49 := Sbp2AccessRegister#1(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    call {:si_unique_call 2919} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2920} Sbp2AddLog(PdoExtension_21, 16, -999144852, Reserved__DEVICE_EXTENSION(PdoExtension_21), 0);
    goto L80;

  L80:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_49 == -1072562032;
    call {:si_unique_call 2921} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 2922} vslice_dummy_var_454 := KeCancelTimer(0);
    assume {:nonnull} dueTime_4 != 0;
    assume dueTime_4 > 0;
    call {:si_unique_call 2923} vslice_dummy_var_457 := KeSetTimer(0, dueTime_4, 0);
    goto L86;

  L86:
    call {:si_unique_call 2924} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} timeOutValue != 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1752;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_1760;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1764;
    call {:si_unique_call 2925} WPP_SF_q(Tmp_1764, 49, Tmp_1760, PdoExtension_21);
    goto L99;

  L99:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L1;

  L1:
    return;

  anon55_Then:
    goto L99;

  anon63_Then:
    goto L99;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L99;

  anon53_Then:
    assume {:partition} timeOutValue == 0;
    goto L99;

  anon52_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L86;

  anon51_Then:
    goto L86;

  anon49_Then:
    assume {:partition} status_49 != -1072562032;
    goto L81;

  L81:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_2974;
    havoc vslice_dummy_var_2975;
    call {:si_unique_call 2926} Sbp2StartNextPacketByKey#0(vslice_dummy_var_2974, vslice_dummy_var_2975);
    goto L1;

  anon50_Then:
    goto L1;

  anon48_Then:
    goto L60;

  anon62_Then:
    goto L60;

  anon47_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon46_Then:
    goto L37;

  L37:
    call {:si_unique_call 2927} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1774;
    assume {:nonnull} Tmp_1774 != 0;
    assume Tmp_1774 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_1776;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1765;
    call {:si_unique_call 2928} WPP_SF_q(Tmp_1765, 48, Tmp_1776, Context_10);
    goto L119;

  L119:
    call {:si_unique_call 2929} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2930} status_49 := Sbp2AccessRegister#1(PdoExtension_21, newAddr, 1028);
    call {:si_unique_call 2931} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 2932} Sbp2AddLog(PdoExtension_21, 32, -814587312, newAddr, Context_10);
    goto L80;

  anon57_Then:
    goto L119;

  anon64_Then:
    goto L119;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L119;

  anon61_Then:
    goto L37;

  anon45_Then:
    assume {:partition} sdv_524 == 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1751;
    assume {:nonnull} Tmp_1751 != 0;
    assume Tmp_1751 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L153;

  L153:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1758;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1759;
    assume {:nonnull} Tmp_1759 != 0;
    assume Tmp_1759 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1773;
    assume {:nonnull} Tmp_1773 != 0;
    assume Tmp_1773 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2933} vslice_dummy_var_458 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_10));
    call {:si_unique_call 2934} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1772;
    assume {:nonnull} Tmp_1772 != 0;
    assume Tmp_1772 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc Tmp_1750;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1768;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_2976;
    call {:si_unique_call 2935} WPP_SF_dq(Tmp_1768, 50, Tmp_1750, vslice_dummy_var_2976, Context_10);
    goto L166;

  L166:
    call {:si_unique_call 2936} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2937} vslice_dummy_var_455 := Sbp2AccessRegister#1(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    call {:si_unique_call 2938} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L81;

  anon60_Then:
    goto L166;

  anon66_Then:
    goto L166;

  anon59_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L166;

  anon58_Then:
    goto L149;

  L149:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    goto L153;

  anon65_Then:
    goto L149;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_PdoExtension_21: int, actual_Context_10: int);
  modifies alloc, sdv_irql_current, queued, queuedWithoutMarking, locked, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#0(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_625: int)
{
  var {:pointer} PdoExtension_9: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    call {:si_unique_call 2939} Tmp_625 := Sbp2AccessRegisterEx#0(PdoExtension_9, Data, RegisterAndDirection, -1);
    return;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#0(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_625: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} Tmp_625 == -1073741632 || Tmp_625 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#1(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_625: int)
{
  var {:pointer} PdoExtension_9: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    call {:si_unique_call 2940} Tmp_625 := Sbp2AccessRegisterEx#1(PdoExtension_9, Data, RegisterAndDirection, -1);
    return;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#1(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_625: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#0(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_652: int)
{
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} Tmp_655: int;
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:pointer} Tmp_660: int;
  var {:pointer} Tmp_661: int;
  var {:pointer} Tmp_662: int;
  var {:pointer} Tmp_663: int;
  var {:scalar} sdv_201: int;
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_668: int;
  var {:pointer} Tmp_669: int;
  var {:pointer} Tmp_670: int;
  var {:pointer} sdv_202: int;
  var {:pointer} Tmp_672: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} Tmp_674: int;
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_677: int;
  var {:pointer} Tmp_678: int;
  var {:scalar} sdv_203: int;
  var {:pointer} Tmp_679: int;
  var {:scalar} sdv_205: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:scalar} sdv_206: int;
  var {:pointer} Tmp_682: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:scalar} sdv_207: int;
  var {:pointer} sdv_208: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_687: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:pointer} Tmp_690: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:pointer} Tmp_693: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:scalar} status_18: int;
  var {:pointer} packet_6: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} Tmp_701: int;
  var {:scalar} generation: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:pointer} Tmp_704: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} Tmp_706: int;
  var {:scalar} sdv_210: int;
  var {:pointer} Tmp_708: int;
  var {:pointer} Tmp_709: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Data_1: int;
  var {:scalar} RegisterAndDirection_1: int;
  var {:scalar} Generation_4: int;

  anon0:
    call {:si_unique_call 2941} packet_6 := __HAVOC_malloc(4);
    PdoExtension_12 := actual_PdoExtension_12;
    Data_1 := actual_Data_1;
    RegisterAndDirection_1 := actual_RegisterAndDirection_1;
    Generation_4 := actual_Generation_4;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    Mem_T.P_IRBIRP[packet_6] := 0;
    bFreeMdl := 0;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    Tmp_652 := -1073741632;
    goto L1;

  L1:
    return;

  anon92_Then:
    call {:si_unique_call 2942} AllocateIrpAndIrb(PdoExtension_12, packet_6);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_6] != 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc generation;
    goto L19;

  L19:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_693;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    goto L23;

  L23:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_687;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_682;
    assume {:nonnull} Tmp_682 != 0;
    assume Tmp_682 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_686;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_708;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    Tmp_657 := Data_1;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    goto L27;

  L27:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_699;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_695;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_672;
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    goto L21;

  L21:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume false;
    return;

  anon70_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume false;
    return;

  anon87_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L27;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    Tmp_658 := Data_1;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    goto L27;

  anon89_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_709;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    goto L27;

  anon90_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_659;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_661;
    assume {:nonnull} Tmp_659 != 0;
    assume Tmp_659 > 0;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    goto L27;

  anon91_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_669;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_654;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_690;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_670;
    assume {:nonnull} Tmp_670 != 0;
    assume Tmp_670 > 0;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    goto L27;

  anon99_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_660;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_656;
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    goto L27;

  anon79_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L21;

  anon80_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    goto L23;

  anon81_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    goto L23;

  anon82_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    goto L23;

  anon83_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    goto L23;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L22;

  L22:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 256) != 0;
    goto L56;

  L56:
    Tmp_655 := Data_1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_706;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_694;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_702;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    goto L70;

  L70:
    call {:si_unique_call 2943} sdv_208 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_698;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    bFreeMdl := 1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_691;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_666;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon95_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2944} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    Tmp_652 := -1073741670;
    goto L1;

  anon94_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_688;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_662;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    goto L70;

  anon71_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 256) == 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_678;
    assume {:nonnull} Tmp_678 != 0;
    assume Tmp_678 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_701;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    goto L92;

  L92:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_668;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_674;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    call {:si_unique_call 2945} sdv_202 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_677;
    assume {:nonnull} Tmp_677 != 0;
    assume Tmp_677 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_700;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    bFreeMdl := 1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_675;
    assume {:nonnull} Tmp_675 != 0;
    assume Tmp_675 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_673;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_663;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_679;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon98_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2946} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    Tmp_652 := -1073741670;
    goto L1;

  anon97_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_665;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_705;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    goto L92;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    goto L56;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    goto L23;

  anon93_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L22;

  anon68_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} Generation_4 != -1;
    generation := Generation_4;
    goto L19;

  anon69_Then:
    assume {:partition} Generation_4 == -1;
    goto L18;

  anon67_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_6] == 0;
    Tmp_652 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#0(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_652: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} Tmp_652 == -1073741632 || Tmp_652 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#1(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_652: int)
{
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} Tmp_655: int;
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:pointer} Tmp_660: int;
  var {:pointer} Tmp_661: int;
  var {:pointer} Tmp_662: int;
  var {:pointer} Tmp_663: int;
  var {:scalar} sdv_201: int;
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_668: int;
  var {:pointer} Tmp_669: int;
  var {:pointer} Tmp_670: int;
  var {:pointer} sdv_202: int;
  var {:pointer} Tmp_672: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} Tmp_674: int;
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_677: int;
  var {:pointer} Tmp_678: int;
  var {:scalar} sdv_203: int;
  var {:pointer} Tmp_679: int;
  var {:scalar} sdv_205: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:scalar} sdv_206: int;
  var {:pointer} Tmp_682: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:scalar} sdv_207: int;
  var {:pointer} sdv_208: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_687: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:pointer} Tmp_690: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:pointer} Tmp_693: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:scalar} status_18: int;
  var {:pointer} packet_6: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} Tmp_701: int;
  var {:scalar} generation: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:pointer} Tmp_704: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} Tmp_706: int;
  var {:scalar} sdv_210: int;
  var {:pointer} Tmp_708: int;
  var {:pointer} Tmp_709: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Data_1: int;
  var {:scalar} RegisterAndDirection_1: int;
  var {:scalar} Generation_4: int;

  anon0:
    call {:si_unique_call 2947} packet_6 := __HAVOC_malloc(4);
    PdoExtension_12 := actual_PdoExtension_12;
    Data_1 := actual_Data_1;
    RegisterAndDirection_1 := actual_RegisterAndDirection_1;
    Generation_4 := actual_Generation_4;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    Mem_T.P_IRBIRP[packet_6] := 0;
    bFreeMdl := 0;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    Tmp_652 := -1073741632;
    goto L1;

  L1:
    return;

  anon92_Then:
    call {:si_unique_call 2948} AllocateIrpAndIrb(PdoExtension_12, packet_6);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_6] != 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc generation;
    goto L19;

  L19:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_693;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    goto L23;

  L23:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_687;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_682;
    assume {:nonnull} Tmp_682 != 0;
    assume Tmp_682 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_686;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_708;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    Tmp_657 := Data_1;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    goto L27;

  L27:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_699;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_695;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_672;
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    goto L21;

  L21:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2949} status_18 := Sbp2SendRequest#0(PdoExtension_12, Mem_T.P_IRBIRP[packet_6], 1);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} status_18 >= 0;
    goto L119;

  L119:
    Tmp_652 := status_18;
    goto L1;

  anon73_Then:
    assume {:partition} 0 > status_18;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} 259 != status_18;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    Tmp_689 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(Mem_T.P_IRBIRP[packet_6])];
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} 259 == Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_689))];
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2950} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    goto L119;

  anon96_Then:
    assume {:partition} 259 != Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_689))];
    goto L119;

  anon74_Then:
    assume {:partition} 259 == status_18;
    goto L119;

  anon70_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2951} status_18 := Sbp2SendRequest#0(PdoExtension_12, Mem_T.P_IRBIRP[packet_6], 2);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} bFreeMdl != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2952} IoFreeMdl(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_692;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    goto L126;

  L126:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_18 >= 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 512) != 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L136;

  L136:
    Tmp_680 := Data_1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    Tmp_697 := Data_1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L131;

  L131:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2953} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    goto L119;

  anon86_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto L131;

  anon78_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L136;

  anon77_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 512) == 0;
    goto L131;

  anon76_Then:
    assume {:partition} 0 > status_18;
    goto L131;

  anon75_Then:
    assume {:partition} bFreeMdl == 0;
    goto L126;

  anon87_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L27;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    Tmp_658 := Data_1;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    goto L27;

  anon89_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_709;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    goto L27;

  anon90_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_659;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_661;
    assume {:nonnull} Tmp_659 != 0;
    assume Tmp_659 > 0;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    goto L27;

  anon91_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_669;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_654;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_690;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_670;
    assume {:nonnull} Tmp_670 != 0;
    assume Tmp_670 > 0;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    goto L27;

  anon99_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_660;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_656;
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    goto L27;

  anon79_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L21;

  anon80_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    goto L23;

  anon81_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    goto L23;

  anon82_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    goto L23;

  anon83_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    goto L23;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L22;

  L22:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 256) != 0;
    goto L56;

  L56:
    Tmp_655 := Data_1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_706;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_694;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_702;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    goto L70;

  L70:
    call {:si_unique_call 2954} sdv_208 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_698;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    bFreeMdl := 1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_691;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_666;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon95_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2955} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    Tmp_652 := -1073741670;
    goto L1;

  anon94_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_688;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_662;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    goto L70;

  anon71_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 256) == 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_678;
    assume {:nonnull} Tmp_678 != 0;
    assume Tmp_678 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_701;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    goto L92;

  L92:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_668;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_674;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    call {:si_unique_call 2956} sdv_202 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_677;
    assume {:nonnull} Tmp_677 != 0;
    assume Tmp_677 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_700;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    bFreeMdl := 1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_675;
    assume {:nonnull} Tmp_675 != 0;
    assume Tmp_675 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_673;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_663;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_679;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon98_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2957} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    Tmp_652 := -1073741670;
    goto L1;

  anon97_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_665;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_705;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    goto L92;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    goto L56;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    goto L23;

  anon93_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L22;

  anon68_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} Generation_4 != -1;
    generation := Generation_4;
    goto L19;

  anon69_Then:
    assume {:partition} Generation_4 == -1;
    goto L18;

  anon67_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_6] == 0;
    Tmp_652 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#1(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_652: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1778: int)
{
  var {:pointer} Tmp_1779: int;
  var {:scalar} Tmp_1780: int;
  var {:pointer} Tmp_1781: int;
  var {:pointer} Tmp_1782: int;
  var {:scalar} Tmp_1783: int;
  var {:pointer} Tmp_1785: int;
  var {:pointer} CallbackContext_2: int;
  var vslice_dummy_var_2977: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    call {:si_unique_call 2958} Tmp_1781 := __HAVOC_malloc(4);
    call {:si_unique_call 2959} Tmp_1782 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 2960} Sbp2AllocComplete#0(CallbackContext_2);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1782;
    assume {:nonnull} Tmp_1782 != 0;
    assume Tmp_1782 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    havoc Tmp_1785;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1783;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    havoc vslice_dummy_var_2977;
    call {:si_unique_call 2961} WPP_SF_qq(Tmp_1783, 43, Tmp_1785, CallbackContext_2, vslice_dummy_var_2977);
    goto L13;

  L13:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1781;
    assume {:nonnull} Tmp_1781 != 0;
    assume Tmp_1781 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    havoc Tmp_1779;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1780;
    call {:si_unique_call 2962} WPP_SF_q(Tmp_1780, 44, Tmp_1779, CallbackContext_2);
    goto L28;

  L28:
    Tmp_1778 := -1073741670;
    goto L1;

  L1:
    return;

  anon18_Then:
    goto L28;

  anon21_Then:
    goto L28;

  anon20_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L28;

  anon16_Then:
    Tmp_1778 := 259;
    goto L1;

  anon17_Then:
    goto L13;

  anon19_Then:
    goto L13;

  anon15_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L13;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1778: int);
  modifies alloc, Mem_T.P_IRBIRP, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.Irp__IRBIRP, queued, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1778 == -1073741670 || Tmp_1778 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1778: int)
{
  var {:pointer} Tmp_1779: int;
  var {:scalar} Tmp_1780: int;
  var {:pointer} Tmp_1781: int;
  var {:pointer} Tmp_1782: int;
  var {:scalar} Tmp_1783: int;
  var {:pointer} Tmp_1785: int;
  var {:pointer} CallbackContext_2: int;
  var vslice_dummy_var_2978: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    call {:si_unique_call 2963} Tmp_1781 := __HAVOC_malloc(4);
    call {:si_unique_call 2964} Tmp_1782 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 2965} Sbp2AllocComplete#1(CallbackContext_2);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1782;
    assume {:nonnull} Tmp_1782 != 0;
    assume Tmp_1782 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    havoc Tmp_1785;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1783;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    havoc vslice_dummy_var_2978;
    call {:si_unique_call 2966} WPP_SF_qq(Tmp_1783, 43, Tmp_1785, CallbackContext_2, vslice_dummy_var_2978);
    goto L13;

  L13:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1781;
    assume {:nonnull} Tmp_1781 != 0;
    assume Tmp_1781 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    havoc Tmp_1779;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1780;
    call {:si_unique_call 2967} WPP_SF_q(Tmp_1780, 44, Tmp_1779, CallbackContext_2);
    goto L28;

  L28:
    Tmp_1778 := -1073741670;
    goto L1;

  L1:
    return;

  anon18_Then:
    goto L28;

  anon21_Then:
    goto L28;

  anon20_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L28;

  anon16_Then:
    Tmp_1778 := 259;
    goto L1;

  anon17_Then:
    goto L13;

  anon19_Then:
    goto L13;

  anon15_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L13;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1778: int);
  modifies alloc, Mem_T.P_IRBIRP, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.Irp__IRBIRP, queued, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1778 == -1073741670 || Tmp_1778 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int)
{
  var {:pointer} Tmp_1425: int;
  var {:pointer} Tmp_1426: int;
  var {:pointer} Tmp_1427: int;
  var {:pointer} Tmp_1428: int;
  var {:pointer} Tmp_1429: int;
  var {:pointer} Tmp_1430: int;
  var {:pointer} Tmp_1431: int;
  var {:pointer} Tmp_1433: int;
  var {:pointer} Tmp_1434: int;
  var {:pointer} Tmp_1435: int;
  var {:pointer} Tmp_1436: int;
  var {:pointer} Tmp_1437: int;
  var {:scalar} Tmp_1438: int;
  var {:pointer} Tmp_1439: int;
  var {:scalar} Tmp_1440: int;
  var {:pointer} Tmp_1441: int;
  var {:pointer} Tmp_1442: int;
  var {:pointer} Tmp_1443: int;
  var {:pointer} Tmp_1444: int;
  var {:pointer} Tmp_1445: int;
  var {:pointer} Tmp_1446: int;
  var {:pointer} Tmp_1447: int;
  var {:pointer} irp_2: int;
  var {:pointer} Tmp_1449: int;
  var {:pointer} Tmp_1450: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_1451: int;
  var {:pointer} Tmp_1452: int;
  var {:pointer} Tmp_1453: int;
  var {:pointer} srb_3: int;
  var {:pointer} packet_12: int;
  var {:scalar} status_42: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_1454: int;
  var {:scalar} Tmp_1455: int;
  var {:pointer} Tmp_1456: int;
  var {:pointer} Tmp_1457: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_1458: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_461: int;
  var vslice_dummy_var_2979: int;
  var vslice_dummy_var_2980: int;
  var vslice_dummy_var_2981: int;

  anon0:
    call {:si_unique_call 2968} vslice_dummy_var_459 := __HAVOC_malloc(4);
    call {:si_unique_call 2969} packet_12 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    call {:si_unique_call 2970} Tmp_1441 := __HAVOC_malloc(4);
    call {:si_unique_call 2971} Tmp_1447 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_2979;
    Mem_T.P_IRBIRP[packet_12] := vslice_dummy_var_2979;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1429;
    assume {:nonnull} Tmp_1429 != 0;
    assume Tmp_1429 > 0;
    havoc deviceExtension_3;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc routine_2;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1441;
    assume {:nonnull} Tmp_1441 != 0;
    assume Tmp_1441 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    havoc Tmp_1451;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1440;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_2980;
    call {:si_unique_call 2972} WPP_SF_qD(Tmp_1440, 45, Tmp_1451, CallbackContext, vslice_dummy_var_2980);
    goto L18;

  L18:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L32;

  L32:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1452;
    assume {:nonnull} Tmp_1452 != 0;
    assume Tmp_1452 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1450;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1430;
    assume {:nonnull} Tmp_1430 != 0;
    assume Tmp_1430 > 0;
    assume {:nonnull} Tmp_1450 != 0;
    assume Tmp_1450 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1456;
    assume {:nonnull} Tmp_1456 != 0;
    assume Tmp_1456 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1428;
    assume {:nonnull} Tmp_1428 != 0;
    assume Tmp_1428 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1436;
    assume {:nonnull} Tmp_1436 != 0;
    assume Tmp_1436 > 0;
    goto L39;

  L39:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1437;
    assume {:nonnull} Tmp_1437 != 0;
    assume Tmp_1437 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1445;
    assume {:nonnull} Tmp_1445 != 0;
    assume Tmp_1445 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1454;
    assume {:nonnull} Tmp_1454 != 0;
    assume Tmp_1454 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1442;
    assume {:nonnull} Tmp_1442 != 0;
    assume Tmp_1442 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1458;
    assume {:nonnull} Tmp_1458 != 0;
    assume Tmp_1458 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1446;
    assume {:nonnull} Tmp_1446 != 0;
    assume Tmp_1446 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1431;
    assume {:nonnull} Tmp_1431 != 0;
    assume Tmp_1431 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1433;
    assume {:nonnull} Tmp_1433 != 0;
    assume Tmp_1433 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1453;
    assume {:nonnull} Tmp_1453 != 0;
    assume Tmp_1453 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1425;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1426;
    assume {:nonnull} Tmp_1425 != 0;
    assume Tmp_1425 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1434;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1434 != 0;
    assume Tmp_1434 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1435;
    assume {:nonnull} Tmp_1435 != 0;
    assume Tmp_1435 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    assume routine_2 == 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_42 != 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1447;
    assume {:nonnull} Tmp_1447 != 0;
    assume Tmp_1447 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_1455 := bDirectCall;
    havoc Tmp_1449;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1438;
    call {:si_unique_call 2973} WPP_SF_qD(Tmp_1438, 46, Tmp_1449, CallbackContext, Tmp_1455);
    goto L62;

  L62:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    call {:si_unique_call 2974} DeAllocateIrpAndIrb(deviceExtension_3, Mem_T.P_IRBIRP[packet_12]);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb_3;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 2975} vslice_dummy_var_461 := FreeAsyncRequestContext(deviceExtension_3, CallbackContext);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    havoc irp_2;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_2))] := status_42;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 2976} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume false;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 2977} vslice_dummy_var_460 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_3), irp_2);
    return;

  anon39_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  L1:
    return;

  anon32_Then:
    goto L62;

  anon38_Then:
    goto L62;

  anon31_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L62;

  anon30_Then:
    assume {:partition} status_42 == 0;
    goto L1;

  anon37_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1427;
    assume {:nonnull} Tmp_1427 != 0;
    assume Tmp_1427 > 0;
    goto L39;

  anon36_Then:
    call {:si_unique_call 2978} AllocateIrpAndIrb(deviceExtension_3, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_12] != 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 1;
    goto L32;

  anon33_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_12] == 0;
    goto L1;

  anon27_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1439;
    assume {:nonnull} Tmp_1439 != 0;
    assume Tmp_1439 > 0;
    havoc Tmp_1443;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1443 != 0;
    assume Tmp_1443 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1444;
    assume {:nonnull} Tmp_1444 != 0;
    assume Tmp_1444 > 0;
    havoc Tmp_1457;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1457 != 0;
    assume Tmp_1457 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_2981;
    call {:si_unique_call 2979} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_2981);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 2980} Sbp2InitializeOrb(deviceExtension_3, CallbackContext);
    call {:si_unique_call 2981} Sbp2InsertTailList#0(deviceExtension_3, CallbackContext);
    goto L1;

  anon29_Then:
    goto L1;

  anon28_Then:
    goto L18;

  anon35_Then:
    goto L18;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int);
  modifies alloc, Mem_T.P_IRBIRP, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.Irp__IRBIRP, queued, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int)
{
  var {:pointer} Tmp_1425: int;
  var {:pointer} Tmp_1426: int;
  var {:pointer} Tmp_1427: int;
  var {:pointer} Tmp_1428: int;
  var {:pointer} Tmp_1429: int;
  var {:pointer} Tmp_1430: int;
  var {:pointer} Tmp_1431: int;
  var {:pointer} Tmp_1433: int;
  var {:pointer} Tmp_1434: int;
  var {:pointer} Tmp_1435: int;
  var {:pointer} Tmp_1436: int;
  var {:pointer} Tmp_1437: int;
  var {:scalar} Tmp_1438: int;
  var {:pointer} Tmp_1439: int;
  var {:scalar} Tmp_1440: int;
  var {:pointer} Tmp_1441: int;
  var {:pointer} Tmp_1442: int;
  var {:pointer} Tmp_1443: int;
  var {:pointer} Tmp_1444: int;
  var {:pointer} Tmp_1445: int;
  var {:pointer} Tmp_1446: int;
  var {:pointer} Tmp_1447: int;
  var {:pointer} irp_2: int;
  var {:pointer} Tmp_1449: int;
  var {:pointer} Tmp_1450: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_1451: int;
  var {:pointer} Tmp_1452: int;
  var {:pointer} Tmp_1453: int;
  var {:pointer} srb_3: int;
  var {:pointer} packet_12: int;
  var {:scalar} status_42: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_1454: int;
  var {:scalar} Tmp_1455: int;
  var {:pointer} Tmp_1456: int;
  var {:pointer} Tmp_1457: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_1458: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_2982: int;
  var vslice_dummy_var_2983: int;
  var vslice_dummy_var_2984: int;
  var vslice_dummy_var_2985: int;

  anon0:
    call {:si_unique_call 2982} vslice_dummy_var_462 := __HAVOC_malloc(4);
    call {:si_unique_call 2983} packet_12 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    call {:si_unique_call 2984} Tmp_1441 := __HAVOC_malloc(4);
    call {:si_unique_call 2985} Tmp_1447 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_2982;
    Mem_T.P_IRBIRP[packet_12] := vslice_dummy_var_2982;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1429;
    assume {:nonnull} Tmp_1429 != 0;
    assume Tmp_1429 > 0;
    havoc deviceExtension_3;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc routine_2;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1441;
    assume {:nonnull} Tmp_1441 != 0;
    assume Tmp_1441 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    havoc Tmp_1451;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1440;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_2983;
    call {:si_unique_call 2986} WPP_SF_qD(Tmp_1440, 45, Tmp_1451, CallbackContext, vslice_dummy_var_2983);
    goto L18;

  L18:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L32;

  L32:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1452;
    assume {:nonnull} Tmp_1452 != 0;
    assume Tmp_1452 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1450;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1430;
    assume {:nonnull} Tmp_1430 != 0;
    assume Tmp_1430 > 0;
    assume {:nonnull} Tmp_1450 != 0;
    assume Tmp_1450 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1456;
    assume {:nonnull} Tmp_1456 != 0;
    assume Tmp_1456 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1428;
    assume {:nonnull} Tmp_1428 != 0;
    assume Tmp_1428 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1436;
    assume {:nonnull} Tmp_1436 != 0;
    assume Tmp_1436 > 0;
    goto L39;

  L39:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1437;
    assume {:nonnull} Tmp_1437 != 0;
    assume Tmp_1437 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1445;
    assume {:nonnull} Tmp_1445 != 0;
    assume Tmp_1445 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1454;
    assume {:nonnull} Tmp_1454 != 0;
    assume Tmp_1454 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1442;
    assume {:nonnull} Tmp_1442 != 0;
    assume Tmp_1442 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1458;
    assume {:nonnull} Tmp_1458 != 0;
    assume Tmp_1458 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1446;
    assume {:nonnull} Tmp_1446 != 0;
    assume Tmp_1446 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1431;
    assume {:nonnull} Tmp_1431 != 0;
    assume Tmp_1431 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1433;
    assume {:nonnull} Tmp_1433 != 0;
    assume Tmp_1433 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1453;
    assume {:nonnull} Tmp_1453 != 0;
    assume Tmp_1453 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1425;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1426;
    assume {:nonnull} Tmp_1425 != 0;
    assume Tmp_1425 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1434;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1434 != 0;
    assume Tmp_1434 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1435;
    assume {:nonnull} Tmp_1435 != 0;
    assume Tmp_1435 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    assume routine_2 == 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_42 != 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1447;
    assume {:nonnull} Tmp_1447 != 0;
    assume Tmp_1447 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_1455 := bDirectCall;
    havoc Tmp_1449;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1438;
    call {:si_unique_call 2987} WPP_SF_qD(Tmp_1438, 46, Tmp_1449, CallbackContext, Tmp_1455);
    goto L62;

  L62:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    call {:si_unique_call 2988} DeAllocateIrpAndIrb(deviceExtension_3, Mem_T.P_IRBIRP[packet_12]);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb_3;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 2989} vslice_dummy_var_464 := FreeAsyncRequestContext(deviceExtension_3, CallbackContext);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    havoc irp_2;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(irp_2))] := status_42;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 2990} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_2984;
    call {:si_unique_call 2991} Sbp2StartNextPacketByKey#0(vslice_dummy_var_2984, 0);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 2992} vslice_dummy_var_463 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_3), irp_2);
    goto L1;

  L1:
    return;

  anon39_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  anon32_Then:
    goto L62;

  anon38_Then:
    goto L62;

  anon31_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L62;

  anon30_Then:
    assume {:partition} status_42 == 0;
    goto L1;

  anon37_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1427;
    assume {:nonnull} Tmp_1427 != 0;
    assume Tmp_1427 > 0;
    goto L39;

  anon36_Then:
    call {:si_unique_call 2993} AllocateIrpAndIrb(deviceExtension_3, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_12] != 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 1;
    goto L32;

  anon33_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_12] == 0;
    goto L1;

  anon27_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1439;
    assume {:nonnull} Tmp_1439 != 0;
    assume Tmp_1439 > 0;
    havoc Tmp_1443;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1443 != 0;
    assume Tmp_1443 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1444;
    assume {:nonnull} Tmp_1444 != 0;
    assume Tmp_1444 > 0;
    havoc Tmp_1457;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1457 != 0;
    assume Tmp_1457 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_2985;
    call {:si_unique_call 2994} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_2985);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 2995} Sbp2InitializeOrb(deviceExtension_3, CallbackContext);
    call {:si_unique_call 2996} Sbp2InsertTailList#1(deviceExtension_3, CallbackContext);
    goto L1;

  anon29_Then:
    goto L1;

  anon28_Then:
    goto L18;

  anon35_Then:
    goto L18;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int);
  modifies alloc, Mem_T.P_IRBIRP, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.Irp__IRBIRP, queued, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#0(actual_PdoExtension_26: int) returns (Tmp_2445: int)
{
  var {:scalar} i_7: int;
  var {:pointer} Tmp_2446: int;
  var {:pointer} Tmp_2448: int;
  var {:pointer} Tmp_2449: int;
  var {:pointer} deviceObject_4: int;
  var {:scalar} Tmp_2450: int;
  var {:pointer} Tmp_2451: int;
  var {:scalar} orbLock_10: int;
  var {:pointer} context_4: int;
  var {:scalar} Tmp_2452: int;
  var {:scalar} Tmp_2453: int;
  var {:pointer} Tmp_2454: int;
  var {:pointer} oldContext: int;
  var {:pointer} Tmp_2455: int;
  var {:pointer} sdv_782: int;
  var {:pointer} sdv_783: int;
  var {:pointer} Tmp_2456: int;
  var {:pointer} Tmp_2457: int;
  var {:scalar} status_77: int;
  var {:pointer} Tmp_2458: int;
  var {:pointer} Tmp_2459: int;
  var {:pointer} Tmp_2460: int;
  var {:pointer} PdoExtension_26: int;
  var vslice_dummy_var_465: int;

  anon0:
    call {:si_unique_call 2997} orbLock_10 := __HAVOC_malloc(12);
    PdoExtension_26 := actual_PdoExtension_26;
    call {:si_unique_call 2998} Tmp_2448 := __HAVOC_malloc(1856);
    call {:si_unique_call 2999} Tmp_2451 := __HAVOC_malloc(4);
    call {:si_unique_call 3000} Tmp_2458 := __HAVOC_malloc(1856);
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc deviceObject_4;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_2445 := 0;
    goto L1;

  L1:
    return;

  anon61_Then:
    assume false;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3001} status_77 := Sbp2UpdateNodeInformation#0(PdoExtension_26);
    return;
}



procedure {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#0(actual_PdoExtension_26: int) returns (Tmp_2445: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, sdv_irql_current, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_2445 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#1(actual_PdoExtension_26: int) returns (Tmp_2445: int)
{
  var {:scalar} i_7: int;
  var {:pointer} Tmp_2446: int;
  var {:pointer} Tmp_2448: int;
  var {:pointer} Tmp_2449: int;
  var {:pointer} deviceObject_4: int;
  var {:scalar} Tmp_2450: int;
  var {:pointer} Tmp_2451: int;
  var {:scalar} orbLock_10: int;
  var {:pointer} context_4: int;
  var {:scalar} Tmp_2452: int;
  var {:scalar} Tmp_2453: int;
  var {:pointer} Tmp_2454: int;
  var {:pointer} oldContext: int;
  var {:pointer} Tmp_2455: int;
  var {:pointer} sdv_782: int;
  var {:pointer} sdv_783: int;
  var {:pointer} Tmp_2456: int;
  var {:pointer} Tmp_2457: int;
  var {:scalar} status_77: int;
  var {:pointer} Tmp_2458: int;
  var {:pointer} Tmp_2459: int;
  var {:pointer} Tmp_2460: int;
  var {:pointer} PdoExtension_26: int;
  var vslice_dummy_var_466: int;

  anon0:
    call {:si_unique_call 3002} orbLock_10 := __HAVOC_malloc(12);
    PdoExtension_26 := actual_PdoExtension_26;
    call {:si_unique_call 3003} Tmp_2448 := __HAVOC_malloc(1856);
    call {:si_unique_call 3004} Tmp_2451 := __HAVOC_malloc(4);
    call {:si_unique_call 3005} Tmp_2458 := __HAVOC_malloc(1856);
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc deviceObject_4;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_2445 := 0;
    goto L1;

  L1:
    return;

  anon61_Then:
    call {:si_unique_call 3006} CleanupOrbList#0(PdoExtension_26, -1073741248);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3007} status_77 := Sbp2UpdateNodeInformation#1(PdoExtension_26);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} status_77 < 0;
    goto L70;

  L70:
    Tmp_2445 := status_77;
    goto L1;

  anon45_Then:
    assume {:partition} 0 <= status_77;
    call {:si_unique_call 3008} status_77 := Sbp2GetControllerInfo#1(PdoExtension_26);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} status_77 < 0;
    goto L70;

  anon46_Then:
    assume {:partition} 0 <= status_77;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L37;

  L37:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto L41;

  L41:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L45;

  L45:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L53;

  L53:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    i_7 := 0;
    goto L56;

  L56:
    call {:si_unique_call 3009} i_7, context_4 := Sbp2InitializeDeviceExtension#1_loop_L56(i_7, context_4, PdoExtension_26);
    goto L56_last;

  L56_last:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} 8 > i_7;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc context_4;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    i_7 := i_7 + 1;
    goto anon51_Else_dummy;

  anon51_Else_dummy:
    assume false;
    return;

  anon51_Then:
    assume {:partition} i_7 >= 8;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L69;

  L69:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2451;
    assume {:nonnull} Tmp_2451 != 0;
    assume Tmp_2451 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_2455;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2452;
    call {:si_unique_call 3010} WPP_SF_q(Tmp_2452, 30, Tmp_2455, PdoExtension_26);
    goto L70;

  anon53_Then:
    goto L70;

  anon64_Then:
    goto L70;

  anon52_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L70;

  anon63_Then:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3011} status_77 := AllocateSingle1394Address#1(deviceObject_4, Dummy__DEVICE_EXTENSION(PdoExtension_26), 40, 3, DummyContext__DEVICE_EXTENSION(PdoExtension_26));
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} status_77 < 0;
    goto L70;

  anon54_Then:
    assume {:partition} 0 <= status_77;
    goto L69;

  anon50_Then:
    status_77 := -1073741670;
    goto L70;

  anon62_Then:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3012} status_77 := AllocateSingle1394Address#1(deviceObject_4, 0, 536, 3, CommonBufferContext__DEVICE_EXTENSION(PdoExtension_26));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_77 >= 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2449;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2449 != 0;
    assume Tmp_2449 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2456;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2456 != 0;
    assume Tmp_2456 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2460;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2460 != 0;
    assume Tmp_2460 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2454;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2454 != 0;
    assume Tmp_2454 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2457;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2457 != 0;
    assume Tmp_2457 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3013} AcquireOrbListLock(PdoExtension_26, orbLock_10, 0);
    i_7 := 0;
    context_4 := 0;
    goto L105;

  L105:
    call {:si_unique_call 3014} i_7, Tmp_2446, Tmp_2448, Tmp_2450, context_4, Tmp_2453, oldContext, sdv_782, sdv_783, Tmp_2458, Tmp_2459 := Sbp2InitializeDeviceExtension#1_loop_L105(i_7, Tmp_2446, Tmp_2448, Tmp_2450, context_4, Tmp_2453, oldContext, sdv_782, sdv_783, Tmp_2458, Tmp_2459, PdoExtension_26);
    goto L105_last;

  L105_last:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} 8 > i_7;
    oldContext := context_4;
    call {:si_unique_call 3015} sdv_783 := sdv_ExInterlockedPopEntrySList(0, 0);
    context_4 := sdv_783;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} context_4 != 0;
    call {:si_unique_call 3016} sdv_782 := sdv_containing_record(context_4, 8);
    context_4 := sdv_782;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} context_4 != 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    Tmp_2453 := i_7;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2459;
    assume {:nonnull} Tmp_2459 != 0;
    assume Tmp_2459 > 0;
    havoc Tmp_2458;
    assume {:nonnull} Tmp_2458 != 0;
    assume Tmp_2458 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    Tmp_2450 := i_7;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2446;
    assume {:nonnull} Tmp_2446 != 0;
    assume Tmp_2446 > 0;
    havoc Tmp_2448;
    assume {:nonnull} Tmp_2448 != 0;
    assume Tmp_2448 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    i_7 := i_7 + 1;
    goto anon66_Else_dummy;

  anon66_Else_dummy:
    assume false;
    return;

  anon66_Then:
    assume {:partition} context_4 == 0;
    status_77 := -1073741670;
    call {:si_unique_call 3017} ReleaseOrbListLock(PdoExtension_26, orbLock_10, 0);
    goto L70;

  anon65_Then:
    assume {:partition} context_4 == 0;
    status_77 := -1073741670;
    call {:si_unique_call 3018} ReleaseOrbListLock(PdoExtension_26, orbLock_10, 0);
    goto L70;

  anon56_Then:
    assume {:partition} i_7 >= 8;
    goto L106;

  L106:
    call {:si_unique_call 3019} context_4, oldContext, vslice_dummy_var_466 := Sbp2InitializeDeviceExtension#1_loop_L106(context_4, oldContext, vslice_dummy_var_466);
    goto L106_last;

  L106_last:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} context_4 != 0;
    oldContext := context_4;
    call {:si_unique_call 3020} vslice_dummy_var_466 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    havoc context_4;
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    goto anon57_Else_dummy;

  anon57_Else_dummy:
    assume false;
    return;

  anon57_Then:
    assume {:partition} context_4 == 0;
    call {:si_unique_call 3021} ReleaseOrbListLock(PdoExtension_26, orbLock_10, 0);
    goto L53;

  anon55_Then:
    assume {:partition} 0 > status_77;
    goto L70;

  anon49_Then:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3022} status_77 := AllocateAddressForStatus#1(deviceObject_4, GlobalStatusContext__DEVICE_EXTENSION(PdoExtension_26), 8);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_77 < 0;
    goto L70;

  anon58_Then:
    assume {:partition} 0 <= status_77;
    goto L45;

  anon48_Then:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3023} status_77 := AllocateAddressForStatus#1(deviceObject_4, ManagementOrbStatusContext__DEVICE_EXTENSION(PdoExtension_26), 4);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_77 < 0;
    goto L70;

  anon59_Then:
    assume {:partition} 0 <= status_77;
    goto L41;

  anon47_Then:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3024} status_77 := AllocateAddressForStatus#1(deviceObject_4, TaskOrbStatusContext__DEVICE_EXTENSION(PdoExtension_26), 2);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} status_77 < 0;
    goto L70;

  anon60_Then:
    assume {:partition} 0 <= status_77;
    goto L37;
}



procedure {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#1(actual_PdoExtension_26: int) returns (Tmp_2445: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#0(actual_DeviceObject_20: int, actual_Context_7: int, actual_StatusType: int) returns (Tmp_1367: int)
{
  var {:pointer} Tmp_1368: int;
  var {:pointer} Tmp_1369: int;
  var {:pointer} Tmp_1370: int;
  var {:pointer} Tmp_1371: int;
  var {:pointer} Tmp_1372: int;
  var {:pointer} Tmp_1373: int;
  var {:pointer} Tmp_1375: int;
  var {:pointer} Tmp_1376: int;
  var {:pointer} Tmp_1377: int;
  var {:pointer} Tmp_1378: int;
  var {:pointer} Tmp_1379: int;
  var {:pointer} Tmp_1380: int;
  var {:pointer} Tmp_1381: int;
  var {:pointer} Tmp_1382: int;
  var {:pointer} Tmp_1383: int;
  var {:pointer} Tmp_1384: int;
  var {:pointer} Tmp_1385: int;
  var {:scalar} status_40: int;
  var {:pointer} packet_11: int;
  var {:pointer} Tmp_1386: int;
  var {:pointer} Tmp_1387: int;
  var {:pointer} Tmp_1388: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} Tmp_1389: int;
  var {:pointer} Tmp_1390: int;
  var {:pointer} Tmp_1391: int;
  var {:pointer} DeviceObject_20: int;
  var {:pointer} Context_7: int;
  var {:scalar} StatusType: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 3025} packet_11 := __HAVOC_malloc(4);
    DeviceObject_20 := actual_DeviceObject_20;
    Context_7 := actual_Context_7;
    StatusType := actual_StatusType;
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc deviceExtension_2;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    Mem_T.P_IRBIRP[packet_11] := 0;
    call {:si_unique_call 3026} AllocateIrpAndIrb(deviceExtension_2, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_11] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1383;
    assume {:nonnull} Tmp_1383 != 0;
    assume Tmp_1383 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1377;
    assume {:nonnull} Tmp_1377 != 0;
    assume Tmp_1377 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1372;
    assume {:nonnull} Tmp_1372 != 0;
    assume Tmp_1372 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1379;
    assume {:nonnull} Tmp_1379 != 0;
    assume Tmp_1379 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1384;
    assume {:nonnull} Tmp_1384 != 0;
    assume Tmp_1384 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1373;
    assume {:nonnull} Tmp_1373 != 0;
    assume Tmp_1373 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1378;
    assume {:nonnull} Tmp_1378 != 0;
    assume Tmp_1378 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1369;
    assume {:nonnull} Tmp_1369 != 0;
    assume Tmp_1369 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1387;
    assume {:nonnull} Tmp_1387 != 0;
    assume Tmp_1387 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1380;
    assume {:nonnull} Tmp_1380 != 0;
    assume Tmp_1380 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1376;
    assume {:nonnull} Tmp_1376 != 0;
    assume Tmp_1376 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1382;
    assume {:nonnull} Tmp_1382 != 0;
    assume Tmp_1382 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1370;
    assume {:nonnull} Tmp_1370 != 0;
    assume Tmp_1370 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusType != 2;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} StatusType != 4;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} StatusType == 8;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1371;
    assume {:nonnull} Tmp_1371 != 0;
    assume Tmp_1371 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1381;
    assume {:nonnull} Tmp_1381 != 0;
    assume Tmp_1381 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1381 != 0;
    assume Tmp_1381 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1368;
    assume {:nonnull} Tmp_1368 != 0;
    assume Tmp_1368 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1390;
    assume {:nonnull} Tmp_1390 != 0;
    assume Tmp_1390 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto L27;

  L27:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L55;

  L55:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1391;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1391 != 0;
    assume Tmp_1391 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1389;
    assume {:nonnull} Tmp_1389 != 0;
    assume Tmp_1389 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1375;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1375 != 0;
    assume Tmp_1375 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    assume false;
    return;

  anon18_Then:
    goto L55;

  anon22_Then:
    assume {:partition} StatusType != 8;
    goto L27;

  anon23_Then:
    assume {:partition} StatusType == 4;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1385;
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 3027} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    status_40 := -1073741670;
    goto L43;

  L43:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    call {:si_unique_call 3028} DeAllocateIrpAndIrb(deviceExtension_2, Mem_T.P_IRBIRP[packet_11]);
    Tmp_1367 := status_40;
    goto L1;

  L1:
    return;

  anon19_Then:
    goto L27;

  anon24_Then:
    assume {:partition} StatusType == 2;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1388;
    assume {:nonnull} Tmp_1388 != 0;
    assume Tmp_1388 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 3029} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    status_40 := -1073741670;
    goto L43;

  anon20_Then:
    goto L27;

  anon17_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_11] == 0;
    Tmp_1367 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#0(actual_DeviceObject_20: int, actual_Context_7: int, actual_StatusType: int) returns (Tmp_1367: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} Tmp_1367 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#1(actual_DeviceObject_20: int, actual_Context_7: int, actual_StatusType: int) returns (Tmp_1367: int)
{
  var {:pointer} Tmp_1368: int;
  var {:pointer} Tmp_1369: int;
  var {:pointer} Tmp_1370: int;
  var {:pointer} Tmp_1371: int;
  var {:pointer} Tmp_1372: int;
  var {:pointer} Tmp_1373: int;
  var {:pointer} Tmp_1375: int;
  var {:pointer} Tmp_1376: int;
  var {:pointer} Tmp_1377: int;
  var {:pointer} Tmp_1378: int;
  var {:pointer} Tmp_1379: int;
  var {:pointer} Tmp_1380: int;
  var {:pointer} Tmp_1381: int;
  var {:pointer} Tmp_1382: int;
  var {:pointer} Tmp_1383: int;
  var {:pointer} Tmp_1384: int;
  var {:pointer} Tmp_1385: int;
  var {:scalar} status_40: int;
  var {:pointer} packet_11: int;
  var {:pointer} Tmp_1386: int;
  var {:pointer} Tmp_1387: int;
  var {:pointer} Tmp_1388: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} Tmp_1389: int;
  var {:pointer} Tmp_1390: int;
  var {:pointer} Tmp_1391: int;
  var {:pointer} DeviceObject_20: int;
  var {:pointer} Context_7: int;
  var {:scalar} StatusType: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 3030} packet_11 := __HAVOC_malloc(4);
    DeviceObject_20 := actual_DeviceObject_20;
    Context_7 := actual_Context_7;
    StatusType := actual_StatusType;
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc deviceExtension_2;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    Mem_T.P_IRBIRP[packet_11] := 0;
    call {:si_unique_call 3031} AllocateIrpAndIrb(deviceExtension_2, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_11] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1383;
    assume {:nonnull} Tmp_1383 != 0;
    assume Tmp_1383 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1377;
    assume {:nonnull} Tmp_1377 != 0;
    assume Tmp_1377 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1372;
    assume {:nonnull} Tmp_1372 != 0;
    assume Tmp_1372 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1379;
    assume {:nonnull} Tmp_1379 != 0;
    assume Tmp_1379 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1384;
    assume {:nonnull} Tmp_1384 != 0;
    assume Tmp_1384 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1373;
    assume {:nonnull} Tmp_1373 != 0;
    assume Tmp_1373 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1378;
    assume {:nonnull} Tmp_1378 != 0;
    assume Tmp_1378 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1369;
    assume {:nonnull} Tmp_1369 != 0;
    assume Tmp_1369 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1387;
    assume {:nonnull} Tmp_1387 != 0;
    assume Tmp_1387 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1380;
    assume {:nonnull} Tmp_1380 != 0;
    assume Tmp_1380 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1376;
    assume {:nonnull} Tmp_1376 != 0;
    assume Tmp_1376 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1382;
    assume {:nonnull} Tmp_1382 != 0;
    assume Tmp_1382 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1370;
    assume {:nonnull} Tmp_1370 != 0;
    assume Tmp_1370 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusType != 2;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} StatusType != 4;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} StatusType == 8;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1371;
    assume {:nonnull} Tmp_1371 != 0;
    assume Tmp_1371 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1381;
    assume {:nonnull} Tmp_1381 != 0;
    assume Tmp_1381 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1381 != 0;
    assume Tmp_1381 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1368;
    assume {:nonnull} Tmp_1368 != 0;
    assume Tmp_1368 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1390;
    assume {:nonnull} Tmp_1390 != 0;
    assume Tmp_1390 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto L27;

  L27:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L55;

  L55:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1391;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1391 != 0;
    assume Tmp_1391 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1389;
    assume {:nonnull} Tmp_1389 != 0;
    assume Tmp_1389 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1375;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1375 != 0;
    assume Tmp_1375 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    call {:si_unique_call 3032} status_40 := Sbp2SendRequest#0(deviceExtension_2, Mem_T.P_IRBIRP[packet_11], 2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_40 >= 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1386;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1386 != 0;
    assume Tmp_1386 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    call {:si_unique_call 3033} DeAllocateIrpAndIrb(deviceExtension_2, Mem_T.P_IRBIRP[packet_11]);
    Tmp_1367 := status_40;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} 0 > status_40;
    goto L43;

  anon18_Then:
    goto L55;

  anon22_Then:
    assume {:partition} StatusType != 8;
    goto L27;

  anon23_Then:
    assume {:partition} StatusType == 4;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1385;
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 3034} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    status_40 := -1073741670;
    goto L43;

  anon19_Then:
    goto L27;

  anon24_Then:
    assume {:partition} StatusType == 2;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1388;
    assume {:nonnull} Tmp_1388 != 0;
    assume Tmp_1388 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 3035} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    status_40 := -1073741670;
    goto L43;

  anon20_Then:
    goto L27;

  anon17_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_11] == 0;
    Tmp_1367 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#1(actual_DeviceObject_20: int, actual_Context_7: int, actual_StatusType: int) returns (Tmp_1367: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#0(actual_DeviceObject_19: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_5: int) returns (Tmp_1275: int)
{
  var {:pointer} Tmp_1276: int;
  var {:pointer} Tmp_1277: int;
  var {:pointer} Tmp_1278: int;
  var {:pointer} Tmp_1279: int;
  var {:pointer} Tmp_1280: int;
  var {:pointer} Tmp_1281: int;
  var {:pointer} Tmp_1282: int;
  var {:pointer} Tmp_1283: int;
  var {:pointer} Tmp_1284: int;
  var {:pointer} Tmp_1285: int;
  var {:pointer} Tmp_1286: int;
  var {:pointer} Tmp_1287: int;
  var {:pointer} Tmp_1288: int;
  var {:pointer} Tmp_1289: int;
  var {:pointer} Tmp_1290: int;
  var {:pointer} Tmp_1291: int;
  var {:pointer} Tmp_1292: int;
  var {:pointer} packet_9: int;
  var {:scalar} status_36: int;
  var {:pointer} Tmp_1293: int;
  var {:pointer} Tmp_1294: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} Tmp_1296: int;
  var {:pointer} Tmp_1297: int;
  var {:pointer} DeviceObject_19: int;
  var {:pointer} Buffer: int;
  var {:scalar} Length_6: int;
  var {:scalar} AccessType: int;
  var {:pointer} Context_5: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 3036} packet_9 := __HAVOC_malloc(4);
    DeviceObject_19 := actual_DeviceObject_19;
    Buffer := actual_Buffer;
    Length_6 := actual_Length_6;
    AccessType := actual_AccessType;
    Context_5 := actual_Context_5;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    havoc deviceExtension_1;
    call {:si_unique_call 3037} AllocateIrpAndIrb(deviceExtension_1, packet_9);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_9] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1277;
    assume {:nonnull} Tmp_1277 != 0;
    assume Tmp_1277 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1286;
    assume {:nonnull} Tmp_1286 != 0;
    assume Tmp_1286 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1276;
    assume {:nonnull} Tmp_1276 != 0;
    assume Tmp_1276 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1294;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1287;
    assume {:nonnull} Tmp_1287 != 0;
    assume Tmp_1287 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1285;
    assume {:nonnull} Tmp_1285 != 0;
    assume Tmp_1285 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1288;
    assume {:nonnull} Tmp_1288 != 0;
    assume Tmp_1288 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1290;
    assume {:nonnull} Tmp_1290 != 0;
    assume Tmp_1290 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1278;
    assume {:nonnull} Tmp_1278 != 0;
    assume Tmp_1278 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1292;
    assume {:nonnull} Tmp_1292 != 0;
    assume Tmp_1292 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1296;
    assume {:nonnull} Tmp_1296 != 0;
    assume Tmp_1296 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1279;
    assume {:nonnull} Tmp_1279 != 0;
    assume Tmp_1279 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1289;
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1281;
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1280;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Buffer != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1291;
    assume {:nonnull} Tmp_1291 != 0;
    assume Tmp_1291 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    call {:si_unique_call 3038} boogieTmp := IoAllocateMdl(0, Length_6, 0, 0, 0);
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1284;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1284 != 0;
    assume Tmp_1284 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    assume false;
    return;

  anon12_Then:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    call {:si_unique_call 3039} DeAllocateIrpAndIrb(deviceExtension_1, Mem_T.P_IRBIRP[packet_9]);
    Tmp_1275 := -1073741670;
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:partition} Buffer == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1297;
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1283;
    assume {:nonnull} Tmp_1283 != 0;
    assume Tmp_1283 > 0;
    goto L43;

  anon11_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_9] == 0;
    Tmp_1275 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#0(actual_DeviceObject_19: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_5: int) returns (Tmp_1275: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} Tmp_1275 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#1(actual_DeviceObject_19: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_5: int) returns (Tmp_1275: int)
{
  var {:pointer} Tmp_1276: int;
  var {:pointer} Tmp_1277: int;
  var {:pointer} Tmp_1278: int;
  var {:pointer} Tmp_1279: int;
  var {:pointer} Tmp_1280: int;
  var {:pointer} Tmp_1281: int;
  var {:pointer} Tmp_1282: int;
  var {:pointer} Tmp_1283: int;
  var {:pointer} Tmp_1284: int;
  var {:pointer} Tmp_1285: int;
  var {:pointer} Tmp_1286: int;
  var {:pointer} Tmp_1287: int;
  var {:pointer} Tmp_1288: int;
  var {:pointer} Tmp_1289: int;
  var {:pointer} Tmp_1290: int;
  var {:pointer} Tmp_1291: int;
  var {:pointer} Tmp_1292: int;
  var {:pointer} packet_9: int;
  var {:scalar} status_36: int;
  var {:pointer} Tmp_1293: int;
  var {:pointer} Tmp_1294: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} Tmp_1296: int;
  var {:pointer} Tmp_1297: int;
  var {:pointer} DeviceObject_19: int;
  var {:pointer} Buffer: int;
  var {:scalar} Length_6: int;
  var {:scalar} AccessType: int;
  var {:pointer} Context_5: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 3040} packet_9 := __HAVOC_malloc(4);
    DeviceObject_19 := actual_DeviceObject_19;
    Buffer := actual_Buffer;
    Length_6 := actual_Length_6;
    AccessType := actual_AccessType;
    Context_5 := actual_Context_5;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    havoc deviceExtension_1;
    call {:si_unique_call 3041} AllocateIrpAndIrb(deviceExtension_1, packet_9);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_9] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1277;
    assume {:nonnull} Tmp_1277 != 0;
    assume Tmp_1277 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1286;
    assume {:nonnull} Tmp_1286 != 0;
    assume Tmp_1286 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1276;
    assume {:nonnull} Tmp_1276 != 0;
    assume Tmp_1276 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1294;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1287;
    assume {:nonnull} Tmp_1287 != 0;
    assume Tmp_1287 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1285;
    assume {:nonnull} Tmp_1285 != 0;
    assume Tmp_1285 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1288;
    assume {:nonnull} Tmp_1288 != 0;
    assume Tmp_1288 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1290;
    assume {:nonnull} Tmp_1290 != 0;
    assume Tmp_1290 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1278;
    assume {:nonnull} Tmp_1278 != 0;
    assume Tmp_1278 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1292;
    assume {:nonnull} Tmp_1292 != 0;
    assume Tmp_1292 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1296;
    assume {:nonnull} Tmp_1296 != 0;
    assume Tmp_1296 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1279;
    assume {:nonnull} Tmp_1279 != 0;
    assume Tmp_1279 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1289;
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1281;
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1280;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Buffer != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1291;
    assume {:nonnull} Tmp_1291 != 0;
    assume Tmp_1291 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    call {:si_unique_call 3042} boogieTmp := IoAllocateMdl(0, Length_6, 0, 0, 0);
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1284;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1284 != 0;
    assume Tmp_1284 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    call {:si_unique_call 3043} status_36 := Sbp2SendRequest#0(deviceExtension_1, Mem_T.P_IRBIRP[packet_9], 2);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_36 >= 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1282;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1282 != 0;
    assume Tmp_1282 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Buffer == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1293;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    call {:si_unique_call 3044} boogieTmp := sdv_MmGetMdlVirtualAddress(0);
    goto L48;

  L48:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    call {:si_unique_call 3045} DeAllocateIrpAndIrb(deviceExtension_1, Mem_T.P_IRBIRP[packet_9]);
    Tmp_1275 := status_36;
    goto L1;

  L1:
    return;

  anon15_Then:
    assume {:partition} Buffer != 0;
    goto L48;

  anon13_Then:
    assume {:partition} 0 > status_36;
    goto L48;

  anon12_Then:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    call {:si_unique_call 3046} DeAllocateIrpAndIrb(deviceExtension_1, Mem_T.P_IRBIRP[packet_9]);
    Tmp_1275 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:partition} Buffer == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1297;
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1283;
    assume {:nonnull} Tmp_1283 != 0;
    assume Tmp_1283 > 0;
    goto L43;

  anon11_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_9] == 0;
    Tmp_1275 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#1(actual_DeviceObject_19: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_5: int) returns (Tmp_1275: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#0(actual_PdoExtension_10: int) returns (Tmp_627: int)
{
  var {:pointer} Tmp_628: int;
  var {:pointer} nextListItem_1: int;
  var {:pointer} Tmp_629: int;
  var {:pointer} Tmp_630: int;
  var {:pointer} Tmp_631: int;
  var {:pointer} Tmp_632: int;
  var {:scalar} orbLock_2: int;
  var {:pointer} Tmp_633: int;
  var {:scalar} Tmp_634: int;
  var {:scalar} sdv_190: int;
  var {:pointer} Tmp_635: int;
  var {:scalar} Tmp_636: int;
  var {:pointer} Tmp_637: int;
  var {:pointer} sdv_191: int;
  var {:scalar} sdv_192: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_194: int;
  var {:pointer} sdv_195: int;
  var {:scalar} sdv_196: int;
  var {:pointer} Tmp_638: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_639: int;
  var {:scalar} sdv_197: int;
  var {:scalar} status_16: int;
  var {:pointer} packet_4: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:pointer} Tmp_642: int;
  var {:pointer} Tmp_643: int;
  var {:pointer} PdoExtension_10: int;

  anon0:
    call {:si_unique_call 3047} orbLock_2 := __HAVOC_malloc(12);
    call {:si_unique_call 3048} packet_4 := __HAVOC_malloc(4);
    PdoExtension_10 := actual_PdoExtension_10;
    call {:si_unique_call 3049} Tmp_635 := __HAVOC_malloc(4);
    call {:si_unique_call 3050} Tmp_637 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    Mem_T.P_IRBIRP[packet_4] := 0;
    call {:si_unique_call 3051} status_16 := Sbp2GetGenerationCount#0(PdoExtension_10);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_16 < 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_635;
    assume {:nonnull} Tmp_635 != 0;
    assume Tmp_635 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_629;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_634;
    call {:si_unique_call 3052} WPP_SF_qD(Tmp_634, 61, Tmp_629, PdoExtension_10, status_16);
    goto L95;

  L95:
    Tmp_627 := status_16;
    goto L1;

  L1:
    return;

  anon31_Then:
    goto L95;

  anon33_Then:
    goto L95;

  anon30_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon23_Then:
    assume {:partition} 0 <= status_16;
    call {:si_unique_call 3053} AllocateIrpAndIrb(PdoExtension_10, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_4] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_631;
    assume {:nonnull} Tmp_631 != 0;
    assume Tmp_631 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_630;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_642;
    assume {:nonnull} Tmp_642 != 0;
    assume Tmp_642 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume false;
    return;

  anon24_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_4] == 0;
    Tmp_627 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#0(actual_PdoExtension_10: int) returns (Tmp_627: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, sdv_irql_current, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_627 == 0 || Tmp_627 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#1(actual_PdoExtension_10: int) returns (Tmp_627: int)
{
  var {:pointer} Tmp_628: int;
  var {:pointer} nextListItem_1: int;
  var {:pointer} Tmp_629: int;
  var {:pointer} Tmp_630: int;
  var {:pointer} Tmp_631: int;
  var {:pointer} Tmp_632: int;
  var {:scalar} orbLock_2: int;
  var {:pointer} Tmp_633: int;
  var {:scalar} Tmp_634: int;
  var {:scalar} sdv_190: int;
  var {:pointer} Tmp_635: int;
  var {:scalar} Tmp_636: int;
  var {:pointer} Tmp_637: int;
  var {:pointer} sdv_191: int;
  var {:scalar} sdv_192: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_194: int;
  var {:pointer} sdv_195: int;
  var {:scalar} sdv_196: int;
  var {:pointer} Tmp_638: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_639: int;
  var {:scalar} sdv_197: int;
  var {:scalar} status_16: int;
  var {:pointer} packet_4: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:pointer} Tmp_642: int;
  var {:pointer} Tmp_643: int;
  var {:pointer} PdoExtension_10: int;
  var vslice_dummy_var_2986: int;
  var vslice_dummy_var_2987: int;

  anon0:
    call {:si_unique_call 3054} orbLock_2 := __HAVOC_malloc(12);
    call {:si_unique_call 3055} packet_4 := __HAVOC_malloc(4);
    PdoExtension_10 := actual_PdoExtension_10;
    call {:si_unique_call 3056} Tmp_635 := __HAVOC_malloc(4);
    call {:si_unique_call 3057} Tmp_637 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    Mem_T.P_IRBIRP[packet_4] := 0;
    call {:si_unique_call 3058} status_16 := Sbp2GetGenerationCount#1(PdoExtension_10);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_16 < 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_635;
    assume {:nonnull} Tmp_635 != 0;
    assume Tmp_635 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_629;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_634;
    call {:si_unique_call 3059} WPP_SF_qD(Tmp_634, 61, Tmp_629, PdoExtension_10, status_16);
    goto L95;

  L95:
    Tmp_627 := status_16;
    goto L1;

  L1:
    return;

  anon31_Then:
    goto L95;

  anon33_Then:
    goto L95;

  anon30_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon23_Then:
    assume {:partition} 0 <= status_16;
    call {:si_unique_call 3060} AllocateIrpAndIrb(PdoExtension_10, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_4] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_631;
    assume {:nonnull} Tmp_631 != 0;
    assume Tmp_631 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_630;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_642;
    assume {:nonnull} Tmp_642 != 0;
    assume Tmp_642 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 3061} status_16 := Sbp2SendRequest#0(PdoExtension_10, Mem_T.P_IRBIRP[packet_4], 2);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_16 < 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_637;
    assume {:nonnull} Tmp_637 != 0;
    assume Tmp_637 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    havoc Tmp_638;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_636;
    call {:si_unique_call 3062} WPP_SF_qD(Tmp_636, 62, Tmp_638, PdoExtension_10, status_16);
    goto L57;

  L57:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 3063} DeAllocateIrpAndIrb(PdoExtension_10, Mem_T.P_IRBIRP[packet_4]);
    Tmp_627 := status_16;
    goto L1;

  anon29_Then:
    goto L57;

  anon32_Then:
    goto L57;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L57;

  anon25_Then:
    assume {:partition} 0 <= status_16;
    call {:si_unique_call 3064} Tmp_628 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_628 != 0;
    assume Tmp_628 > 0;
    call {:si_unique_call 3065} sdv_KeAcquireSpinLock(0, Tmp_628);
    assume {:nonnull} Tmp_628 != 0;
    assume Tmp_628 > 0;
    havoc oldIrql_2;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_633;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_633 != 0;
    assume Tmp_633 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_633 != 0;
    assume Tmp_633 > 0;
    call {:si_unique_call 3066} sdv_KeReleaseSpinLock(0, oldIrql_2);
    call {:si_unique_call 3067} AcquireOrbListLock(PdoExtension_10, orbLock_2, 0);
    call {:si_unique_call 3068} sdv_194 := sdv_IsListEmpty(0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_194 != 0;
    goto L54;

  L54:
    call {:si_unique_call 3069} ReleaseOrbListLock(PdoExtension_10, orbLock_2, 0);
    goto L57;

  anon26_Then:
    assume {:partition} sdv_194 == 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    havoc vslice_dummy_var_2986;
    call {:si_unique_call 3070} sdv_195 := sdv_containing_record(vslice_dummy_var_2986, 0);
    nextListItem_1 := sdv_195;
    goto L62;

  L62:
    call {:si_unique_call 3071} nextListItem_1, Tmp_632, sdv_191, currentListItem, Tmp_639, Tmp_640, Tmp_641, Tmp_643 := Sbp2UpdateNodeInformation#1_loop_L62(nextListItem_1, Tmp_632, sdv_190, sdv_191, sdv_192, sdv_196, currentListItem, Tmp_639, sdv_197, Tmp_640, Tmp_641, Tmp_643, PdoExtension_10);
    goto L62_last;

  L62_last:
    currentListItem := nextListItem_1;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_640;
    assume {:nonnull} Tmp_640 != 0;
    assume Tmp_640 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_632;
    assume {:nonnull} Tmp_632 != 0;
    assume Tmp_632 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_639;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_643;
    assume {:nonnull} Tmp_643 != 0;
    assume Tmp_643 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_641;
    assume {:nonnull} Tmp_641 != 0;
    assume Tmp_641 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc nextListItem_1;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    havoc vslice_dummy_var_2987;
    call {:si_unique_call 3072} sdv_191 := sdv_containing_record(vslice_dummy_var_2987, 0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} currentListItem != sdv_191;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} currentListItem == sdv_191;
    goto L54;

  anon24_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_4] == 0;
    Tmp_627 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#1(actual_PdoExtension_10: int) returns (Tmp_627: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#0(actual_PdoExtension_11: int) returns (Tmp_644: int)
{
  var {:pointer} Tmp_645: int;
  var {:pointer} Tmp_646: int;
  var {:pointer} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} packet_5: int;
  var {:scalar} status_17: int;
  var {:pointer} PdoExtension_11: int;
  var vslice_dummy_var_467: int;

  anon0:
    call {:si_unique_call 3073} packet_5 := __HAVOC_malloc(4);
    PdoExtension_11 := actual_PdoExtension_11;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    Mem_T.P_IRBIRP[packet_5] := 0;
    status_17 := 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 3074} Tmp_645 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    call {:si_unique_call 3075} sdv_KeAcquireSpinLock(0, Tmp_645);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    havoc oldIrql_3;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    call {:si_unique_call 3076} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_644 := status_17;
    goto L1;

  L1:
    return;

  anon9_Then:
    call {:si_unique_call 3077} AllocateIrpAndIrb(PdoExtension_11, packet_5);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_5] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_5] != 0;
    assume Mem_T.P_IRBIRP[packet_5] > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_5] != 0;
    assume Mem_T.P_IRBIRP[packet_5] > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_647;
    assume {:nonnull} Tmp_647 != 0;
    assume Tmp_647 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    assume false;
    return;

  anon7_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_5] == 0;
    Tmp_644 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#0(actual_PdoExtension_11: int) returns (Tmp_644: int);
  modifies alloc, Mem_T.P_IRBIRP, sdv_irql_current, Mem_T.Irp__IRBIRP, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_644 == 0 || Tmp_644 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#1(actual_PdoExtension_11: int) returns (Tmp_644: int)
{
  var {:pointer} Tmp_645: int;
  var {:pointer} Tmp_646: int;
  var {:pointer} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} packet_5: int;
  var {:scalar} status_17: int;
  var {:pointer} PdoExtension_11: int;
  var vslice_dummy_var_468: int;

  anon0:
    call {:si_unique_call 3078} packet_5 := __HAVOC_malloc(4);
    PdoExtension_11 := actual_PdoExtension_11;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    Mem_T.P_IRBIRP[packet_5] := 0;
    status_17 := 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 3079} Tmp_645 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    call {:si_unique_call 3080} sdv_KeAcquireSpinLock(0, Tmp_645);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    havoc oldIrql_3;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    call {:si_unique_call 3081} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_644 := status_17;
    goto L1;

  L1:
    return;

  anon9_Then:
    call {:si_unique_call 3082} AllocateIrpAndIrb(PdoExtension_11, packet_5);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_5] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_5] != 0;
    assume Mem_T.P_IRBIRP[packet_5] > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_5] != 0;
    assume Mem_T.P_IRBIRP[packet_5] > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_647;
    assume {:nonnull} Tmp_647 != 0;
    assume Tmp_647 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    call {:si_unique_call 3083} status_17 := Sbp2SendRequest#0(PdoExtension_11, Mem_T.P_IRBIRP[packet_5], 2);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} status_17 >= 0;
    call {:si_unique_call 3084} Tmp_645 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    call {:si_unique_call 3085} sdv_KeAcquireSpinLock(0, Tmp_645);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    havoc oldIrql_3;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_5] != 0;
    assume Mem_T.P_IRBIRP[packet_5] > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_648;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    assume {:nonnull} Tmp_648 != 0;
    assume Tmp_648 > 0;
    call {:si_unique_call 3086} sdv_KeReleaseSpinLock(0, oldIrql_3);
    goto L39;

  L39:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    call {:si_unique_call 3087} DeAllocateIrpAndIrb(PdoExtension_11, Mem_T.P_IRBIRP[packet_5]);
    Tmp_644 := status_17;
    goto L1;

  anon8_Then:
    assume {:partition} 0 > status_17;
    call {:si_unique_call 3088} vslice_dummy_var_468 := IsDeviceGone#1(PdoExtension_11, status_17);
    goto L39;

  anon7_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_5] == 0;
    Tmp_644 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#1(actual_PdoExtension_11: int) returns (Tmp_644: int);
  modifies alloc, Mem_T.P_IRBIRP, sdv_irql_current, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IsDeviceGone"} IsDeviceGone#0(actual_PdoExtension_17: int, actual_status_35: int) returns (Tmp_1270: int)
{
  var {:scalar} bInvalidate: int;
  var {:pointer} PdoExtension_17: int;
  var {:scalar} status_35: int;

  anon0:
    PdoExtension_17 := actual_PdoExtension_17;
    status_35 := actual_status_35;
    bInvalidate := 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_35 == -1073741810;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L11;

  L11:
    assume false;
    call {:si_unique_call 3089} Sbp2StartQueue#0(PdoExtension_17);
    return;

  anon10_Then:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    bInvalidate := 1;
    goto L11;

  anon9_Then:
    goto L7;

  L7:
    Tmp_1270 := 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} status_35 != -1073741810;
    goto L7;
}



procedure {:origName "IsDeviceGone"} IsDeviceGone#0(actual_PdoExtension_17: int, actual_status_35: int) returns (Tmp_1270: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1270 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IsDeviceGone"} IsDeviceGone#1(actual_PdoExtension_17: int, actual_status_35: int) returns (Tmp_1270: int)
{
  var {:scalar} bInvalidate: int;
  var {:pointer} PdoExtension_17: int;
  var {:scalar} status_35: int;

  anon0:
    PdoExtension_17 := actual_PdoExtension_17;
    status_35 := actual_status_35;
    bInvalidate := 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_35 == -1073741810;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L11;

  L11:
    call {:si_unique_call 3090} CleanupOrbList#0(PdoExtension_17, status_35);
    call {:si_unique_call 3091} Sbp2StartQueue#1(PdoExtension_17);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} bInvalidate != 0;
    call {:si_unique_call 3092} IoInvalidateDeviceState(0);
    call {:si_unique_call 3093} Sbp2AddLog(PdoExtension_17, 1, -914985884, PdoExtension_17, status_35);
    goto L18;

  L18:
    Tmp_1270 := 1;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} bInvalidate == 0;
    goto L18;

  anon10_Then:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    bInvalidate := 1;
    goto L11;

  anon9_Then:
    goto L7;

  L7:
    Tmp_1270 := 0;
    goto L1;

  anon12_Then:
    assume {:partition} status_35 != -1073741810;
    goto L7;
}



procedure {:origName "IsDeviceGone"} IsDeviceGone#1(actual_PdoExtension_17: int, actual_status_35: int) returns (Tmp_1270: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, queuedWithoutMarking, locked, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1270 == 1 || Tmp_1270 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2StartQueue"} Sbp2StartQueue#0(actual_PdoExtension_16: int)
{
  var {:pointer} Tmp_1263: int;
  var {:pointer} sdv_414: int;
  var {:pointer} pIrp: int;
  var {:scalar} irql_2: int;
  var {:pointer} PdoExtension_16: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_2988: int;
  var vslice_dummy_var_2989: int;
  var vslice_dummy_var_2990: int;
  var vslice_dummy_var_2991: int;
  var vslice_dummy_var_2992: int;

  anon0:
    call {:si_unique_call 3094} vslice_dummy_var_469 := __HAVOC_malloc(4);
    PdoExtension_16 := actual_PdoExtension_16;
    call {:si_unique_call 3095} Tmp_1263 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    call {:si_unique_call 3096} sdv_KeAcquireSpinLock(0, Tmp_1263);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 3097} sdv_KeReleaseSpinLock(0, irql_2);
    assume false;
    return;

  anon7_Then:
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 3098} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3099} Tmp_1263 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    call {:si_unique_call 3100} sdv_KeRaiseIrql(2, Tmp_1263);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    call {:si_unique_call 3101} sdv_414 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_16), 0);
    pIrp := sdv_414;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} pIrp != 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_2988;
    call {:si_unique_call 3102} Sbp2StartIo#0(vslice_dummy_var_2988, pIrp);
    goto L37;

  L37:
    call {:si_unique_call 3103} sdv_KeLowerIrql(irql_2);
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} pIrp == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_2989;
    havoc vslice_dummy_var_2990;
    call {:si_unique_call 3104} Sbp2StartNextPacketByKey#0(vslice_dummy_var_2989, vslice_dummy_var_2990);
    goto L37;

  anon8_Then:
    call {:si_unique_call 3105} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3106} Tmp_1263 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    call {:si_unique_call 3107} sdv_KeRaiseIrql(2, Tmp_1263);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_2991;
    havoc vslice_dummy_var_2992;
    call {:si_unique_call 3108} Sbp2StartNextPacketByKey#0(vslice_dummy_var_2991, vslice_dummy_var_2992);
    goto L37;
}



procedure {:origName "Sbp2StartQueue"} Sbp2StartQueue#0(actual_PdoExtension_16: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2StartQueue"} Sbp2StartQueue#1(actual_PdoExtension_16: int)
{
  var {:pointer} Tmp_1263: int;
  var {:pointer} sdv_414: int;
  var {:pointer} pIrp: int;
  var {:scalar} irql_2: int;
  var {:pointer} PdoExtension_16: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_2993: int;
  var vslice_dummy_var_2994: int;
  var vslice_dummy_var_2995: int;
  var vslice_dummy_var_2996: int;
  var vslice_dummy_var_2997: int;

  anon0:
    call {:si_unique_call 3109} vslice_dummy_var_470 := __HAVOC_malloc(4);
    PdoExtension_16 := actual_PdoExtension_16;
    call {:si_unique_call 3110} Tmp_1263 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    call {:si_unique_call 3111} sdv_KeAcquireSpinLock(0, Tmp_1263);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 3112} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3113} vslice_dummy_var_471 := Sbp2RestartPendingPowerIrp#0(PdoExtension_16);
    goto L1;

  L1:
    return;

  anon7_Then:
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 3114} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3115} Tmp_1263 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    call {:si_unique_call 3116} sdv_KeRaiseIrql(2, Tmp_1263);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    call {:si_unique_call 3117} sdv_414 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_16), 0);
    pIrp := sdv_414;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} pIrp != 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_2993;
    call {:si_unique_call 3118} Sbp2StartIo#1(vslice_dummy_var_2993, pIrp);
    goto L37;

  L37:
    call {:si_unique_call 3119} sdv_KeLowerIrql(irql_2);
    goto L1;

  anon9_Then:
    assume {:partition} pIrp == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_2994;
    havoc vslice_dummy_var_2995;
    call {:si_unique_call 3120} Sbp2StartNextPacketByKey#1(vslice_dummy_var_2994, vslice_dummy_var_2995);
    goto L37;

  anon8_Then:
    call {:si_unique_call 3121} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3122} Tmp_1263 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    call {:si_unique_call 3123} sdv_KeRaiseIrql(2, Tmp_1263);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_2996;
    havoc vslice_dummy_var_2997;
    call {:si_unique_call 3124} Sbp2StartNextPacketByKey#1(vslice_dummy_var_2996, vslice_dummy_var_2997);
    goto L37;
}



procedure {:origName "Sbp2StartQueue"} Sbp2StartQueue#1(actual_PdoExtension_16: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#0(actual_PdoExtension_5: int) returns (Tmp_554: int)
{
  var {:scalar} Tmp_555: int;
  var {:pointer} Tmp_556: int;
  var {:pointer} Tmp_557: int;
  var {:pointer} Tmp_558: int;
  var {:pointer} Tmp_559: int;
  var {:pointer} Tmp_561: int;
  var {:scalar} Tmp_562: int;
  var {:pointer} packet_3: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_563: int;
  var {:pointer} Tmp_564: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_472: int;

  anon0:
    call {:si_unique_call 3125} packet_3 := __HAVOC_malloc(4);
    PdoExtension_5 := actual_PdoExtension_5;
    call {:si_unique_call 3126} Tmp_561 := __HAVOC_malloc(4);
    call {:si_unique_call 3127} Tmp_564 := __HAVOC_malloc(4);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    Mem_T.P_IRBIRP[packet_3] := 0;
    call {:si_unique_call 3128} AllocateIrpAndIrb(PdoExtension_5, packet_3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_3] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_556;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_559;
    assume {:nonnull} Tmp_559 != 0;
    assume Tmp_559 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_557;
    assume {:nonnull} Tmp_557 != 0;
    assume Tmp_557 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_561;
    assume {:nonnull} Tmp_561 != 0;
    assume Tmp_561 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_563;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_555;
    call {:si_unique_call 3129} WPP_SF_q(Tmp_555, 10, Tmp_563, PdoExtension_5);
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 3130} Sbp2SetManagementTimer(PdoExtension_5, 3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume false;
    return;

  anon20_Then:
    goto L18;

  anon25_Then:
    goto L18;

  anon24_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon19_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_3] == 0;
    Tmp_554 := -1073741670;
    goto L1;

  L1:
    return;
}



procedure {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#0(actual_PdoExtension_5: int) returns (Tmp_554: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} Tmp_554 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#1(actual_PdoExtension_5: int) returns (Tmp_554: int)
{
  var {:scalar} Tmp_555: int;
  var {:pointer} Tmp_556: int;
  var {:pointer} Tmp_557: int;
  var {:pointer} Tmp_558: int;
  var {:pointer} Tmp_559: int;
  var {:pointer} Tmp_561: int;
  var {:scalar} Tmp_562: int;
  var {:pointer} packet_3: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_563: int;
  var {:pointer} Tmp_564: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_473: int;

  anon0:
    call {:si_unique_call 3131} packet_3 := __HAVOC_malloc(4);
    PdoExtension_5 := actual_PdoExtension_5;
    call {:si_unique_call 3132} Tmp_561 := __HAVOC_malloc(4);
    call {:si_unique_call 3133} Tmp_564 := __HAVOC_malloc(4);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    Mem_T.P_IRBIRP[packet_3] := 0;
    call {:si_unique_call 3134} AllocateIrpAndIrb(PdoExtension_5, packet_3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_3] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_556;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_559;
    assume {:nonnull} Tmp_559 != 0;
    assume Tmp_559 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_557;
    assume {:nonnull} Tmp_557 != 0;
    assume Tmp_557 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_561;
    assume {:nonnull} Tmp_561 != 0;
    assume Tmp_561 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_563;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_555;
    call {:si_unique_call 3135} WPP_SF_q(Tmp_555, 10, Tmp_563, PdoExtension_5);
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 3136} Sbp2SetManagementTimer(PdoExtension_5, 3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    call {:si_unique_call 3137} status_13 := Sbp2SendRequest#0(PdoExtension_5, Mem_T.P_IRBIRP[packet_3], 2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_13 >= 0;
    goto L37;

  L37:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    call {:si_unique_call 3138} DeAllocateIrpAndIrb(PdoExtension_5, Mem_T.P_IRBIRP[packet_3]);
    Tmp_554 := status_13;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} 0 > status_13;
    call {:si_unique_call 3139} vslice_dummy_var_473 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_564;
    assume {:nonnull} Tmp_564 != 0;
    assume Tmp_564 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    havoc Tmp_558;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_562;
    call {:si_unique_call 3140} WPP_SF_qD(Tmp_562, 11, Tmp_558, PdoExtension_5, status_13);
    goto L46;

  L46:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 3141} Sbp2StartQueue#1(PdoExtension_5);
    goto L37;

  anon22_Then:
    goto L37;

  anon23_Then:
    goto L46;

  anon27_Then:
    goto L46;

  anon26_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon20_Then:
    goto L18;

  anon25_Then:
    goto L18;

  anon24_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon19_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_3] == 0;
    Tmp_554 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#1(actual_PdoExtension_5: int) returns (Tmp_554: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#0(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int)
{
  var {:scalar} flags: int;
  var {:pointer} Tmp_1823: int;
  var {:pointer} Tmp_1824: int;
  var {:pointer} Tmp_1825: int;
  var {:scalar} Tmp_1826: int;
  var {:pointer} Tmp_1828: int;
  var {:scalar} irql_3: int;
  var {:pointer} PdoExtension_22: int;
  var {:scalar} Status_1: int;
  var {:scalar} ErrorId_1: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_2998: int;

  anon0:
    call {:si_unique_call 3142} vslice_dummy_var_474 := __HAVOC_malloc(4);
    PdoExtension_22 := actual_PdoExtension_22;
    Status_1 := actual_Status_1;
    ErrorId_1 := actual_ErrorId_1;
    call {:si_unique_call 3143} Tmp_1828 := __HAVOC_malloc(4);
    call {:si_unique_call 3144} Tmp_1824 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1824 != 0;
    assume Tmp_1824 > 0;
    call {:si_unique_call 3145} sdv_KeAcquireSpinLock(0, Tmp_1824);
    assume {:nonnull} Tmp_1824 != 0;
    assume Tmp_1824 > 0;
    havoc irql_3;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc flags;
    call {:si_unique_call 3146} Sbp2AddLog(PdoExtension_22, 1, -764185530, Status_1, ErrorId_1);
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc Tmp_1823;
    assume {:nonnull} Tmp_1823 != 0;
    assume Tmp_1823 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L17;

  L17:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(flags, 8192) != 0;
    goto L22;

  L22:
    call {:si_unique_call 3147} sdv_KeReleaseSpinLock(0, irql_3);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1828;
    assume {:nonnull} Tmp_1828 != 0;
    assume Tmp_1828 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1825;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1826;
    call {:si_unique_call 3148} WPP_SF_qDD(Tmp_1826, 42, Tmp_1825, PdoExtension_22, flags, Status_1);
    goto L29;

  L29:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(flags, 2) != 0;
    goto L38;

  L38:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} BAND(flags, 2) != 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3149} vslice_dummy_var_476 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L39;

  L39:
    call {:si_unique_call 3150} Sbp2StartQueue#0(PdoExtension_22);
    call {:si_unique_call 3151} IoInvalidateDeviceState(0);
    return;

  anon21_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto L39;

  anon18_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Status_1 != -1073741810;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc vslice_dummy_var_2998;
    call {:si_unique_call 3152} Sbp2CreateRequestErrorLog(vslice_dummy_var_2998, 0, ErrorId_1, Status_1);
    goto L38;

  anon20_Then:
    assume {:partition} Status_1 == -1073741810;
    goto L38;

  anon19_Then:
    goto L29;

  anon24_Then:
    goto L29;

  anon17_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L29;

  anon23_Then:
    assume {:partition} BAND(flags, 8192) == 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3153} vslice_dummy_var_475 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L22;

  anon22_Then:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto L17;
}



procedure {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#0(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#1(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int)
{
  var {:scalar} flags: int;
  var {:pointer} Tmp_1823: int;
  var {:pointer} Tmp_1824: int;
  var {:pointer} Tmp_1825: int;
  var {:scalar} Tmp_1826: int;
  var {:pointer} Tmp_1828: int;
  var {:scalar} irql_3: int;
  var {:pointer} PdoExtension_22: int;
  var {:scalar} Status_1: int;
  var {:scalar} ErrorId_1: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_2999: int;

  anon0:
    call {:si_unique_call 3154} vslice_dummy_var_477 := __HAVOC_malloc(4);
    PdoExtension_22 := actual_PdoExtension_22;
    Status_1 := actual_Status_1;
    ErrorId_1 := actual_ErrorId_1;
    call {:si_unique_call 3155} Tmp_1828 := __HAVOC_malloc(4);
    call {:si_unique_call 3156} Tmp_1824 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1824 != 0;
    assume Tmp_1824 > 0;
    call {:si_unique_call 3157} sdv_KeAcquireSpinLock(0, Tmp_1824);
    assume {:nonnull} Tmp_1824 != 0;
    assume Tmp_1824 > 0;
    havoc irql_3;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc flags;
    call {:si_unique_call 3158} Sbp2AddLog(PdoExtension_22, 1, -764185530, Status_1, ErrorId_1);
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc Tmp_1823;
    assume {:nonnull} Tmp_1823 != 0;
    assume Tmp_1823 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L17;

  L17:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(flags, 8192) != 0;
    goto L22;

  L22:
    call {:si_unique_call 3159} sdv_KeReleaseSpinLock(0, irql_3);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1828;
    assume {:nonnull} Tmp_1828 != 0;
    assume Tmp_1828 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1825;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1826;
    call {:si_unique_call 3160} WPP_SF_qDD(Tmp_1826, 42, Tmp_1825, PdoExtension_22, flags, Status_1);
    goto L29;

  L29:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(flags, 2) != 0;
    goto L38;

  L38:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} BAND(flags, 2) != 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3161} vslice_dummy_var_479 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L39;

  L39:
    call {:si_unique_call 3162} Sbp2StartQueue#1(PdoExtension_22);
    call {:si_unique_call 3163} IoInvalidateDeviceState(0);
    return;

  anon21_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto L39;

  anon18_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Status_1 != -1073741810;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc vslice_dummy_var_2999;
    call {:si_unique_call 3164} Sbp2CreateRequestErrorLog(vslice_dummy_var_2999, 0, ErrorId_1, Status_1);
    goto L38;

  anon20_Then:
    assume {:partition} Status_1 == -1073741810;
    goto L38;

  anon19_Then:
    goto L29;

  anon24_Then:
    goto L29;

  anon17_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L29;

  anon23_Then:
    assume {:partition} BAND(flags, 8192) == 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3165} vslice_dummy_var_478 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L22;

  anon22_Then:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto L17;
}



procedure {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#1(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#0(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_407: int)
{
  var {:pointer} Tmp_408: int;
  var {:scalar} Tmp_409: int;
  var {:pointer} Tmp_410: int;
  var {:pointer} Tmp_411: int;
  var {:pointer} Tmp_413: int;
  var {:scalar} Tmp_414: int;
  var {:pointer} Tmp_415: int;
  var {:scalar} sdv_110: int;
  var {:scalar} sdv_113: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} Tmp_417: int;
  var {:pointer} Tmp_418: int;
  var {:pointer} Tmp_419: int;
  var {:scalar} sdv_114: int;
  var {:pointer} Tmp_420: int;
  var {:scalar} sdv_116: int;
  var {:scalar} Tmp_421: int;
  var {:pointer} Tmp_422: int;
  var {:scalar} sdv_117: int;
  var {:scalar} Tmp_423: int;
  var {:scalar} status_9: int;
  var {:scalar} Tmp_424: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} PdoExtension_3: int;
  var {:scalar} Generation_2: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_3000: int;
  var vslice_dummy_var_3001: int;

  anon0:
    PdoExtension_3 := actual_PdoExtension_3;
    Generation_2 := actual_Generation_2;
    call {:si_unique_call 3166} Tmp_411 := __HAVOC_malloc(4);
    call {:si_unique_call 3167} Tmp_413 := __HAVOC_malloc(4);
    call {:si_unique_call 3168} Tmp_415 := __HAVOC_malloc(4);
    call {:si_unique_call 3169} Tmp_416 := __HAVOC_malloc(4);
    call {:si_unique_call 3170} Tmp_418 := __HAVOC_malloc(4);
    status_9 := -1073741811;
    call {:si_unique_call 3171} vslice_dummy_var_481 := sdv_KeGetCurrentIrql();
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_416;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 3172} sdv_113 := GET_LUN(PdoExtension_3);
    havoc Tmp_422;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_421;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_3000;
    call {:si_unique_call 3173} WPP_SF_qdD(Tmp_421, 80, Tmp_422, PdoExtension_3, sdv_113, vslice_dummy_var_3000);
    goto L15;

  L15:
    call {:si_unique_call 3174} Sbp2AddLog(PdoExtension_3, 1, -767212738, 0, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_3001;
    call {:si_unique_call 3175} sdv_114 := Sbp2CleanDeviceExtension#0(vslice_dummy_var_3001, 0, 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_114 == 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_418;
    assume {:nonnull} Tmp_418 != 0;
    assume Tmp_418 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_417;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_423;
    call {:si_unique_call 3176} WPP_SF_q(Tmp_423, 81, Tmp_417, PdoExtension_3);
    goto L35;

  L35:
    call {:si_unique_call 3177} status_9 := Sbp2InitializeDeviceExtension#0(PdoExtension_3);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_9 < 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_413;
    assume {:nonnull} Tmp_413 != 0;
    assume Tmp_413 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_420;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_409;
    call {:si_unique_call 3178} WPP_SF_qD(Tmp_409, 82, Tmp_420, PdoExtension_3, status_9);
    goto L105;

  L105:
    Tmp_407 := status_9;
    goto L1;

  L1:
    return;

  anon47_Then:
    goto L105;

  anon53_Then:
    goto L105;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L105;

  anon40_Then:
    assume {:partition} 0 <= status_9;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc Tmp_408;
    assume {:nonnull} Tmp_408 != 0;
    assume Tmp_408 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 3179} Sbp2SetManagementTimer(PdoExtension_3, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3180} vslice_dummy_var_480 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_3));
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3181} status_9 := Sbp2AccessRegisterEx#0(PdoExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_3)), 256, Generation_2);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_411;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_419;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_424;
    call {:si_unique_call 3182} WPP_SF_qD(Tmp_424, 83, Tmp_419, PdoExtension_3, status_9);
    goto L75;

  L75:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_9 < 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_415;
    assume {:nonnull} Tmp_415 != 0;
    assume Tmp_415 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_410;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_414;
    call {:si_unique_call 3183} WPP_SF_qD(Tmp_414, 84, Tmp_410, PdoExtension_3, status_9);
    goto L91;

  L91:
    call {:si_unique_call 3184} Sbp2AddLog(PdoExtension_3, 1, -765107407, status_9, 0);
    call {:si_unique_call 3185} Sbp2ReconnectCompletion#0(PdoExtension_3, status_9);
    goto L86;

  L86:
    call {:si_unique_call 3186} Sbp2AddLog(PdoExtension_3, 1, -767212740, status_9, 0);
    Tmp_407 := status_9;
    goto L1;

  anon45_Then:
    goto L91;

  anon52_Then:
    goto L91;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L91;

  anon42_Then:
    assume {:partition} 0 <= status_9;
    goto L86;

  anon43_Then:
    goto L75;

  anon51_Then:
    goto L75;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L75;

  anon49_Then:
    goto L35;

  anon54_Then:
    goto L35;

  anon48_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L35;

  anon39_Then:
    assume {:partition} sdv_114 != 0;
    goto L35;

  anon38_Then:
    goto L15;

  anon50_Then:
    goto L15;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L15;
}



procedure {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#0(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_407: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_407 == 0 || Tmp_407 == -1073741632 || Tmp_407 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#1(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_407: int)
{
  var {:pointer} Tmp_408: int;
  var {:scalar} Tmp_409: int;
  var {:pointer} Tmp_410: int;
  var {:pointer} Tmp_411: int;
  var {:pointer} Tmp_413: int;
  var {:scalar} Tmp_414: int;
  var {:pointer} Tmp_415: int;
  var {:scalar} sdv_110: int;
  var {:scalar} sdv_113: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} Tmp_417: int;
  var {:pointer} Tmp_418: int;
  var {:pointer} Tmp_419: int;
  var {:scalar} sdv_114: int;
  var {:pointer} Tmp_420: int;
  var {:scalar} sdv_116: int;
  var {:scalar} Tmp_421: int;
  var {:pointer} Tmp_422: int;
  var {:scalar} sdv_117: int;
  var {:scalar} Tmp_423: int;
  var {:scalar} status_9: int;
  var {:scalar} Tmp_424: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} PdoExtension_3: int;
  var {:scalar} Generation_2: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_3002: int;
  var vslice_dummy_var_3003: int;

  anon0:
    PdoExtension_3 := actual_PdoExtension_3;
    Generation_2 := actual_Generation_2;
    call {:si_unique_call 3187} Tmp_411 := __HAVOC_malloc(4);
    call {:si_unique_call 3188} Tmp_413 := __HAVOC_malloc(4);
    call {:si_unique_call 3189} Tmp_415 := __HAVOC_malloc(4);
    call {:si_unique_call 3190} Tmp_416 := __HAVOC_malloc(4);
    call {:si_unique_call 3191} Tmp_418 := __HAVOC_malloc(4);
    status_9 := -1073741811;
    call {:si_unique_call 3192} vslice_dummy_var_483 := sdv_KeGetCurrentIrql();
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_416;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 3193} sdv_113 := GET_LUN(PdoExtension_3);
    havoc Tmp_422;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_421;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_3002;
    call {:si_unique_call 3194} WPP_SF_qdD(Tmp_421, 80, Tmp_422, PdoExtension_3, sdv_113, vslice_dummy_var_3002);
    goto L15;

  L15:
    call {:si_unique_call 3195} Sbp2AddLog(PdoExtension_3, 1, -767212738, 0, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_3003;
    call {:si_unique_call 3196} sdv_114 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_3003, 0, 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_114 == 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_418;
    assume {:nonnull} Tmp_418 != 0;
    assume Tmp_418 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_417;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_423;
    call {:si_unique_call 3197} WPP_SF_q(Tmp_423, 81, Tmp_417, PdoExtension_3);
    goto L35;

  L35:
    call {:si_unique_call 3198} status_9 := Sbp2InitializeDeviceExtension#1(PdoExtension_3);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_9 < 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_413;
    assume {:nonnull} Tmp_413 != 0;
    assume Tmp_413 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_420;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_409;
    call {:si_unique_call 3199} WPP_SF_qD(Tmp_409, 82, Tmp_420, PdoExtension_3, status_9);
    goto L105;

  L105:
    Tmp_407 := status_9;
    goto L1;

  L1:
    return;

  anon47_Then:
    goto L105;

  anon53_Then:
    goto L105;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L105;

  anon40_Then:
    assume {:partition} 0 <= status_9;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc Tmp_408;
    assume {:nonnull} Tmp_408 != 0;
    assume Tmp_408 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 3200} Sbp2SetManagementTimer(PdoExtension_3, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3201} vslice_dummy_var_482 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_3));
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3202} status_9 := Sbp2AccessRegisterEx#1(PdoExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_3)), 256, Generation_2);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_411;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_419;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_424;
    call {:si_unique_call 3203} WPP_SF_qD(Tmp_424, 83, Tmp_419, PdoExtension_3, status_9);
    goto L75;

  L75:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_9 < 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_415;
    assume {:nonnull} Tmp_415 != 0;
    assume Tmp_415 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_410;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_414;
    call {:si_unique_call 3204} WPP_SF_qD(Tmp_414, 84, Tmp_410, PdoExtension_3, status_9);
    goto L91;

  L91:
    call {:si_unique_call 3205} Sbp2AddLog(PdoExtension_3, 1, -765107407, status_9, 0);
    call {:si_unique_call 3206} Sbp2ReconnectCompletion#1(PdoExtension_3, status_9);
    goto L86;

  L86:
    call {:si_unique_call 3207} Sbp2AddLog(PdoExtension_3, 1, -767212740, status_9, 0);
    Tmp_407 := status_9;
    goto L1;

  anon45_Then:
    goto L91;

  anon52_Then:
    goto L91;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L91;

  anon42_Then:
    assume {:partition} 0 <= status_9;
    goto L86;

  anon43_Then:
    goto L75;

  anon51_Then:
    goto L75;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L75;

  anon49_Then:
    goto L35;

  anon54_Then:
    goto L35;

  anon48_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L35;

  anon39_Then:
    assume {:partition} sdv_114 != 0;
    goto L35;

  anon38_Then:
    goto L15;

  anon50_Then:
    goto L15;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L15;
}



procedure {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#1(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_407: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#0(actual_PdoExtension_4: int, actual_NtStatus_1: int)
{
  var {:scalar} Tmp_546: int;
  var {:pointer} Tmp_547: int;
  var {:pointer} Tmp_548: int;
  var {:pointer} Tmp_549: int;
  var {:scalar} Tmp_550: int;
  var {:scalar} sdv_154: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_552: int;
  var {:scalar} irql_1: int;
  var {:pointer} Tmp_553: int;
  var {:pointer} PdoExtension_4: int;
  var {:scalar} NtStatus_1: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_3004: int;
  var vslice_dummy_var_3005: int;

  anon0:
    call {:si_unique_call 3208} vslice_dummy_var_484 := __HAVOC_malloc(4);
    PdoExtension_4 := actual_PdoExtension_4;
    NtStatus_1 := actual_NtStatus_1;
    call {:si_unique_call 3209} Tmp_549 := __HAVOC_malloc(4);
    call {:si_unique_call 3210} Tmp_552 := __HAVOC_malloc(4);
    call {:si_unique_call 3211} Tmp_547 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    call {:si_unique_call 3212} sdv_KeAcquireSpinLock(0, Tmp_547);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    havoc irql_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 3213} Sbp2AddLog(PdoExtension_4, 1, -765107396, NtStatus_1, 0);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_552;
    assume {:nonnull} Tmp_552 != 0;
    assume Tmp_552 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    havoc Tmp_548;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_546;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_3004;
    call {:si_unique_call 3214} WPP_SF_qDD(Tmp_546, 78, Tmp_548, PdoExtension_4, NtStatus_1, vslice_dummy_var_3004);
    goto L18;

  L18:
    call {:si_unique_call 3215} vslice_dummy_var_485 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} NtStatus_1 < 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_549;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_553;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_550;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_3005;
    call {:si_unique_call 3216} WPP_SF_qDD(Tmp_550, 79, Tmp_553, PdoExtension_4, NtStatus_1, vslice_dummy_var_3005);
    goto L48;

  L48:
    call {:si_unique_call 3217} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3218} sdv_154 := IsDeviceGone#0(PdoExtension_4, NtStatus_1);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_154 == 0;
    call {:si_unique_call 3219} Tmp_547 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    call {:si_unique_call 3220} sdv_KeAcquireSpinLock(0, Tmp_547);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    havoc irql_1;
    call {:si_unique_call 3221} status_12 := Sbp2QueueManagementWorkItem(PdoExtension_4, 2, -1);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_12 >= 0;
    goto L74;

  L74:
    call {:si_unique_call 3222} sdv_KeReleaseSpinLock(0, irql_1);
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3223} vslice_dummy_var_486 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_4), 0, 0);
    goto L1;

  L1:
    return;

  anon27_Then:
    assume {:partition} 0 > status_12;
    call {:si_unique_call 3224} Sbp2SetDeferLoginTimer(PdoExtension_4);
    goto L74;

  anon26_Then:
    assume {:partition} sdv_154 != 0;
    goto L43;

  anon25_Then:
    goto L48;

  anon30_Then:
    goto L48;

  anon24_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L48;

  anon29_Then:
    assume {:partition} 0 <= NtStatus_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3225} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3226} Sbp2StartQueue#0(PdoExtension_4);
    goto L43;

  anon23_Then:
    goto L18;

  anon28_Then:
    goto L18;

  anon22_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon21_Then:
    call {:si_unique_call 3227} sdv_KeReleaseSpinLock(0, irql_1);
    goto L1;
}



procedure {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#0(actual_PdoExtension_4: int, actual_NtStatus_1: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#1(actual_PdoExtension_4: int, actual_NtStatus_1: int)
{
  var {:scalar} Tmp_546: int;
  var {:pointer} Tmp_547: int;
  var {:pointer} Tmp_548: int;
  var {:pointer} Tmp_549: int;
  var {:scalar} Tmp_550: int;
  var {:scalar} sdv_154: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_552: int;
  var {:scalar} irql_1: int;
  var {:pointer} Tmp_553: int;
  var {:pointer} PdoExtension_4: int;
  var {:scalar} NtStatus_1: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_3006: int;
  var vslice_dummy_var_3007: int;

  anon0:
    call {:si_unique_call 3228} vslice_dummy_var_487 := __HAVOC_malloc(4);
    PdoExtension_4 := actual_PdoExtension_4;
    NtStatus_1 := actual_NtStatus_1;
    call {:si_unique_call 3229} Tmp_549 := __HAVOC_malloc(4);
    call {:si_unique_call 3230} Tmp_552 := __HAVOC_malloc(4);
    call {:si_unique_call 3231} Tmp_547 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    call {:si_unique_call 3232} sdv_KeAcquireSpinLock(0, Tmp_547);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    havoc irql_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 3233} Sbp2AddLog(PdoExtension_4, 1, -765107396, NtStatus_1, 0);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_552;
    assume {:nonnull} Tmp_552 != 0;
    assume Tmp_552 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    havoc Tmp_548;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_546;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_3006;
    call {:si_unique_call 3234} WPP_SF_qDD(Tmp_546, 78, Tmp_548, PdoExtension_4, NtStatus_1, vslice_dummy_var_3006);
    goto L18;

  L18:
    call {:si_unique_call 3235} vslice_dummy_var_488 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} NtStatus_1 < 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_549;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_553;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_550;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_3007;
    call {:si_unique_call 3236} WPP_SF_qDD(Tmp_550, 79, Tmp_553, PdoExtension_4, NtStatus_1, vslice_dummy_var_3007);
    goto L48;

  L48:
    call {:si_unique_call 3237} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3238} sdv_154 := IsDeviceGone#1(PdoExtension_4, NtStatus_1);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_154 == 0;
    call {:si_unique_call 3239} Tmp_547 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    call {:si_unique_call 3240} sdv_KeAcquireSpinLock(0, Tmp_547);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    havoc irql_1;
    call {:si_unique_call 3241} status_12 := Sbp2QueueManagementWorkItem(PdoExtension_4, 2, -1);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_12 >= 0;
    goto L74;

  L74:
    call {:si_unique_call 3242} sdv_KeReleaseSpinLock(0, irql_1);
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3243} vslice_dummy_var_489 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_4), 0, 0);
    goto L1;

  L1:
    return;

  anon27_Then:
    assume {:partition} 0 > status_12;
    call {:si_unique_call 3244} Sbp2SetDeferLoginTimer(PdoExtension_4);
    goto L74;

  anon26_Then:
    assume {:partition} sdv_154 != 0;
    goto L43;

  anon25_Then:
    goto L48;

  anon30_Then:
    goto L48;

  anon24_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L48;

  anon29_Then:
    assume {:partition} 0 <= NtStatus_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3245} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3246} Sbp2StartQueue#1(PdoExtension_4);
    goto L43;

  anon23_Then:
    goto L18;

  anon28_Then:
    goto L18;

  anon22_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon21_Then:
    call {:si_unique_call 3247} sdv_KeReleaseSpinLock(0, irql_1);
    goto L1;
}



procedure {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#1(actual_PdoExtension_4: int, actual_NtStatus_1: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket#0(actual_DeviceObject_22: int, actual_Irp_14: int, actual_Key_1: int)
{
  var {:pointer} irpStack_8: int;
  var {:scalar} inserted_1: int;
  var {:pointer} nextEntry_2: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} queueEntry2_1: int;
  var {:pointer} sdv_465: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} Tmp_1410: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_22: int;
  var {:pointer} Irp_14: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;

  anon0:
    call {:si_unique_call 3248} vslice_dummy_var_490 := __HAVOC_malloc(4);
    DeviceObject_22 := actual_DeviceObject_22;
    Irp_14 := actual_Irp_14;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_22 != 0;
    assume DeviceObject_22 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_22);
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14)));
    call {:si_unique_call 3249} Tmp_1410 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1410 != 0;
    assume Tmp_1410 > 0;
    call {:si_unique_call 3250} sdv_KeRaiseIrql(2, Tmp_1410);
    assume {:nonnull} Tmp_1410 != 0;
    assume Tmp_1410 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 3251} irpStack_8 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} irpStack_8 != 0;
    assume irpStack_8 > 0;
    call {:si_unique_call 3252} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L31;

  L31:
    call {:si_unique_call 3253} nextEntry_2, queueEntry2_1, sdv_465 := Sbp2StartPacket#0_loop_L31(nextEntry_2, queueEntry2_1, sdv_465, Key_1);
    goto L31_last;

  L31_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 3254} sdv_465 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_465;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    assume false;
    return;

  anon18_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3255} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  L43:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3256} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} inserted_1 != 0;
    goto L51;

  L51:
    call {:si_unique_call 3257} sdv_KeLowerIrql(oldIrql_4);
    return;

  anon16_Then:
    assume {:partition} inserted_1 == 0;
    call {:si_unique_call 3258} Sbp2StartIo#0(DeviceObject_22, Irp_14);
    goto L51;

  anon15_Then:
    goto L32;

  anon17_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;

  anon13_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 3259} vslice_dummy_var_491 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  anon14_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket#0(actual_DeviceObject_22: int, actual_Irp_14: int, actual_Key_1: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket#1(actual_DeviceObject_22: int, actual_Irp_14: int, actual_Key_1: int)
{
  var {:pointer} irpStack_8: int;
  var {:scalar} inserted_1: int;
  var {:pointer} nextEntry_2: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} queueEntry2_1: int;
  var {:pointer} sdv_465: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} Tmp_1410: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_22: int;
  var {:pointer} Irp_14: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;

  anon0:
    call {:si_unique_call 3260} vslice_dummy_var_492 := __HAVOC_malloc(4);
    DeviceObject_22 := actual_DeviceObject_22;
    Irp_14 := actual_Irp_14;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_22 != 0;
    assume DeviceObject_22 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_22);
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14)));
    call {:si_unique_call 3261} Tmp_1410 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1410 != 0;
    assume Tmp_1410 > 0;
    call {:si_unique_call 3262} sdv_KeRaiseIrql(2, Tmp_1410);
    assume {:nonnull} Tmp_1410 != 0;
    assume Tmp_1410 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 3263} irpStack_8 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} irpStack_8 != 0;
    assume irpStack_8 > 0;
    call {:si_unique_call 3264} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L31;

  L31:
    call {:si_unique_call 3265} nextEntry_2, queueEntry2_1, sdv_465 := Sbp2StartPacket#1_loop_L31(nextEntry_2, queueEntry2_1, sdv_465, Key_1);
    goto L31_last;

  L31_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 3266} sdv_465 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_465;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    assume false;
    return;

  anon18_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3267} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  L43:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3268} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} inserted_1 != 0;
    goto L51;

  L51:
    call {:si_unique_call 3269} sdv_KeLowerIrql(oldIrql_4);
    return;

  anon16_Then:
    assume {:partition} inserted_1 == 0;
    call {:si_unique_call 3270} Sbp2StartIo#1(DeviceObject_22, Irp_14);
    goto L51;

  anon15_Then:
    goto L32;

  anon17_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;

  anon13_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 3271} vslice_dummy_var_493 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  anon14_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket#1(actual_DeviceObject_22: int, actual_Irp_14: int, actual_Key_1: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#0(actual_NotificationInfo_1: int) returns (Tmp_112: int)
{
  var {:pointer} Tmp_113: int;
  var {:pointer} Tmp_114: int;
  var {:pointer} Tmp_115: int;
  var {:scalar} Tmp_116: int;
  var {:pointer} deviceObject_1: int;
  var {:pointer} Tmp_117: int;
  var {:pointer} Tmp_118: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} Tmp_119: int;
  var {:pointer} Tmp_121: int;
  var {:pointer} Tmp_122: int;
  var {:pointer} Tmp_123: int;
  var {:scalar} sdv_23: int;
  var {:scalar} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_126: int;
  var {:scalar} sdv_24: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:scalar} sdv_26: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} sdv_27: int;
  var {:scalar} Tmp_130: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} cIrql: int;
  var {:pointer} Tmp_132: int;
  var {:pointer} Tmp_133: int;
  var {:pointer} Tmp_134: int;
  var {:scalar} sdv_30: int;
  var {:scalar} status_3: int;
  var {:pointer} Tmp_135: int;
  var {:scalar} Tmp_136: int;
  var {:pointer} Tmp_137: int;
  var {:pointer} Tmp_138: int;
  var {:pointer} Tmp_139: int;
  var {:pointer} Tmp_140: int;
  var {:scalar} Tmp_141: int;
  var {:scalar} Tmp_142: int;
  var {:pointer} NotificationInfo_1: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_3008: int;
  var vslice_dummy_var_3009: int;
  var vslice_dummy_var_3010: int;

  anon0:
    NotificationInfo_1 := actual_NotificationInfo_1;
    call {:si_unique_call 3272} Tmp_114 := __HAVOC_malloc(4);
    call {:si_unique_call 3273} vslice_dummy_var_496 := __HAVOC_malloc(352);
    call {:si_unique_call 3274} Tmp_122 := __HAVOC_malloc(4);
    call {:si_unique_call 3275} Tmp_128 := __HAVOC_malloc(352);
    call {:si_unique_call 3276} Tmp_131 := __HAVOC_malloc(4);
    call {:si_unique_call 3277} Tmp_134 := __HAVOC_malloc(4);
    call {:si_unique_call 3278} Tmp_138 := __HAVOC_malloc(352);
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    havoc Tmp_129;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    havoc deviceObject_1;
    assume {:nonnull} deviceObject_1 != 0;
    assume deviceObject_1 > 0;
    havoc pdoExtension_2;
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_132 != 0;
    assume Tmp_132 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3279} status_3 := CheckStatusResponseValue(ManagementOrbStatusBlock__DEVICE_EXTENSION(pdoExtension_2));
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_115;
    assume {:nonnull} Tmp_115 != 0;
    assume Tmp_115 > 0;
    havoc Tmp_136;
    call {:si_unique_call 3280} Sbp2AddLog(pdoExtension_2, 1, -850965188, status_3, Tmp_136);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L106;

  L106:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_134;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    havoc Tmp_116;
    havoc Tmp_113;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_130;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_3008;
    call {:si_unique_call 3281} WPP_SF_qdDD(Tmp_130, 112, Tmp_113, pdoExtension_2, Tmp_116, status_3, vslice_dummy_var_3008);
    goto L107;

  L107:
    call {:si_unique_call 3282} Sbp2AddLog(pdoExtension_2, 1, -850965199, status_3, 0);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3283} vslice_dummy_var_495 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  L54:
    Tmp_112 := 0;
    goto L1;

  L1:
    return;

  anon51_Then:
    goto L107;

  anon63_Then:
    goto L107;

  anon50_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon52_Then:
    call {:si_unique_call 3284} Tmp_135 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    call {:si_unique_call 3285} sdv_KeAcquireSpinLock(0, Tmp_135);
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    havoc cIrql;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3286} sdv_KeReleaseSpinLock(0, cIrql);
    goto L106;

  anon53_Then:
    call {:si_unique_call 3287} Sbp2ReconnectCompletion#0(pdoExtension_2, status_3);
    goto L54;

  anon54_Then:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_122;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_140;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_124;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_3009;
    call {:si_unique_call 3288} WPP_SF_qDD(Tmp_124, 110, Tmp_140, pdoExtension_2, status_3, vslice_dummy_var_3009);
    goto L56;

  L56:
    call {:si_unique_call 3289} Sbp2AddLog(pdoExtension_2, 1, -783530180, status_3, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_126;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_117;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_137;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_133;
    assume {:nonnull} Tmp_133 != 0;
    assume Tmp_133 > 0;
    havoc Tmp_138;
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_139;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_127;
    assume {:nonnull} Tmp_127 != 0;
    assume Tmp_127 > 0;
    havoc Tmp_128;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_114;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_119;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_142;
    call {:si_unique_call 3290} WPP_SF_q(Tmp_142, 111, Tmp_119, pdoExtension_2);
    goto L67;

  L67:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3291} vslice_dummy_var_494 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  anon47_Then:
    goto L67;

  anon62_Then:
    goto L67;

  anon61_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon60_Then:
    goto L67;

  anon59_Then:
    goto L67;

  anon46_Then:
    assume {:partition} 0 > status_3;
    goto L67;

  anon45_Then:
    goto L56;

  anon58_Then:
    goto L56;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon56_Then:
    call {:si_unique_call 3292} Sbp2LoginCompletion#0(pdoExtension_2, status_3);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_131;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_123;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_141;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_3010;
    call {:si_unique_call 3293} WPP_SF_qDD(Tmp_141, 109, Tmp_123, pdoExtension_2, status_3, vslice_dummy_var_3010);
    goto L54;

  anon49_Then:
    goto L54;

  anon57_Then:
    goto L54;

  anon48_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon55_Then:
    Tmp_112 := 6;
    goto L1;

  anon43_Then:
    Tmp_112 := 0;
    goto L1;
}



procedure {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#0(actual_NotificationInfo_1: int) returns (Tmp_112: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_112 == 0 || Tmp_112 == 6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#1(actual_NotificationInfo_1: int) returns (Tmp_112: int)
{
  var {:pointer} Tmp_113: int;
  var {:pointer} Tmp_114: int;
  var {:pointer} Tmp_115: int;
  var {:scalar} Tmp_116: int;
  var {:pointer} deviceObject_1: int;
  var {:pointer} Tmp_117: int;
  var {:pointer} Tmp_118: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} Tmp_119: int;
  var {:pointer} Tmp_121: int;
  var {:pointer} Tmp_122: int;
  var {:pointer} Tmp_123: int;
  var {:scalar} sdv_23: int;
  var {:scalar} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_126: int;
  var {:scalar} sdv_24: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:scalar} sdv_26: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} sdv_27: int;
  var {:scalar} Tmp_130: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} cIrql: int;
  var {:pointer} Tmp_132: int;
  var {:pointer} Tmp_133: int;
  var {:pointer} Tmp_134: int;
  var {:scalar} sdv_30: int;
  var {:scalar} status_3: int;
  var {:pointer} Tmp_135: int;
  var {:scalar} Tmp_136: int;
  var {:pointer} Tmp_137: int;
  var {:pointer} Tmp_138: int;
  var {:pointer} Tmp_139: int;
  var {:pointer} Tmp_140: int;
  var {:scalar} Tmp_141: int;
  var {:scalar} Tmp_142: int;
  var {:pointer} NotificationInfo_1: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_3011: int;
  var vslice_dummy_var_3012: int;
  var vslice_dummy_var_3013: int;

  anon0:
    NotificationInfo_1 := actual_NotificationInfo_1;
    call {:si_unique_call 3294} Tmp_114 := __HAVOC_malloc(4);
    call {:si_unique_call 3295} vslice_dummy_var_499 := __HAVOC_malloc(352);
    call {:si_unique_call 3296} Tmp_122 := __HAVOC_malloc(4);
    call {:si_unique_call 3297} Tmp_128 := __HAVOC_malloc(352);
    call {:si_unique_call 3298} Tmp_131 := __HAVOC_malloc(4);
    call {:si_unique_call 3299} Tmp_134 := __HAVOC_malloc(4);
    call {:si_unique_call 3300} Tmp_138 := __HAVOC_malloc(352);
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    havoc Tmp_129;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    havoc deviceObject_1;
    assume {:nonnull} deviceObject_1 != 0;
    assume deviceObject_1 > 0;
    havoc pdoExtension_2;
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_132 != 0;
    assume Tmp_132 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3301} status_3 := CheckStatusResponseValue(ManagementOrbStatusBlock__DEVICE_EXTENSION(pdoExtension_2));
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_115;
    assume {:nonnull} Tmp_115 != 0;
    assume Tmp_115 > 0;
    havoc Tmp_136;
    call {:si_unique_call 3302} Sbp2AddLog(pdoExtension_2, 1, -850965188, status_3, Tmp_136);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L106;

  L106:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_134;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    havoc Tmp_116;
    havoc Tmp_113;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_130;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_3011;
    call {:si_unique_call 3303} WPP_SF_qdDD(Tmp_130, 112, Tmp_113, pdoExtension_2, Tmp_116, status_3, vslice_dummy_var_3011);
    goto L107;

  L107:
    call {:si_unique_call 3304} Sbp2AddLog(pdoExtension_2, 1, -850965199, status_3, 0);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3305} vslice_dummy_var_498 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  L54:
    Tmp_112 := 0;
    goto L1;

  L1:
    return;

  anon51_Then:
    goto L107;

  anon63_Then:
    goto L107;

  anon50_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon52_Then:
    call {:si_unique_call 3306} Tmp_135 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    call {:si_unique_call 3307} sdv_KeAcquireSpinLock(0, Tmp_135);
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    havoc cIrql;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3308} sdv_KeReleaseSpinLock(0, cIrql);
    goto L106;

  anon53_Then:
    call {:si_unique_call 3309} Sbp2ReconnectCompletion#1(pdoExtension_2, status_3);
    goto L54;

  anon54_Then:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_122;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_140;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_124;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_3012;
    call {:si_unique_call 3310} WPP_SF_qDD(Tmp_124, 110, Tmp_140, pdoExtension_2, status_3, vslice_dummy_var_3012);
    goto L56;

  L56:
    call {:si_unique_call 3311} Sbp2AddLog(pdoExtension_2, 1, -783530180, status_3, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_126;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_117;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_137;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_133;
    assume {:nonnull} Tmp_133 != 0;
    assume Tmp_133 > 0;
    havoc Tmp_138;
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_139;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_127;
    assume {:nonnull} Tmp_127 != 0;
    assume Tmp_127 > 0;
    havoc Tmp_128;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_114;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_119;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_142;
    call {:si_unique_call 3312} WPP_SF_q(Tmp_142, 111, Tmp_119, pdoExtension_2);
    goto L67;

  L67:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3313} vslice_dummy_var_497 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  anon47_Then:
    goto L67;

  anon62_Then:
    goto L67;

  anon61_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon60_Then:
    goto L67;

  anon59_Then:
    goto L67;

  anon46_Then:
    assume {:partition} 0 > status_3;
    goto L67;

  anon45_Then:
    goto L56;

  anon58_Then:
    goto L56;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon56_Then:
    call {:si_unique_call 3314} Sbp2LoginCompletion#1(pdoExtension_2, status_3);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_131;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_123;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_141;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_3013;
    call {:si_unique_call 3315} WPP_SF_qDD(Tmp_141, 109, Tmp_123, pdoExtension_2, status_3, vslice_dummy_var_3013);
    goto L54;

  anon49_Then:
    goto L54;

  anon57_Then:
    goto L54;

  anon48_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon55_Then:
    Tmp_112 := 6;
    goto L1;

  anon43_Then:
    Tmp_112 := 0;
    goto L1;
}



procedure {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#1(actual_NotificationInfo_1: int) returns (Tmp_112: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_112 == 0 || Tmp_112 == 6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#0(actual_PdoExtension: int, actual_NtStatus: int)
{
  var {:pointer} Tmp_143: int;
  var {:scalar} Tmp_144: int;
  var {:pointer} Tmp_145: int;
  var {:pointer} Tmp_146: int;
  var {:pointer} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:scalar} Tmp_156: int;
  var {:scalar} Tmp_157: int;
  var {:pointer} Tmp_158: int;
  var {:pointer} Tmp_159: int;
  var {:pointer} Tmp_160: int;
  var {:pointer} Tmp_161: int;
  var {:scalar} sdv_34: int;
  var {:scalar} sdv_35: int;
  var {:scalar} sdv_36: int;
  var {:scalar} Tmp_162: int;
  var {:scalar} irql: int;
  var {:pointer} Tmp_164: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} NtStatus: int;
  var vslice_dummy_var_500: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_3014: int;
  var vslice_dummy_var_3015: int;
  var vslice_dummy_var_3016: int;
  var vslice_dummy_var_3017: int;
  var vslice_dummy_var_3018: int;

  anon0:
    call {:si_unique_call 3316} vslice_dummy_var_500 := __HAVOC_malloc(4);
    PdoExtension := actual_PdoExtension;
    NtStatus := actual_NtStatus;
    call {:si_unique_call 3317} Tmp_148 := __HAVOC_malloc(4);
    call {:si_unique_call 3318} Tmp_153 := __HAVOC_malloc(4);
    call {:si_unique_call 3319} Tmp_158 := __HAVOC_malloc(4);
    call {:si_unique_call 3320} Tmp_160 := __HAVOC_malloc(4);
    call {:si_unique_call 3321} Tmp_164 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    call {:si_unique_call 3322} sdv_KeAcquireSpinLock(0, Tmp_164);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    havoc irql;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_148;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    havoc Tmp_147;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_157;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3014;
    call {:si_unique_call 3323} WPP_SF_qDD(Tmp_157, 64, Tmp_147, PdoExtension, NtStatus, vslice_dummy_var_3014);
    goto L107;

  L107:
    call {:si_unique_call 3324} sdv_KeReleaseSpinLock(0, irql);
    goto L1;

  L1:
    return;

  anon54_Then:
    goto L107;

  anon60_Then:
    goto L107;

  anon53_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon41_Then:
    call {:si_unique_call 3325} Sbp2AddLog(PdoExtension, 1, -867219652, NtStatus, 0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_158;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_161;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_162;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3015;
    call {:si_unique_call 3326} WPP_SF_qDD(Tmp_162, 65, Tmp_161, PdoExtension, vslice_dummy_var_3015, NtStatus);
    goto L20;

  L20:
    call {:si_unique_call 3327} vslice_dummy_var_501 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} NtStatus == 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L77;

  L77:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_150;
    assume {:nonnull} Tmp_150 != 0;
    assume Tmp_150 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_155;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_143;
    assume {:nonnull} Tmp_143 != 0;
    assume Tmp_143 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_151;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_149;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_146;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_146 != 0;
    assume Tmp_146 > 0;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_159;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3328} sdv_KeReleaseSpinLock(0, irql);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3016;
    call {:si_unique_call 3329} vslice_dummy_var_503 := Sbp2Reset#0(vslice_dummy_var_3016, 1);
    call {:si_unique_call 3330} Sbp2StartQueue#0(PdoExtension);
    goto L62;

  L62:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3331} vslice_dummy_var_502 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension), 0, 0);
    goto L1;

  anon59_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L36;

  L36:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} NtStatus != 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_160;
    assume {:nonnull} Tmp_160 != 0;
    assume Tmp_160 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_154;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_156;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3017;
    call {:si_unique_call 3332} WPP_SF_qDD(Tmp_156, 67, Tmp_154, PdoExtension, vslice_dummy_var_3017, NtStatus);
    goto L44;

  L44:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} NtStatus == -1073741790;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L56;

  L56:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L37;

  L37:
    call {:si_unique_call 3333} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon50_Then:
    goto L37;

  anon49_Then:
    goto L52;

  L52:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} NtStatus == 16384;
    call {:si_unique_call 3334} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon48_Then:
    assume {:partition} NtStatus != 16384;
    goto L56;

  anon46_Then:
    assume {:partition} NtStatus != -1073741790;
    goto L52;

  anon47_Then:
    goto L44;

  anon57_Then:
    goto L44;

  anon45_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L44;

  anon44_Then:
    assume {:partition} NtStatus == 0;
    goto L37;

  anon51_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L77;

  anon58_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L77;

  anon52_Then:
    havoc Tmp_145;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_144;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3018;
    call {:si_unique_call 3335} WPP_SF_qD(Tmp_144, 66, Tmp_145, PdoExtension, vslice_dummy_var_3018);
    goto L77;

  anon56_Then:
    assume {:partition} NtStatus != 0;
    goto L36;

  anon43_Then:
    goto L20;

  anon55_Then:
    goto L20;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L20;
}



procedure {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#0(actual_PdoExtension: int, actual_NtStatus: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#1(actual_PdoExtension: int, actual_NtStatus: int)
{
  var {:pointer} Tmp_143: int;
  var {:scalar} Tmp_144: int;
  var {:pointer} Tmp_145: int;
  var {:pointer} Tmp_146: int;
  var {:pointer} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:scalar} Tmp_156: int;
  var {:scalar} Tmp_157: int;
  var {:pointer} Tmp_158: int;
  var {:pointer} Tmp_159: int;
  var {:pointer} Tmp_160: int;
  var {:pointer} Tmp_161: int;
  var {:scalar} sdv_34: int;
  var {:scalar} sdv_35: int;
  var {:scalar} sdv_36: int;
  var {:scalar} Tmp_162: int;
  var {:scalar} irql: int;
  var {:pointer} Tmp_164: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} NtStatus: int;
  var vslice_dummy_var_504: int;
  var vslice_dummy_var_505: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_3019: int;
  var vslice_dummy_var_3020: int;
  var vslice_dummy_var_3021: int;
  var vslice_dummy_var_3022: int;
  var vslice_dummy_var_3023: int;

  anon0:
    call {:si_unique_call 3336} vslice_dummy_var_504 := __HAVOC_malloc(4);
    PdoExtension := actual_PdoExtension;
    NtStatus := actual_NtStatus;
    call {:si_unique_call 3337} Tmp_148 := __HAVOC_malloc(4);
    call {:si_unique_call 3338} Tmp_153 := __HAVOC_malloc(4);
    call {:si_unique_call 3339} Tmp_158 := __HAVOC_malloc(4);
    call {:si_unique_call 3340} Tmp_160 := __HAVOC_malloc(4);
    call {:si_unique_call 3341} Tmp_164 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    call {:si_unique_call 3342} sdv_KeAcquireSpinLock(0, Tmp_164);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    havoc irql;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_148;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    havoc Tmp_147;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_157;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3019;
    call {:si_unique_call 3343} WPP_SF_qDD(Tmp_157, 64, Tmp_147, PdoExtension, NtStatus, vslice_dummy_var_3019);
    goto L107;

  L107:
    call {:si_unique_call 3344} sdv_KeReleaseSpinLock(0, irql);
    goto L1;

  L1:
    return;

  anon54_Then:
    goto L107;

  anon60_Then:
    goto L107;

  anon53_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon41_Then:
    call {:si_unique_call 3345} Sbp2AddLog(PdoExtension, 1, -867219652, NtStatus, 0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_158;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_161;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_162;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3020;
    call {:si_unique_call 3346} WPP_SF_qDD(Tmp_162, 65, Tmp_161, PdoExtension, vslice_dummy_var_3020, NtStatus);
    goto L20;

  L20:
    call {:si_unique_call 3347} vslice_dummy_var_505 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} NtStatus == 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L77;

  L77:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_150;
    assume {:nonnull} Tmp_150 != 0;
    assume Tmp_150 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_155;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_143;
    assume {:nonnull} Tmp_143 != 0;
    assume Tmp_143 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_151;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_149;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_146;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_146 != 0;
    assume Tmp_146 > 0;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_159;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3348} sdv_KeReleaseSpinLock(0, irql);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3021;
    call {:si_unique_call 3349} vslice_dummy_var_507 := Sbp2Reset#1(vslice_dummy_var_3021, 1);
    call {:si_unique_call 3350} Sbp2StartQueue#1(PdoExtension);
    goto L62;

  L62:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3351} vslice_dummy_var_506 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension), 0, 0);
    goto L1;

  anon59_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L36;

  L36:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} NtStatus != 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_160;
    assume {:nonnull} Tmp_160 != 0;
    assume Tmp_160 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_154;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_156;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3022;
    call {:si_unique_call 3352} WPP_SF_qDD(Tmp_156, 67, Tmp_154, PdoExtension, vslice_dummy_var_3022, NtStatus);
    goto L44;

  L44:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} NtStatus == -1073741790;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L56;

  L56:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L37;

  L37:
    call {:si_unique_call 3353} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon50_Then:
    goto L37;

  anon49_Then:
    goto L52;

  L52:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} NtStatus == 16384;
    call {:si_unique_call 3354} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon48_Then:
    assume {:partition} NtStatus != 16384;
    goto L56;

  anon46_Then:
    assume {:partition} NtStatus != -1073741790;
    goto L52;

  anon47_Then:
    goto L44;

  anon57_Then:
    goto L44;

  anon45_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L44;

  anon44_Then:
    assume {:partition} NtStatus == 0;
    goto L37;

  anon51_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L77;

  anon58_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L77;

  anon52_Then:
    havoc Tmp_145;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_144;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3023;
    call {:si_unique_call 3355} WPP_SF_qD(Tmp_144, 66, Tmp_145, PdoExtension, vslice_dummy_var_3023);
    goto L77;

  anon56_Then:
    assume {:partition} NtStatus != 0;
    goto L36;

  anon43_Then:
    goto L20;

  anon55_Then:
    goto L20;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L20;
}



procedure {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#1(actual_PdoExtension: int, actual_NtStatus: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#0(actual_NotificationInfo_2: int) returns (Tmp_425: int)
{
  var {:pointer} nextListItem: int;
  var {:scalar} Tmp_426: int;
  var {:pointer} Tmp_427: int;
  var {:scalar} Tmp_428: int;
  var {:pointer} Tmp_429: int;
  var {:scalar} Tmp_430: int;
  var {:pointer} Tmp_431: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:scalar} sdv_118: int;
  var {:pointer} tempPointer: int;
  var {:scalar} Tmp_434: int;
  var {:pointer} requestIrp: int;
  var {:pointer} senseBuffer: int;
  var {:scalar} initialOrbListDepth: int;
  var {:scalar} Tmp_435: int;
  var {:pointer} Tmp_436: int;
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:pointer} orbContext: int;
  var {:scalar} sdv_121: int;
  var {:scalar} src: int;
  var {:pointer} Tmp_439: int;
  var {:pointer} Tmp_440: int;
  var {:scalar} Tmp_441: int;
  var {:pointer} srb: int;
  var {:scalar} Tmp_442: int;
  var {:pointer} deviceObject_2: int;
  var {:pointer} Tmp_444: int;
  var {:scalar} currentOrbListDepth: int;
  var {:scalar} Tmp_445: int;
  var {:scalar} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} Tmp_448: int;
  var {:scalar} Tmp_449: int;
  var {:scalar} Tmp_450: int;
  var {:scalar} Tmp_451: int;
  var {:pointer} Tmp_452: int;
  var {:scalar} sdv_125: int;
  var {:scalar} Tmp_453: int;
  var {:scalar} Tmp_454: int;
  var {:scalar} temp: int;
  var {:scalar} dueTime: int;
  var {:pointer} Tmp_455: int;
  var {:pointer} Tmp_456: int;
  var {:pointer} Tmp_457: int;
  var {:scalar} sdv_127: int;
  var {:scalar} status_10: int;
  var {:pointer} entry: int;
  var {:pointer} Tmp_459: int;
  var {:scalar} Tmp_460: int;
  var {:scalar} Tmp_461: int;
  var {:scalar} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:pointer} sdv_129: int;
  var {:pointer} pdoExtension_3: int;
  var {:pointer} Tmp_464: int;
  var {:pointer} Tmp_465: int;
  var {:scalar} orbLock: int;
  var {:pointer} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:pointer} Tmp_468: int;
  var {:scalar} Tmp_469: int;
  var {:scalar} Tmp_470: int;
  var {:pointer} statusBlock: int;
  var {:pointer} Tmp_471: int;
  var {:pointer} sdv_132: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} Tmp_472: int;
  var {:pointer} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:scalar} Tmp_475: int;
  var {:pointer} Tmp_476: int;
  var {:pointer} Tmp_477: int;
  var {:scalar} Tmp_478: int;
  var {:scalar} Tmp_479: int;
  var {:scalar} Tmp_480: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:scalar} rcode: int;
  var {:pointer} Tmp_484: int;
  var {:pointer} Tmp_485: int;
  var {:pointer} Tmp_486: int;
  var {:pointer} Tmp_487: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} sdv_138: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:scalar} sdv_141: int;
  var {:pointer} Tmp_494: int;
  var {:scalar} Tmp_496: int;
  var {:scalar} Tmp_497: int;
  var {:scalar} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:pointer} Tmp_500: int;
  var {:pointer} Tmp_501: int;
  var {:pointer} NotificationInfo_2: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_510: int;
  var vslice_dummy_var_511: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_3024: int;
  var vslice_dummy_var_3025: int;
  var vslice_dummy_var_3026: int;
  var vslice_dummy_var_3027: int;
  var vslice_dummy_var_3028: int;
  var vslice_dummy_var_3029: int;
  var vslice_dummy_var_3030: int;
  var vslice_dummy_var_3031: int;
  var vslice_dummy_var_3032: int;
  var vslice_dummy_var_3033: int;
  var vslice_dummy_var_3034: int;
  var vslice_dummy_var_3035: int;
  var vslice_dummy_var_3036: int;
  var vslice_dummy_var_3037: int;
  var vslice_dummy_var_3038: int;
  var vslice_dummy_var_3039: int;
  var vslice_dummy_var_3040: int;
  var vslice_dummy_var_3041: int;
  var vslice_dummy_var_3042: int;
  var vslice_dummy_var_3043: int;
  var vslice_dummy_var_3044: int;

  anon0:
    call {:si_unique_call 3356} dueTime := __HAVOC_malloc(20);
    call {:si_unique_call 3357} orbLock := __HAVOC_malloc(12);
    NotificationInfo_2 := actual_NotificationInfo_2;
    call {:si_unique_call 3358} Tmp_429 := __HAVOC_malloc(4);
    call {:si_unique_call 3359} Tmp_433 := __HAVOC_malloc(4);
    call {:si_unique_call 3360} Tmp_436 := __HAVOC_malloc(4);
    call {:si_unique_call 3361} Tmp_437 := __HAVOC_malloc(64);
    call {:si_unique_call 3362} Tmp_440 := __HAVOC_malloc(4);
    call {:si_unique_call 3363} Tmp_447 := __HAVOC_malloc(4);
    call {:si_unique_call 3364} Tmp_448 := __HAVOC_malloc(4);
    call {:si_unique_call 3365} Tmp_452 := __HAVOC_malloc(4);
    call {:si_unique_call 3366} Tmp_455 := __HAVOC_malloc(64);
    call {:si_unique_call 3367} Tmp_456 := __HAVOC_malloc(4);
    call {:si_unique_call 3368} Tmp_459 := __HAVOC_malloc(64);
    call {:si_unique_call 3369} Tmp_465 := __HAVOC_malloc(4);
    call {:si_unique_call 3370} Tmp_471 := __HAVOC_malloc(4);
    call {:si_unique_call 3371} Tmp_474 := __HAVOC_malloc(4);
    call {:si_unique_call 3372} Tmp_485 := __HAVOC_malloc(64);
    call {:si_unique_call 3373} Tmp_487 := __HAVOC_malloc(4);
    call {:si_unique_call 3374} Tmp_489 := __HAVOC_malloc(64);
    call {:si_unique_call 3375} Tmp_490 := __HAVOC_malloc(4);
    call {:si_unique_call 3376} Tmp_492 := __HAVOC_malloc(4);
    call {:si_unique_call 3377} Tmp_493 := __HAVOC_malloc(4);
    call {:si_unique_call 3378} Tmp_499 := __HAVOC_malloc(4);
    srb := 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_474;
    assume {:nonnull} Tmp_474 != 0;
    assume Tmp_474 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    havoc Tmp_484;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_461;
    call {:si_unique_call 3379} WPP_SF_q(Tmp_461, 92, Tmp_484, NotificationInfo_2);
    goto L446;

  L446:
    Tmp_425 := 0;
    goto L1;

  L1:
    return;

  anon226_Then:
    goto L446;

  anon255_Then:
    goto L446;

  anon225_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L446;

  anon227_Then:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    havoc Tmp_466;
    assume {:nonnull} Tmp_466 != 0;
    assume Tmp_466 > 0;
    havoc deviceObject_2;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    havoc pdoExtension_3;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3380} sdv_138 := sdv_MmGetMdlVirtualAddress(0);
    statusBlock := sdv_138;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3381} status_10 := CheckStatusResponseValue(statusBlock);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_433;
    assume {:nonnull} Tmp_433 != 0;
    assume Tmp_433 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    havoc Tmp_439;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_478;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3024;
    call {:si_unique_call 3382} WPP_SF_qDD(Tmp_478, 93, Tmp_439, pdoExtension_3, status_10, vslice_dummy_var_3024);
    goto L55;

  L55:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3383} vslice_dummy_var_517 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := 0;
    goto L1;

  anon174_Then:
    goto L55;

  anon228_Then:
    goto L55;

  anon173_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L55;

  anon171_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 3384} Sbp2LoginCompletion#0(pdoExtension_3, status_10);
    rcode := 0;
    goto L73;

  L73:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3385} vslice_dummy_var_518 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := rcode;
    goto L1;

  anon175_Then:
    goto L66;

  L66:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc src;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} 32768 == src;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_490;
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    havoc Tmp_486;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_498;
    call {:si_unique_call 3386} WPP_SF_q(Tmp_498, 94, Tmp_486, pdoExtension_3);
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3387} vslice_dummy_var_508 := Sbp2AccessRegister#0(pdoExtension_3, Reserved__DEVICE_EXTENSION(pdoExtension_3), 1040);
    call {:si_unique_call 3388} Sbp2HandleUnsolicited(pdoExtension_3, statusBlock);
    rcode := 0;
    goto L73;

  anon178_Then:
    goto L83;

  anon230_Then:
    goto L83;

  anon177_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon229_Then:
    assume {:partition} 32768 != src;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} 49152 == src;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    havoc Tmp_488;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_428;
    call {:si_unique_call 3389} WPP_SF_q(Tmp_428, 95, Tmp_488, pdoExtension_3);
    goto L103;

  L103:
    rcode := 0;
    goto L73;

  anon181_Then:
    goto L103;

  anon231_Then:
    goto L103;

  anon180_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon176_Then:
    assume {:partition} 49152 != src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_487;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    havoc Tmp_468;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_434;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3025;
    call {:si_unique_call 3390} WPP_SF_qDD(Tmp_434, 96, Tmp_468, pdoExtension_3, status_10, vslice_dummy_var_3025);
    goto L434;

  L434:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3391} vslice_dummy_var_524 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := 0;
    goto L1;

  anon224_Then:
    goto L434;

  anon254_Then:
    goto L434;

  anon223_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L434;

  anon179_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc temp;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} temp > 384;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  L132:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_431;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_426;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_3026;
    havoc vslice_dummy_var_3027;
    havoc vslice_dummy_var_3028;
    havoc vslice_dummy_var_3029;
    call {:si_unique_call 3392} WPP_SF_qDDDD(Tmp_426, 98, Tmp_431, pdoExtension_3, vslice_dummy_var_3026, vslice_dummy_var_3027, vslice_dummy_var_3028, vslice_dummy_var_3029);
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3030;
    call {:si_unique_call 3393} Sbp2CreateRequestErrorLog(vslice_dummy_var_3030, 0, 3699, -1073741434);
    rcode := 7;
    goto L73;

  anon185_Then:
    goto L133;

  anon234_Then:
    goto L133;

  anon184_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L133;

  anon182_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_492;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    goto L132;

  anon233_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L132;

  anon183_Then:
    havoc Tmp_438;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_446;
    call {:si_unique_call 3394} WPP_SF_qD(Tmp_446, 97, Tmp_438, pdoExtension_3, temp);
    goto L132;

  anon232_Then:
    assume {:partition} 384 >= temp;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc tempPointer;
    call {:si_unique_call 3395} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    assume {:nonnull} tempPointer != 0;
    assume tempPointer > 0;
    havoc orbContext;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} orbContext != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_429;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    havoc Tmp_477;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_497;
    call {:si_unique_call 3396} WPP_SF_qq(Tmp_497, 100, Tmp_477, pdoExtension_3, orbContext);
    goto L158;

  L158:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    call {:si_unique_call 3397} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_447;
    assume {:nonnull} Tmp_447 != 0;
    assume Tmp_447 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    havoc Tmp_427;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_481;
    call {:si_unique_call 3398} WPP_SF_qq(Tmp_481, 101, Tmp_427, pdoExtension_3, orbContext);
    goto L174;

  L174:
    rcode := 0;
    goto L73;

  anon191_Then:
    goto L174;

  anon238_Then:
    goto L174;

  anon190_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L174;

  anon188_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_473;
    assume {:nonnull} Tmp_473 != 0;
    assume Tmp_473 > 0;
    havoc requestIrp;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3399} vslice_dummy_var_519 := KeCancelTimer(0);
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_448;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    havoc Tmp_483;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_441;
    call {:si_unique_call 3400} WPP_SF_qq(Tmp_441, 102, Tmp_483, pdoExtension_3, orbContext);
    goto L196;

  L196:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc entry;
    goto L204;

  L204:
    call {:si_unique_call 3401} nextListItem, entry, sdv_132 := Sbp2GlobalStatusCallback#0_loop_L204(nextListItem, entry, sdv_132);
    goto L204_last;

  L204_last:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    call {:si_unique_call 3402} sdv_132 := sdv_containing_record(entry, 0);
    nextListItem := sdv_132;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon241_Else_dummy;

  anon241_Else_dummy:
    assume false;
    return;

  anon241_Then:
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_476;
    assume {:nonnull} Tmp_476 != 0;
    assume Tmp_476 > 0;
    assume {:nonnull} dueTime != 0;
    assume dueTime > 0;
    call {:si_unique_call 3403} vslice_dummy_var_520 := KeSetTimer(0, dueTime, 0);
    goto L185;

  L185:
    call {:si_unique_call 3404} Free1394DataMapping(pdoExtension_3, orbContext);
    call {:si_unique_call 3405} vslice_dummy_var_509 := Sbp2_SCSI_RBC_Conversion(orbContext);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc srb;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc initialOrbListDepth;
    call {:si_unique_call 3406} vslice_dummy_var_521 := sdv_RemoveEntryList(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3407} InitializeListHead(OrbList__ASYNC_REQUEST_CONTEXT(orbContext));
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_3031;
    havoc vslice_dummy_var_3032;
    call {:si_unique_call 3408} Sbp2AddLog(pdoExtension_3, 64, -915451291, vslice_dummy_var_3031, vslice_dummy_var_3032);
    call {:si_unique_call 3409} vslice_dummy_var_510 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3033;
    call {:si_unique_call 3410} vslice_dummy_var_512 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_3033);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L238;

  L238:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3034;
    call {:si_unique_call 3411} vslice_dummy_var_511 := Sbp2Reset#0(vslice_dummy_var_3034, 1);
    call {:si_unique_call 3412} sdv_127 := sdv_IsListEmpty(0);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} sdv_127 != 0;
    goto L252;

  L252:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc currentOrbListDepth;
    call {:si_unique_call 3413} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3414} Tmp_501 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    call {:si_unique_call 3415} sdv_KeAcquireSpinLock(0, Tmp_501);
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    havoc oldIrql_1;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3416} sdv_KeReleaseSpinLock(0, oldIrql_1);
    call {:si_unique_call 3417} Tmp_462 := corral_nondet();
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} Tmp_462 > 1;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    goto L367;

  L367:
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_452;
    assume {:nonnull} Tmp_452 != 0;
    assume Tmp_452 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_485;
    assume {:nonnull} Tmp_485 != 0;
    assume Tmp_485 > 0;
    havoc Tmp_480;
    havoc Tmp_463;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_435;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_3035;
    call {:si_unique_call 3418} WPP_SF_qDD(Tmp_435, 106, Tmp_463, pdoExtension_3, Tmp_480, vslice_dummy_var_3035);
    goto L291;

  L291:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3419} Sbp2AddLog(pdoExtension_3, 64, -915455121, status_10, requestIrp);
    call {:si_unique_call 3420} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3421} sdv_141 := sdv_IsListEmpty(0);
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} sdv_141 != 0;
    call {:si_unique_call 3422} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3423} vslice_dummy_var_513 := Sbp2RestartPendingPowerIrp#0(pdoExtension_3);
    goto L322;

  L322:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(requestIrp))] := status_10;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_472;
    goto L326;

  L326:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3424} vslice_dummy_var_522 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_3), requestIrp);
    call {:si_unique_call 3425} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    goto L341;

  L341:
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_456;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_444;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_450;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3036;
    call {:si_unique_call 3426} WPP_SF_qd(Tmp_450, 108, Tmp_444, pdoExtension_3, vslice_dummy_var_3036);
    goto L342;

  L342:
    rcode := 0;
    goto L73;

  anon209_Then:
    goto L342;

  anon246_Then:
    goto L342;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L342;

  anon206_Then:
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} initialOrbListDepth <= currentOrbListDepth;
    goto L341;

  anon207_Then:
    assume {:partition} currentOrbListDepth < initialOrbListDepth;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3037;
    call {:si_unique_call 3427} Sbp2StartNextPacketByKey#0(deviceObject_2, vslice_dummy_var_3037);
    goto L341;

  anon245_Then:
    Tmp_472 := 0;
    goto L326;

  anon205_Then:
    assume {:partition} sdv_141 == 0;
    call {:si_unique_call 3428} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto L322;

  anon216_Then:
    goto L291;

  anon244_Then:
    goto L291;

  anon215_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon243_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto L367;

  anon199_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_440;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_455;
    assume {:nonnull} Tmp_455 != 0;
    assume Tmp_455 > 0;
    havoc Tmp_467;
    havoc Tmp_482;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_442;
    call {:si_unique_call 3429} WPP_SF_qD(Tmp_442, 105, Tmp_482, pdoExtension_3, Tmp_467);
    goto L352;

  L352:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    Tmp_430 := 32;
    goto L364;

  L364:
    call {:si_unique_call 3430} sdv_RtlCopyMemory(0, 0, Tmp_430);
    goto L291;

  anon214_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_430;
    goto L364;

  anon212_Then:
    goto L291;

  anon213_Then:
    goto L352;

  anon249_Then:
    goto L352;

  anon211_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L352;

  anon200_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_453;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_3038;
    call {:si_unique_call 3431} sdv_118 := ConvertSbp2SenseDataToScsi(statusBlock, vslice_dummy_var_3038, Tmp_453);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} sdv_118 != 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L283;

  L283:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc senseBuffer;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_489;
    assume {:nonnull} Tmp_489 != 0;
    assume Tmp_489 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    goto L290;

  L290:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_449;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_460;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_432;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_437;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    havoc Tmp_496;
    havoc Tmp_464;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_475;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_3039;
    havoc vslice_dummy_var_3040;
    call {:si_unique_call 3432} WPP_SF_qDDDDDd(Tmp_475, 103, Tmp_464, pdoExtension_3, Tmp_496, Tmp_432, Tmp_460, Tmp_449, vslice_dummy_var_3039, vslice_dummy_var_3040);
    goto L291;

  anon204_Then:
    goto L291;

  anon248_Then:
    goto L291;

  anon203_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon247_Then:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L291;

  anon210_Then:
    goto L290;

  anon202_Then:
    goto L290;

  anon201_Then:
    assume {:partition} sdv_118 == 0;
    goto L283;

  anon242_Then:
    assume {:partition} 1 >= Tmp_462;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_454;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} Tmp_454 == 4096;
    goto L381;

  L381:
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_465;
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_479;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_459;
    assume {:nonnull} Tmp_459 != 0;
    assume Tmp_459 > 0;
    havoc Tmp_469;
    havoc Tmp_457;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_445;
    call {:si_unique_call 3433} WPP_SF_qDD(Tmp_445, 107, Tmp_457, pdoExtension_3, Tmp_469, Tmp_479);
    goto L382;

  L382:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon218_Then:
    goto L382;

  anon251_Then:
    goto L382;

  anon217_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L382;

  anon250_Then:
    assume {:partition} Tmp_454 != 4096;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_470;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:partition} Tmp_470 != 8192;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon252_Then:
    assume {:partition} Tmp_470 == 8192;
    goto L381;

  anon198_Then:
    assume {:partition} sdv_127 == 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3041;
    call {:si_unique_call 3434} sdv_129 := sdv_containing_record(vslice_dummy_var_3041, 0);
    nextListItem := sdv_129;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    call {:si_unique_call 3435} vslice_dummy_var_523 := Sbp2AccessRegister#0(pdoExtension_3, CmdOrbAddress__ASYNC_REQUEST_CONTEXT(nextListItem), 1028);
    goto L252;

  anon197_Then:
    goto L238;

  anon195_Then:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} 16384 == src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3042;
    call {:si_unique_call 3436} vslice_dummy_var_515 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_3042);
    goto L405;

  L405:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_494;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon253_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon219_Then:
    goto L405;

  anon196_Then:
    assume {:partition} 16384 != src;
    call {:si_unique_call 3437} vslice_dummy_var_514 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3043;
    call {:si_unique_call 3438} vslice_dummy_var_516 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_3043);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon220_Then:
    goto L252;

  anon194_Then:
    goto L185;

  anon193_Then:
    goto L196;

  anon240_Then:
    goto L196;

  anon192_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon239_Then:
    goto L185;

  anon189_Then:
    goto L158;

  anon237_Then:
    goto L158;

  anon187_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L158;

  anon186_Then:
    goto L150;

  L150:
    call {:si_unique_call 3439} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_436;
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    havoc Tmp_500;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_451;
    call {:si_unique_call 3440} WPP_SF_qD(Tmp_451, 99, Tmp_500, pdoExtension_3, temp);
    goto L421;

  L421:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3044;
    call {:si_unique_call 3441} Sbp2CreateRequestErrorLog(vslice_dummy_var_3044, 0, 3729, -1073741434);
    rcode := 7;
    goto L73;

  anon222_Then:
    goto L421;

  anon236_Then:
    goto L421;

  anon221_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L421;

  anon235_Then:
    assume {:partition} orbContext == 0;
    goto L150;

  anon172_Then:
    goto L66;
}



procedure {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#0(actual_NotificationInfo_2: int) returns (Tmp_425: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_425 == 0 || Tmp_425 == 7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#1(actual_NotificationInfo_2: int) returns (Tmp_425: int)
{
  var {:pointer} nextListItem: int;
  var {:scalar} Tmp_426: int;
  var {:pointer} Tmp_427: int;
  var {:scalar} Tmp_428: int;
  var {:pointer} Tmp_429: int;
  var {:scalar} Tmp_430: int;
  var {:pointer} Tmp_431: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:scalar} sdv_118: int;
  var {:pointer} tempPointer: int;
  var {:scalar} Tmp_434: int;
  var {:pointer} requestIrp: int;
  var {:pointer} senseBuffer: int;
  var {:scalar} initialOrbListDepth: int;
  var {:scalar} Tmp_435: int;
  var {:pointer} Tmp_436: int;
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:pointer} orbContext: int;
  var {:scalar} sdv_121: int;
  var {:scalar} src: int;
  var {:pointer} Tmp_439: int;
  var {:pointer} Tmp_440: int;
  var {:scalar} Tmp_441: int;
  var {:pointer} srb: int;
  var {:scalar} Tmp_442: int;
  var {:pointer} deviceObject_2: int;
  var {:pointer} Tmp_444: int;
  var {:scalar} currentOrbListDepth: int;
  var {:scalar} Tmp_445: int;
  var {:scalar} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} Tmp_448: int;
  var {:scalar} Tmp_449: int;
  var {:scalar} Tmp_450: int;
  var {:scalar} Tmp_451: int;
  var {:pointer} Tmp_452: int;
  var {:scalar} sdv_125: int;
  var {:scalar} Tmp_453: int;
  var {:scalar} Tmp_454: int;
  var {:scalar} temp: int;
  var {:scalar} dueTime: int;
  var {:pointer} Tmp_455: int;
  var {:pointer} Tmp_456: int;
  var {:pointer} Tmp_457: int;
  var {:scalar} sdv_127: int;
  var {:scalar} status_10: int;
  var {:pointer} entry: int;
  var {:pointer} Tmp_459: int;
  var {:scalar} Tmp_460: int;
  var {:scalar} Tmp_461: int;
  var {:scalar} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:pointer} sdv_129: int;
  var {:pointer} pdoExtension_3: int;
  var {:pointer} Tmp_464: int;
  var {:pointer} Tmp_465: int;
  var {:scalar} orbLock: int;
  var {:pointer} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:pointer} Tmp_468: int;
  var {:scalar} Tmp_469: int;
  var {:scalar} Tmp_470: int;
  var {:pointer} statusBlock: int;
  var {:pointer} Tmp_471: int;
  var {:pointer} sdv_132: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} Tmp_472: int;
  var {:pointer} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:scalar} Tmp_475: int;
  var {:pointer} Tmp_476: int;
  var {:pointer} Tmp_477: int;
  var {:scalar} Tmp_478: int;
  var {:scalar} Tmp_479: int;
  var {:scalar} Tmp_480: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:scalar} rcode: int;
  var {:pointer} Tmp_484: int;
  var {:pointer} Tmp_485: int;
  var {:pointer} Tmp_486: int;
  var {:pointer} Tmp_487: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} sdv_138: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:scalar} sdv_141: int;
  var {:pointer} Tmp_494: int;
  var {:scalar} Tmp_496: int;
  var {:scalar} Tmp_497: int;
  var {:scalar} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:pointer} Tmp_500: int;
  var {:pointer} Tmp_501: int;
  var {:pointer} NotificationInfo_2: int;
  var vslice_dummy_var_525: int;
  var vslice_dummy_var_526: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_528: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;
  var vslice_dummy_var_532: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_534: int;
  var vslice_dummy_var_535: int;
  var vslice_dummy_var_536: int;
  var vslice_dummy_var_537: int;
  var vslice_dummy_var_538: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_3045: int;
  var vslice_dummy_var_3046: int;
  var vslice_dummy_var_3047: int;
  var vslice_dummy_var_3048: int;
  var vslice_dummy_var_3049: int;
  var vslice_dummy_var_3050: int;
  var vslice_dummy_var_3051: int;
  var vslice_dummy_var_3052: int;
  var vslice_dummy_var_3053: int;
  var vslice_dummy_var_3054: int;
  var vslice_dummy_var_3055: int;
  var vslice_dummy_var_3056: int;
  var vslice_dummy_var_3057: int;
  var vslice_dummy_var_3058: int;
  var vslice_dummy_var_3059: int;
  var vslice_dummy_var_3060: int;
  var vslice_dummy_var_3061: int;
  var vslice_dummy_var_3062: int;
  var vslice_dummy_var_3063: int;
  var vslice_dummy_var_3064: int;
  var vslice_dummy_var_3065: int;

  anon0:
    call {:si_unique_call 3442} dueTime := __HAVOC_malloc(20);
    call {:si_unique_call 3443} orbLock := __HAVOC_malloc(12);
    NotificationInfo_2 := actual_NotificationInfo_2;
    call {:si_unique_call 3444} Tmp_429 := __HAVOC_malloc(4);
    call {:si_unique_call 3445} Tmp_433 := __HAVOC_malloc(4);
    call {:si_unique_call 3446} Tmp_436 := __HAVOC_malloc(4);
    call {:si_unique_call 3447} Tmp_437 := __HAVOC_malloc(64);
    call {:si_unique_call 3448} Tmp_440 := __HAVOC_malloc(4);
    call {:si_unique_call 3449} Tmp_447 := __HAVOC_malloc(4);
    call {:si_unique_call 3450} Tmp_448 := __HAVOC_malloc(4);
    call {:si_unique_call 3451} Tmp_452 := __HAVOC_malloc(4);
    call {:si_unique_call 3452} Tmp_455 := __HAVOC_malloc(64);
    call {:si_unique_call 3453} Tmp_456 := __HAVOC_malloc(4);
    call {:si_unique_call 3454} Tmp_459 := __HAVOC_malloc(64);
    call {:si_unique_call 3455} Tmp_465 := __HAVOC_malloc(4);
    call {:si_unique_call 3456} Tmp_471 := __HAVOC_malloc(4);
    call {:si_unique_call 3457} Tmp_474 := __HAVOC_malloc(4);
    call {:si_unique_call 3458} Tmp_485 := __HAVOC_malloc(64);
    call {:si_unique_call 3459} Tmp_487 := __HAVOC_malloc(4);
    call {:si_unique_call 3460} Tmp_489 := __HAVOC_malloc(64);
    call {:si_unique_call 3461} Tmp_490 := __HAVOC_malloc(4);
    call {:si_unique_call 3462} Tmp_492 := __HAVOC_malloc(4);
    call {:si_unique_call 3463} Tmp_493 := __HAVOC_malloc(4);
    call {:si_unique_call 3464} Tmp_499 := __HAVOC_malloc(4);
    srb := 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_474;
    assume {:nonnull} Tmp_474 != 0;
    assume Tmp_474 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    havoc Tmp_484;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_461;
    call {:si_unique_call 3465} WPP_SF_q(Tmp_461, 92, Tmp_484, NotificationInfo_2);
    goto L446;

  L446:
    Tmp_425 := 0;
    goto L1;

  L1:
    return;

  anon226_Then:
    goto L446;

  anon255_Then:
    goto L446;

  anon225_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L446;

  anon227_Then:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    havoc Tmp_466;
    assume {:nonnull} Tmp_466 != 0;
    assume Tmp_466 > 0;
    havoc deviceObject_2;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    havoc pdoExtension_3;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3466} sdv_138 := sdv_MmGetMdlVirtualAddress(0);
    statusBlock := sdv_138;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3467} status_10 := CheckStatusResponseValue(statusBlock);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_433;
    assume {:nonnull} Tmp_433 != 0;
    assume Tmp_433 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    havoc Tmp_439;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_478;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3045;
    call {:si_unique_call 3468} WPP_SF_qDD(Tmp_478, 93, Tmp_439, pdoExtension_3, status_10, vslice_dummy_var_3045);
    goto L55;

  L55:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3469} vslice_dummy_var_534 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := 0;
    goto L1;

  anon174_Then:
    goto L55;

  anon228_Then:
    goto L55;

  anon173_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L55;

  anon171_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 3470} Sbp2LoginCompletion#1(pdoExtension_3, status_10);
    rcode := 0;
    goto L73;

  L73:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3471} vslice_dummy_var_535 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := rcode;
    goto L1;

  anon175_Then:
    goto L66;

  L66:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc src;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} 32768 == src;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_490;
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    havoc Tmp_486;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_498;
    call {:si_unique_call 3472} WPP_SF_q(Tmp_498, 94, Tmp_486, pdoExtension_3);
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3473} vslice_dummy_var_525 := Sbp2AccessRegister#1(pdoExtension_3, Reserved__DEVICE_EXTENSION(pdoExtension_3), 1040);
    call {:si_unique_call 3474} Sbp2HandleUnsolicited(pdoExtension_3, statusBlock);
    rcode := 0;
    goto L73;

  anon178_Then:
    goto L83;

  anon230_Then:
    goto L83;

  anon177_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon229_Then:
    assume {:partition} 32768 != src;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} 49152 == src;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    havoc Tmp_488;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_428;
    call {:si_unique_call 3475} WPP_SF_q(Tmp_428, 95, Tmp_488, pdoExtension_3);
    goto L103;

  L103:
    rcode := 0;
    goto L73;

  anon181_Then:
    goto L103;

  anon231_Then:
    goto L103;

  anon180_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon176_Then:
    assume {:partition} 49152 != src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_487;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    havoc Tmp_468;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_434;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3046;
    call {:si_unique_call 3476} WPP_SF_qDD(Tmp_434, 96, Tmp_468, pdoExtension_3, status_10, vslice_dummy_var_3046);
    goto L434;

  L434:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3477} vslice_dummy_var_541 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := 0;
    goto L1;

  anon224_Then:
    goto L434;

  anon254_Then:
    goto L434;

  anon223_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L434;

  anon179_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc temp;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} temp > 384;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  L132:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_431;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_426;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_3047;
    havoc vslice_dummy_var_3048;
    havoc vslice_dummy_var_3049;
    havoc vslice_dummy_var_3050;
    call {:si_unique_call 3478} WPP_SF_qDDDD(Tmp_426, 98, Tmp_431, pdoExtension_3, vslice_dummy_var_3047, vslice_dummy_var_3048, vslice_dummy_var_3049, vslice_dummy_var_3050);
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3051;
    call {:si_unique_call 3479} Sbp2CreateRequestErrorLog(vslice_dummy_var_3051, 0, 3699, -1073741434);
    rcode := 7;
    goto L73;

  anon185_Then:
    goto L133;

  anon234_Then:
    goto L133;

  anon184_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L133;

  anon182_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_492;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    goto L132;

  anon233_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L132;

  anon183_Then:
    havoc Tmp_438;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_446;
    call {:si_unique_call 3480} WPP_SF_qD(Tmp_446, 97, Tmp_438, pdoExtension_3, temp);
    goto L132;

  anon232_Then:
    assume {:partition} 384 >= temp;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc tempPointer;
    call {:si_unique_call 3481} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    assume {:nonnull} tempPointer != 0;
    assume tempPointer > 0;
    havoc orbContext;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} orbContext != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_429;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    havoc Tmp_477;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_497;
    call {:si_unique_call 3482} WPP_SF_qq(Tmp_497, 100, Tmp_477, pdoExtension_3, orbContext);
    goto L158;

  L158:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    call {:si_unique_call 3483} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_447;
    assume {:nonnull} Tmp_447 != 0;
    assume Tmp_447 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    havoc Tmp_427;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_481;
    call {:si_unique_call 3484} WPP_SF_qq(Tmp_481, 101, Tmp_427, pdoExtension_3, orbContext);
    goto L174;

  L174:
    rcode := 0;
    goto L73;

  anon191_Then:
    goto L174;

  anon238_Then:
    goto L174;

  anon190_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L174;

  anon188_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_473;
    assume {:nonnull} Tmp_473 != 0;
    assume Tmp_473 > 0;
    havoc requestIrp;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3485} vslice_dummy_var_536 := KeCancelTimer(0);
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_448;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    havoc Tmp_483;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_441;
    call {:si_unique_call 3486} WPP_SF_qq(Tmp_441, 102, Tmp_483, pdoExtension_3, orbContext);
    goto L196;

  L196:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc entry;
    goto L204;

  L204:
    call {:si_unique_call 3487} nextListItem, entry, sdv_132 := Sbp2GlobalStatusCallback#1_loop_L204(nextListItem, entry, sdv_132);
    goto L204_last;

  L204_last:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    call {:si_unique_call 3488} sdv_132 := sdv_containing_record(entry, 0);
    nextListItem := sdv_132;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon241_Else_dummy;

  anon241_Else_dummy:
    assume false;
    return;

  anon241_Then:
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_476;
    assume {:nonnull} Tmp_476 != 0;
    assume Tmp_476 > 0;
    assume {:nonnull} dueTime != 0;
    assume dueTime > 0;
    call {:si_unique_call 3489} vslice_dummy_var_537 := KeSetTimer(0, dueTime, 0);
    goto L185;

  L185:
    call {:si_unique_call 3490} Free1394DataMapping(pdoExtension_3, orbContext);
    call {:si_unique_call 3491} vslice_dummy_var_526 := Sbp2_SCSI_RBC_Conversion(orbContext);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc srb;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc initialOrbListDepth;
    call {:si_unique_call 3492} vslice_dummy_var_538 := sdv_RemoveEntryList(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3493} InitializeListHead(OrbList__ASYNC_REQUEST_CONTEXT(orbContext));
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_3052;
    havoc vslice_dummy_var_3053;
    call {:si_unique_call 3494} Sbp2AddLog(pdoExtension_3, 64, -915451291, vslice_dummy_var_3052, vslice_dummy_var_3053);
    call {:si_unique_call 3495} vslice_dummy_var_527 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3054;
    call {:si_unique_call 3496} vslice_dummy_var_529 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_3054);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L238;

  L238:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3055;
    call {:si_unique_call 3497} vslice_dummy_var_528 := Sbp2Reset#1(vslice_dummy_var_3055, 1);
    call {:si_unique_call 3498} sdv_127 := sdv_IsListEmpty(0);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} sdv_127 != 0;
    goto L252;

  L252:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc currentOrbListDepth;
    call {:si_unique_call 3499} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3500} Tmp_501 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    call {:si_unique_call 3501} sdv_KeAcquireSpinLock(0, Tmp_501);
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    havoc oldIrql_1;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3502} sdv_KeReleaseSpinLock(0, oldIrql_1);
    call {:si_unique_call 3503} Tmp_462 := corral_nondet();
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} Tmp_462 > 1;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    goto L367;

  L367:
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_452;
    assume {:nonnull} Tmp_452 != 0;
    assume Tmp_452 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_485;
    assume {:nonnull} Tmp_485 != 0;
    assume Tmp_485 > 0;
    havoc Tmp_480;
    havoc Tmp_463;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_435;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_3056;
    call {:si_unique_call 3504} WPP_SF_qDD(Tmp_435, 106, Tmp_463, pdoExtension_3, Tmp_480, vslice_dummy_var_3056);
    goto L291;

  L291:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3505} Sbp2AddLog(pdoExtension_3, 64, -915455121, status_10, requestIrp);
    call {:si_unique_call 3506} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3507} sdv_141 := sdv_IsListEmpty(0);
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} sdv_141 != 0;
    call {:si_unique_call 3508} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3509} vslice_dummy_var_530 := Sbp2RestartPendingPowerIrp#1(pdoExtension_3);
    goto L322;

  L322:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(requestIrp))] := status_10;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_472;
    goto L326;

  L326:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3510} vslice_dummy_var_539 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_3), requestIrp);
    call {:si_unique_call 3511} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    goto L341;

  L341:
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_456;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_444;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_450;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3057;
    call {:si_unique_call 3512} WPP_SF_qd(Tmp_450, 108, Tmp_444, pdoExtension_3, vslice_dummy_var_3057);
    goto L342;

  L342:
    rcode := 0;
    goto L73;

  anon209_Then:
    goto L342;

  anon246_Then:
    goto L342;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L342;

  anon206_Then:
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} initialOrbListDepth <= currentOrbListDepth;
    goto L341;

  anon207_Then:
    assume {:partition} currentOrbListDepth < initialOrbListDepth;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3058;
    call {:si_unique_call 3513} Sbp2StartNextPacketByKey#1(deviceObject_2, vslice_dummy_var_3058);
    goto L341;

  anon245_Then:
    Tmp_472 := 0;
    goto L326;

  anon205_Then:
    assume {:partition} sdv_141 == 0;
    call {:si_unique_call 3514} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto L322;

  anon216_Then:
    goto L291;

  anon244_Then:
    goto L291;

  anon215_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon243_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto L367;

  anon199_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_440;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_455;
    assume {:nonnull} Tmp_455 != 0;
    assume Tmp_455 > 0;
    havoc Tmp_467;
    havoc Tmp_482;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_442;
    call {:si_unique_call 3515} WPP_SF_qD(Tmp_442, 105, Tmp_482, pdoExtension_3, Tmp_467);
    goto L352;

  L352:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    Tmp_430 := 32;
    goto L364;

  L364:
    call {:si_unique_call 3516} sdv_RtlCopyMemory(0, 0, Tmp_430);
    goto L291;

  anon214_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_430;
    goto L364;

  anon212_Then:
    goto L291;

  anon213_Then:
    goto L352;

  anon249_Then:
    goto L352;

  anon211_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L352;

  anon200_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_453;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_3059;
    call {:si_unique_call 3517} sdv_118 := ConvertSbp2SenseDataToScsi(statusBlock, vslice_dummy_var_3059, Tmp_453);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} sdv_118 != 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L283;

  L283:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc senseBuffer;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_489;
    assume {:nonnull} Tmp_489 != 0;
    assume Tmp_489 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    goto L290;

  L290:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_449;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_460;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_432;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_437;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    havoc Tmp_496;
    havoc Tmp_464;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_475;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_3060;
    havoc vslice_dummy_var_3061;
    call {:si_unique_call 3518} WPP_SF_qDDDDDd(Tmp_475, 103, Tmp_464, pdoExtension_3, Tmp_496, Tmp_432, Tmp_460, Tmp_449, vslice_dummy_var_3060, vslice_dummy_var_3061);
    goto L291;

  anon204_Then:
    goto L291;

  anon248_Then:
    goto L291;

  anon203_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon247_Then:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L291;

  anon210_Then:
    goto L290;

  anon202_Then:
    goto L290;

  anon201_Then:
    assume {:partition} sdv_118 == 0;
    goto L283;

  anon242_Then:
    assume {:partition} 1 >= Tmp_462;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_454;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} Tmp_454 == 4096;
    goto L381;

  L381:
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_465;
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_479;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_459;
    assume {:nonnull} Tmp_459 != 0;
    assume Tmp_459 > 0;
    havoc Tmp_469;
    havoc Tmp_457;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_445;
    call {:si_unique_call 3519} WPP_SF_qDD(Tmp_445, 107, Tmp_457, pdoExtension_3, Tmp_469, Tmp_479);
    goto L382;

  L382:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon218_Then:
    goto L382;

  anon251_Then:
    goto L382;

  anon217_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L382;

  anon250_Then:
    assume {:partition} Tmp_454 != 4096;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_470;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:partition} Tmp_470 != 8192;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon252_Then:
    assume {:partition} Tmp_470 == 8192;
    goto L381;

  anon198_Then:
    assume {:partition} sdv_127 == 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3062;
    call {:si_unique_call 3520} sdv_129 := sdv_containing_record(vslice_dummy_var_3062, 0);
    nextListItem := sdv_129;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    call {:si_unique_call 3521} vslice_dummy_var_540 := Sbp2AccessRegister#1(pdoExtension_3, CmdOrbAddress__ASYNC_REQUEST_CONTEXT(nextListItem), 1028);
    goto L252;

  anon197_Then:
    goto L238;

  anon195_Then:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} 16384 == src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3063;
    call {:si_unique_call 3522} vslice_dummy_var_532 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_3063);
    goto L405;

  L405:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_494;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon253_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon219_Then:
    goto L405;

  anon196_Then:
    assume {:partition} 16384 != src;
    call {:si_unique_call 3523} vslice_dummy_var_531 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3064;
    call {:si_unique_call 3524} vslice_dummy_var_533 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_3064);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon220_Then:
    goto L252;

  anon194_Then:
    goto L185;

  anon193_Then:
    goto L196;

  anon240_Then:
    goto L196;

  anon192_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon239_Then:
    goto L185;

  anon189_Then:
    goto L158;

  anon237_Then:
    goto L158;

  anon187_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L158;

  anon186_Then:
    goto L150;

  L150:
    call {:si_unique_call 3525} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_436;
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    havoc Tmp_500;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_451;
    call {:si_unique_call 3526} WPP_SF_qD(Tmp_451, 99, Tmp_500, pdoExtension_3, temp);
    goto L421;

  L421:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_3065;
    call {:si_unique_call 3527} Sbp2CreateRequestErrorLog(vslice_dummy_var_3065, 0, 3729, -1073741434);
    rcode := 7;
    goto L73;

  anon222_Then:
    goto L421;

  anon236_Then:
    goto L421;

  anon221_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L421;

  anon235_Then:
    assume {:partition} orbContext == 0;
    goto L150;

  anon172_Then:
    goto L66;
}



procedure {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#1(actual_NotificationInfo_2: int) returns (Tmp_425: int);
  modifies alloc, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_425 == 0 || Tmp_425 == 7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation Sbp2_ProcessTextualDescriptor_loop_L60(in_i: int, in_Tmp_14: int, in_Tmp_16: int, in_Tmp_20: int, in_Tmp_21: int, in_pData: int, in_ulUnicode: int, in_Tmp_26: int, in_Tmp_27: int, in_dataLength: int, in_uChar: int) returns (out_i: int, out_Tmp_14: int, out_Tmp_16: int, out_Tmp_20: int, out_Tmp_21: int, out_Tmp_26: int, out_Tmp_27: int, out_uChar: int)
{

  entry:
    out_i, out_Tmp_14, out_Tmp_16, out_Tmp_20, out_Tmp_21, out_Tmp_26, out_Tmp_27, out_uChar := in_i, in_Tmp_14, in_Tmp_16, in_Tmp_20, in_Tmp_21, in_Tmp_26, in_Tmp_27, in_uChar;
    goto L60, exit;

  exit:
    return;

  L60:
    goto anon60_Else;

  anon60_Else:
    assume {:partition} in_dataLength * 4 > out_i;
    out_Tmp_16 := in_pData;
    assume {:nonnull} out_Tmp_16 != 0;
    assume out_Tmp_16 > 0;
    havoc out_uChar;
    goto anon79_Else;

  anon79_Else:
    assume {:partition} out_uChar != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} out_uChar == 44;
    goto L70;

  L70:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_20;
    assume {:nonnull} out_Tmp_20 != 0;
    assume out_Tmp_20 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_Tmp_27 := out_uChar;
    havoc out_Tmp_21;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_26;
    call {:si_unique_call 3528} WPP_SF_D(out_Tmp_26, 124, out_Tmp_21, out_Tmp_27);
    goto L71;

  L71:
    out_Tmp_14 := in_pData;
    assume {:nonnull} out_Tmp_14 != 0;
    assume out_Tmp_14 > 0;
    goto L80;

  L80:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(in_ulUnicode, 0) != 0;
    out_i := out_i + 1;
    goto L81;

  L81:
    out_i := out_i + 1;
    goto L81_dummy;

  L81_dummy:
    havoc out_i;
    return;

  anon65_Then:
    assume {:partition} BAND(in_ulUnicode, 0) == 0;
    goto L81;

  anon64_Then:
    goto L71;

  anon80_Then:
    goto L71;

  anon63_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L71;

  anon61_Then:
    assume {:partition} out_uChar != 44;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} 32 <= out_uChar;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_uChar <= 127;
    goto L80;

  anon66_Then:
    assume {:partition} 127 < out_uChar;
    goto L70;

  anon62_Then:
    assume {:partition} out_uChar < 32;
    goto L70;
}



procedure {:LoopProcedure} Sbp2_ProcessTextualDescriptor_loop_L60(in_i: int, in_Tmp_14: int, in_Tmp_16: int, in_Tmp_20: int, in_Tmp_21: int, in_pData: int, in_ulUnicode: int, in_Tmp_26: int, in_Tmp_27: int, in_dataLength: int, in_uChar: int) returns (out_i: int, out_Tmp_14: int, out_Tmp_16: int, out_Tmp_20: int, out_Tmp_21: int, out_Tmp_26: int, out_Tmp_27: int, out_uChar: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_14 == in_Tmp_14 || out_Tmp_14 == in_pData;
  free ensures {:va_keep} out_Tmp_16 == in_pData || out_Tmp_16 == in_Tmp_16;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength: int, in_Tmp_250: int, in_Tmp_259: int, in_Tmp_260: int, in_sdv_54: int, in_Tmp_277: int, in_Tmp_278: int, in_j: int, in_Tmp_281: int, in_Tmp_282: int, in_unitDirEntries: int, in_Tmp_292: int, in_vendorLeaf_1: int, in_status_6: int, in_sdv_60: int, in_offset: int, in_unitDependentDirectory_1: int, in_sdv_66: int, in_cromOffset: int, in_Tmp_305: int, in_Tmp_306: int, in_Tmp_310: int, in_Tmp_311: int, in_modelIdCount: int, in_Tmp_314: int, in_devListSize: int, in_firstDevInfo: int, in_Tmp_326: int, in_devInfo: int, in_sdv_79: int, in_ModelLeaf_2: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_250: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_277: int, out_Tmp_278: int, out_j: int, out_Tmp_281: int, out_Tmp_282: int, out_unitDirEntries: int, out_Tmp_292: int, out_status_6: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_310: int, out_Tmp_311: int, out_modelIdCount: int, out_Tmp_314: int, out_devListSize: int, out_Tmp_326: int)
{
  var vslice_dummy_var_3066: int;

  entry:
    out_Tmp_250, out_Tmp_259, out_Tmp_260, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_unitDirEntries, out_Tmp_292, out_status_6, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_Tmp_311, out_modelIdCount, out_Tmp_314, out_devListSize, out_Tmp_326 := in_Tmp_250, in_Tmp_259, in_Tmp_260, in_Tmp_277, in_Tmp_278, in_j, in_Tmp_281, in_Tmp_282, in_unitDirEntries, in_Tmp_292, in_status_6, in_Tmp_305, in_Tmp_306, in_Tmp_310, in_Tmp_311, in_modelIdCount, in_Tmp_314, in_devListSize, in_Tmp_326;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_259;
    assume {:nonnull} out_Tmp_259 != 0;
    assume out_Tmp_259 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_260;
    assume {:nonnull} out_Tmp_260 != 0;
    assume out_Tmp_260 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_278;
    assume {:nonnull} out_Tmp_278 != 0;
    assume out_Tmp_278 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_326;
    assume {:nonnull} out_Tmp_326 != 0;
    assume out_Tmp_326 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_311;
    assume {:nonnull} out_Tmp_311 != 0;
    assume out_Tmp_311 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3529} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_packet_1], 2);
    goto anon312_Then;

  anon312_Then:
    assume {:partition} 0 <= out_status_6;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_250;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} out_Tmp_250 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_310;
    assume {:nonnull} out_Tmp_310 != 0;
    assume out_Tmp_310 > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    havoc out_Tmp_292;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_281;
    call {:si_unique_call 3531} WPP_SF_q(out_Tmp_281, 47, out_Tmp_292, in_FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3530} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L311;

  L311:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    goto L316;

  L316:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    goto L318;

  L318:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    goto L320;

  L320:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    goto L322;

  L322:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L286;

  L286:
    out_Tmp_305 := in_unitDependentDirectory_1;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} out_Tmp_305 != 0;
    assume out_Tmp_305 > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:nonnull} out_Tmp_305 != 0;
    assume out_Tmp_305 > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    goto L364;

  L364:
    out_j := out_j + 1;
    goto anon403_Then;

  anon403_Then:
    assume {:partition} out_j <= INTDIV(in_dependentLength, 4);
    goto anon403_Then_dummy;

  anon403_Then_dummy:
    call {:si_unique_call 3536} {:si_old_unique_call 1} out_Tmp_250, out_Tmp_259, out_Tmp_260, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_unitDirEntries, out_Tmp_292, out_status_6, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_Tmp_311, out_modelIdCount, out_Tmp_314, out_devListSize, out_Tmp_326 := Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength, out_Tmp_250, out_Tmp_259, out_Tmp_260, in_sdv_54, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_unitDirEntries, out_Tmp_292, in_vendorLeaf_1, out_status_6, in_sdv_60, in_offset, in_unitDependentDirectory_1, in_sdv_66, in_cromOffset, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_Tmp_311, out_modelIdCount, out_Tmp_314, out_devListSize, in_firstDevInfo, out_Tmp_326, in_devInfo, in_sdv_79, in_ModelLeaf_2, in_packet_1, in_FdoExtension_2);
    return;

  anon370_Then:
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_277;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} out_Tmp_277 != 23;
    goto L364;

  anon404_Then:
    assume {:partition} out_Tmp_277 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3534} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_2);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_306;
    assume {:nonnull} out_Tmp_306 != 0;
    assume out_Tmp_306 > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    havoc out_Tmp_282;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_314;
    call {:si_unique_call 3535} WPP_SF_q(out_Tmp_314, 48, out_Tmp_282, in_FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_3066;
    call {:si_unique_call 3532} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3066, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 3533} sdv_ExFreePool(0);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto L344;

  L344:
    out_modelIdCount := out_modelIdCount + 1;
    goto L364;

  anon320_Then:
    goto L349;

  anon405_Then:
    goto L349;

  anon319_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L349;

  anon318_Then:
    goto L344;

  anon371_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon402_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon317_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L322;

  anon316_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L320;

  anon315_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L318;

  anon401_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L316;

  anon314_Then:
    goto L300;

  anon400_Then:
    goto L300;

  anon313_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon399_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L311;

  anon398_Then:
    assume {:partition} out_Tmp_250 != 20;
    goto L286;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength: int, in_Tmp_250: int, in_Tmp_259: int, in_Tmp_260: int, in_sdv_54: int, in_Tmp_277: int, in_Tmp_278: int, in_j: int, in_Tmp_281: int, in_Tmp_282: int, in_unitDirEntries: int, in_Tmp_292: int, in_vendorLeaf_1: int, in_status_6: int, in_sdv_60: int, in_offset: int, in_unitDependentDirectory_1: int, in_sdv_66: int, in_cromOffset: int, in_Tmp_305: int, in_Tmp_306: int, in_Tmp_310: int, in_Tmp_311: int, in_modelIdCount: int, in_Tmp_314: int, in_devListSize: int, in_firstDevInfo: int, in_Tmp_326: int, in_devInfo: int, in_sdv_79: int, in_ModelLeaf_2: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_250: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_277: int, out_Tmp_278: int, out_j: int, out_Tmp_281: int, out_Tmp_282: int, out_unitDirEntries: int, out_Tmp_292: int, out_status_6: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_310: int, out_Tmp_311: int, out_modelIdCount: int, out_Tmp_314: int, out_devListSize: int, out_Tmp_326: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, Mem_T.P_IRBIRP, locked, queuedWithoutMarking, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_Tmp_305 == in_Tmp_305 || out_Tmp_305 == in_unitDependentDirectory_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2Get1394ConfigInfo_loop_L214(in_Tmp_243: int, in_Tmp_249: int, in_Tmp_255: int, in_Tmp_265: int, in_Tmp_271: int, in_genPacket: int, in_Tmp_286: int, in_currentGeneration: int, in_status_6: int, in_Tmp_303: int, in_Tmp_320: int, in_Tmp_323: int, in_Tmp_339: int, in_retries: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_243: int, out_Tmp_249: int, out_Tmp_255: int, out_Tmp_265: int, out_Tmp_271: int, out_Tmp_286: int, out_status_6: int, out_Tmp_303: int, out_Tmp_320: int, out_Tmp_323: int, out_Tmp_339: int, out_retries: int)
{

  entry:
    out_Tmp_243, out_Tmp_249, out_Tmp_255, out_Tmp_265, out_Tmp_271, out_Tmp_286, out_status_6, out_Tmp_303, out_Tmp_320, out_Tmp_323, out_Tmp_339, out_retries := in_Tmp_243, in_Tmp_249, in_Tmp_255, in_Tmp_265, in_Tmp_271, in_Tmp_286, in_status_6, in_Tmp_303, in_Tmp_320, in_Tmp_323, in_Tmp_339, in_retries;
    goto L214, exit;

  exit:
    return;

  L214:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_271;
    assume {:nonnull} out_Tmp_271 != 0;
    assume out_Tmp_271 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3537} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_packet_1], 2);
    goto anon306_Then;

  anon306_Then:
    assume {:partition} 0 > out_status_6;
    goto anon307_Else;

  anon307_Else:
    assume {:partition} out_retries > 1;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_249;
    assume {:nonnull} out_Tmp_249 != 0;
    assume out_Tmp_249 > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    havoc out_Tmp_286;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_323;
    call {:si_unique_call 3539} WPP_SF_qD(out_Tmp_323, 43, out_Tmp_286, in_FdoExtension_2, out_status_6);
    goto L401;

  L401:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] != 0;
    goto L412;

  L412:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_320;
    assume {:nonnull} out_Tmp_320 != 0;
    assume out_Tmp_320 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_265;
    assume {:nonnull} out_Tmp_265 != 0;
    assume out_Tmp_265 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    call {:si_unique_call 3541} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_genPacket], 2);
    goto anon327_Then, anon327_Else;

  anon327_Else:
    assume {:partition} out_status_6 < 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_243;
    assume {:nonnull} out_Tmp_243 != 0;
    assume out_Tmp_243 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    havoc out_Tmp_255;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_339;
    call {:si_unique_call 3540} WPP_SF_qD(out_Tmp_339, 44, out_Tmp_255, in_FdoExtension_2, out_status_6);
    goto L424;

  L424:
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_303;
    assume {:nonnull} out_Tmp_303 != 0;
    assume out_Tmp_303 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    goto L413;

  L413:
    out_retries := out_retries - 1;
    goto anon408_Then;

  anon408_Then:
    assume {:partition} out_retries != 0;
    goto anon408_Then_dummy;

  anon408_Then_dummy:
    call {:si_unique_call 3542} {:si_old_unique_call 1} out_Tmp_243, out_Tmp_249, out_Tmp_255, out_Tmp_265, out_Tmp_271, out_Tmp_286, out_status_6, out_Tmp_303, out_Tmp_320, out_Tmp_323, out_Tmp_339, out_retries := Sbp2Get1394ConfigInfo_loop_L214(out_Tmp_243, out_Tmp_249, out_Tmp_255, out_Tmp_265, out_Tmp_271, in_genPacket, out_Tmp_286, in_currentGeneration, out_status_6, out_Tmp_303, out_Tmp_320, out_Tmp_323, out_Tmp_339, out_retries, in_packet_1, in_FdoExtension_2);
    return;

  anon329_Then:
    goto L424;

  anon409_Then:
    goto L424;

  anon328_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L424;

  anon327_Then:
    assume {:partition} 0 <= out_status_6;
    goto L424;

  anon326_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] == 0;
    goto L413;

  anon324_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] == 0;
    call {:si_unique_call 3538} AllocateIrpAndIrb(in_FdoExtension_2, in_genPacket);
    goto L412;

  anon325_Then:
    goto L401;

  anon407_Then:
    goto L401;

  anon323_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L401;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L214(in_Tmp_243: int, in_Tmp_249: int, in_Tmp_255: int, in_Tmp_265: int, in_Tmp_271: int, in_genPacket: int, in_Tmp_286: int, in_currentGeneration: int, in_status_6: int, in_Tmp_303: int, in_Tmp_320: int, in_Tmp_323: int, in_Tmp_339: int, in_retries: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_243: int, out_Tmp_249: int, out_Tmp_255: int, out_Tmp_265: int, out_Tmp_271: int, out_Tmp_286: int, out_status_6: int, out_Tmp_303: int, out_Tmp_320: int, out_Tmp_323: int, out_Tmp_339: int, out_retries: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2Get1394ConfigInfo_loop_L445(in_Tmp_236: int, in_sdv_48: int, in_dependentLength: int, in_Tmp_268: int, in_sdv_55: int, in_Tmp_275: int, in_Tmp_276: int, in_j: int, in_unitDirEntries: int, in_Tmp_287: int, in_Tmp_291: int, in_vendorLeaf_1: int, in_status_6: int, in_modelLeaf_1: int, in_Tmp_299: int, in_unitDependentDirectory_1: int, in_Tmp_301: int, in_Tmp_302: int, in_sdv_67: int, in_cromOffset: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_318: int, in_firstDevInfo: int, in_Tmp_327: int, in_ModelLeaf_1: int, in_sdv_76: int, in_Tmp_329: int, in_devInfo: int, in_dependentLocation: int, in_FdoExtension_2: int) returns (out_Tmp_236: int, out_Tmp_268: int, out_Tmp_275: int, out_Tmp_276: int, out_j: int, out_unitDirEntries: int, out_Tmp_287: int, out_Tmp_291: int, out_status_6: int, out_Tmp_299: int, out_Tmp_301: int, out_Tmp_302: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_318: int, out_Tmp_327: int, out_Tmp_329: int)
{
  var vslice_dummy_var_3067: int;
  var vslice_dummy_var_3068: int;

  entry:
    out_Tmp_236, out_Tmp_268, out_Tmp_275, out_Tmp_276, out_j, out_unitDirEntries, out_Tmp_287, out_Tmp_291, out_status_6, out_Tmp_299, out_Tmp_301, out_Tmp_302, out_modelIdCount, out_devListSize, out_Tmp_318, out_Tmp_327, out_Tmp_329 := in_Tmp_236, in_Tmp_268, in_Tmp_275, in_Tmp_276, in_j, in_unitDirEntries, in_Tmp_287, in_Tmp_291, in_status_6, in_Tmp_299, in_Tmp_301, in_Tmp_302, in_modelIdCount, in_devListSize, in_Tmp_318, in_Tmp_327, in_Tmp_329;
    goto L445, exit;

  exit:
    return;

  L445:
    goto anon332_Else;

  anon332_Else:
    assume {:partition} in_dependentLength > out_j;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_275;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:partition} out_Tmp_275 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L459;

  L459:
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_318;
    assume {:nonnull} out_Tmp_318 != 0;
    assume out_Tmp_318 > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc out_Tmp_299;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_276;
    call {:si_unique_call 3546} WPP_SF_q(out_Tmp_276, 40, out_Tmp_299, in_FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3543} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L476;

  L476:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    goto L480;

  L480:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    goto L482;

  L482:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    goto L484;

  L484:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    goto L486;

  L486:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L448;

  L448:
    out_Tmp_291 := in_unitDependentDirectory_1;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:nonnull} out_Tmp_291 != 0;
    assume out_Tmp_291 > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:nonnull} out_Tmp_291 != 0;
    assume out_Tmp_291 > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    goto L542;

  L542:
    out_j := out_j + 1;
    goto L542_dummy;

  L542_dummy:
    call {:si_unique_call 3551} {:si_old_unique_call 1} out_Tmp_236, out_Tmp_268, out_Tmp_275, out_Tmp_276, out_j, out_unitDirEntries, out_Tmp_287, out_Tmp_291, out_status_6, out_Tmp_299, out_Tmp_301, out_Tmp_302, out_modelIdCount, out_devListSize, out_Tmp_318, out_Tmp_327, out_Tmp_329 := Sbp2Get1394ConfigInfo_loop_L445(out_Tmp_236, in_sdv_48, in_dependentLength, out_Tmp_268, in_sdv_55, out_Tmp_275, out_Tmp_276, out_j, out_unitDirEntries, out_Tmp_287, out_Tmp_291, in_vendorLeaf_1, out_status_6, in_modelLeaf_1, out_Tmp_299, in_unitDependentDirectory_1, out_Tmp_301, out_Tmp_302, in_sdv_67, in_cromOffset, out_modelIdCount, out_devListSize, out_Tmp_318, in_firstDevInfo, out_Tmp_327, in_ModelLeaf_1, in_sdv_76, out_Tmp_329, in_devInfo, in_dependentLocation, in_FdoExtension_2);
    return;

  anon372_Then:
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_268;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:partition} out_Tmp_268 != 23;
    goto L542;

  anon416_Then:
    assume {:partition} out_Tmp_268 == 23;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3548} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_1);
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_3068;
    call {:si_unique_call 3549} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3068, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 3550} sdv_ExFreePool(0);
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_287;
    assume {:nonnull} out_Tmp_287 != 0;
    assume out_Tmp_287 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc out_Tmp_327;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_302;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_3067;
    call {:si_unique_call 3547} WPP_SF_S(out_Tmp_302, 41, out_Tmp_327, vslice_dummy_var_3067);
    goto L512;

  L512:
    out_modelIdCount := out_modelIdCount + 1;
    goto L542;

  anon345_Then:
    goto L512;

  anon417_Then:
    goto L512;

  anon344_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L512;

  anon343_Then:
    goto L512;

  anon342_Then:
    goto L512;

  anon373_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon415_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon339_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L486;

  anon338_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L484;

  anon337_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L482;

  anon414_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L480;

  anon336_Then:
    goto L465;

  anon413_Then:
    goto L465;

  anon335_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L465;

  anon334_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L476;

  anon412_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_301;
    assume {:nonnull} out_Tmp_301 != 0;
    assume out_Tmp_301 > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc out_Tmp_236;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_329;
    call {:si_unique_call 3545} WPP_SF_q(out_Tmp_329, 39, out_Tmp_236, in_FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3544} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(in_devInfo));
    goto L459;

  anon341_Then:
    goto L493;

  anon418_Then:
    goto L493;

  anon340_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L493;

  anon333_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L459;

  anon411_Then:
    assume {:partition} out_Tmp_275 != 20;
    goto L448;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L445(in_Tmp_236: int, in_sdv_48: int, in_dependentLength: int, in_Tmp_268: int, in_sdv_55: int, in_Tmp_275: int, in_Tmp_276: int, in_j: int, in_unitDirEntries: int, in_Tmp_287: int, in_Tmp_291: int, in_vendorLeaf_1: int, in_status_6: int, in_modelLeaf_1: int, in_Tmp_299: int, in_unitDependentDirectory_1: int, in_Tmp_301: int, in_Tmp_302: int, in_sdv_67: int, in_cromOffset: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_318: int, in_firstDevInfo: int, in_Tmp_327: int, in_ModelLeaf_1: int, in_sdv_76: int, in_Tmp_329: int, in_devInfo: int, in_dependentLocation: int, in_FdoExtension_2: int) returns (out_Tmp_236: int, out_Tmp_268: int, out_Tmp_275: int, out_Tmp_276: int, out_j: int, out_unitDirEntries: int, out_Tmp_287: int, out_Tmp_291: int, out_status_6: int, out_Tmp_299: int, out_Tmp_301: int, out_Tmp_302: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_318: int, out_Tmp_327: int, out_Tmp_329: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_Tmp_291 == in_Tmp_291 || out_Tmp_291 == in_unitDependentDirectory_1;
  free ensures {:va_keep} out_status_6 == -1073741670 || out_status_6 == 0 || out_status_6 == -1073741823 || out_status_6 == in_status_6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2Get1394ConfigInfo_loop_L132(in_Tmp_234: int, in_Tmp_235: int, in_Tmp_236: int, in_Tmp_240: int, in_Tmp_241: int, in_Tmp_243: int, in_Tmp_244: int, in_sdv_48: int, in_Tmp_247: int, in_Tmp_248: int, in_Tmp_249: int, in_dependentLength: int, in_sdv_50: int, in_Tmp_250: int, in_Tmp_253: int, in_Tmp_255: int, in_Tmp_256: int, in_Tmp_257: int, in_sdv_52: int, in_Tmp_259: int, in_Tmp_260: int, in_Tmp_264: int, in_sdv_54: int, in_Tmp_265: int, in_Tmp_266: int, in_Tmp_268: int, in_tmp: int, in_Tmp_270: int, in_Tmp_271: int, in_sdv_55: int, in_i_1: int, in_Tmp_272: int, in_genPacket: int, in_Tmp_273: int, in_Tmp_275: int, in_Tmp_276: int, in_Tmp_277: int, in_Tmp_278: int, in_j: int, in_Tmp_281: int, in_sdv_56: int, in_Tmp_282: int, in_Tmp_283: int, in_Tmp_284: int, in_unitDirEntries: int, in_Tmp_286: int, in_Tmp_287: int, in_currentGeneration: int, in_Tmp_290: int, in_sdv_58: int, in_Tmp_291: int, in_Tmp_292: int, in_vendorLeaf_1: int, in_Tmp_293: int, in_sdv_59: int, in_status_6: int, in_sdv_60: int, in_Tmp_298: int, in_offset: int, in_modelLeaf_1: int, in_Tmp_299: int, in_unitDependentDirectory_1: int, in_sdv_63: int, in_sdv_64: int, in_Tmp_301: int, in_Tmp_302: int, in_sdv_66: int, in_Tmp_303: int, in_sdv_67: int, in_Tmp_304: int, in_cromOffset: int, in_Tmp_305: int, in_Tmp_306: int, in_Tmp_310: int, in_directoryLength: int, in_sdv_68: int, in_Tmp_311: int, in_Tmp_312: int, in_Tmp_313: int, in_modelIdCount: int, in_Tmp_314: int, in_dirInfoQuad: int, in_Tmp_315: int, in_devListSize: int, in_firstOne: int, in_Tmp_316: int, in_sdv_70: int, in_Tmp_317: int, in_Tmp_318: int, in_Tmp_319: int, in_sdv_71: int, in_Tmp_320: int, in_directoryLocation: int, in_sbp2Device: int, in_firstDevInfo: int, in_Tmp_323: int, in_Tmp_324: int, in_Tmp_326: int, in_sdv_75: int, in_ModelLeaf: int, in_Tmp_327: int, in_ModelLeaf_1: int, in_sdv_76: int, in_Tmp_329: int, in_Tmp_334: int, in_Tmp_336: int, in_Tmp_339: int, in_Tmp_340: int, in_devInfo: int, in_sdv_79: int, in_sdv_80: int, in_Tmp_342: int, in_Tmp_343: int, in_retries: int, in_dependentLocation: int, in_Tmp_346: int, in_unitDirectory_1: int, in_ModelLeaf_2: int, in_packet_1: int, in_Tmp_347: int, in_info: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_351: int, in_FdoExtension_2: int, in_Sbp2Req: int) returns (out_Tmp_234: int, out_Tmp_235: int, out_Tmp_236: int, out_Tmp_240: int, out_Tmp_241: int, out_Tmp_243: int, out_Tmp_244: int, out_Tmp_247: int, out_Tmp_248: int, out_Tmp_249: int, out_dependentLength: int, out_sdv_50: int, out_Tmp_250: int, out_Tmp_253: int, out_Tmp_255: int, out_Tmp_256: int, out_Tmp_257: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_264: int, out_Tmp_265: int, out_Tmp_266: int, out_Tmp_268: int, out_tmp: int, out_Tmp_270: int, out_Tmp_271: int, out_i_1: int, out_Tmp_272: int, out_Tmp_273: int, out_Tmp_275: int, out_Tmp_276: int, out_Tmp_277: int, out_Tmp_278: int, out_j: int, out_Tmp_281: int, out_Tmp_282: int, out_Tmp_283: int, out_Tmp_284: int, out_unitDirEntries: int, out_Tmp_286: int, out_Tmp_287: int, out_Tmp_290: int, out_sdv_58: int, out_Tmp_291: int, out_Tmp_292: int, out_Tmp_293: int, out_status_6: int, out_Tmp_298: int, out_offset: int, out_Tmp_299: int, out_unitDependentDirectory_1: int, out_Tmp_301: int, out_Tmp_302: int, out_Tmp_303: int, out_Tmp_304: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_310: int, out_sdv_68: int, out_Tmp_311: int, out_Tmp_312: int, out_Tmp_313: int, out_modelIdCount: int, out_Tmp_314: int, out_dirInfoQuad: int, out_Tmp_315: int, out_devListSize: int, out_firstOne: int, out_Tmp_316: int, out_Tmp_317: int, out_Tmp_318: int, out_Tmp_319: int, out_Tmp_320: int, out_sbp2Device: int, out_Tmp_323: int, out_Tmp_324: int, out_Tmp_326: int, out_Tmp_327: int, out_Tmp_329: int, out_Tmp_334: int, out_Tmp_336: int, out_Tmp_339: int, out_Tmp_340: int, out_devInfo: int, out_Tmp_342: int, out_Tmp_343: int, out_retries: int, out_Tmp_346: int, out_Tmp_347: int, out_info: int, out_Tmp_349: int, out_Tmp_350: int, out_Tmp_351: int)
{
  var vslice_dummy_var_3069: int;
  var vslice_dummy_var_3070: int;
  var vslice_dummy_var_3071: int;
  var vslice_dummy_var_3072: int;
  var vslice_dummy_var_3073: int;
  var vslice_dummy_var_3074: int;

  entry:
    out_Tmp_234, out_Tmp_235, out_Tmp_236, out_Tmp_240, out_Tmp_241, out_Tmp_243, out_Tmp_244, out_Tmp_247, out_Tmp_248, out_Tmp_249, out_dependentLength, out_sdv_50, out_Tmp_250, out_Tmp_253, out_Tmp_255, out_Tmp_256, out_Tmp_257, out_Tmp_259, out_Tmp_260, out_Tmp_264, out_Tmp_265, out_Tmp_266, out_Tmp_268, out_tmp, out_Tmp_270, out_Tmp_271, out_i_1, out_Tmp_272, out_Tmp_273, out_Tmp_275, out_Tmp_276, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_Tmp_283, out_Tmp_284, out_unitDirEntries, out_Tmp_286, out_Tmp_287, out_Tmp_290, out_sdv_58, out_Tmp_291, out_Tmp_292, out_Tmp_293, out_status_6, out_Tmp_298, out_offset, out_Tmp_299, out_unitDependentDirectory_1, out_Tmp_301, out_Tmp_302, out_Tmp_303, out_Tmp_304, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_sdv_68, out_Tmp_311, out_Tmp_312, out_Tmp_313, out_modelIdCount, out_Tmp_314, out_dirInfoQuad, out_Tmp_315, out_devListSize, out_firstOne, out_Tmp_316, out_Tmp_317, out_Tmp_318, out_Tmp_319, out_Tmp_320, out_sbp2Device, out_Tmp_323, out_Tmp_324, out_Tmp_326, out_Tmp_327, out_Tmp_329, out_Tmp_334, out_Tmp_336, out_Tmp_339, out_Tmp_340, out_devInfo, out_Tmp_342, out_Tmp_343, out_retries, out_Tmp_346, out_Tmp_347, out_info, out_Tmp_349, out_Tmp_350, out_Tmp_351 := in_Tmp_234, in_Tmp_235, in_Tmp_236, in_Tmp_240, in_Tmp_241, in_Tmp_243, in_Tmp_244, in_Tmp_247, in_Tmp_248, in_Tmp_249, in_dependentLength, in_sdv_50, in_Tmp_250, in_Tmp_253, in_Tmp_255, in_Tmp_256, in_Tmp_257, in_Tmp_259, in_Tmp_260, in_Tmp_264, in_Tmp_265, in_Tmp_266, in_Tmp_268, in_tmp, in_Tmp_270, in_Tmp_271, in_i_1, in_Tmp_272, in_Tmp_273, in_Tmp_275, in_Tmp_276, in_Tmp_277, in_Tmp_278, in_j, in_Tmp_281, in_Tmp_282, in_Tmp_283, in_Tmp_284, in_unitDirEntries, in_Tmp_286, in_Tmp_287, in_Tmp_290, in_sdv_58, in_Tmp_291, in_Tmp_292, in_Tmp_293, in_status_6, in_Tmp_298, in_offset, in_Tmp_299, in_unitDependentDirectory_1, in_Tmp_301, in_Tmp_302, in_Tmp_303, in_Tmp_304, in_Tmp_305, in_Tmp_306, in_Tmp_310, in_sdv_68, in_Tmp_311, in_Tmp_312, in_Tmp_313, in_modelIdCount, in_Tmp_314, in_dirInfoQuad, in_Tmp_315, in_devListSize, in_firstOne, in_Tmp_316, in_Tmp_317, in_Tmp_318, in_Tmp_319, in_Tmp_320, in_sbp2Device, in_Tmp_323, in_Tmp_324, in_Tmp_326, in_Tmp_327, in_Tmp_329, in_Tmp_334, in_Tmp_336, in_Tmp_339, in_Tmp_340, in_devInfo, in_Tmp_342, in_Tmp_343, in_retries, in_Tmp_346, in_Tmp_347, in_info, in_Tmp_349, in_Tmp_350, in_Tmp_351;
    goto L132, exit;

  exit:
    return;

  L132:
    goto anon292_Then;

  anon292_Then:
    assume {:partition} in_Sbp2Req == 0;
    goto anon293_Else;

  anon293_Else:
    assume {:partition} in_directoryLength > out_i_1;
    out_Tmp_343 := out_devListSize;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_256;
    out_devInfo := out_Tmp_256 + out_Tmp_343 * 268;
    out_Tmp_316 := in_unitDirectory_1;
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    goto L371;

  L371:
    out_i_1 := out_i_1 + 1;
    goto L371_dummy;

  L371_dummy:
    call {:si_unique_call 3593} {:si_old_unique_call 1} out_Tmp_234, out_Tmp_235, out_Tmp_236, out_Tmp_240, out_Tmp_241, out_Tmp_243, out_Tmp_244, out_Tmp_247, out_Tmp_248, out_Tmp_249, out_dependentLength, out_sdv_50, out_Tmp_250, out_Tmp_253, out_Tmp_255, out_Tmp_256, out_Tmp_257, out_Tmp_259, out_Tmp_260, out_Tmp_264, out_Tmp_265, out_Tmp_266, out_Tmp_268, out_tmp, out_Tmp_270, out_Tmp_271, out_i_1, out_Tmp_272, out_Tmp_273, out_Tmp_275, out_Tmp_276, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_Tmp_283, out_Tmp_284, out_unitDirEntries, out_Tmp_286, out_Tmp_287, out_Tmp_290, out_sdv_58, out_Tmp_291, out_Tmp_292, out_Tmp_293, out_status_6, out_Tmp_298, out_offset, out_Tmp_299, out_unitDependentDirectory_1, out_Tmp_301, out_Tmp_302, out_Tmp_303, out_Tmp_304, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_sdv_68, out_Tmp_311, out_Tmp_312, out_Tmp_313, out_modelIdCount, out_Tmp_314, out_dirInfoQuad, out_Tmp_315, out_devListSize, out_firstOne, out_Tmp_316, out_Tmp_317, out_Tmp_318, out_Tmp_319, out_Tmp_320, out_sbp2Device, out_Tmp_323, out_Tmp_324, out_Tmp_326, out_Tmp_327, out_Tmp_329, out_Tmp_334, out_Tmp_336, out_Tmp_339, out_Tmp_340, out_devInfo, out_Tmp_342, out_Tmp_343, out_retries, out_Tmp_346, out_Tmp_347, out_info, out_Tmp_349, out_Tmp_350, out_Tmp_351 := Sbp2Get1394ConfigInfo_loop_L132(out_Tmp_234, out_Tmp_235, out_Tmp_236, out_Tmp_240, out_Tmp_241, out_Tmp_243, out_Tmp_244, in_sdv_48, out_Tmp_247, out_Tmp_248, out_Tmp_249, out_dependentLength, out_sdv_50, out_Tmp_250, out_Tmp_253, out_Tmp_255, out_Tmp_256, out_Tmp_257, in_sdv_52, out_Tmp_259, out_Tmp_260, out_Tmp_264, in_sdv_54, out_Tmp_265, out_Tmp_266, out_Tmp_268, out_tmp, out_Tmp_270, out_Tmp_271, in_sdv_55, out_i_1, out_Tmp_272, in_genPacket, out_Tmp_273, out_Tmp_275, out_Tmp_276, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, in_sdv_56, out_Tmp_282, out_Tmp_283, out_Tmp_284, out_unitDirEntries, out_Tmp_286, out_Tmp_287, in_currentGeneration, out_Tmp_290, out_sdv_58, out_Tmp_291, out_Tmp_292, in_vendorLeaf_1, out_Tmp_293, in_sdv_59, out_status_6, in_sdv_60, out_Tmp_298, out_offset, in_modelLeaf_1, out_Tmp_299, out_unitDependentDirectory_1, in_sdv_63, in_sdv_64, out_Tmp_301, out_Tmp_302, in_sdv_66, out_Tmp_303, in_sdv_67, out_Tmp_304, in_cromOffset, out_Tmp_305, out_Tmp_306, out_Tmp_310, in_directoryLength, out_sdv_68, out_Tmp_311, out_Tmp_312, out_Tmp_313, out_modelIdCount, out_Tmp_314, out_dirInfoQuad, out_Tmp_315, out_devListSize, out_firstOne, out_Tmp_316, in_sdv_70, out_Tmp_317, out_Tmp_318, out_Tmp_319, in_sdv_71, out_Tmp_320, in_directoryLocation, out_sbp2Device, in_firstDevInfo, out_Tmp_323, out_Tmp_324, out_Tmp_326, in_sdv_75, in_ModelLeaf, out_Tmp_327, in_ModelLeaf_1, in_sdv_76, out_Tmp_329, out_Tmp_334, out_Tmp_336, out_Tmp_339, out_Tmp_340, out_devInfo, in_sdv_79, in_sdv_80, out_Tmp_342, out_Tmp_343, out_retries, in_dependentLocation, out_Tmp_346, in_unitDirectory_1, in_ModelLeaf_2, in_packet_1, out_Tmp_347, out_info, out_Tmp_349, out_Tmp_350, out_Tmp_351, in_FdoExtension_2, in_Sbp2Req);
    return;

  anon362_Then:
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume {:partition} out_firstOne != 0;
    out_retries := 3;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    Mem_T.P_IRBIRP[in_genPacket] := 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    havoc out_offset;
    call {:si_unique_call 3586} out_sdv_58 := IoAllocateMdl(0, out_dependentLength, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_283;
    assume {:nonnull} out_Tmp_283 != 0;
    assume out_Tmp_283 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_350;
    assume {:nonnull} out_Tmp_350 != 0;
    assume out_Tmp_350 > 0;
    goto anon393_Then;

  anon393_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_244;
    assume {:nonnull} out_Tmp_244 != 0;
    assume out_Tmp_244 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_247;
    assume {:nonnull} out_Tmp_247 != 0;
    assume out_Tmp_247 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_315;
    assume {:nonnull} out_Tmp_315 != 0;
    assume out_Tmp_315 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_270;
    assume {:nonnull} out_Tmp_270 != 0;
    assume out_Tmp_270 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_235;
    assume {:nonnull} out_Tmp_235 != 0;
    assume out_Tmp_235 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_317;
    assume {:nonnull} out_Tmp_317 != 0;
    assume out_Tmp_317 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_319;
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_234;
    assume {:nonnull} out_Tmp_234 != 0;
    assume out_Tmp_234 > 0;
    goto L214;

  L214:
    call {:si_unique_call 3580} out_Tmp_243, out_Tmp_249, out_Tmp_255, out_Tmp_265, out_Tmp_271, out_Tmp_286, out_status_6, out_Tmp_303, out_Tmp_320, out_Tmp_323, out_Tmp_339, out_retries := Sbp2Get1394ConfigInfo_loop_L214(out_Tmp_243, out_Tmp_249, out_Tmp_255, out_Tmp_265, out_Tmp_271, in_genPacket, out_Tmp_286, in_currentGeneration, out_status_6, out_Tmp_303, out_Tmp_320, out_Tmp_323, out_Tmp_339, out_retries, in_packet_1, in_FdoExtension_2);
    goto L214_last;

  L214_last:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_271;
    assume {:nonnull} out_Tmp_271 != 0;
    assume out_Tmp_271 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3581} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_packet_1], 2);
    goto anon306_Then, anon306_Else;

  anon306_Else:
    assume {:partition} out_status_6 >= 0;
    goto L222;

  L222:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    call {:si_unique_call 3579} DeAllocateIrpAndIrb(in_FdoExtension_2, Mem_T.P_IRBIRP[in_genPacket]);
    goto L223;

  L223:
    goto anon309_Else;

  anon309_Else:
    assume {:partition} out_status_6 >= 0;
    call {:si_unique_call 3577} out_dirInfoQuad := corral_nondet();
    out_dependentLength := out_dirInfoQuad * 4;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3578} IoFreeMdl(0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_298;
    assume {:nonnull} out_Tmp_298 != 0;
    assume out_Tmp_298 > 0;
    goto anon394_Then;

  anon394_Then:
    assume {:partition} 256 >= out_dependentLength;
    call {:si_unique_call 3575} sdv_ExFreePool(0);
    out_Tmp_334 := out_dependentLength + 4;
    call {:si_unique_call 3576} out_sdv_50 := ExAllocatePoolWithTag(512, out_Tmp_334, -464166317);
    out_unitDependentDirectory_1 := out_sdv_50;
    goto anon396_Else;

  anon396_Else:
    assume {:partition} out_unitDependentDirectory_1 != 0;
    out_Tmp_253 := out_dependentLength + 4;
    call {:si_unique_call 3574} out_sdv_68 := IoAllocateMdl(0, out_Tmp_253, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_272;
    assume {:nonnull} out_Tmp_272 != 0;
    assume out_Tmp_272 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_248;
    assume {:nonnull} out_Tmp_248 != 0;
    assume out_Tmp_248 > 0;
    goto anon397_Else;

  anon397_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    out_j := 1;
    goto L273;

  L273:
    call {:si_unique_call 3572} out_Tmp_250, out_Tmp_259, out_Tmp_260, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_unitDirEntries, out_Tmp_292, out_status_6, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_Tmp_311, out_modelIdCount, out_Tmp_314, out_devListSize, out_Tmp_326 := Sbp2Get1394ConfigInfo_loop_L273(out_dependentLength, out_Tmp_250, out_Tmp_259, out_Tmp_260, in_sdv_54, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_unitDirEntries, out_Tmp_292, in_vendorLeaf_1, out_status_6, in_sdv_60, out_offset, out_unitDependentDirectory_1, in_sdv_66, in_cromOffset, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_Tmp_311, out_modelIdCount, out_Tmp_314, out_devListSize, in_firstDevInfo, out_Tmp_326, out_devInfo, in_sdv_79, in_ModelLeaf_2, in_packet_1, in_FdoExtension_2);
    goto L273_last;

  L273_last:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_259;
    assume {:nonnull} out_Tmp_259 != 0;
    assume out_Tmp_259 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_260;
    assume {:nonnull} out_Tmp_260 != 0;
    assume out_Tmp_260 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_278;
    assume {:nonnull} out_Tmp_278 != 0;
    assume out_Tmp_278 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_326;
    assume {:nonnull} out_Tmp_326 != 0;
    assume out_Tmp_326 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_311;
    assume {:nonnull} out_Tmp_311 != 0;
    assume out_Tmp_311 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3573} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_packet_1], 2);
    goto anon312_Then;

  anon312_Then:
    assume {:partition} 0 <= out_status_6;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_250;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} out_Tmp_250 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_310;
    assume {:nonnull} out_Tmp_310 != 0;
    assume out_Tmp_310 > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    havoc out_Tmp_292;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_281;
    call {:si_unique_call 3588} WPP_SF_q(out_Tmp_281, 47, out_Tmp_292, in_FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3587} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L311;

  L311:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    goto L316;

  L316:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    goto L318;

  L318:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    goto L320;

  L320:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    goto L322;

  L322:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L286;

  L286:
    out_Tmp_305 := out_unitDependentDirectory_1;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} out_Tmp_305 != 0;
    assume out_Tmp_305 > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:nonnull} out_Tmp_305 != 0;
    assume out_Tmp_305 > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    goto L364;

  L364:
    out_j := out_j + 1;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:partition} INTDIV(out_dependentLength, 4) < out_j;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3552} IoFreeMdl(0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_241;
    assume {:nonnull} out_Tmp_241 != 0;
    assume out_Tmp_241 > 0;
    goto L371;

  anon403_Then:
    assume {:partition} out_j <= INTDIV(out_dependentLength, 4);
    assume false;
    return;

  anon370_Then:
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_277;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} out_Tmp_277 != 23;
    goto L364;

  anon404_Then:
    assume {:partition} out_Tmp_277 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3591} Sbp2ParseTextLeaf(in_FdoExtension_2, out_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_2);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_306;
    assume {:nonnull} out_Tmp_306 != 0;
    assume out_Tmp_306 > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    havoc out_Tmp_282;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_314;
    call {:si_unique_call 3592} WPP_SF_q(out_Tmp_314, 48, out_Tmp_282, in_FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_3074;
    call {:si_unique_call 3589} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3074, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 3590} sdv_ExFreePool(0);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto L344;

  L344:
    out_modelIdCount := out_modelIdCount + 1;
    goto L364;

  anon320_Then:
    goto L349;

  anon405_Then:
    goto L349;

  anon319_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L349;

  anon318_Then:
    goto L344;

  anon371_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon402_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon317_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L322;

  anon316_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L320;

  anon315_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L318;

  anon401_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L316;

  anon314_Then:
    goto L300;

  anon400_Then:
    goto L300;

  anon313_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon399_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L311;

  anon398_Then:
    assume {:partition} out_Tmp_250 != 20;
    goto L286;

  anon308_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] == 0;
    goto L223;

  anon306_Then:
    assume {:partition} 0 > out_status_6;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    assume {:partition} out_retries > 1;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_249;
    assume {:nonnull} out_Tmp_249 != 0;
    assume out_Tmp_249 > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    havoc out_Tmp_286;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_323;
    call {:si_unique_call 3583} WPP_SF_qD(out_Tmp_323, 43, out_Tmp_286, in_FdoExtension_2, out_status_6);
    goto L401;

  L401:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] != 0;
    goto L412;

  L412:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_320;
    assume {:nonnull} out_Tmp_320 != 0;
    assume out_Tmp_320 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_265;
    assume {:nonnull} out_Tmp_265 != 0;
    assume out_Tmp_265 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    call {:si_unique_call 3585} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_genPacket], 2);
    goto anon327_Then, anon327_Else;

  anon327_Else:
    assume {:partition} out_status_6 < 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_243;
    assume {:nonnull} out_Tmp_243 != 0;
    assume out_Tmp_243 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    havoc out_Tmp_255;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_339;
    call {:si_unique_call 3584} WPP_SF_qD(out_Tmp_339, 44, out_Tmp_255, in_FdoExtension_2, out_status_6);
    goto L424;

  L424:
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_303;
    assume {:nonnull} out_Tmp_303 != 0;
    assume out_Tmp_303 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    goto L413;

  L413:
    out_retries := out_retries - 1;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:partition} out_retries == 0;
    goto L222;

  anon408_Then:
    assume {:partition} out_retries != 0;
    assume false;
    return;

  anon329_Then:
    goto L424;

  anon409_Then:
    goto L424;

  anon328_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L424;

  anon327_Then:
    assume {:partition} 0 <= out_status_6;
    goto L424;

  anon326_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] == 0;
    goto L413;

  anon324_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] == 0;
    call {:si_unique_call 3582} AllocateIrpAndIrb(in_FdoExtension_2, in_genPacket);
    goto L412;

  anon325_Then:
    goto L401;

  anon407_Then:
    goto L401;

  anon323_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L401;

  anon307_Then:
    assume {:partition} 1 >= out_retries;
    goto L222;

  anon305_Then:
    assume {:partition} out_firstOne == 0;
    out_firstOne := 1;
    out_j := 0;
    goto L445;

  L445:
    call {:si_unique_call 3563} out_Tmp_236, out_Tmp_268, out_Tmp_275, out_Tmp_276, out_j, out_unitDirEntries, out_Tmp_287, out_Tmp_291, out_status_6, out_Tmp_299, out_Tmp_301, out_Tmp_302, out_modelIdCount, out_devListSize, out_Tmp_318, out_Tmp_327, out_Tmp_329 := Sbp2Get1394ConfigInfo_loop_L445(out_Tmp_236, in_sdv_48, out_dependentLength, out_Tmp_268, in_sdv_55, out_Tmp_275, out_Tmp_276, out_j, out_unitDirEntries, out_Tmp_287, out_Tmp_291, in_vendorLeaf_1, out_status_6, in_modelLeaf_1, out_Tmp_299, out_unitDependentDirectory_1, out_Tmp_301, out_Tmp_302, in_sdv_67, in_cromOffset, out_modelIdCount, out_devListSize, out_Tmp_318, in_firstDevInfo, out_Tmp_327, in_ModelLeaf_1, in_sdv_76, out_Tmp_329, out_devInfo, in_dependentLocation, in_FdoExtension_2);
    goto L445_last;

  L445_last:
    goto anon332_Then, anon332_Else;

  anon332_Else:
    assume {:partition} out_dependentLength > out_j;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_275;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:partition} out_Tmp_275 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L459;

  L459:
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_318;
    assume {:nonnull} out_Tmp_318 != 0;
    assume out_Tmp_318 > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc out_Tmp_299;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_276;
    call {:si_unique_call 3567} WPP_SF_q(out_Tmp_276, 40, out_Tmp_299, in_FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3564} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L476;

  L476:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    goto L480;

  L480:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    goto L482;

  L482:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    goto L484;

  L484:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    goto L486;

  L486:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L448;

  L448:
    out_Tmp_291 := out_unitDependentDirectory_1;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:nonnull} out_Tmp_291 != 0;
    assume out_Tmp_291 > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:nonnull} out_Tmp_291 != 0;
    assume out_Tmp_291 > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    goto L542;

  L542:
    out_j := out_j + 1;
    assume false;
    return;

  anon372_Then:
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_268;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:partition} out_Tmp_268 != 23;
    goto L542;

  anon416_Then:
    assume {:partition} out_Tmp_268 == 23;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3569} Sbp2ParseTextLeaf(in_FdoExtension_2, out_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_1);
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_3073;
    call {:si_unique_call 3570} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3073, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 3571} sdv_ExFreePool(0);
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_287;
    assume {:nonnull} out_Tmp_287 != 0;
    assume out_Tmp_287 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc out_Tmp_327;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_302;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_3072;
    call {:si_unique_call 3568} WPP_SF_S(out_Tmp_302, 41, out_Tmp_327, vslice_dummy_var_3072);
    goto L512;

  L512:
    out_modelIdCount := out_modelIdCount + 1;
    goto L542;

  anon345_Then:
    goto L512;

  anon417_Then:
    goto L512;

  anon344_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L512;

  anon343_Then:
    goto L512;

  anon342_Then:
    goto L512;

  anon373_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon415_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon339_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L486;

  anon338_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L484;

  anon337_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L482;

  anon414_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L480;

  anon336_Then:
    goto L465;

  anon413_Then:
    goto L465;

  anon335_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L465;

  anon334_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L476;

  anon412_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_301;
    assume {:nonnull} out_Tmp_301 != 0;
    assume out_Tmp_301 > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc out_Tmp_236;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_329;
    call {:si_unique_call 3566} WPP_SF_q(out_Tmp_329, 39, out_Tmp_236, in_FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3565} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L459;

  anon341_Then:
    goto L493;

  anon418_Then:
    goto L493;

  anon340_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L493;

  anon333_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L459;

  anon411_Then:
    assume {:partition} out_Tmp_275 != 20;
    goto L448;

  anon332_Then:
    assume {:partition} out_j >= out_dependentLength;
    goto L371;

  anon363_Then:
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    havoc out_Tmp_290;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:partition} out_Tmp_290 == 23;
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} out_devListSize >= out_modelIdCount;
    out_Tmp_264 := out_modelIdCount;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_313;
    out_info := out_Tmp_313 + out_Tmp_264 * 268;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3560} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDirectory_1, in_cromOffset, in_ModelLeaf);
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    havoc vslice_dummy_var_3071;
    call {:si_unique_call 3561} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3071, uniModelId__DEVICE_INFORMATION(out_info));
    call {:si_unique_call 3562} sdv_ExFreePool(0);
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_293;
    assume {:nonnull} out_Tmp_293 != 0;
    assume out_Tmp_293 > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    havoc out_Tmp_257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_266;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    havoc vslice_dummy_var_3070;
    call {:si_unique_call 3559} WPP_SF_S(out_Tmp_266, 38, out_Tmp_257, vslice_dummy_var_3070);
    goto L562;

  L562:
    out_modelIdCount := out_modelIdCount + 1;
    goto L371;

  anon349_Then:
    goto L562;

  anon392_Then:
    goto L562;

  anon348_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L562;

  anon347_Then:
    goto L562;

  anon391_Then:
    goto L562;

  anon346_Then:
    assume {:partition} out_modelIdCount > out_devListSize;
    goto L371;

  anon390_Then:
    assume {:partition} out_Tmp_290 != 23;
    goto L371;

  anon364_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_sbp2Device := 1;
    goto L371;

  anon365_Then:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} in_sdv_63 != 0;
    out_Tmp_342 := 1;
    goto L605;

  L605:
    out_tmp := out_Tmp_342;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:partition} out_tmp != 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L371;

  anon389_Then:
    assume {:partition} out_tmp == 0;
    goto L371;

  anon350_Then:
    assume {:partition} in_sdv_63 == 0;
    out_Tmp_342 := 0;
    goto L605;

  anon366_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_312;
    assume {:nonnull} out_Tmp_312 != 0;
    assume out_Tmp_312 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    havoc out_Tmp_340;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_240;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc vslice_dummy_var_3069;
    call {:si_unique_call 3553} WPP_SF_qD(out_Tmp_240, 35, out_Tmp_340, in_FdoExtension_2, vslice_dummy_var_3069);
    goto L371;

  anon351_Then:
    goto L371;

  anon388_Then:
    goto L371;

  anon387_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L371;

  anon367_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc out_Tmp_351;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:partition} 8 > out_Tmp_351;
    out_Tmp_284 := 8;
    goto L633;

  L633:
    out_tmp := out_Tmp_284;
    out_tmp := out_tmp * 4;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} 16 > out_tmp - 20;
    out_Tmp_349 := out_tmp - 20;
    goto L638;

  L638:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    call {:si_unique_call 3554} out_tmp := corral_nondet();
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon386_Then:
    assume {:partition} out_tmp - 20 >= 16;
    out_Tmp_349 := 16;
    goto L638;

  anon385_Then:
    assume {:partition} out_Tmp_351 >= 8;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc out_Tmp_284;
    goto L633;

  anon368_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon369_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon381_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} out_devListSize != 0;
    goto L661;

  L661:
    goto anon353_Then, anon353_Else;

  anon353_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_346;
    assume {:nonnull} out_Tmp_346 != 0;
    assume out_Tmp_346 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    havoc out_Tmp_324;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_304;
    call {:si_unique_call 3558} WPP_SF_q(out_Tmp_304, 37, out_Tmp_324, in_FdoExtension_2);
    goto L667;

  L667:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3555} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L678;

  L678:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon355_Then:
    goto L667;

  anon383_Then:
    goto L667;

  anon354_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L667;

  anon353_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L678;

  anon382_Then:
    assume {:partition} out_devListSize == 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_273;
    assume {:nonnull} out_Tmp_273 != 0;
    assume out_Tmp_273 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc out_Tmp_347;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_336;
    call {:si_unique_call 3557} WPP_SF_q(out_Tmp_336, 36, out_Tmp_347, in_FdoExtension_2);
    goto L693;

  L693:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3556} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L661;

  anon357_Then:
    goto L693;

  anon384_Then:
    goto L693;

  anon356_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L693;

  anon352_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L661;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L132(in_Tmp_234: int, in_Tmp_235: int, in_Tmp_236: int, in_Tmp_240: int, in_Tmp_241: int, in_Tmp_243: int, in_Tmp_244: int, in_sdv_48: int, in_Tmp_247: int, in_Tmp_248: int, in_Tmp_249: int, in_dependentLength: int, in_sdv_50: int, in_Tmp_250: int, in_Tmp_253: int, in_Tmp_255: int, in_Tmp_256: int, in_Tmp_257: int, in_sdv_52: int, in_Tmp_259: int, in_Tmp_260: int, in_Tmp_264: int, in_sdv_54: int, in_Tmp_265: int, in_Tmp_266: int, in_Tmp_268: int, in_tmp: int, in_Tmp_270: int, in_Tmp_271: int, in_sdv_55: int, in_i_1: int, in_Tmp_272: int, in_genPacket: int, in_Tmp_273: int, in_Tmp_275: int, in_Tmp_276: int, in_Tmp_277: int, in_Tmp_278: int, in_j: int, in_Tmp_281: int, in_sdv_56: int, in_Tmp_282: int, in_Tmp_283: int, in_Tmp_284: int, in_unitDirEntries: int, in_Tmp_286: int, in_Tmp_287: int, in_currentGeneration: int, in_Tmp_290: int, in_sdv_58: int, in_Tmp_291: int, in_Tmp_292: int, in_vendorLeaf_1: int, in_Tmp_293: int, in_sdv_59: int, in_status_6: int, in_sdv_60: int, in_Tmp_298: int, in_offset: int, in_modelLeaf_1: int, in_Tmp_299: int, in_unitDependentDirectory_1: int, in_sdv_63: int, in_sdv_64: int, in_Tmp_301: int, in_Tmp_302: int, in_sdv_66: int, in_Tmp_303: int, in_sdv_67: int, in_Tmp_304: int, in_cromOffset: int, in_Tmp_305: int, in_Tmp_306: int, in_Tmp_310: int, in_directoryLength: int, in_sdv_68: int, in_Tmp_311: int, in_Tmp_312: int, in_Tmp_313: int, in_modelIdCount: int, in_Tmp_314: int, in_dirInfoQuad: int, in_Tmp_315: int, in_devListSize: int, in_firstOne: int, in_Tmp_316: int, in_sdv_70: int, in_Tmp_317: int, in_Tmp_318: int, in_Tmp_319: int, in_sdv_71: int, in_Tmp_320: int, in_directoryLocation: int, in_sbp2Device: int, in_firstDevInfo: int, in_Tmp_323: int, in_Tmp_324: int, in_Tmp_326: int, in_sdv_75: int, in_ModelLeaf: int, in_Tmp_327: int, in_ModelLeaf_1: int, in_sdv_76: int, in_Tmp_329: int, in_Tmp_334: int, in_Tmp_336: int, in_Tmp_339: int, in_Tmp_340: int, in_devInfo: int, in_sdv_79: int, in_sdv_80: int, in_Tmp_342: int, in_Tmp_343: int, in_retries: int, in_dependentLocation: int, in_Tmp_346: int, in_unitDirectory_1: int, in_ModelLeaf_2: int, in_packet_1: int, in_Tmp_347: int, in_info: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_351: int, in_FdoExtension_2: int, in_Sbp2Req: int) returns (out_Tmp_234: int, out_Tmp_235: int, out_Tmp_236: int, out_Tmp_240: int, out_Tmp_241: int, out_Tmp_243: int, out_Tmp_244: int, out_Tmp_247: int, out_Tmp_248: int, out_Tmp_249: int, out_dependentLength: int, out_sdv_50: int, out_Tmp_250: int, out_Tmp_253: int, out_Tmp_255: int, out_Tmp_256: int, out_Tmp_257: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_264: int, out_Tmp_265: int, out_Tmp_266: int, out_Tmp_268: int, out_tmp: int, out_Tmp_270: int, out_Tmp_271: int, out_i_1: int, out_Tmp_272: int, out_Tmp_273: int, out_Tmp_275: int, out_Tmp_276: int, out_Tmp_277: int, out_Tmp_278: int, out_j: int, out_Tmp_281: int, out_Tmp_282: int, out_Tmp_283: int, out_Tmp_284: int, out_unitDirEntries: int, out_Tmp_286: int, out_Tmp_287: int, out_Tmp_290: int, out_sdv_58: int, out_Tmp_291: int, out_Tmp_292: int, out_Tmp_293: int, out_status_6: int, out_Tmp_298: int, out_offset: int, out_Tmp_299: int, out_unitDependentDirectory_1: int, out_Tmp_301: int, out_Tmp_302: int, out_Tmp_303: int, out_Tmp_304: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_310: int, out_sdv_68: int, out_Tmp_311: int, out_Tmp_312: int, out_Tmp_313: int, out_modelIdCount: int, out_Tmp_314: int, out_dirInfoQuad: int, out_Tmp_315: int, out_devListSize: int, out_firstOne: int, out_Tmp_316: int, out_Tmp_317: int, out_Tmp_318: int, out_Tmp_319: int, out_Tmp_320: int, out_sbp2Device: int, out_Tmp_323: int, out_Tmp_324: int, out_Tmp_326: int, out_Tmp_327: int, out_Tmp_329: int, out_Tmp_334: int, out_Tmp_336: int, out_Tmp_339: int, out_Tmp_340: int, out_devInfo: int, out_Tmp_342: int, out_Tmp_343: int, out_retries: int, out_Tmp_346: int, out_Tmp_347: int, out_info: int, out_Tmp_349: int, out_Tmp_350: int, out_Tmp_351: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, Mem_T.Irp__IRBIRP, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_firstOne == 1 || out_firstOne == in_firstOne;
  free ensures {:va_keep} out_Tmp_316 == in_Tmp_316 || out_Tmp_316 == in_unitDirectory_1;
  free ensures {:va_keep} out_sbp2Device == 1 || out_sbp2Device == in_sbp2Device;
  free ensures {:va_keep} out_Tmp_342 == 1 || out_Tmp_342 == 0 || out_Tmp_342 == in_Tmp_342;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2Get1394ConfigInfo_loop_L71(in_Tmp_238: int, in_i_1: int, in_directoryLength: int, in_Tmp_344: int, in_unitDirectory_1: int, in_Sbp2Req: int) returns (out_Tmp_238: int, out_i_1: int, out_Tmp_344: int)
{

  entry:
    out_Tmp_238, out_i_1, out_Tmp_344 := in_Tmp_238, in_i_1, in_Tmp_344;
    goto L71, exit;

  exit:
    return;

  L71:
    goto anon283_Else;

  anon283_Else:
    assume {:partition} in_Sbp2Req != 0;
    goto anon284_Else;

  anon284_Else:
    assume {:partition} in_directoryLength > out_i_1;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    havoc out_Tmp_344;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:partition} out_Tmp_344 == 129;
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    havoc out_Tmp_238;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon376_Then;

  anon376_Then:
    goto L75;

  L75:
    out_i_1 := out_i_1 + 1;
    goto L75_dummy;

  L75_dummy:
    havoc out_i_1;
    return;

  anon375_Then:
    assume {:partition} out_Tmp_344 != 129;
    goto L75;

  anon285_Then:
    goto L75;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L71(in_Tmp_238: int, in_i_1: int, in_directoryLength: int, in_Tmp_344: int, in_unitDirectory_1: int, in_Sbp2Req: int) returns (out_Tmp_238: int, out_i_1: int, out_Tmp_344: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2Get1394ConfigInfo_loop_L705(in_Tmp_267: int, in_i_1: int, in_Tmp_295: int, in_Tmp_321: int, in_devInfo: int, in_buffer: int, in_FdoExtension_2: int) returns (out_Tmp_267: int, out_i_1: int, out_Tmp_295: int, out_Tmp_321: int, out_devInfo: int, out_buffer: int)
{

  entry:
    out_Tmp_267, out_i_1, out_Tmp_295, out_Tmp_321, out_devInfo, out_buffer := in_Tmp_267, in_i_1, in_Tmp_295, in_Tmp_321, in_devInfo, in_buffer;
    goto L705, exit;

  exit:
    return;

  L705:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    goto anon358_Else;

  anon358_Else:
    out_Tmp_267 := out_i_1;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_295;
    out_devInfo := out_Tmp_295 + out_Tmp_267 * 268;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_Tmp_321 := uniModelId__DEVICE_INFORMATION(out_devInfo);
    assume {:nonnull} out_Tmp_321 != 0;
    assume out_Tmp_321 > 0;
    call {:si_unique_call 3595} out_buffer := _InlineInterlockedExchangePointer(Buffer__STRING(out_Tmp_321), 0);
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:partition} out_buffer != 0;
    call {:si_unique_call 3594} sdv_ExFreePool(0);
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L715;

  L715:
    out_i_1 := out_i_1 + 1;
    goto L715_dummy;

  L715_dummy:
    call {:si_unique_call 3596} {:si_old_unique_call 1} out_Tmp_267, out_i_1, out_Tmp_295, out_Tmp_321, out_devInfo, out_buffer := Sbp2Get1394ConfigInfo_loop_L705(out_Tmp_267, out_i_1, out_Tmp_295, out_Tmp_321, out_devInfo, out_buffer, in_FdoExtension_2);
    return;

  anon359_Then:
    assume {:partition} out_buffer == 0;
    goto L715;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L705(in_Tmp_267: int, in_i_1: int, in_Tmp_295: int, in_Tmp_321: int, in_devInfo: int, in_buffer: int, in_FdoExtension_2: int) returns (out_Tmp_267: int, out_i_1: int, out_Tmp_295: int, out_Tmp_321: int, out_devInfo: int, out_buffer: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2ParseTextLeaf_loop_L136(in_i_2: int, in_Tmp_503: int, in_Tmp_505: int, in_Tmp_508: int, in_pdoExtension_4: int, in_leafLength: int, in_Tmp_534: int, in_Tmp_536: int, in_status_11: int, in_packet_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_503: int, out_Tmp_505: int, out_Tmp_508: int, out_Tmp_534: int, out_Tmp_536: int, out_status_11: int)
{

  entry:
    out_i_2, out_Tmp_503, out_Tmp_505, out_Tmp_508, out_Tmp_534, out_Tmp_536, out_status_11 := in_i_2, in_Tmp_503, in_Tmp_505, in_Tmp_508, in_Tmp_534, in_Tmp_536, in_status_11;
    goto L136, exit;

  exit:
    return;

  L136:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_505;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_505 != 0;
    assume out_Tmp_505 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_503;
    assume {:nonnull} out_Tmp_503 != 0;
    assume out_Tmp_503 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_534;
    assume {:nonnull} out_Tmp_534 != 0;
    assume out_Tmp_534 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_508;
    assume {:nonnull} out_Tmp_508 != 0;
    assume out_Tmp_508 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_536;
    assume {:nonnull} out_Tmp_536 != 0;
    assume out_Tmp_536 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    call {:si_unique_call 3597} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, Mem_T.P_IRBIRP[in_packet_2], 2);
    goto anon53_Then;

  anon53_Then:
    assume {:partition} 0 <= out_status_11;
    out_i_2 := out_i_2 + 1;
    goto anon60_Then;

  anon60_Then:
    assume {:partition} out_i_2 <= INTDIV(in_leafLength, 4);
    goto anon60_Then_dummy;

  anon60_Then_dummy:
    call {:si_unique_call 3598} {:si_old_unique_call 1} out_i_2, out_Tmp_503, out_Tmp_505, out_Tmp_508, out_Tmp_534, out_Tmp_536, out_status_11 := Sbp2ParseTextLeaf_loop_L136(out_i_2, out_Tmp_503, out_Tmp_505, out_Tmp_508, in_pdoExtension_4, in_leafLength, out_Tmp_534, out_Tmp_536, out_status_11, in_packet_2, in_ModelLeafLocation);
    return;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L136(in_i_2: int, in_Tmp_503: int, in_Tmp_505: int, in_Tmp_508: int, in_pdoExtension_4: int, in_leafLength: int, in_Tmp_534: int, in_Tmp_536: int, in_status_11: int, in_packet_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_503: int, out_Tmp_505: int, out_Tmp_508: int, out_Tmp_534: int, out_Tmp_536: int, out_status_11: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2ParseTextLeaf_loop_L44(in_Tmp_504: int, in_waitValue_1: int, in_pdoExtension_4: int, in_Tmp_509: int, in_Tmp_513: int, in_Tmp_518: int, in_Tmp_519: int, in_Tmp_522: int, in_Tmp_525: int, in_Tmp_526: int, in_currentGeneration_1: int, in_retries_1: int, in_Tmp_528: int, in_Tmp_530: int, in_tModelLeafMdl: int, in_Tmp_531: int, in_Tmp_532: int, in_Tmp_533: int, in_Tmp_539: int, in_status_11: int, in_packet_2: int, in_Tmp_540: int, in_event: int, in_Tmp_544: int, in_ModelLeafLocation: int, in_vslice_dummy_var_14: int) returns (out_Tmp_504: int, out_Tmp_509: int, out_Tmp_513: int, out_Tmp_518: int, out_Tmp_519: int, out_Tmp_522: int, out_Tmp_525: int, out_Tmp_526: int, out_currentGeneration_1: int, out_retries_1: int, out_Tmp_528: int, out_Tmp_530: int, out_Tmp_531: int, out_Tmp_532: int, out_Tmp_533: int, out_Tmp_539: int, out_status_11: int, out_Tmp_540: int, out_Tmp_544: int, out_vslice_dummy_var_14: int)
{

  entry:
    out_Tmp_504, out_Tmp_509, out_Tmp_513, out_Tmp_518, out_Tmp_519, out_Tmp_522, out_Tmp_525, out_Tmp_526, out_currentGeneration_1, out_retries_1, out_Tmp_528, out_Tmp_530, out_Tmp_531, out_Tmp_532, out_Tmp_533, out_Tmp_539, out_status_11, out_Tmp_540, out_Tmp_544, out_vslice_dummy_var_14 := in_Tmp_504, in_Tmp_509, in_Tmp_513, in_Tmp_518, in_Tmp_519, in_Tmp_522, in_Tmp_525, in_Tmp_526, in_currentGeneration_1, in_retries_1, in_Tmp_528, in_Tmp_530, in_Tmp_531, in_Tmp_532, in_Tmp_533, in_Tmp_539, in_status_11, in_Tmp_540, in_Tmp_544, in_vslice_dummy_var_14;
    goto L44, exit;

  exit:
    return;

  L44:
    assume {:CounterLoop 3} {:Counter "retries_1"} true;
    goto anon46_Else;

  anon46_Else:
    assume {:partition} out_retries_1 != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_530;
    assume {:nonnull} out_Tmp_530 != 0;
    assume out_Tmp_530 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_531;
    assume {:nonnull} out_Tmp_531 != 0;
    assume out_Tmp_531 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    call {:si_unique_call 3603} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, Mem_T.P_IRBIRP[in_packet_2], 2);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} out_status_11 < 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_532;
    assume {:nonnull} out_Tmp_532 != 0;
    assume out_Tmp_532 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc out_Tmp_513;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_522;
    call {:si_unique_call 3602} WPP_SF_qD(out_Tmp_522, 58, out_Tmp_513, in_pdoExtension_4, out_status_11);
    goto L56;

  L56:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_528;
    assume {:nonnull} out_Tmp_528 != 0;
    assume out_Tmp_528 > 0;
    havoc out_currentGeneration_1;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_509;
    assume {:nonnull} out_Tmp_509 != 0;
    assume out_Tmp_509 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_526;
    assume {:nonnull} out_Tmp_526 != 0;
    assume out_Tmp_526 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_533;
    assume {:nonnull} out_Tmp_533 != 0;
    assume out_Tmp_533 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_525;
    assume {:nonnull} out_Tmp_525 != 0;
    assume out_Tmp_525 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_544;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_544 != 0;
    assume out_Tmp_544 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_539;
    assume {:nonnull} out_Tmp_539 != 0;
    assume out_Tmp_539 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_504;
    assume {:nonnull} out_Tmp_504 != 0;
    assume out_Tmp_504 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_519;
    assume {:nonnull} out_Tmp_519 != 0;
    assume out_Tmp_519 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_518;
    assume {:nonnull} out_Tmp_518 != 0;
    assume out_Tmp_518 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_540;
    assume {:nonnull} out_Tmp_540 != 0;
    assume out_Tmp_540 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    call {:si_unique_call 3601} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, Mem_T.P_IRBIRP[in_packet_2], 2);
    goto anon49_Else;

  anon49_Else:
    assume {:partition} out_status_11 < 0;
    call {:si_unique_call 3599} KeInitializeEvent(in_event, 0, 0);
    assume {:nonnull} in_waitValue_1 != 0;
    assume in_waitValue_1 > 0;
    call {:si_unique_call 3600} out_vslice_dummy_var_14 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_1);
    out_retries_1 := out_retries_1 - 1;
    goto anon49_Else_dummy;

  anon49_Else_dummy:
    call {:si_unique_call 3604} {:si_old_unique_call 1} out_Tmp_504, out_Tmp_509, out_Tmp_513, out_Tmp_518, out_Tmp_519, out_Tmp_522, out_Tmp_525, out_Tmp_526, out_currentGeneration_1, out_retries_1, out_Tmp_528, out_Tmp_530, out_Tmp_531, out_Tmp_532, out_Tmp_533, out_Tmp_539, out_status_11, out_Tmp_540, out_Tmp_544, out_vslice_dummy_var_14 := Sbp2ParseTextLeaf_loop_L44(out_Tmp_504, in_waitValue_1, in_pdoExtension_4, out_Tmp_509, out_Tmp_513, out_Tmp_518, out_Tmp_519, out_Tmp_522, out_Tmp_525, out_Tmp_526, out_currentGeneration_1, out_retries_1, out_Tmp_528, out_Tmp_530, in_tModelLeafMdl, out_Tmp_531, out_Tmp_532, out_Tmp_533, out_Tmp_539, out_status_11, in_packet_2, out_Tmp_540, in_event, out_Tmp_544, in_ModelLeafLocation, out_vslice_dummy_var_14);
    return;

  anon51_Then:
    goto L56;

  anon63_Then:
    goto L56;

  anon50_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon48_Then:
    assume {:partition} 0 <= out_status_11;
    goto L56;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L44(in_Tmp_504: int, in_waitValue_1: int, in_pdoExtension_4: int, in_Tmp_509: int, in_Tmp_513: int, in_Tmp_518: int, in_Tmp_519: int, in_Tmp_522: int, in_Tmp_525: int, in_Tmp_526: int, in_currentGeneration_1: int, in_retries_1: int, in_Tmp_528: int, in_Tmp_530: int, in_tModelLeafMdl: int, in_Tmp_531: int, in_Tmp_532: int, in_Tmp_533: int, in_Tmp_539: int, in_status_11: int, in_packet_2: int, in_Tmp_540: int, in_event: int, in_Tmp_544: int, in_ModelLeafLocation: int, in_vslice_dummy_var_14: int) returns (out_Tmp_504: int, out_Tmp_509: int, out_Tmp_513: int, out_Tmp_518: int, out_Tmp_519: int, out_Tmp_522: int, out_Tmp_525: int, out_Tmp_526: int, out_currentGeneration_1: int, out_retries_1: int, out_Tmp_528: int, out_Tmp_530: int, out_Tmp_531: int, out_Tmp_532: int, out_Tmp_533: int, out_Tmp_539: int, out_status_11: int, out_Tmp_540: int, out_Tmp_544: int, out_vslice_dummy_var_14: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_vslice_dummy_var_14 == 258 || out_vslice_dummy_var_14 == 0 || out_vslice_dummy_var_14 == in_vslice_dummy_var_14;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(in_nextEntry: int, in_queueEntry: int, in_sdv_384: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_384: int)
{

  entry:
    out_nextEntry, out_queueEntry, out_sdv_384 := in_nextEntry, in_queueEntry, in_sdv_384;
    goto L22, exit;

  exit:
    return;

  L22:
    goto anon13_Else;

  anon13_Else:
    call {:si_unique_call 3605} out_sdv_384 := sdv_containing_record(out_nextEntry, 0);
    out_queueEntry := out_sdv_384;
    assume {:nonnull} out_queueEntry != 0;
    assume out_queueEntry > 0;
    goto anon15_Else;

  anon15_Else:
    assume {:nonnull} out_nextEntry != 0;
    assume out_nextEntry > 0;
    havoc out_nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    havoc out_nextEntry;
    return;
}



procedure {:LoopProcedure} Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(in_nextEntry: int, in_queueEntry: int, in_sdv_384: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_384: int);
  free ensures {:va_keep} out_nextEntry == in_nextEntry;
  free ensures {:va_keep} out_queueEntry == in_queueEntry;
  free ensures {:va_keep} out_sdv_384 == in_sdv_384;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation AcquireOrbListLock_loop_L12(in_currThread_1: int, in_prevOwner: int, in_sdv_399: int, in_sdv_400: int, in_DeviceExtension_3: int, in_fFromDpcLevel_1: int) returns (out_prevOwner: int, out_sdv_399: int, out_sdv_400: int)
{
  var vslice_dummy_var_3075: int;

  entry:
    out_prevOwner, out_sdv_399, out_sdv_400 := in_prevOwner, in_sdv_399, in_sdv_400;
    goto L12, exit;

  exit:
    return;

  L12:
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    call {:si_unique_call 3606} out_sdv_399 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(in_DeviceExtension_3), in_currThread_1, 0);
    out_prevOwner := out_sdv_399;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} out_prevOwner == in_currThread_1;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    havoc vslice_dummy_var_3075;
    call {:si_unique_call 3607} Sbp2AddLog(in_DeviceExtension_3, 256, 544301889, in_currThread_1, vslice_dummy_var_3075);
    goto L22;

  L22:
    goto anon14_Then;

  anon14_Then:
    assume {:partition} out_prevOwner != in_currThread_1;
    goto anon14_Then_dummy;

  anon14_Then_dummy:
    call {:si_unique_call 3613} {:si_old_unique_call 1} out_prevOwner, out_sdv_399, out_sdv_400 := AcquireOrbListLock_loop_L12(in_currThread_1, out_prevOwner, out_sdv_399, out_sdv_400, in_DeviceExtension_3, in_fFromDpcLevel_1);
    return;

  anon17_Then:
    assume {:partition} out_prevOwner != in_currThread_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} in_fFromDpcLevel_1 != 0;
    call {:si_unique_call 3610} KeAcquireInStackQueuedSpinLockAtDpcLevel(0, 0);
    goto L32;

  L32:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} out_prevOwner != 0;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    call {:si_unique_call 3612} out_sdv_400 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(in_DeviceExtension_3), in_currThread_1, 0);
    out_prevOwner := out_sdv_400;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} out_prevOwner != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} in_fFromDpcLevel_1 != 0;
    call {:si_unique_call 3608} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L22;

  anon16_Then:
    assume {:partition} in_fFromDpcLevel_1 == 0;
    call {:si_unique_call 3609} KeReleaseInStackQueuedSpinLock(0);
    goto L22;

  anon18_Then:
    assume {:partition} out_prevOwner == 0;
    goto L22;

  anon15_Then:
    assume {:partition} out_prevOwner == 0;
    goto L22;

  anon13_Then:
    assume {:partition} in_fFromDpcLevel_1 == 0;
    call {:si_unique_call 3611} KeAcquireInStackQueuedSpinLock(0, 0);
    goto L32;
}



procedure {:LoopProcedure} AcquireOrbListLock_loop_L12(in_currThread_1: int, in_prevOwner: int, in_sdv_399: int, in_sdv_400: int, in_DeviceExtension_3: int, in_fFromDpcLevel_1: int) returns (out_prevOwner: int, out_sdv_399: int, out_sdv_400: int);
  modifies alloc, sdv_irql_current, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 1 || locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2InsertByKeyDeviceQueue_loop_L31(in_nextEntry_1: int, in_queueEntry2: int, in_sdv_439: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_queueEntry2: int, out_sdv_439: int)
{

  entry:
    out_nextEntry_1, out_queueEntry2, out_sdv_439 := in_nextEntry_1, in_queueEntry2, in_sdv_439;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon7_Else;

  anon7_Else:
    call {:si_unique_call 3614} out_sdv_439 := sdv_containing_record(out_nextEntry_1, 0);
    out_queueEntry2 := out_sdv_439;
    assume {:nonnull} out_queueEntry2 != 0;
    assume out_queueEntry2 > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:nonnull} out_nextEntry_1 != 0;
    assume out_nextEntry_1 > 0;
    havoc out_nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    havoc out_nextEntry_1;
    return;
}



procedure {:LoopProcedure} Sbp2InsertByKeyDeviceQueue_loop_L31(in_nextEntry_1: int, in_queueEntry2: int, in_sdv_439: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_queueEntry2: int, out_sdv_439: int);
  free ensures {:va_keep} out_nextEntry_1 == in_nextEntry_1;
  free ensures {:va_keep} out_queueEntry2 == in_queueEntry2;
  free ensures {:va_keep} out_sdv_439 == in_sdv_439;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2InitializeOrb_loop_L46(in_i_3: int, in_Tmp_1643: int, in_Tmp_1654: int, in_Tmp_1656: int, in_sdv_509: int, in_sdv_510: int, in_Tmp_1675: int, in_CallbackContext_1: int) returns (out_i_3: int, out_Tmp_1643: int, out_Tmp_1654: int, out_Tmp_1656: int, out_Tmp_1675: int)
{

  entry:
    out_i_3, out_Tmp_1643, out_Tmp_1654, out_Tmp_1656, out_Tmp_1675 := in_i_3, in_Tmp_1643, in_Tmp_1654, in_Tmp_1656, in_Tmp_1675;
    goto L46, exit;

  exit:
    return;

  L46:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    goto anon21_Else;

  anon21_Else:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_1643 := out_i_3;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_1675;
    assume {:nonnull} out_Tmp_1675 != 0;
    assume out_Tmp_1675 > 0;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_1654 := out_i_3;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_1656;
    assume {:nonnull} out_Tmp_1656 != 0;
    assume out_Tmp_1656 > 0;
    out_i_3 := out_i_3 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 3615} {:si_old_unique_call 1} out_i_3, out_Tmp_1643, out_Tmp_1654, out_Tmp_1656, out_Tmp_1675 := Sbp2InitializeOrb_loop_L46(out_i_3, out_Tmp_1643, out_Tmp_1654, out_Tmp_1656, in_sdv_509, in_sdv_510, out_Tmp_1675, in_CallbackContext_1);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeOrb_loop_L46(in_i_3: int, in_Tmp_1643: int, in_Tmp_1654: int, in_Tmp_1656: int, in_sdv_509: int, in_sdv_510: int, in_Tmp_1675: int, in_CallbackContext_1: int) returns (out_i_3: int, out_Tmp_1643: int, out_Tmp_1654: int, out_Tmp_1656: int, out_Tmp_1675: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2IssueInternalCommand_loop_L221(in_waitValue_3: int, in_event_1: int, in_i_4: int, in_DeviceExtension_10: int, in_vslice_dummy_var_141: int) returns (out_i_4: int, out_vslice_dummy_var_141: int)
{

  entry:
    out_i_4, out_vslice_dummy_var_141 := in_i_4, in_vslice_dummy_var_141;
    goto L221, exit;

  exit:
    return;

  L221:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon129_Else;

  anon129_Else:
    assume {:partition} 6 > out_i_4;
    call {:si_unique_call 3616} KeInitializeEvent(in_event_1, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 3617} out_vslice_dummy_var_141 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon130_Else;

  anon130_Else:
    out_i_4 := out_i_4 + 1;
    goto anon130_Else_dummy;

  anon130_Else_dummy:
    call {:si_unique_call 3618} {:si_old_unique_call 1} out_i_4, out_vslice_dummy_var_141 := Sbp2IssueInternalCommand_loop_L221(in_waitValue_3, in_event_1, out_i_4, in_DeviceExtension_10, out_vslice_dummy_var_141);
    return;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L221(in_waitValue_3: int, in_event_1: int, in_i_4: int, in_DeviceExtension_10: int, in_vslice_dummy_var_141: int) returns (out_i_4: int, out_vslice_dummy_var_141: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_141 == 258 || out_vslice_dummy_var_141 == 0 || out_vslice_dummy_var_141 == in_vslice_dummy_var_141;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2IssueInternalCommand_loop_L63(in_Tmp_1683: int, in_waitValue_3: int, in_cdb_2: int, in_modeMdl: int, in_Tmp_1686: int, in_Tmp_1688: int, in_Tmp_1691: int, in_Tmp_1692: int, in_Tmp_1693: int, in_Tmp_1694: int, in_Tmp_1696: int, in_Tmp_1697: int, in_Tmp_1698: int, in_irp_4: int, in_senseInfoBuffer: int, in_Tmp_1699: int, in_Tmp_1701: int, in_srb_6: int, in_Tmp_1703: int, in_event_1: int, in_Tmp_1706: int, in_Tmp_1707: int, in_i_4: int, in_Tmp_1710: int, in_Tmp_1711: int, in_irpStack_13: int, in_Tmp_1713: int, in_inquiryMdl: int, in_context_1: int, in_Tmp_1715: int, in_Tmp_1717: int, in_status_48: int, in_Tmp_1721: int, in_retryCount: int, in_Tmp_1722: int, in_DeviceExtension_10: int, in_Scsiop: int, in_vslice_dummy_var_140: int, in_vslice_dummy_var_141: int) returns (out_Tmp_1683: int, out_cdb_2: int, out_modeMdl: int, out_Tmp_1686: int, out_Tmp_1688: int, out_Tmp_1691: int, out_Tmp_1692: int, out_Tmp_1693: int, out_Tmp_1694: int, out_Tmp_1696: int, out_Tmp_1697: int, out_Tmp_1698: int, out_Tmp_1699: int, out_Tmp_1701: int, out_Tmp_1703: int, out_Tmp_1706: int, out_Tmp_1707: int, out_i_4: int, out_Tmp_1710: int, out_Tmp_1711: int, out_irpStack_13: int, out_Tmp_1713: int, out_inquiryMdl: int, out_Tmp_1715: int, out_Tmp_1717: int, out_status_48: int, out_Tmp_1721: int, out_retryCount: int, out_Tmp_1722: int, out_vslice_dummy_var_140: int, out_vslice_dummy_var_141: int)
{
  var vslice_dummy_var_3076: int;

  entry:
    out_Tmp_1683, out_cdb_2, out_modeMdl, out_Tmp_1686, out_Tmp_1688, out_Tmp_1691, out_Tmp_1692, out_Tmp_1693, out_Tmp_1694, out_Tmp_1696, out_Tmp_1697, out_Tmp_1698, out_Tmp_1699, out_Tmp_1701, out_Tmp_1703, out_Tmp_1706, out_Tmp_1707, out_i_4, out_Tmp_1710, out_Tmp_1711, out_irpStack_13, out_Tmp_1713, out_inquiryMdl, out_Tmp_1715, out_Tmp_1717, out_status_48, out_Tmp_1721, out_retryCount, out_Tmp_1722, out_vslice_dummy_var_140, out_vslice_dummy_var_141 := in_Tmp_1683, in_cdb_2, in_modeMdl, in_Tmp_1686, in_Tmp_1688, in_Tmp_1691, in_Tmp_1692, in_Tmp_1693, in_Tmp_1694, in_Tmp_1696, in_Tmp_1697, in_Tmp_1698, in_Tmp_1699, in_Tmp_1701, in_Tmp_1703, in_Tmp_1706, in_Tmp_1707, in_i_4, in_Tmp_1710, in_Tmp_1711, in_irpStack_13, in_Tmp_1713, in_inquiryMdl, in_Tmp_1715, in_Tmp_1717, in_status_48, in_Tmp_1721, in_retryCount, in_Tmp_1722, in_vslice_dummy_var_140, in_vslice_dummy_var_141;
    goto L63, exit;

  exit:
    return;

  L63:
    call {:si_unique_call 3619} out_irpStack_13 := sdv_IoGetNextIrpStackLocation(in_irp_4);
    assume {:nonnull} out_irpStack_13 != 0;
    assume out_irpStack_13 > 0;
    assume {:nonnull} out_irpStack_13 != 0;
    assume out_irpStack_13 > 0;
    assume {:nonnull} out_irpStack_13 != 0;
    assume out_irpStack_13 > 0;
    call {:si_unique_call 3620} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    out_cdb_2 := Cdb__SCSI_REQUEST_BLOCK(in_srb_6);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} in_Scsiop != 18;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} in_Scsiop == 26;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} out_retryCount != 0;
    goto L96;

  L96:
    assume {:nonnull} in_irp_4 != 0;
    assume in_irp_4 > 0;
    goto L84;

  L84:
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_context_1 != 0;
    assume in_context_1 > 0;
    call {:si_unique_call 3624} KeInitializeEvent(Event__REQUEST_CONTEXT(in_context_1), 0, 0);
    call {:si_unique_call 3625} sdv_IoSetCompletionRoutine(in_irp_4, li2bplFunctionConstant523, in_context_1, 1, 1, 1);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1691;
    assume {:nonnull} out_Tmp_1691 != 0;
    assume out_Tmp_1691 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    out_Tmp_1722 := in_Scsiop;
    havoc out_Tmp_1710;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1683;
    call {:si_unique_call 3623} WPP_SF_qDq(out_Tmp_1683, 55, out_Tmp_1710, in_DeviceExtension_10, out_Tmp_1722, in_irp_4);
    goto L157;

  L157:
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    havoc vslice_dummy_var_3076;
    call {:si_unique_call 3622} out_status_48 := sdv_IoCallDriver(vslice_dummy_var_3076, in_irp_4);
    assume {:nonnull} in_irp_4 != 0;
    assume in_irp_4 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(in_irp_4))] >= 0;
    goto L171;

  L171:
    call {:si_unique_call 3621} out_vslice_dummy_var_140 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1721;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} out_Tmp_1721 != 1;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1713;
    assume {:nonnull} out_Tmp_1713 != 0;
    assume out_Tmp_1713 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1693;
    out_Tmp_1694 := in_Scsiop;
    havoc out_Tmp_1711;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1707;
    call {:si_unique_call 3629} WPP_SF_qDD(out_Tmp_1707, 57, out_Tmp_1711, in_DeviceExtension_10, out_Tmp_1694, out_Tmp_1693);
    goto L181;

  L181:
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1717;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} out_Tmp_1717 == 18;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1715;
    assume {:nonnull} out_Tmp_1715 != 0;
    assume out_Tmp_1715 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    havoc out_Tmp_1697;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1706;
    call {:si_unique_call 3630} WPP_SF_q(out_Tmp_1706, 58, out_Tmp_1697, in_DeviceExtension_10);
    goto L197;

  L197:
    out_status_48 := 0;
    goto L205;

  L205:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} out_status_48 != 0;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} 5 > out_retryCount;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1701;
    assume {:nonnull} out_Tmp_1701 != 0;
    assume out_Tmp_1701 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    havoc out_Tmp_1686;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1703;
    call {:si_unique_call 3634} WPP_SF_q(out_Tmp_1703, 60, out_Tmp_1686, in_DeviceExtension_10);
    goto L213;

  L213:
    out_i_4 := 0;
    goto L221;

  L221:
    call {:si_unique_call 3631} out_i_4, out_vslice_dummy_var_141 := Sbp2IssueInternalCommand_loop_L221(in_waitValue_3, in_event_1, out_i_4, in_DeviceExtension_10, out_vslice_dummy_var_141);
    goto L221_last;

  L221_last:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} 6 > out_i_4;
    call {:si_unique_call 3632} KeInitializeEvent(in_event_1, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 3633} out_vslice_dummy_var_141 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    out_i_4 := out_i_4 + 1;
    assume false;
    return;

  anon130_Then:
    goto L206;

  L206:
    goto anon124_Else;

  anon124_Else:
    assume {:partition} 3 > out_retryCount;
    goto anon131_Then;

  anon131_Then:
    assume {:partition} out_status_48 != 0;
    goto anon131_Then_dummy;

  anon131_Then_dummy:
    call {:si_unique_call 3635} {:si_old_unique_call 1} out_Tmp_1683, out_cdb_2, out_modeMdl, out_Tmp_1686, out_Tmp_1688, out_Tmp_1691, out_Tmp_1692, out_Tmp_1693, out_Tmp_1694, out_Tmp_1696, out_Tmp_1697, out_Tmp_1698, out_Tmp_1699, out_Tmp_1701, out_Tmp_1703, out_Tmp_1706, out_Tmp_1707, out_i_4, out_Tmp_1710, out_Tmp_1711, out_irpStack_13, out_Tmp_1713, out_inquiryMdl, out_Tmp_1715, out_Tmp_1717, out_status_48, out_Tmp_1721, out_retryCount, out_Tmp_1722, out_vslice_dummy_var_140, out_vslice_dummy_var_141 := Sbp2IssueInternalCommand_loop_L63(out_Tmp_1683, in_waitValue_3, out_cdb_2, out_modeMdl, out_Tmp_1686, out_Tmp_1688, out_Tmp_1691, out_Tmp_1692, out_Tmp_1693, out_Tmp_1694, out_Tmp_1696, out_Tmp_1697, out_Tmp_1698, in_irp_4, in_senseInfoBuffer, out_Tmp_1699, out_Tmp_1701, in_srb_6, out_Tmp_1703, in_event_1, out_Tmp_1706, out_Tmp_1707, out_i_4, out_Tmp_1710, out_Tmp_1711, out_irpStack_13, out_Tmp_1713, out_inquiryMdl, in_context_1, out_Tmp_1715, out_Tmp_1717, out_status_48, out_Tmp_1721, out_retryCount, out_Tmp_1722, in_DeviceExtension_10, in_Scsiop, out_vslice_dummy_var_140, out_vslice_dummy_var_141);
    return;

  anon129_Then:
    assume {:partition} out_i_4 >= 6;
    goto L206;

  anon128_Then:
    goto L213;

  anon153_Then:
    goto L213;

  anon127_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L213;

  anon126_Then:
    assume {:partition} out_retryCount >= 5;
    goto L206;

  anon125_Then:
    goto L206;

  anon123_Then:
    assume {:partition} out_status_48 == 0;
    goto L206;

  anon122_Then:
    goto L197;

  anon152_Then:
    goto L197;

  anon121_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L197;

  anon151_Then:
    assume {:partition} out_Tmp_1717 != 18;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} in_senseInfoBuffer != 0;
    assume in_senseInfoBuffer > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    out_status_48 := -1073741808;
    out_retryCount := out_retryCount + 1;
    goto L205;

  anon132_Then:
    goto L233;

  L233:
    out_retryCount := out_retryCount + 1;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1699;
    assume {:nonnull} out_Tmp_1699 != 0;
    assume out_Tmp_1699 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    out_Tmp_1698 := in_Scsiop;
    havoc out_Tmp_1696;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1692;
    call {:si_unique_call 3628} WPP_SF_qDd(out_Tmp_1692, 59, out_Tmp_1696, in_DeviceExtension_10, out_Tmp_1698, out_retryCount);
    goto L241;

  L241:
    out_status_48 := -1073741823;
    goto L205;

  anon133_Then:
    goto L241;

  anon155_Then:
    goto L241;

  anon154_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L241;

  anon120_Then:
    goto L233;

  anon119_Then:
    goto L181;

  anon150_Then:
    goto L181;

  anon118_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L181;

  anon149_Then:
    assume {:partition} out_Tmp_1721 == 1;
    out_status_48 := 0;
    goto L206;

  anon116_Then:
    assume {:partition} 0 > Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(in_irp_4))];
    goto anon117_Then;

  anon117_Then:
    assume {:partition} out_status_48 == 259;
    goto L171;

  anon115_Then:
    goto L157;

  anon148_Then:
    goto L157;

  anon114_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L157;

  anon158_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 3627} out_modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon111_Then;

  anon111_Then:
    assume {:partition} out_modeMdl != 0;
    goto L96;

  anon143_Then:
    assume {:partition} in_Scsiop != 26;
    goto L84;

  anon146_Then:
    assume {:partition} in_Scsiop == 18;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    havoc out_Tmp_1688;
    assume {:nonnull} out_Tmp_1688 != 0;
    assume out_Tmp_1688 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} out_retryCount != 0;
    goto L138;

  L138:
    assume {:nonnull} in_irp_4 != 0;
    assume in_irp_4 > 0;
    goto L84;

  anon147_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 3626} out_inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon113_Else;

  anon113_Else:
    assume {:partition} out_inquiryMdl != 0;
    goto L138;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L63(in_Tmp_1683: int, in_waitValue_3: int, in_cdb_2: int, in_modeMdl: int, in_Tmp_1686: int, in_Tmp_1688: int, in_Tmp_1691: int, in_Tmp_1692: int, in_Tmp_1693: int, in_Tmp_1694: int, in_Tmp_1696: int, in_Tmp_1697: int, in_Tmp_1698: int, in_irp_4: int, in_senseInfoBuffer: int, in_Tmp_1699: int, in_Tmp_1701: int, in_srb_6: int, in_Tmp_1703: int, in_event_1: int, in_Tmp_1706: int, in_Tmp_1707: int, in_i_4: int, in_Tmp_1710: int, in_Tmp_1711: int, in_irpStack_13: int, in_Tmp_1713: int, in_inquiryMdl: int, in_context_1: int, in_Tmp_1715: int, in_Tmp_1717: int, in_status_48: int, in_Tmp_1721: int, in_retryCount: int, in_Tmp_1722: int, in_DeviceExtension_10: int, in_Scsiop: int, in_vslice_dummy_var_140: int, in_vslice_dummy_var_141: int) returns (out_Tmp_1683: int, out_cdb_2: int, out_modeMdl: int, out_Tmp_1686: int, out_Tmp_1688: int, out_Tmp_1691: int, out_Tmp_1692: int, out_Tmp_1693: int, out_Tmp_1694: int, out_Tmp_1696: int, out_Tmp_1697: int, out_Tmp_1698: int, out_Tmp_1699: int, out_Tmp_1701: int, out_Tmp_1703: int, out_Tmp_1706: int, out_Tmp_1707: int, out_i_4: int, out_Tmp_1710: int, out_Tmp_1711: int, out_irpStack_13: int, out_Tmp_1713: int, out_inquiryMdl: int, out_Tmp_1715: int, out_Tmp_1717: int, out_status_48: int, out_Tmp_1721: int, out_retryCount: int, out_Tmp_1722: int, out_vslice_dummy_var_140: int, out_vslice_dummy_var_141: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} out_cdb_2 == in_cdb_2 || out_cdb_2 == Cdb__SCSI_REQUEST_BLOCK(in_srb_6);
  free ensures {:va_keep} out_Tmp_1694 == in_Tmp_1694 || out_Tmp_1694 == in_Scsiop;
  free ensures {:va_keep} out_Tmp_1698 == in_Tmp_1698 || out_Tmp_1698 == in_Scsiop;
  free ensures {:va_keep} out_status_48 == 0 || out_status_48 == -1073741808 || out_status_48 == -1073741823 || out_status_48 == in_status_48;
  free ensures {:va_keep} out_Tmp_1722 == in_Tmp_1722 || out_Tmp_1722 == in_Scsiop;
  free ensures {:va_keep} out_vslice_dummy_var_140 == 258 || out_vslice_dummy_var_140 == 0 || out_vslice_dummy_var_140 == in_vslice_dummy_var_140;
  free ensures {:va_keep} out_vslice_dummy_var_141 == 258 || out_vslice_dummy_var_141 == 0 || out_vslice_dummy_var_141 == in_vslice_dummy_var_141;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation WppCleanupKm_loop_L12(in_WppReg: int) returns (out_WppReg: int)
{

  entry:
    out_WppReg := in_WppReg;
    goto L12, exit;

  exit:
    return;

  L12:
    goto anon14_Else;

  anon14_Else:
    assume {:partition} out_WppReg != 0;
    assume {:nonnull} out_WppReg != 0;
    assume out_WppReg > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L15;

  L15:
    assume {:nonnull} out_WppReg != 0;
    assume out_WppReg > 0;
    havoc out_WppReg;
    goto L15_dummy;

  L15_dummy:
    havoc out_WppReg;
    return;

  anon15_Then:
    goto L15;
}



procedure {:LoopProcedure} WppCleanupKm_loop_L12(in_WppReg: int) returns (out_WppReg: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CreateDevObject_loop_L17(in_NextId: int, in_deviceObject_3: int, in_uniDeviceName_1: int, in_buffer_1: int, in_Tmp_1967: int, in_status_63: int) returns (out_NextId: int, out_Tmp_1967: int, out_status_63: int)
{

  entry:
    out_NextId, out_Tmp_1967, out_status_63 := in_NextId, in_Tmp_1967, in_status_63;
    goto L17, exit;

  exit:
    return;

  L17:
    out_Tmp_1967 := strConst__li2bpl35;
    call {:si_unique_call 3636} out_status_63 := RtlStringCbPrintfW(in_buffer_1, 128, out_Tmp_1967);
    goto anon17_Else;

  anon17_Else:
    assume {:partition} out_status_63 >= 0;
    call {:si_unique_call 3637} RtlInitUnicodeString(in_uniDeviceName_1, in_buffer_1);
    call {:si_unique_call 3638} out_status_63 := IoCreateDevice(0, 5144, 0, 42, 256, 0, in_deviceObject_3);
    out_NextId := out_NextId + 1;
    goto anon23_Then;

  anon23_Then:
    assume {:partition} out_status_63 == -1073741771;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    call {:si_unique_call 3639} {:si_old_unique_call 1} out_NextId, out_Tmp_1967, out_status_63 := Sbp2CreateDevObject_loop_L17(out_NextId, in_deviceObject_3, in_uniDeviceName_1, in_buffer_1, out_Tmp_1967, out_status_63);
    return;
}



procedure {:LoopProcedure} Sbp2CreateDevObject_loop_L17(in_NextId: int, in_deviceObject_3: int, in_uniDeviceName_1: int, in_buffer_1: int, in_Tmp_1967: int, in_status_63: int) returns (out_NextId: int, out_Tmp_1967: int, out_status_63: int);
  modifies alloc;
  free ensures {:va_keep} out_status_63 == -1073741824 || out_status_63 == -1073741771 || out_status_63 == -1073741670 || out_status_63 == -1073741823 || out_status_63 == 0 || out_status_63 == in_status_63;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2PnpDeviceControl_loop_L584(in_i_6: int, in_Tmp_2190: int, in_fdoExtension_9: int, in_Tmp_2229: int, in_Tmp_2255: int, in_Tmp_2270: int, in_DeviceObject_39: int) returns (out_i_6: int, out_Tmp_2190: int, out_Tmp_2229: int, out_Tmp_2255: int, out_Tmp_2270: int)
{

  entry:
    out_i_6, out_Tmp_2190, out_Tmp_2229, out_Tmp_2255, out_Tmp_2270 := in_i_6, in_Tmp_2190, in_Tmp_2229, in_Tmp_2255, in_Tmp_2270;
    goto L584, exit;

  exit:
    return;

  L584:
    out_Tmp_2270 := out_i_6;
    assume {:nonnull} in_fdoExtension_9 != 0;
    assume in_fdoExtension_9 > 0;
    havoc out_Tmp_2190;
    assume {:nonnull} out_Tmp_2190 != 0;
    assume out_Tmp_2190 > 0;
    goto anon388_Else;

  anon388_Else:
    out_Tmp_2255 := out_i_6;
    assume {:nonnull} in_fdoExtension_9 != 0;
    assume in_fdoExtension_9 > 0;
    havoc out_Tmp_2229;
    assume {:nonnull} out_Tmp_2229 != 0;
    assume out_Tmp_2229 > 0;
    goto anon389_Then;

  anon389_Then:
    out_i_6 := out_i_6 + 1;
    goto anon389_Then_dummy;

  anon389_Then_dummy:
    havoc out_i_6;
    return;
}



procedure {:LoopProcedure} Sbp2PnpDeviceControl_loop_L584(in_i_6: int, in_Tmp_2190: int, in_fdoExtension_9: int, in_Tmp_2229: int, in_Tmp_2255: int, in_Tmp_2270: int, in_DeviceObject_39: int) returns (out_i_6: int, out_Tmp_2190: int, out_Tmp_2229: int, out_Tmp_2255: int, out_Tmp_2270: int);
  free ensures {:va_keep} out_Tmp_2255 == in_i_6 || out_Tmp_2255 == in_Tmp_2255;
  free ensures {:va_keep} out_Tmp_2270 == in_i_6 || out_Tmp_2270 == in_Tmp_2270;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2PnpDeviceControl_loop_L517(in_Tmp_2161: int, in_i_6: int, in_Tmp_2197: int, in_fdoExtension_9: int, in_DeviceObject_39: int) returns (out_Tmp_2161: int, out_i_6: int, out_Tmp_2197: int)
{

  entry:
    out_Tmp_2161, out_i_6, out_Tmp_2197 := in_Tmp_2161, in_i_6, in_Tmp_2197;
    goto L517, exit;

  exit:
    return;

  L517:
    assume {:nonnull} in_fdoExtension_9 != 0;
    assume in_fdoExtension_9 > 0;
    goto anon338_Else;

  anon338_Else:
    out_Tmp_2197 := out_i_6;
    assume {:nonnull} in_fdoExtension_9 != 0;
    assume in_fdoExtension_9 > 0;
    havoc out_Tmp_2161;
    assume {:nonnull} out_Tmp_2161 != 0;
    assume out_Tmp_2161 > 0;
    goto anon383_Then;

  anon383_Then:
    out_i_6 := out_i_6 + 1;
    goto anon383_Then_dummy;

  anon383_Then_dummy:
    havoc out_i_6;
    return;
}



procedure {:LoopProcedure} Sbp2PnpDeviceControl_loop_L517(in_Tmp_2161: int, in_i_6: int, in_Tmp_2197: int, in_fdoExtension_9: int, in_DeviceObject_39: int) returns (out_Tmp_2161: int, out_i_6: int, out_Tmp_2197: int);
  free ensures {:va_keep} out_Tmp_2197 == in_i_6 || out_Tmp_2197 == in_Tmp_2197;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2PreAllocateLists_loop_L120(in_Tmp_2399: int, in_Tmp_2400: int, in_cnt: int, in_Tmp_2401: int, in_context_3: int, in_Tmp_2402: int, in_Tmp_2404: int, in_Tmp_2405: int, in_Tmp_2406: int, in_Tmp_2407: int, in_Tmp_2409: int, in_sdv_767: int, in_Tmp_2411: int, in_Tmp_2412: int, in_Tmp_2413: int, in_Tmp_2414: int, in_Tmp_2415: int, in_packet_15: int, in_status_76: int, in_Tmp_2416: int, in_Tmp_2417: int, in_Tmp_2418: int, in_Tmp_2419: int, in_PdoExtension_24: int, in_vslice_dummy_var_310: int) returns (out_Tmp_2399: int, out_Tmp_2400: int, out_cnt: int, out_Tmp_2401: int, out_context_3: int, out_Tmp_2402: int, out_Tmp_2404: int, out_Tmp_2405: int, out_Tmp_2406: int, out_Tmp_2407: int, out_Tmp_2409: int, out_sdv_767: int, out_Tmp_2411: int, out_Tmp_2412: int, out_Tmp_2413: int, out_Tmp_2414: int, out_Tmp_2415: int, out_status_76: int, out_Tmp_2416: int, out_Tmp_2417: int, out_Tmp_2418: int, out_Tmp_2419: int, out_vslice_dummy_var_310: int)
{

  entry:
    out_Tmp_2399, out_Tmp_2400, out_cnt, out_Tmp_2401, out_context_3, out_Tmp_2402, out_Tmp_2404, out_Tmp_2405, out_Tmp_2406, out_Tmp_2407, out_Tmp_2409, out_sdv_767, out_Tmp_2411, out_Tmp_2412, out_Tmp_2413, out_Tmp_2414, out_Tmp_2415, out_status_76, out_Tmp_2416, out_Tmp_2417, out_Tmp_2418, out_Tmp_2419, out_vslice_dummy_var_310 := in_Tmp_2399, in_Tmp_2400, in_cnt, in_Tmp_2401, in_context_3, in_Tmp_2402, in_Tmp_2404, in_Tmp_2405, in_Tmp_2406, in_Tmp_2407, in_Tmp_2409, in_sdv_767, in_Tmp_2411, in_Tmp_2412, in_Tmp_2413, in_Tmp_2414, in_Tmp_2415, in_status_76, in_Tmp_2416, in_Tmp_2417, in_Tmp_2418, in_Tmp_2419, in_vslice_dummy_var_310;
    goto L120, exit;

  exit:
    return;

  L120:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon30_Else;

  anon30_Else:
    assume {:partition} 8 > out_cnt;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    havoc out_context_3;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    call {:si_unique_call 3642} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(out_context_3), li2bplFunctionConstant378, 0);
    call {:si_unique_call 3643} KeInitializeTimer(0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2418;
    assume {:nonnull} out_Tmp_2418 != 0;
    assume out_Tmp_2418 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2405;
    assume {:nonnull} out_Tmp_2405 != 0;
    assume out_Tmp_2405 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2411;
    assume {:nonnull} out_Tmp_2411 != 0;
    assume out_Tmp_2411 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2401;
    assume {:nonnull} out_Tmp_2401 != 0;
    assume out_Tmp_2401 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2402;
    assume {:nonnull} out_Tmp_2402 != 0;
    assume out_Tmp_2402 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2413;
    assume {:nonnull} out_Tmp_2413 != 0;
    assume out_Tmp_2413 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2406;
    assume {:nonnull} out_Tmp_2406 != 0;
    assume out_Tmp_2406 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2400;
    assume {:nonnull} out_Tmp_2400 != 0;
    assume out_Tmp_2400 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2404;
    assume {:nonnull} out_Tmp_2404 != 0;
    assume out_Tmp_2404 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2407;
    assume {:nonnull} out_Tmp_2407 != 0;
    assume out_Tmp_2407 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2414;
    assume {:nonnull} out_Tmp_2414 != 0;
    assume out_Tmp_2414 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2412;
    assume {:nonnull} out_Tmp_2412 != 0;
    assume out_Tmp_2412 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2416;
    assume {:nonnull} out_Tmp_2416 != 0;
    assume out_Tmp_2416 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2417;
    assume {:nonnull} out_Tmp_2417 != 0;
    assume out_Tmp_2417 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2409;
    assume {:nonnull} out_Tmp_2409 != 0;
    assume out_Tmp_2409 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2419;
    assume {:nonnull} out_Tmp_2419 != 0;
    assume out_Tmp_2419 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    call {:si_unique_call 3644} out_status_76 := Sbp2SendRequest#1(in_PdoExtension_24, Mem_T.P_IRBIRP[in_packet_15], 2);
    goto anon31_Else;

  anon31_Else:
    assume {:partition} out_status_76 >= 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2415;
    assume {:nonnull} out_Tmp_2415 != 0;
    assume out_Tmp_2415 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    call {:si_unique_call 3640} out_sdv_767 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2399;
    assume {:nonnull} out_Tmp_2399 != 0;
    assume out_Tmp_2399 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    call {:si_unique_call 3641} out_vslice_dummy_var_310 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    call {:si_unique_call 3645} {:si_old_unique_call 1} out_Tmp_2399, out_Tmp_2400, out_cnt, out_Tmp_2401, out_context_3, out_Tmp_2402, out_Tmp_2404, out_Tmp_2405, out_Tmp_2406, out_Tmp_2407, out_Tmp_2409, out_sdv_767, out_Tmp_2411, out_Tmp_2412, out_Tmp_2413, out_Tmp_2414, out_Tmp_2415, out_status_76, out_Tmp_2416, out_Tmp_2417, out_Tmp_2418, out_Tmp_2419, out_vslice_dummy_var_310 := Sbp2PreAllocateLists_loop_L120(out_Tmp_2399, out_Tmp_2400, out_cnt, out_Tmp_2401, out_context_3, out_Tmp_2402, out_Tmp_2404, out_Tmp_2405, out_Tmp_2406, out_Tmp_2407, out_Tmp_2409, out_sdv_767, out_Tmp_2411, out_Tmp_2412, out_Tmp_2413, out_Tmp_2414, out_Tmp_2415, in_packet_15, out_status_76, out_Tmp_2416, out_Tmp_2417, out_Tmp_2418, out_Tmp_2419, in_PdoExtension_24, out_vslice_dummy_var_310);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L120(in_Tmp_2399: int, in_Tmp_2400: int, in_cnt: int, in_Tmp_2401: int, in_context_3: int, in_Tmp_2402: int, in_Tmp_2404: int, in_Tmp_2405: int, in_Tmp_2406: int, in_Tmp_2407: int, in_Tmp_2409: int, in_sdv_767: int, in_Tmp_2411: int, in_Tmp_2412: int, in_Tmp_2413: int, in_Tmp_2414: int, in_Tmp_2415: int, in_packet_15: int, in_status_76: int, in_Tmp_2416: int, in_Tmp_2417: int, in_Tmp_2418: int, in_Tmp_2419: int, in_PdoExtension_24: int, in_vslice_dummy_var_310: int) returns (out_Tmp_2399: int, out_Tmp_2400: int, out_cnt: int, out_Tmp_2401: int, out_context_3: int, out_Tmp_2402: int, out_Tmp_2404: int, out_Tmp_2405: int, out_Tmp_2406: int, out_Tmp_2407: int, out_Tmp_2409: int, out_sdv_767: int, out_Tmp_2411: int, out_Tmp_2412: int, out_Tmp_2413: int, out_Tmp_2414: int, out_Tmp_2415: int, out_status_76: int, out_Tmp_2416: int, out_Tmp_2417: int, out_Tmp_2418: int, out_Tmp_2419: int, out_vslice_dummy_var_310: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2PreAllocateLists_loop_L88(in_cnt: int, in_statusFifoElement_1: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_308: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_308: int)
{

  entry:
    out_cnt, out_statusFifoElement_1, out_boogieTmp, out_vslice_dummy_var_308 := in_cnt, in_statusFifoElement_1, in_boogieTmp, in_vslice_dummy_var_308;
    goto L88, exit;

  exit:
    return;

  L88:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon27_Else;

  anon27_Else:
    assume {:partition} 15 > out_cnt;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    havoc out_statusFifoElement_1;
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    call {:si_unique_call 3647} out_boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 3646} out_vslice_dummy_var_308 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    havoc out_cnt;
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L88(in_cnt: int, in_statusFifoElement_1: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_308: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_308: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:SIextraRecBound 8} Sbp2PreAllocateLists_loop_L41(in_cnt: int, in_sdv_762: int, in_sdv_766: int, in_Tmp_2408: int, in_packet_15: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_307: int) returns (out_cnt: int, out_sdv_762: int, out_sdv_766: int, out_Tmp_2408: int, out_boogieTmp: int, out_vslice_dummy_var_307: int)
{
  var vslice_dummy_var_3077: int;

  entry:
    out_cnt, out_sdv_762, out_sdv_766, out_Tmp_2408, out_boogieTmp, out_vslice_dummy_var_307 := in_cnt, in_sdv_762, in_sdv_766, in_Tmp_2408, in_boogieTmp, in_vslice_dummy_var_307;
    goto L41, exit;

  exit:
    return;

  L41:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon25_Else;

  anon25_Else:
    assume {:partition} 8 > out_cnt;
    call {:si_unique_call 3651} out_sdv_762 := ExAllocatePoolWithTag(512, 24, -347053485);
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    Mem_T.P_IRBIRP[in_packet_15] := out_sdv_762;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon33_Then;

  anon33_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_packet_15] != 0;
    call {:si_unique_call 3650} out_sdv_766 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon34_Else;

  anon34_Else:
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    havoc out_Tmp_2408;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} out_Tmp_2408 != 0;
    assume out_Tmp_2408 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc vslice_dummy_var_3077;
    call {:si_unique_call 3649} out_boogieTmp := IoAllocateIrp(vslice_dummy_var_3077, 0);
    Mem_T.Irp__IRBIRP[Irp__IRBIRP(Mem_T.P_IRBIRP[in_packet_15])] := out_boogieTmp;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.Irp__IRBIRP[Irp__IRBIRP(Mem_T.P_IRBIRP[in_packet_15])] != 0;
    call {:si_unique_call 3648} out_vslice_dummy_var_307 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon26_Else_dummy;

  anon26_Else_dummy:
    call {:si_unique_call 3652} {:si_old_unique_call 1} out_cnt, out_sdv_762, out_sdv_766, out_Tmp_2408, out_boogieTmp, out_vslice_dummy_var_307 := Sbp2PreAllocateLists_loop_L41(out_cnt, out_sdv_762, out_sdv_766, out_Tmp_2408, in_packet_15, in_PdoExtension_24, out_boogieTmp, out_vslice_dummy_var_307);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L41(in_cnt: int, in_sdv_762: int, in_sdv_766: int, in_Tmp_2408: int, in_packet_15: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_307: int) returns (out_cnt: int, out_sdv_762: int, out_sdv_766: int, out_Tmp_2408: int, out_boogieTmp: int, out_vslice_dummy_var_307: int);
  modifies alloc, Mem_T.Irp__IRBIRP, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CreateDeviceRelations_loop_L35(in_i_8: int, in_Tmp_2507: int, in_Tmp_2512: int, in_OrgLUNCount: int, in_FdoExtension_8: int) returns (out_i_8: int, out_Tmp_2507: int, out_Tmp_2512: int)
{

  entry:
    out_i_8, out_Tmp_2507, out_Tmp_2512 := in_i_8, in_Tmp_2507, in_Tmp_2512;
    goto L35, exit;

  exit:
    return;

  L35:
    goto anon42_Else;

  anon42_Else:
    assume {:partition} in_OrgLUNCount > out_i_8;
    out_Tmp_2507 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2512;
    assume {:nonnull} out_Tmp_2512 != 0;
    assume out_Tmp_2512 > 0;
    goto anon53_Else;

  anon53_Else:
    out_i_8 := out_i_8 + 1;
    goto anon53_Else_dummy;

  anon53_Else_dummy:
    havoc out_i_8;
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L35(in_i_8: int, in_Tmp_2507: int, in_Tmp_2512: int, in_OrgLUNCount: int, in_FdoExtension_8: int) returns (out_i_8: int, out_Tmp_2507: int, out_Tmp_2512: int);
  free ensures {:va_keep} out_Tmp_2507 == in_i_8 || out_Tmp_2507 == in_Tmp_2507;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CreateDeviceRelations_loop_L80(in_i_8: int, in_Tmp_2486: int, in_Tmp_2494: int, in_Tmp_2502: int, in_Tmp_2504: int, in_Tmp_2514: int, in_status_78: int, in_instanceNum: int, in_FdoExtension_8: int) returns (out_Tmp_2486: int, out_Tmp_2494: int, out_Tmp_2502: int, out_Tmp_2504: int, out_Tmp_2514: int, out_status_78: int, out_instanceNum: int)
{

  entry:
    out_Tmp_2486, out_Tmp_2494, out_Tmp_2502, out_Tmp_2504, out_Tmp_2514, out_status_78, out_instanceNum := in_Tmp_2486, in_Tmp_2494, in_Tmp_2502, in_Tmp_2504, in_Tmp_2514, in_status_78, in_instanceNum;
    goto L80, exit;

  exit:
    return;

  L80:
    out_Tmp_2494 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2504 := out_Tmp_2494;
    out_Tmp_2486 := in_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2502;
    out_Tmp_2514 := out_Tmp_2502 + out_Tmp_2486 * 268;
    call {:si_unique_call 3653} out_status_78 := Sbp2CreatePdo(in_FdoExtension_8, out_Tmp_2514, out_Tmp_2504);
    goto anon47_Then;

  anon47_Then:
    assume {:partition} out_status_78 == -1073741771;
    goto anon47_Then_dummy;

  anon47_Then_dummy:
    call {:si_unique_call 3654} {:si_old_unique_call 1} out_Tmp_2486, out_Tmp_2494, out_Tmp_2502, out_Tmp_2504, out_Tmp_2514, out_status_78, out_instanceNum := Sbp2CreateDeviceRelations_loop_L80(in_i_8, out_Tmp_2486, out_Tmp_2494, out_Tmp_2502, out_Tmp_2504, out_Tmp_2514, out_status_78, out_instanceNum, in_FdoExtension_8);
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L80(in_i_8: int, in_Tmp_2486: int, in_Tmp_2494: int, in_Tmp_2502: int, in_Tmp_2504: int, in_Tmp_2514: int, in_status_78: int, in_instanceNum: int, in_FdoExtension_8: int) returns (out_Tmp_2486: int, out_Tmp_2494: int, out_Tmp_2502: int, out_Tmp_2504: int, out_Tmp_2514: int, out_status_78: int, out_instanceNum: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_Tmp_2486 == in_Tmp_2486 || out_Tmp_2486 == in_i_8;
  free ensures {:va_keep} out_status_78 == 0 || out_status_78 == -1073741823 || out_status_78 == 5 || out_status_78 == -1073741811 || out_status_78 == -1073741670 || out_status_78 == -1073741824 || out_status_78 == -1073741771 || out_status_78 == in_status_78;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CreateDeviceRelations_loop_L58(in_i_8: int, in_Tmp_2486: int, in_Tmp_2487: int, in_Tmp_2488: int, in_Tmp_2489: int, in_Tmp_2490: int, in_subStatus: int, in_Tmp_2492: int, in_pdoExtension_21: int, in_Tmp_2494: int, in_Tmp_2495: int, in_Tmp_2497: int, in_Tmp_2498: int, in_Tmp_2499: int, in_Tmp_2500: int, in_Tmp_2502: int, in_Tmp_2503: int, in_Tmp_2504: int, in_Tmp_2506: int, in_Tmp_2508: int, in_Tmp_2509: int, in_Tmp_2510: int, in_Tmp_2514: int, in_Tmp_2515: int, in_Tmp_2516: int, in_Tmp_2517: int, in_status_78: int, in_instanceNum: int, in_Tmp_2518: int, in_Tmp_2520: int, in_Tmp_2521: int, in_Tmp_2522: int, in_FdoExtension_8: int, in_DeviceRelations: int, in_vslice_dummy_var_319: int, in_vslice_dummy_var_320: int) returns (out_i_8: int, out_Tmp_2486: int, out_Tmp_2487: int, out_Tmp_2488: int, out_Tmp_2489: int, out_Tmp_2490: int, out_subStatus: int, out_Tmp_2492: int, out_pdoExtension_21: int, out_Tmp_2494: int, out_Tmp_2495: int, out_Tmp_2497: int, out_Tmp_2498: int, out_Tmp_2499: int, out_Tmp_2500: int, out_Tmp_2502: int, out_Tmp_2503: int, out_Tmp_2504: int, out_Tmp_2506: int, out_Tmp_2508: int, out_Tmp_2509: int, out_Tmp_2510: int, out_Tmp_2514: int, out_Tmp_2515: int, out_Tmp_2516: int, out_Tmp_2517: int, out_status_78: int, out_instanceNum: int, out_Tmp_2518: int, out_Tmp_2520: int, out_Tmp_2521: int, out_Tmp_2522: int, out_vslice_dummy_var_319: int, out_vslice_dummy_var_320: int)
{

  entry:
    out_i_8, out_Tmp_2486, out_Tmp_2487, out_Tmp_2488, out_Tmp_2489, out_Tmp_2490, out_subStatus, out_Tmp_2492, out_pdoExtension_21, out_Tmp_2494, out_Tmp_2495, out_Tmp_2497, out_Tmp_2498, out_Tmp_2499, out_Tmp_2500, out_Tmp_2502, out_Tmp_2503, out_Tmp_2504, out_Tmp_2506, out_Tmp_2508, out_Tmp_2509, out_Tmp_2510, out_Tmp_2514, out_Tmp_2515, out_Tmp_2516, out_Tmp_2517, out_status_78, out_instanceNum, out_Tmp_2518, out_Tmp_2520, out_Tmp_2521, out_Tmp_2522, out_vslice_dummy_var_319, out_vslice_dummy_var_320 := in_i_8, in_Tmp_2486, in_Tmp_2487, in_Tmp_2488, in_Tmp_2489, in_Tmp_2490, in_subStatus, in_Tmp_2492, in_pdoExtension_21, in_Tmp_2494, in_Tmp_2495, in_Tmp_2497, in_Tmp_2498, in_Tmp_2499, in_Tmp_2500, in_Tmp_2502, in_Tmp_2503, in_Tmp_2504, in_Tmp_2506, in_Tmp_2508, in_Tmp_2509, in_Tmp_2510, in_Tmp_2514, in_Tmp_2515, in_Tmp_2516, in_Tmp_2517, in_status_78, in_instanceNum, in_Tmp_2518, in_Tmp_2520, in_Tmp_2521, in_Tmp_2522, in_vslice_dummy_var_319, in_vslice_dummy_var_320;
    goto L58, exit;

  exit:
    return;

  L58:
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    goto anon45_Else;

  anon45_Else:
    out_Tmp_2521 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2506;
    assume {:nonnull} out_Tmp_2506 != 0;
    assume out_Tmp_2506 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    out_subStatus := 0;
    out_Tmp_2490 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2498;
    assume {:nonnull} out_Tmp_2498 != 0;
    assume out_Tmp_2498 > 0;
    havoc out_Tmp_2497;
    assume {:nonnull} out_Tmp_2497 != 0;
    assume out_Tmp_2497 > 0;
    havoc out_pdoExtension_21;
    assume {:nonnull} out_pdoExtension_21 != 0;
    assume out_pdoExtension_21 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    out_Tmp_2508 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2495 := out_Tmp_2508;
    out_Tmp_2516 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2515;
    out_Tmp_2500 := out_Tmp_2515 + out_Tmp_2516 * 268;
    call {:si_unique_call 3659} out_subStatus := Sbp2ReInitializePdo(in_FdoExtension_8, out_Tmp_2500, out_Tmp_2495);
    goto L66;

  L66:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} out_subStatus >= 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2522;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2517;
    out_Tmp_2489 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2510;
    assume {:nonnull} out_Tmp_2510 != 0;
    assume out_Tmp_2510 > 0;
    assume {:nonnull} out_Tmp_2517 != 0;
    assume out_Tmp_2517 > 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_2520 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2487;
    assume {:nonnull} out_Tmp_2487 != 0;
    assume out_Tmp_2487 > 0;
    call {:si_unique_call 3655} out_vslice_dummy_var_319 := sdv_ObReferenceObject(0);
    goto L73;

  L73:
    out_i_8 := out_i_8 + 1;
    goto L73_dummy;

  L73_dummy:
    call {:si_unique_call 3660} {:si_old_unique_call 1} out_i_8, out_Tmp_2486, out_Tmp_2487, out_Tmp_2488, out_Tmp_2489, out_Tmp_2490, out_subStatus, out_Tmp_2492, out_pdoExtension_21, out_Tmp_2494, out_Tmp_2495, out_Tmp_2497, out_Tmp_2498, out_Tmp_2499, out_Tmp_2500, out_Tmp_2502, out_Tmp_2503, out_Tmp_2504, out_Tmp_2506, out_Tmp_2508, out_Tmp_2509, out_Tmp_2510, out_Tmp_2514, out_Tmp_2515, out_Tmp_2516, out_Tmp_2517, out_status_78, out_instanceNum, out_Tmp_2518, out_Tmp_2520, out_Tmp_2521, out_Tmp_2522, out_vslice_dummy_var_319, out_vslice_dummy_var_320 := Sbp2CreateDeviceRelations_loop_L58(out_i_8, out_Tmp_2486, out_Tmp_2487, out_Tmp_2488, out_Tmp_2489, out_Tmp_2490, out_subStatus, out_Tmp_2492, out_pdoExtension_21, out_Tmp_2494, out_Tmp_2495, out_Tmp_2497, out_Tmp_2498, out_Tmp_2499, out_Tmp_2500, out_Tmp_2502, out_Tmp_2503, out_Tmp_2504, out_Tmp_2506, out_Tmp_2508, out_Tmp_2509, out_Tmp_2510, out_Tmp_2514, out_Tmp_2515, out_Tmp_2516, out_Tmp_2517, out_status_78, out_instanceNum, out_Tmp_2518, out_Tmp_2520, out_Tmp_2521, out_Tmp_2522, in_FdoExtension_8, in_DeviceRelations, out_vslice_dummy_var_319, out_vslice_dummy_var_320);
    return;

  anon46_Then:
    assume {:partition} 0 > out_subStatus;
    goto L73;

  anon56_Then:
    goto L66;

  anon55_Then:
    out_instanceNum := 0;
    goto L80;

  L80:
    call {:si_unique_call 3657} out_Tmp_2486, out_Tmp_2494, out_Tmp_2502, out_Tmp_2504, out_Tmp_2514, out_status_78, out_instanceNum := Sbp2CreateDeviceRelations_loop_L80(out_i_8, out_Tmp_2486, out_Tmp_2494, out_Tmp_2502, out_Tmp_2504, out_Tmp_2514, out_status_78, out_instanceNum, in_FdoExtension_8);
    goto L80_last;

  L80_last:
    out_Tmp_2494 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2504 := out_Tmp_2494;
    out_Tmp_2486 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2502;
    out_Tmp_2514 := out_Tmp_2502 + out_Tmp_2486 * 268;
    call {:si_unique_call 3658} out_status_78 := Sbp2CreatePdo(in_FdoExtension_8, out_Tmp_2514, out_Tmp_2504);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} out_status_78 != -1073741771;
    goto anon48_Then;

  anon48_Then:
    assume {:partition} 0 <= out_status_78;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2503;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2492;
    out_Tmp_2499 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2518;
    assume {:nonnull} out_Tmp_2492 != 0;
    assume out_Tmp_2492 > 0;
    assume {:nonnull} out_Tmp_2518 != 0;
    assume out_Tmp_2518 > 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_2488 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2509;
    assume {:nonnull} out_Tmp_2509 != 0;
    assume out_Tmp_2509 > 0;
    call {:si_unique_call 3656} out_vslice_dummy_var_320 := sdv_ObReferenceObject(0);
    goto L73;

  anon47_Then:
    assume {:partition} out_status_78 == -1073741771;
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L58(in_i_8: int, in_Tmp_2486: int, in_Tmp_2487: int, in_Tmp_2488: int, in_Tmp_2489: int, in_Tmp_2490: int, in_subStatus: int, in_Tmp_2492: int, in_pdoExtension_21: int, in_Tmp_2494: int, in_Tmp_2495: int, in_Tmp_2497: int, in_Tmp_2498: int, in_Tmp_2499: int, in_Tmp_2500: int, in_Tmp_2502: int, in_Tmp_2503: int, in_Tmp_2504: int, in_Tmp_2506: int, in_Tmp_2508: int, in_Tmp_2509: int, in_Tmp_2510: int, in_Tmp_2514: int, in_Tmp_2515: int, in_Tmp_2516: int, in_Tmp_2517: int, in_status_78: int, in_instanceNum: int, in_Tmp_2518: int, in_Tmp_2520: int, in_Tmp_2521: int, in_Tmp_2522: int, in_FdoExtension_8: int, in_DeviceRelations: int, in_vslice_dummy_var_319: int, in_vslice_dummy_var_320: int) returns (out_i_8: int, out_Tmp_2486: int, out_Tmp_2487: int, out_Tmp_2488: int, out_Tmp_2489: int, out_Tmp_2490: int, out_subStatus: int, out_Tmp_2492: int, out_pdoExtension_21: int, out_Tmp_2494: int, out_Tmp_2495: int, out_Tmp_2497: int, out_Tmp_2498: int, out_Tmp_2499: int, out_Tmp_2500: int, out_Tmp_2502: int, out_Tmp_2503: int, out_Tmp_2504: int, out_Tmp_2506: int, out_Tmp_2508: int, out_Tmp_2509: int, out_Tmp_2510: int, out_Tmp_2514: int, out_Tmp_2515: int, out_Tmp_2516: int, out_Tmp_2517: int, out_status_78: int, out_instanceNum: int, out_Tmp_2518: int, out_Tmp_2520: int, out_Tmp_2521: int, out_Tmp_2522: int, out_vslice_dummy_var_319: int, out_vslice_dummy_var_320: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_subStatus == 0 || out_subStatus == -1073741670 || out_subStatus == in_subStatus;
  free ensures {:va_keep} out_status_78 == 0 || out_status_78 == -1073741823 || out_status_78 == 5 || out_status_78 == -1073741811 || out_status_78 == -1073741670 || out_status_78 == -1073741824 || out_status_78 == -1073741771 || out_status_78 == in_status_78;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2SendRequest#0_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_66: int)
{

  entry:
    goto L142, exit;

  exit:
    return;

  L142:
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon83_Then;

  anon83_Then:
    goto anon83_Then_dummy;

  anon83_Then_dummy:
    call {:si_unique_call 3661} {:si_old_unique_call 1} Sbp2SendRequest#0_loop_L142(in_tick, in_s_p_e_c_i_a_l_66);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_66: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2SendRequest#0_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1308: int, in_s_p_e_c_i_a_l_66: int, in_delay: int) returns (out_Tmp_1308: int, out_s_p_e_c_i_a_l_66: int)
{

  entry:
    out_Tmp_1308, out_s_p_e_c_i_a_l_66 := in_Tmp_1308, in_s_p_e_c_i_a_l_66;
    goto L132, exit;

  exit:
    return;

  L132:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon70_Else;

  anon70_Else:
    out_Tmp_1308 := KeTickCount;
    assume {:nonnull} out_Tmp_1308 != 0;
    assume out_Tmp_1308 > 0;
    havoc out_s_p_e_c_i_a_l_66;
    goto L142;

  L142:
    call {:si_unique_call 3662} Sbp2SendRequest#0_loop_L142(in_tick, out_s_p_e_c_i_a_l_66);
    goto L142_last;

  L142_last:
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon71_Then;

  anon71_Then:
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    call {:si_unique_call 3663} {:si_old_unique_call 1} out_Tmp_1308, out_s_p_e_c_i_a_l_66 := Sbp2SendRequest#0_loop_L132(in_tick, in_pComplete, out_Tmp_1308, out_s_p_e_c_i_a_l_66, in_delay);
    return;

  anon83_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1308: int, in_s_p_e_c_i_a_l_66: int, in_delay: int) returns (out_Tmp_1308: int, out_s_p_e_c_i_a_l_66: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_65: int, in_delay: int)
{

  entry:
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    goto anon81_Then;

  anon81_Then:
    goto anon81_Then_dummy;

  anon81_Then_dummy:
    call {:si_unique_call 3664} {:si_old_unique_call 1} Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_65, in_delay);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_65: int, in_delay: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2SendRequest#1_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_66: int)
{

  entry:
    goto L142, exit;

  exit:
    return;

  L142:
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon83_Then;

  anon83_Then:
    goto anon83_Then_dummy;

  anon83_Then_dummy:
    call {:si_unique_call 3665} {:si_old_unique_call 1} Sbp2SendRequest#1_loop_L142(in_tick, in_s_p_e_c_i_a_l_66);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_66: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2SendRequest#1_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1308: int, in_s_p_e_c_i_a_l_66: int, in_delay: int) returns (out_Tmp_1308: int, out_s_p_e_c_i_a_l_66: int)
{

  entry:
    out_Tmp_1308, out_s_p_e_c_i_a_l_66 := in_Tmp_1308, in_s_p_e_c_i_a_l_66;
    goto L132, exit;

  exit:
    return;

  L132:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon70_Else;

  anon70_Else:
    out_Tmp_1308 := KeTickCount;
    assume {:nonnull} out_Tmp_1308 != 0;
    assume out_Tmp_1308 > 0;
    havoc out_s_p_e_c_i_a_l_66;
    goto L142;

  L142:
    call {:si_unique_call 3666} Sbp2SendRequest#1_loop_L142(in_tick, out_s_p_e_c_i_a_l_66);
    goto L142_last;

  L142_last:
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon71_Then;

  anon71_Then:
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    call {:si_unique_call 3667} {:si_old_unique_call 1} out_Tmp_1308, out_s_p_e_c_i_a_l_66 := Sbp2SendRequest#1_loop_L132(in_tick, in_pComplete, out_Tmp_1308, out_s_p_e_c_i_a_l_66, in_delay);
    return;

  anon83_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1308: int, in_s_p_e_c_i_a_l_66: int, in_delay: int) returns (out_Tmp_1308: int, out_s_p_e_c_i_a_l_66: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_65: int, in_delay: int)
{

  entry:
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    goto anon81_Then;

  anon81_Then:
    goto anon81_Then_dummy;

  anon81_Then_dummy:
    call {:si_unique_call 3668} {:si_old_unique_call 1} Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_65, in_delay);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_65: int, in_delay: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2Reset#0_loop_L26(in_Tmp_1923: int, in_Tmp_1924: int, in_Tmp_1925: int, in_transTimeout: int, in_retry: int, in_pdoExtension_16: int, in_Tmp_1926: int, in_Tmp_1927: int, in_Tmp_1928: int, in_Tmp_1929: int, in_Tmp_1930: int, in_sdv_583: int, in_Tmp_1932: int, in_Tmp_1933: int, in_transType: int, in_sdv_585: int, in_Tmp_1934: int, in_sdv_587: int, in_Tmp_1935: int, in_Tmp_1936: int, in_Tmp_1937: int, in_oldIrql_5: int, in_Tmp_1938: int, in_Tmp_1939: int, in_fdoExtension_5: int, in_sdv_589: int, in_Tmp_1940: int, in_Tmp_1941: int, in_Tmp_1942: int, in_Tmp_1943: int, in_Tmp_1944: int, in_Tmp_1945: int, in_Tmp_1946: int, in_status_61: int, in_Tmp_1947: int, in_Tmp_1948: int, in_Tmp_1949: int, in_Tmp_1950: int, in_ResetLevel: int, in_vslice_dummy_var_350: int, in_vslice_dummy_var_352: int, in_vslice_dummy_var_353: int) returns (out_Tmp_1923: int, out_Tmp_1924: int, out_Tmp_1925: int, out_transTimeout: int, out_retry: int, out_Tmp_1926: int, out_Tmp_1927: int, out_Tmp_1928: int, out_Tmp_1929: int, out_Tmp_1930: int, out_Tmp_1932: int, out_Tmp_1933: int, out_transType: int, out_sdv_585: int, out_Tmp_1934: int, out_Tmp_1935: int, out_Tmp_1936: int, out_Tmp_1937: int, out_oldIrql_5: int, out_Tmp_1938: int, out_Tmp_1939: int, out_Tmp_1940: int, out_Tmp_1941: int, out_Tmp_1942: int, out_Tmp_1943: int, out_Tmp_1944: int, out_Tmp_1945: int, out_Tmp_1946: int, out_status_61: int, out_Tmp_1947: int, out_Tmp_1948: int, out_Tmp_1949: int, out_Tmp_1950: int, out_vslice_dummy_var_350: int, out_vslice_dummy_var_352: int, out_vslice_dummy_var_353: int)
{
  var vslice_dummy_var_3078: int;

  entry:
    out_Tmp_1923, out_Tmp_1924, out_Tmp_1925, out_transTimeout, out_retry, out_Tmp_1926, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_Tmp_1930, out_Tmp_1932, out_Tmp_1933, out_transType, out_sdv_585, out_Tmp_1934, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_oldIrql_5, out_Tmp_1938, out_Tmp_1939, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, out_Tmp_1943, out_Tmp_1944, out_Tmp_1945, out_Tmp_1946, out_status_61, out_Tmp_1947, out_Tmp_1948, out_Tmp_1949, out_Tmp_1950, out_vslice_dummy_var_350, out_vslice_dummy_var_352, out_vslice_dummy_var_353 := in_Tmp_1923, in_Tmp_1924, in_Tmp_1925, in_transTimeout, in_retry, in_Tmp_1926, in_Tmp_1927, in_Tmp_1928, in_Tmp_1929, in_Tmp_1930, in_Tmp_1932, in_Tmp_1933, in_transType, in_sdv_585, in_Tmp_1934, in_Tmp_1935, in_Tmp_1936, in_Tmp_1937, in_oldIrql_5, in_Tmp_1938, in_Tmp_1939, in_Tmp_1940, in_Tmp_1941, in_Tmp_1942, in_Tmp_1943, in_Tmp_1944, in_Tmp_1945, in_Tmp_1946, in_status_61, in_Tmp_1947, in_Tmp_1948, in_Tmp_1949, in_Tmp_1950, in_vslice_dummy_var_350, in_vslice_dummy_var_352, in_vslice_dummy_var_353;
    goto L26, exit;

  exit:
    return;

  L26:
    goto anon60_Then;

  anon60_Then:
    assume {:partition} out_retry > 0;
    out_retry := out_retry - 1;
    call {:si_unique_call 3687} Sbp2AddLog(in_pdoExtension_16, 1, -227314626, in_ResetLevel, 0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} in_ResetLevel != 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} in_ResetLevel != 1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} in_ResetLevel != 2;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} in_ResetLevel != 3;
    goto L187;

  L187:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1933;
    assume {:nonnull} out_Tmp_1933 != 0;
    assume out_Tmp_1933 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc out_Tmp_1938;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1946;
    call {:si_unique_call 3693} WPP_SF_q(out_Tmp_1946, 64, out_Tmp_1938, in_pdoExtension_16);
    goto L188;

  L188:
    call {:si_unique_call 3691} out_Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1942 != 0;
    assume out_Tmp_1942 > 0;
    call {:si_unique_call 3692} sdv_KeAcquireSpinLock(0, out_Tmp_1942);
    assume {:nonnull} out_Tmp_1942 != 0;
    assume out_Tmp_1942 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_fdoExtension_5 != 0;
    assume in_fdoExtension_5 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    goto L201;

  L201:
    call {:si_unique_call 3673} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3674} CleanupOrbList#0(in_pdoExtension_16, -1073741248);
    call {:si_unique_call 3675} out_status_61 := Sbp2QueueManagementWorkItem(in_pdoExtension_16, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 3672} Sbp2AddLog(in_pdoExtension_16, 1, -227314639, out_status_61, out_retry);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} out_status_61 == -1072562032;
    goto L98;

  L98:
    goto anon66_Else;

  anon66_Else:
    assume {:partition} out_retry != 0;
    call {:si_unique_call 3670} out_vslice_dummy_var_350 := KeCancelTimer(0);
    call {:si_unique_call 3671} out_status_61 := Sbp2UpdateNodeInformation#0(in_pdoExtension_16);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1949;
    assume {:nonnull} out_Tmp_1949 != 0;
    assume out_Tmp_1949 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc out_Tmp_1943;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1937;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc vslice_dummy_var_3078;
    call {:si_unique_call 3669} WPP_SF_qDD(out_Tmp_1937, 65, out_Tmp_1943, in_pdoExtension_16, out_status_61, vslice_dummy_var_3078);
    goto anon69_Else_dummy;

  anon69_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 3694} {:si_old_unique_call 1} out_Tmp_1923, out_Tmp_1924, out_Tmp_1925, out_transTimeout, out_retry, out_Tmp_1926, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_Tmp_1930, out_Tmp_1932, out_Tmp_1933, out_transType, out_sdv_585, out_Tmp_1934, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_oldIrql_5, out_Tmp_1938, out_Tmp_1939, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, out_Tmp_1943, out_Tmp_1944, out_Tmp_1945, out_Tmp_1946, out_status_61, out_Tmp_1947, out_Tmp_1948, out_Tmp_1949, out_Tmp_1950, out_vslice_dummy_var_350, out_vslice_dummy_var_352, out_vslice_dummy_var_353 := Sbp2Reset#0_loop_L26(out_Tmp_1923, out_Tmp_1924, out_Tmp_1925, out_transTimeout, out_retry, in_pdoExtension_16, out_Tmp_1926, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_Tmp_1930, in_sdv_583, out_Tmp_1932, out_Tmp_1933, out_transType, out_sdv_585, out_Tmp_1934, in_sdv_587, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_oldIrql_5, out_Tmp_1938, out_Tmp_1939, in_fdoExtension_5, in_sdv_589, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, out_Tmp_1943, out_Tmp_1944, out_Tmp_1945, out_Tmp_1946, out_status_61, out_Tmp_1947, out_Tmp_1948, out_Tmp_1949, out_Tmp_1950, in_ResetLevel, out_vslice_dummy_var_350, out_vslice_dummy_var_352, out_vslice_dummy_var_353);
    return;

  anon69_Then:
    goto anon69_Then_dummy;

  anon69_Then_dummy:
    goto L_BAF_0;

  anon82_Then:
    goto anon82_Then_dummy;

  anon82_Then_dummy:
    goto L_BAF_0;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon68_Then_dummy;

  anon68_Then_dummy:
    goto L_BAF_0;

  anon64_Then:
    assume {:partition} out_status_61 != -1072562032;
    goto anon65_Then;

  anon65_Then:
    assume {:partition} out_status_61 == -1073741248;
    goto L98;

  anon87_Then:
    goto L201;

  anon77_Then:
    goto L188;

  anon86_Then:
    goto L188;

  anon76_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon78_Then:
    assume {:partition} in_ResetLevel == 3;
    goto L187;

  anon79_Then:
    assume {:partition} in_ResetLevel == 2;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1934;
    assume {:nonnull} out_Tmp_1934 != 0;
    assume out_Tmp_1934 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc out_Tmp_1941;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1935;
    call {:si_unique_call 3690} WPP_SF_q(out_Tmp_1935, 63, out_Tmp_1941, in_pdoExtension_16);
    goto L46;

  L46:
    out_transType := 12;
    out_transTimeout := 2;
    out_retry := 0;
    call {:si_unique_call 3676} out_Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1942 != 0;
    assume out_Tmp_1942 > 0;
    call {:si_unique_call 3677} sdv_KeAcquireSpinLock(0, out_Tmp_1942);
    assume {:nonnull} out_Tmp_1942 != 0;
    assume out_Tmp_1942 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1928;
    assume {:nonnull} out_Tmp_1928 != 0;
    assume out_Tmp_1928 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1927;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1950;
    assume {:nonnull} out_Tmp_1927 != 0;
    assume out_Tmp_1927 > 0;
    assume {:nonnull} out_Tmp_1950 != 0;
    assume out_Tmp_1950 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1947;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1926;
    assume {:nonnull} out_Tmp_1926 != 0;
    assume out_Tmp_1926 > 0;
    assume {:nonnull} out_Tmp_1947 != 0;
    assume out_Tmp_1947 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1924;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1940;
    assume {:nonnull} out_Tmp_1924 != 0;
    assume out_Tmp_1924 > 0;
    assume {:nonnull} out_Tmp_1940 != 0;
    assume out_Tmp_1940 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1945;
    assume {:nonnull} out_Tmp_1945 != 0;
    assume out_Tmp_1945 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1945 != 0;
    assume out_Tmp_1945 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1945 != 0;
    assume out_Tmp_1945 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1945 != 0;
    assume out_Tmp_1945 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1923;
    assume {:nonnull} out_Tmp_1923 != 0;
    assume out_Tmp_1923 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1948;
    assume {:nonnull} out_Tmp_1948 != 0;
    assume out_Tmp_1948 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1936;
    assume {:nonnull} out_Tmp_1936 != 0;
    assume out_Tmp_1936 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3678} Sbp2SetManagementTimer(in_pdoExtension_16, out_transTimeout);
    call {:si_unique_call 3679} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3680} CleanupOrbList#0(in_pdoExtension_16, -1073741248);
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3681} out_status_61 := Sbp2AccessRegister#0(in_pdoExtension_16, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(in_pdoExtension_16)), 1024);
    goto L92;

  anon63_Then:
    goto L46;

  anon85_Then:
    goto L46;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon80_Then:
    assume {:partition} in_ResetLevel == 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1929;
    assume {:nonnull} out_Tmp_1929 != 0;
    assume out_Tmp_1929 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc out_Tmp_1932;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1944;
    call {:si_unique_call 3689} WPP_SF_q(out_Tmp_1944, 62, out_Tmp_1932, in_pdoExtension_16);
    goto L149;

  L149:
    call {:si_unique_call 3688} out_sdv_585 := sdv_KeGetCurrentIrql();
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} 2 > out_sdv_585;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3682} out_vslice_dummy_var_352 := Sbp2AccessRegister#0(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 320);
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3683} out_status_61 := Sbp2AccessRegister#0(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 258);
    goto L92;

  anon73_Then:
    assume {:partition} out_sdv_585 >= 2;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3684} out_vslice_dummy_var_353 := Sbp2AccessRegister#0(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 1088);
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3685} out_status_61 := Sbp2AccessRegister#0(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 1026);
    goto L92;

  anon72_Then:
    goto L149;

  anon84_Then:
    goto L149;

  anon71_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon61_Then:
    assume {:partition} in_ResetLevel == 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1939;
    assume {:nonnull} out_Tmp_1939 != 0;
    assume out_Tmp_1939 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    havoc out_Tmp_1925;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1930;
    call {:si_unique_call 3686} WPP_SF_q(out_Tmp_1930, 61, out_Tmp_1925, in_pdoExtension_16);
    goto L178;

  L178:
    out_retry := 0;
    goto L92;

  anon75_Then:
    goto L178;

  anon81_Then:
    goto L178;

  anon74_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:LoopProcedure} Sbp2Reset#0_loop_L26(in_Tmp_1923: int, in_Tmp_1924: int, in_Tmp_1925: int, in_transTimeout: int, in_retry: int, in_pdoExtension_16: int, in_Tmp_1926: int, in_Tmp_1927: int, in_Tmp_1928: int, in_Tmp_1929: int, in_Tmp_1930: int, in_sdv_583: int, in_Tmp_1932: int, in_Tmp_1933: int, in_transType: int, in_sdv_585: int, in_Tmp_1934: int, in_sdv_587: int, in_Tmp_1935: int, in_Tmp_1936: int, in_Tmp_1937: int, in_oldIrql_5: int, in_Tmp_1938: int, in_Tmp_1939: int, in_fdoExtension_5: int, in_sdv_589: int, in_Tmp_1940: int, in_Tmp_1941: int, in_Tmp_1942: int, in_Tmp_1943: int, in_Tmp_1944: int, in_Tmp_1945: int, in_Tmp_1946: int, in_status_61: int, in_Tmp_1947: int, in_Tmp_1948: int, in_Tmp_1949: int, in_Tmp_1950: int, in_ResetLevel: int, in_vslice_dummy_var_350: int, in_vslice_dummy_var_352: int, in_vslice_dummy_var_353: int) returns (out_Tmp_1923: int, out_Tmp_1924: int, out_Tmp_1925: int, out_transTimeout: int, out_retry: int, out_Tmp_1926: int, out_Tmp_1927: int, out_Tmp_1928: int, out_Tmp_1929: int, out_Tmp_1930: int, out_Tmp_1932: int, out_Tmp_1933: int, out_transType: int, out_sdv_585: int, out_Tmp_1934: int, out_Tmp_1935: int, out_Tmp_1936: int, out_Tmp_1937: int, out_oldIrql_5: int, out_Tmp_1938: int, out_Tmp_1939: int, out_Tmp_1940: int, out_Tmp_1941: int, out_Tmp_1942: int, out_Tmp_1943: int, out_Tmp_1944: int, out_Tmp_1945: int, out_Tmp_1946: int, out_status_61: int, out_Tmp_1947: int, out_Tmp_1948: int, out_Tmp_1949: int, out_Tmp_1950: int, out_vslice_dummy_var_350: int, out_vslice_dummy_var_352: int, out_vslice_dummy_var_353: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, sdv_irql_current, queued, Mem_T.Status__IO_STATUS_BLOCK, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_transTimeout == 2 || out_transTimeout == in_transTimeout;
  free ensures {:va_keep} out_transType == 12 || out_transType == in_transType;
  free ensures {:va_keep} out_status_61 == 0 || out_status_61 == -1073741670 || out_status_61 == in_status_61;
  free ensures {:va_keep} out_vslice_dummy_var_350 == 1 || out_vslice_dummy_var_350 == 0 || out_vslice_dummy_var_350 == in_vslice_dummy_var_350;
  free ensures {:va_keep} out_vslice_dummy_var_352 == -1073741632 || out_vslice_dummy_var_352 == -1073741670 || out_vslice_dummy_var_352 == in_vslice_dummy_var_352;
  free ensures {:va_keep} out_vslice_dummy_var_353 == -1073741632 || out_vslice_dummy_var_353 == -1073741670 || out_vslice_dummy_var_353 == in_vslice_dummy_var_353;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2Reset#1_loop_L26(in_Tmp_1923: int, in_Tmp_1924: int, in_Tmp_1925: int, in_transTimeout: int, in_retry: int, in_pdoExtension_16: int, in_Tmp_1926: int, in_Tmp_1927: int, in_Tmp_1928: int, in_Tmp_1929: int, in_Tmp_1930: int, in_sdv_583: int, in_Tmp_1932: int, in_Tmp_1933: int, in_transType: int, in_sdv_585: int, in_Tmp_1934: int, in_sdv_587: int, in_Tmp_1935: int, in_Tmp_1936: int, in_Tmp_1937: int, in_oldIrql_5: int, in_Tmp_1938: int, in_Tmp_1939: int, in_fdoExtension_5: int, in_sdv_589: int, in_Tmp_1940: int, in_Tmp_1941: int, in_Tmp_1942: int, in_Tmp_1943: int, in_Tmp_1944: int, in_Tmp_1945: int, in_Tmp_1946: int, in_status_61: int, in_Tmp_1947: int, in_Tmp_1948: int, in_Tmp_1949: int, in_Tmp_1950: int, in_ResetLevel: int, in_vslice_dummy_var_354: int, in_vslice_dummy_var_356: int, in_vslice_dummy_var_357: int) returns (out_Tmp_1923: int, out_Tmp_1924: int, out_Tmp_1925: int, out_transTimeout: int, out_retry: int, out_Tmp_1926: int, out_Tmp_1927: int, out_Tmp_1928: int, out_Tmp_1929: int, out_Tmp_1930: int, out_Tmp_1932: int, out_Tmp_1933: int, out_transType: int, out_sdv_585: int, out_Tmp_1934: int, out_Tmp_1935: int, out_Tmp_1936: int, out_Tmp_1937: int, out_oldIrql_5: int, out_Tmp_1938: int, out_Tmp_1939: int, out_Tmp_1940: int, out_Tmp_1941: int, out_Tmp_1942: int, out_Tmp_1943: int, out_Tmp_1944: int, out_Tmp_1945: int, out_Tmp_1946: int, out_status_61: int, out_Tmp_1947: int, out_Tmp_1948: int, out_Tmp_1949: int, out_Tmp_1950: int, out_vslice_dummy_var_354: int, out_vslice_dummy_var_356: int, out_vslice_dummy_var_357: int)
{
  var vslice_dummy_var_3079: int;

  entry:
    out_Tmp_1923, out_Tmp_1924, out_Tmp_1925, out_transTimeout, out_retry, out_Tmp_1926, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_Tmp_1930, out_Tmp_1932, out_Tmp_1933, out_transType, out_sdv_585, out_Tmp_1934, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_oldIrql_5, out_Tmp_1938, out_Tmp_1939, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, out_Tmp_1943, out_Tmp_1944, out_Tmp_1945, out_Tmp_1946, out_status_61, out_Tmp_1947, out_Tmp_1948, out_Tmp_1949, out_Tmp_1950, out_vslice_dummy_var_354, out_vslice_dummy_var_356, out_vslice_dummy_var_357 := in_Tmp_1923, in_Tmp_1924, in_Tmp_1925, in_transTimeout, in_retry, in_Tmp_1926, in_Tmp_1927, in_Tmp_1928, in_Tmp_1929, in_Tmp_1930, in_Tmp_1932, in_Tmp_1933, in_transType, in_sdv_585, in_Tmp_1934, in_Tmp_1935, in_Tmp_1936, in_Tmp_1937, in_oldIrql_5, in_Tmp_1938, in_Tmp_1939, in_Tmp_1940, in_Tmp_1941, in_Tmp_1942, in_Tmp_1943, in_Tmp_1944, in_Tmp_1945, in_Tmp_1946, in_status_61, in_Tmp_1947, in_Tmp_1948, in_Tmp_1949, in_Tmp_1950, in_vslice_dummy_var_354, in_vslice_dummy_var_356, in_vslice_dummy_var_357;
    goto L26, exit;

  exit:
    return;

  L26:
    goto anon60_Then;

  anon60_Then:
    assume {:partition} out_retry > 0;
    out_retry := out_retry - 1;
    call {:si_unique_call 3713} Sbp2AddLog(in_pdoExtension_16, 1, -227314626, in_ResetLevel, 0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} in_ResetLevel != 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} in_ResetLevel != 1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} in_ResetLevel != 2;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} in_ResetLevel != 3;
    goto L187;

  L187:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1933;
    assume {:nonnull} out_Tmp_1933 != 0;
    assume out_Tmp_1933 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc out_Tmp_1938;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1946;
    call {:si_unique_call 3719} WPP_SF_q(out_Tmp_1946, 64, out_Tmp_1938, in_pdoExtension_16);
    goto L188;

  L188:
    call {:si_unique_call 3717} out_Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1942 != 0;
    assume out_Tmp_1942 > 0;
    call {:si_unique_call 3718} sdv_KeAcquireSpinLock(0, out_Tmp_1942);
    assume {:nonnull} out_Tmp_1942 != 0;
    assume out_Tmp_1942 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_fdoExtension_5 != 0;
    assume in_fdoExtension_5 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    goto L201;

  L201:
    call {:si_unique_call 3699} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3700} CleanupOrbList#1(in_pdoExtension_16, -1073741248);
    call {:si_unique_call 3701} out_status_61 := Sbp2QueueManagementWorkItem(in_pdoExtension_16, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 3698} Sbp2AddLog(in_pdoExtension_16, 1, -227314639, out_status_61, out_retry);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} out_status_61 == -1072562032;
    goto L98;

  L98:
    goto anon66_Else;

  anon66_Else:
    assume {:partition} out_retry != 0;
    call {:si_unique_call 3696} out_vslice_dummy_var_354 := KeCancelTimer(0);
    call {:si_unique_call 3697} out_status_61 := Sbp2UpdateNodeInformation#1(in_pdoExtension_16);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1949;
    assume {:nonnull} out_Tmp_1949 != 0;
    assume out_Tmp_1949 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc out_Tmp_1943;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1937;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc vslice_dummy_var_3079;
    call {:si_unique_call 3695} WPP_SF_qDD(out_Tmp_1937, 65, out_Tmp_1943, in_pdoExtension_16, out_status_61, vslice_dummy_var_3079);
    goto anon69_Else_dummy;

  anon69_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 3720} {:si_old_unique_call 1} out_Tmp_1923, out_Tmp_1924, out_Tmp_1925, out_transTimeout, out_retry, out_Tmp_1926, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_Tmp_1930, out_Tmp_1932, out_Tmp_1933, out_transType, out_sdv_585, out_Tmp_1934, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_oldIrql_5, out_Tmp_1938, out_Tmp_1939, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, out_Tmp_1943, out_Tmp_1944, out_Tmp_1945, out_Tmp_1946, out_status_61, out_Tmp_1947, out_Tmp_1948, out_Tmp_1949, out_Tmp_1950, out_vslice_dummy_var_354, out_vslice_dummy_var_356, out_vslice_dummy_var_357 := Sbp2Reset#1_loop_L26(out_Tmp_1923, out_Tmp_1924, out_Tmp_1925, out_transTimeout, out_retry, in_pdoExtension_16, out_Tmp_1926, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_Tmp_1930, in_sdv_583, out_Tmp_1932, out_Tmp_1933, out_transType, out_sdv_585, out_Tmp_1934, in_sdv_587, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_oldIrql_5, out_Tmp_1938, out_Tmp_1939, in_fdoExtension_5, in_sdv_589, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, out_Tmp_1943, out_Tmp_1944, out_Tmp_1945, out_Tmp_1946, out_status_61, out_Tmp_1947, out_Tmp_1948, out_Tmp_1949, out_Tmp_1950, in_ResetLevel, out_vslice_dummy_var_354, out_vslice_dummy_var_356, out_vslice_dummy_var_357);
    return;

  anon69_Then:
    goto anon69_Then_dummy;

  anon69_Then_dummy:
    goto L_BAF_1;

  anon82_Then:
    goto anon82_Then_dummy;

  anon82_Then_dummy:
    goto L_BAF_1;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon68_Then_dummy;

  anon68_Then_dummy:
    goto L_BAF_1;

  anon64_Then:
    assume {:partition} out_status_61 != -1072562032;
    goto anon65_Then;

  anon65_Then:
    assume {:partition} out_status_61 == -1073741248;
    goto L98;

  anon87_Then:
    goto L201;

  anon77_Then:
    goto L188;

  anon86_Then:
    goto L188;

  anon76_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon78_Then:
    assume {:partition} in_ResetLevel == 3;
    goto L187;

  anon79_Then:
    assume {:partition} in_ResetLevel == 2;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1934;
    assume {:nonnull} out_Tmp_1934 != 0;
    assume out_Tmp_1934 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc out_Tmp_1941;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1935;
    call {:si_unique_call 3716} WPP_SF_q(out_Tmp_1935, 63, out_Tmp_1941, in_pdoExtension_16);
    goto L46;

  L46:
    out_transType := 12;
    out_transTimeout := 2;
    out_retry := 0;
    call {:si_unique_call 3702} out_Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1942 != 0;
    assume out_Tmp_1942 > 0;
    call {:si_unique_call 3703} sdv_KeAcquireSpinLock(0, out_Tmp_1942);
    assume {:nonnull} out_Tmp_1942 != 0;
    assume out_Tmp_1942 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1928;
    assume {:nonnull} out_Tmp_1928 != 0;
    assume out_Tmp_1928 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1927;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1950;
    assume {:nonnull} out_Tmp_1927 != 0;
    assume out_Tmp_1927 > 0;
    assume {:nonnull} out_Tmp_1950 != 0;
    assume out_Tmp_1950 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1947;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1926;
    assume {:nonnull} out_Tmp_1926 != 0;
    assume out_Tmp_1926 > 0;
    assume {:nonnull} out_Tmp_1947 != 0;
    assume out_Tmp_1947 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1924;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1940;
    assume {:nonnull} out_Tmp_1924 != 0;
    assume out_Tmp_1924 > 0;
    assume {:nonnull} out_Tmp_1940 != 0;
    assume out_Tmp_1940 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1945;
    assume {:nonnull} out_Tmp_1945 != 0;
    assume out_Tmp_1945 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1945 != 0;
    assume out_Tmp_1945 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1945 != 0;
    assume out_Tmp_1945 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1945 != 0;
    assume out_Tmp_1945 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1923;
    assume {:nonnull} out_Tmp_1923 != 0;
    assume out_Tmp_1923 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1948;
    assume {:nonnull} out_Tmp_1948 != 0;
    assume out_Tmp_1948 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1936;
    assume {:nonnull} out_Tmp_1936 != 0;
    assume out_Tmp_1936 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3704} Sbp2SetManagementTimer(in_pdoExtension_16, out_transTimeout);
    call {:si_unique_call 3705} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3706} CleanupOrbList#1(in_pdoExtension_16, -1073741248);
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3707} out_status_61 := Sbp2AccessRegister#1(in_pdoExtension_16, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(in_pdoExtension_16)), 1024);
    goto L92;

  anon63_Then:
    goto L46;

  anon85_Then:
    goto L46;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon80_Then:
    assume {:partition} in_ResetLevel == 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1929;
    assume {:nonnull} out_Tmp_1929 != 0;
    assume out_Tmp_1929 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc out_Tmp_1932;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1944;
    call {:si_unique_call 3715} WPP_SF_q(out_Tmp_1944, 62, out_Tmp_1932, in_pdoExtension_16);
    goto L149;

  L149:
    call {:si_unique_call 3714} out_sdv_585 := sdv_KeGetCurrentIrql();
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} 2 > out_sdv_585;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3708} out_vslice_dummy_var_356 := Sbp2AccessRegister#1(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 320);
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3709} out_status_61 := Sbp2AccessRegister#1(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 258);
    goto L92;

  anon73_Then:
    assume {:partition} out_sdv_585 >= 2;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3710} out_vslice_dummy_var_357 := Sbp2AccessRegister#1(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 1088);
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3711} out_status_61 := Sbp2AccessRegister#1(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 1026);
    goto L92;

  anon72_Then:
    goto L149;

  anon84_Then:
    goto L149;

  anon71_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon61_Then:
    assume {:partition} in_ResetLevel == 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1939;
    assume {:nonnull} out_Tmp_1939 != 0;
    assume out_Tmp_1939 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    havoc out_Tmp_1925;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1930;
    call {:si_unique_call 3712} WPP_SF_q(out_Tmp_1930, 61, out_Tmp_1925, in_pdoExtension_16);
    goto L178;

  L178:
    out_retry := 0;
    goto L92;

  anon75_Then:
    goto L178;

  anon81_Then:
    goto L178;

  anon74_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:LoopProcedure} Sbp2Reset#1_loop_L26(in_Tmp_1923: int, in_Tmp_1924: int, in_Tmp_1925: int, in_transTimeout: int, in_retry: int, in_pdoExtension_16: int, in_Tmp_1926: int, in_Tmp_1927: int, in_Tmp_1928: int, in_Tmp_1929: int, in_Tmp_1930: int, in_sdv_583: int, in_Tmp_1932: int, in_Tmp_1933: int, in_transType: int, in_sdv_585: int, in_Tmp_1934: int, in_sdv_587: int, in_Tmp_1935: int, in_Tmp_1936: int, in_Tmp_1937: int, in_oldIrql_5: int, in_Tmp_1938: int, in_Tmp_1939: int, in_fdoExtension_5: int, in_sdv_589: int, in_Tmp_1940: int, in_Tmp_1941: int, in_Tmp_1942: int, in_Tmp_1943: int, in_Tmp_1944: int, in_Tmp_1945: int, in_Tmp_1946: int, in_status_61: int, in_Tmp_1947: int, in_Tmp_1948: int, in_Tmp_1949: int, in_Tmp_1950: int, in_ResetLevel: int, in_vslice_dummy_var_354: int, in_vslice_dummy_var_356: int, in_vslice_dummy_var_357: int) returns (out_Tmp_1923: int, out_Tmp_1924: int, out_Tmp_1925: int, out_transTimeout: int, out_retry: int, out_Tmp_1926: int, out_Tmp_1927: int, out_Tmp_1928: int, out_Tmp_1929: int, out_Tmp_1930: int, out_Tmp_1932: int, out_Tmp_1933: int, out_transType: int, out_sdv_585: int, out_Tmp_1934: int, out_Tmp_1935: int, out_Tmp_1936: int, out_Tmp_1937: int, out_oldIrql_5: int, out_Tmp_1938: int, out_Tmp_1939: int, out_Tmp_1940: int, out_Tmp_1941: int, out_Tmp_1942: int, out_Tmp_1943: int, out_Tmp_1944: int, out_Tmp_1945: int, out_Tmp_1946: int, out_status_61: int, out_Tmp_1947: int, out_Tmp_1948: int, out_Tmp_1949: int, out_Tmp_1950: int, out_vslice_dummy_var_354: int, out_vslice_dummy_var_356: int, out_vslice_dummy_var_357: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_transTimeout == 2 || out_transTimeout == in_transTimeout;
  free ensures {:va_keep} out_transType == 12 || out_transType == in_transType;
  free ensures {:va_keep} out_vslice_dummy_var_354 == 1 || out_vslice_dummy_var_354 == 0 || out_vslice_dummy_var_354 == in_vslice_dummy_var_354;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CleanupOrbList#0_loop_L42(in_Tmp_1248: int, in_Tmp_1250: int, in_Tmp_1251: int, in_pendingOrbListHead: int, in_Tmp_1252: int, in_Tmp_1253: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1255: int, in_Tmp_1256: int, in_Tmp_1257: int, in_requestIrp_1: int, in_Tmp_1258: int, in_Tmp_1259: int, in_sdv_409: int, in_Tmp_1260: int, in_currentListItem_1: int, in_Tmp_1261: int, in_sdv_411: int, in_Tmp_1262: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_362: int, in_vslice_dummy_var_364: int, in_vslice_dummy_var_365: int, in_vslice_dummy_var_366: int, in_vslice_dummy_var_367: int, in_vslice_dummy_var_368: int) returns (out_Tmp_1248: int, out_Tmp_1250: int, out_Tmp_1251: int, out_Tmp_1252: int, out_Tmp_1253: int, out_pEntry: int, out_Tmp_1255: int, out_Tmp_1256: int, out_Tmp_1257: int, out_requestIrp_1: int, out_Tmp_1258: int, out_Tmp_1259: int, out_sdv_409: int, out_Tmp_1260: int, out_currentListItem_1: int, out_Tmp_1261: int, out_sdv_411: int, out_Tmp_1262: int, out_vslice_dummy_var_362: int, out_vslice_dummy_var_364: int, out_vslice_dummy_var_365: int, out_vslice_dummy_var_366: int, out_vslice_dummy_var_367: int, out_vslice_dummy_var_368: int)
{
  var vslice_dummy_var_3080: int;

  entry:
    out_Tmp_1248, out_Tmp_1250, out_Tmp_1251, out_Tmp_1252, out_Tmp_1253, out_pEntry, out_Tmp_1255, out_Tmp_1256, out_Tmp_1257, out_requestIrp_1, out_Tmp_1258, out_Tmp_1259, out_sdv_409, out_Tmp_1260, out_currentListItem_1, out_Tmp_1261, out_sdv_411, out_Tmp_1262, out_vslice_dummy_var_362, out_vslice_dummy_var_364, out_vslice_dummy_var_365, out_vslice_dummy_var_366, out_vslice_dummy_var_367, out_vslice_dummy_var_368 := in_Tmp_1248, in_Tmp_1250, in_Tmp_1251, in_Tmp_1252, in_Tmp_1253, in_pEntry, in_Tmp_1255, in_Tmp_1256, in_Tmp_1257, in_requestIrp_1, in_Tmp_1258, in_Tmp_1259, in_sdv_409, in_Tmp_1260, in_currentListItem_1, in_Tmp_1261, in_sdv_411, in_Tmp_1262, in_vslice_dummy_var_362, in_vslice_dummy_var_364, in_vslice_dummy_var_365, in_vslice_dummy_var_366, in_vslice_dummy_var_367, in_vslice_dummy_var_368;
    goto L42, exit;

  exit:
    return;

  L42:
    call {:si_unique_call 3721} out_pEntry := RemoveHeadList(in_pendingOrbListHead);
    call {:si_unique_call 3722} InitializeListHead(out_pEntry);
    call {:si_unique_call 3723} out_sdv_409 := sdv_containing_record(out_pEntry, 0);
    out_currentListItem_1 := out_sdv_409;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 3725} out_vslice_dummy_var_362 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 3724} out_sdv_411 := sdv_IsListEmpty(0);
    goto anon37_Then;

  anon37_Then:
    assume {:partition} out_sdv_411 == 0;
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    call {:si_unique_call 3738} {:si_old_unique_call 1} out_Tmp_1248, out_Tmp_1250, out_Tmp_1251, out_Tmp_1252, out_Tmp_1253, out_pEntry, out_Tmp_1255, out_Tmp_1256, out_Tmp_1257, out_requestIrp_1, out_Tmp_1258, out_Tmp_1259, out_sdv_409, out_Tmp_1260, out_currentListItem_1, out_Tmp_1261, out_sdv_411, out_Tmp_1262, out_vslice_dummy_var_362, out_vslice_dummy_var_364, out_vslice_dummy_var_365, out_vslice_dummy_var_366, out_vslice_dummy_var_367, out_vslice_dummy_var_368 := CleanupOrbList#0_loop_L42(out_Tmp_1248, out_Tmp_1250, out_Tmp_1251, in_pendingOrbListHead, out_Tmp_1252, out_Tmp_1253, in_orbLock_6, out_pEntry, out_Tmp_1255, out_Tmp_1256, out_Tmp_1257, out_requestIrp_1, out_Tmp_1258, out_Tmp_1259, out_sdv_409, out_Tmp_1260, out_currentListItem_1, out_Tmp_1261, out_sdv_411, out_Tmp_1262, in_DeviceExtension_4, in_CompletionStatus, out_vslice_dummy_var_362, out_vslice_dummy_var_364, out_vslice_dummy_var_365, out_vslice_dummy_var_366, out_vslice_dummy_var_367, out_vslice_dummy_var_368);
    return;

  anon47_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3731} out_vslice_dummy_var_366 := KeCancelTimer(0);
    call {:si_unique_call 3732} ReleaseOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    call {:si_unique_call 3733} out_vslice_dummy_var_364 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1260;
    assume {:nonnull} out_Tmp_1260 != 0;
    assume out_Tmp_1260 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc out_Tmp_1256;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1253;
    call {:si_unique_call 3730} WPP_SF_q(out_Tmp_1253, 11, out_Tmp_1256, out_currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1261;
    assume {:nonnull} out_Tmp_1261 != 0;
    assume out_Tmp_1261 > 0;
    havoc out_requestIrp_1;
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(out_requestIrp_1))] := in_CompletionStatus;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1262;
    assume {:nonnull} out_Tmp_1262 != 0;
    assume out_Tmp_1262 > 0;
    goto L98;

  L98:
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1250;
    assume {:nonnull} out_Tmp_1250 != 0;
    assume out_Tmp_1250 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 3736} Sbp2DeferPendingRequest(in_DeviceExtension_4, out_requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3727} out_vslice_dummy_var_367 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 3726} AcquireOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    goto L58;

  anon50_Then:
    goto L105;

  L105:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1248;
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    assume {:nonnull} out_Tmp_1248 != 0;
    assume out_Tmp_1248 > 0;
    havoc vslice_dummy_var_3080;
    call {:si_unique_call 3737} Sbp2StartPacket#0(vslice_dummy_var_3080, out_requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_1248));
    goto L112;

  anon42_Then:
    goto L105;

  anon41_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3735} out_vslice_dummy_var_368 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1251;
    assume {:nonnull} out_Tmp_1251 != 0;
    assume out_Tmp_1251 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc out_Tmp_1257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1255;
    call {:si_unique_call 3734} WPP_SF_qq(out_Tmp_1255, 12, out_Tmp_1257, in_DeviceExtension_4, out_requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    call {:si_unique_call 3728} out_vslice_dummy_var_365 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_4), out_requestIrp_1);
    call {:si_unique_call 3729} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon44_Then:
    goto L123;

  anon51_Then:
    goto L123;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon40_Then:
    goto L99;

  anon45_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1252;
    assume {:nonnull} out_Tmp_1252 != 0;
    assume out_Tmp_1252 > 0;
    goto L98;

  anon46_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1259;
    assume {:nonnull} out_Tmp_1259 != 0;
    assume out_Tmp_1259 > 0;
    goto L98;

  anon49_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1258;
    assume {:nonnull} out_Tmp_1258 != 0;
    assume out_Tmp_1258 > 0;
    goto L98;

  anon39_Then:
    goto L83;

  anon48_Then:
    goto L83;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;
}



procedure {:LoopProcedure} CleanupOrbList#0_loop_L42(in_Tmp_1248: int, in_Tmp_1250: int, in_Tmp_1251: int, in_pendingOrbListHead: int, in_Tmp_1252: int, in_Tmp_1253: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1255: int, in_Tmp_1256: int, in_Tmp_1257: int, in_requestIrp_1: int, in_Tmp_1258: int, in_Tmp_1259: int, in_sdv_409: int, in_Tmp_1260: int, in_currentListItem_1: int, in_Tmp_1261: int, in_sdv_411: int, in_Tmp_1262: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_362: int, in_vslice_dummy_var_364: int, in_vslice_dummy_var_365: int, in_vslice_dummy_var_366: int, in_vslice_dummy_var_367: int, in_vslice_dummy_var_368: int) returns (out_Tmp_1248: int, out_Tmp_1250: int, out_Tmp_1251: int, out_Tmp_1252: int, out_Tmp_1253: int, out_pEntry: int, out_Tmp_1255: int, out_Tmp_1256: int, out_Tmp_1257: int, out_requestIrp_1: int, out_Tmp_1258: int, out_Tmp_1259: int, out_sdv_409: int, out_Tmp_1260: int, out_currentListItem_1: int, out_Tmp_1261: int, out_sdv_411: int, out_Tmp_1262: int, out_vslice_dummy_var_362: int, out_vslice_dummy_var_364: int, out_vslice_dummy_var_365: int, out_vslice_dummy_var_366: int, out_vslice_dummy_var_367: int, out_vslice_dummy_var_368: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_Tmp_1248 == in_Tmp_1248;
  free ensures {:va_keep} out_Tmp_1250 == in_Tmp_1250;
  free ensures {:va_keep} out_Tmp_1251 == in_Tmp_1251;
  free ensures {:va_keep} out_Tmp_1252 == in_Tmp_1252;
  free ensures {:va_keep} out_Tmp_1253 == in_Tmp_1253;
  free ensures {:va_keep} out_pEntry == in_pEntry;
  free ensures {:va_keep} out_Tmp_1255 == in_Tmp_1255;
  free ensures {:va_keep} out_Tmp_1256 == in_Tmp_1256;
  free ensures {:va_keep} out_Tmp_1257 == in_Tmp_1257;
  free ensures {:va_keep} out_requestIrp_1 == in_requestIrp_1;
  free ensures {:va_keep} out_Tmp_1258 == in_Tmp_1258;
  free ensures {:va_keep} out_Tmp_1259 == in_Tmp_1259;
  free ensures {:va_keep} out_sdv_409 == in_sdv_409;
  free ensures {:va_keep} out_Tmp_1260 == in_Tmp_1260;
  free ensures {:va_keep} out_currentListItem_1 == in_currentListItem_1;
  free ensures {:va_keep} out_Tmp_1261 == in_Tmp_1261;
  free ensures {:va_keep} out_sdv_411 == in_sdv_411;
  free ensures {:va_keep} out_Tmp_1262 == in_Tmp_1262;
  free ensures {:va_keep} out_vslice_dummy_var_362 == in_vslice_dummy_var_362;
  free ensures {:va_keep} out_vslice_dummy_var_364 == in_vslice_dummy_var_364;
  free ensures {:va_keep} out_vslice_dummy_var_365 == in_vslice_dummy_var_365;
  free ensures {:va_keep} out_vslice_dummy_var_366 == in_vslice_dummy_var_366;
  free ensures {:va_keep} out_vslice_dummy_var_367 == in_vslice_dummy_var_367;
  free ensures {:va_keep} out_vslice_dummy_var_368 == in_vslice_dummy_var_368;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CleanupOrbList#1_loop_L42(in_Tmp_1248: int, in_Tmp_1250: int, in_Tmp_1251: int, in_pendingOrbListHead: int, in_Tmp_1252: int, in_Tmp_1253: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1255: int, in_Tmp_1256: int, in_Tmp_1257: int, in_requestIrp_1: int, in_Tmp_1258: int, in_Tmp_1259: int, in_sdv_409: int, in_Tmp_1260: int, in_currentListItem_1: int, in_Tmp_1261: int, in_sdv_411: int, in_Tmp_1262: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_373: int, in_vslice_dummy_var_375: int, in_vslice_dummy_var_376: int, in_vslice_dummy_var_377: int, in_vslice_dummy_var_378: int, in_vslice_dummy_var_379: int) returns (out_Tmp_1248: int, out_Tmp_1250: int, out_Tmp_1251: int, out_Tmp_1252: int, out_Tmp_1253: int, out_pEntry: int, out_Tmp_1255: int, out_Tmp_1256: int, out_Tmp_1257: int, out_requestIrp_1: int, out_Tmp_1258: int, out_Tmp_1259: int, out_sdv_409: int, out_Tmp_1260: int, out_currentListItem_1: int, out_Tmp_1261: int, out_sdv_411: int, out_Tmp_1262: int, out_vslice_dummy_var_373: int, out_vslice_dummy_var_375: int, out_vslice_dummy_var_376: int, out_vslice_dummy_var_377: int, out_vslice_dummy_var_378: int, out_vslice_dummy_var_379: int)
{
  var vslice_dummy_var_3081: int;

  entry:
    out_Tmp_1248, out_Tmp_1250, out_Tmp_1251, out_Tmp_1252, out_Tmp_1253, out_pEntry, out_Tmp_1255, out_Tmp_1256, out_Tmp_1257, out_requestIrp_1, out_Tmp_1258, out_Tmp_1259, out_sdv_409, out_Tmp_1260, out_currentListItem_1, out_Tmp_1261, out_sdv_411, out_Tmp_1262, out_vslice_dummy_var_373, out_vslice_dummy_var_375, out_vslice_dummy_var_376, out_vslice_dummy_var_377, out_vslice_dummy_var_378, out_vslice_dummy_var_379 := in_Tmp_1248, in_Tmp_1250, in_Tmp_1251, in_Tmp_1252, in_Tmp_1253, in_pEntry, in_Tmp_1255, in_Tmp_1256, in_Tmp_1257, in_requestIrp_1, in_Tmp_1258, in_Tmp_1259, in_sdv_409, in_Tmp_1260, in_currentListItem_1, in_Tmp_1261, in_sdv_411, in_Tmp_1262, in_vslice_dummy_var_373, in_vslice_dummy_var_375, in_vslice_dummy_var_376, in_vslice_dummy_var_377, in_vslice_dummy_var_378, in_vslice_dummy_var_379;
    goto L42, exit;

  exit:
    return;

  L42:
    call {:si_unique_call 3739} out_pEntry := RemoveHeadList(in_pendingOrbListHead);
    call {:si_unique_call 3740} InitializeListHead(out_pEntry);
    call {:si_unique_call 3741} out_sdv_409 := sdv_containing_record(out_pEntry, 0);
    out_currentListItem_1 := out_sdv_409;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 3743} out_vslice_dummy_var_373 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 3742} out_sdv_411 := sdv_IsListEmpty(0);
    goto anon37_Then;

  anon37_Then:
    assume {:partition} out_sdv_411 == 0;
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    call {:si_unique_call 3756} {:si_old_unique_call 1} out_Tmp_1248, out_Tmp_1250, out_Tmp_1251, out_Tmp_1252, out_Tmp_1253, out_pEntry, out_Tmp_1255, out_Tmp_1256, out_Tmp_1257, out_requestIrp_1, out_Tmp_1258, out_Tmp_1259, out_sdv_409, out_Tmp_1260, out_currentListItem_1, out_Tmp_1261, out_sdv_411, out_Tmp_1262, out_vslice_dummy_var_373, out_vslice_dummy_var_375, out_vslice_dummy_var_376, out_vslice_dummy_var_377, out_vslice_dummy_var_378, out_vslice_dummy_var_379 := CleanupOrbList#1_loop_L42(out_Tmp_1248, out_Tmp_1250, out_Tmp_1251, in_pendingOrbListHead, out_Tmp_1252, out_Tmp_1253, in_orbLock_6, out_pEntry, out_Tmp_1255, out_Tmp_1256, out_Tmp_1257, out_requestIrp_1, out_Tmp_1258, out_Tmp_1259, out_sdv_409, out_Tmp_1260, out_currentListItem_1, out_Tmp_1261, out_sdv_411, out_Tmp_1262, in_DeviceExtension_4, in_CompletionStatus, out_vslice_dummy_var_373, out_vslice_dummy_var_375, out_vslice_dummy_var_376, out_vslice_dummy_var_377, out_vslice_dummy_var_378, out_vslice_dummy_var_379);
    return;

  anon47_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3749} out_vslice_dummy_var_377 := KeCancelTimer(0);
    call {:si_unique_call 3750} ReleaseOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    call {:si_unique_call 3751} out_vslice_dummy_var_375 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1260;
    assume {:nonnull} out_Tmp_1260 != 0;
    assume out_Tmp_1260 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc out_Tmp_1256;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1253;
    call {:si_unique_call 3748} WPP_SF_q(out_Tmp_1253, 11, out_Tmp_1256, out_currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1261;
    assume {:nonnull} out_Tmp_1261 != 0;
    assume out_Tmp_1261 > 0;
    havoc out_requestIrp_1;
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(out_requestIrp_1))] := in_CompletionStatus;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1262;
    assume {:nonnull} out_Tmp_1262 != 0;
    assume out_Tmp_1262 > 0;
    goto L98;

  L98:
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1250;
    assume {:nonnull} out_Tmp_1250 != 0;
    assume out_Tmp_1250 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 3754} Sbp2DeferPendingRequest(in_DeviceExtension_4, out_requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3745} out_vslice_dummy_var_378 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 3744} AcquireOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    goto L58;

  anon50_Then:
    goto L105;

  L105:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1248;
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    assume {:nonnull} out_Tmp_1248 != 0;
    assume out_Tmp_1248 > 0;
    havoc vslice_dummy_var_3081;
    call {:si_unique_call 3755} Sbp2StartPacket#1(vslice_dummy_var_3081, out_requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_1248));
    goto L112;

  anon42_Then:
    goto L105;

  anon41_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3753} out_vslice_dummy_var_379 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1251;
    assume {:nonnull} out_Tmp_1251 != 0;
    assume out_Tmp_1251 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc out_Tmp_1257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1255;
    call {:si_unique_call 3752} WPP_SF_qq(out_Tmp_1255, 12, out_Tmp_1257, in_DeviceExtension_4, out_requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    call {:si_unique_call 3746} out_vslice_dummy_var_376 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_4), out_requestIrp_1);
    call {:si_unique_call 3747} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon44_Then:
    goto L123;

  anon51_Then:
    goto L123;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon40_Then:
    goto L99;

  anon45_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1252;
    assume {:nonnull} out_Tmp_1252 != 0;
    assume out_Tmp_1252 > 0;
    goto L98;

  anon46_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1259;
    assume {:nonnull} out_Tmp_1259 != 0;
    assume out_Tmp_1259 > 0;
    goto L98;

  anon49_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1258;
    assume {:nonnull} out_Tmp_1258 != 0;
    assume out_Tmp_1258 > 0;
    goto L98;

  anon39_Then:
    goto L83;

  anon48_Then:
    goto L83;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;
}



procedure {:LoopProcedure} CleanupOrbList#1_loop_L42(in_Tmp_1248: int, in_Tmp_1250: int, in_Tmp_1251: int, in_pendingOrbListHead: int, in_Tmp_1252: int, in_Tmp_1253: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1255: int, in_Tmp_1256: int, in_Tmp_1257: int, in_requestIrp_1: int, in_Tmp_1258: int, in_Tmp_1259: int, in_sdv_409: int, in_Tmp_1260: int, in_currentListItem_1: int, in_Tmp_1261: int, in_sdv_411: int, in_Tmp_1262: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_373: int, in_vslice_dummy_var_375: int, in_vslice_dummy_var_376: int, in_vslice_dummy_var_377: int, in_vslice_dummy_var_378: int, in_vslice_dummy_var_379: int) returns (out_Tmp_1248: int, out_Tmp_1250: int, out_Tmp_1251: int, out_Tmp_1252: int, out_Tmp_1253: int, out_pEntry: int, out_Tmp_1255: int, out_Tmp_1256: int, out_Tmp_1257: int, out_requestIrp_1: int, out_Tmp_1258: int, out_Tmp_1259: int, out_sdv_409: int, out_Tmp_1260: int, out_currentListItem_1: int, out_Tmp_1261: int, out_sdv_411: int, out_Tmp_1262: int, out_vslice_dummy_var_373: int, out_vslice_dummy_var_375: int, out_vslice_dummy_var_376: int, out_vslice_dummy_var_377: int, out_vslice_dummy_var_378: int, out_vslice_dummy_var_379: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_Tmp_1248 == in_Tmp_1248;
  free ensures {:va_keep} out_Tmp_1250 == in_Tmp_1250;
  free ensures {:va_keep} out_Tmp_1251 == in_Tmp_1251;
  free ensures {:va_keep} out_Tmp_1252 == in_Tmp_1252;
  free ensures {:va_keep} out_Tmp_1253 == in_Tmp_1253;
  free ensures {:va_keep} out_pEntry == in_pEntry;
  free ensures {:va_keep} out_Tmp_1255 == in_Tmp_1255;
  free ensures {:va_keep} out_Tmp_1256 == in_Tmp_1256;
  free ensures {:va_keep} out_Tmp_1257 == in_Tmp_1257;
  free ensures {:va_keep} out_requestIrp_1 == in_requestIrp_1;
  free ensures {:va_keep} out_Tmp_1258 == in_Tmp_1258;
  free ensures {:va_keep} out_Tmp_1259 == in_Tmp_1259;
  free ensures {:va_keep} out_sdv_409 == in_sdv_409;
  free ensures {:va_keep} out_Tmp_1260 == in_Tmp_1260;
  free ensures {:va_keep} out_currentListItem_1 == in_currentListItem_1;
  free ensures {:va_keep} out_Tmp_1261 == in_Tmp_1261;
  free ensures {:va_keep} out_sdv_411 == in_sdv_411;
  free ensures {:va_keep} out_Tmp_1262 == in_Tmp_1262;
  free ensures {:va_keep} out_vslice_dummy_var_373 == in_vslice_dummy_var_373;
  free ensures {:va_keep} out_vslice_dummy_var_375 == in_vslice_dummy_var_375;
  free ensures {:va_keep} out_vslice_dummy_var_376 == in_vslice_dummy_var_376;
  free ensures {:va_keep} out_vslice_dummy_var_377 == in_vslice_dummy_var_377;
  free ensures {:va_keep} out_vslice_dummy_var_378 == in_vslice_dummy_var_378;
  free ensures {:va_keep} out_vslice_dummy_var_379 == in_vslice_dummy_var_379;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:SIextraRecBound 8} Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_17: int, in_i_5: int, in_context_2: int) returns (out_i_5: int, out_context_2: int)
{

  entry:
    out_i_5, out_context_2 := in_i_5, in_context_2;
    goto L147, exit;

  exit:
    return;

  L147:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon157_Else;

  anon157_Else:
    assume {:partition} 8 > out_i_5;
    assume {:nonnull} in_pdoExtension_17 != 0;
    assume in_pdoExtension_17 > 0;
    havoc out_context_2;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    call {:si_unique_call 3757} FreeAddressRange#0(in_pdoExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_2)));
    goto L154;

  L154:
    out_i_5 := out_i_5 + 1;
    goto L154_dummy;

  L154_dummy:
    call {:si_unique_call 3758} {:si_old_unique_call 1} out_i_5, out_context_2 := Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_17, out_i_5, out_context_2);
    return;

  anon192_Then:
    goto L154;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_17: int, in_i_5: int, in_context_2: int) returns (out_i_5: int, out_context_2: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CleanDeviceExtension#0_loop_L167(in_Tmp_2033: int, in_pdoExtension_17: int, in_sdv_665: int, in_statusFifoElement: int, in_Tmp_2098: int, in_Tmp_2138: int) returns (out_Tmp_2033: int, out_sdv_665: int, out_statusFifoElement: int, out_Tmp_2098: int, out_Tmp_2138: int)
{
  var vslice_dummy_var_3082: int;

  entry:
    out_Tmp_2033, out_sdv_665, out_statusFifoElement, out_Tmp_2098, out_Tmp_2138 := in_Tmp_2033, in_sdv_665, in_statusFifoElement, in_Tmp_2098, in_Tmp_2138;
    goto L167, exit;

  exit:
    return;

  L167:
    goto anon158_Else;

  anon158_Else:
    assume {:partition} out_statusFifoElement != 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2098;
    assume {:nonnull} out_Tmp_2098 != 0;
    assume out_Tmp_2098 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    havoc out_Tmp_2138;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2033;
    assume {:nonnull} in_pdoExtension_17 != 0;
    assume in_pdoExtension_17 > 0;
    havoc vslice_dummy_var_3082;
    call {:si_unique_call 3761} WPP_SF_qqq(out_Tmp_2033, 35, out_Tmp_2138, in_pdoExtension_17, out_statusFifoElement, vslice_dummy_var_3082);
    goto L175;

  L175:
    call {:si_unique_call 3759} IoFreeMdl(0);
    call {:si_unique_call 3760} out_sdv_665 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_665;
    goto L175_dummy;

  L175_dummy:
    call {:si_unique_call 3762} {:si_old_unique_call 1} out_Tmp_2033, out_sdv_665, out_statusFifoElement, out_Tmp_2098, out_Tmp_2138 := Sbp2CleanDeviceExtension#0_loop_L167(out_Tmp_2033, in_pdoExtension_17, out_sdv_665, out_statusFifoElement, out_Tmp_2098, out_Tmp_2138);
    return;

  anon160_Then:
    goto L175;

  anon193_Then:
    goto L175;

  anon159_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L167(in_Tmp_2033: int, in_pdoExtension_17: int, in_sdv_665: int, in_statusFifoElement: int, in_Tmp_2098: int, in_Tmp_2138: int) returns (out_Tmp_2033: int, out_sdv_665: int, out_statusFifoElement: int, out_Tmp_2098: int, out_Tmp_2138: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CleanDeviceExtension#0_loop_L191(in_sdv_664: int, in_Tmp_2132: int, in_packet_13: int) returns (out_sdv_664: int, out_Tmp_2132: int, out_packet_13: int)
{

  entry:
    out_sdv_664, out_Tmp_2132, out_packet_13 := in_sdv_664, in_Tmp_2132, in_packet_13;
    goto L191, exit;

  exit:
    return;

  L191:
    goto anon161_Else;

  anon161_Else:
    assume {:partition} out_packet_13 != 0;
    call {:si_unique_call 3766} sdv_ExFreePool(0);
    assume {:nonnull} out_packet_13 != 0;
    assume out_packet_13 > 0;
    out_Tmp_2132 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(out_packet_13)];
    assume {:nonnull} out_Tmp_2132 != 0;
    assume out_Tmp_2132 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    call {:si_unique_call 3765} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 3763} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 3764} out_sdv_664 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_packet_13 := out_sdv_664;
    goto L199_dummy;

  L199_dummy:
    call {:si_unique_call 3767} {:si_old_unique_call 1} out_sdv_664, out_Tmp_2132, out_packet_13 := Sbp2CleanDeviceExtension#0_loop_L191(out_sdv_664, out_Tmp_2132, out_packet_13);
    return;

  anon194_Then:
    goto L199;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L191(in_sdv_664: int, in_Tmp_2132: int, in_packet_13: int) returns (out_sdv_664: int, out_Tmp_2132: int, out_packet_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CleanDeviceExtension#0_loop_L33(in_Tmp_2041: int, in_i_5: int, in_Tmp_2112: int, in_Tmp_2122: int, in_Tmp_2127: int, in_fdoExtension_8: int, in_DeviceObject_38: int) returns (out_Tmp_2041: int, out_i_5: int, out_Tmp_2112: int, out_Tmp_2122: int, out_Tmp_2127: int)
{

  entry:
    out_Tmp_2041, out_i_5, out_Tmp_2112, out_Tmp_2122, out_Tmp_2127 := in_Tmp_2041, in_i_5, in_Tmp_2112, in_Tmp_2122, in_Tmp_2127;
    goto L33, exit;

  exit:
    return;

  L33:
    out_Tmp_2112 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2127;
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    goto anon184_Else;

  anon184_Else:
    out_Tmp_2041 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2122;
    assume {:nonnull} out_Tmp_2122 != 0;
    assume out_Tmp_2122 > 0;
    goto anon185_Then;

  anon185_Then:
    out_i_5 := out_i_5 + 1;
    goto anon185_Then_dummy;

  anon185_Then_dummy:
    havoc out_i_5;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L33(in_Tmp_2041: int, in_i_5: int, in_Tmp_2112: int, in_Tmp_2122: int, in_Tmp_2127: int, in_fdoExtension_8: int, in_DeviceObject_38: int) returns (out_Tmp_2041: int, out_i_5: int, out_Tmp_2112: int, out_Tmp_2122: int, out_Tmp_2127: int);
  free ensures {:va_keep} out_Tmp_2041 == in_i_5 || out_Tmp_2041 == in_Tmp_2041;
  free ensures {:va_keep} out_Tmp_2112 == in_i_5 || out_Tmp_2112 == in_Tmp_2112;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CleanDeviceExtension#0_loop_L273(in_Tmp_2029: int, in_Tmp_2030: int, in_Tmp_2032: int, in_Tmp_2036: int, in_pdoExtension_17: int, in_Tmp_2042: int, in_Tmp_2044: int, in_Tmp_2045: int, in_Tmp_2046: int, in_Tmp_2047: int, in_Tmp_2048: int, in_Tmp_2049: int, in_Tmp_2051: int, in_Tmp_2052: int, in_Tmp_2053: int, in_Tmp_2056: int, in_Tmp_2057: int, in_Tmp_2058: int, in_Tmp_2059: int, in_Tmp_2061: int, in_Tmp_2063: int, in_Tmp_2065: int, in_Tmp_2066: int, in_Tmp_2067: int, in_Tmp_2070: int, in_Tmp_2073: int, in_Tmp_2074: int, in_Tmp_2076: int, in_Tmp_2077: int, in_Tmp_2078: int, in_Tmp_2079: int, in_Tmp_2084: int, in_Tmp_2086: int, in_Tmp_2087: int, in_Tmp_2089: int, in_Tmp_2090: int, in_Tmp_2091: int, in_i_5: int, in_Tmp_2094: int, in_Tmp_2096: int, in_Tmp_2097: int, in_Tmp_2102: int, in_Tmp_2104: int, in_Tmp_2106: int, in_Tmp_2110: int, in_Tmp_2111: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2116: int, in_Tmp_2117: int, in_Tmp_2119: int, in_Tmp_2125: int, in_Tmp_2126: int, in_fdoExtension_8: int, in_Tmp_2131: int, in_Tmp_2134: int, in_Tmp_2136: int, in_Tmp_2137: int, in_Tmp_2139: int, in_cIrql_9: int, in_Tmp_2140: int, in_Tmp_2144: int, in_Tmp_2145: int, in_Tmp_2150: int, in_Tmp_2152: int, in_DeviceObject_38: int) returns (out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2032: int, out_Tmp_2036: int, out_pdoExtension_17: int, out_Tmp_2042: int, out_Tmp_2044: int, out_Tmp_2045: int, out_Tmp_2046: int, out_Tmp_2047: int, out_Tmp_2048: int, out_Tmp_2049: int, out_Tmp_2051: int, out_Tmp_2052: int, out_Tmp_2053: int, out_Tmp_2056: int, out_Tmp_2057: int, out_Tmp_2058: int, out_Tmp_2059: int, out_Tmp_2061: int, out_Tmp_2063: int, out_Tmp_2065: int, out_Tmp_2066: int, out_Tmp_2067: int, out_Tmp_2070: int, out_Tmp_2073: int, out_Tmp_2074: int, out_Tmp_2076: int, out_Tmp_2077: int, out_Tmp_2078: int, out_Tmp_2079: int, out_Tmp_2084: int, out_Tmp_2086: int, out_Tmp_2087: int, out_Tmp_2089: int, out_Tmp_2090: int, out_Tmp_2091: int, out_i_5: int, out_Tmp_2094: int, out_Tmp_2096: int, out_Tmp_2097: int, out_Tmp_2102: int, out_Tmp_2104: int, out_Tmp_2106: int, out_Tmp_2110: int, out_Tmp_2111: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2116: int, out_Tmp_2117: int, out_Tmp_2119: int, out_Tmp_2125: int, out_Tmp_2126: int, out_Tmp_2131: int, out_Tmp_2134: int, out_Tmp_2136: int, out_Tmp_2137: int, out_Tmp_2139: int, out_cIrql_9: int, out_Tmp_2140: int, out_Tmp_2144: int, out_Tmp_2145: int, out_Tmp_2150: int, out_Tmp_2152: int, out_DeviceObject_38: int)
{

  entry:
    out_Tmp_2029, out_Tmp_2030, out_Tmp_2032, out_Tmp_2036, out_pdoExtension_17, out_Tmp_2042, out_Tmp_2044, out_Tmp_2045, out_Tmp_2046, out_Tmp_2047, out_Tmp_2048, out_Tmp_2049, out_Tmp_2051, out_Tmp_2052, out_Tmp_2053, out_Tmp_2056, out_Tmp_2057, out_Tmp_2058, out_Tmp_2059, out_Tmp_2061, out_Tmp_2063, out_Tmp_2065, out_Tmp_2066, out_Tmp_2067, out_Tmp_2070, out_Tmp_2073, out_Tmp_2074, out_Tmp_2076, out_Tmp_2077, out_Tmp_2078, out_Tmp_2079, out_Tmp_2084, out_Tmp_2086, out_Tmp_2087, out_Tmp_2089, out_Tmp_2090, out_Tmp_2091, out_i_5, out_Tmp_2094, out_Tmp_2096, out_Tmp_2097, out_Tmp_2102, out_Tmp_2104, out_Tmp_2106, out_Tmp_2110, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_Tmp_2117, out_Tmp_2119, out_Tmp_2125, out_Tmp_2126, out_Tmp_2131, out_Tmp_2134, out_Tmp_2136, out_Tmp_2137, out_Tmp_2139, out_cIrql_9, out_Tmp_2140, out_Tmp_2144, out_Tmp_2145, out_Tmp_2150, out_Tmp_2152, out_DeviceObject_38 := in_Tmp_2029, in_Tmp_2030, in_Tmp_2032, in_Tmp_2036, in_pdoExtension_17, in_Tmp_2042, in_Tmp_2044, in_Tmp_2045, in_Tmp_2046, in_Tmp_2047, in_Tmp_2048, in_Tmp_2049, in_Tmp_2051, in_Tmp_2052, in_Tmp_2053, in_Tmp_2056, in_Tmp_2057, in_Tmp_2058, in_Tmp_2059, in_Tmp_2061, in_Tmp_2063, in_Tmp_2065, in_Tmp_2066, in_Tmp_2067, in_Tmp_2070, in_Tmp_2073, in_Tmp_2074, in_Tmp_2076, in_Tmp_2077, in_Tmp_2078, in_Tmp_2079, in_Tmp_2084, in_Tmp_2086, in_Tmp_2087, in_Tmp_2089, in_Tmp_2090, in_Tmp_2091, in_i_5, in_Tmp_2094, in_Tmp_2096, in_Tmp_2097, in_Tmp_2102, in_Tmp_2104, in_Tmp_2106, in_Tmp_2110, in_Tmp_2111, in_Tmp_2113, in_Tmp_2114, in_Tmp_2116, in_Tmp_2117, in_Tmp_2119, in_Tmp_2125, in_Tmp_2126, in_Tmp_2131, in_Tmp_2134, in_Tmp_2136, in_Tmp_2137, in_Tmp_2139, in_cIrql_9, in_Tmp_2140, in_Tmp_2144, in_Tmp_2145, in_Tmp_2150, in_Tmp_2152, in_DeviceObject_38;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    goto anon169_Else;

  anon169_Else:
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_i_5;
    out_Tmp_2076 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2045;
    assume {:nonnull} out_Tmp_2045 != 0;
    assume out_Tmp_2045 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    out_Tmp_2029 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2061;
    assume {:nonnull} out_Tmp_2061 != 0;
    assume out_Tmp_2061 > 0;
    havoc out_Tmp_2052;
    assume {:nonnull} out_Tmp_2052 != 0;
    assume out_Tmp_2052 > 0;
    havoc out_pdoExtension_17;
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    goto anon202_Else;

  anon202_Else:
    out_Tmp_2111 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2094;
    assume {:nonnull} out_Tmp_2094 != 0;
    assume out_Tmp_2094 > 0;
    havoc out_DeviceObject_38;
    out_Tmp_2102 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2140;
    assume {:nonnull} out_Tmp_2140 != 0;
    assume out_Tmp_2140 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    out_Tmp_2091 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2125;
    assume {:nonnull} out_Tmp_2125 != 0;
    assume out_Tmp_2125 > 0;
    call {:si_unique_call 3779} sdv_ExFreePool(0);
    out_Tmp_2086 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2104;
    assume {:nonnull} out_Tmp_2104 != 0;
    assume out_Tmp_2104 > 0;
    out_Tmp_2030 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2150;
    assume {:nonnull} out_Tmp_2150 != 0;
    assume out_Tmp_2150 > 0;
    goto L283;

  L283:
    out_Tmp_2110 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2067;
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    out_Tmp_2058 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2152;
    assume {:nonnull} out_Tmp_2152 != 0;
    assume out_Tmp_2152 > 0;
    call {:si_unique_call 3778} sdv_ExFreePool(0);
    out_Tmp_2137 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2106;
    assume {:nonnull} out_Tmp_2106 != 0;
    assume out_Tmp_2106 > 0;
    out_Tmp_2116 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2145;
    assume {:nonnull} out_Tmp_2145 != 0;
    assume out_Tmp_2145 > 0;
    goto L290;

  L290:
    out_Tmp_2053 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2063;
    assume {:nonnull} out_Tmp_2063 != 0;
    assume out_Tmp_2063 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    out_Tmp_2126 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2077;
    assume {:nonnull} out_Tmp_2077 != 0;
    assume out_Tmp_2077 > 0;
    call {:si_unique_call 3777} sdv_ExFreePool(0);
    out_Tmp_2089 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2048;
    assume {:nonnull} out_Tmp_2048 != 0;
    assume out_Tmp_2048 > 0;
    out_Tmp_2113 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2036;
    assume {:nonnull} out_Tmp_2036 != 0;
    assume out_Tmp_2036 > 0;
    goto L297;

  L297:
    out_Tmp_2096 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2051;
    assume {:nonnull} out_Tmp_2051 != 0;
    assume out_Tmp_2051 > 0;
    call {:si_unique_call 3774} sdv_KeReleaseSpinLock(0, out_cIrql_9);
    call {:si_unique_call 3775} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 3776} IoDeleteDevice(0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2070;
    assume {:nonnull} out_Tmp_2070 != 0;
    assume out_Tmp_2070 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    havoc out_Tmp_2079;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2065;
    call {:si_unique_call 3773} WPP_SF_q(out_Tmp_2065, 37, out_Tmp_2079, out_pdoExtension_17);
    goto L317;

  L317:
    call {:si_unique_call 3768} out_Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    call {:si_unique_call 3769} sdv_KeAcquireSpinLock(0, out_Tmp_2090);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    havoc out_cIrql_9;
    goto L328;

  L328:
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    goto L328_dummy;

  L328_dummy:
    call {:si_unique_call 3780} {:si_old_unique_call 1} out_Tmp_2029, out_Tmp_2030, out_Tmp_2032, out_Tmp_2036, out_pdoExtension_17, out_Tmp_2042, out_Tmp_2044, out_Tmp_2045, out_Tmp_2046, out_Tmp_2047, out_Tmp_2048, out_Tmp_2049, out_Tmp_2051, out_Tmp_2052, out_Tmp_2053, out_Tmp_2056, out_Tmp_2057, out_Tmp_2058, out_Tmp_2059, out_Tmp_2061, out_Tmp_2063, out_Tmp_2065, out_Tmp_2066, out_Tmp_2067, out_Tmp_2070, out_Tmp_2073, out_Tmp_2074, out_Tmp_2076, out_Tmp_2077, out_Tmp_2078, out_Tmp_2079, out_Tmp_2084, out_Tmp_2086, out_Tmp_2087, out_Tmp_2089, out_Tmp_2090, out_Tmp_2091, out_i_5, out_Tmp_2094, out_Tmp_2096, out_Tmp_2097, out_Tmp_2102, out_Tmp_2104, out_Tmp_2106, out_Tmp_2110, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_Tmp_2117, out_Tmp_2119, out_Tmp_2125, out_Tmp_2126, out_Tmp_2131, out_Tmp_2134, out_Tmp_2136, out_Tmp_2137, out_Tmp_2139, out_cIrql_9, out_Tmp_2140, out_Tmp_2144, out_Tmp_2145, out_Tmp_2150, out_Tmp_2152, out_DeviceObject_38 := Sbp2CleanDeviceExtension#0_loop_L273(out_Tmp_2029, out_Tmp_2030, out_Tmp_2032, out_Tmp_2036, out_pdoExtension_17, out_Tmp_2042, out_Tmp_2044, out_Tmp_2045, out_Tmp_2046, out_Tmp_2047, out_Tmp_2048, out_Tmp_2049, out_Tmp_2051, out_Tmp_2052, out_Tmp_2053, out_Tmp_2056, out_Tmp_2057, out_Tmp_2058, out_Tmp_2059, out_Tmp_2061, out_Tmp_2063, out_Tmp_2065, out_Tmp_2066, out_Tmp_2067, out_Tmp_2070, out_Tmp_2073, out_Tmp_2074, out_Tmp_2076, out_Tmp_2077, out_Tmp_2078, out_Tmp_2079, out_Tmp_2084, out_Tmp_2086, out_Tmp_2087, out_Tmp_2089, out_Tmp_2090, out_Tmp_2091, out_i_5, out_Tmp_2094, out_Tmp_2096, out_Tmp_2097, out_Tmp_2102, out_Tmp_2104, out_Tmp_2106, out_Tmp_2110, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_Tmp_2117, out_Tmp_2119, out_Tmp_2125, out_Tmp_2126, in_fdoExtension_8, out_Tmp_2131, out_Tmp_2134, out_Tmp_2136, out_Tmp_2137, out_Tmp_2139, out_cIrql_9, out_Tmp_2140, out_Tmp_2144, out_Tmp_2145, out_Tmp_2150, out_Tmp_2152, out_DeviceObject_38);
    return;

  anon172_Then:
    goto L317;

  anon206_Then:
    goto L317;

  anon171_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon205_Then:
    goto L297;

  anon204_Then:
    goto L290;

  anon203_Then:
    goto L283;

  anon201_Then:
    goto L277;

  L277:
    out_Tmp_2074 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2047;
    assume {:nonnull} out_Tmp_2047 != 0;
    assume out_Tmp_2047 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    out_Tmp_2097 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2073;
    assume {:nonnull} out_Tmp_2073 != 0;
    assume out_Tmp_2073 > 0;
    call {:si_unique_call 3772} sdv_ExFreePool(0);
    out_Tmp_2042 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2049;
    assume {:nonnull} out_Tmp_2049 != 0;
    assume out_Tmp_2049 > 0;
    out_Tmp_2084 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2131;
    assume {:nonnull} out_Tmp_2131 != 0;
    assume out_Tmp_2131 > 0;
    goto L423;

  L423:
    out_Tmp_2144 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2078;
    assume {:nonnull} out_Tmp_2078 != 0;
    assume out_Tmp_2078 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    out_Tmp_2059 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2134;
    assume {:nonnull} out_Tmp_2134 != 0;
    assume out_Tmp_2134 > 0;
    call {:si_unique_call 3771} sdv_ExFreePool(0);
    out_Tmp_2057 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2087;
    assume {:nonnull} out_Tmp_2087 != 0;
    assume out_Tmp_2087 > 0;
    out_Tmp_2114 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2066;
    assume {:nonnull} out_Tmp_2066 != 0;
    assume out_Tmp_2066 > 0;
    goto L430;

  L430:
    out_Tmp_2119 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2056;
    assume {:nonnull} out_Tmp_2056 != 0;
    assume out_Tmp_2056 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    out_Tmp_2046 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2117;
    assume {:nonnull} out_Tmp_2117 != 0;
    assume out_Tmp_2117 > 0;
    call {:si_unique_call 3770} sdv_ExFreePool(0);
    out_Tmp_2136 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2044;
    assume {:nonnull} out_Tmp_2044 != 0;
    assume out_Tmp_2044 > 0;
    out_Tmp_2139 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2032;
    assume {:nonnull} out_Tmp_2032 != 0;
    assume out_Tmp_2032 > 0;
    goto L328;

  anon211_Then:
    goto L328;

  anon210_Then:
    goto L430;

  anon209_Then:
    goto L423;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L273(in_Tmp_2029: int, in_Tmp_2030: int, in_Tmp_2032: int, in_Tmp_2036: int, in_pdoExtension_17: int, in_Tmp_2042: int, in_Tmp_2044: int, in_Tmp_2045: int, in_Tmp_2046: int, in_Tmp_2047: int, in_Tmp_2048: int, in_Tmp_2049: int, in_Tmp_2051: int, in_Tmp_2052: int, in_Tmp_2053: int, in_Tmp_2056: int, in_Tmp_2057: int, in_Tmp_2058: int, in_Tmp_2059: int, in_Tmp_2061: int, in_Tmp_2063: int, in_Tmp_2065: int, in_Tmp_2066: int, in_Tmp_2067: int, in_Tmp_2070: int, in_Tmp_2073: int, in_Tmp_2074: int, in_Tmp_2076: int, in_Tmp_2077: int, in_Tmp_2078: int, in_Tmp_2079: int, in_Tmp_2084: int, in_Tmp_2086: int, in_Tmp_2087: int, in_Tmp_2089: int, in_Tmp_2090: int, in_Tmp_2091: int, in_i_5: int, in_Tmp_2094: int, in_Tmp_2096: int, in_Tmp_2097: int, in_Tmp_2102: int, in_Tmp_2104: int, in_Tmp_2106: int, in_Tmp_2110: int, in_Tmp_2111: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2116: int, in_Tmp_2117: int, in_Tmp_2119: int, in_Tmp_2125: int, in_Tmp_2126: int, in_fdoExtension_8: int, in_Tmp_2131: int, in_Tmp_2134: int, in_Tmp_2136: int, in_Tmp_2137: int, in_Tmp_2139: int, in_cIrql_9: int, in_Tmp_2140: int, in_Tmp_2144: int, in_Tmp_2145: int, in_Tmp_2150: int, in_Tmp_2152: int, in_DeviceObject_38: int) returns (out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2032: int, out_Tmp_2036: int, out_pdoExtension_17: int, out_Tmp_2042: int, out_Tmp_2044: int, out_Tmp_2045: int, out_Tmp_2046: int, out_Tmp_2047: int, out_Tmp_2048: int, out_Tmp_2049: int, out_Tmp_2051: int, out_Tmp_2052: int, out_Tmp_2053: int, out_Tmp_2056: int, out_Tmp_2057: int, out_Tmp_2058: int, out_Tmp_2059: int, out_Tmp_2061: int, out_Tmp_2063: int, out_Tmp_2065: int, out_Tmp_2066: int, out_Tmp_2067: int, out_Tmp_2070: int, out_Tmp_2073: int, out_Tmp_2074: int, out_Tmp_2076: int, out_Tmp_2077: int, out_Tmp_2078: int, out_Tmp_2079: int, out_Tmp_2084: int, out_Tmp_2086: int, out_Tmp_2087: int, out_Tmp_2089: int, out_Tmp_2090: int, out_Tmp_2091: int, out_i_5: int, out_Tmp_2094: int, out_Tmp_2096: int, out_Tmp_2097: int, out_Tmp_2102: int, out_Tmp_2104: int, out_Tmp_2106: int, out_Tmp_2110: int, out_Tmp_2111: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2116: int, out_Tmp_2117: int, out_Tmp_2119: int, out_Tmp_2125: int, out_Tmp_2126: int, out_Tmp_2131: int, out_Tmp_2134: int, out_Tmp_2136: int, out_Tmp_2137: int, out_Tmp_2139: int, out_cIrql_9: int, out_Tmp_2140: int, out_Tmp_2144: int, out_Tmp_2145: int, out_Tmp_2150: int, out_Tmp_2152: int, out_DeviceObject_38: int);
  modifies alloc, sdv_irql_current, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:SIextraRecBound 9} Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_17: int, in_i_5: int, in_context_2: int) returns (out_i_5: int, out_context_2: int)
{

  entry:
    out_i_5, out_context_2 := in_i_5, in_context_2;
    goto L147, exit;

  exit:
    return;

  L147:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon157_Else;

  anon157_Else:
    assume {:partition} 8 > out_i_5;
    assume {:nonnull} in_pdoExtension_17 != 0;
    assume in_pdoExtension_17 > 0;
    havoc out_context_2;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    call {:si_unique_call 3781} FreeAddressRange#1(in_pdoExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_2)));
    goto L154;

  L154:
    out_i_5 := out_i_5 + 1;
    goto L154_dummy;

  L154_dummy:
    call {:si_unique_call 3782} {:si_old_unique_call 1} out_i_5, out_context_2 := Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_17, out_i_5, out_context_2);
    return;

  anon192_Then:
    goto L154;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_17: int, in_i_5: int, in_context_2: int) returns (out_i_5: int, out_context_2: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, Mem_T.Status__IO_STATUS_BLOCK, sdv_irql_current, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CleanDeviceExtension#1_loop_L167(in_Tmp_2033: int, in_pdoExtension_17: int, in_sdv_665: int, in_statusFifoElement: int, in_Tmp_2098: int, in_Tmp_2138: int) returns (out_Tmp_2033: int, out_sdv_665: int, out_statusFifoElement: int, out_Tmp_2098: int, out_Tmp_2138: int)
{
  var vslice_dummy_var_3083: int;

  entry:
    out_Tmp_2033, out_sdv_665, out_statusFifoElement, out_Tmp_2098, out_Tmp_2138 := in_Tmp_2033, in_sdv_665, in_statusFifoElement, in_Tmp_2098, in_Tmp_2138;
    goto L167, exit;

  exit:
    return;

  L167:
    goto anon158_Else;

  anon158_Else:
    assume {:partition} out_statusFifoElement != 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2098;
    assume {:nonnull} out_Tmp_2098 != 0;
    assume out_Tmp_2098 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    havoc out_Tmp_2138;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2033;
    assume {:nonnull} in_pdoExtension_17 != 0;
    assume in_pdoExtension_17 > 0;
    havoc vslice_dummy_var_3083;
    call {:si_unique_call 3785} WPP_SF_qqq(out_Tmp_2033, 35, out_Tmp_2138, in_pdoExtension_17, out_statusFifoElement, vslice_dummy_var_3083);
    goto L175;

  L175:
    call {:si_unique_call 3783} IoFreeMdl(0);
    call {:si_unique_call 3784} out_sdv_665 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_665;
    goto L175_dummy;

  L175_dummy:
    call {:si_unique_call 3786} {:si_old_unique_call 1} out_Tmp_2033, out_sdv_665, out_statusFifoElement, out_Tmp_2098, out_Tmp_2138 := Sbp2CleanDeviceExtension#1_loop_L167(out_Tmp_2033, in_pdoExtension_17, out_sdv_665, out_statusFifoElement, out_Tmp_2098, out_Tmp_2138);
    return;

  anon160_Then:
    goto L175;

  anon193_Then:
    goto L175;

  anon159_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L167(in_Tmp_2033: int, in_pdoExtension_17: int, in_sdv_665: int, in_statusFifoElement: int, in_Tmp_2098: int, in_Tmp_2138: int) returns (out_Tmp_2033: int, out_sdv_665: int, out_statusFifoElement: int, out_Tmp_2098: int, out_Tmp_2138: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CleanDeviceExtension#1_loop_L191(in_sdv_664: int, in_Tmp_2132: int, in_packet_13: int) returns (out_sdv_664: int, out_Tmp_2132: int, out_packet_13: int)
{

  entry:
    out_sdv_664, out_Tmp_2132, out_packet_13 := in_sdv_664, in_Tmp_2132, in_packet_13;
    goto L191, exit;

  exit:
    return;

  L191:
    goto anon161_Else;

  anon161_Else:
    assume {:partition} out_packet_13 != 0;
    call {:si_unique_call 3790} sdv_ExFreePool(0);
    assume {:nonnull} out_packet_13 != 0;
    assume out_packet_13 > 0;
    out_Tmp_2132 := Mem_T.Irp__IRBIRP[Irp__IRBIRP(out_packet_13)];
    assume {:nonnull} out_Tmp_2132 != 0;
    assume out_Tmp_2132 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    call {:si_unique_call 3789} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 3787} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 3788} out_sdv_664 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_packet_13 := out_sdv_664;
    goto L199_dummy;

  L199_dummy:
    call {:si_unique_call 3791} {:si_old_unique_call 1} out_sdv_664, out_Tmp_2132, out_packet_13 := Sbp2CleanDeviceExtension#1_loop_L191(out_sdv_664, out_Tmp_2132, out_packet_13);
    return;

  anon194_Then:
    goto L199;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L191(in_sdv_664: int, in_Tmp_2132: int, in_packet_13: int) returns (out_sdv_664: int, out_Tmp_2132: int, out_packet_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CleanDeviceExtension#1_loop_L33(in_Tmp_2041: int, in_i_5: int, in_Tmp_2112: int, in_Tmp_2122: int, in_Tmp_2127: int, in_fdoExtension_8: int, in_DeviceObject_38: int) returns (out_Tmp_2041: int, out_i_5: int, out_Tmp_2112: int, out_Tmp_2122: int, out_Tmp_2127: int)
{

  entry:
    out_Tmp_2041, out_i_5, out_Tmp_2112, out_Tmp_2122, out_Tmp_2127 := in_Tmp_2041, in_i_5, in_Tmp_2112, in_Tmp_2122, in_Tmp_2127;
    goto L33, exit;

  exit:
    return;

  L33:
    out_Tmp_2112 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2127;
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    goto anon184_Else;

  anon184_Else:
    out_Tmp_2041 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2122;
    assume {:nonnull} out_Tmp_2122 != 0;
    assume out_Tmp_2122 > 0;
    goto anon185_Then;

  anon185_Then:
    out_i_5 := out_i_5 + 1;
    goto anon185_Then_dummy;

  anon185_Then_dummy:
    havoc out_i_5;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L33(in_Tmp_2041: int, in_i_5: int, in_Tmp_2112: int, in_Tmp_2122: int, in_Tmp_2127: int, in_fdoExtension_8: int, in_DeviceObject_38: int) returns (out_Tmp_2041: int, out_i_5: int, out_Tmp_2112: int, out_Tmp_2122: int, out_Tmp_2127: int);
  free ensures {:va_keep} out_Tmp_2041 == in_i_5 || out_Tmp_2041 == in_Tmp_2041;
  free ensures {:va_keep} out_Tmp_2112 == in_i_5 || out_Tmp_2112 == in_Tmp_2112;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_17: int, in_sdv_669: int, in_vslice_dummy_var_410: int) returns (out_sdv_669: int, out_vslice_dummy_var_410: int)
{

  entry:
    out_sdv_669, out_vslice_dummy_var_410 := in_sdv_669, in_vslice_dummy_var_410;
    goto L379, exit;

  exit:
    return;

  L379:
    call {:si_unique_call 3792} out_sdv_669 := sdv_IsListEmpty(0);
    goto anon177_Else;

  anon177_Else:
    assume {:partition} out_sdv_669 == 0;
    assume {:nonnull} in_pdoExtension_17 != 0;
    assume in_pdoExtension_17 > 0;
    call {:si_unique_call 3793} out_vslice_dummy_var_410 := sdv_RemoveEntryList(0);
    call {:si_unique_call 3794} sdv_ExFreePool(0);
    goto anon177_Else_dummy;

  anon177_Else_dummy:
    call {:si_unique_call 3795} {:si_old_unique_call 1} out_sdv_669, out_vslice_dummy_var_410 := Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_17, out_sdv_669, out_vslice_dummy_var_410);
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_17: int, in_sdv_669: int, in_vslice_dummy_var_410: int) returns (out_sdv_669: int, out_vslice_dummy_var_410: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_669 == 1 || out_sdv_669 == 0 || out_sdv_669 == in_sdv_669;
  free ensures {:va_keep} out_vslice_dummy_var_410 == 1 || out_vslice_dummy_var_410 == 0 || out_vslice_dummy_var_410 == in_vslice_dummy_var_410;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2CleanDeviceExtension#1_loop_L273(in_Tmp_2029: int, in_Tmp_2030: int, in_Tmp_2032: int, in_Tmp_2034: int, in_Tmp_2036: int, in_Tmp_2037: int, in_pdoExtension_17: int, in_Tmp_2042: int, in_Tmp_2044: int, in_Tmp_2045: int, in_Tmp_2046: int, in_Tmp_2047: int, in_Tmp_2048: int, in_Tmp_2049: int, in_Tmp_2051: int, in_Tmp_2052: int, in_Tmp_2053: int, in_Tmp_2056: int, in_Tmp_2057: int, in_Tmp_2058: int, in_Tmp_2059: int, in_Tmp_2061: int, in_Tmp_2063: int, in_Tmp_2065: int, in_Tmp_2066: int, in_Tmp_2067: int, in_Tmp_2068: int, in_Tmp_2070: int, in_sdv_669: int, in_Tmp_2072: int, in_Tmp_2073: int, in_Tmp_2074: int, in_Tmp_2076: int, in_Tmp_2077: int, in_Tmp_2078: int, in_Tmp_2079: int, in_status_67: int, in_Tmp_2084: int, in_Tmp_2085: int, in_Tmp_2086: int, in_Tmp_2087: int, in_Tmp_2089: int, in_Tmp_2090: int, in_Tmp_2091: int, in_i_5: int, in_Tmp_2092: int, in_Tmp_2094: int, in_Tmp_2096: int, in_Tmp_2097: int, in_Tmp_2099: int, in_Tmp_2102: int, in_Tmp_2104: int, in_Tmp_2105: int, in_Tmp_2106: int, in_Tmp_2107: int, in_Tmp_2110: int, in_Tmp_2111: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2116: int, in_Tmp_2117: int, in_Tmp_2119: int, in_Tmp_2120: int, in_Tmp_2125: int, in_Tmp_2126: int, in_sdv_674: int, in_fdoExtension_8: int, in_Tmp_2129: int, in_Tmp_2131: int, in_Tmp_2134: int, in_Tmp_2136: int, in_Tmp_2137: int, in_Tmp_2139: int, in_cIrql_9: int, in_Tmp_2140: int, in_Tmp_2144: int, in_Tmp_2145: int, in_Tmp_2146: int, in_Tmp_2149: int, in_Tmp_2150: int, in_Tmp_2152: int, in_DeviceObject_38: int, in_vslice_dummy_var_405: int, in_vslice_dummy_var_409: int, in_vslice_dummy_var_410: int) returns (out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2032: int, out_Tmp_2034: int, out_Tmp_2036: int, out_Tmp_2037: int, out_pdoExtension_17: int, out_Tmp_2042: int, out_Tmp_2044: int, out_Tmp_2045: int, out_Tmp_2046: int, out_Tmp_2047: int, out_Tmp_2048: int, out_Tmp_2049: int, out_Tmp_2051: int, out_Tmp_2052: int, out_Tmp_2053: int, out_Tmp_2056: int, out_Tmp_2057: int, out_Tmp_2058: int, out_Tmp_2059: int, out_Tmp_2061: int, out_Tmp_2063: int, out_Tmp_2065: int, out_Tmp_2066: int, out_Tmp_2067: int, out_Tmp_2068: int, out_Tmp_2070: int, out_sdv_669: int, out_Tmp_2072: int, out_Tmp_2073: int, out_Tmp_2074: int, out_Tmp_2076: int, out_Tmp_2077: int, out_Tmp_2078: int, out_Tmp_2079: int, out_status_67: int, out_Tmp_2084: int, out_Tmp_2085: int, out_Tmp_2086: int, out_Tmp_2087: int, out_Tmp_2089: int, out_Tmp_2090: int, out_Tmp_2091: int, out_i_5: int, out_Tmp_2092: int, out_Tmp_2094: int, out_Tmp_2096: int, out_Tmp_2097: int, out_Tmp_2099: int, out_Tmp_2102: int, out_Tmp_2104: int, out_Tmp_2105: int, out_Tmp_2106: int, out_Tmp_2107: int, out_Tmp_2110: int, out_Tmp_2111: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2116: int, out_Tmp_2117: int, out_Tmp_2119: int, out_Tmp_2120: int, out_Tmp_2125: int, out_Tmp_2126: int, out_sdv_674: int, out_Tmp_2129: int, out_Tmp_2131: int, out_Tmp_2134: int, out_Tmp_2136: int, out_Tmp_2137: int, out_Tmp_2139: int, out_cIrql_9: int, out_Tmp_2140: int, out_Tmp_2144: int, out_Tmp_2145: int, out_Tmp_2146: int, out_Tmp_2149: int, out_Tmp_2150: int, out_Tmp_2152: int, out_DeviceObject_38: int, out_vslice_dummy_var_405: int, out_vslice_dummy_var_409: int, out_vslice_dummy_var_410: int)
{

  entry:
    out_Tmp_2029, out_Tmp_2030, out_Tmp_2032, out_Tmp_2034, out_Tmp_2036, out_Tmp_2037, out_pdoExtension_17, out_Tmp_2042, out_Tmp_2044, out_Tmp_2045, out_Tmp_2046, out_Tmp_2047, out_Tmp_2048, out_Tmp_2049, out_Tmp_2051, out_Tmp_2052, out_Tmp_2053, out_Tmp_2056, out_Tmp_2057, out_Tmp_2058, out_Tmp_2059, out_Tmp_2061, out_Tmp_2063, out_Tmp_2065, out_Tmp_2066, out_Tmp_2067, out_Tmp_2068, out_Tmp_2070, out_sdv_669, out_Tmp_2072, out_Tmp_2073, out_Tmp_2074, out_Tmp_2076, out_Tmp_2077, out_Tmp_2078, out_Tmp_2079, out_status_67, out_Tmp_2084, out_Tmp_2085, out_Tmp_2086, out_Tmp_2087, out_Tmp_2089, out_Tmp_2090, out_Tmp_2091, out_i_5, out_Tmp_2092, out_Tmp_2094, out_Tmp_2096, out_Tmp_2097, out_Tmp_2099, out_Tmp_2102, out_Tmp_2104, out_Tmp_2105, out_Tmp_2106, out_Tmp_2107, out_Tmp_2110, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_Tmp_2117, out_Tmp_2119, out_Tmp_2120, out_Tmp_2125, out_Tmp_2126, out_sdv_674, out_Tmp_2129, out_Tmp_2131, out_Tmp_2134, out_Tmp_2136, out_Tmp_2137, out_Tmp_2139, out_cIrql_9, out_Tmp_2140, out_Tmp_2144, out_Tmp_2145, out_Tmp_2146, out_Tmp_2149, out_Tmp_2150, out_Tmp_2152, out_DeviceObject_38, out_vslice_dummy_var_405, out_vslice_dummy_var_409, out_vslice_dummy_var_410 := in_Tmp_2029, in_Tmp_2030, in_Tmp_2032, in_Tmp_2034, in_Tmp_2036, in_Tmp_2037, in_pdoExtension_17, in_Tmp_2042, in_Tmp_2044, in_Tmp_2045, in_Tmp_2046, in_Tmp_2047, in_Tmp_2048, in_Tmp_2049, in_Tmp_2051, in_Tmp_2052, in_Tmp_2053, in_Tmp_2056, in_Tmp_2057, in_Tmp_2058, in_Tmp_2059, in_Tmp_2061, in_Tmp_2063, in_Tmp_2065, in_Tmp_2066, in_Tmp_2067, in_Tmp_2068, in_Tmp_2070, in_sdv_669, in_Tmp_2072, in_Tmp_2073, in_Tmp_2074, in_Tmp_2076, in_Tmp_2077, in_Tmp_2078, in_Tmp_2079, in_status_67, in_Tmp_2084, in_Tmp_2085, in_Tmp_2086, in_Tmp_2087, in_Tmp_2089, in_Tmp_2090, in_Tmp_2091, in_i_5, in_Tmp_2092, in_Tmp_2094, in_Tmp_2096, in_Tmp_2097, in_Tmp_2099, in_Tmp_2102, in_Tmp_2104, in_Tmp_2105, in_Tmp_2106, in_Tmp_2107, in_Tmp_2110, in_Tmp_2111, in_Tmp_2113, in_Tmp_2114, in_Tmp_2116, in_Tmp_2117, in_Tmp_2119, in_Tmp_2120, in_Tmp_2125, in_Tmp_2126, in_sdv_674, in_Tmp_2129, in_Tmp_2131, in_Tmp_2134, in_Tmp_2136, in_Tmp_2137, in_Tmp_2139, in_cIrql_9, in_Tmp_2140, in_Tmp_2144, in_Tmp_2145, in_Tmp_2146, in_Tmp_2149, in_Tmp_2150, in_Tmp_2152, in_DeviceObject_38, in_vslice_dummy_var_405, in_vslice_dummy_var_409, in_vslice_dummy_var_410;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    goto anon169_Else;

  anon169_Else:
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_i_5;
    out_Tmp_2076 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2045;
    assume {:nonnull} out_Tmp_2045 != 0;
    assume out_Tmp_2045 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    out_Tmp_2029 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2061;
    assume {:nonnull} out_Tmp_2061 != 0;
    assume out_Tmp_2061 > 0;
    havoc out_Tmp_2052;
    assume {:nonnull} out_Tmp_2052 != 0;
    assume out_Tmp_2052 > 0;
    havoc out_pdoExtension_17;
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    out_Tmp_2111 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2094;
    assume {:nonnull} out_Tmp_2094 != 0;
    assume out_Tmp_2094 > 0;
    havoc out_DeviceObject_38;
    out_Tmp_2102 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2140;
    assume {:nonnull} out_Tmp_2140 != 0;
    assume out_Tmp_2140 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    out_Tmp_2091 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2125;
    assume {:nonnull} out_Tmp_2125 != 0;
    assume out_Tmp_2125 > 0;
    call {:si_unique_call 3832} sdv_ExFreePool(0);
    out_Tmp_2086 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2104;
    assume {:nonnull} out_Tmp_2104 != 0;
    assume out_Tmp_2104 > 0;
    out_Tmp_2030 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2150;
    assume {:nonnull} out_Tmp_2150 != 0;
    assume out_Tmp_2150 > 0;
    goto L283;

  L283:
    out_Tmp_2110 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2067;
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    out_Tmp_2058 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2152;
    assume {:nonnull} out_Tmp_2152 != 0;
    assume out_Tmp_2152 > 0;
    call {:si_unique_call 3831} sdv_ExFreePool(0);
    out_Tmp_2137 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2106;
    assume {:nonnull} out_Tmp_2106 != 0;
    assume out_Tmp_2106 > 0;
    out_Tmp_2116 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2145;
    assume {:nonnull} out_Tmp_2145 != 0;
    assume out_Tmp_2145 > 0;
    goto L290;

  L290:
    out_Tmp_2053 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2063;
    assume {:nonnull} out_Tmp_2063 != 0;
    assume out_Tmp_2063 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    out_Tmp_2126 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2077;
    assume {:nonnull} out_Tmp_2077 != 0;
    assume out_Tmp_2077 > 0;
    call {:si_unique_call 3830} sdv_ExFreePool(0);
    out_Tmp_2089 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2048;
    assume {:nonnull} out_Tmp_2048 != 0;
    assume out_Tmp_2048 > 0;
    out_Tmp_2113 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2036;
    assume {:nonnull} out_Tmp_2036 != 0;
    assume out_Tmp_2036 > 0;
    goto L297;

  L297:
    out_Tmp_2096 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2051;
    assume {:nonnull} out_Tmp_2051 != 0;
    assume out_Tmp_2051 > 0;
    call {:si_unique_call 3827} sdv_KeReleaseSpinLock(0, out_cIrql_9);
    call {:si_unique_call 3828} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 3829} IoDeleteDevice(0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2070;
    assume {:nonnull} out_Tmp_2070 != 0;
    assume out_Tmp_2070 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    havoc out_Tmp_2079;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2065;
    call {:si_unique_call 3826} WPP_SF_q(out_Tmp_2065, 37, out_Tmp_2079, out_pdoExtension_17);
    goto L317;

  L317:
    call {:si_unique_call 3796} out_Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    call {:si_unique_call 3797} sdv_KeAcquireSpinLock(0, out_Tmp_2090);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    havoc out_cIrql_9;
    goto L328;

  L328:
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    goto L328_dummy;

  L328_dummy:
    call {:si_unique_call 3833} {:si_old_unique_call 1} out_Tmp_2029, out_Tmp_2030, out_Tmp_2032, out_Tmp_2034, out_Tmp_2036, out_Tmp_2037, out_pdoExtension_17, out_Tmp_2042, out_Tmp_2044, out_Tmp_2045, out_Tmp_2046, out_Tmp_2047, out_Tmp_2048, out_Tmp_2049, out_Tmp_2051, out_Tmp_2052, out_Tmp_2053, out_Tmp_2056, out_Tmp_2057, out_Tmp_2058, out_Tmp_2059, out_Tmp_2061, out_Tmp_2063, out_Tmp_2065, out_Tmp_2066, out_Tmp_2067, out_Tmp_2068, out_Tmp_2070, out_sdv_669, out_Tmp_2072, out_Tmp_2073, out_Tmp_2074, out_Tmp_2076, out_Tmp_2077, out_Tmp_2078, out_Tmp_2079, out_status_67, out_Tmp_2084, out_Tmp_2085, out_Tmp_2086, out_Tmp_2087, out_Tmp_2089, out_Tmp_2090, out_Tmp_2091, out_i_5, out_Tmp_2092, out_Tmp_2094, out_Tmp_2096, out_Tmp_2097, out_Tmp_2099, out_Tmp_2102, out_Tmp_2104, out_Tmp_2105, out_Tmp_2106, out_Tmp_2107, out_Tmp_2110, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_Tmp_2117, out_Tmp_2119, out_Tmp_2120, out_Tmp_2125, out_Tmp_2126, out_sdv_674, out_Tmp_2129, out_Tmp_2131, out_Tmp_2134, out_Tmp_2136, out_Tmp_2137, out_Tmp_2139, out_cIrql_9, out_Tmp_2140, out_Tmp_2144, out_Tmp_2145, out_Tmp_2146, out_Tmp_2149, out_Tmp_2150, out_Tmp_2152, out_DeviceObject_38, out_vslice_dummy_var_405, out_vslice_dummy_var_409, out_vslice_dummy_var_410 := Sbp2CleanDeviceExtension#1_loop_L273(out_Tmp_2029, out_Tmp_2030, out_Tmp_2032, out_Tmp_2034, out_Tmp_2036, out_Tmp_2037, out_pdoExtension_17, out_Tmp_2042, out_Tmp_2044, out_Tmp_2045, out_Tmp_2046, out_Tmp_2047, out_Tmp_2048, out_Tmp_2049, out_Tmp_2051, out_Tmp_2052, out_Tmp_2053, out_Tmp_2056, out_Tmp_2057, out_Tmp_2058, out_Tmp_2059, out_Tmp_2061, out_Tmp_2063, out_Tmp_2065, out_Tmp_2066, out_Tmp_2067, out_Tmp_2068, out_Tmp_2070, out_sdv_669, out_Tmp_2072, out_Tmp_2073, out_Tmp_2074, out_Tmp_2076, out_Tmp_2077, out_Tmp_2078, out_Tmp_2079, out_status_67, out_Tmp_2084, out_Tmp_2085, out_Tmp_2086, out_Tmp_2087, out_Tmp_2089, out_Tmp_2090, out_Tmp_2091, out_i_5, out_Tmp_2092, out_Tmp_2094, out_Tmp_2096, out_Tmp_2097, out_Tmp_2099, out_Tmp_2102, out_Tmp_2104, out_Tmp_2105, out_Tmp_2106, out_Tmp_2107, out_Tmp_2110, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_Tmp_2117, out_Tmp_2119, out_Tmp_2120, out_Tmp_2125, out_Tmp_2126, out_sdv_674, in_fdoExtension_8, out_Tmp_2129, out_Tmp_2131, out_Tmp_2134, out_Tmp_2136, out_Tmp_2137, out_Tmp_2139, out_cIrql_9, out_Tmp_2140, out_Tmp_2144, out_Tmp_2145, out_Tmp_2146, out_Tmp_2149, out_Tmp_2150, out_Tmp_2152, out_DeviceObject_38, out_vslice_dummy_var_405, out_vslice_dummy_var_409, out_vslice_dummy_var_410);
    return;

  anon172_Then:
    goto L317;

  anon206_Then:
    goto L317;

  anon171_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon205_Then:
    goto L297;

  anon204_Then:
    goto L290;

  anon203_Then:
    goto L283;

  anon202_Then:
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    out_Tmp_2037 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2085;
    assume {:nonnull} out_Tmp_2085 != 0;
    assume out_Tmp_2085 > 0;
    havoc out_DeviceObject_38;
    call {:si_unique_call 3805} sdv_KeReleaseSpinLock(0, out_cIrql_9);
    call {:si_unique_call 3806} out_sdv_674 := Sbp2CleanDeviceExtension#0(out_DeviceObject_38, 1, 0);
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} out_sdv_674 != 0;
    call {:si_unique_call 3825} out_status_67 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} out_status_67 < 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2120;
    assume {:nonnull} out_Tmp_2120 != 0;
    assume out_Tmp_2120 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    havoc out_Tmp_2105;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2146;
    call {:si_unique_call 3824} WPP_SF_qD(out_Tmp_2146, 38, out_Tmp_2105, out_DeviceObject_38, out_status_67);
    goto L348;

  L348:
    call {:si_unique_call 3820} out_Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    call {:si_unique_call 3821} sdv_KeRaiseIrql(2, out_Tmp_2090);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    havoc out_cIrql_9;
    call {:si_unique_call 3822} Sbp2StartNextPacketByKey#1(out_DeviceObject_38, 0);
    call {:si_unique_call 3823} sdv_KeLowerIrql(out_cIrql_9);
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2092;
    assume {:nonnull} out_Tmp_2092 != 0;
    assume out_Tmp_2092 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    havoc out_Tmp_2072;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2034;
    call {:si_unique_call 3819} WPP_SF_qq(out_Tmp_2034, 39, out_Tmp_2072, out_pdoExtension_17, out_DeviceObject_38);
    goto L361;

  L361:
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    call {:si_unique_call 3814} out_vslice_dummy_var_409 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(out_pdoExtension_17), 0, 0);
    call {:si_unique_call 3815} out_vslice_dummy_var_405 := KeCancelTimer(0);
    call {:si_unique_call 3816} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto L379;

  L379:
    call {:si_unique_call 3812} out_sdv_669, out_vslice_dummy_var_410 := Sbp2CleanDeviceExtension#1_loop_L379(out_pdoExtension_17, out_sdv_669, out_vslice_dummy_var_410);
    goto L379_last;

  L379_last:
    call {:si_unique_call 3813} out_sdv_669 := sdv_IsListEmpty(0);
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} out_sdv_669 == 0;
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    call {:si_unique_call 3817} out_vslice_dummy_var_410 := sdv_RemoveEntryList(0);
    call {:si_unique_call 3818} sdv_ExFreePool(0);
    assume false;
    return;

  anon177_Then:
    assume {:partition} out_sdv_669 != 0;
    call {:si_unique_call 3808} out_Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    call {:si_unique_call 3809} sdv_KeAcquireSpinLock(0, out_Tmp_2090);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    havoc out_cIrql_9;
    out_Tmp_2099 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2129;
    assume {:nonnull} out_Tmp_2129 != 0;
    assume out_Tmp_2129 > 0;
    call {:si_unique_call 3810} sdv_KeReleaseSpinLock(0, out_cIrql_9);
    call {:si_unique_call 3811} IoDeleteDevice(0);
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2149;
    assume {:nonnull} out_Tmp_2149 != 0;
    assume out_Tmp_2149 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    havoc out_Tmp_2068;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2107;
    call {:si_unique_call 3807} WPP_SF_q(out_Tmp_2107, 40, out_Tmp_2068, out_pdoExtension_17);
    goto L398;

  L398:
    call {:si_unique_call 3801} out_Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    call {:si_unique_call 3802} sdv_KeAcquireSpinLock(0, out_Tmp_2090);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    havoc out_cIrql_9;
    goto L277;

  L277:
    out_Tmp_2074 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2047;
    assume {:nonnull} out_Tmp_2047 != 0;
    assume out_Tmp_2047 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    out_Tmp_2097 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2073;
    assume {:nonnull} out_Tmp_2073 != 0;
    assume out_Tmp_2073 > 0;
    call {:si_unique_call 3800} sdv_ExFreePool(0);
    out_Tmp_2042 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2049;
    assume {:nonnull} out_Tmp_2049 != 0;
    assume out_Tmp_2049 > 0;
    out_Tmp_2084 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2131;
    assume {:nonnull} out_Tmp_2131 != 0;
    assume out_Tmp_2131 > 0;
    goto L423;

  L423:
    out_Tmp_2144 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2078;
    assume {:nonnull} out_Tmp_2078 != 0;
    assume out_Tmp_2078 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    out_Tmp_2059 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2134;
    assume {:nonnull} out_Tmp_2134 != 0;
    assume out_Tmp_2134 > 0;
    call {:si_unique_call 3799} sdv_ExFreePool(0);
    out_Tmp_2057 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2087;
    assume {:nonnull} out_Tmp_2087 != 0;
    assume out_Tmp_2087 > 0;
    out_Tmp_2114 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2066;
    assume {:nonnull} out_Tmp_2066 != 0;
    assume out_Tmp_2066 > 0;
    goto L430;

  L430:
    out_Tmp_2119 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2056;
    assume {:nonnull} out_Tmp_2056 != 0;
    assume out_Tmp_2056 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    out_Tmp_2046 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2117;
    assume {:nonnull} out_Tmp_2117 != 0;
    assume out_Tmp_2117 > 0;
    call {:si_unique_call 3798} sdv_ExFreePool(0);
    out_Tmp_2136 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2044;
    assume {:nonnull} out_Tmp_2044 != 0;
    assume out_Tmp_2044 > 0;
    out_Tmp_2139 := out_i_5;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2032;
    assume {:nonnull} out_Tmp_2032 != 0;
    assume out_Tmp_2032 > 0;
    goto L328;

  anon211_Then:
    goto L328;

  anon210_Then:
    goto L430;

  anon209_Then:
    goto L423;

  anon179_Then:
    goto L398;

  anon208_Then:
    goto L398;

  anon178_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L398;

  anon176_Then:
    goto L361;

  anon207_Then:
    goto L361;

  anon175_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L361;

  anon181_Then:
    goto L348;

  anon212_Then:
    goto L348;

  anon180_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L348;

  anon174_Then:
    assume {:partition} 0 <= out_status_67;
    goto L348;

  anon173_Then:
    assume {:partition} out_sdv_674 == 0;
    call {:si_unique_call 3803} out_Tmp_2090 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    call {:si_unique_call 3804} sdv_KeAcquireSpinLock(0, out_Tmp_2090);
    assume {:nonnull} out_Tmp_2090 != 0;
    assume out_Tmp_2090 > 0;
    havoc out_cIrql_9;
    goto L277;

  anon201_Then:
    goto L277;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L273(in_Tmp_2029: int, in_Tmp_2030: int, in_Tmp_2032: int, in_Tmp_2034: int, in_Tmp_2036: int, in_Tmp_2037: int, in_pdoExtension_17: int, in_Tmp_2042: int, in_Tmp_2044: int, in_Tmp_2045: int, in_Tmp_2046: int, in_Tmp_2047: int, in_Tmp_2048: int, in_Tmp_2049: int, in_Tmp_2051: int, in_Tmp_2052: int, in_Tmp_2053: int, in_Tmp_2056: int, in_Tmp_2057: int, in_Tmp_2058: int, in_Tmp_2059: int, in_Tmp_2061: int, in_Tmp_2063: int, in_Tmp_2065: int, in_Tmp_2066: int, in_Tmp_2067: int, in_Tmp_2068: int, in_Tmp_2070: int, in_sdv_669: int, in_Tmp_2072: int, in_Tmp_2073: int, in_Tmp_2074: int, in_Tmp_2076: int, in_Tmp_2077: int, in_Tmp_2078: int, in_Tmp_2079: int, in_status_67: int, in_Tmp_2084: int, in_Tmp_2085: int, in_Tmp_2086: int, in_Tmp_2087: int, in_Tmp_2089: int, in_Tmp_2090: int, in_Tmp_2091: int, in_i_5: int, in_Tmp_2092: int, in_Tmp_2094: int, in_Tmp_2096: int, in_Tmp_2097: int, in_Tmp_2099: int, in_Tmp_2102: int, in_Tmp_2104: int, in_Tmp_2105: int, in_Tmp_2106: int, in_Tmp_2107: int, in_Tmp_2110: int, in_Tmp_2111: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2116: int, in_Tmp_2117: int, in_Tmp_2119: int, in_Tmp_2120: int, in_Tmp_2125: int, in_Tmp_2126: int, in_sdv_674: int, in_fdoExtension_8: int, in_Tmp_2129: int, in_Tmp_2131: int, in_Tmp_2134: int, in_Tmp_2136: int, in_Tmp_2137: int, in_Tmp_2139: int, in_cIrql_9: int, in_Tmp_2140: int, in_Tmp_2144: int, in_Tmp_2145: int, in_Tmp_2146: int, in_Tmp_2149: int, in_Tmp_2150: int, in_Tmp_2152: int, in_DeviceObject_38: int, in_vslice_dummy_var_405: int, in_vslice_dummy_var_409: int, in_vslice_dummy_var_410: int) returns (out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2032: int, out_Tmp_2034: int, out_Tmp_2036: int, out_Tmp_2037: int, out_pdoExtension_17: int, out_Tmp_2042: int, out_Tmp_2044: int, out_Tmp_2045: int, out_Tmp_2046: int, out_Tmp_2047: int, out_Tmp_2048: int, out_Tmp_2049: int, out_Tmp_2051: int, out_Tmp_2052: int, out_Tmp_2053: int, out_Tmp_2056: int, out_Tmp_2057: int, out_Tmp_2058: int, out_Tmp_2059: int, out_Tmp_2061: int, out_Tmp_2063: int, out_Tmp_2065: int, out_Tmp_2066: int, out_Tmp_2067: int, out_Tmp_2068: int, out_Tmp_2070: int, out_sdv_669: int, out_Tmp_2072: int, out_Tmp_2073: int, out_Tmp_2074: int, out_Tmp_2076: int, out_Tmp_2077: int, out_Tmp_2078: int, out_Tmp_2079: int, out_status_67: int, out_Tmp_2084: int, out_Tmp_2085: int, out_Tmp_2086: int, out_Tmp_2087: int, out_Tmp_2089: int, out_Tmp_2090: int, out_Tmp_2091: int, out_i_5: int, out_Tmp_2092: int, out_Tmp_2094: int, out_Tmp_2096: int, out_Tmp_2097: int, out_Tmp_2099: int, out_Tmp_2102: int, out_Tmp_2104: int, out_Tmp_2105: int, out_Tmp_2106: int, out_Tmp_2107: int, out_Tmp_2110: int, out_Tmp_2111: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2116: int, out_Tmp_2117: int, out_Tmp_2119: int, out_Tmp_2120: int, out_Tmp_2125: int, out_Tmp_2126: int, out_sdv_674: int, out_Tmp_2129: int, out_Tmp_2131: int, out_Tmp_2134: int, out_Tmp_2136: int, out_Tmp_2137: int, out_Tmp_2139: int, out_cIrql_9: int, out_Tmp_2140: int, out_Tmp_2144: int, out_Tmp_2145: int, out_Tmp_2146: int, out_Tmp_2149: int, out_Tmp_2150: int, out_Tmp_2152: int, out_DeviceObject_38: int, out_vslice_dummy_var_405: int, out_vslice_dummy_var_409: int, out_vslice_dummy_var_410: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, locked, queuedWithoutMarking, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queued;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == 1 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_sdv_669 == 1 || out_sdv_669 == 0 || out_sdv_669 == in_sdv_669;
  free ensures {:va_keep} out_status_67 == -1073741823 || out_status_67 == -1073741738 || out_status_67 == 0 || out_status_67 == in_status_67;
  free ensures {:va_keep} out_sdv_674 == 1 || out_sdv_674 == 0 || out_sdv_674 == in_sdv_674;
  free ensures {:va_keep} out_vslice_dummy_var_405 == 1 || out_vslice_dummy_var_405 == 0 || out_vslice_dummy_var_405 == in_vslice_dummy_var_405;
  free ensures {:va_keep} out_vslice_dummy_var_410 == 1 || out_vslice_dummy_var_410 == 0 || out_vslice_dummy_var_410 == in_vslice_dummy_var_410;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_1193: int, in_sdv_380: int, in_sdv_381: int, in_irp: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_18: int, in_Key: int) returns (out_Tmp_1193: int, out_sdv_380: int, out_sdv_381: int, out_irp: int, out_packet_7: int)
{

  entry:
    out_Tmp_1193, out_sdv_380, out_sdv_381, out_irp, out_packet_7 := in_Tmp_1193, in_sdv_380, in_sdv_381, in_irp, in_packet_7;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_18 != 0;
    assume in_DeviceObject_18 > 0;
    call {:si_unique_call 3834} out_packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_18), in_Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} out_packet_7 != 0;
    call {:si_unique_call 3837} out_sdv_381 := sdv_containing_record(out_packet_7, 64);
    out_irp := out_sdv_381;
    call {:si_unique_call 3838} Sbp2StartIo#0(in_DeviceObject_18, out_irp);
    goto L17;

  L17:
    call {:si_unique_call 3835} out_Tmp_1193 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1193 != 0;
    assume out_Tmp_1193 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    call {:si_unique_call 3836} out_sdv_380 := sdv_InterlockedDecrement(out_Tmp_1193);
    assume {:nonnull} out_Tmp_1193 != 0;
    assume out_Tmp_1193 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_sdv_380 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    call {:si_unique_call 3839} {:si_old_unique_call 1} out_Tmp_1193, out_sdv_380, out_sdv_381, out_irp, out_packet_7 := Sbp2StartNextPacketByKey#0_loop_L11(out_Tmp_1193, out_sdv_380, out_sdv_381, out_irp, out_packet_7, in_deviceExtension, in_DeviceObject_18, in_Key);
    return;

  anon8_Then:
    assume {:partition} out_packet_7 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_1193: int, in_sdv_380: int, in_sdv_381: int, in_irp: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_18: int, in_Key: int) returns (out_Tmp_1193: int, out_sdv_380: int, out_sdv_381: int, out_irp: int, out_packet_7: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_sdv_381 == in_sdv_381;
  free ensures {:va_keep} out_irp == in_irp;
  free ensures {:va_keep} out_packet_7 == 0 || out_packet_7 == in_packet_7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_1193: int, in_sdv_380: int, in_sdv_381: int, in_irp: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_18: int, in_Key: int) returns (out_Tmp_1193: int, out_sdv_380: int, out_sdv_381: int, out_irp: int, out_packet_7: int)
{

  entry:
    out_Tmp_1193, out_sdv_380, out_sdv_381, out_irp, out_packet_7 := in_Tmp_1193, in_sdv_380, in_sdv_381, in_irp, in_packet_7;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_18 != 0;
    assume in_DeviceObject_18 > 0;
    call {:si_unique_call 3840} out_packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_18), in_Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} out_packet_7 != 0;
    call {:si_unique_call 3843} out_sdv_381 := sdv_containing_record(out_packet_7, 64);
    out_irp := out_sdv_381;
    call {:si_unique_call 3844} Sbp2StartIo#1(in_DeviceObject_18, out_irp);
    goto L17;

  L17:
    call {:si_unique_call 3841} out_Tmp_1193 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1193 != 0;
    assume out_Tmp_1193 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    call {:si_unique_call 3842} out_sdv_380 := sdv_InterlockedDecrement(out_Tmp_1193);
    assume {:nonnull} out_Tmp_1193 != 0;
    assume out_Tmp_1193 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_sdv_380 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    call {:si_unique_call 3845} {:si_old_unique_call 1} out_Tmp_1193, out_sdv_380, out_sdv_381, out_irp, out_packet_7 := Sbp2StartNextPacketByKey#1_loop_L11(out_Tmp_1193, out_sdv_380, out_sdv_381, out_irp, out_packet_7, in_deviceExtension, in_DeviceObject_18, in_Key);
    return;

  anon8_Then:
    assume {:partition} out_packet_7 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_1193: int, in_sdv_380: int, in_sdv_381: int, in_irp: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_18: int, in_Key: int) returns (out_Tmp_1193: int, out_sdv_380: int, out_sdv_381: int, out_irp: int, out_packet_7: int);
  modifies alloc, sdv_irql_current, Mem_T.Status__IO_STATUS_BLOCK, queued, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_sdv_381 == in_sdv_381;
  free ensures {:va_keep} out_irp == in_irp;
  free ensures {:va_keep} out_packet_7 == 0 || out_packet_7 == in_packet_7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2StartIo#0_loop_L166(in_qIrp: int, in_sdv_498: int, in_entry_2: int, in_Irp_16: int) returns (out_qIrp: int, out_sdv_498: int, out_entry_2: int)
{

  entry:
    out_qIrp, out_sdv_498, out_entry_2 := in_qIrp, in_sdv_498, in_entry_2;
    goto L166, exit;

  exit:
    return;

  L166:
    goto anon178_Else;

  anon178_Else:
    call {:si_unique_call 3846} out_sdv_498 := sdv_containing_record(out_entry_2, 64);
    out_qIrp := out_sdv_498;
    goto anon216_Then;

  anon216_Then:
    assume {:partition} out_qIrp != in_Irp_16;
    assume {:nonnull} out_entry_2 != 0;
    assume out_entry_2 > 0;
    havoc out_entry_2;
    goto anon216_Then_dummy;

  anon216_Then_dummy:
    havoc out_entry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#0_loop_L166(in_qIrp: int, in_sdv_498: int, in_entry_2: int, in_Irp_16: int) returns (out_qIrp: int, out_sdv_498: int, out_entry_2: int);
  free ensures {:va_keep} out_qIrp == in_qIrp;
  free ensures {:va_keep} out_sdv_498 == in_sdv_498;
  free ensures {:va_keep} out_entry_2 == in_entry_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2StartIo#1_loop_L166(in_qIrp: int, in_sdv_498: int, in_entry_2: int, in_Irp_16: int) returns (out_qIrp: int, out_sdv_498: int, out_entry_2: int)
{

  entry:
    out_qIrp, out_sdv_498, out_entry_2 := in_qIrp, in_sdv_498, in_entry_2;
    goto L166, exit;

  exit:
    return;

  L166:
    goto anon178_Else;

  anon178_Else:
    call {:si_unique_call 3847} out_sdv_498 := sdv_containing_record(out_entry_2, 64);
    out_qIrp := out_sdv_498;
    goto anon216_Then;

  anon216_Then:
    assume {:partition} out_qIrp != in_Irp_16;
    assume {:nonnull} out_entry_2 != 0;
    assume out_entry_2 > 0;
    havoc out_entry_2;
    goto anon216_Then_dummy;

  anon216_Then_dummy:
    havoc out_entry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#1_loop_L166(in_qIrp: int, in_sdv_498: int, in_entry_2: int, in_Irp_16: int) returns (out_qIrp: int, out_sdv_498: int, out_entry_2: int);
  free ensures {:va_keep} out_qIrp == in_qIrp;
  free ensures {:va_keep} out_sdv_498 == in_sdv_498;
  free ensures {:va_keep} out_entry_2 == in_entry_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2InitializeDeviceExtension#1_loop_L56(in_i_7: int, in_context_4: int, in_PdoExtension_26: int) returns (out_i_7: int, out_context_4: int)
{

  entry:
    out_i_7, out_context_4 := in_i_7, in_context_4;
    goto L56, exit;

  exit:
    return;

  L56:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon51_Else;

  anon51_Else:
    assume {:partition} 8 > out_i_7;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_context_4;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_i_7 := out_i_7 + 1;
    goto anon51_Else_dummy;

  anon51_Else_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L56(in_i_7: int, in_context_4: int, in_PdoExtension_26: int) returns (out_i_7: int, out_context_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2InitializeDeviceExtension#1_loop_L106(in_context_4: int, in_oldContext: int, in_vslice_dummy_var_466: int) returns (out_context_4: int, out_oldContext: int, out_vslice_dummy_var_466: int)
{

  entry:
    out_context_4, out_oldContext, out_vslice_dummy_var_466 := in_context_4, in_oldContext, in_vslice_dummy_var_466;
    goto L106, exit;

  exit:
    return;

  L106:
    goto anon57_Else;

  anon57_Else:
    assume {:partition} out_context_4 != 0;
    out_oldContext := out_context_4;
    call {:si_unique_call 3848} out_vslice_dummy_var_466 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    havoc out_context_4;
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    goto anon57_Else_dummy;

  anon57_Else_dummy:
    call {:si_unique_call 3849} {:si_old_unique_call 1} out_context_4, out_oldContext, out_vslice_dummy_var_466 := Sbp2InitializeDeviceExtension#1_loop_L106(out_context_4, out_oldContext, out_vslice_dummy_var_466);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L106(in_context_4: int, in_oldContext: int, in_vslice_dummy_var_466: int) returns (out_context_4: int, out_oldContext: int, out_vslice_dummy_var_466: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2InitializeDeviceExtension#1_loop_L105(in_i_7: int, in_Tmp_2446: int, in_Tmp_2448: int, in_Tmp_2450: int, in_context_4: int, in_Tmp_2453: int, in_oldContext: int, in_sdv_782: int, in_sdv_783: int, in_Tmp_2458: int, in_Tmp_2459: int, in_PdoExtension_26: int) returns (out_i_7: int, out_Tmp_2446: int, out_Tmp_2448: int, out_Tmp_2450: int, out_context_4: int, out_Tmp_2453: int, out_oldContext: int, out_sdv_782: int, out_sdv_783: int, out_Tmp_2458: int, out_Tmp_2459: int)
{

  entry:
    out_i_7, out_Tmp_2446, out_Tmp_2448, out_Tmp_2450, out_context_4, out_Tmp_2453, out_oldContext, out_sdv_782, out_sdv_783, out_Tmp_2458, out_Tmp_2459 := in_i_7, in_Tmp_2446, in_Tmp_2448, in_Tmp_2450, in_context_4, in_Tmp_2453, in_oldContext, in_sdv_782, in_sdv_783, in_Tmp_2458, in_Tmp_2459;
    goto L105, exit;

  exit:
    return;

  L105:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon56_Else;

  anon56_Else:
    assume {:partition} 8 > out_i_7;
    out_oldContext := out_context_4;
    call {:si_unique_call 3851} out_sdv_783 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_context_4 := out_sdv_783;
    goto anon65_Else;

  anon65_Else:
    assume {:partition} out_context_4 != 0;
    call {:si_unique_call 3850} out_sdv_782 := sdv_containing_record(out_context_4, 8);
    out_context_4 := out_sdv_782;
    goto anon66_Else;

  anon66_Else:
    assume {:partition} out_context_4 != 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_Tmp_2453 := out_i_7;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_Tmp_2459;
    assume {:nonnull} out_Tmp_2459 != 0;
    assume out_Tmp_2459 > 0;
    havoc out_Tmp_2458;
    assume {:nonnull} out_Tmp_2458 != 0;
    assume out_Tmp_2458 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_Tmp_2450 := out_i_7;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_Tmp_2446;
    assume {:nonnull} out_Tmp_2446 != 0;
    assume out_Tmp_2446 > 0;
    havoc out_Tmp_2448;
    assume {:nonnull} out_Tmp_2448 != 0;
    assume out_Tmp_2448 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_i_7 := out_i_7 + 1;
    goto anon66_Else_dummy;

  anon66_Else_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L105(in_i_7: int, in_Tmp_2446: int, in_Tmp_2448: int, in_Tmp_2450: int, in_context_4: int, in_Tmp_2453: int, in_oldContext: int, in_sdv_782: int, in_sdv_783: int, in_Tmp_2458: int, in_Tmp_2459: int, in_PdoExtension_26: int) returns (out_i_7: int, out_Tmp_2446: int, out_Tmp_2448: int, out_Tmp_2450: int, out_context_4: int, out_Tmp_2453: int, out_oldContext: int, out_sdv_782: int, out_sdv_783: int, out_Tmp_2458: int, out_Tmp_2459: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_i_7 == in_i_7;
  free ensures {:va_keep} out_Tmp_2446 == in_Tmp_2446;
  free ensures {:va_keep} out_Tmp_2448 == in_Tmp_2448;
  free ensures {:va_keep} out_Tmp_2450 == in_Tmp_2450;
  free ensures {:va_keep} out_context_4 == in_context_4;
  free ensures {:va_keep} out_Tmp_2453 == in_Tmp_2453;
  free ensures {:va_keep} out_oldContext == in_oldContext;
  free ensures {:va_keep} out_sdv_782 == in_sdv_782;
  free ensures {:va_keep} out_sdv_783 == in_sdv_783;
  free ensures {:va_keep} out_Tmp_2458 == in_Tmp_2458;
  free ensures {:va_keep} out_Tmp_2459 == in_Tmp_2459;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2UpdateNodeInformation#1_loop_L62(in_nextListItem_1: int, in_Tmp_632: int, in_sdv_190: int, in_sdv_191: int, in_sdv_192: int, in_sdv_196: int, in_currentListItem: int, in_Tmp_639: int, in_sdv_197: int, in_Tmp_640: int, in_Tmp_641: int, in_Tmp_643: int, in_PdoExtension_10: int) returns (out_nextListItem_1: int, out_Tmp_632: int, out_sdv_191: int, out_currentListItem: int, out_Tmp_639: int, out_Tmp_640: int, out_Tmp_641: int, out_Tmp_643: int)
{
  var vslice_dummy_var_3084: int;

  entry:
    out_nextListItem_1, out_Tmp_632, out_sdv_191, out_currentListItem, out_Tmp_639, out_Tmp_640, out_Tmp_641, out_Tmp_643 := in_nextListItem_1, in_Tmp_632, in_sdv_191, in_currentListItem, in_Tmp_639, in_Tmp_640, in_Tmp_641, in_Tmp_643;
    goto L62, exit;

  exit:
    return;

  L62:
    out_currentListItem := out_nextListItem_1;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_640;
    assume {:nonnull} out_Tmp_640 != 0;
    assume out_Tmp_640 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_632;
    assume {:nonnull} out_Tmp_632 != 0;
    assume out_Tmp_632 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_639;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    assume {:nonnull} out_Tmp_639 != 0;
    assume out_Tmp_639 > 0;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    assume {:nonnull} out_Tmp_639 != 0;
    assume out_Tmp_639 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_643;
    assume {:nonnull} out_Tmp_643 != 0;
    assume out_Tmp_643 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_641;
    assume {:nonnull} out_Tmp_641 != 0;
    assume out_Tmp_641 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_nextListItem_1;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    havoc vslice_dummy_var_3084;
    call {:si_unique_call 3852} out_sdv_191 := sdv_containing_record(vslice_dummy_var_3084, 0);
    goto anon27_Else;

  anon27_Else:
    assume {:partition} out_currentListItem != out_sdv_191;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    call {:si_unique_call 3853} {:si_old_unique_call 1} out_nextListItem_1, out_Tmp_632, out_sdv_191, out_currentListItem, out_Tmp_639, out_Tmp_640, out_Tmp_641, out_Tmp_643 := Sbp2UpdateNodeInformation#1_loop_L62(out_nextListItem_1, out_Tmp_632, in_sdv_190, out_sdv_191, in_sdv_192, in_sdv_196, out_currentListItem, out_Tmp_639, in_sdv_197, out_Tmp_640, out_Tmp_641, out_Tmp_643, in_PdoExtension_10);
    return;
}



procedure {:LoopProcedure} Sbp2UpdateNodeInformation#1_loop_L62(in_nextListItem_1: int, in_Tmp_632: int, in_sdv_190: int, in_sdv_191: int, in_sdv_192: int, in_sdv_196: int, in_currentListItem: int, in_Tmp_639: int, in_sdv_197: int, in_Tmp_640: int, in_Tmp_641: int, in_Tmp_643: int, in_PdoExtension_10: int) returns (out_nextListItem_1: int, out_Tmp_632: int, out_sdv_191: int, out_currentListItem: int, out_Tmp_639: int, out_Tmp_640: int, out_Tmp_641: int, out_Tmp_643: int);
  free ensures {:va_keep} out_nextListItem_1 == in_nextListItem_1;
  free ensures {:va_keep} out_Tmp_632 == in_Tmp_632;
  free ensures {:va_keep} out_sdv_191 == in_sdv_191;
  free ensures {:va_keep} out_currentListItem == in_currentListItem;
  free ensures {:va_keep} out_Tmp_639 == in_Tmp_639;
  free ensures {:va_keep} out_Tmp_640 == in_Tmp_640;
  free ensures {:va_keep} out_Tmp_641 == in_Tmp_641;
  free ensures {:va_keep} out_Tmp_643 == in_Tmp_643;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2StartPacket#0_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_465: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_465: int)
{

  entry:
    out_nextEntry_2, out_queueEntry2_1, out_sdv_465 := in_nextEntry_2, in_queueEntry2_1, in_sdv_465;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon15_Else;

  anon15_Else:
    call {:si_unique_call 3854} out_sdv_465 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_465;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon18_Else;

  anon18_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket#0_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_465: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_465: int);
  free ensures {:va_keep} out_nextEntry_2 == in_nextEntry_2;
  free ensures {:va_keep} out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} out_sdv_465 == in_sdv_465;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2StartPacket#1_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_465: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_465: int)
{

  entry:
    out_nextEntry_2, out_queueEntry2_1, out_sdv_465 := in_nextEntry_2, in_queueEntry2_1, in_sdv_465;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon15_Else;

  anon15_Else:
    call {:si_unique_call 3855} out_sdv_465 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_465;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon18_Else;

  anon18_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket#1_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_465: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_465: int);
  free ensures {:va_keep} out_nextEntry_2 == in_nextEntry_2;
  free ensures {:va_keep} out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} out_sdv_465 == in_sdv_465;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2GlobalStatusCallback#0_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_132: int) returns (out_nextListItem: int, out_entry: int, out_sdv_132: int)
{

  entry:
    out_nextListItem, out_entry, out_sdv_132 := in_nextListItem, in_entry, in_sdv_132;
    goto L204, exit;

  exit:
    return;

  L204:
    goto anon194_Else;

  anon194_Else:
    call {:si_unique_call 3856} out_sdv_132 := sdv_containing_record(out_entry, 0);
    out_nextListItem := out_sdv_132;
    assume {:nonnull} out_nextListItem != 0;
    assume out_nextListItem > 0;
    goto anon241_Else;

  anon241_Else:
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon241_Else_dummy;

  anon241_Else_dummy:
    havoc out_entry;
    return;
}



procedure {:LoopProcedure} Sbp2GlobalStatusCallback#0_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_132: int) returns (out_nextListItem: int, out_entry: int, out_sdv_132: int);
  free ensures {:va_keep} out_nextListItem == in_nextListItem;
  free ensures {:va_keep} out_entry == in_entry;
  free ensures {:va_keep} out_sdv_132 == in_sdv_132;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation Sbp2GlobalStatusCallback#1_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_132: int) returns (out_nextListItem: int, out_entry: int, out_sdv_132: int)
{

  entry:
    out_nextListItem, out_entry, out_sdv_132 := in_nextListItem, in_entry, in_sdv_132;
    goto L204, exit;

  exit:
    return;

  L204:
    goto anon194_Else;

  anon194_Else:
    call {:si_unique_call 3857} out_sdv_132 := sdv_containing_record(out_entry, 0);
    out_nextListItem := out_sdv_132;
    assume {:nonnull} out_nextListItem != 0;
    assume out_nextListItem > 0;
    goto anon241_Else;

  anon241_Else:
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon241_Else_dummy;

  anon241_Else_dummy:
    havoc out_entry;
    return;
}



procedure {:LoopProcedure} Sbp2GlobalStatusCallback#1_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_132: int) returns (out_nextListItem: int, out_entry: int, out_sdv_132: int);
  free ensures {:va_keep} out_nextListItem == in_nextListItem;
  free ensures {:va_keep} out_entry == in_entry;
  free ensures {:va_keep} out_sdv_132 == in_sdv_132;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



procedure fakeMain() returns (Tmp_906: int, dup_assertVar: bool);
  modifies alloc, sdv_irql_current, Mem_T.PWPP_PROJECT_CONTROL_BLOCK, SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.P_IRBIRP, Mem_T.Irp__IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:entrypoint} fakeMain() returns (Tmp_906: int, dup_assertVar: bool)
{

  start:
    call Tmp_906, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


