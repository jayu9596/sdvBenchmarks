var {:scalar} alloc: int;

var {:scalar} initDone: int;

var {:scalar} LockDepth: int;

var {:scalar} yogi_error: int;

var {:scalar} Mem_T.CurrentStackLocation_unnamed_tag_7: [int]int;

var {:scalar} Mem_T.MinorFunction__IO_STACK_LOCATION: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const pdriveInfo: int;

const dataErrorObject: int;

const discard_sdv_static_local_variable_116: int;

const tmp_sdv_static_local_variable_121: int;

const vols_3: int;

const handleConversionTable: int;

const window: int;

const sdv_cancelFptr: int;

const bootCode_sdv_static_local_variable_113: int;

const bdkVols: int;

const handleTable: int;

const antiCrashWindow_socketnt: int;

const GUID_PCMCIA_INTERFACE_STANDARD: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv1: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_start_irp_already_issued: int;

const sdv_kdpc: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_Io_Removelock_release_wait_returned: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_harnessStackLocation: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_pIoDpcContext: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_inside_init_entrypoint: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const WmiTffsportAddressGuid: int;

const WmiScsiAddressGuid: int;

const TrueffsNextDeviceNumber_tffsport: int;

const ScsiRawInterfaceGuid: int;

const driveInfoReferenceMutex: int;

const patitionTwo: int;

const NlsMbCodePageTag: int;

const timerObject: int;

const DumpData: int;

const timerDpc: int;

const KeTickCount: int;

procedure {:origName "getExbInfo"} getExbInfo(actual_pVol: int, actual_buf: int, actual_bufLen: int, actual_exbFlags: int) returns (Tmp_3: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_3 == 24 || Tmp_3 == 51 || Tmp_3 == 106 || Tmp_3 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "getExbInfo"} getExbInfo(actual_pVol: int, actual_buf: int, actual_bufLen: int, actual_exbFlags: int) returns (Tmp_3: int)
{
  var {:scalar} i: int;
  var {:pointer} globalHeader: int;
  var {:pointer} Tmp_5: int;
  var {:scalar} mediaType: int;
  var {:pointer} Tmp_6: int;
  var {:scalar} Tmp_7: int;
  var {:scalar} Tmp_8: int;
  var {:pointer} sdv_5: int;
  var {:scalar} Tmp_10: int;
  var {:scalar} Tmp_11: int;
  var {:scalar} Tmp_12: int;
  var {:scalar} sdv_6: int;
  var {:scalar} Tmp_13: int;
  var {:scalar} Tmp_14: int;
  var {:scalar} sdv_7: int;
  var {:scalar} Tmp_15: int;
  var {:pointer} sdv_8: int;
  var {:scalar} Tmp_16: int;
  var {:scalar} Tmp_17: int;
  var {:scalar} Tmp_18: int;
  var {:scalar} Tmp_20: int;
  var {:scalar} Tmp_21: int;
  var {:pointer} firmwareHeader: int;
  var {:pointer} pVol: int;
  var {:pointer} buf: int;
  var {:scalar} bufLen: int;
  var {:scalar} exbFlags: int;
  var boogieTmp: int;
  var vslice_dummy_var_0: int;
  var vslice_dummy_var_1: int;

  anon0:
    pVol := actual_pVol;
    buf := actual_buf;
    bufLen := actual_bufLen;
    exbFlags := actual_exbFlags;
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(20);
    call {:si_unique_call 1} vslice_dummy_var_1 := __HAVOC_malloc(20);
    globalHeader := buf;
    call {:si_unique_call 2} sdv_5 := flAddLongToFarPointer(buf, 16);
    firmwareHeader := sdv_5;
    assume {:nonnull} globalHeader != 0;
    assume globalHeader > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    Tmp_3 := 24;
    goto L1;

  L1:
    return;

  anon48_Then:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_6 != 0;
    Tmp_3 := 51;
    goto L1;

  anon35_Then:
    assume {:partition} sdv_6 == 0;
    call {:si_unique_call 3} i := corral_nondet();
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} i != 0;
    i := i - 1;
    goto L26;

  L26:
    assume {:nonnull} globalHeader != 0;
    assume globalHeader > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_3 := 51;
    goto L1;

  anon36_Then:
    Tmp_14 := 16 + i * 20;
    call {:si_unique_call 4} sdv_8 := flAddLongToFarPointer(buf, Tmp_14);
    firmwareHeader := sdv_8;
    i := pVol;
    Tmp_20 := i;
    assume {:nonnull} firmwareHeader != 0;
    assume firmwareHeader > 0;
    Tmp_13 := i;
    assume {:nonnull} firmwareHeader != 0;
    assume firmwareHeader > 0;
    Tmp_15 := i;
    assume {:nonnull} firmwareHeader != 0;
    assume firmwareHeader > 0;
    Tmp_21 := i;
    assume {:nonnull} firmwareHeader != 0;
    assume firmwareHeader > 0;
    Tmp_17 := i;
    assume {:nonnull} globalHeader != 0;
    assume globalHeader > 0;
    Tmp_11 := i;
    call {:si_unique_call 5} boogieTmp := corral_nondet();
    assume {:nonnull} pVol != 0;
    assume pVol > 0;
    havoc Tmp_5;
    assume {:nonnull} Tmp_5 != 0;
    assume Tmp_5 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Tmp_5 != 0;
    assume Tmp_5 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Tmp_5 != 0;
    assume Tmp_5 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Tmp_5 != 0;
    assume Tmp_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Tmp_5 != 0;
    assume Tmp_5 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L44;

  L44:
    Tmp_7 := i;
    Tmp_16 := i;
    assume {:nonnull} pVol != 0;
    assume pVol > 0;
    goto L46;

  L46:
    Tmp_3 := 0;
    goto L1;

  anon40_Then:
    Tmp_3 := 51;
    goto L1;

  anon41_Then:
    goto L44;

  anon42_Then:
    goto L44;

  anon43_Then:
    Tmp_18 := i;
    Tmp_10 := i;
    assume {:nonnull} pVol != 0;
    assume pVol > 0;
    goto L46;

  anon50_Then:
    Tmp_12 := i;
    Tmp_8 := i;
    assume {:nonnull} pVol != 0;
    assume pVol > 0;
    goto L46;

  anon49_Then:
    assume {:partition} i == 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_7 != 0;
    Tmp_3 := 51;
    goto L1;

  anon37_Then:
    assume {:partition} sdv_7 == 0;
    assume {:nonnull} pVol != 0;
    assume pVol > 0;
    havoc Tmp_6;
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    mediaType := 4;
    goto L58;

  L58:
    i := 0;
    goto L59;

  L59:
    call {:si_unique_call 6} i := getExbInfo_loop_L59(i, globalHeader, mediaType, firmwareHeader);
    goto L59_last;

  L59_last:
    assume {:nonnull} globalHeader != 0;
    assume globalHeader > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} firmwareHeader != 0;
    assume firmwareHeader > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    i := i + 1;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    assume false;
    return;

  anon39_Then:
    goto L26;

  anon38_Then:
    goto L26;

  anon44_Then:
    Tmp_3 := 106;
    goto L1;

  anon45_Then:
    mediaType := 2;
    goto L58;

  anon46_Then:
    mediaType := 3;
    goto L58;

  anon47_Then:
    goto L53;

  L53:
    mediaType := 1;
    goto L58;

  anon51_Then:
    goto L53;
}



procedure {:origName "waitForFullBuffer"} waitForFullBuffer(actual_pVol_1: int, actual_buf_1: int, actual_bufLen_1: int, actual_length: int, actual_half: int) returns (Tmp_25: int);
  free ensures {:va_keep} Tmp_25 == 0 || Tmp_25 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "waitForFullBuffer"} waitForFullBuffer(actual_pVol_1: int, actual_buf_1: int, actual_bufLen_1: int, actual_length: int, actual_half: int) returns (Tmp_25: int)
{
  var {:scalar} i_1: int;
  var {:scalar} Tmp_26: int;
  var {:scalar} bufferEnd: int;
  var {:scalar} Tmp_28: int;
  var {:scalar} Tmp_29: int;
  var {:pointer} sdv_9: int;
  var {:scalar} Tmp_30: int;
  var {:pointer} Tmp_31: int;
  var {:scalar} Tmp_32: int;
  var {:scalar} Tmp_33: int;
  var {:scalar} Tmp_34: int;
  var {:scalar} Tmp_35: int;
  var {:pointer} Tmp_36: int;
  var {:scalar} tmp: int;
  var {:scalar} Tmp_37: int;
  var {:scalar} Tmp_38: int;
  var {:scalar} Tmp_39: int;
  var {:pointer} pVol_1: int;
  var {:pointer} buf_1: int;
  var {:scalar} bufLen_1: int;
  var {:pointer} length: int;
  var {:scalar} half: int;
  var vslice_dummy_var_2: int;

  anon0:
    pVol_1 := actual_pVol_1;
    buf_1 := actual_buf_1;
    bufLen_1 := actual_bufLen_1;
    length := actual_length;
    half := actual_half;
    i_1 := pVol_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} half == 1;
    bufferEnd := 256;
    goto L10;

  L10:
    Tmp_33 := i_1;
    assume {:nonnull} length != 0;
    assume length > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_29 := i_1;
    havoc Tmp_34;
    goto L13;

  L13:
    tmp := Tmp_34;
    Tmp_35 := tmp;
    assume {:nonnull} length != 0;
    assume length > 0;
    havoc Tmp_28;
    call {:si_unique_call 7} sdv_9 := flAddLongToFarPointer(buf_1, Tmp_28);
    Tmp_26 := i_1;
    havoc Tmp_31;
    assume {:nonnull} Tmp_31 != 0;
    assume Tmp_31 > 0;
    havoc Tmp_36;
    assume {:IndirectCall} true;
    call {:si_unique_call 8} vslice_dummy_var_2 := flmemcpy(Tmp_36, sdv_9, Tmp_35);
    Tmp_39 := i_1;
    Tmp_38 := i_1;
    Tmp_37 := i_1;
    Tmp_30 := i_1;
    assume {:nonnull} length != 0;
    assume length > 0;
    assume {:nonnull} length != 0;
    assume length > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_25 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_32 := i_1;
    Tmp_25 := 1;
    goto L1;

  anon8_Then:
    assume {:nonnull} length != 0;
    assume length > 0;
    havoc Tmp_34;
    goto L13;

  anon7_Then:
    assume {:partition} half != 1;
    bufferEnd := 512;
    goto L10;
}



procedure {:origName "_sdv_init20"} _sdv_init20();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init20"} _sdv_init20()
{
  var vslice_dummy_var_3: int;

  anon0:
    call {:si_unique_call 9} vslice_dummy_var_3 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "firstTimeInit"} firstTimeInit(actual_pVol_2: int, actual_exb: int, actual_buf_2: int, actual_bufLen_2: int, actual_ioreq: int, actual_bdk: int, actual_exbFlags_1: int) returns (Tmp_42: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "firstTimeInit"} firstTimeInit(actual_pVol_2: int, actual_exb: int, actual_buf_2: int, actual_bufLen_2: int, actual_ioreq: int, actual_bdk: int, actual_exbFlags_1: int) returns (Tmp_42: int)
{
  var {:scalar} fl: int;
  var {:scalar} fl_1: int;
  var {:pointer} Tmp_46: int;
  var {:scalar} fl_2: int;
  var {:scalar} fl_3: int;
  var {:scalar} fl_4: int;
  var {:scalar} status: int;
  var {:scalar} info_1: int;
  var {:scalar} Tmp_49: int;
  var {:pointer} pVol_2: int;
  var {:pointer} exb: int;
  var {:pointer} buf_2: int;
  var {:scalar} bufLen_2: int;
  var {:pointer} ioreq: int;
  var {:pointer} bdk: int;
  var {:scalar} exbFlags_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_1189: int;
  var vslice_dummy_var_1190: int;
  var vslice_dummy_var_1191: int;

  anon0:
    call {:si_unique_call 10} info_1 := __HAVOC_malloc(16);
    pVol_2 := actual_pVol_2;
    exb := actual_exb;
    buf_2 := actual_buf_2;
    bufLen_2 := actual_bufLen_2;
    ioreq := actual_ioreq;
    bdk := actual_bdk;
    exbFlags_1 := actual_exbFlags_1;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    havoc Tmp_49;
    assume {:nonnull} exb != 0;
    assume exb > 0;
    call {:si_unique_call 11} boogieTmp := flBufferOf(Tmp_49);
    call {:si_unique_call 12} fl_3 := getExbInfo(pVol_2, buf_2, bufLen_2, exbFlags_1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} fl_3 != 0;
    Tmp_42 := fl_3;
    goto L1;

  L1:
    return;

  anon24_Then:
    assume {:partition} fl_3 == 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 13} fl_2 := absMountVolume(pVol_2);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} fl_2 != 0;
    Tmp_42 := fl_2;
    goto L1;

  anon32_Then:
    assume {:partition} fl_2 == 0;
    goto L21;

  L21:
    assume {:nonnull} ioreq != 0;
    assume ioreq > 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} fl_1 != 0;
    Tmp_42 := fl_1;
    goto L1;

  anon26_Then:
    assume {:partition} fl_1 == 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    assume {:nonnull} exb != 0;
    assume exb > 0;
    call {:si_unique_call 14} boogieTmp := corral_nondet();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} exb != 0;
    assume exb > 0;
    assume {:nonnull} exb != 0;
    assume exb > 0;
    goto L35;

  L35:
    assume {:nonnull} bdk != 0;
    assume bdk > 0;
    assume {:nonnull} ioreq != 0;
    assume ioreq > 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    havoc vslice_dummy_var_1189;
    call {:si_unique_call 15} status := bdkCall(503, ioreq, vslice_dummy_var_1189);
    assume {:nonnull} bdk != 0;
    assume bdk > 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L43;

  L43:
    Tmp_42 := 52;
    goto L1;

  anon27_Then:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} status == 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    assume {:nonnull} bdk != 0;
    assume bdk > 0;
    call {:si_unique_call 16} boogieTmp := corral_nondet();
    assume {:nonnull} bdk != 0;
    assume bdk > 0;
    assume {:nonnull} bdk != 0;
    assume bdk > 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    havoc vslice_dummy_var_1190;
    call {:si_unique_call 17} fl_4 := bdkCall(404, ioreq, vslice_dummy_var_1190);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} fl_4 != 0;
    Tmp_42 := fl_4;
    goto L1;

  anon29_Then:
    assume {:partition} fl_4 == 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} BAND(exbFlags_1, 256) != 0;
    goto L56;

  L56:
    assume {:nonnull} exb != 0;
    assume exb > 0;
    assume {:nonnull} exb != 0;
    assume exb > 0;
    assume {:nonnull} exb != 0;
    assume exb > 0;
    assume {:nonnull} exb != 0;
    assume exb > 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    goto L4;

  L4:
    Tmp_42 := 0;
    goto L1;

  anon30_Then:
    assume {:partition} BAND(exbFlags_1, 256) == 0;
    assume {:nonnull} bdk != 0;
    assume bdk > 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    assume {:nonnull} bdk != 0;
    assume bdk > 0;
    assume {:nonnull} pVol_2 != 0;
    assume pVol_2 > 0;
    havoc vslice_dummy_var_1191;
    call {:si_unique_call 18} fl := bdkCall(401, ioreq, vslice_dummy_var_1191);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} fl != 0;
    Tmp_42 := fl;
    goto L1;

  anon31_Then:
    assume {:partition} fl == 0;
    assume {:nonnull} exb != 0;
    assume exb > 0;
    havoc Tmp_46;
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    call {:si_unique_call 19} vslice_dummy_var_4 := flmemset(flData_FLBuffer(Tmp_46), 255, 512);
    goto L56;

  anon28_Then:
    assume {:partition} status != 0;
    goto L43;

  anon33_Then:
    assume {:nonnull} exb != 0;
    assume exb > 0;
    call {:si_unique_call 20} boogieTmp := corral_nondet();
    assume {:nonnull} exb != 0;
    assume exb > 0;
    goto L35;

  anon25_Then:
    goto L21;

  anon23_Then:
    goto L4;
}



procedure {:origName "placeExbByBuffer"} placeExbByBuffer(actual_pVol_3: int, actual_buf_3: int, actual_bufLen_3: int, actual_docWinBase: int, actual_exbFlags_2: int) returns (Tmp_50: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "placeExbByBuffer"} placeExbByBuffer(actual_pVol_3: int, actual_buf_3: int, actual_bufLen_3: int, actual_docWinBase: int, actual_exbFlags_2: int) returns (Tmp_50: int)
{
  var {:scalar} ioreq_1: int;
  var {:scalar} bdk_1: int;
  var {:pointer} ipl: int;
  var {:scalar} Tmp_52: int;
  var {:pointer} Tmp_53: int;
  var {:pointer} Tmp_54: int;
  var {:scalar} sdv_20: int;
  var {:scalar} fl_5: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:pointer} Tmp_57: int;
  var {:pointer} anandMark: int;
  var {:pointer} tffs: int;
  var {:pointer} Tmp_58: int;
  var {:pointer} Tmp_59: int;
  var {:dopa} {:scalar} length_1: int;
  var {:scalar} fl_6: int;
  var {:pointer} Tmp_60: int;
  var {:pointer} Tmp_61: int;
  var {:scalar} Tmp_62: int;
  var {:pointer} Tmp_64: int;
  var {:scalar} fl_7: int;
  var {:pointer} Tmp_65: int;
  var {:pointer} Tmp_66: int;
  var {:pointer} Tmp_67: int;
  var {:pointer} Tmp_68: int;
  var {:pointer} hdr: int;
  var {:pointer} Tmp_69: int;
  var {:scalar} sdv_28: int;
  var {:scalar} sdv_29: int;
  var {:pointer} exb_1: int;
  var {:scalar} fl_8: int;
  var {:pointer} Tmp_71: int;
  var {:scalar} fl_9: int;
  var {:pointer} spl: int;
  var {:pointer} Tmp_73: int;
  var {:pointer} Tmp_74: int;
  var {:pointer} Tmp_75: int;
  var {:scalar} fl_10: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:scalar} tmpWord: int;
  var {:pointer} Tmp_78: int;
  var {:pointer} Tmp_79: int;
  var {:pointer} pVol_3: int;
  var {:pointer} buf_3: int;
  var {:scalar} bufLen_3: int;
  var {:scalar} docWinBase: int;
  var {:scalar} exbFlags_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_1192: int;
  var vslice_dummy_var_1193: int;
  var vslice_dummy_var_1194: int;
  var vslice_dummy_var_1195: int;
  var vslice_dummy_var_1196: int;
  var vslice_dummy_var_1197: int;
  var vslice_dummy_var_1198: int;
  var vslice_dummy_var_1199: int;
  var vslice_dummy_var_1200: int;

  anon0:
    call {:si_unique_call 21} ioreq_1 := __HAVOC_malloc(24);
    call {:si_unique_call 22} bdk_1 := __HAVOC_malloc(28);
    call {:si_unique_call 23} anandMark := __HAVOC_malloc(4);
    call {:si_unique_call 24} length_1 := __HAVOC_malloc(4);
    pVol_3 := actual_pVol_3;
    buf_3 := actual_buf_3;
    bufLen_3 := actual_bufLen_3;
    docWinBase := actual_docWinBase;
    exbFlags_2 := actual_exbFlags_2;
    assume {:nonnull} anandMark != 0;
    assume anandMark > 0;
    call {:si_unique_call 25} boogieTmp := __HAVOC_malloc(8);
    call {:si_unique_call 26} Tmp_68 := __HAVOC_malloc(8);
    call {:si_unique_call 27} Tmp_69 := __HAVOC_malloc(8);
    call {:si_unique_call 28} vslice_dummy_var_5 := __HAVOC_malloc(20);
    assume {:nonnull} length_1 != 0;
    assume length_1 > 0;
    assume {:nonnull} anandMark != 0;
    assume anandMark > 0;
    Tmp_52 := pVol_3;
    havoc exb_1;
    assume {:nonnull} ioreq_1 != 0;
    assume ioreq_1 > 0;
    assume {:nonnull} bdk_1 != 0;
    assume bdk_1 > 0;
    assume {:nonnull} ioreq_1 != 0;
    assume ioreq_1 > 0;
    call {:si_unique_call 29} fl_9 := firstTimeInit(pVol_3, exb_1, buf_3, bufLen_3, ioreq_1, bdk_1, exbFlags_2);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} fl_9 != 0;
    Tmp_50 := fl_9;
    goto L1;

  L1:
    return;

  anon91_Then:
    assume {:partition} fl_9 == 0;
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    havoc Tmp_64;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    assume {:nonnull} bdk_1 != 0;
    assume bdk_1 > 0;
    assume {:nonnull} bdk_1 != 0;
    assume bdk_1 > 0;
    assume {:nonnull} bdk_1 != 0;
    assume bdk_1 > 0;
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} length_1 != 0;
    assume length_1 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} length_1 != 0;
    assume length_1 > 0;
    Tmp_50 := 0;
    goto L1;

  anon122_Then:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} length_1 != 0;
    assume length_1 > 0;
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_58;
    assume {:nonnull} Tmp_58 != 0;
    assume Tmp_58 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_71;
    assume {:nonnull} Tmp_71 != 0;
    assume Tmp_71 > 0;
    goto L1;

  anon124_Then:
    goto L39;

  L39:
    Tmp_50 := 0;
    goto L1;

  anon123_Then:
    goto L39;

  anon92_Then:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} length_1 != 0;
    assume length_1 > 0;
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto L46;

  L46:
    call {:si_unique_call 30} ipl, Tmp_53, Tmp_54, sdv_20, fl_5, Tmp_55, Tmp_56, Tmp_57, tffs, Tmp_59, Tmp_60, Tmp_62, fl_7, Tmp_65, Tmp_66, Tmp_67, Tmp_68, hdr, Tmp_69, sdv_28, sdv_29, fl_8, spl, Tmp_74, Tmp_75, fl_10, Tmp_76, Tmp_77, tmpWord, Tmp_78, Tmp_79, boogieTmp, vslice_dummy_var_6, vslice_dummy_var_7 := placeExbByBuffer_loop_L46(ioreq_1, ipl, Tmp_53, Tmp_54, sdv_20, fl_5, Tmp_55, Tmp_56, Tmp_57, anandMark, tffs, Tmp_59, length_1, fl_6, Tmp_60, Tmp_62, fl_7, Tmp_65, Tmp_66, Tmp_67, Tmp_68, hdr, Tmp_69, sdv_28, sdv_29, exb_1, fl_8, spl, Tmp_74, Tmp_75, fl_10, Tmp_76, Tmp_77, tmpWord, Tmp_78, Tmp_79, pVol_3, buf_3, bufLen_3, docWinBase, exbFlags_2, boogieTmp, vslice_dummy_var_6, vslice_dummy_var_7);
    goto L46_last;

  L46_last:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} length_1 != 0;
    assume length_1 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_74;
    assume {:nonnull} Tmp_74 != 0;
    assume Tmp_74 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    call {:si_unique_call 31} sdv_28 := waitForFullBuffer(pVol_3, buf_3, bufLen_3, length_1, 1);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} sdv_28 != 0;
    goto L61;

  L61:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L63;

  L63:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_65;
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    goto L107;

  L107:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    havoc Tmp_66;
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_66 != 0;
    assume Tmp_66 > 0;
    call {:si_unique_call 32} vslice_dummy_var_6 := flmemset(flData_FLBuffer(Tmp_66), 255, 512);
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    goto anon109_Else_dummy;

  anon109_Else_dummy:
    assume false;
    return;

  anon109_Then:
    goto anon109_Then_dummy;

  anon109_Then_dummy:
    assume false;
    return;

  anon117_Then:
    goto L69;

  L69:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_67;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(exbFlags_2, 256) == 0;
    goto L76;

  L76:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_76;
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} fl_6 == 0;
    goto L107;

  anon104_Then:
    assume {:partition} fl_6 != 0;
    Tmp_50 := fl_6;
    goto L1;

  anon103_Then:
    assume {:partition} BAND(exbFlags_2, 256) != 0;
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    havoc Tmp_79;
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    call {:si_unique_call 33} vslice_dummy_var_7 := flmemset(flData_FLBuffer(Tmp_79), 255, 512);
    goto L76;

  anon128_Then:
    Tmp_50 := 106;
    goto L1;

  anon118_Then:
    goto L69;

  anon119_Then:
    goto L69;

  anon127_Then:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto L99;

  L99:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_77;
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc vslice_dummy_var_1192;
    call {:si_unique_call 34} fl_8 := flashNoWrite_sdv_static_function_3(vslice_dummy_var_1192, 1030, anandMark, 2, 4);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} fl_8 == 0;
    goto L107;

  anon108_Then:
    assume {:partition} fl_8 != 0;
    Tmp_50 := fl_8;
    goto L1;

  anon102_Then:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} BAND(exbFlags_2, 256) != 0;
    goto L99;

  anon105_Then:
    assume {:partition} BAND(exbFlags_2, 256) == 0;
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc vslice_dummy_var_1193;
    call {:si_unique_call 35} fl_10 := bdkCall(402, ioreq_1, vslice_dummy_var_1193);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} fl_10 == 0;
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc vslice_dummy_var_1194;
    call {:si_unique_call 36} fl_5 := bdkCall(402, ioreq_1, vslice_dummy_var_1194);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} fl_5 == 0;
    goto L99;

  anon107_Then:
    assume {:partition} fl_5 != 0;
    Tmp_50 := fl_5;
    goto L1;

  anon106_Then:
    assume {:partition} fl_10 != 0;
    Tmp_50 := fl_10;
    goto L1;

  anon126_Then:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} BAND(exbFlags_2, 256) == 0;
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc vslice_dummy_var_1195;
    call {:si_unique_call 37} fl_7 := bdkCall(402, ioreq_1, vslice_dummy_var_1195);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} fl_7 != 0;
    Tmp_50 := fl_7;
    goto L1;

  anon110_Then:
    assume {:partition} fl_7 == 0;
    goto L107;

  anon101_Then:
    assume {:partition} BAND(exbFlags_2, 256) != 0;
    goto L107;

  anon99_Then:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    Tmp_54 := flData_FLBuffer(Tmp_56);
    assume {:nonnull} Tmp_54 != 0;
    assume Tmp_54 > 0;
    hdr := biosHdr_SplHeader(Tmp_54);
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    call {:si_unique_call 38} boogieTmp := corral_nondet();
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_53;
    assume {:nonnull} Tmp_53 != 0;
    assume Tmp_53 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    goto L125;

  L125:
    assume {:nonnull} hdr != 0;
    assume hdr > 0;
    havoc Tmp_68;
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    goto L127;

  L127:
    Tmp_50 := 24;
    goto L1;

  anon130_Then:
    assume {:nonnull} hdr != 0;
    assume hdr > 0;
    havoc Tmp_69;
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_60;
    assume {:nonnull} Tmp_60 != 0;
    assume Tmp_60 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    goto L133;

  L133:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    havoc Tmp_55;
    assume {:nonnull} Tmp_55 != 0;
    assume Tmp_55 > 0;
    tffs := flData_FLBuffer(Tmp_55);
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} tffs != 0;
    assume tffs > 0;
    assume {:nonnull} tffs != 0;
    assume tffs > 0;
    call {:si_unique_call 39} boogieTmp := corral_nondet();
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} tffs != 0;
    assume tffs > 0;
    havoc vslice_dummy_var_1196;
    havoc vslice_dummy_var_1197;
    call {:si_unique_call 40} toUNAL(vslice_dummy_var_1196, vslice_dummy_var_1197);
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto L129;

  L129:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    havoc Tmp_57;
    assume {:nonnull} Tmp_57 != 0;
    assume Tmp_57 > 0;
    tffs := flData_FLBuffer(Tmp_57);
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} tffs != 0;
    assume tffs > 0;
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} tffs != 0;
    assume tffs > 0;
    goto L63;

  anon134_Then:
    goto L133;

  anon120_Then:
    goto L129;

  anon121_Then:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    havoc Tmp_75;
    assume {:nonnull} Tmp_75 != 0;
    assume Tmp_75 > 0;
    spl := flData_FLBuffer(Tmp_75);
    call {:si_unique_call 41} sdv_20 := flRandByte();
    tmpWord := sdv_20;
    assume {:nonnull} spl != 0;
    assume spl > 0;
    havoc vslice_dummy_var_1198;
    call {:si_unique_call 42} toUNAL(vslice_dummy_var_1198, tmpWord);
    assume {:nonnull} spl != 0;
    assume spl > 0;
    assume {:nonnull} spl != 0;
    assume spl > 0;
    call {:si_unique_call 43} boogieTmp := corral_nondet();
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    havoc Tmp_62;
    assume {:nonnull} spl != 0;
    assume spl > 0;
    havoc vslice_dummy_var_1199;
    call {:si_unique_call 44} toUNAL(vslice_dummy_var_1199, Tmp_62);
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} spl != 0;
    assume spl > 0;
    assume {:nonnull} spl != 0;
    assume spl > 0;
    call {:si_unique_call 45} boogieTmp := corral_nondet();
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} docWinBase > 0;
    assume {:nonnull} spl != 0;
    assume spl > 0;
    havoc vslice_dummy_var_1200;
    call {:si_unique_call 46} toUNAL(vslice_dummy_var_1200, docWinBase);
    assume {:nonnull} spl != 0;
    assume spl > 0;
    assume {:nonnull} spl != 0;
    assume spl > 0;
    call {:si_unique_call 47} boogieTmp := corral_nondet();
    goto L63;

  anon133_Then:
    assume {:partition} 0 >= docWinBase;
    goto L63;

  anon111_Then:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto L165;

  L165:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    havoc Tmp_78;
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    ipl := flData_FLBuffer(Tmp_78);
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} ipl != 0;
    assume ipl > 0;
    call {:si_unique_call 48} boogieTmp := corral_nondet();
    assume {:nonnull} ipl != 0;
    assume ipl > 0;
    goto L167;

  L167:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} docWinBase > 0;
    assume {:nonnull} ipl != 0;
    assume ipl > 0;
    assume {:nonnull} ipl != 0;
    assume ipl > 0;
    assume {:nonnull} ipl != 0;
    assume ipl > 0;
    call {:si_unique_call 49} boogieTmp := corral_nondet();
    goto L63;

  anon113_Then:
    assume {:partition} 0 >= docWinBase;
    goto L63;

  anon132_Then:
    goto L167;

  anon112_Then:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto L165;

  anon131_Then:
    goto L127;

  anon129_Then:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    call {:si_unique_call 50} boogieTmp := corral_nondet();
    goto L125;

  anon100_Then:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    havoc Tmp_59;
    assume {:nonnull} Tmp_59 != 0;
    assume Tmp_59 > 0;
    hdr := flData_FLBuffer(Tmp_59);
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} hdr != 0;
    assume hdr > 0;
    goto L125;

  anon98_Then:
    assume {:partition} sdv_28 == 0;
    Tmp_50 := 0;
    goto L1;

  anon125_Then:
    goto L52;

  L52:
    call {:si_unique_call 51} sdv_29 := waitForFullBuffer(pVol_3, buf_3, bufLen_3, length_1, 0);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} sdv_29 == 0;
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    Tmp_50 := 0;
    goto L1;

  anon115_Then:
    goto L61;

  anon114_Then:
    assume {:partition} sdv_29 != 0;
    goto L61;

  anon97_Then:
    goto L52;

  anon96_Then:
    goto L49;

  L49:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    assume {:nonnull} length_1 != 0;
    assume length_1 > 0;
    goto L181;

  L181:
    assume {:nonnull} exb_1 != 0;
    assume exb_1 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_73;
    assume {:nonnull} Tmp_73 != 0;
    assume Tmp_73 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} pVol_3 != 0;
    assume pVol_3 > 0;
    havoc Tmp_61;
    assume {:nonnull} Tmp_61 != 0;
    assume Tmp_61 > 0;
    goto L1;

  anon135_Then:
    goto L183;

  L183:
    Tmp_50 := 0;
    goto L1;

  anon116_Then:
    goto L183;

  anon95_Then:
    goto L181;

  anon94_Then:
    goto L49;

  anon93_Then:
    goto L46;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 52} vslice_dummy_var_8 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "cfiscsByteIdentify"} cfiscsByteIdentify(actual_pVol_4: int) returns (Tmp_82: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_82 == 26 || Tmp_82 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "cfiscsByteIdentify"} cfiscsByteIdentify(actual_pVol_4: int) returns (Tmp_82: int)
{
  var {:scalar} counter: int;
  var {:pointer} sdv_33: int;
  var {:pointer} flashPtr: int;
  var {:scalar} sdv_34: int;
  var {:scalar} inlv: int;
  var {:scalar} idChar: int;
  var {:scalar} mul: int;
  var {:pointer} Tmp_88: int;
  var {:scalar} offset: int;
  var {:scalar} letter: int;
  var {:pointer} pVol_4: int;
  var boogieTmp: int;
  var vslice_dummy_var_9: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_1201: int;

  anon0:
    pVol_4 := actual_pVol_4;
    assume {:nonnull} pVol_4 != 0;
    assume pVol_4 > 0;
    havoc vslice_dummy_var_1201;
    call {:si_unique_call 53} sdv_33 := flMap(vslice_dummy_var_1201, 0);
    flashPtr := sdv_33;
    inlv := 1;
    goto L11;

  L11:
    call {:si_unique_call 54} inlv := cfiscsByteIdentify_loop_L11(flashPtr, inlv);
    goto L11_last;

  L11_last:
    assume {:CounterLoop 7} {:Counter "inlv"} true;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} 8 >= inlv;
    inlv := inlv + 1;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} inlv > 8;
    inlv := 1;
    goto L18;

  L18:
    call {:si_unique_call 55} counter, sdv_34, inlv, idChar, mul, offset, letter := cfiscsByteIdentify_loop_L18(counter, flashPtr, sdv_34, inlv, idChar, mul, offset, letter);
    goto L18_last;

  L18_last:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} 8 >= inlv;
    mul := 1;
    goto L21;

  L21:
    call {:si_unique_call 56} counter, sdv_34, idChar, mul, offset, letter := cfiscsByteIdentify_loop_L21(counter, flashPtr, sdv_34, inlv, idChar, mul, offset, letter);
    goto L21_last;

  L21_last:
    assume {:CounterLoop 7} {:Counter "mul"} true;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 8 >= mul;
    letter := 0;
    goto L29;

  L29:
    call {:si_unique_call 57} counter, sdv_34, idChar, offset, letter := cfiscsByteIdentify_loop_L29(counter, flashPtr, sdv_34, inlv, idChar, mul, offset, letter);
    goto L29_last;

  L29_last:
    assume {:CounterLoop 3} {:Counter "letter"} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} 3 > letter;
    idChar := 63;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} letter != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} letter != 1;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} letter == 2;
    idChar := 89;
    goto L36;

  L36:
    counter := 0;
    offset := (16 + letter) * inlv * mul;
    goto L44;

  L44:
    call {:si_unique_call 58} counter, sdv_34, offset := cfiscsByteIdentify_loop_L44(counter, flashPtr, sdv_34, inlv, idChar, mul, offset);
    goto L44_last;

  L44_last:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} mul > counter;
    call {:si_unique_call 59} sdv_34 := corral_nondet();
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_34 == idChar;
    counter := counter + 1;
    offset := offset + inlv;
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    assume false;
    return;

  anon34_Then:
    assume {:partition} sdv_34 != idChar;
    goto L45;

  L45:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} mul <= counter;
    letter := letter + 1;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    assume false;
    return;

  anon33_Then:
    assume {:partition} counter < mul;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} letter < 3;
    mul := mul + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} 3 <= letter;
    goto L19;

  L19:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} inlv > 8;
    Tmp_82 := 26;
    goto L1;

  L1:
    return;

  anon29_Then:
    assume {:partition} 8 >= inlv;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} BAND(inlv, inlv - 1) != 0;
    Tmp_82 := 26;
    goto L1;

  anon36_Then:
    assume {:partition} BAND(inlv, inlv - 1) == 0;
    assume {:nonnull} pVol_4 != 0;
    assume pVol_4 > 0;
    assume {:nonnull} pVol_4 != 0;
    assume pVol_4 > 0;
    havoc Tmp_88;
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 60} vslice_dummy_var_9 := corral_nondet();
    call {:si_unique_call 61} vslice_dummy_var_10 := corral_nondet();
    assume {:nonnull} pVol_4 != 0;
    assume pVol_4 > 0;
    call {:si_unique_call 62} boogieTmp := corral_nondet();
    Tmp_82 := 0;
    goto L1;

  anon32_Then:
    assume {:partition} counter >= mul;
    goto L45;

  anon37_Then:
    assume {:partition} letter != 2;
    goto L36;

  anon38_Then:
    assume {:partition} letter == 1;
    idChar := 82;
    goto L36;

  anon39_Then:
    assume {:partition} letter == 0;
    idChar := 81;
    goto L36;

  anon31_Then:
    assume {:partition} letter >= 3;
    goto L30;

  anon30_Then:
    assume {:partition} mul > 8;
    inlv := inlv + 1;
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    assume false;
    return;

  anon28_Then:
    assume {:partition} inlv > 8;
    goto L19;
}



procedure {:origName "cfiscsByteSize"} cfiscsByteSize(actual_pVol_5: int) returns (Tmp_92: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_92 == 0 || Tmp_92 == 26;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "cfiscsByteSize"} cfiscsByteSize(actual_pVol_5: int) returns (Tmp_92: int)
{
  var {:scalar} i_2: int;
  var {:pointer} sdv_37: int;
  var {:scalar} Tmp_98: int;
  var {:scalar} Tmp_99: int;
  var {:scalar} sdv_38: int;
  var {:pointer} flashPtr_1: int;
  var {:scalar} sdv_39: int;
  var {:scalar} sdv_40: int;
  var {:pointer} sdv_41: int;
  var {:pointer} sdv_42: int;
  var {:scalar} sdv_43: int;
  var {:scalar} sdv_44: int;
  var {:pointer} queryIdStr: int;
  var {:scalar} Tmp_103: int;
  var {:scalar} sdv_45: int;
  var {:pointer} pVol_5: int;
  var vslice_dummy_var_1202: int;
  var vslice_dummy_var_1203: int;
  var vslice_dummy_var_1204: int;

  anon0:
    pVol_5 := actual_pVol_5;
    call {:si_unique_call 63} queryIdStr := __HAVOC_malloc(16);
    queryIdStr := strConst__li2bpl4;
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    havoc vslice_dummy_var_1202;
    call {:si_unique_call 64} sdv_37 := flMap(vslice_dummy_var_1202, 0);
    flashPtr_1 := sdv_37;
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    goto L15;

  L15:
    call {:si_unique_call 65} i_2, Tmp_98, Tmp_99, sdv_38, flashPtr_1, sdv_39, sdv_40, sdv_42, sdv_43, sdv_44, sdv_45 := cfiscsByteSize_loop_L15(i_2, Tmp_98, Tmp_99, sdv_38, flashPtr_1, sdv_39, sdv_40, sdv_42, sdv_43, sdv_44, queryIdStr, sdv_45, pVol_5);
    goto L15_last;

  L15_last:
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    havoc Tmp_99;
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    havoc vslice_dummy_var_1203;
    call {:si_unique_call 66} sdv_42 := flMap(vslice_dummy_var_1203, Tmp_99);
    flashPtr_1 := sdv_42;
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 67} sdv_43 := corral_nondet();
    assume {:nonnull} queryIdStr != 0;
    assume queryIdStr > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 68} sdv_44 := corral_nondet();
    assume {:nonnull} queryIdStr != 0;
    assume queryIdStr > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 69} sdv_38 := corral_nondet();
    assume {:nonnull} queryIdStr != 0;
    assume queryIdStr > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L26;

  L26:
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_98 := 0;
    goto L45;

  L45:
    i_2 := Tmp_98;
    goto L46;

  L46:
    call {:si_unique_call 70} i_2, sdv_39, sdv_40, sdv_45 := cfiscsByteSize_loop_L46(i_2, flashPtr_1, sdv_39, sdv_40, queryIdStr, sdv_45, pVol_5);
    goto L46_last;

  L46_last:
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 71} sdv_45 := corral_nondet();
    assume {:nonnull} queryIdStr != 0;
    assume queryIdStr > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 72} sdv_40 := corral_nondet();
    assume {:nonnull} queryIdStr != 0;
    assume queryIdStr > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 73} sdv_39 := corral_nondet();
    assume {:nonnull} queryIdStr != 0;
    assume queryIdStr > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    i_2 := i_2 + 1;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    assume false;
    return;

  anon31_Then:
    goto L16;

  L16:
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    havoc vslice_dummy_var_1204;
    call {:si_unique_call 74} sdv_41 := flMap(vslice_dummy_var_1204, 0);
    flashPtr_1 := sdv_41;
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_103 := 0;
    goto L80;

  L80:
    Tmp_92 := Tmp_103;
    return;

  anon32_Then:
    Tmp_103 := 26;
    goto L80;

  anon30_Then:
    goto L16;

  anon29_Then:
    goto L16;

  anon28_Then:
    assume {:nonnull} pVol_5 != 0;
    assume pVol_5 > 0;
    goto anon28_Then_dummy;

  anon28_Then_dummy:
    assume false;
    return;

  anon24_Then:
    Tmp_98 := 1;
    goto L45;

  anon27_Then:
    goto L16;

  anon26_Then:
    goto L26;

  anon25_Then:
    goto L26;

  anon33_Then:
    goto L26;

  anon23_Then:
    goto L16;
}



procedure {:origName "cfiscsWordSize"} cfiscsWordSize(actual_pVol_6: int) returns (Tmp_106: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_106 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "cfiscsWordSize"} cfiscsWordSize(actual_pVol_6: int) returns (Tmp_106: int)
{
  var {:pointer} sdv_46: int;
  var {:scalar} sdv_47: int;
  var {:pointer} flashPtr_2: int;
  var {:scalar} sdv_48: int;
  var {:scalar} sdv_49: int;
  var {:pointer} sdv_50: int;
  var {:pointer} sdv_51: int;
  var {:scalar} sdv_52: int;
  var {:scalar} sdv_53: int;
  var {:pointer} queryIdStr_1: int;
  var {:scalar} sdv_54: int;
  var {:scalar} Tmp_116: int;
  var {:pointer} pVol_6: int;
  var vslice_dummy_var_1205: int;
  var vslice_dummy_var_1206: int;
  var vslice_dummy_var_1207: int;

  anon0:
    pVol_6 := actual_pVol_6;
    call {:si_unique_call 75} queryIdStr_1 := __HAVOC_malloc(16);
    queryIdStr_1 := strConst__li2bpl4;
    assume {:nonnull} pVol_6 != 0;
    assume pVol_6 > 0;
    havoc vslice_dummy_var_1205;
    call {:si_unique_call 76} sdv_46 := flMap(vslice_dummy_var_1205, 0);
    flashPtr_2 := sdv_46;
    assume {:nonnull} pVol_6 != 0;
    assume pVol_6 > 0;
    goto L18;

  L18:
    call {:si_unique_call 77} sdv_47, flashPtr_2, sdv_48, sdv_49, sdv_51, sdv_52, sdv_53, sdv_54, Tmp_116 := cfiscsWordSize_loop_L18(sdv_47, flashPtr_2, sdv_48, sdv_49, sdv_51, sdv_52, sdv_53, queryIdStr_1, sdv_54, Tmp_116, pVol_6);
    goto L18_last;

  L18_last:
    assume {:CounterLoop 1999} true;
    assume {:nonnull} pVol_6 != 0;
    assume pVol_6 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pVol_6 != 0;
    assume pVol_6 > 0;
    havoc Tmp_116;
    assume {:nonnull} pVol_6 != 0;
    assume pVol_6 > 0;
    havoc vslice_dummy_var_1206;
    call {:si_unique_call 78} sdv_51 := flMap(vslice_dummy_var_1206, Tmp_116);
    flashPtr_2 := sdv_51;
    call {:si_unique_call 79} sdv_53 := corral_nondet();
    assume {:nonnull} queryIdStr_1 != 0;
    assume queryIdStr_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 80} sdv_52 := corral_nondet();
    assume {:nonnull} queryIdStr_1 != 0;
    assume queryIdStr_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 81} sdv_47 := corral_nondet();
    assume {:nonnull} queryIdStr_1 != 0;
    assume queryIdStr_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L32;

  L32:
    call {:si_unique_call 82} sdv_54 := corral_nondet();
    assume {:nonnull} queryIdStr_1 != 0;
    assume queryIdStr_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 83} sdv_49 := corral_nondet();
    assume {:nonnull} queryIdStr_1 != 0;
    assume queryIdStr_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 84} sdv_48 := corral_nondet();
    assume {:nonnull} queryIdStr_1 != 0;
    assume queryIdStr_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} pVol_6 != 0;
    assume pVol_6 > 0;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    goto L19;

  L19:
    assume {:nonnull} pVol_6 != 0;
    assume pVol_6 > 0;
    havoc vslice_dummy_var_1207;
    call {:si_unique_call 85} sdv_50 := flMap(vslice_dummy_var_1207, 0);
    flashPtr_2 := sdv_50;
    Tmp_106 := 0;
    return;

  anon20_Then:
    goto L19;

  anon19_Then:
    goto L19;

  anon18_Then:
    goto L19;

  anon17_Then:
    goto L32;

  anon16_Then:
    goto L32;

  anon15_Then:
    goto L19;
}



procedure {:origName "getWordCFI"} getWordCFI(actual_pVol_7: int) returns (Tmp_117: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_117 == 26 || Tmp_117 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "getWordCFI"} getWordCFI(actual_pVol_7: int) returns (Tmp_117: int)
{
  var {:pointer} Tmp_121: int;
  var {:scalar} primaryTable: int;
  var {:scalar} sdv_58: int;
  var {:pointer} Tmp_122: int;
  var {:scalar} sdv_59: int;
  var {:pointer} sdv_61: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Tmp_131: int;
  var {:pointer} Tmp_132: int;
  var {:pointer} flashPtr_3: int;
  var {:scalar} sdv_64: int;
  var {:scalar} sdv_67: int;
  var {:scalar} sdv_69: int;
  var {:pointer} Tmp_138: int;
  var {:scalar} sdv_70: int;
  var {:scalar} sdv_71: int;
  var {:scalar} sdv_74: int;
  var {:pointer} queryIdStr_2: int;
  var {:pointer} priIdStr: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:pointer} Tmp_156: int;
  var {:pointer} pVol_7: int;
  var boogieTmp: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_1208: int;

  anon0:
    pVol_7 := actual_pVol_7;
    call {:si_unique_call 86} queryIdStr_2 := __HAVOC_malloc(16);
    call {:si_unique_call 87} priIdStr := __HAVOC_malloc(16);
    queryIdStr_2 := strConst__li2bpl4;
    priIdStr := strConst__li2bpl5;
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc vslice_dummy_var_1208;
    call {:si_unique_call 88} sdv_61 := flMap(vslice_dummy_var_1208, 0);
    flashPtr_3 := sdv_61;
    call {:si_unique_call 89} sdv_67 := corral_nondet();
    assume {:nonnull} queryIdStr_2 != 0;
    assume queryIdStr_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L24;

  L24:
    Tmp_117 := 26;
    goto L1;

  L1:
    return;

  anon27_Then:
    call {:si_unique_call 90} sdv_70 := corral_nondet();
    assume {:nonnull} queryIdStr_2 != 0;
    assume queryIdStr_2 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 91} sdv_71 := corral_nondet();
    assume {:nonnull} queryIdStr_2 != 0;
    assume queryIdStr_2 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 92} vslice_dummy_var_12 := corral_nondet();
    call {:si_unique_call 93} vslice_dummy_var_13 := corral_nondet();
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    call {:si_unique_call 94} boogieTmp := corral_nondet();
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_132 != 0;
    assume Tmp_132 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_156;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    Tmp_117 := 26;
    goto L1;

  anon34_Then:
    goto L44;

  L44:
    call {:si_unique_call 95} vslice_dummy_var_14 := corral_nondet();
    call {:si_unique_call 96} vslice_dummy_var_15 := corral_nondet();
    call {:si_unique_call 97} primaryTable := corral_nondet();
    call {:si_unique_call 98} vslice_dummy_var_16 := corral_nondet();
    call {:si_unique_call 99} vslice_dummy_var_17 := corral_nondet();
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_151;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    call {:si_unique_call 100} boogieTmp := corral_nondet();
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_154;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_148;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    Tmp_117 := 26;
    goto L1;

  anon37_Then:
    goto L65;

  L65:
    call {:si_unique_call 101} vslice_dummy_var_18 := corral_nondet();
    call {:si_unique_call 102} vslice_dummy_var_19 := corral_nondet();
    call {:si_unique_call 103} vslice_dummy_var_11 := corral_nondet();
    call {:si_unique_call 104} sdv_58 := corral_nondet();
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_122;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    call {:si_unique_call 105} vslice_dummy_var_20 := corral_nondet();
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    call {:si_unique_call 106} boogieTmp := corral_nondet();
    call {:si_unique_call 107} vslice_dummy_var_21 := corral_nondet();
    call {:si_unique_call 108} vslice_dummy_var_22 := corral_nondet();
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    call {:si_unique_call 109} boogieTmp := corral_nondet();
    call {:si_unique_call 110} vslice_dummy_var_23 := corral_nondet();
    call {:si_unique_call 111} vslice_dummy_var_24 := corral_nondet();
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    call {:si_unique_call 112} boogieTmp := corral_nondet();
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} primaryTable != 0;
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_127;
    assume {:nonnull} Tmp_127 != 0;
    assume Tmp_127 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    call {:si_unique_call 113} sdv_69 := corral_nondet();
    assume {:nonnull} priIdStr != 0;
    assume priIdStr > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L114;

  L114:
    Tmp_117 := 26;
    goto L1;

  anon30_Then:
    call {:si_unique_call 114} sdv_64 := corral_nondet();
    assume {:nonnull} priIdStr != 0;
    assume priIdStr > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 115} sdv_59 := corral_nondet();
    assume {:nonnull} priIdStr != 0;
    assume priIdStr > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 116} vslice_dummy_var_25 := corral_nondet();
    call {:si_unique_call 117} vslice_dummy_var_26 := corral_nondet();
    call {:si_unique_call 118} vslice_dummy_var_27 := corral_nondet();
    call {:si_unique_call 119} vslice_dummy_var_28 := corral_nondet();
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_155;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    call {:si_unique_call 120} boogieTmp := corral_nondet();
    call {:si_unique_call 121} sdv_74 := corral_nondet();
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_138;
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    goto L146;

  L146:
    Tmp_117 := 0;
    goto L1;

  anon32_Then:
    goto L114;

  anon31_Then:
    goto L114;

  anon39_Then:
    goto L106;

  L106:
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    assume {:nonnull} pVol_7 != 0;
    assume pVol_7 > 0;
    havoc Tmp_131;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    goto L146;

  anon38_Then:
    assume {:partition} primaryTable == 0;
    goto L106;

  anon36_Then:
    goto L65;

  anon35_Then:
    goto L65;

  anon33_Then:
    goto L44;

  anon29_Then:
    goto L24;

  anon28_Then:
    goto L24;
}



procedure {:origName "getByteCFI"} getByteCFI(actual_pVol_8: int) returns (Tmp_159: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_159 == 26 || Tmp_159 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "getByteCFI"} getByteCFI(actual_pVol_8: int) returns (Tmp_159: int)
{
  var {:pointer} Tmp_161: int;
  var {:pointer} Tmp_164: int;
  var {:scalar} primaryTable_1: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} Tmp_169: int;
  var {:scalar} sdv_84: int;
  var {:pointer} Tmp_173: int;
  var {:scalar} sdv_85: int;
  var {:pointer} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:pointer} sdv_87: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_188: int;
  var {:pointer} flashPtr_4: int;
  var {:scalar} sdv_90: int;
  var {:pointer} Tmp_189: int;
  var {:scalar} sdv_93: int;
  var {:pointer} Tmp_191: int;
  var {:scalar} sdv_95: int;
  var {:scalar} sdv_96: int;
  var {:scalar} sdv_98: int;
  var {:scalar} sdv_100: int;
  var {:pointer} queryIdStr_3: int;
  var {:pointer} Tmp_195: int;
  var {:pointer} priIdStr_1: int;
  var {:pointer} Tmp_198: int;
  var {:pointer} Tmp_203: int;
  var {:pointer} pVol_8: int;
  var boogieTmp: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_1209: int;

  anon0:
    pVol_8 := actual_pVol_8;
    call {:si_unique_call 122} queryIdStr_3 := __HAVOC_malloc(16);
    call {:si_unique_call 123} priIdStr_1 := __HAVOC_malloc(16);
    queryIdStr_3 := strConst__li2bpl4;
    priIdStr_1 := strConst__li2bpl5;
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc vslice_dummy_var_1209;
    call {:si_unique_call 124} sdv_87 := flMap(vslice_dummy_var_1209, 0);
    flashPtr_4 := sdv_87;
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_169;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    call {:si_unique_call 125} sdv_93 := corral_nondet();
    assume {:nonnull} queryIdStr_3 != 0;
    assume queryIdStr_3 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L25;

  L25:
    Tmp_159 := 26;
    goto L1;

  L1:
    return;

  anon27_Then:
    call {:si_unique_call 126} sdv_96 := corral_nondet();
    assume {:nonnull} queryIdStr_3 != 0;
    assume queryIdStr_3 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 127} sdv_98 := corral_nondet();
    assume {:nonnull} queryIdStr_3 != 0;
    assume queryIdStr_3 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 128} vslice_dummy_var_30 := corral_nondet();
    call {:si_unique_call 129} vslice_dummy_var_31 := corral_nondet();
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_195;
    assume {:nonnull} Tmp_195 != 0;
    assume Tmp_195 > 0;
    call {:si_unique_call 130} boogieTmp := corral_nondet();
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_173;
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_176;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    Tmp_159 := 26;
    goto L1;

  anon34_Then:
    goto L45;

  L45:
    call {:si_unique_call 131} vslice_dummy_var_32 := corral_nondet();
    call {:si_unique_call 132} vslice_dummy_var_33 := corral_nondet();
    call {:si_unique_call 133} primaryTable_1 := corral_nondet();
    call {:si_unique_call 134} vslice_dummy_var_34 := corral_nondet();
    call {:si_unique_call 135} vslice_dummy_var_35 := corral_nondet();
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_161;
    assume {:nonnull} Tmp_161 != 0;
    assume Tmp_161 > 0;
    call {:si_unique_call 136} boogieTmp := corral_nondet();
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_184;
    assume {:nonnull} Tmp_184 != 0;
    assume Tmp_184 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_167;
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_175;
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    Tmp_159 := 26;
    goto L1;

  anon37_Then:
    goto L66;

  L66:
    call {:si_unique_call 137} vslice_dummy_var_36 := corral_nondet();
    call {:si_unique_call 138} vslice_dummy_var_37 := corral_nondet();
    call {:si_unique_call 139} vslice_dummy_var_29 := corral_nondet();
    call {:si_unique_call 140} sdv_84 := corral_nondet();
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_164;
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    call {:si_unique_call 141} vslice_dummy_var_38 := corral_nondet();
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    call {:si_unique_call 142} boogieTmp := corral_nondet();
    call {:si_unique_call 143} vslice_dummy_var_39 := corral_nondet();
    call {:si_unique_call 144} vslice_dummy_var_40 := corral_nondet();
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_179;
    assume {:nonnull} Tmp_179 != 0;
    assume Tmp_179 > 0;
    call {:si_unique_call 145} boogieTmp := corral_nondet();
    call {:si_unique_call 146} vslice_dummy_var_41 := corral_nondet();
    call {:si_unique_call 147} vslice_dummy_var_42 := corral_nondet();
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    call {:si_unique_call 148} boogieTmp := corral_nondet();
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} primaryTable_1 != 0;
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_191;
    assume {:nonnull} Tmp_191 != 0;
    assume Tmp_191 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    call {:si_unique_call 149} sdv_95 := corral_nondet();
    assume {:nonnull} priIdStr_1 != 0;
    assume priIdStr_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L115;

  L115:
    Tmp_159 := 26;
    goto L1;

  anon30_Then:
    call {:si_unique_call 150} sdv_90 := corral_nondet();
    assume {:nonnull} priIdStr_1 != 0;
    assume priIdStr_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 151} sdv_85 := corral_nondet();
    assume {:nonnull} priIdStr_1 != 0;
    assume priIdStr_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 152} vslice_dummy_var_43 := corral_nondet();
    call {:si_unique_call 153} vslice_dummy_var_44 := corral_nondet();
    call {:si_unique_call 154} vslice_dummy_var_45 := corral_nondet();
    call {:si_unique_call 155} vslice_dummy_var_46 := corral_nondet();
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_189;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    call {:si_unique_call 156} boogieTmp := corral_nondet();
    call {:si_unique_call 157} sdv_100 := corral_nondet();
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_198;
    assume {:nonnull} Tmp_198 != 0;
    assume Tmp_198 > 0;
    goto L147;

  L147:
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_180;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    Tmp_159 := 0;
    goto L1;

  anon32_Then:
    goto L115;

  anon31_Then:
    goto L115;

  anon39_Then:
    goto L107;

  L107:
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_203;
    assume {:nonnull} Tmp_203 != 0;
    assume Tmp_203 > 0;
    assume {:nonnull} pVol_8 != 0;
    assume pVol_8 > 0;
    havoc Tmp_188;
    assume {:nonnull} Tmp_188 != 0;
    assume Tmp_188 > 0;
    goto L147;

  anon38_Then:
    assume {:partition} primaryTable_1 == 0;
    goto L107;

  anon36_Then:
    goto L66;

  anon35_Then:
    goto L66;

  anon33_Then:
    goto L45;

  anon29_Then:
    goto L25;

  anon28_Then:
    goto L25;
}



procedure {:origName "flRegisterCFISCS"} flRegisterCFISCS() returns (Tmp_204: int);
  free ensures {:va_keep} Tmp_204 == 102 || Tmp_204 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterCFISCS"} flRegisterCFISCS() returns (Tmp_204: int)
{
  var {:scalar} Tmp_205: int;
  var {:scalar} Tmp_206: int;

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_204 := 102;
    goto L1;

  L1:
    return;

  anon11_Then:
    havoc Tmp_206;
    Tmp_205 := Tmp_206;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume Tmp_205 <= 2;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume Tmp_205 != 2;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume Tmp_205 != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume Tmp_205 != 0;
    goto L8;

  L8:
    Tmp_204 := 0;
    goto L1;

  anon15_Then:
    assume Tmp_205 == 0;
    Tmp_205 := 0;
    goto L8;

  anon14_Then:
    assume Tmp_205 == 1;
    Tmp_205 := 1;
    goto L8;

  anon13_Then:
    assume Tmp_205 == 2;
    Tmp_205 := 2;
    goto L8;

  anon12_Then:
    assume Tmp_205 > 2;
    goto L8;
}



procedure {:origName "cfiscsIdentify"} cfiscsIdentify(actual_pVol_9: int) returns (Tmp_208: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_208 == 26 || Tmp_208 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "cfiscsIdentify"} cfiscsIdentify(actual_pVol_9: int) returns (Tmp_208: int)
{
  var {:scalar} fl_11: int;
  var {:scalar} Tmp_210: int;
  var {:scalar} sdv_108: int;
  var {:scalar} fl_12: int;
  var {:scalar} Tmp_211: int;
  var {:pointer} flashPtr_5: int;
  var {:pointer} sdv_112: int;
  var {:scalar} sdv_114: int;
  var {:scalar} sdv_115: int;
  var {:scalar} sdv_116: int;
  var {:pointer} Tmp_215: int;
  var {:pointer} Tmp_216: int;
  var {:scalar} fl_13: int;
  var {:pointer} queryIdStr_4: int;
  var {:scalar} fl_14: int;
  var {:pointer} Tmp_219: int;
  var {:pointer} pVol_9: int;
  var boogieTmp: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_1210: int;
  var vslice_dummy_var_1211: int;
  var vslice_dummy_var_1212: int;
  var vslice_dummy_var_1213: int;
  var vslice_dummy_var_1214: int;

  anon0:
    pVol_9 := actual_pVol_9;
    call {:si_unique_call 158} queryIdStr_4 := __HAVOC_malloc(16);
    queryIdStr_4 := strConst__li2bpl4;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    havoc vslice_dummy_var_1210;
    call {:si_unique_call 159} flSetWindowBusWidth(vslice_dummy_var_1210, 16);
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    havoc vslice_dummy_var_1211;
    call {:si_unique_call 160} flSetWindowSpeed(vslice_dummy_var_1211, 150);
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    havoc vslice_dummy_var_1212;
    call {:si_unique_call 161} flSetWindowSize(vslice_dummy_var_1212, 2);
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    havoc vslice_dummy_var_1213;
    call {:si_unique_call 162} sdv_108 := flSocketNoOf(vslice_dummy_var_1213);
    Tmp_210 := sdv_108;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    havoc vslice_dummy_var_1214;
    call {:si_unique_call 163} sdv_112 := flMap(vslice_dummy_var_1214, 0);
    flashPtr_5 := sdv_112;
    call {:si_unique_call 164} sdv_114 := corral_nondet();
    assume {:nonnull} queryIdStr_4 != 0;
    assume queryIdStr_4 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L78;

  L78:
    call {:si_unique_call 165} fl_14 := cfiscsByteIdentify(pVol_9);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} fl_14 != 0;
    Tmp_208 := fl_14;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} fl_14 == 0;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    havoc Tmp_215;
    assume {:nonnull} Tmp_215 != 0;
    assume Tmp_215 > 0;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    call {:si_unique_call 166} fl_11 := getByteCFI(pVol_9);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} fl_11 != 0;
    Tmp_208 := fl_11;
    goto L1;

  anon22_Then:
    assume {:partition} fl_11 == 0;
    goto L63;

  L63:
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    havoc Tmp_219;
    assume {:nonnull} Tmp_219 != 0;
    assume Tmp_219 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 167} Tmp_211 := cfiscsWordSize(pVol_9);
    goto L71;

  L71:
    fl_12 := Tmp_211;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} fl_12 != 0;
    Tmp_208 := fl_12;
    goto L1;

  anon24_Then:
    assume {:partition} fl_12 == 0;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    Tmp_208 := 0;
    goto L1;

  anon23_Then:
    call {:si_unique_call 168} Tmp_211 := cfiscsByteSize(pVol_9);
    goto L71;

  anon17_Then:
    call {:si_unique_call 169} sdv_116 := corral_nondet();
    assume {:nonnull} queryIdStr_4 != 0;
    assume queryIdStr_4 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L78;

  anon18_Then:
    call {:si_unique_call 170} sdv_115 := corral_nondet();
    assume {:nonnull} queryIdStr_4 != 0;
    assume queryIdStr_4 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L78;

  anon19_Then:
    call {:si_unique_call 171} vslice_dummy_var_47 := corral_nondet();
    call {:si_unique_call 172} vslice_dummy_var_48 := corral_nondet();
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    call {:si_unique_call 173} boogieTmp := corral_nondet();
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    havoc Tmp_216;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    assume {:nonnull} pVol_9 != 0;
    assume pVol_9 > 0;
    call {:si_unique_call 174} fl_13 := getWordCFI(pVol_9);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} fl_13 == 0;
    goto L63;

  anon20_Then:
    assume {:partition} fl_13 != 0;
    Tmp_208 := fl_13;
    goto L1;
}



procedure {:origName "chkASICDownload_sdv_static_function_8"} chkASICDownload_sdv_static_function_8(actual_flash: int, actual_floorNo: int) returns (Tmp_238: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_238 == 0 || Tmp_238 == 115 || Tmp_238 == 111;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "chkASICDownload_sdv_static_function_8"} chkASICDownload_sdv_static_function_8(actual_flash: int, actual_floorNo: int) returns (Tmp_238: int)
{
  var {:scalar} sdv_147: int;
  var {:scalar} status_1: int;
  var {:pointer} flash: int;

  anon0:
    flash := actual_flash;
    call {:si_unique_call 175} status_1 := setASICmode_sdv_static_function_8(flash, 1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_1 != 0;
    Tmp_238 := status_1;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} status_1 == 0;
    assume {:nonnull} flash != 0;
    assume flash > 0;
    assume {:nonnull} flash != 0;
    assume flash > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} BAND(sdv_147, 74) != 0;
    Tmp_238 := 111;
    goto L1;

  anon6_Then:
    assume {:partition} BAND(sdv_147, 74) == 0;
    Tmp_238 := 0;
    goto L1;
}



procedure {:origName "flRegisterDOCPLUS"} flRegisterDOCPLUS() returns (Tmp_240: int);
  free ensures {:va_keep} Tmp_240 == 102 || Tmp_240 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterDOCPLUS"} flRegisterDOCPLUS() returns (Tmp_240: int)
{
  var {:scalar} Tmp_242: int;
  var {:scalar} Tmp_243: int;

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_240 := 102;
    goto L1;

  L1:
    return;

  anon11_Then:
    havoc Tmp_243;
    Tmp_242 := Tmp_243;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume Tmp_242 <= 2;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume Tmp_242 != 2;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume Tmp_242 != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume Tmp_242 != 0;
    goto L8;

  L8:
    Tmp_240 := 0;
    goto L1;

  anon15_Then:
    assume Tmp_242 == 0;
    Tmp_242 := 0;
    goto L8;

  anon14_Then:
    assume Tmp_242 == 1;
    Tmp_242 := 1;
    goto L8;

  anon13_Then:
    assume Tmp_242 == 2;
    Tmp_242 := 2;
    goto L8;

  anon12_Then:
    assume Tmp_242 > 2;
    goto L8;
}



procedure {:origName "changeInterleave"} changeInterleave(actual_flash_1: int, actual_interNum: int) returns (Tmp_244: int);
  free ensures {:va_keep} Tmp_244 == 0 || Tmp_244 == 113 || Tmp_244 == 31;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "changeInterleave"} changeInterleave(actual_flash_1: int, actual_interNum: int) returns (Tmp_244: int)
{
  var {:pointer} Tmp_245: int;
  var {:pointer} Tmp_248: int;
  var {:scalar} sdv_148: int;
  var {:scalar} prevInterleaveReg: int;
  var {:pointer} Tmp_251: int;
  var {:scalar} sdv_149: int;
  var {:scalar} Tmp_252: int;
  var {:scalar} Tmp_253: int;
  var {:pointer} Tmp_254: int;
  var {:scalar} sdv_151: int;
  var {:scalar} sdv_152: int;
  var {:pointer} Tmp_255: int;
  var {:scalar} Tmp_256: int;
  var {:pointer} Tmp_257: int;
  var {:scalar} Tmp_258: int;
  var {:pointer} flash_1: int;
  var {:scalar} interNum: int;
  var boogieTmp: int;
  var vslice_dummy_var_1215: int;

  anon0:
    flash_1 := actual_flash_1;
    interNum := actual_interNum;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    havoc Tmp_257;
    assume {:nonnull} Tmp_257 != 0;
    assume Tmp_257 > 0;
    havoc Tmp_253;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    havoc vslice_dummy_var_1215;
    call {:si_unique_call 176} sdv_148 := flSocketNoOf(vslice_dummy_var_1215);
    Tmp_258 := sdv_148;
    havoc Tmp_252;
    call {:si_unique_call 177} sdv_149 := setDOCPlusBusType_sdv_static_function_8(flash_1, Tmp_252, interNum, Tmp_253);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_149 != 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    Tmp_244 := 0;
    goto L1;

  L1:
    return;

  anon20_Then:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} interNum == 1;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(sdv_151, 4) != 0;
    Tmp_244 := 113;
    goto L1;

  anon18_Then:
    assume {:partition} BAND(sdv_151, 4) == 0;
    goto L33;

  L33:
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    havoc Tmp_254;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    call {:si_unique_call 178} boogieTmp := corral_nondet();
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    call {:si_unique_call 179} boogieTmp := corral_nondet();
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    havoc Tmp_255;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    call {:si_unique_call 180} boogieTmp := corral_nondet();
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    havoc Tmp_248;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    havoc Tmp_251;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    havoc Tmp_245;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    goto L43;

  L43:
    call {:si_unique_call 181} changeInterleave_loop_L43(flash_1);
    goto L43_last;

  L43_last:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    goto anon19_Else_dummy;

  anon19_Else_dummy:
    assume false;
    return;

  anon19_Then:
    Tmp_244 := 0;
    goto L1;

  anon17_Then:
    assume {:partition} interNum != 1;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    assume {:nonnull} flash_1 != 0;
    assume flash_1 > 0;
    Tmp_256 := BAND(sdv_152, 4);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Tmp_256 != 4;
    Tmp_244 := 113;
    goto L1;

  anon21_Then:
    assume {:partition} Tmp_256 == 4;
    goto L33;

  anon16_Then:
    interNum := 1;
    goto L33;

  anon15_Then:
    assume {:partition} sdv_149 == 0;
    Tmp_244 := 31;
    goto L1;
}



procedure {:origName "command_sdv_static_function_8"} command_sdv_static_function_8(actual_flash_2: int, actual_flCode: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "command_sdv_static_function_8"} command_sdv_static_function_8(actual_flash_2: int, actual_flCode: int)
{
  var {:pointer} flash_2: int;
  var vslice_dummy_var_49: int;

  anon0:
    call {:si_unique_call 182} vslice_dummy_var_49 := __HAVOC_malloc(4);
    flash_2 := actual_flash_2;
    assume {:nonnull} flash_2 != 0;
    assume flash_2 > 0;
    assume {:nonnull} flash_2 != 0;
    assume flash_2 > 0;
    assume {:nonnull} flash_2 != 0;
    assume flash_2 > 0;
    return;
}



procedure {:origName "setDOCPlusBusType_sdv_static_function_8"} setDOCPlusBusType_sdv_static_function_8(actual_flash_3: int, actual_busConfig: int, actual_interleave: int, actual_if_1: int) returns (Tmp_261: int);
  free ensures {:va_keep} Tmp_261 == 0 || Tmp_261 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "setDOCPlusBusType_sdv_static_function_8"} setDOCPlusBusType_sdv_static_function_8(actual_flash_3: int, actual_busConfig: int, actual_interleave: int, actual_if_1: int) returns (Tmp_261: int)
{
  var {:scalar} sdv_153: int;
  var {:pointer} flash_3: int;
  var {:scalar} busConfig: int;
  var {:scalar} interleave: int;
  var {:scalar} if_1: int;

  anon0:
    flash_3 := actual_flash_3;
    busConfig := actual_busConfig;
    interleave := actual_interleave;
    if_1 := actual_if_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} interleave != 1;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} interleave == 2;
    busConfig := BOR(busConfig, 2048);
    goto L8;

  L8:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} if_1 != 8;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} if_1 == 16;
    busConfig := BOR(busConfig, 256);
    goto L13;

  L13:
    call {:si_unique_call 183} sdv_153 := setBusTypeOfFlash(flash_3, busConfig);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_153 != 0;
    Tmp_261 := 0;
    goto L1;

  L1:
    return;

  anon13_Then:
    assume {:partition} sdv_153 == 0;
    Tmp_261 := 1;
    goto L1;

  anon15_Then:
    assume {:partition} if_1 != 16;
    Tmp_261 := 0;
    goto L1;

  anon12_Then:
    assume {:partition} if_1 == 8;
    busConfig := BOR(busConfig, 0);
    goto L13;

  anon14_Then:
    assume {:partition} interleave != 2;
    Tmp_261 := 0;
    goto L1;

  anon11_Then:
    assume {:partition} interleave == 1;
    busConfig := BOR(busConfig, 1024);
    goto L8;
}



procedure {:origName "chooseDefaultIF_CFG_sdv_static_function_8"} chooseDefaultIF_CFG_sdv_static_function_8(actual_busConfig_1: int) returns (Tmp_263: int);
  free ensures {:va_keep} Tmp_263 == 8 || Tmp_263 == 16;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "chooseDefaultIF_CFG_sdv_static_function_8"} chooseDefaultIF_CFG_sdv_static_function_8(actual_busConfig_1: int) returns (Tmp_263: int)
{
  var {:scalar} busConfig_1: int;

  anon0:
    busConfig_1 := actual_busConfig_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} BAND(busConfig_1, 1) != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} BAND(busConfig_1, 240) == 0;
    Tmp_263 := 8;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} BAND(busConfig_1, 240) != 0;
    goto L4;

  L4:
    Tmp_263 := 16;
    goto L1;

  anon5_Then:
    assume {:partition} BAND(busConfig_1, 1) == 0;
    goto L4;
}



procedure {:origName "releasePowerDown"} releasePowerDown(actual_flash_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "releasePowerDown"} releasePowerDown(actual_flash_4: int)
{
  var {:scalar} i_3: int;
  var {:scalar} sdv_154: int;
  var {:scalar} junk: int;
  var {:pointer} flash_4: int;
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 184} vslice_dummy_var_50 := __HAVOC_malloc(4);
    flash_4 := actual_flash_4;
    junk := 0;
    i_3 := 0;
    goto L7;

  L7:
    call {:si_unique_call 185} i_3, junk := releasePowerDown_loop_L7(i_3, sdv_154, junk, flash_4);
    goto L7_last;

  L7_last:
    assume {:CounterLoop 4} {:Counter "i_3"} true;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} 4 > i_3;
    assume {:nonnull} flash_4 != 0;
    assume flash_4 > 0;
    junk := junk + sdv_154;
    i_3 := i_3 + 1;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} i_3 >= 4;
    return;
}



procedure {:origName "checkToggle_sdv_static_function_8"} checkToggle_sdv_static_function_8(actual_flash_5: int) returns (Tmp_267: int);
  free ensures {:va_keep} Tmp_267 == 1 || Tmp_267 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "checkToggle_sdv_static_function_8"} checkToggle_sdv_static_function_8(actual_flash_5: int) returns (Tmp_267: int)
{
  var {:scalar} toggle2: int;
  var {:pointer} flash_5: int;

  anon0:
    flash_5 := actual_flash_5;
    assume {:nonnull} flash_5 != 0;
    assume flash_5 > 0;
    assume {:nonnull} flash_5 != 0;
    assume flash_5 > 0;
    call {:si_unique_call 186} toggle2 := corral_nondet();
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} BAND(toggle2, 4) != 0;
    Tmp_267 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} BAND(toggle2, 4) == 0;
    Tmp_267 := 0;
    goto L1;
}



procedure {:origName "recoverFromAccessError_sdv_static_function_8"} recoverFromAccessError_sdv_static_function_8(actual_flash_6: int) returns (Tmp_269: int);
  free ensures {:va_keep} Tmp_269 == 115 || Tmp_269 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "recoverFromAccessError_sdv_static_function_8"} recoverFromAccessError_sdv_static_function_8(actual_flash_6: int) returns (Tmp_269: int)
{
  var {:scalar} i_4: int;
  var {:scalar} sdv_157: int;
  var {:scalar} Tmp_270: int;
  var {:scalar} sdv_158: int;
  var {:pointer} flash_6: int;

  anon0:
    flash_6 := actual_flash_6;
    i_4 := 0;
    assume {:nonnull} flash_6 != 0;
    assume flash_6 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(sdv_157, 128) != 0;
    Tmp_270 := 1;
    goto L11;

  L11:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Tmp_270 != 0;
    assume {:nonnull} flash_6 != 0;
    assume flash_6 > 0;
    i_4 := 0;
    goto L17;

  L17:
    call {:si_unique_call 187} i_4 := recoverFromAccessError_sdv_static_function_8_loop_L17(i_4, flash_6);
    goto L17_last;

  L17_last:
    assume {:CounterLoop 2} {:Counter "i_4"} true;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} 2 > i_4;
    assume {:nonnull} flash_6 != 0;
    assume flash_6 > 0;
    i_4 := i_4 + 1;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} i_4 >= 2;
    assume {:nonnull} flash_6 != 0;
    assume flash_6 > 0;
    assume {:nonnull} flash_6 != 0;
    assume flash_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(sdv_158, 128) != 0;
    Tmp_269 := 115;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} BAND(sdv_158, 128) == 0;
    Tmp_269 := 0;
    goto L1;

  anon10_Then:
    assume {:partition} Tmp_270 == 0;
    Tmp_269 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} BAND(sdv_157, 128) == 0;
    Tmp_270 := 0;
    goto L11;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_51: int;

  anon0:
    call {:si_unique_call 188} vslice_dummy_var_51 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "docPlusIdentify"} docPlusIdentify(actual_flash_7: int) returns (Tmp_274: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_274 == 0 || Tmp_274 == 115 || Tmp_274 == 26 || Tmp_274 == 111;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "docPlusIdentify"} docPlusIdentify(actual_flash_7: int) returns (Tmp_274: int)
{
  var {:pointer} Tmp_276: int;
  var {:scalar} Tmp_277: int;
  var {:pointer} Tmp_278: int;
  var {:pointer} Tmp_279: int;
  var {:scalar} sdv_159: int;
  var {:scalar} sdv_160: int;
  var {:pointer} Tmp_281: int;
  var {:pointer} Tmp_282: int;
  var {:scalar} sdv_161: int;
  var {:pointer} Tmp_283: int;
  var {:scalar} Tmp_284: int;
  var {:scalar} sdv_162: int;
  var {:pointer} Tmp_285: int;
  var {:scalar} Tmp_286: int;
  var {:pointer} Tmp_287: int;
  var {:pointer} Tmp_288: int;
  var {:scalar} Tmp_289: int;
  var {:pointer} Tmp_290: int;
  var {:scalar} Tmp_291: int;
  var {:scalar} sdv_163: int;
  var {:scalar} Tmp_292: int;
  var {:pointer} Tmp_293: int;
  var {:scalar} sdv_164: int;
  var {:scalar} Tmp_294: int;
  var {:pointer} Tmp_295: int;
  var {:scalar} Tmp_296: int;
  var {:pointer} Tmp_297: int;
  var {:pointer} Tmp_298: int;
  var {:scalar} sdv_165: int;
  var {:scalar} socketNo: int;
  var {:scalar} sdv_166: int;
  var {:scalar} Tmp_299: int;
  var {:pointer} sdv_167: int;
  var {:scalar} sdv_168: int;
  var {:scalar} Tmp_300: int;
  var {:pointer} sdv_169: int;
  var {:pointer} Tmp_301: int;
  var {:pointer} Tmp_302: int;
  var {:pointer} sdv_170: int;
  var {:scalar} sdv_171: int;
  var {:pointer} Tmp_303: int;
  var {:scalar} Tmp_304: int;
  var {:pointer} Tmp_305: int;
  var {:scalar} sdv_173: int;
  var {:scalar} Tmp_306: int;
  var {:pointer} Tmp_307: int;
  var {:scalar} Tmp_308: int;
  var {:scalar} dev: int;
  var {:scalar} floor: int;
  var {:pointer} Tmp_309: int;
  var {:scalar} sdv_175: int;
  var {:scalar} status_2: int;
  var {:scalar} Tmp_310: int;
  var {:scalar} Tmp_311: int;
  var {:pointer} Tmp_312: int;
  var {:scalar} Tmp_313: int;
  var {:scalar} maxDevs: int;
  var {:scalar} Tmp_314: int;
  var {:scalar} sdv_176: int;
  var {:pointer} Tmp_316: int;
  var {:pointer} flash_7: int;
  var boogieTmp: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_1216: int;
  var vslice_dummy_var_1217: int;
  var vslice_dummy_var_1218: int;
  var vslice_dummy_var_1219: int;

  anon0:
    flash_7 := actual_flash_7;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc vslice_dummy_var_1216;
    call {:si_unique_call 189} sdv_162 := flSocketNoOf(vslice_dummy_var_1216);
    socketNo := sdv_162;
    Tmp_292 := socketNo;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    Tmp_306 := socketNo;
    call {:si_unique_call 190} sdv_167 := flReadBackBufferOf(Tmp_306);
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_298;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    Tmp_308 := socketNo;
    call {:si_unique_call 191} sdv_169 := flBufferOf(Tmp_308);
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_279;
    assume {:nonnull} Tmp_279 != 0;
    assume Tmp_279 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc vslice_dummy_var_1217;
    call {:si_unique_call 192} flSetWindowBusWidth(vslice_dummy_var_1217, 16);
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc vslice_dummy_var_1218;
    call {:si_unique_call 193} flSetWindowSpeed(vslice_dummy_var_1218, 120);
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc vslice_dummy_var_1219;
    call {:si_unique_call 194} sdv_170 := flMap(vslice_dummy_var_1219, 0);
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_276;
    assume {:nonnull} Tmp_276 != 0;
    assume Tmp_276 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_281;
    assume {:nonnull} Tmp_281 != 0;
    assume Tmp_281 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_293;
    assume {:nonnull} Tmp_293 != 0;
    assume Tmp_293 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    Tmp_310 := socketNo;
    havoc Tmp_296;
    call {:si_unique_call 195} sdv_171 := chooseDefaultIF_CFG_sdv_static_function_8(Tmp_296);
    Tmp_289 := socketNo;
    havoc Tmp_294;
    call {:si_unique_call 196} sdv_164 := setDOCPlusBusType_sdv_static_function_8(flash_7, Tmp_294, 1, sdv_171);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_164 != 0;
    call {:si_unique_call 197} status_2 := setASICmode_sdv_static_function_8(flash_7, 1);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_2 != 0;
    Tmp_274 := status_2;
    goto L1;

  L1:
    return;

  anon40_Then:
    assume {:partition} status_2 == 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} BAND(sdv_166, 128) != 0;
    Tmp_286 := 16;
    goto L58;

  L58:
    Tmp_299 := Tmp_286;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    Tmp_304 := BAND(sdv_165, 4);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Tmp_304 == 4;
    Tmp_291 := 2;
    goto L66;

  L66:
    Tmp_313 := Tmp_291;
    Tmp_311 := socketNo;
    havoc Tmp_300;
    call {:si_unique_call 198} sdv_176 := setDOCPlusBusType_sdv_static_function_8(flash_7, Tmp_300, Tmp_313, Tmp_299);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_176 != 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    dev := sdv_168;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} dev != 64;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} dev == 65;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_288;
    assume {:nonnull} Tmp_288 != 0;
    assume Tmp_288 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    goto L86;

  L86:
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_303;
    assume {:nonnull} Tmp_303 != 0;
    assume Tmp_303 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    call {:si_unique_call 199} sdv_159 := checkToggle_sdv_static_function_8(flash_7);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_159 != 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    Tmp_314 := BAND(sdv_161, 4);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Tmp_314 == 4;
    Tmp_284 := 2;
    goto L105;

  L105:
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    maxDevs := 1;
    floor := 0;
    goto L108;

  L108:
    call {:si_unique_call 200} dev, floor := docPlusIdentify_loop_L108(dev, floor, maxDevs, flash_7);
    goto L108_last;

  L108_last:
    assume {:CounterLoop 4} {:Counter "floor"} true;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} 4 > floor;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    dev := 0;
    goto L114;

  L114:
    call {:si_unique_call 201} dev := docPlusIdentify_loop_L114(dev, maxDevs, flash_7);
    goto L114_last;

  L114_last:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} maxDevs > dev;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    call {:si_unique_call 202} command_sdv_static_function_8(flash_7, 255);
    dev := dev + 1;
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    assume false;
    return;

  anon45_Then:
    assume {:partition} dev >= maxDevs;
    floor := floor + 1;
    goto anon45_Then_dummy;

  anon45_Then_dummy:
    assume false;
    return;

  anon44_Then:
    assume {:partition} floor >= 4;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_305;
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_316;
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_295;
    assume {:nonnull} Tmp_295 != 0;
    assume Tmp_295 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_307;
    assume {:nonnull} Tmp_307 != 0;
    assume Tmp_307 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_278;
    assume {:nonnull} Tmp_278 != 0;
    assume Tmp_278 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    call {:si_unique_call 203} boogieTmp := corral_nondet();
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_302;
    assume {:nonnull} Tmp_302 != 0;
    assume Tmp_302 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_301;
    assume {:nonnull} Tmp_301 != 0;
    assume Tmp_301 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_312;
    assume {:nonnull} Tmp_312 != 0;
    assume Tmp_312 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_290;
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    call {:si_unique_call 204} vslice_dummy_var_52 := changeInterleave(flash_7, 2);
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    floor := 0;
    goto L138;

  L138:
    call {:si_unique_call 205} sdv_160, dev, floor, sdv_175 := docPlusIdentify_loop_L138(sdv_160, sdv_173, dev, floor, sdv_175, flash_7);
    goto L138_last;

  L138_last:
    assume {:CounterLoop 4} {:Counter "floor"} true;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} 4 > floor;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    dev := sdv_173;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} dev != 64;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} dev == 65;
    goto L148;

  L148:
    call {:si_unique_call 206} sdv_175 := checkToggle_sdv_static_function_8(flash_7);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_175 != 0;
    call {:si_unique_call 207} sdv_160 := chkASICDownload_sdv_static_function_8(flash_7, floor);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_160 != 0;
    Tmp_274 := 111;
    goto L1;

  anon49_Then:
    assume {:partition} sdv_160 == 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    floor := floor + 1;
    goto anon49_Then_dummy;

  anon49_Then_dummy:
    assume false;
    return;

  anon48_Then:
    assume {:partition} sdv_175 == 0;
    goto L139;

  L139:
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_297;
    assume {:nonnull} Tmp_297 != 0;
    assume Tmp_297 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_287;
    assume {:nonnull} Tmp_287 != 0;
    assume Tmp_287 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(sdv_163, 128) != 0;
    Tmp_277 := 16;
    goto L177;

  L177:
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_309;
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_282;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_283;
    assume {:nonnull} Tmp_282 != 0;
    assume Tmp_282 > 0;
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    Tmp_274 := 0;
    goto L1;

  anon51_Then:
    assume {:partition} BAND(sdv_163, 128) == 0;
    Tmp_277 := 8;
    goto L177;

  anon50_Then:
    Tmp_274 := 26;
    goto L1;

  anon47_Then:
    assume {:partition} dev != 65;
    goto L139;

  anon57_Then:
    assume {:partition} dev == 64;
    goto L148;

  anon46_Then:
    assume {:partition} floor >= 4;
    goto L139;

  anon56_Then:
    assume {:partition} Tmp_314 != 4;
    Tmp_284 := 1;
    goto L105;

  anon43_Then:
    assume {:partition} sdv_159 == 0;
    Tmp_274 := 26;
    goto L1;

  anon52_Then:
    assume {:partition} dev != 65;
    Tmp_274 := 26;
    goto L1;

  anon55_Then:
    assume {:partition} dev == 64;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    havoc Tmp_285;
    assume {:nonnull} Tmp_285 != 0;
    assume Tmp_285 > 0;
    assume {:nonnull} flash_7 != 0;
    assume flash_7 > 0;
    goto L86;

  anon42_Then:
    assume {:partition} sdv_176 == 0;
    Tmp_274 := 26;
    goto L1;

  anon54_Then:
    assume {:partition} Tmp_304 != 4;
    Tmp_291 := 1;
    goto L66;

  anon41_Then:
    assume {:partition} BAND(sdv_166, 128) == 0;
    Tmp_286 := 8;
    goto L58;

  anon39_Then:
    assume {:partition} sdv_164 == 0;
    Tmp_274 := 26;
    goto L1;

  anon53_Then:
    Tmp_274 := 26;
    goto L1;
}



procedure {:origName "setASICmode_sdv_static_function_8"} setASICmode_sdv_static_function_8(actual_flash_8: int, actual_mode: int) returns (Tmp_317: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_317 == 0 || Tmp_317 == 115;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "setASICmode_sdv_static_function_8"} setASICmode_sdv_static_function_8(actual_flash_8: int, actual_mode: int) returns (Tmp_317: int)
{
  var {:scalar} stat: int;
  var {:pointer} flash_8: int;
  var {:scalar} mode: int;

  anon0:
    flash_8 := actual_flash_8;
    mode := actual_mode;
    stat := 0;
    call {:si_unique_call 208} releasePowerDown(flash_8);
    stat := BOR(BOR(BOR(4, 8), 16), mode);
    assume {:nonnull} flash_8 != 0;
    assume flash_8 > 0;
    assume {:nonnull} flash_8 != 0;
    assume flash_8 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} BAND(mode, 2) != 0;
    Tmp_317 := 0;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} BAND(mode, 2) == 0;
    assume {:nonnull} flash_8 != 0;
    assume flash_8 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} BAND(stat, 1) != 0;
    call {:si_unique_call 209} Tmp_317 := recoverFromAccessError_sdv_static_function_8(flash_8);
    goto L1;

  anon6_Then:
    assume {:partition} BAND(stat, 1) == 0;
    Tmp_317 := 0;
    goto L1;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 210} vslice_dummy_var_53 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "flRegisterFTL"} flRegisterFTL() returns (Tmp_322: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_322 == 102 || Tmp_322 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterFTL"} flRegisterFTL() returns (Tmp_322: int)
{
  var {:scalar} i_5: int;
  var {:pointer} Tmp_323: int;
  var {:scalar} Tmp_325: int;
  var {:scalar} j: int;
  var {:scalar} Tmp_326: int;
  var {:scalar} Tmp_327: int;
  var {:scalar} Tmp_328: int;
  var {:scalar} Tmp_329: int;
  var {:scalar} Tmp_330: int;
  var {:scalar} Tmp_331: int;
  var {:pointer} Tmp_332: int;
  var {:pointer} Tmp_333: int;

  anon0:
    call {:si_unique_call 211} Tmp_323 := __HAVOC_malloc(196);
    call {:si_unique_call 212} Tmp_332 := __HAVOC_malloc(212);
    call {:si_unique_call 213} Tmp_333 := __HAVOC_malloc(120);
    j := 287454020;
    Tmp_333 := strConst__li2bpl7;
    call {:si_unique_call 214} PRINTF(Tmp_333);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_322 := 102;
    goto L1;

  L1:
    return;

  anon5_Then:
    Tmp_323 := strConst__li2bpl6;
    call {:si_unique_call 215} PRINTF(Tmp_323);
    havoc Tmp_329;
    havoc Tmp_331;
    havoc Tmp_330;
    Tmp_332 := strConst__li2bpl8;
    call {:si_unique_call 216} PRINTF(Tmp_332);
    havoc Tmp_325;
    i_5 := 0;
    goto L22;

  L22:
    call {:si_unique_call 217} i_5, Tmp_326, Tmp_327, Tmp_328 := flRegisterFTL_loop_L22(i_5, Tmp_326, Tmp_327, Tmp_328);
    goto L22_last;

  L22_last:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} 8 > i_5;
    Tmp_327 := i_5;
    Tmp_328 := i_5;
    Tmp_326 := i_5;
    i_5 := i_5 + 1;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    assume false;
    return;

  anon6_Then:
    assume {:partition} i_5 >= 8;
    Tmp_322 := 0;
    goto L1;
}



procedure {:origName "_sdv_init13"} _sdv_init13();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init13"} _sdv_init13()
{
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 218} vslice_dummy_var_54 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "amdCommand"} amdCommand(actual_pVol_10: int, actual_address: int, actual_command: int, actual_flashPtr_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "amdCommand"} amdCommand(actual_pVol_10: int, actual_address: int, actual_command: int, actual_flashPtr_6: int)
{
  var {:scalar} Tmp_336: int;
  var {:scalar} baseAddress: int;
  var {:scalar} Tmp_338: int;
  var {:scalar} Tmp_339: int;
  var {:scalar} Tmp_340: int;
  var {:pointer} Tmp_341: int;
  var {:scalar} Tmp_342: int;
  var {:scalar} Tmp_343: int;
  var {:scalar} Tmp_344: int;
  var {:scalar} Tmp_345: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} Tmp_349: int;
  var {:scalar} Tmp_350: int;
  var {:pointer} pVol_10: int;
  var {:scalar} address: int;
  var {:pointer} flashPtr_6: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_1220: int;
  var vslice_dummy_var_1221: int;
  var vslice_dummy_var_1222: int;
  var vslice_dummy_var_1223: int;

  anon0:
    call {:si_unique_call 219} vslice_dummy_var_55 := __HAVOC_malloc(4);
    pVol_10 := actual_pVol_10;
    address := actual_address;
    flashPtr_6 := actual_flashPtr_6;
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc Tmp_347;
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc baseAddress;
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc Tmp_343;
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc vslice_dummy_var_1220;
    call {:si_unique_call 220} vslice_dummy_var_60 := flMap(vslice_dummy_var_1220, Tmp_343);
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc Tmp_338;
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc vslice_dummy_var_1221;
    call {:si_unique_call 221} vslice_dummy_var_61 := flMap(vslice_dummy_var_1221, Tmp_338);
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc Tmp_336;
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc vslice_dummy_var_1222;
    call {:si_unique_call 222} vslice_dummy_var_62 := flMap(vslice_dummy_var_1222, Tmp_336);
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc vslice_dummy_var_1223;
    call {:si_unique_call 223} vslice_dummy_var_56 := flMap(vslice_dummy_var_1223, address);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc Tmp_340;
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc Tmp_348;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    havoc Tmp_339;
    call {:si_unique_call 224} vslice_dummy_var_57 := flAddLongToFarPointer(flashPtr_6, Tmp_339);
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc Tmp_344;
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc Tmp_349;
    assume {:nonnull} Tmp_349 != 0;
    assume Tmp_349 > 0;
    havoc Tmp_350;
    call {:si_unique_call 225} vslice_dummy_var_58 := flAddLongToFarPointer(flashPtr_6, Tmp_350);
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc Tmp_345;
    assume {:nonnull} pVol_10 != 0;
    assume pVol_10 > 0;
    havoc Tmp_341;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    havoc Tmp_342;
    call {:si_unique_call 226} vslice_dummy_var_59 := flAddLongToFarPointer(flashPtr_6, Tmp_342);
    goto L1;
}



procedure {:origName "flRegisterAMDMTD"} flRegisterAMDMTD() returns (Tmp_351: int);
  free ensures {:va_keep} Tmp_351 == 102 || Tmp_351 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterAMDMTD"} flRegisterAMDMTD() returns (Tmp_351: int)
{
  var {:scalar} Tmp_352: int;
  var {:scalar} Tmp_354: int;

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_351 := 102;
    goto L1;

  L1:
    return;

  anon11_Then:
    havoc Tmp_354;
    Tmp_352 := Tmp_354;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume Tmp_352 <= 2;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume Tmp_352 != 2;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume Tmp_352 != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume Tmp_352 != 0;
    goto L8;

  L8:
    Tmp_351 := 0;
    goto L1;

  anon15_Then:
    assume Tmp_352 == 0;
    Tmp_352 := 0;
    goto L8;

  anon14_Then:
    assume Tmp_352 == 1;
    Tmp_352 := 1;
    goto L8;

  anon13_Then:
    assume Tmp_352 == 2;
    Tmp_352 := 2;
    goto L8;

  anon12_Then:
    assume Tmp_352 > 2;
    goto L8;
}



procedure {:origName "amdMTDIdentify"} amdMTDIdentify(actual_pVol_11: int) returns (Tmp_355: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_355 == 26 || Tmp_355 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "amdMTDIdentify"} amdMTDIdentify(actual_pVol_11: int) returns (Tmp_355: int)
{
  var {:pointer} Tmp_356: int;
  var {:scalar} Tmp_358: int;
  var {:pointer} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:scalar} sdv_186: int;
  var {:pointer} Tmp_361: int;
  var {:pointer} Tmp_362: int;
  var {:pointer} Tmp_363: int;
  var {:scalar} Tmp_364: int;
  var {:pointer} Tmp_365: int;
  var {:scalar} fl_15: int;
  var {:pointer} Tmp_366: int;
  var {:scalar} inlv_1: int;
  var {:pointer} Tmp_367: int;
  var {:pointer} Tmp_368: int;
  var {:pointer} pVol_11: int;
  var vslice_dummy_var_1224: int;
  var vslice_dummy_var_1225: int;
  var vslice_dummy_var_1226: int;
  var vslice_dummy_var_1227: int;
  var vslice_dummy_var_1228: int;
  var vslice_dummy_var_1229: int;

  anon0:
    pVol_11 := actual_pVol_11;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc vslice_dummy_var_1224;
    call {:si_unique_call 227} flSetWindowBusWidth(vslice_dummy_var_1224, 16);
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc vslice_dummy_var_1225;
    call {:si_unique_call 228} flSetWindowSpeed(vslice_dummy_var_1225, 150);
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc vslice_dummy_var_1226;
    call {:si_unique_call 229} flSetWindowSize(vslice_dummy_var_1226, 2);
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc vslice_dummy_var_1227;
    call {:si_unique_call 230} sdv_186 := flSocketNoOf(vslice_dummy_var_1227);
    Tmp_364 := sdv_186;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_362;
    assume {:nonnull} Tmp_362 != 0;
    assume Tmp_362 > 0;
    inlv_1 := 4;
    goto L19;

  L19:
    call {:si_unique_call 231} inlv_1 := amdMTDIdentify_loop_L19(inlv_1, pVol_11);
    goto L19_last;

  L19_last:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} inlv_1 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} inlv_1 == 1;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc vslice_dummy_var_1228;
    call {:si_unique_call 232} flSetWindowBusWidth(vslice_dummy_var_1228, 8);
    goto L22;

  L22:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    call {:si_unique_call 233} flIntelIdentify(pVol_11, li2bplFunctionConstant558, 0);
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    call {:si_unique_call 234} inlv_1 := corral_nondet();
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    assume false;
    return;

  anon87_Then:
    goto L20;

  L20:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto L46;

  L46:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto L47;

  L47:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L49;

  L49:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_368;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_366;
    assume {:nonnull} Tmp_366 != 0;
    assume Tmp_366 > 0;
    assume {:nonnull} Tmp_366 != 0;
    assume Tmp_366 > 0;
    assume {:nonnull} Tmp_368 != 0;
    assume Tmp_368 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_367;
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto L52;

  L52:
    call {:si_unique_call 235} fl_15 := flIntelSize(pVol_11, li2bplFunctionConstant558, 0);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} fl_15 != 0;
    Tmp_355 := fl_15;
    goto L1;

  L1:
    return;

  anon91_Then:
    assume {:partition} fl_15 == 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    Tmp_355 := 0;
    goto L1;

  anon89_Then:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto L67;

  L67:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_358;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc vslice_dummy_var_1229;
    call {:si_unique_call 236} flSetWindowSize(vslice_dummy_var_1229, Tmp_358);
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_363;
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_360;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_359;
    assume {:nonnull} Tmp_359 != 0;
    assume Tmp_359 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto L52;

  anon92_Then:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_365;
    assume {:nonnull} Tmp_365 != 0;
    assume Tmp_365 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_356;
    assume {:nonnull} Tmp_356 != 0;
    assume Tmp_356 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    havoc Tmp_361;
    assume {:nonnull} Tmp_361 != 0;
    assume Tmp_361 > 0;
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto L52;

  anon93_Then:
    goto L67;

  anon90_Then:
    goto L49;

  anon72_Then:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto L83;

  L83:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto L47;

  anon98_Then:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    goto L90;

  L90:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto L47;

  anon104_Then:
    assume {:nonnull} pVol_11 != 0;
    assume pVol_11 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    Tmp_355 := 26;
    goto L1;

  anon105_Then:
    goto L90;

  anon103_Then:
    goto L83;

  anon102_Then:
    goto L83;

  anon101_Then:
    goto L83;

  anon100_Then:
    goto L83;

  anon99_Then:
    goto L83;

  anon97_Then:
    goto L46;

  anon96_Then:
    goto L46;

  anon95_Then:
    goto L46;

  anon94_Then:
    goto L46;

  anon88_Then:
    goto L46;

  anon86_Then:
    goto L20;

  anon85_Then:
    goto L20;

  anon84_Then:
    goto L20;

  anon83_Then:
    goto L20;

  anon82_Then:
    goto L20;

  anon81_Then:
    goto L20;

  anon80_Then:
    goto L20;

  anon79_Then:
    goto L20;

  anon78_Then:
    goto L20;

  anon77_Then:
    goto L20;

  anon76_Then:
    goto L20;

  anon75_Then:
    goto L20;

  anon74_Then:
    goto L20;

  anon73_Then:
    assume {:partition} inlv_1 != 1;
    goto L22;

  anon71_Then:
    assume {:partition} 0 >= inlv_1;
    goto L20;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init12"} _sdv_init12()
{
  var vslice_dummy_var_63: int;

  anon0:
    call {:si_unique_call 237} vslice_dummy_var_63 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_64: int;

  anon0:
    call {:si_unique_call 238} vslice_dummy_var_64 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "VccOn_sdv_static_function_11"} VccOn_sdv_static_function_11(actual_pVol_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "VccOn_sdv_static_function_11"} VccOn_sdv_static_function_11(actual_pVol_12: int)
{
  var vslice_dummy_var_65: int;

  anon0:
    call {:si_unique_call 239} vslice_dummy_var_65 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "VppOff_sdv_static_function_11"} VppOff_sdv_static_function_11(actual_pVol_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "VppOff_sdv_static_function_11"} VppOff_sdv_static_function_11(actual_pVol_13: int)
{
  var vslice_dummy_var_66: int;

  anon0:
    call {:si_unique_call 240} vslice_dummy_var_66 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "setMappingContext_sdv_static_function_11"} setMappingContext_sdv_static_function_11(actual_pVol_14: int, actual_page: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "setMappingContext_sdv_static_function_11"} setMappingContext_sdv_static_function_11(actual_pVol_14: int, actual_page: int)
{
  var vslice_dummy_var_67: int;

  anon0:
    call {:si_unique_call 241} vslice_dummy_var_67 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "updateDocSocketParams"} updateDocSocketParams(actual_fdoExtension: int) returns (Tmp_379: int);
  free ensures {:va_keep} Tmp_379 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "updateDocSocketParams"} updateDocSocketParams(actual_fdoExtension: int) returns (Tmp_379: int)
{
  var {:scalar} Tmp_380: int;
  var {:scalar} Tmp_381: int;
  var {:scalar} device: int;
  var {:scalar} Tmp_383: int;
  var {:scalar} Tmp_384: int;
  var {:scalar} Tmp_385: int;
  var {:pointer} fdoExtension: int;

  anon0:
    fdoExtension := actual_fdoExtension;
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    havoc device;
    Tmp_385 := device;
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    Tmp_383 := device;
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    Tmp_384 := device;
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    Tmp_381 := device;
    Tmp_380 := device;
    Tmp_379 := 0;
    return;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init11"} _sdv_init11()
{
  var vslice_dummy_var_68: int;

  anon0:
    call {:si_unique_call 242} vslice_dummy_var_68 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "initSocket_sdv_static_function_11"} initSocket_sdv_static_function_11(actual_pVol_15: int) returns (Tmp_388: int);
  free ensures {:va_keep} Tmp_388 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "initSocket_sdv_static_function_11"} initSocket_sdv_static_function_11(actual_pVol_15: int) returns (Tmp_388: int)
{

  anon0:
    Tmp_388 := 0;
    return;
}



procedure {:origName "docSocketInit"} docSocketInit(actual_pVol_16: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "docSocketInit"} docSocketInit(actual_pVol_16: int)
{
  var {:pointer} pVol_16: int;
  var vslice_dummy_var_69: int;

  anon0:
    call {:si_unique_call 243} vslice_dummy_var_69 := __HAVOC_malloc(4);
    pVol_16 := actual_pVol_16;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    assume {:nonnull} pVol_16 != 0;
    assume pVol_16 > 0;
    return;
}



procedure {:origName "cardDetected_sdv_static_function_11"} cardDetected_sdv_static_function_11(actual_pVol_17: int) returns (Tmp_392: int);
  free ensures {:va_keep} Tmp_392 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "cardDetected_sdv_static_function_11"} cardDetected_sdv_static_function_11(actual_pVol_17: int) returns (Tmp_392: int)
{

  anon0:
    Tmp_392 := 1;
    return;
}



procedure {:origName "windowBaseAddress"} windowBaseAddress(actual_driveNo: int) returns (Tmp_394: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "windowBaseAddress"} windowBaseAddress(actual_driveNo: int) returns (Tmp_394: int)
{
  var {:scalar} driveNo: int;

  anon0:
    driveNo := actual_driveNo;
    call {:si_unique_call 244} Tmp_394 := corral_nondet();
    return;
}



procedure {:origName "freeSocket_sdv_static_function_11"} freeSocket_sdv_static_function_11(actual_pVol_18: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "freeSocket_sdv_static_function_11"} freeSocket_sdv_static_function_11(actual_pVol_18: int)
{
  var vslice_dummy_var_70: int;

  anon0:
    call {:si_unique_call 245} vslice_dummy_var_70 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "getAndClearCardChangeIndicator_sdv_static_function_11"} getAndClearCardChangeIndicator_sdv_static_function_11(actual_pVol_19: int) returns (Tmp_399: int);
  free ensures {:va_keep} Tmp_399 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "getAndClearCardChangeIndicator_sdv_static_function_11"} getAndClearCardChangeIndicator_sdv_static_function_11(actual_pVol_19: int) returns (Tmp_399: int)
{

  anon0:
    Tmp_399 := 0;
    return;
}



procedure {:origName "VccOff_sdv_static_function_11"} VccOff_sdv_static_function_11(actual_pVol_20: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "VccOff_sdv_static_function_11"} VccOff_sdv_static_function_11(actual_pVol_20: int)
{
  var vslice_dummy_var_71: int;

  anon0:
    call {:si_unique_call 246} vslice_dummy_var_71 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "flRegisterDOCSOC"} flRegisterDOCSOC(actual_startAddr: int, actual_stopAddr: int) returns (Tmp_403: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_403 == 102 || Tmp_403 == 0 || Tmp_403 == 60;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterDOCSOC"} flRegisterDOCSOC(actual_startAddr: int, actual_stopAddr: int) returns (Tmp_403: int)
{
  var {:scalar} Tmp_404: int;
  var {:pointer} pVol_21: int;
  var {:scalar} Tmp_405: int;
  var {:scalar} Tmp_406: int;
  var boogieTmp: int;
  var vslice_dummy_var_1230: int;

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    Tmp_403 := 102;
    goto L1;

  L1:
    return;

  anon7_Then:
    goto L4;

  L4:
    call {:si_unique_call 247} Tmp_404, pVol_21, Tmp_405, Tmp_406, boogieTmp := flRegisterDOCSOC_loop_L4(Tmp_404, pVol_21, Tmp_405, Tmp_406, boogieTmp);
    goto L4_last;

  L4_last:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    havoc Tmp_406;
    call {:si_unique_call 248} pVol_21 := flSocketOf(Tmp_406);
    assume {:nonnull} pVol_21 != 0;
    assume pVol_21 > 0;
    call {:si_unique_call 249} docSocketInit(pVol_21);
    call {:si_unique_call 250} flSetWindowSize(pVol_21, 2);
    assume {:nonnull} pVol_21 != 0;
    assume pVol_21 > 0;
    havoc vslice_dummy_var_1230;
    call {:si_unique_call 251} boogieTmp := windowBaseAddress(vslice_dummy_var_1230);
    assume {:nonnull} pVol_21 != 0;
    assume pVol_21 > 0;
    havoc Tmp_404;
    Tmp_405 := Tmp_404;
    assume {:nonnull} pVol_21 != 0;
    assume pVol_21 > 0;
    assume {:nonnull} pdriveInfo != 0;
    assume pdriveInfo > 0;
    goto anon8_Else_dummy;

  anon8_Else_dummy:
    assume false;
    return;

  anon8_Then:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_403 := 0;
    goto L1;

  anon9_Then:
    Tmp_403 := 60;
    goto L1;
}



procedure {:origName "setWindow_sdv_static_function_11"} setWindow_sdv_static_function_11(actual_pVol_22: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "setWindow_sdv_static_function_11"} setWindow_sdv_static_function_11(actual_pVol_22: int)
{
  var {:scalar} Tmp_409: int;
  var {:scalar} Tmp_410: int;
  var {:pointer} pVol_22: int;
  var vslice_dummy_var_72: int;

  anon0:
    call {:si_unique_call 252} vslice_dummy_var_72 := __HAVOC_malloc(4);
    pVol_22 := actual_pVol_22;
    assume {:nonnull} pVol_22 != 0;
    assume pVol_22 > 0;
    havoc Tmp_410;
    assume {:nonnull} pVol_22 != 0;
    assume pVol_22 > 0;
    assume {:nonnull} pVol_22 != 0;
    assume pVol_22 > 0;
    havoc Tmp_409;
    assume {:nonnull} pVol_22 != 0;
    assume pVol_22 > 0;
    return;
}



procedure {:origName "flRegisterINFTL"} flRegisterINFTL() returns (Tmp_412: int);
  free ensures {:va_keep} Tmp_412 == 102 || Tmp_412 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterINFTL"} flRegisterINFTL() returns (Tmp_412: int)
{
  var {:scalar} i_6: int;
  var {:scalar} Tmp_413: int;
  var {:scalar} Tmp_414: int;
  var {:scalar} Tmp_415: int;
  var {:scalar} Tmp_416: int;
  var {:scalar} Tmp_418: int;

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    Tmp_412 := 102;
    goto L1;

  L1:
    return;

  anon7_Then:
    havoc Tmp_418;
    havoc Tmp_414;
    havoc Tmp_416;
    i_6 := 0;
    goto L11;

  L11:
    call {:si_unique_call 253} i_6, Tmp_413 := flRegisterINFTL_loop_L11(i_6, Tmp_413);
    goto L11_last;

  L11_last:
    assume {:CounterLoop 8} {:Counter "i_6"} true;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} 8 > i_6;
    Tmp_413 := i_6;
    i_6 := i_6 + 1;
    goto anon8_Else_dummy;

  anon8_Else_dummy:
    assume false;
    return;

  anon8_Then:
    assume {:partition} i_6 >= 8;
    i_6 := 0;
    goto L15;

  L15:
    call {:si_unique_call 254} i_6, Tmp_415 := flRegisterINFTL_loop_L15(i_6, Tmp_415);
    goto L15_last;

  L15_last:
    assume {:CounterLoop 20} {:Counter "i_6"} true;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 20 > i_6;
    Tmp_415 := i_6;
    i_6 := i_6 + 1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} i_6 >= 20;
    Tmp_412 := 0;
    goto L1;
}



procedure {:origName "_sdv_init26"} _sdv_init26();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init26"} _sdv_init26()
{
  var vslice_dummy_var_73: int;

  anon0:
    call {:si_unique_call 255} vslice_dummy_var_73 := __HAVOC_malloc(4);
    assume discard_sdv_static_local_variable_116 == 0;
    assume tmp_sdv_static_local_variable_121 == 0;
    return;
}



procedure {:origName "_sdv_init10"} _sdv_init10();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init10"} _sdv_init10()
{
  var vslice_dummy_var_74: int;

  anon0:
    call {:si_unique_call 256} vslice_dummy_var_74 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "setBusTypeOfFlash"} setBusTypeOfFlash(actual_flash_9: int, actual_access: int) returns (Tmp_424: int);
  free ensures {:va_keep} Tmp_424 == 0 || Tmp_424 == 51;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "setBusTypeOfFlash"} setBusTypeOfFlash(actual_flash_9: int, actual_access: int) returns (Tmp_424: int)
{
  var {:pointer} flash_9: int;
  var {:scalar} access: int;

  anon0:
    flash_9 := actual_flash_9;
    access := actual_access;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} flash_9 != 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} BAND(access, 4096) != 0;
    Tmp_424 := 0;
    goto L1;

  L1:
    return;

  anon40_Then:
    assume {:partition} BAND(access, 4096) == 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} BAND(access, 240) != 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(access, 240) != 16;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(access, 240) == 32;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(access, 768) == 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(access, 4) != 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto L25;

  L25:
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    Tmp_424 := 0;
    goto L1;

  anon42_Then:
    assume {:partition} BAND(access, 4) == 0;
    Tmp_424 := 51;
    goto L1;

  anon57_Then:
    assume {:partition} BAND(access, 768) != 0;
    Tmp_424 := 51;
    goto L1;

  anon47_Then:
    assume {:partition} BAND(access, 240) != 32;
    Tmp_424 := 51;
    goto L1;

  anon48_Then:
    assume {:partition} BAND(access, 240) == 16;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(access, 768) != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(access, 768) == 256;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(access, 4) != 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} BAND(access, 3072) != 1024;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} BAND(access, 3072) == 2048;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto L25;

  anon52_Then:
    assume {:partition} BAND(access, 3072) != 2048;
    Tmp_424 := 51;
    goto L1;

  anon56_Then:
    assume {:partition} BAND(access, 3072) == 1024;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto L25;

  anon44_Then:
    assume {:partition} BAND(access, 4) == 0;
    Tmp_424 := 51;
    goto L1;

  anon51_Then:
    assume {:partition} BAND(access, 768) != 256;
    Tmp_424 := 51;
    goto L1;

  anon55_Then:
    assume {:partition} BAND(access, 768) == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(access, 2) != 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto L25;

  anon43_Then:
    assume {:partition} BAND(access, 2) == 0;
    Tmp_424 := 51;
    goto L1;

  anon41_Then:
    assume {:partition} BAND(access, 240) == 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(access, 768) != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BAND(access, 768) == 256;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(access, 2) != 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} BAND(access, 3072) != 1024;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(access, 3072) == 2048;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto L25;

  anon50_Then:
    assume {:partition} BAND(access, 3072) != 2048;
    Tmp_424 := 51;
    goto L1;

  anon54_Then:
    assume {:partition} BAND(access, 3072) == 1024;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto L25;

  anon46_Then:
    assume {:partition} BAND(access, 2) == 0;
    Tmp_424 := 51;
    goto L1;

  anon49_Then:
    assume {:partition} BAND(access, 768) != 256;
    Tmp_424 := 51;
    goto L1;

  anon53_Then:
    assume {:partition} BAND(access, 768) == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} BAND(access, 1) != 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    assume {:nonnull} flash_9 != 0;
    assume flash_9 > 0;
    goto L25;

  anon45_Then:
    assume {:partition} BAND(access, 1) == 0;
    Tmp_424 := 51;
    goto L1;

  anon39_Then:
    assume {:partition} flash_9 == 0;
    Tmp_424 := 51;
    goto L1;
}



procedure {:origName "flRegisterNFTL"} flRegisterNFTL() returns (Tmp_426: int);
  free ensures {:va_keep} Tmp_426 == 102 || Tmp_426 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterNFTL"} flRegisterNFTL() returns (Tmp_426: int)
{
  var {:scalar} i_7: int;
  var {:scalar} Tmp_427: int;
  var {:scalar} Tmp_428: int;
  var {:scalar} Tmp_429: int;

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_426 := 102;
    goto L1;

  L1:
    return;

  anon5_Then:
    havoc Tmp_428;
    havoc Tmp_427;
    i_7 := 0;
    goto L10;

  L10:
    call {:si_unique_call 257} i_7, Tmp_429 := flRegisterNFTL_loop_L10(i_7, Tmp_429);
    goto L10_last;

  L10_last:
    assume {:CounterLoop 20} {:Counter "i_7"} true;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} 20 > i_7;
    Tmp_429 := i_7;
    i_7 := i_7 + 1;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    assume false;
    return;

  anon6_Then:
    assume {:partition} i_7 >= 20;
    Tmp_426 := 0;
    goto L1;
}



procedure {:origName "_sdv_init27"} _sdv_init27();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init27"} _sdv_init27()
{
  var vslice_dummy_var_75: int;

  anon0:
    call {:si_unique_call 258} vslice_dummy_var_75 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "doc2000Identify_sdv_static_function_15"} doc2000Identify_sdv_static_function_15(actual_flash_10: int) returns (Tmp_434: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_434 == 26 || Tmp_434 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "doc2000Identify_sdv_static_function_15"} doc2000Identify_sdv_static_function_15(actual_flash_10: int) returns (Tmp_434: int)
{
  var {:pointer} Tmp_435: int;
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:pointer} Tmp_439: int;
  var {:pointer} Tmp_440: int;
  var {:pointer} Tmp_442: int;
  var {:scalar} Tmp_443: int;
  var {:pointer} Tmp_444: int;
  var {:scalar} Tmp_445: int;
  var {:scalar} sdv_191: int;
  var {:dopa} {:scalar} address_1: int;
  var {:pointer} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:scalar} sdv_192: int;
  var {:pointer} Tmp_449: int;
  var {:pointer} Tmp_450: int;
  var {:pointer} Tmp_451: int;
  var {:pointer} Tmp_452: int;
  var {:scalar} socketNo_1: int;
  var {:scalar} sdv_195: int;
  var {:scalar} Tmp_454: int;
  var {:scalar} sdv_196: int;
  var {:pointer} Tmp_455: int;
  var {:scalar} toggle2_1: int;
  var {:scalar} Tmp_456: int;
  var {:scalar} Tmp_457: int;
  var {:pointer} sdv_197: int;
  var {:dopa} {:scalar} addr: int;
  var {:pointer} Tmp_458: int;
  var {:pointer} Tmp_459: int;
  var {:pointer} sdv_198: int;
  var {:pointer} sdv_199: int;
  var {:pointer} Tmp_460: int;
  var {:pointer} Tmp_461: int;
  var {:scalar} floorCnt: int;
  var {:pointer} Tmp_462: int;
  var {:scalar} dev_1: int;
  var {:pointer} Tmp_463: int;
  var {:scalar} Tmp_464: int;
  var {:scalar} floor_1: int;
  var {:pointer} Tmp_465: int;
  var {:pointer} Tmp_466: int;
  var {:pointer} Tmp_467: int;
  var {:pointer} Tmp_468: int;
  var {:pointer} Tmp_470: int;
  var {:scalar} maxDevs_1: int;
  var {:scalar} toggle1_1: int;
  var {:pointer} Tmp_471: int;
  var {:pointer} flash_10: int;
  var vslice_dummy_var_1231: int;
  var vslice_dummy_var_1232: int;
  var vslice_dummy_var_1233: int;
  var vslice_dummy_var_1234: int;

  anon0:
    call {:si_unique_call 259} address_1 := __HAVOC_malloc(4);
    call {:si_unique_call 260} addr := __HAVOC_malloc(4);
    flash_10 := actual_flash_10;
    assume {:nonnull} address_1 != 0;
    assume address_1 > 0;
    floorCnt := 0;
    floor_1 := 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc vslice_dummy_var_1231;
    call {:si_unique_call 261} sdv_191 := flSocketNoOf(vslice_dummy_var_1231);
    socketNo_1 := sdv_191;
    Tmp_445 := socketNo_1;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    Tmp_464 := socketNo_1;
    havoc Tmp_456;
    call {:si_unique_call 262} sdv_195 := setBusTypeOfFlash(flash_10, Tmp_456);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_195 != 0;
    Tmp_434 := 26;
    goto L1;

  L1:
    return;

  anon37_Then:
    assume {:partition} sdv_195 == 0;
    Tmp_454 := socketNo_1;
    call {:si_unique_call 263} sdv_197 := flReadBackBufferOf(Tmp_454);
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_455;
    assume {:nonnull} Tmp_455 != 0;
    assume Tmp_455 > 0;
    Tmp_457 := socketNo_1;
    call {:si_unique_call 264} sdv_199 := flBufferOf(Tmp_457);
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_449;
    assume {:nonnull} Tmp_449 != 0;
    assume Tmp_449 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc vslice_dummy_var_1232;
    call {:si_unique_call 265} flSetWindowBusWidth(vslice_dummy_var_1232, 16);
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc vslice_dummy_var_1233;
    call {:si_unique_call 266} flSetWindowSpeed(vslice_dummy_var_1233, 250);
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_463;
    assume {:nonnull} Tmp_463 != 0;
    assume Tmp_463 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_470;
    assume {:nonnull} Tmp_470 != 0;
    assume Tmp_470 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc vslice_dummy_var_1234;
    call {:si_unique_call 267} sdv_198 := flMap(vslice_dummy_var_1234, 0);
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_465;
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_451;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_468;
    assume {:nonnull} Tmp_468 != 0;
    assume Tmp_468 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 268} setASICmode_sdv_static_function_15(flash_10, 132);
    call {:si_unique_call 269} setASICmode_sdv_static_function_15(flash_10, 133);
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_192 != 32;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_192 == 48;
    dev_1 := 0;
    goto L67;

  L67:
    call {:si_unique_call 270} dev_1 := doc2000Identify_sdv_static_function_15_loop_L67(dev_1, flash_10);
    goto L67_last;

  L67_last:
    assume {:CounterLoop 3} {:Counter "dev_1"} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} 3 > dev_1;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    dev_1 := dev_1 + 1;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    assume false;
    return;

  anon39_Then:
    assume {:partition} dev_1 >= 3;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} toggle1_1 != 48;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto L76;

  L76:
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_458;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_450;
    assume {:nonnull} Tmp_450 != 0;
    assume Tmp_450 > 0;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_442;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    goto L79;

  L79:
    call {:si_unique_call 271} mapWin_sdv_static_function_15(flash_10, address_1);
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_438;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    call {:si_unique_call 272} toggle2_1 := corral_nondet();
    goto L94;

  L94:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} BAND(toggle2_1, 4) != 0;
    maxDevs_1 := 16;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_446;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    goto L98;

  L98:
    call {:si_unique_call 273} Tmp_439, Tmp_443, Tmp_452, dev_1, Tmp_466, Tmp_471 := doc2000Identify_sdv_static_function_15_loop_L98(Tmp_439, Tmp_443, Tmp_452, dev_1, Tmp_466, maxDevs_1, Tmp_471, flash_10);
    goto L98_last;

  L98_last:
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_452;
    assume {:nonnull} Tmp_452 != 0;
    assume Tmp_452 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    dev_1 := 0;
    goto L105;

  L105:
    call {:si_unique_call 274} Tmp_443, dev_1 := doc2000Identify_sdv_static_function_15_loop_L105(Tmp_443, dev_1, maxDevs_1, flash_10);
    goto L105_last;

  L105_last:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} maxDevs_1 > dev_1;
    Tmp_443 := dev_1;
    call {:si_unique_call 275} selectChip_sdv_static_function_15(flash_10, Tmp_443);
    call {:si_unique_call 276} command_sdv_static_function_15(flash_10, 255);
    dev_1 := dev_1 + 1;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    assume false;
    return;

  anon42_Then:
    assume {:partition} dev_1 >= maxDevs_1;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_466;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_439;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} Tmp_466 != 0;
    assume Tmp_466 > 0;
    goto anon42_Then_dummy;

  anon42_Then_dummy:
    assume false;
    return;

  anon52_Then:
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_460;
    assume {:nonnull} Tmp_460 != 0;
    assume Tmp_460 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_461;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    call {:si_unique_call 277} writeSignals_sdv_static_function_15(flash_10, 24);
    floor_1 := 0;
    goto L123;

  L123:
    call {:si_unique_call 278} Tmp_437, Tmp_444, sdv_196, floorCnt, dev_1, floor_1, Tmp_467, maxDevs_1 := doc2000Identify_sdv_static_function_15_loop_L123(Tmp_437, Tmp_444, address_1, sdv_196, addr, floorCnt, dev_1, floor_1, Tmp_467, maxDevs_1, flash_10);
    goto L123_last;

  L123_last:
    assume {:CounterLoop 4} {:Counter "floor_1"} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} 4 > floor_1;
    dev_1 := 0;
    goto L126;

  L126:
    call {:si_unique_call 279} Tmp_437, Tmp_444, sdv_196, floorCnt, dev_1, floor_1, Tmp_467, maxDevs_1 := doc2000Identify_sdv_static_function_15_loop_L126(Tmp_437, Tmp_444, address_1, sdv_196, addr, floorCnt, dev_1, floor_1, Tmp_467, maxDevs_1, flash_10);
    goto L126_last;

  L126_last:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} maxDevs_1 > dev_1;
    assume {:nonnull} addr != 0;
    assume addr > 0;
    assume {:nonnull} address_1 != 0;
    assume address_1 > 0;
    call {:si_unique_call 280} mapWin_sdv_static_function_15(flash_10, addr);
    call {:si_unique_call 281} sdv_196 := readFlashID_sdv_static_function_15(flash_10, dev_1);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_196 == 1;
    floorCnt := floor_1 + 1;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} floor_1 != 0;
    goto L141;

  L141:
    assume {:nonnull} address_1 != 0;
    assume address_1 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto L142;

  L142:
    dev_1 := dev_1 + 1;
    goto L142_dummy;

  L142_dummy:
    assume false;
    return;

  anon53_Then:
    assume {:partition} floor_1 == 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_444;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_467;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto L141;

  anon45_Then:
    assume {:partition} sdv_196 != 1;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} floor_1 != 0;
    dev_1 := maxDevs_1;
    floor_1 := 4;
    goto L142;

  anon46_Then:
    assume {:partition} floor_1 == 0;
    maxDevs_1 := dev_1;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_437;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto L142;

  anon44_Then:
    assume {:partition} dev_1 >= maxDevs_1;
    floor_1 := floor_1 + 1;
    goto anon44_Then_dummy;

  anon44_Then_dummy:
    assume false;
    return;

  anon43_Then:
    assume {:partition} floor_1 >= 4;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_447;
    assume {:nonnull} Tmp_447 != 0;
    assume Tmp_447 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_435;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} address_1 != 0;
    assume address_1 > 0;
    call {:si_unique_call 282} mapWin_sdv_static_function_15(flash_10, address_1);
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    call {:si_unique_call 283} eccOFF_sdv_static_function_15(flash_10);
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto L171;

  L171:
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto L172;

  L172:
    Tmp_434 := 0;
    goto L1;

  anon48_Then:
    goto L172;

  anon54_Then:
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto L171;

  anon47_Then:
    Tmp_434 := 26;
    goto L1;

  anon41_Then:
    assume {:partition} BAND(toggle2_1, 4) == 0;
    Tmp_434 := 26;
    goto L1;

  anon51_Then:
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    call {:si_unique_call 284} toggle2_1 := corral_nondet();
    goto L94;

  anon40_Then:
    assume {:partition} toggle1_1 == 48;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto L76;

  anon49_Then:
    assume {:partition} sdv_192 != 48;
    Tmp_434 := 26;
    goto L1;

  anon38_Then:
    assume {:partition} sdv_192 == 32;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_459;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_462;
    assume {:nonnull} Tmp_459 != 0;
    assume Tmp_459 > 0;
    assume {:nonnull} Tmp_462 != 0;
    assume Tmp_462 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    havoc Tmp_440;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    assume {:nonnull} flash_10 != 0;
    assume flash_10 > 0;
    goto L79;

  anon50_Then:
    Tmp_434 := 26;
    goto L1;
}



procedure {:origName "command_sdv_static_function_15"} command_sdv_static_function_15(actual_flash_11: int, actual_flCode_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "command_sdv_static_function_15"} command_sdv_static_function_15(actual_flash_11: int, actual_flCode_1: int)
{
  var {:pointer} Tmp_474: int;
  var {:pointer} Tmp_475: int;
  var {:pointer} flash_11: int;
  var vslice_dummy_var_76: int;

  anon0:
    call {:si_unique_call 285} vslice_dummy_var_76 := __HAVOC_malloc(4);
    flash_11 := actual_flash_11;
    call {:si_unique_call 286} writeSignals_sdv_static_function_15(flash_11, 19);
    assume {:nonnull} flash_11 != 0;
    assume flash_11 > 0;
    havoc Tmp_475;
    assume {:nonnull} Tmp_475 != 0;
    assume Tmp_475 > 0;
    assume {:nonnull} flash_11 != 0;
    assume flash_11 > 0;
    assume {:nonnull} flash_11 != 0;
    assume flash_11 > 0;
    havoc Tmp_474;
    assume {:nonnull} Tmp_474 != 0;
    assume Tmp_474 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} flash_11 != 0;
    assume flash_11 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "selectChip_sdv_static_function_15"} selectChip_sdv_static_function_15(actual_flash_12: int, actual_dev_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "selectChip_sdv_static_function_15"} selectChip_sdv_static_function_15(actual_flash_12: int, actual_dev_2: int)
{
  var {:pointer} flash_12: int;
  var vslice_dummy_var_77: int;

  anon0:
    call {:si_unique_call 287} vslice_dummy_var_77 := __HAVOC_malloc(4);
    flash_12 := actual_flash_12;
    assume {:nonnull} flash_12 != 0;
    assume flash_12 > 0;
    return;
}



procedure {:origName "eccOFF_sdv_static_function_15"} eccOFF_sdv_static_function_15(actual_flash_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "eccOFF_sdv_static_function_15"} eccOFF_sdv_static_function_15(actual_flash_13: int)
{
  var {:pointer} flash_13: int;
  var vslice_dummy_var_78: int;

  anon0:
    call {:si_unique_call 288} vslice_dummy_var_78 := __HAVOC_malloc(4);
    flash_13 := actual_flash_13;
    assume {:nonnull} flash_13 != 0;
    assume flash_13 > 0;
    return;
}



procedure {:origName "selectFloor_sdv_static_function_15"} selectFloor_sdv_static_function_15(actual_flash_14: int, actual_address_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "selectFloor_sdv_static_function_15"} selectFloor_sdv_static_function_15(actual_flash_14: int, actual_address_2: int)
{
  var {:scalar} floorToUse: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_484: int;
  var {:pointer} Tmp_485: int;
  var {:pointer} flash_14: int;
  var {:pointer} address_2: int;
  var vslice_dummy_var_79: int;

  anon0:
    call {:si_unique_call 289} vslice_dummy_var_79 := __HAVOC_malloc(4);
    flash_14 := actual_flash_14;
    address_2 := actual_address_2;
    assume {:nonnull} flash_14 != 0;
    assume flash_14 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} flash_14 != 0;
    assume flash_14 > 0;
    havoc Tmp_485;
    assume {:nonnull} Tmp_485 != 0;
    assume Tmp_485 > 0;
    assume {:nonnull} address_2 != 0;
    assume address_2 > 0;
    havoc floorToUse;
    assume {:nonnull} flash_14 != 0;
    assume flash_14 > 0;
    havoc Tmp_484;
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    assume {:nonnull} flash_14 != 0;
    assume flash_14 > 0;
    assume {:nonnull} flash_14 != 0;
    assume flash_14 > 0;
    havoc Tmp_482;
    assume {:nonnull} Tmp_482 != 0;
    assume Tmp_482 > 0;
    assume {:nonnull} address_2 != 0;
    assume address_2 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "isKnownMedia_sdv_static_function_15"} isKnownMedia_sdv_static_function_15(actual_flash_15: int, actual_vendorId: int, actual_chipId: int, actual_dev_3: int) returns (Tmp_486: int);
  free ensures {:va_keep} Tmp_486 == 0 || Tmp_486 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "isKnownMedia_sdv_static_function_15"} isKnownMedia_sdv_static_function_15(actual_flash_15: int, actual_vendorId: int, actual_chipId: int, actual_dev_3: int) returns (Tmp_486: int)
{
  var {:pointer} Tmp_487: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_491: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} Tmp_494: int;
  var {:pointer} Tmp_495: int;
  var {:pointer} Tmp_496: int;
  var {:pointer} Tmp_497: int;
  var {:pointer} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:pointer} Tmp_500: int;
  var {:pointer} Tmp_501: int;
  var {:pointer} Tmp_502: int;
  var {:pointer} Tmp_503: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:pointer} flash_15: int;
  var {:scalar} vendorId: int;
  var {:scalar} chipId: int;
  var {:scalar} dev_3: int;

  anon0:
    flash_15 := actual_flash_15;
    vendorId := actual_vendorId;
    chipId := actual_chipId;
    dev_3 := actual_dev_3;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} dev_3 != 0;
    goto L5;

  L5:
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_497;
    assume {:nonnull} Tmp_497 != 0;
    assume Tmp_497 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_502;
    assume {:nonnull} Tmp_502 != 0;
    assume Tmp_502 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_486 := 1;
    goto L1;

  L1:
    return;

  anon55_Then:
    goto L6;

  L6:
    Tmp_486 := 0;
    goto L1;

  anon54_Then:
    goto L6;

  anon39_Then:
    assume {:partition} dev_3 == 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_498;
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_491;
    assume {:nonnull} Tmp_491 != 0;
    assume Tmp_491 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_507;
    assume {:nonnull} Tmp_507 != 0;
    assume Tmp_507 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_501;
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} vendorId != 152;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} vendorId == 236;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} chipId != 115;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} chipId != 117;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} chipId != 118;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} chipId != 227;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} chipId != 229;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} chipId == 230;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    goto L28;

  L28:
    Tmp_486 := 1;
    goto L1;

  anon49_Then:
    assume {:partition} chipId != 230;
    Tmp_486 := 0;
    goto L1;

  anon50_Then:
    assume {:partition} chipId == 229;
    goto L23;

  L23:
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    goto L28;

  anon51_Then:
    assume {:partition} chipId == 227;
    goto L23;

  anon52_Then:
    assume {:partition} chipId == 118;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_489;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_500;
    assume {:nonnull} Tmp_489 != 0;
    assume Tmp_489 > 0;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    goto L28;

  anon53_Then:
    assume {:partition} chipId == 117;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_506;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_496;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_506 != 0;
    assume Tmp_506 > 0;
    goto L28;

  anon41_Then:
    assume {:partition} chipId == 115;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_488;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_495;
    assume {:nonnull} Tmp_488 != 0;
    assume Tmp_488 > 0;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    goto L28;

  anon42_Then:
    assume {:partition} vendorId != 236;
    Tmp_486 := 0;
    goto L1;

  anon57_Then:
    assume {:partition} vendorId == 152;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} chipId != 107;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} chipId != 115;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} chipId != 117;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} chipId != 118;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} chipId != 121;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} chipId != 229;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} chipId == 230;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    goto L50;

  L50:
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    goto L28;

  anon43_Then:
    assume {:partition} chipId != 230;
    Tmp_486 := 0;
    goto L1;

  anon44_Then:
    assume {:partition} chipId == 229;
    goto L42;

  L42:
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    goto L50;

  anon45_Then:
    assume {:partition} chipId == 121;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_503;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_492;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} Tmp_503 != 0;
    assume Tmp_503 > 0;
    goto L50;

  anon46_Then:
    assume {:partition} chipId == 118;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_490;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_499;
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    goto L50;

  anon47_Then:
    assume {:partition} chipId == 117;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_494;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    goto L50;

  anon48_Then:
    assume {:partition} chipId == 115;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_505;
    assume {:nonnull} flash_15 != 0;
    assume flash_15 > 0;
    havoc Tmp_487;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    assume {:nonnull} Tmp_505 != 0;
    assume Tmp_505 > 0;
    goto L50;

  anon40_Then:
    assume {:partition} chipId == 107;
    goto L42;

  anon56_Then:
    goto L5;
}



procedure {:origName "_sdv_init15"} _sdv_init15();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init15"} _sdv_init15()
{
  var vslice_dummy_var_80: int;

  anon0:
    call {:si_unique_call 290} vslice_dummy_var_80 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "mapWin_sdv_static_function_15"} mapWin_sdv_static_function_15(actual_flash_16: int, actual_address_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "mapWin_sdv_static_function_15"} mapWin_sdv_static_function_15(actual_flash_16: int, actual_address_3: int)
{
  var {:pointer} Tmp_510: int;
  var {:pointer} sdv_202: int;
  var {:scalar} Tmp_512: int;
  var {:pointer} flash_16: int;
  var {:pointer} address_3: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_1235: int;

  anon0:
    call {:si_unique_call 291} vslice_dummy_var_81 := __HAVOC_malloc(4);
    flash_16 := actual_flash_16;
    address_3 := actual_address_3;
    assume {:nonnull} flash_16 != 0;
    assume flash_16 > 0;
    havoc vslice_dummy_var_1235;
    call {:si_unique_call 292} sdv_202 := flMap(vslice_dummy_var_1235, 0);
    assume {:nonnull} flash_16 != 0;
    assume flash_16 > 0;
    havoc Tmp_510;
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    call {:si_unique_call 293} selectFloor_sdv_static_function_15(flash_16, address_3);
    assume {:nonnull} address_3 != 0;
    assume address_3 > 0;
    assume {:nonnull} flash_16 != 0;
    assume flash_16 > 0;
    havoc Tmp_512;
    call {:si_unique_call 294} selectChip_sdv_static_function_15(flash_16, Tmp_512);
    return;
}



procedure {:origName "writeSignals_sdv_static_function_15"} writeSignals_sdv_static_function_15(actual_flash_17: int, actual_val: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "writeSignals_sdv_static_function_15"} writeSignals_sdv_static_function_15(actual_flash_17: int, actual_val: int)
{
  var {:scalar} i_8: int;
  var {:scalar} sdv_203: int;
  var {:scalar} junk_1: int;
  var {:pointer} flash_17: int;
  var vslice_dummy_var_82: int;

  anon0:
    call {:si_unique_call 295} vslice_dummy_var_82 := __HAVOC_malloc(4);
    flash_17 := actual_flash_17;
    junk_1 := 0;
    assume {:nonnull} flash_17 != 0;
    assume flash_17 > 0;
    i_8 := 0;
    goto L10;

  L10:
    call {:si_unique_call 296} i_8, junk_1 := writeSignals_sdv_static_function_15_loop_L10(i_8, sdv_203, junk_1, flash_17);
    goto L10_last;

  L10_last:
    assume {:CounterLoop 2} {:Counter "i_8"} true;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} 2 > i_8;
    assume {:nonnull} flash_17 != 0;
    assume flash_17 > 0;
    junk_1 := junk_1 + sdv_203;
    i_8 := i_8 + 1;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} i_8 >= 2;
    return;
}



procedure {:origName "setASICmode_sdv_static_function_15"} setASICmode_sdv_static_function_15(actual_flash_18: int, actual_mode_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "setASICmode_sdv_static_function_15"} setASICmode_sdv_static_function_15(actual_flash_18: int, actual_mode_1: int)
{
  var {:pointer} sdv_204: int;
  var {:pointer} p: int;
  var {:pointer} flash_18: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_1236: int;

  anon0:
    call {:si_unique_call 297} vslice_dummy_var_83 := __HAVOC_malloc(4);
    flash_18 := actual_flash_18;
    assume {:nonnull} flash_18 != 0;
    assume flash_18 > 0;
    havoc vslice_dummy_var_1236;
    call {:si_unique_call 298} sdv_204 := flMap(vslice_dummy_var_1236, 0);
    p := sdv_204;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} p != 0;
    assume {:nonnull} flash_18 != 0;
    assume flash_18 > 0;
    assume {:nonnull} flash_18 != 0;
    assume flash_18 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} p == 0;
    goto L1;
}



procedure {:origName "readFlashID_sdv_static_function_15"} readFlashID_sdv_static_function_15(actual_flash_19: int, actual_dev_4: int) returns (Tmp_518: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_518 == 0 || Tmp_518 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "readFlashID_sdv_static_function_15"} readFlashID_sdv_static_function_15(actual_flash_19: int, actual_dev_4: int) returns (Tmp_518: int)
{
  var {:scalar} i_9: int;
  var {:pointer} Tmp_519: int;
  var {:pointer} Tmp_520: int;
  var {:pointer} Tmp_521: int;
  var {:scalar} chipId_1: int;
  var {:pointer} Tmp_522: int;
  var {:scalar} sdv_205: int;
  var {:scalar} junk_2: int;
  var {:pointer} Tmp_523: int;
  var {:scalar} sdv_206: int;
  var {:scalar} sdv_207: int;
  var {:pointer} Tmp_525: int;
  var {:scalar} sdv_209: int;
  var {:pointer} Tmp_526: int;
  var {:scalar} sdv_211: int;
  var {:scalar} sdv_213: int;
  var {:pointer} Tmp_527: int;
  var {:pointer} Tmp_528: int;
  var {:pointer} Tmp_529: int;
  var {:scalar} sdv_214: int;
  var {:pointer} Tmp_532: int;
  var {:pointer} Tmp_533: int;
  var {:scalar} vendorId_1: int;
  var {:pointer} Tmp_535: int;
  var {:pointer} flash_19: int;
  var {:scalar} dev_4: int;

  anon0:
    flash_19 := actual_flash_19;
    dev_4 := actual_dev_4;
    junk_2 := 0;
    call {:si_unique_call 299} command_sdv_static_function_15(flash_19, 144);
    call {:si_unique_call 300} writeSignals_sdv_static_function_15(flash_19, 29);
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_520;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_528;
    assume {:nonnull} Tmp_528 != 0;
    assume Tmp_528 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    goto L19;

  L19:
    call {:si_unique_call 301} writeSignals_sdv_static_function_15(flash_19, 25);
    call {:si_unique_call 302} flDelayMsecs(10);
    i_9 := 0;
    goto L29;

  L29:
    call {:si_unique_call 303} i_9, junk_2 := readFlashID_sdv_static_function_15_loop_L29(i_9, sdv_205, junk_2, flash_19);
    goto L29_last;

  L29_last:
    assume {:CounterLoop 2} {:Counter "i_9"} true;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} 2 > i_9;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    junk_2 := junk_2 + sdv_205;
    i_9 := i_9 + 1;
    goto anon17_Else_dummy;

  anon17_Else_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} i_9 >= 2;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_525;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    junk_2 := junk_2 + sdv_211;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    goto L47;

  L47:
    call {:si_unique_call 304} flDelayMsecs(10);
    i_9 := 0;
    goto L51;

  L51:
    call {:si_unique_call 305} i_9, junk_2 := readFlashID_sdv_static_function_15_loop_L51(i_9, junk_2, sdv_213, flash_19);
    goto L51_last;

  L51_last:
    assume {:CounterLoop 2} {:Counter "i_9"} true;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} 2 > i_9;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    junk_2 := junk_2 + sdv_213;
    i_9 := i_9 + 1;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    assume false;
    return;

  anon18_Then:
    assume {:partition} i_9 >= 2;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_521;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    junk_2 := junk_2 + sdv_214;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    goto L69;

  L69:
    call {:si_unique_call 306} sdv_207 := isKnownMedia_sdv_static_function_15(flash_19, vendorId_1, chipId_1, dev_4);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_207 != 1;
    Tmp_518 := 0;
    goto L1;

  L1:
    return;

  anon19_Then:
    assume {:partition} sdv_207 == 1;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    call {:si_unique_call 307} writeSignals_sdv_static_function_15(flash_19, 16);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} dev_4 != 0;
    goto L80;

  L80:
    Tmp_518 := 1;
    goto L1;

  anon20_Then:
    assume {:partition} dev_4 == 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_533;
    assume {:nonnull} Tmp_533 != 0;
    assume Tmp_533 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_529;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_532;
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_519;
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_523;
    assume {:nonnull} Tmp_523 != 0;
    assume Tmp_523 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_535;
    assume {:nonnull} Tmp_535 != 0;
    assume Tmp_535 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_522;
    assume {:nonnull} Tmp_522 != 0;
    assume Tmp_522 > 0;
    goto L80;

  anon24_Then:
    goto L80;

  anon23_Then:
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    junk_2 := junk_2 + sdv_206;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_527;
    assume {:nonnull} Tmp_527 != 0;
    assume Tmp_527 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    goto L69;

  anon22_Then:
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    junk_2 := junk_2 + sdv_209;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    havoc Tmp_526;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} flash_19 != 0;
    assume flash_19 > 0;
    goto L47;

  anon21_Then:
    goto L19;
}



procedure {:origName "flRegisterDOC2000"} flRegisterDOC2000() returns (Tmp_536: int);
  free ensures {:va_keep} Tmp_536 == 102 || Tmp_536 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterDOC2000"} flRegisterDOC2000() returns (Tmp_536: int)
{
  var {:scalar} Tmp_537: int;
  var {:scalar} Tmp_539: int;

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_536 := 102;
    goto L1;

  L1:
    return;

  anon11_Then:
    havoc Tmp_537;
    Tmp_539 := Tmp_537;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume Tmp_539 <= 2;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume Tmp_539 != 2;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume Tmp_539 != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume Tmp_539 != 0;
    goto L8;

  L8:
    Tmp_536 := 0;
    goto L1;

  anon15_Then:
    assume Tmp_539 == 0;
    Tmp_539 := 0;
    goto L8;

  anon14_Then:
    assume Tmp_539 == 1;
    Tmp_539 := 1;
    goto L8;

  anon13_Then:
    assume Tmp_539 == 2;
    Tmp_539 := 2;
    goto L8;

  anon12_Then:
    assume Tmp_539 > 2;
    goto L8;
}



procedure {:origName "check43Format"} check43Format(actual_flash_20: int) returns (Tmp_540: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_540 == 0 || Tmp_540 == 106;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "check43Format"} check43Format(actual_flash_20: int) returns (Tmp_540: int)
{
  var {:scalar} i_10: int;
  var {:scalar} blockShift: int;
  var {:scalar} Tmp_541: int;
  var {:scalar} Tmp_542: int;
  var {:scalar} fl_16: int;
  var {:scalar} sdv_217: int;
  var {:scalar} Tmp_543: int;
  var {:scalar} Tmp_544: int;
  var {:pointer} buf_4: int;
  var {:scalar} Tmp_545: int;
  var {:scalar} blockSize: int;
  var {:pointer} sdv_221: int;
  var {:scalar} blocksPerUnit: int;
  var {:scalar} Tmp_546: int;
  var {:scalar} addr_1: int;
  var {:scalar} sdv_224: int;
  var {:scalar} Tmp_547: int;
  var {:scalar} fl_17: int;
  var {:scalar} status_3: int;
  var {:scalar} mediaHeaderBlock: int;
  var {:scalar} Tmp_549: int;
  var {:scalar} offset_1: int;
  var {:scalar} mediaSize: int;
  var {:scalar} Tmp_551: int;
  var {:pointer} flash_20: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_1237: int;

  anon0:
    flash_20 := actual_flash_20;
    call {:si_unique_call 308} vslice_dummy_var_84 := __HAVOC_malloc(24);
    assume {:nonnull} flash_20 != 0;
    assume flash_20 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    Tmp_540 := 0;
    goto L1;

  L1:
    return;

  anon37_Then:
    assume {:nonnull} flash_20 != 0;
    assume flash_20 > 0;
    havoc vslice_dummy_var_1237;
    call {:si_unique_call 309} sdv_217 := flSocketNoOf(vslice_dummy_var_1237);
    call {:si_unique_call 310} sdv_221 := flBufferOf(sdv_217);
    assume {:nonnull} sdv_221 != 0;
    assume sdv_221 > 0;
    havoc buf_4;
    assume {:nonnull} flash_20 != 0;
    assume flash_20 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} flash_20 != 0;
    assume flash_20 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_3 == 112;
    assume {:nonnull} flash_20 != 0;
    assume flash_20 > 0;
    havoc mediaSize;
    call {:si_unique_call 311} blockSize := corral_nondet();
    addr_1 := 0;
    goto L32;

  L32:
    call {:si_unique_call 312} Tmp_546, addr_1, fl_17, status_3, offset_1 := check43Format_loop_L32(buf_4, blockSize, Tmp_546, addr_1, sdv_224, fl_17, status_3, offset_1, mediaSize, flash_20);
    goto L32_last;

  L32_last:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} mediaSize > addr_1;
    assume {:IndirectCall} true;
    assume {:nonnull} flash_20 != 0;
    assume flash_20 > 0;
    call {:si_unique_call 313} fl_17 := flashRead_sdv_static_function_3(flash_20, addr_1, buf_4, 5, 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} fl_17 != 0;
    Tmp_540 := fl_17;
    goto L1;

  anon41_Then:
    assume {:partition} fl_17 == 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_224 != 0;
    addr_1 := addr_1 + blockSize;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    assume false;
    return;

  anon42_Then:
    assume {:partition} sdv_224 == 0;
    goto L33;

  L33:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} addr_1 == mediaSize;
    Tmp_540 := 0;
    goto L1;

  anon40_Then:
    assume {:partition} addr_1 != mediaSize;
    offset_1 := addr_1 + 512;
    status_3 := 0;
    goto L50;

  L50:
    call {:si_unique_call 314} Tmp_546, status_3, offset_1 := check43Format_loop_L50(buf_4, blockSize, Tmp_546, addr_1, status_3, offset_1, flash_20);
    goto L50_last;

  L50_last:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} addr_1 + blockSize > offset_1;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} status_3 == 0;
    Tmp_546 := addr_1 + offset_1;
    assume {:IndirectCall} true;
    assume {:nonnull} flash_20 != 0;
    assume flash_20 > 0;
    call {:si_unique_call 315} status_3 := flashRead_sdv_static_function_3(flash_20, Tmp_546, buf_4, 512, 2);
    offset_1 := offset_1 + 512;
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    assume false;
    return;

  anon45_Then:
    assume {:partition} status_3 != 0;
    goto L51;

  L51:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} offset_1 != addr_1 + 1024;
    call {:si_unique_call 316} offset_1 := corral_nondet();
    blockShift := 0;
    goto L62;

  L62:
    call {:si_unique_call 317} blockShift, offset_1 := check43Format_loop_L62(blockShift, offset_1, mediaSize);
    goto L62_last;

  L62_last:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} mediaSize > offset_1;
    call {:si_unique_call 318} offset_1 := corral_nondet();
    blockShift := blockShift + 1;
    goto anon46_Else_dummy;

  anon46_Else_dummy:
    assume false;
    return;

  anon46_Then:
    assume {:partition} offset_1 >= mediaSize;
    call {:si_unique_call 319} blocksPerUnit := corral_nondet();
    call {:si_unique_call 320} mediaHeaderBlock := corral_nondet();
    offset_1 := 0;
    goto L68;

  L68:
    call {:si_unique_call 321} i_10, Tmp_542, fl_16, Tmp_544, Tmp_545, Tmp_547, status_3, Tmp_549, offset_1, Tmp_551, vslice_dummy_var_85, vslice_dummy_var_86 := check43Format_loop_L68(i_10, Tmp_542, fl_16, Tmp_544, buf_4, Tmp_545, blocksPerUnit, addr_1, Tmp_547, status_3, mediaHeaderBlock, Tmp_549, offset_1, Tmp_551, flash_20, vslice_dummy_var_85, vslice_dummy_var_86);
    goto L68_last;

  L68_last:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    Tmp_547 := addr_1 + offset_1 + 512;
    assume {:IndirectCall} true;
    assume {:nonnull} flash_20 != 0;
    assume flash_20 > 0;
    call {:si_unique_call 322} fl_16 := flashRead_sdv_static_function_3(flash_20, Tmp_547, buf_4, 512, 2);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} fl_16 != 0;
    Tmp_540 := fl_16;
    goto L1;

  anon48_Then:
    assume {:partition} fl_16 == 0;
    i_10 := 0;
    goto L80;

  L80:
    call {:si_unique_call 323} i_10, Tmp_542, Tmp_544, Tmp_545, status_3, Tmp_549, Tmp_551, vslice_dummy_var_85, vslice_dummy_var_86 := check43Format_loop_L80(i_10, Tmp_542, Tmp_544, buf_4, Tmp_545, blocksPerUnit, status_3, mediaHeaderBlock, Tmp_549, offset_1, Tmp_551, flash_20, vslice_dummy_var_85, vslice_dummy_var_86);
    goto L80_last;

  L80_last:
    assume {:CounterLoop 512} {:Counter "i_10"} true;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} 512 > i_10;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} i_10 + offset_1 == mediaHeaderBlock;
    goto L85;

  L85:
    i_10 := i_10 + 1;
    goto L85_dummy;

  L85_dummy:
    assume false;
    return;

  anon50_Then:
    assume {:partition} i_10 + offset_1 != mediaHeaderBlock;
    Tmp_549 := i_10;
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    Tmp_551 := blocksPerUnit;
    Tmp_545 := i_10 + offset_1;
    assume {:IndirectCall} true;
    assume {:nonnull} flash_20 != 0;
    assume flash_20 > 0;
    call {:si_unique_call 324} status_3 := flashNoErase_sdv_static_function_3(flash_20, Tmp_545, Tmp_551);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} status_3 != 0;
    Tmp_542 := i_10 + offset_1;
    call {:si_unique_call 325} vslice_dummy_var_85 := markUnitBad(flash_20, Tmp_542);
    goto L85;

  anon51_Then:
    assume {:partition} status_3 == 0;
    goto L85;

  anon54_Then:
    Tmp_544 := i_10 + offset_1;
    call {:si_unique_call 326} vslice_dummy_var_86 := markUnitBad(flash_20, Tmp_544);
    goto L85;

  anon49_Then:
    assume {:partition} i_10 >= 512;
    offset_1 := offset_1 + 512;
    goto anon49_Then_dummy;

  anon49_Then_dummy:
    assume false;
    return;

  anon47_Then:
    Tmp_543 := blocksPerUnit;
    assume {:IndirectCall} true;
    assume {:nonnull} flash_20 != 0;
    assume flash_20 > 0;
    call {:si_unique_call 327} status_3 := flashNoErase_sdv_static_function_3(flash_20, mediaHeaderBlock, Tmp_543);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} status_3 != 0;
    Tmp_541 := mediaHeaderBlock;
    call {:si_unique_call 328} vslice_dummy_var_87 := markUnitBad(flash_20, Tmp_541);
    goto L21;

  L21:
    Tmp_540 := 0;
    goto L1;

  anon52_Then:
    assume {:partition} status_3 == 0;
    goto L21;

  anon44_Then:
    assume {:partition} offset_1 == addr_1 + 1024;
    goto anon44_Then_dummy;

  anon44_Then_dummy:
    assume false;
    return;

  anon43_Then:
    assume {:partition} offset_1 >= addr_1 + blockSize;
    goto L51;

  anon39_Then:
    assume {:partition} addr_1 >= mediaSize;
    goto L33;

  anon38_Then:
    assume {:partition} status_3 != 112;
    goto L21;

  anon53_Then:
    Tmp_540 := 106;
    goto L1;
}



procedure {:origName "flMount"} flMount(actual_volNo: int, actual_socketNo_2: int, actual_tl: int, actual_useFilters: int, actual_flash_21: int) returns (Tmp_552: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_552 == 34 || Tmp_552 == 0 || Tmp_552 == 21 || Tmp_552 == 26 || Tmp_552 == 111;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flMount"} flMount(actual_volNo: int, actual_socketNo_2: int, actual_tl: int, actual_useFilters: int, actual_flash_21: int) returns (Tmp_552: int)
{
  var {:scalar} Tmp_555: int;
  var {:pointer} volForCallback: int;
  var {:scalar} iTL: int;
  var {:scalar} sdv_231: int;
  var {:scalar} Tmp_556: int;
  var {:scalar} Tmp_557: int;
  var {:scalar} Tmp_558: int;
  var {:scalar} flashStatus: int;
  var {:scalar} status_4: int;
  var {:pointer} socket: int;
  var {:scalar} socketNo_2: int;
  var {:pointer} tl: int;
  var {:scalar} useFilters: int;
  var {:pointer} flash_21: int;

  anon0:
    socketNo_2 := actual_socketNo_2;
    tl := actual_tl;
    useFilters := actual_useFilters;
    flash_21 := actual_flash_21;
    volForCallback := 0;
    call {:si_unique_call 329} socket := flSocketOf(socketNo_2);
    status_4 := 26;
    call {:si_unique_call 330} flashStatus := flIdentifyFlash(socket, flash_21);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} flashStatus != 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} flashStatus != 26;
    Tmp_552 := flashStatus;
    goto L1;

  L1:
    return;

  anon40_Then:
    assume {:partition} flashStatus == 26;
    goto L19;

  L19:
    assume {:nonnull} tl != 0;
    assume tl > 0;
    assume {:nonnull} tl != 0;
    assume tl > 0;
    assume {:nonnull} tl != 0;
    assume tl > 0;
    assume {:nonnull} tl != 0;
    assume tl > 0;
    assume {:nonnull} tl != 0;
    assume tl > 0;
    assume {:nonnull} tl != 0;
    assume tl > 0;
    iTL := 0;
    goto L28;

  L28:
    call {:si_unique_call 331} iTL, Tmp_556, Tmp_557 := flMount_loop_L28(iTL, Tmp_556, Tmp_557, flashStatus, status_4, flash_21);
    goto L28_last;

  L28_last:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} status_4 != 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_4 != 115;
    Tmp_556 := iTL;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} flashStatus != 0;
    goto L37;

  L37:
    Tmp_557 := iTL;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume Tmp_557 != 2;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume Tmp_557 != 1;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume false;
    return;

  anon53_Then:
    assume Tmp_557 == 0;
    goto L33;

  L33:
    iTL := iTL + 1;
    goto L33_dummy;

  L33_dummy:
    assume false;
    return;

  anon52_Then:
    assume Tmp_557 == 1;
    goto L33;

  anon51_Then:
    assume Tmp_557 == 2;
    goto L33;

  anon45_Then:
    assume {:partition} flashStatus == 0;
    goto L37;

  anon50_Then:
    goto L33;

  anon44_Then:
    assume {:partition} status_4 == 115;
    goto L29;

  L29:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_4 != 0;
    goto L42;

  L42:
    Tmp_552 := status_4;
    goto L1;

  anon42_Then:
    assume {:partition} status_4 == 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} volForCallback != 0;
    assume {:nonnull} volForCallback != 0;
    assume volForCallback > 0;
    goto L43;

  L43:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} useFilters != 0;
    iTL := 0;
    goto L48;

  L48:
    call {:si_unique_call 332} Tmp_555, iTL, Tmp_558 := flMount_loop_L48(Tmp_555, iTL, sdv_231, Tmp_558);
    goto L48_last;

  L48_last:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    Tmp_555 := iTL;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L53;

  L53:
    iTL := iTL + 1;
    goto L53_dummy;

  L53_dummy:
    assume false;
    return;

  anon54_Then:
    Tmp_558 := iTL;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume Tmp_558 != 2;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume Tmp_558 != 1;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume false;
    return;

  anon57_Then:
    assume Tmp_558 == 0;
    goto L54;

  L54:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_231 != 0;
    goto L53;

  anon49_Then:
    assume {:partition} sdv_231 == 0;
    goto L42;

  anon56_Then:
    assume Tmp_558 == 1;
    goto L54;

  anon55_Then:
    assume Tmp_558 == 2;
    goto L54;

  anon48_Then:
    goto L42;

  anon47_Then:
    assume {:partition} useFilters == 0;
    goto L42;

  anon46_Then:
    assume {:partition} volForCallback == 0;
    goto L43;

  anon43_Then:
    assume {:partition} status_4 == 0;
    goto L29;

  anon41_Then:
    goto L29;

  anon39_Then:
    assume {:partition} flashStatus == 0;
    goto L19;
}



procedure {:origName "flPreMount"} flPreMount(actual_callType: int, actual_ioreq_2: int, actual_flash_22: int) returns (Tmp_559: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_559 == 0 || Tmp_559 == 34 || Tmp_559 == 21 || Tmp_559 == 26 || Tmp_559 == 111 || Tmp_559 == 106;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flPreMount"} flPreMount(actual_callType: int, actual_ioreq_2: int, actual_flash_22: int) returns (Tmp_559: int)
{
  var {:scalar} badBlockNo: int;
  var {:scalar} Tmp_560: int;
  var {:scalar} Tmp_561: int;
  var {:scalar} Tmp_562: int;
  var {:scalar} iUnit: int;
  var {:scalar} Tmp_563: int;
  var {:scalar} unitsPerFloor: int;
  var {:scalar} layerStatus: int;
  var {:scalar} callStatus: int;
  var {:scalar} Tmp_567: int;
  var {:scalar} iTL_1: int;
  var {:pointer} sdv_237: int;
  var {:scalar} endUnit: int;
  var {:scalar} bUnit: int;
  var {:pointer} socket_1: int;
  var {:scalar} callType: int;
  var {:pointer} ioreq_2: int;
  var {:pointer} flash_22: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_1238: int;

  anon0:
    callType := actual_callType;
    ioreq_2 := actual_ioreq_2;
    flash_22 := actual_flash_22;
    layerStatus := 26;
    assume {:nonnull} ioreq_2 != 0;
    assume ioreq_2 > 0;
    havoc Tmp_560;
    call {:si_unique_call 333} socket_1 := flSocketOf(Tmp_560);
    assume {:nonnull} socket_1 != 0;
    assume socket_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} callType == 807;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} socket_1 != 0;
    assume {:nonnull} socket_1 != 0;
    assume socket_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L20;

  L20:
    assume {:nonnull} ioreq_2 != 0;
    assume ioreq_2 > 0;
    Tmp_559 := 0;
    goto L1;

  L1:
    return;

  anon52_Then:
    goto L16;

  L16:
    call {:si_unique_call 334} callStatus := flIdentifyFlash(socket_1, flash_22);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} callStatus != 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} callStatus != 26;
    Tmp_559 := callStatus;
    goto L1;

  anon54_Then:
    assume {:partition} callStatus == 26;
    goto L25;

  L25:
    iTL_1 := 0;
    goto L28;

  L28:
    call {:si_unique_call 335} Tmp_562, Tmp_563, iTL_1 := flPreMount_loop_L28(Tmp_562, Tmp_563, layerStatus, iTL_1);
    goto L28_last;

  L28_last:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} layerStatus != 0;
    Tmp_563 := iTL_1;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    Tmp_562 := iTL_1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume Tmp_562 != 2;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume Tmp_562 != 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume false;
    return;

  anon71_Then:
    assume Tmp_562 == 0;
    goto L32;

  L32:
    iTL_1 := iTL_1 + 1;
    goto L32_dummy;

  L32_dummy:
    assume false;
    return;

  anon70_Then:
    assume Tmp_562 == 1;
    goto L32;

  anon69_Then:
    assume Tmp_562 == 2;
    goto L32;

  anon68_Then:
    goto L32;

  anon57_Then:
    assume {:partition} layerStatus == 0;
    goto L29;

  L29:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} layerStatus != 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} callType != 718;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} callType == 807;
    assume {:nonnull} ioreq_2 != 0;
    assume ioreq_2 > 0;
    Tmp_559 := 0;
    goto L1;

  anon67_Then:
    assume {:partition} callType != 807;
    Tmp_559 := 106;
    goto L1;

  anon58_Then:
    assume {:partition} callType == 718;
    call {:si_unique_call 336} endUnit := corral_nondet();
    assume {:nonnull} flash_22 != 0;
    assume flash_22 > 0;
    havoc unitsPerFloor;
    assume {:nonnull} ioreq_2 != 0;
    assume ioreq_2 > 0;
    call {:si_unique_call 337} bUnit := corral_nondet();
    assume {:nonnull} ioreq_2 != 0;
    assume ioreq_2 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 338} endUnit := corral_nondet();
    goto L51;

  L51:
    assume {:nonnull} flash_22 != 0;
    assume flash_22 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto L55;

  L55:
    Tmp_559 := 106;
    goto L1;

  anon59_Then:
    assume {:nonnull} flash_22 != 0;
    assume flash_22 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} flash_22 != 0;
    assume flash_22 > 0;
    havoc iUnit;
    badBlockNo := 0;
    goto L58;

  L58:
    call {:si_unique_call 339} badBlockNo, Tmp_561, iUnit, Tmp_567, sdv_237, bUnit, vslice_dummy_var_88, vslice_dummy_var_89 := flPreMount_loop_L58(badBlockNo, Tmp_561, iUnit, unitsPerFloor, callStatus, Tmp_567, sdv_237, endUnit, bUnit, ioreq_2, flash_22, vslice_dummy_var_88, vslice_dummy_var_89);
    goto L58_last;

  L58_last:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} endUnit > iUnit;
    assume {:nonnull} ioreq_2 != 0;
    assume ioreq_2 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} bUnit == iUnit;
    badBlockNo := badBlockNo + 1;
    Tmp_567 := badBlockNo * 4;
    assume {:nonnull} ioreq_2 != 0;
    assume ioreq_2 > 0;
    havoc vslice_dummy_var_1238;
    call {:si_unique_call 340} sdv_237 := flAddLongToFarPointer(vslice_dummy_var_1238, Tmp_567);
    call {:si_unique_call 341} bUnit := corral_nondet();
    assume {:nonnull} flash_22 != 0;
    assume flash_22 > 0;
    call {:si_unique_call 342} vslice_dummy_var_88 := markUnitBad(flash_22, iUnit);
    goto L77;

  L77:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} INTDIV(iUnit + 1, unitsPerFloor) != 0;
    Tmp_561 := 1;
    goto L80;

  L80:
    iUnit := iUnit + Tmp_561;
    goto L80_dummy;

  L80_dummy:
    assume false;
    return;

  anon65_Then:
    assume {:partition} INTDIV(iUnit + 1, unitsPerFloor) == 0;
    assume {:nonnull} flash_22 != 0;
    assume flash_22 > 0;
    havoc Tmp_561;
    goto L80;

  anon64_Then:
    assume {:partition} bUnit != iUnit;
    goto L61;

  L61:
    assume {:nonnull} flash_22 != 0;
    assume flash_22 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} callStatus != 0;
    call {:si_unique_call 343} vslice_dummy_var_89 := markUnitBad(flash_22, iUnit);
    goto L77;

  anon66_Then:
    assume {:partition} callStatus == 0;
    goto L77;

  anon63_Then:
    goto L61;

  anon62_Then:
    assume {:partition} iUnit >= endUnit;
    Tmp_559 := 0;
    goto L1;

  anon61_Then:
    goto L55;

  anon60_Then:
    goto L51;

  anon72_Then:
    goto L51;

  anon56_Then:
    assume {:partition} layerStatus == 0;
    Tmp_559 := callStatus;
    goto L1;

  anon55_Then:
    goto L29;

  anon53_Then:
    assume {:partition} callStatus == 0;
    goto L25;

  anon51_Then:
    assume {:partition} socket_1 == 0;
    goto L20;

  anon50_Then:
    assume {:partition} callType != 807;
    goto L16;

  anon49_Then:
    assume {:nonnull} ioreq_2 != 0;
    assume ioreq_2 > 0;
    Tmp_559 := 0;
    goto L1;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_90: int;

  anon0:
    call {:si_unique_call 344} vslice_dummy_var_90 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "flFormat"} flFormat(actual_volNo_1: int, actual_formatParams: int, actual_flash_23: int) returns (Tmp_572: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_572 == 34 || Tmp_572 == 0 || Tmp_572 == 21 || Tmp_572 == 26 || Tmp_572 == 111 || Tmp_572 == 106 || Tmp_572 == 51;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flFormat"} flFormat(actual_volNo_1: int, actual_formatParams: int, actual_flash_23: int) returns (Tmp_572: int)
{
  var {:scalar} Tmp_573: int;
  var {:pointer} Tmp_575: int;
  var {:scalar} partitionNo: int;
  var {:scalar} Tmp_576: int;
  var {:scalar} iTL_2: int;
  var {:scalar} fl_18: int;
  var {:pointer} Tmp_578: int;
  var {:scalar} flashStatus_1: int;
  var {:scalar} status_5: int;
  var {:pointer} socket_2: int;
  var {:pointer} partitionPtr: int;
  var {:pointer} Tmp_579: int;
  var {:scalar} volNo_1: int;
  var {:pointer} formatParams: int;
  var {:pointer} flash_23: int;

  anon0:
    volNo_1 := actual_volNo_1;
    formatParams := actual_formatParams;
    flash_23 := actual_flash_23;
    call {:si_unique_call 345} socket_2 := flSocketOf(volNo_1);
    status_5 := 26;
    call {:si_unique_call 346} flashStatus_1 := flIdentifyFlash(socket_2, flash_23);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} flashStatus_1 != 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} flashStatus_1 != 26;
    Tmp_572 := flashStatus_1;
    goto L1;

  L1:
    return;

  anon41_Then:
    assume {:partition} flashStatus_1 == 26;
    goto L19;

  L19:
    assume {:nonnull} flash_23 != 0;
    assume flash_23 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L23;

  L23:
    partitionNo := 0;
    assume {:nonnull} formatParams != 0;
    assume formatParams > 0;
    havoc partitionPtr;
    goto L25;

  L25:
    call {:si_unique_call 347} partitionNo, Tmp_578 := flFormat_loop_L25(partitionNo, Tmp_578, partitionPtr, formatParams);
    goto L25_last;

  L25_last:
    assume {:nonnull} formatParams != 0;
    assume formatParams > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    call {:si_unique_call 348} fl_18 := check43Format(flash_23);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} fl_18 != 0;
    Tmp_572 := fl_18;
    goto L1;

  anon44_Then:
    assume {:partition} fl_18 == 0;
    iTL_2 := 0;
    goto L38;

  L38:
    call {:si_unique_call 349} Tmp_573, Tmp_576, iTL_2 := flFormat_loop_L38(Tmp_573, Tmp_576, iTL_2, flashStatus_1, status_5, flash_23);
    goto L38_last;

  L38_last:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} status_5 == 26;
    Tmp_576 := iTL_2;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} flashStatus_1 != 0;
    goto L46;

  L46:
    Tmp_573 := iTL_2;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume Tmp_573 != 2;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume Tmp_573 != 1;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume false;
    return;

  anon55_Then:
    assume Tmp_573 == 0;
    goto L42;

  L42:
    iTL_2 := iTL_2 + 1;
    goto L42_dummy;

  L42_dummy:
    assume false;
    return;

  anon54_Then:
    assume Tmp_573 == 1;
    goto L42;

  anon53_Then:
    assume Tmp_573 == 2;
    goto L42;

  anon47_Then:
    assume {:partition} flashStatus_1 == 0;
    goto L46;

  anon52_Then:
    goto L42;

  anon46_Then:
    assume {:partition} status_5 != 26;
    goto L39;

  L39:
    Tmp_572 := status_5;
    goto L1;

  anon45_Then:
    goto L39;

  anon43_Then:
    assume {:nonnull} partitionPtr != 0;
    assume partitionPtr > 0;
    havoc Tmp_578;
    assume {:nonnull} Tmp_578 != 0;
    assume Tmp_578 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    Tmp_572 := 51;
    goto L1;

  anon51_Then:
    partitionNo := partitionNo + 1;
    goto anon51_Then_dummy;

  anon51_Then_dummy:
    assume false;
    return;

  anon40_Then:
    assume {:nonnull} formatParams != 0;
    assume formatParams > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L51;

  L51:
    Tmp_572 := 106;
    goto L1;

  anon42_Then:
    assume {:nonnull} formatParams != 0;
    assume formatParams > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} formatParams != 0;
    assume formatParams > 0;
    havoc Tmp_579;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L52;

  L52:
    assume {:nonnull} formatParams != 0;
    assume formatParams > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} formatParams != 0;
    assume formatParams > 0;
    havoc Tmp_575;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L54;

  L54:
    assume {:nonnull} formatParams != 0;
    assume formatParams > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L51;

  anon50_Then:
    goto L23;

  anon57_Then:
    goto L51;

  anon49_Then:
    goto L54;

  anon56_Then:
    goto L51;

  anon48_Then:
    goto L52;

  anon39_Then:
    assume {:partition} flashStatus_1 == 0;
    goto L19;
}



procedure {:origName "markUnitBad"} markUnitBad(actual_flash_24: int, actual_badUnit: int) returns (Tmp_580: int);
  free ensures {:va_keep} Tmp_580 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "markUnitBad"} markUnitBad(actual_flash_24: int, actual_badUnit: int) returns (Tmp_580: int)
{
  var {:scalar} sdv_244: int;
  var {:scalar} offset_2: int;
  var {:pointer} flash_24: int;
  var vslice_dummy_var_91: int;

  anon0:
    flash_24 := actual_flash_24;
    offset_2 := 0;
    goto L8;

  L8:
    call {:si_unique_call 350} offset_2, vslice_dummy_var_91 := markUnitBad_loop_L8(sdv_244, offset_2, flash_24, vslice_dummy_var_91);
    goto L8_last;

  L8_last:
    assume {:nonnull} flash_24 != 0;
    assume flash_24 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 351} vslice_dummy_var_91 := corral_nondet();
    assume {:nonnull} flash_24 != 0;
    assume flash_24 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} sdv_244 != 0;
    assume {:nonnull} flash_24 != 0;
    assume flash_24 > 0;
    havoc offset_2;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    assume false;
    return;

  anon6_Then:
    assume {:partition} sdv_244 == 0;
    goto L9;

  L9:
    Tmp_580 := 0;
    return;

  anon5_Then:
    goto L9;
}



procedure {:origName "flRegisterI28F008"} flRegisterI28F008() returns (Tmp_583: int);
  free ensures {:va_keep} Tmp_583 == 102 || Tmp_583 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterI28F008"} flRegisterI28F008() returns (Tmp_583: int)
{
  var {:scalar} Tmp_584: int;
  var {:scalar} Tmp_585: int;

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_583 := 102;
    goto L1;

  L1:
    return;

  anon11_Then:
    havoc Tmp_584;
    Tmp_585 := Tmp_584;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume Tmp_585 <= 2;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume Tmp_585 != 2;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume Tmp_585 != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume Tmp_585 != 0;
    goto L8;

  L8:
    Tmp_583 := 0;
    goto L1;

  anon15_Then:
    assume Tmp_585 == 0;
    Tmp_585 := 0;
    goto L8;

  anon14_Then:
    assume Tmp_585 == 1;
    Tmp_585 := 1;
    goto L8;

  anon13_Then:
    assume Tmp_585 == 2;
    Tmp_585 := 2;
    goto L8;

  anon12_Then:
    assume Tmp_585 > 2;
    goto L8;
}



procedure {:origName "_sdv_init21"} _sdv_init21();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init21"} _sdv_init21()
{
  var vslice_dummy_var_92: int;

  anon0:
    call {:si_unique_call 352} vslice_dummy_var_92 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "i28f008Identify"} i28f008Identify(actual_pVol_23: int) returns (Tmp_589: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_589 == 26 || Tmp_589 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "i28f008Identify"} i28f008Identify(actual_pVol_23: int) returns (Tmp_589: int)
{
  var {:scalar} i_11: int;
  var {:scalar} Tmp_590: int;
  var {:pointer} flashPtr_7: int;
  var {:pointer} sdv_246: int;
  var {:scalar} iChip: int;
  var {:scalar} fl_19: int;
  var {:scalar} idOffset: int;
  var {:pointer} pVol_23: int;
  var vslice_dummy_var_1239: int;
  var vslice_dummy_var_1240: int;
  var vslice_dummy_var_1241: int;
  var vslice_dummy_var_1242: int;
  var vslice_dummy_var_1243: int;

  anon0:
    pVol_23 := actual_pVol_23;
    idOffset := 0;
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    havoc vslice_dummy_var_1239;
    call {:si_unique_call 353} flSetWindowBusWidth(vslice_dummy_var_1239, 16);
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    havoc vslice_dummy_var_1240;
    call {:si_unique_call 354} flSetWindowSpeed(vslice_dummy_var_1240, 150);
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    havoc vslice_dummy_var_1241;
    call {:si_unique_call 355} flSetWindowSize(vslice_dummy_var_1241, 2);
    call {:si_unique_call 356} flIntelIdentify(pVol_23, 0, 0);
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L20;

  L20:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    havoc vslice_dummy_var_1242;
    call {:si_unique_call 357} flSetWindowBusWidth(vslice_dummy_var_1242, 8);
    call {:si_unique_call 358} flIntelIdentify(pVol_23, 0, idOffset);
    goto L21;

  L21:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto L30;

  L30:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto L36;

  L36:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    call {:si_unique_call 359} fl_19 := flIntelSize(pVol_23, 0, idOffset);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} fl_19 != 0;
    Tmp_589 := fl_19;
    goto L1;

  L1:
    return;

  anon28_Then:
    assume {:partition} fl_19 == 0;
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto L45;

  L45:
    iChip := 0;
    goto L47;

  L47:
    call {:si_unique_call 360} i_11, Tmp_590, flashPtr_7, sdv_246, iChip := i28f008Identify_loop_L47(i_11, Tmp_590, flashPtr_7, sdv_246, iChip, pVol_23);
    goto L47_last;

  L47_last:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    havoc Tmp_590;
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    havoc vslice_dummy_var_1243;
    call {:si_unique_call 361} sdv_246 := flMap(vslice_dummy_var_1243, Tmp_590);
    flashPtr_7 := sdv_246;
    i_11 := 0;
    goto L57;

  L57:
    call {:si_unique_call 362} i_11 := i28f008Identify_loop_L57(i_11, flashPtr_7, pVol_23);
    goto L57_last;

  L57_last:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    i_11 := i_11 + 1;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    assume false;
    return;

  anon31_Then:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    havoc iChip;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    assume false;
    return;

  anon30_Then:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    Tmp_589 := 0;
    goto L1;

  anon29_Then:
    goto L45;

  anon32_Then:
    Tmp_589 := 26;
    goto L1;

  anon33_Then:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto L36;

  anon34_Then:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto L29;

  L29:
    assume {:nonnull} pVol_23 != 0;
    assume pVol_23 > 0;
    goto L36;

  anon35_Then:
    goto L29;

  anon36_Then:
    goto L30;

  anon27_Then:
    goto L29;

  anon26_Then:
    goto L21;

  anon25_Then:
    idOffset := 524288;
    call {:si_unique_call 363} flIntelIdentify(pVol_23, 0, idOffset);
    goto L20;
}



procedure {:origName "_sdv_init14"} _sdv_init14();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init14"} _sdv_init14()
{
  var vslice_dummy_var_93: int;

  anon0:
    call {:si_unique_call 364} vslice_dummy_var_93 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "absDelete_sdv_static_function_24"} absDelete_sdv_static_function_24(actual_pVol_24: int, actual_ioreq_3: int) returns (Tmp_595: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "absDelete_sdv_static_function_24"} absDelete_sdv_static_function_24(actual_pVol_24: int, actual_ioreq_3: int) returns (Tmp_595: int)
{
  var {:pointer} pVol_24: int;
  var {:pointer} ioreq_3: int;

  anon0:
    pVol_24 := actual_pVol_24;
    ioreq_3 := actual_ioreq_3;
    assume {:nonnull} ioreq_3 != 0;
    assume ioreq_3 > 0;
    assume {:nonnull} pVol_24 != 0;
    assume pVol_24 > 0;
    assume {:nonnull} pVol_24 != 0;
    assume pVol_24 > 0;
    return;
}



procedure {:origName "absWrite_sdv_static_function_24"} absWrite_sdv_static_function_24(actual_pVol_25: int, actual_ioreq_4: int) returns (Tmp_597: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "absWrite_sdv_static_function_24"} absWrite_sdv_static_function_24(actual_pVol_25: int, actual_ioreq_4: int) returns (Tmp_597: int)
{
  var {:scalar} currSector: int;
  var {:scalar} fl_20: int;
  var {:scalar} iSector: int;
  var {:pointer} userBuffer: int;
  var {:scalar} fl_21: int;
  var {:scalar} sectorCount: int;
  var {:pointer} pVol_25: int;
  var {:pointer} ioreq_4: int;
  var vslice_dummy_var_94: int;

  anon0:
    pVol_25 := actual_pVol_25;
    ioreq_4 := actual_ioreq_4;
    assume {:nonnull} ioreq_4 != 0;
    assume ioreq_4 > 0;
    havoc userBuffer;
    assume {:nonnull} ioreq_4 != 0;
    assume ioreq_4 > 0;
    assume {:nonnull} pVol_25 != 0;
    assume pVol_25 > 0;
    havoc currSector;
    assume {:nonnull} ioreq_4 != 0;
    assume ioreq_4 > 0;
    havoc sectorCount;
    assume {:nonnull} pVol_25 != 0;
    assume pVol_25 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} pVol_25 != 0;
    assume pVol_25 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    iSector := 0;
    goto L14;

  L14:
    call {:si_unique_call 365} currSector, iSector, vslice_dummy_var_94 := absWrite_sdv_static_function_24_loop_L14(currSector, iSector, userBuffer, sectorCount, pVol_25, vslice_dummy_var_94);
    goto L14_last;

  L14_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sectorCount > iSector;
    assume {:nonnull} pVol_25 != 0;
    assume pVol_25 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} pVol_25 != 0;
    assume pVol_25 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 366} vslice_dummy_var_94 := replaceFATsector(pVol_25, currSector, userBuffer);
    goto L17;

  L17:
    iSector := iSector + 1;
    currSector := currSector + 1;
    goto L17_dummy;

  L17_dummy:
    assume false;
    return;

  anon23_Then:
    goto L17;

  anon22_Then:
    goto L17;

  anon21_Then:
    assume {:partition} iSector >= sectorCount;
    assume {:nonnull} ioreq_4 != 0;
    assume ioreq_4 > 0;
    havoc userBuffer;
    assume {:nonnull} ioreq_4 != 0;
    assume ioreq_4 > 0;
    assume {:nonnull} pVol_25 != 0;
    assume pVol_25 > 0;
    havoc currSector;
    goto L10;

  L10:
    assume {:nonnull} pVol_25 != 0;
    assume pVol_25 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} pVol_25 != 0;
    assume pVol_25 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} fl_21 != 0;
    Tmp_597 := fl_21;
    goto L1;

  L1:
    return;

  anon24_Then:
    assume {:partition} fl_21 == 0;
    goto L32;

  L32:
    Tmp_597 := 0;
    goto L1;

  anon19_Then:
    assume {:nonnull} ioreq_4 != 0;
    assume ioreq_4 > 0;
    goto L34;

  L34:
    call {:si_unique_call 367} currSector := absWrite_sdv_static_function_24_loop_L34(currSector, fl_20, userBuffer, sectorCount, pVol_25, ioreq_4);
    goto L34_last;

  L34_last:
    assume {:nonnull} ioreq_4 != 0;
    assume ioreq_4 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} pVol_25 != 0;
    assume pVol_25 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} fl_20 != 0;
    Tmp_597 := fl_20;
    goto L1;

  anon26_Then:
    assume {:partition} fl_20 == 0;
    assume {:nonnull} ioreq_4 != 0;
    assume ioreq_4 > 0;
    currSector := currSector + 1;
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    assume false;
    return;

  anon25_Then:
    goto L32;

  anon20_Then:
    goto L10;

  anon27_Then:
    goto L10;
}



procedure {:origName "bdFormatLogicalDrive_sdv_static_function_24"} bdFormatLogicalDrive_sdv_static_function_24(actual_pVol_26: int, actual_ioreq_5: int) returns (Tmp_599: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdFormatLogicalDrive_sdv_static_function_24"} bdFormatLogicalDrive_sdv_static_function_24(actual_pVol_26: int, actual_ioreq_5: int) returns (Tmp_599: int)
{
  var {:scalar} fl_22: int;
  var {:pointer} userFp: int;
  var {:scalar} fl_23: int;
  var {:scalar} Tmp_600: int;
  var {:scalar} volNo_2: int;
  var {:scalar} fl_24: int;
  var {:scalar} Tmp_601: int;
  var {:scalar} fl_25: int;
  var {:pointer} pVol_26: int;
  var {:pointer} ioreq_5: int;
  var vslice_dummy_var_1244: int;

  anon0:
    pVol_26 := actual_pVol_26;
    ioreq_5 := actual_ioreq_5;
    assume {:nonnull} ioreq_5 != 0;
    assume ioreq_5 > 0;
    havoc userFp;
    volNo_2 := pVol_26;
    assume {:nonnull} pVol_26 != 0;
    assume pVol_26 > 0;
    havoc Tmp_600;
    Tmp_601 := volNo_2;
    assume {:nonnull} pVol_26 != 0;
    assume pVol_26 > 0;
    havoc vslice_dummy_var_1244;
    call {:si_unique_call 368} fl_24 := flMount(Tmp_601, Tmp_600, tl_Volume(pVol_26), 0, vslice_dummy_var_1244);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} fl_24 != 0;
    Tmp_599 := fl_24;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} fl_24 == 0;
    assume {:nonnull} pVol_26 != 0;
    assume pVol_26 > 0;
    assume {:nonnull} pVol_26 != 0;
    assume pVol_26 > 0;
    assume {:nonnull} pVol_26 != 0;
    assume pVol_26 > 0;
    assume {:nonnull} pVol_26 != 0;
    assume pVol_26 > 0;
    assume {:nonnull} userFp != 0;
    assume userFp > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 369} fl_23 := absMountVolume(pVol_26);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} fl_23 == 0;
    assume {:nonnull} pVol_26 != 0;
    assume pVol_26 > 0;
    call {:si_unique_call 370} fl_25 := flDosFormat(tl_Volume(pVol_26), userFp);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} fl_25 == 0;
    call {:si_unique_call 371} fl_22 := dismountVolume(pVol_26);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} fl_22 != 0;
    Tmp_599 := fl_22;
    goto L1;

  anon14_Then:
    assume {:partition} fl_22 == 0;
    goto L21;

  L21:
    Tmp_599 := 0;
    goto L1;

  anon13_Then:
    assume {:partition} fl_25 != 0;
    Tmp_599 := fl_25;
    goto L1;

  anon12_Then:
    assume {:partition} fl_23 != 0;
    Tmp_599 := fl_23;
    goto L1;

  anon15_Then:
    goto L21;
}



procedure {:origName "mountLowLevel_sdv_static_function_24"} mountLowLevel_sdv_static_function_24(actual_pVol_27: int) returns (Tmp_603: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_603 == 34 || Tmp_603 == 0 || Tmp_603 == 21 || Tmp_603 == 26 || Tmp_603 == 111;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "mountLowLevel_sdv_static_function_24"} mountLowLevel_sdv_static_function_24(actual_pVol_27: int) returns (Tmp_603: int)
{
  var {:scalar} fl_26: int;
  var {:pointer} Tmp_604: int;
  var {:pointer} pVol_27: int;
  var vslice_dummy_var_1245: int;
  var vslice_dummy_var_1246: int;
  var vslice_dummy_var_1247: int;

  anon0:
    pVol_27 := actual_pVol_27;
    assume {:nonnull} pVol_27 != 0;
    assume pVol_27 > 0;
    havoc vslice_dummy_var_1245;
    havoc vslice_dummy_var_1246;
    call {:si_unique_call 372} fl_26 := flIdentifyFlash(vslice_dummy_var_1245, vslice_dummy_var_1246);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} fl_26 != 0;
    Tmp_603 := fl_26;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} fl_26 == 0;
    assume {:nonnull} pVol_27 != 0;
    assume pVol_27 > 0;
    havoc Tmp_604;
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    assume {:nonnull} pVol_27 != 0;
    assume pVol_27 > 0;
    havoc vslice_dummy_var_1247;
    call {:si_unique_call 373} setNoCallback_sdv_static_function_3(vslice_dummy_var_1247);
    assume {:nonnull} pVol_27 != 0;
    assume pVol_27 > 0;
    Tmp_603 := 0;
    goto L1;
}



procedure {:origName "socketInfo_sdv_static_function_24"} socketInfo_sdv_static_function_24(actual_pVol_28: int, actual_baseAddress_1: int) returns (Tmp_606: int);
  free ensures {:va_keep} Tmp_606 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "socketInfo_sdv_static_function_24"} socketInfo_sdv_static_function_24(actual_pVol_28: int, actual_baseAddress_1: int) returns (Tmp_606: int)
{
  var {:pointer} pVol_28: int;
  var {:pointer} baseAddress_1: int;
  var boogieTmp: int;

  anon0:
    pVol_28 := actual_pVol_28;
    baseAddress_1 := actual_baseAddress_1;
    assume {:nonnull} pVol_28 != 0;
    assume pVol_28 > 0;
    assume {:nonnull} baseAddress_1 != 0;
    assume baseAddress_1 > 0;
    call {:si_unique_call 374} boogieTmp := corral_nondet();
    Tmp_606 := 0;
    return;
}



procedure {:origName "physicalWrite_sdv_static_function_24"} physicalWrite_sdv_static_function_24(actual_pVol_29: int, actual_ioreq_6: int) returns (Tmp_609: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "physicalWrite_sdv_static_function_24"} physicalWrite_sdv_static_function_24(actual_pVol_29: int, actual_ioreq_6: int) returns (Tmp_609: int)
{
  var {:scalar} Tmp_610: int;
  var {:pointer} Tmp_611: int;
  var {:pointer} Tmp_612: int;
  var {:scalar} fl_27: int;
  var {:pointer} Tmp_613: int;
  var {:pointer} Tmp_614: int;
  var {:pointer} Tmp_617: int;
  var {:pointer} pVol_29: int;
  var {:pointer} ioreq_6: int;

  anon0:
    pVol_29 := actual_pVol_29;
    ioreq_6 := actual_ioreq_6;
    assume {:nonnull} pVol_29 != 0;
    assume pVol_29 > 0;
    havoc Tmp_617;
    assume {:nonnull} pVol_29 != 0;
    assume pVol_29 > 0;
    havoc Tmp_611;
    assume {:nonnull} Tmp_611 != 0;
    assume Tmp_611 > 0;
    assume {:nonnull} Tmp_617 != 0;
    assume Tmp_617 > 0;
    assume {:nonnull} ioreq_6 != 0;
    assume ioreq_6 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_609 := 51;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:nonnull} pVol_29 != 0;
    assume pVol_29 > 0;
    havoc Tmp_613;
    assume {:nonnull} Tmp_613 != 0;
    assume Tmp_613 > 0;
    assume {:nonnull} ioreq_6 != 0;
    assume ioreq_6 > 0;
    havoc Tmp_610;
    assume {:nonnull} pVol_29 != 0;
    assume pVol_29 > 0;
    havoc Tmp_612;
    assume {:nonnull} Tmp_612 != 0;
    assume Tmp_612 > 0;
    assume {:nonnull} ioreq_6 != 0;
    assume ioreq_6 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} ioreq_6 != 0;
    assume ioreq_6 > 0;
    assume {:nonnull} pVol_29 != 0;
    assume pVol_29 > 0;
    havoc Tmp_614;
    assume {:nonnull} Tmp_614 != 0;
    assume Tmp_614 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} fl_27 != 0;
    Tmp_609 := fl_27;
    goto L1;

  anon7_Then:
    assume {:partition} fl_27 == 0;
    Tmp_609 := 0;
    goto L1;

  anon9_Then:
    Tmp_609 := 51;
    goto L1;
}



procedure {:origName "findSector"} findSector(actual_pVol_30: int, actual_sectorNo: int) returns (Tmp_618: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "findSector"} findSector(actual_pVol_30: int, actual_sectorNo: int) returns (Tmp_618: int)
{
  var {:pointer} pVol_30: int;

  anon0:
    pVol_30 := actual_pVol_30;
    assume {:nonnull} pVol_30 != 0;
    assume pVol_30 > 0;
    return;
}



procedure {:origName "physicalErase_sdv_static_function_24"} physicalErase_sdv_static_function_24(actual_pVol_31: int, actual_ioreq_7: int) returns (Tmp_620: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "physicalErase_sdv_static_function_24"} physicalErase_sdv_static_function_24(actual_pVol_31: int, actual_ioreq_7: int) returns (Tmp_620: int)
{
  var {:pointer} Tmp_622: int;
  var {:pointer} Tmp_624: int;
  var {:pointer} Tmp_625: int;
  var {:scalar} fl_28: int;
  var {:pointer} Tmp_627: int;
  var {:pointer} pVol_31: int;
  var {:pointer} ioreq_7: int;

  anon0:
    pVol_31 := actual_pVol_31;
    ioreq_7 := actual_ioreq_7;
    assume {:nonnull} pVol_31 != 0;
    assume pVol_31 > 0;
    havoc Tmp_627;
    assume {:nonnull} pVol_31 != 0;
    assume pVol_31 > 0;
    havoc Tmp_622;
    assume {:nonnull} pVol_31 != 0;
    assume pVol_31 > 0;
    havoc Tmp_624;
    assume {:nonnull} Tmp_622 != 0;
    assume Tmp_622 > 0;
    assume {:nonnull} Tmp_624 != 0;
    assume Tmp_624 > 0;
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    assume {:nonnull} ioreq_7 != 0;
    assume ioreq_7 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} ioreq_7 != 0;
    assume ioreq_7 > 0;
    assume {:nonnull} ioreq_7 != 0;
    assume ioreq_7 > 0;
    assume {:nonnull} pVol_31 != 0;
    assume pVol_31 > 0;
    havoc Tmp_625;
    assume {:nonnull} Tmp_625 != 0;
    assume Tmp_625 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} fl_28 != 0;
    Tmp_620 := fl_28;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} fl_28 == 0;
    Tmp_620 := 0;
    goto L1;

  anon6_Then:
    Tmp_620 := 51;
    goto L1;
}



procedure {:origName "volumeInfo_sdv_static_function_24"} volumeInfo_sdv_static_function_24(actual_pVol_32: int, actual_ioreq_8: int) returns (Tmp_628: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "volumeInfo_sdv_static_function_24"} volumeInfo_sdv_static_function_24(actual_pVol_32: int, actual_ioreq_8: int) returns (Tmp_628: int)
{
  var {:scalar} fl_29: int;
  var {:scalar} fl_30: int;
  var {:scalar} Tmp_630: int;
  var {:scalar} eraseCyclesPerUnit: int;
  var {:scalar} ioreq2: int;
  var {:scalar} wasLowLevelMounted: int;
  var {:scalar} tlInfo: int;
  var {:scalar} fl_31: int;
  var {:scalar} fl_32: int;
  var {:pointer} Tmp_633: int;
  var {:scalar} physicalInfo: int;
  var {:pointer} info_2: int;
  var {:pointer} pVol_32: int;
  var {:pointer} ioreq_8: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_1248: int;

  anon0:
    call {:si_unique_call 375} ioreq2 := __HAVOC_malloc(24);
    call {:si_unique_call 376} tlInfo := __HAVOC_malloc(16);
    call {:si_unique_call 377} physicalInfo := __HAVOC_malloc(24);
    pVol_32 := actual_pVol_32;
    ioreq_8 := actual_ioreq_8;
    call {:si_unique_call 378} vslice_dummy_var_95 := __HAVOC_malloc(16);
    call {:si_unique_call 379} vslice_dummy_var_96 := __HAVOC_malloc(48);
    assume {:nonnull} ioreq_8 != 0;
    assume ioreq_8 > 0;
    havoc info_2;
    wasLowLevelMounted := 1;
    assume {:nonnull} ioreq2 != 0;
    assume ioreq2 > 0;
    assume {:nonnull} ioreq_8 != 0;
    assume ioreq_8 > 0;
    assume {:nonnull} pVol_32 != 0;
    assume pVol_32 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 380} fl_29 := mountLowLevel_sdv_static_function_24(pVol_32);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} fl_29 != 0;
    Tmp_628 := fl_29;
    goto L1;

  L1:
    return;

  anon16_Then:
    assume {:partition} fl_29 == 0;
    wasLowLevelMounted := 0;
    goto L14;

  L14:
    assume {:nonnull} ioreq2 != 0;
    assume ioreq2 > 0;
    call {:si_unique_call 381} fl_31 := getPhysicalInfo_sdv_static_function_24(pVol_32, ioreq2);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} fl_31 != 0;
    Tmp_628 := fl_31;
    goto L1;

  anon13_Then:
    assume {:partition} fl_31 == 0;
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    assume {:nonnull} physicalInfo != 0;
    assume physicalInfo > 0;
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    assume {:nonnull} physicalInfo != 0;
    assume physicalInfo > 0;
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    assume {:nonnull} physicalInfo != 0;
    assume physicalInfo > 0;
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    assume {:nonnull} physicalInfo != 0;
    assume physicalInfo > 0;
    assume {:IndirectCall} true;
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    call {:si_unique_call 382} vslice_dummy_var_97 := flmemset(driverVer_VolumeInfoRecord(info_2), 0, 10);
    assume {:IndirectCall} true;
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    call {:si_unique_call 383} vslice_dummy_var_98 := flmemset(OSAKVer_VolumeInfoRecord(info_2), 0, 10);
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    call {:si_unique_call 384} fl_30 := socketInfo_sdv_static_function_24(pVol_32, baseAddress_VolumeInfoRecord(info_2));
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} fl_30 == 0;
    assume {:nonnull} pVol_32 != 0;
    assume pVol_32 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} fl_32 != 0;
    Tmp_628 := fl_32;
    goto L1;

  anon15_Then:
    assume {:partition} fl_32 == 0;
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    assume {:nonnull} tlInfo != 0;
    assume tlInfo > 0;
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    assume {:nonnull} tlInfo != 0;
    assume tlInfo > 0;
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    assume {:nonnull} tlInfo != 0;
    assume tlInfo > 0;
    havoc vslice_dummy_var_1248;
    call {:si_unique_call 385} flBuildGeometry(vslice_dummy_var_1248, cylinders_VolumeInfoRecord(info_2), heads_VolumeInfoRecord(info_2), sectors_VolumeInfoRecord(info_2), 0);
    assume {:nonnull} pVol_32 != 0;
    assume pVol_32 > 0;
    havoc Tmp_633;
    assume {:nonnull} Tmp_633 != 0;
    assume Tmp_633 > 0;
    havoc eraseCyclesPerUnit;
    assume {:nonnull} physicalInfo != 0;
    assume physicalInfo > 0;
    assume {:nonnull} tlInfo != 0;
    assume tlInfo > 0;
    havoc Tmp_630;
    assume {:nonnull} info_2 != 0;
    assume info_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} wasLowLevelMounted != 0;
    goto L64;

  L64:
    Tmp_628 := 0;
    goto L1;

  anon18_Then:
    assume {:partition} wasLowLevelMounted == 0;
    call {:si_unique_call 386} dismountLowLevel_sdv_static_function_24(pVol_32);
    goto L64;

  anon14_Then:
    assume {:partition} fl_30 != 0;
    Tmp_628 := fl_30;
    goto L1;

  anon17_Then:
    goto L14;
}



procedure {:origName "flSetEnvSocket"} flSetEnvSocket(actual_variableType: int, actual_socket_3: int, actual_value: int, actual_prevValue: int) returns (Tmp_634: int);
  modifies alloc, initDone, LockDepth;
  free ensures {:va_keep} Tmp_634 == 51 || Tmp_634 == 106 || Tmp_634 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSetEnvSocket"} flSetEnvSocket(actual_variableType: int, actual_socket_3: int, actual_value: int, actual_prevValue: int) returns (Tmp_634: int)
{
  var {:scalar} volume: int;
  var {:scalar} status_6: int;
  var {:scalar} variableType: int;
  var {:scalar} socket_3: int;
  var {:scalar} value: int;
  var {:pointer} prevValue: int;

  anon0:
    variableType := actual_variableType;
    socket_3 := actual_socket_3;
    value := actual_value;
    prevValue := actual_prevValue;
    status_6 := 0;
    volume := 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} variableType != 101;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} variableType != 102;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} variableType != 201;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} variableType != 202;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} variableType == 203;
    goto L15;

  L15:
    call {:si_unique_call 387} volume, status_6 := flSetEnvSocket_loop_L15(volume, status_6, variableType, socket_3, value, prevValue);
    goto L15_last;

  L15_last:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} 3 <= volume;
    goto L23;

  L23:
    Tmp_634 := status_6;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} volume < 3;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_6 != 0;
    goto L23;

  anon19_Then:
    assume {:partition} status_6 == 0;
    call {:si_unique_call 388} status_6 := flSetEnvVolume(variableType, socket_3, volume, value, prevValue);
    volume := volume + 1;
    goto anon19_Then_dummy;

  anon19_Then_dummy:
    assume false;
    return;

  anon20_Then:
    assume {:partition} variableType != 203;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} socket_3 != 255;
    Tmp_634 := 51;
    goto L1;

  anon17_Then:
    assume {:partition} socket_3 == 255;
    call {:si_unique_call 389} status_6 := flSetEnvVolume(variableType, 255, 255, value, prevValue);
    goto L23;

  anon21_Then:
    assume {:partition} variableType == 202;
    goto L12;

  L12:
    call {:si_unique_call 390} status_6 := flSetEnvVolume(variableType, socket_3, 3, value, prevValue);
    goto L15;

  anon22_Then:
    assume {:partition} variableType == 201;
    goto L12;

  anon23_Then:
    assume {:partition} variableType == 102;
    goto L9;

  L9:
    call {:si_unique_call 391} status_6 := flSetEnvVolume(variableType, socket_3, 255, value, prevValue);
    goto L23;

  anon24_Then:
    assume {:partition} variableType == 101;
    goto L9;
}



procedure {:origName "_sdv_init24"} _sdv_init24();
  modifies alloc, initDone;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init24"} _sdv_init24()
{
  var vslice_dummy_var_99: int;

  anon0:
    call {:si_unique_call 392} vslice_dummy_var_99 := __HAVOC_malloc(4);
    initDone := 0;
    return;
}



procedure {:origName "bdCall"} bdCall(actual_functionNo: int, actual_ioreq_9: int) returns (Tmp_638: int);
  modifies alloc, initDone, LockDepth;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdCall"} bdCall(actual_functionNo: int, actual_ioreq_9: int) returns (Tmp_638: int)
{
  var {:pointer} Tmp_639: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} sdv_279: int;
  var {:pointer} Tmp_642: int;
  var {:pointer} Tmp_643: int;
  var {:scalar} Tmp_644: int;
  var {:pointer} Tmp_645: int;
  var {:scalar} Tmp_646: int;
  var {:scalar} curPartitionForEnvVars: int;
  var {:pointer} buf_5: int;
  var {:pointer} Tmp_648: int;
  var {:pointer} pVol_33: int;
  var {:pointer} Tmp_649: int;
  var {:pointer} Tmp_650: int;
  var {:pointer} Tmp_651: int;
  var {:scalar} volNo_3: int;
  var {:scalar} istatus: int;
  var {:pointer} Tmp_654: int;
  var {:scalar} fl_33: int;
  var {:pointer} Tmp_656: int;
  var {:scalar} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:scalar} partition: int;
  var {:pointer} Tmp_660: int;
  var {:scalar} status_7: int;
  var {:scalar} tmp_1: int;
  var {:scalar} Tmp_661: int;
  var {:scalar} socket_4: int;
  var {:scalar} Tmp_662: int;
  var {:scalar} functionNo: int;
  var {:pointer} ioreq_9: int;
  var boogieTmp: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_1249: int;
  var vslice_dummy_var_1250: int;
  var vslice_dummy_var_1251: int;
  var vslice_dummy_var_1252: int;
  var vslice_dummy_var_1253: int;
  var vslice_dummy_var_1254: int;
  var vslice_dummy_var_1255: int;
  var vslice_dummy_var_1256: int;
  var vslice_dummy_var_1257: int;
  var vslice_dummy_var_1258: int;
  var vslice_dummy_var_1259: int;
  var vslice_dummy_var_1260: int;
  var vslice_dummy_var_1261: int;
  var vslice_dummy_var_1262: int;
  var vslice_dummy_var_1263: int;
  var vslice_dummy_var_1264: int;
  var vslice_dummy_var_1265: int;

  anon0:
    call {:si_unique_call 393} buf_5 := __HAVOC_malloc(4);
    functionNo := actual_functionNo;
    ioreq_9 := actual_ioreq_9;
    call {:si_unique_call 394} Tmp_640 := __HAVOC_malloc(16);
    assume {:nonnull} buf_5 != 0;
    assume buf_5 > 0;
    call {:si_unique_call 395} boogieTmp := __HAVOC_malloc(64);
    pVol_33 := 0;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    havoc socket_4;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    call {:si_unique_call 396} partition := corral_nondet();
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:partition} initDone == 0;
    call {:si_unique_call 397} fl_33 := flInit();
    goto anon315_Then, anon315_Else;

  anon315_Else:
    assume {:partition} fl_33 != 0;
    Tmp_638 := fl_33;
    goto L1;

  L1:
    return;

  anon315_Then:
    assume {:partition} fl_33 == 0;
    goto L15;

  L15:
    curPartitionForEnvVars := partition;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} pVol_33 != 0;
    goto L18;

  L18:
    call {:si_unique_call 398} status_7 := setBusy(pVol_33, 1, curPartitionForEnvVars);
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:partition} functionNo == 714;
    goto L26;

  L26:
    status_7 := 19;
    goto L28;

  L28:
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:partition} status_7 != 0;
    call {:si_unique_call 399} vslice_dummy_var_100 := setBusy(pVol_33, 0, curPartitionForEnvVars);
    goto L35;

  L35:
    Tmp_638 := status_7;
    goto L1;

  anon268_Then:
    assume {:partition} status_7 == 0;
    call {:si_unique_call 400} status_7 := setBusy(pVol_33, 0, curPartitionForEnvVars);
    goto L35;

  anon266_Then:
    assume {:partition} functionNo != 714;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} functionNo != 715;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:partition} functionNo != 811;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume {:partition} functionNo != 716;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:partition} functionNo != 815;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:partition} functionNo != 816;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} functionNo != 817;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume {:partition} functionNo != 709;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:partition} functionNo != 710;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} functionNo == 823;
    goto L26;

  anon276_Then:
    assume {:partition} functionNo != 823;
    goto L23;

  L23:
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} functionNo > 400;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume {:partition} 600 > functionNo;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume {:partition} functionNo != 505;
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume {:partition} functionNo != 506;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto L49;

  L49:
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto anon280_Then, anon280_Else;

  anon280_Else:
    goto L55;

  L55:
    goto anon282_Then, anon282_Else;

  anon282_Else:
    assume {:partition} status_7 == 0;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc vslice_dummy_var_1249;
    call {:si_unique_call 401} status_7 := bdkCall(functionNo, ioreq_9, vslice_dummy_var_1249);
    goto L28;

  anon282_Then:
    assume {:partition} status_7 != 0;
    goto L28;

  anon280_Then:
    call {:si_unique_call 402} status_7 := mountLowLevel_sdv_static_function_24(pVol_33);
    goto L55;

  anon281_Then:
    assume {:partition} functionNo == 506;
    goto L49;

  anon279_Then:
    assume {:partition} functionNo == 505;
    goto L49;

  anon278_Then:
    assume {:partition} functionNo >= 600;
    goto L46;

  L46:
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume {:partition} functionNo != 701;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} functionNo != 702;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:partition} functionNo != 703;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    assume {:partition} functionNo != 704;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:partition} functionNo != 705;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:partition} functionNo != 706;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume {:partition} functionNo != 707;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:partition} functionNo != 708;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    assume {:partition} functionNo != 709;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} functionNo != 710;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:partition} functionNo != 711;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume {:partition} functionNo != 712;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    assume {:partition} functionNo != 713;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    assume {:partition} functionNo != 714;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    assume {:partition} functionNo != 715;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:partition} functionNo != 716;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:partition} functionNo != 718;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    assume {:partition} functionNo != 801;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:partition} functionNo != 802;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:partition} functionNo != 803;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:partition} functionNo != 804;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} functionNo != 805;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume {:partition} functionNo != 806;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} functionNo != 807;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    assume {:partition} functionNo != 808;
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} functionNo != 809;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume {:partition} functionNo != 810;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    assume {:partition} functionNo != 811;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume {:partition} functionNo == 824;
    goto L70;

  L70:
    goto anon286_Then, anon286_Else;

  anon286_Else:
    assume {:partition} functionNo != 701;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:partition} functionNo != 702;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:partition} functionNo != 703;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} functionNo != 704;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:partition} functionNo != 705;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:partition} functionNo != 706;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:partition} functionNo != 707;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:partition} functionNo != 708;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:partition} functionNo != 709;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:partition} functionNo != 710;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:partition} functionNo != 711;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:partition} functionNo != 712;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:partition} functionNo != 713;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:partition} functionNo != 714;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:partition} functionNo != 715;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:partition} functionNo != 716;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} functionNo != 717;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} functionNo != 718;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:partition} functionNo != 801;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} functionNo != 802;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:partition} functionNo != 803;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:partition} functionNo != 804;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:partition} functionNo != 805;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:partition} functionNo != 806;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume {:partition} functionNo != 807;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} functionNo != 808;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:partition} functionNo != 809;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:partition} functionNo != 810;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    assume {:partition} functionNo != 811;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} functionNo != 812;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    assume {:partition} functionNo != 813;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume {:partition} functionNo != 814;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    assume {:partition} functionNo != 815;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    assume {:partition} functionNo != 816;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} functionNo != 817;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} functionNo != 818;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} functionNo != 819;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:partition} functionNo != 820;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    assume {:partition} functionNo != 821;
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} functionNo != 822;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    assume {:partition} functionNo != 823;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} functionNo == 824;
    goto L110;

  L110:
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc vslice_dummy_var_1250;
    call {:si_unique_call 403} status_7 := flPreMount(functionNo, ioreq_9, vslice_dummy_var_1250);
    goto L28;

  anon344_Then:
    assume {:partition} functionNo != 824;
    status_7 := 1;
    goto L28;

  anon345_Then:
    assume {:partition} functionNo == 823;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    goto anon289_Then, anon289_Else;

  anon289_Else:
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto L28;

  anon290_Then:
    goto L157;

  L157:
    status_7 := 106;
    goto L28;

  anon289_Then:
    goto L157;

  anon288_Then:
    goto L157;

  anon346_Then:
    assume {:partition} functionNo == 822;
    call {:si_unique_call 404} status_7 := volumeInfo_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon347_Then:
    assume {:partition} functionNo == 821;
    call {:si_unique_call 405} status_7 := sectorsInVolume_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon348_Then:
    assume {:partition} functionNo == 820;
    call {:si_unique_call 406} status_7 := getBPB_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon349_Then:
    assume {:partition} functionNo == 819;
    call {:si_unique_call 407} status_7 := absAddress_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon350_Then:
    assume {:partition} functionNo == 818;
    call {:si_unique_call 408} status_7 := absRead_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon351_Then:
    assume {:partition} functionNo == 817;
    call {:si_unique_call 409} status_7 := absDelete_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon352_Then:
    assume {:partition} functionNo == 816;
    call {:si_unique_call 410} status_7 := absWrite_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon353_Then:
    assume {:partition} functionNo == 815;
    call {:si_unique_call 411} status_7 := defragmentVolume_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon354_Then:
    assume {:partition} functionNo == 814;
    status_7 := 0;
    goto L28;

  anon355_Then:
    assume {:partition} functionNo == 813;
    call {:si_unique_call 412} status_7 := dismountVolume(pVol_33);
    goto L28;

  anon356_Then:
    assume {:partition} functionNo == 812;
    call {:si_unique_call 413} status_7 := writeProtect_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon357_Then:
    assume {:partition} functionNo == 811;
    call {:si_unique_call 414} status_7 := bdFormatLogicalDrive_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon358_Then:
    assume {:partition} functionNo == 810;
    call {:si_unique_call 415} status_7 := absMountVolume(pVol_33);
    goto L28;

  anon359_Then:
    assume {:partition} functionNo == 809;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    call {:si_unique_call 416} status_7 := mountVolume_sdv_static_function_24(pVol_33, irFlags_IOreq(ioreq_9));
    goto L28;

  anon360_Then:
    assume {:partition} functionNo == 808;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc vslice_dummy_var_1251;
    call {:si_unique_call 417} inquireCapabilities_sdv_static_function_24(vslice_dummy_var_1251, irLength_IOreq(ioreq_9));
    goto L28;

  anon361_Then:
    assume {:partition} functionNo == 807;
    goto L110;

  anon362_Then:
    assume {:partition} functionNo == 806;
    goto L110;

  anon363_Then:
    assume {:partition} functionNo == 805;
    goto L110;

  anon364_Then:
    assume {:partition} functionNo == 804;
    goto L110;

  anon365_Then:
    assume {:partition} functionNo == 803;
    goto L110;

  anon366_Then:
    assume {:partition} functionNo == 802;
    goto L110;

  anon367_Then:
    assume {:partition} functionNo == 801;
    goto L110;

  anon368_Then:
    assume {:partition} functionNo == 718;
    call {:si_unique_call 418} status_7 := dismountPhysicalDrive_sdv_static_function_24(socket_4);
    goto anon291_Then, anon291_Else;

  anon291_Else:
    assume {:partition} status_7 == 0;
    goto L110;

  anon291_Then:
    assume {:partition} status_7 != 0;
    goto L28;

  anon369_Then:
    assume {:partition} functionNo == 717;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto L28;

  anon287_Then:
    status_7 := 106;
    goto L28;

  anon370_Then:
    assume {:partition} functionNo == 716;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    havoc Tmp_662;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    havoc Tmp_661;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    havoc vslice_dummy_var_1252;
    havoc vslice_dummy_var_1253;
    call {:si_unique_call 419} status_7 := placeExbByBuffer(pVol_33, vslice_dummy_var_1252, vslice_dummy_var_1253, Tmp_661, Tmp_662);
    goto L28;

  anon371_Then:
    assume {:partition} functionNo == 715;
    call {:si_unique_call 420} status_7 := bdFormatPhysicalDrive_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon372_Then:
    assume {:partition} functionNo == 714;
    call {:si_unique_call 421} status_7 := bdFormatVolume_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon373_Then:
    assume {:partition} functionNo == 713;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_639;
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_651;
    assume {:nonnull} Tmp_651 != 0;
    assume Tmp_651 > 0;
    assume {:IndirectCall} true;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    havoc vslice_dummy_var_1254;
    call {:si_unique_call 422} vslice_dummy_var_102 := flmemcpy(vslice_dummy_var_1254, buf_5, 4);
    goto L28;

  anon392_Then:
    status_7 := 106;
    goto L28;

  anon374_Then:
    assume {:partition} functionNo == 712;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_649;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_660;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    goto L28;

  anon391_Then:
    status_7 := 106;
    goto L28;

  anon375_Then:
    assume {:partition} functionNo == 711;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    havoc vslice_dummy_var_1255;
    call {:si_unique_call 423} sdv_279 := flSocketOf(vslice_dummy_var_1255);
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    havoc vslice_dummy_var_1256;
    call {:si_unique_call 424} status_7 := updateSocketParameters(sdv_279, vslice_dummy_var_1256);
    goto L28;

  anon376_Then:
    assume {:partition} functionNo == 710;
    call {:si_unique_call 425} status_7 := physicalErase_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon377_Then:
    assume {:partition} functionNo == 709;
    call {:si_unique_call 426} status_7 := physicalWrite_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon378_Then:
    assume {:partition} functionNo == 708;
    call {:si_unique_call 427} status_7 := physicalRead_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon379_Then:
    assume {:partition} functionNo == 707;
    call {:si_unique_call 428} status_7 := getPhysicalInfo_sdv_static_function_24(pVol_33, ioreq_9);
    goto L28;

  anon380_Then:
    assume {:partition} functionNo == 706;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_643;
    assume {:nonnull} Tmp_643 != 0;
    assume Tmp_643 > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_642;
    assume {:nonnull} Tmp_642 != 0;
    assume Tmp_642 > 0;
    status_7 := 0;
    goto L28;

  anon390_Then:
    status_7 := 106;
    goto L28;

  anon381_Then:
    assume {:partition} functionNo == 705;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc vslice_dummy_var_1257;
    havoc vslice_dummy_var_1258;
    havoc vslice_dummy_var_1259;
    call {:si_unique_call 429} status_7 := readIPL_sdv_static_function_24(vslice_dummy_var_1257, vslice_dummy_var_1258, vslice_dummy_var_1259);
    goto L28;

  anon382_Then:
    assume {:partition} functionNo == 704;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc vslice_dummy_var_1260;
    havoc vslice_dummy_var_1261;
    havoc vslice_dummy_var_1262;
    havoc vslice_dummy_var_1263;
    call {:si_unique_call 430} status_7 := writeIPL_sdv_static_function_24(vslice_dummy_var_1260, vslice_dummy_var_1261, vslice_dummy_var_1262, vslice_dummy_var_1263);
    goto L28;

  anon383_Then:
    assume {:partition} functionNo == 703;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_645;
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_654;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    goto L28;

  anon389_Then:
    status_7 := 106;
    goto L28;

  anon384_Then:
    assume {:partition} functionNo == 702;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_650;
    assume {:nonnull} Tmp_650 != 0;
    assume Tmp_650 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_648;
    assume {:nonnull} Tmp_648 != 0;
    assume Tmp_648 > 0;
    goto L28;

  anon388_Then:
    status_7 := 106;
    goto L28;

  anon286_Then:
    assume {:partition} functionNo == 701;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_656;
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    havoc tmp_1;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc Tmp_659;
    assume {:nonnull} Tmp_659 != 0;
    assume Tmp_659 > 0;
    assume {:nonnull} ioreq_9 != 0;
    assume ioreq_9 > 0;
    goto L28;

  anon387_Then:
    status_7 := 106;
    goto L28;

  anon316_Then:
    assume {:partition} functionNo != 824;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto anon283_Then, anon283_Else;

  anon283_Else:
    istatus := 0;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc vslice_dummy_var_1264;
    call {:si_unique_call 431} istatus := flMediaCheck(vslice_dummy_var_1264);
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume {:partition} istatus != 0;
    call {:si_unique_call 432} vslice_dummy_var_101 := dismountVolume(pVol_33);
    goto L298;

  L298:
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:partition} functionNo != 813;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume {:partition} functionNo != 814;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume {:partition} functionNo != 815;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume {:partition} functionNo != 818;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:partition} functionNo != 819;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume {:partition} functionNo != 816;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    assume {:partition} functionNo != 817;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    assume {:partition} functionNo != 812;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume {:partition} functionNo != 823;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    assume {:partition} functionNo != 717;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    assume {:partition} functionNo != 821;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume {:partition} functionNo != 822;
    status_7 := 55;
    goto L28;

  anon308_Then:
    assume {:partition} functionNo == 822;
    goto L70;

  anon307_Then:
    assume {:partition} functionNo == 821;
    goto L70;

  anon306_Then:
    assume {:partition} functionNo == 717;
    goto L70;

  anon305_Then:
    assume {:partition} functionNo == 823;
    goto L70;

  anon304_Then:
    assume {:partition} functionNo == 812;
    goto L70;

  anon303_Then:
    assume {:partition} functionNo == 817;
    goto L70;

  anon302_Then:
    assume {:partition} functionNo == 816;
    goto L70;

  anon301_Then:
    assume {:partition} functionNo == 819;
    goto L70;

  anon300_Then:
    assume {:partition} functionNo == 818;
    goto L70;

  anon299_Then:
    assume {:partition} functionNo == 815;
    goto L70;

  anon298_Then:
    assume {:partition} functionNo == 814;
    goto L70;

  anon297_Then:
    assume {:partition} functionNo == 813;
    goto L70;

  anon296_Then:
    goto L70;

  anon294_Then:
    status_7 := 55;
    goto L28;

  anon295_Then:
    assume {:partition} istatus == 0;
    goto L298;

  anon283_Then:
    goto L298;

  anon317_Then:
    assume {:partition} functionNo == 811;
    goto L65;

  L65:
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    goto L70;

  anon285_Then:
    call {:si_unique_call 433} dismountLowLevel_sdv_static_function_24(pVol_33);
    goto L70;

  anon318_Then:
    assume {:partition} functionNo == 810;
    goto L65;

  anon319_Then:
    assume {:partition} functionNo == 809;
    goto L65;

  anon320_Then:
    assume {:partition} functionNo == 808;
    goto L63;

  L63:
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    goto anon284_Then, anon284_Else;

  anon284_Else:
    status_7 := 0;
    assume {:nonnull} pVol_33 != 0;
    assume pVol_33 > 0;
    havoc vslice_dummy_var_1265;
    call {:si_unique_call 434} status_7 := flMediaCheck(vslice_dummy_var_1265);
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume {:partition} status_7 == 34;
    call {:si_unique_call 435} status_7 := mountLowLevel_sdv_static_function_24(pVol_33);
    goto L287;

  L287:
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume {:partition} status_7 != 0;
    call {:si_unique_call 436} dismountLowLevel_sdv_static_function_24(pVol_33);
    goto L28;

  anon293_Then:
    assume {:partition} status_7 == 0;
    goto L70;

  anon292_Then:
    assume {:partition} status_7 != 34;
    goto L287;

  anon284_Then:
    call {:si_unique_call 437} status_7 := mountLowLevel_sdv_static_function_24(pVol_33);
    goto L287;

  anon321_Then:
    assume {:partition} functionNo == 807;
    goto L70;

  anon322_Then:
    assume {:partition} functionNo == 806;
    goto L70;

  anon323_Then:
    assume {:partition} functionNo == 805;
    goto L70;

  anon324_Then:
    assume {:partition} functionNo == 804;
    goto L70;

  anon325_Then:
    assume {:partition} functionNo == 803;
    goto L70;

  anon326_Then:
    assume {:partition} functionNo == 802;
    goto L70;

  anon327_Then:
    assume {:partition} functionNo == 801;
    goto L70;

  anon328_Then:
    assume {:partition} functionNo == 718;
    goto L70;

  anon329_Then:
    assume {:partition} functionNo == 716;
    goto L63;

  anon330_Then:
    assume {:partition} functionNo == 715;
    goto L63;

  anon331_Then:
    assume {:partition} functionNo == 714;
    goto L65;

  anon332_Then:
    assume {:partition} functionNo == 713;
    goto L63;

  anon333_Then:
    assume {:partition} functionNo == 712;
    goto L63;

  anon334_Then:
    assume {:partition} functionNo == 711;
    goto L70;

  anon335_Then:
    assume {:partition} functionNo == 710;
    goto L63;

  anon336_Then:
    assume {:partition} functionNo == 709;
    goto L63;

  anon337_Then:
    assume {:partition} functionNo == 708;
    goto L63;

  anon338_Then:
    assume {:partition} functionNo == 707;
    goto L63;

  anon339_Then:
    assume {:partition} functionNo == 706;
    goto L63;

  anon340_Then:
    assume {:partition} functionNo == 705;
    goto L63;

  anon341_Then:
    assume {:partition} functionNo == 704;
    goto L63;

  anon342_Then:
    assume {:partition} functionNo == 703;
    goto L63;

  anon343_Then:
    assume {:partition} functionNo == 702;
    goto L63;

  anon277_Then:
    assume {:partition} functionNo == 701;
    goto L63;

  anon265_Then:
    assume {:partition} 400 >= functionNo;
    goto L46;

  anon275_Then:
    assume {:partition} functionNo == 710;
    goto L26;

  anon274_Then:
    assume {:partition} functionNo == 709;
    goto L26;

  anon273_Then:
    assume {:partition} functionNo == 817;
    goto L26;

  anon272_Then:
    assume {:partition} functionNo == 816;
    goto L26;

  anon271_Then:
    assume {:partition} functionNo == 815;
    goto L26;

  anon270_Then:
    assume {:partition} functionNo == 716;
    goto L26;

  anon269_Then:
    assume {:partition} functionNo == 811;
    goto L26;

  anon267_Then:
    assume {:partition} functionNo == 715;
    goto L26;

  anon264_Then:
    goto L23;

  anon386_Then:
    assume {:partition} pVol_33 == 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    goto L327;

  L327:
    Tmp_638 := 20;
    goto L1;

  anon263_Then:
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume {:partition} partition < 4;
    Tmp_644 := partition;
    Tmp_658 := socket_4;
    havoc Tmp_640;
    assume {:nonnull} Tmp_640 != 0;
    assume Tmp_640 > 0;
    havoc volNo_3;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:partition} 600 > functionNo;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume {:partition} functionNo > 400;
    volNo_3 := socket_4;
    curPartitionForEnvVars := 4 + partition;
    goto L334;

  L334:
    Tmp_646 := volNo_3;
    havoc pVol_33;
    goto L18;

  anon311_Then:
    assume {:partition} 400 >= functionNo;
    goto L330;

  L330:
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume {:partition} volNo_3 == 255;
    Tmp_638 := 20;
    goto L1;

  anon310_Then:
    assume {:partition} volNo_3 != 255;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume {:partition} functionNo > 700;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    assume {:partition} 800 > functionNo;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume {:partition} partition != 0;
    Tmp_638 := 20;
    goto L1;

  anon314_Then:
    assume {:partition} partition == 0;
    curPartitionForEnvVars := 7;
    goto L334;

  anon313_Then:
    assume {:partition} functionNo >= 800;
    goto L334;

  anon312_Then:
    assume {:partition} 700 >= functionNo;
    goto L334;

  anon393_Then:
    assume {:partition} functionNo >= 600;
    goto L330;

  anon309_Then:
    assume {:partition} 4 <= partition;
    goto L327;

  anon385_Then:
    assume {:partition} initDone != 0;
    goto L15;
}



procedure {:origName "changePassword_sdv_static_function_24"} changePassword_sdv_static_function_24(actual_pVol_34: int) returns (Tmp_663: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "changePassword_sdv_static_function_24"} changePassword_sdv_static_function_24(actual_pVol_34: int) returns (Tmp_663: int)
{
  var {:scalar} ioreq_10: int;
  var {:pointer} Tmp_664: int;
  var {:scalar} partitionTable: int;
  var {:scalar} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:pointer} Tmp_667: int;
  var {:pointer} Tmp_668: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_670: int;
  var {:scalar} Tmp_671: int;
  var {:pointer} pVol_34: int;

  anon0:
    call {:si_unique_call 438} ioreq_10 := __HAVOC_malloc(24);
    call {:si_unique_call 439} partitionTable := __HAVOC_malloc(20);
    pVol_34 := actual_pVol_34;
    call {:si_unique_call 440} Tmp_667 := __HAVOC_malloc(8);
    call {:si_unique_call 441} Tmp_668 := __HAVOC_malloc(8);
    assume {:nonnull} ioreq_10 != 0;
    assume ioreq_10 > 0;
    assume {:nonnull} ioreq_10 != 0;
    assume ioreq_10 > 0;
    assume {:nonnull} pVol_34 != 0;
    assume pVol_34 > 0;
    assume {:nonnull} ioreq_10 != 0;
    assume ioreq_10 > 0;
    assume {:nonnull} ioreq_10 != 0;
    assume ioreq_10 > 0;
    call {:si_unique_call 442} status_8 := absRead_sdv_static_function_24(pVol_34, ioreq_10);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_8 != 0;
    Tmp_663 := status_8;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} status_8 == 0;
    assume {:nonnull} partitionTable != 0;
    assume partitionTable > 0;
    havoc Tmp_666;
    call {:si_unique_call 443} toUNALLONG(Tmp_666, 0);
    assume {:nonnull} pVol_34 != 0;
    assume pVol_34 > 0;
    havoc Tmp_668;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    havoc Tmp_671;
    assume {:nonnull} partitionTable != 0;
    assume partitionTable > 0;
    havoc Tmp_664;
    call {:si_unique_call 444} toUNALLONG(Tmp_664, Tmp_671);
    assume {:nonnull} pVol_34 != 0;
    assume pVol_34 > 0;
    havoc Tmp_667;
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    havoc Tmp_665;
    assume {:nonnull} partitionTable != 0;
    assume partitionTable > 0;
    havoc Tmp_670;
    call {:si_unique_call 445} toUNALLONG(Tmp_670, Tmp_665);
    assume {:nonnull} pVol_34 != 0;
    assume pVol_34 > 0;
    call {:si_unique_call 446} Tmp_663 := absWrite_sdv_static_function_24(pVol_34, ioreq_10);
    goto L1;
}



procedure {:origName "socketIntervalRoutine_sdv_static_function_24"} socketIntervalRoutine_sdv_static_function_24();
  modifies alloc, LockDepth;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "socketIntervalRoutine_sdv_static_function_24"} socketIntervalRoutine_sdv_static_function_24()
{
  var {:scalar} Tmp_672: int;
  var {:scalar} sdv_319: int;
  var {:scalar} Tmp_673: int;
  var {:pointer} pVol_35: int;
  var {:pointer} Tmp_676: int;
  var {:scalar} volNo_4: int;
  var {:pointer} Tmp_677: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_1266: int;

  anon0:
    call {:si_unique_call 447} vslice_dummy_var_103 := __HAVOC_malloc(4);
    havoc pVol_35;
    volNo_4 := 0;
    goto L8;

  L8:
    call {:si_unique_call 448} Tmp_672, sdv_319, Tmp_673, Tmp_676, volNo_4, Tmp_677 := socketIntervalRoutine_sdv_static_function_24_loop_L8(Tmp_672, sdv_319, Tmp_673, pVol_35, Tmp_676, volNo_4, Tmp_677);
    goto L8_last;

  L8_last:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_673 := volNo_4;
    havoc Tmp_676;
    call {:si_unique_call 449} sdv_319 := flTakeMutex(Tmp_676);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} sdv_319 != 0;
    assume {:nonnull} pVol_35 != 0;
    assume pVol_35 > 0;
    havoc vslice_dummy_var_1266;
    call {:si_unique_call 450} flIntervalRoutine(vslice_dummy_var_1266);
    Tmp_672 := volNo_4;
    havoc Tmp_677;
    call {:si_unique_call 451} flFreeMutex(Tmp_677);
    goto L14;

  L14:
    volNo_4 := volNo_4 + 1;
    goto L14_dummy;

  L14_dummy:
    assume false;
    return;

  anon6_Then:
    assume {:partition} sdv_319 == 0;
    goto L14;

  anon5_Then:
    return;
}



procedure {:origName "getBPB_sdv_static_function_24"} getBPB_sdv_static_function_24(actual_pVol_36: int, actual_ioreq_11: int) returns (Tmp_678: int);
  free ensures {:va_keep} Tmp_678 == 25 || Tmp_678 == 0 || Tmp_678 == 27;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "getBPB_sdv_static_function_24"} getBPB_sdv_static_function_24(actual_pVol_36: int, actual_ioreq_11: int) returns (Tmp_678: int)
{
  var {:pointer} sdv_320: int;
  var {:pointer} bootSector: int;
  var {:pointer} userBPB: int;
  var {:pointer} pVol_36: int;
  var {:pointer} ioreq_11: int;
  var vslice_dummy_var_1267: int;

  anon0:
    pVol_36 := actual_pVol_36;
    ioreq_11 := actual_ioreq_11;
    assume {:nonnull} ioreq_11 != 0;
    assume ioreq_11 > 0;
    havoc userBPB;
    assume {:nonnull} pVol_36 != 0;
    assume pVol_36 > 0;
    havoc vslice_dummy_var_1267;
    call {:si_unique_call 452} sdv_320 := findSector(pVol_36, vslice_dummy_var_1267);
    bootSector := sdv_320;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} bootSector != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} bootSector == dataErrorObject;
    Tmp_678 := 25;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} bootSector != dataErrorObject;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    assume {:nonnull} bootSector != 0;
    assume bootSector > 0;
    assume {:nonnull} userBPB != 0;
    assume userBPB > 0;
    Tmp_678 := 0;
    goto L1;

  anon6_Then:
    assume {:partition} bootSector == 0;
    Tmp_678 := 27;
    goto L1;
}



procedure {:origName "flBuildGeometry"} flBuildGeometry(actual_capacity: int, actual_cylinders: int, actual_heads: int, actual_sectors: int, actual_oldFormat: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flBuildGeometry"} flBuildGeometry(actual_capacity: int, actual_cylinders: int, actual_heads: int, actual_sectors: int, actual_oldFormat: int)
{
  var {:scalar} temp: int;
  var {:scalar} capacity: int;
  var {:pointer} cylinders: int;
  var {:pointer} heads: int;
  var {:pointer} sectors: int;
  var {:scalar} oldFormat: int;
  var vslice_dummy_var_104: int;

  anon0:
    call {:si_unique_call 453} vslice_dummy_var_104 := __HAVOC_malloc(4);
    capacity := actual_capacity;
    cylinders := actual_cylinders;
    heads := actual_heads;
    sectors := actual_sectors;
    oldFormat := actual_oldFormat;
    assume {:nonnull} cylinders != 0;
    assume cylinders > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} oldFormat == 1;
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    assume {:nonnull} cylinders != 0;
    assume cylinders > 0;
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    havoc temp;
    assume {:nonnull} heads != 0;
    assume heads > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} INTMOD(capacity, temp) != 0;
    assume {:nonnull} heads != 0;
    assume heads > 0;
    assume {:nonnull} cylinders != 0;
    assume cylinders > 0;
    assume {:nonnull} heads != 0;
    assume heads > 0;
    havoc temp;
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} INTMOD(capacity, temp) != 0;
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    assume {:nonnull} heads != 0;
    assume heads > 0;
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    havoc temp;
    assume {:nonnull} cylinders != 0;
    assume cylinders > 0;
    goto L1;

  L1:
    return;

  anon17_Then:
    assume {:partition} INTMOD(capacity, temp) == 0;
    goto L1;

  anon16_Then:
    assume {:partition} INTMOD(capacity, temp) == 0;
    goto L1;

  anon15_Then:
    assume {:partition} oldFormat != 1;
    assume {:nonnull} heads != 0;
    assume heads > 0;
    assume {:nonnull} cylinders != 0;
    assume cylinders > 0;
    assume {:nonnull} heads != 0;
    assume heads > 0;
    havoc temp;
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    goto L20;

  L20:
    call {:si_unique_call 454} temp := flBuildGeometry_loop_L20(temp, capacity, cylinders, heads, sectors);
    goto L20_last;

  L20_last:
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} heads != 0;
    assume heads > 0;
    assume {:nonnull} cylinders != 0;
    assume cylinders > 0;
    assume {:nonnull} heads != 0;
    assume heads > 0;
    havoc temp;
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    goto anon13_Else_dummy;

  anon13_Else_dummy:
    assume false;
    return;

  anon13_Then:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} INTMOD(capacity, temp) != 0;
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    assume {:nonnull} cylinders != 0;
    assume cylinders > 0;
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    havoc temp;
    assume {:nonnull} heads != 0;
    assume heads > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} INTMOD(capacity, temp) != 0;
    assume {:nonnull} heads != 0;
    assume heads > 0;
    assume {:nonnull} heads != 0;
    assume heads > 0;
    assume {:nonnull} sectors != 0;
    assume sectors > 0;
    havoc temp;
    assume {:nonnull} cylinders != 0;
    assume cylinders > 0;
    goto L1;

  anon18_Then:
    assume {:partition} INTMOD(capacity, temp) == 0;
    goto L1;

  anon14_Then:
    assume {:partition} INTMOD(capacity, temp) == 0;
    goto L1;
}



procedure {:origName "flSetEnvVolume"} flSetEnvVolume(actual_variableType_1: int, actual_socket_5: int, actual_volume_1: int, actual_value_1: int, actual_prevValue_1: int) returns (Tmp_682: int);
  modifies alloc, initDone, LockDepth;
  free ensures {:va_keep} Tmp_682 == 51 || Tmp_682 == 106 || Tmp_682 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSetEnvVolume"} flSetEnvVolume(actual_variableType_1: int, actual_socket_5: int, actual_volume_1: int, actual_value_1: int, actual_prevValue_1: int) returns (Tmp_682: int)
{
  var {:pointer} Tmp_683: int;
  var {:scalar} Tmp_684: int;
  var {:scalar} Tmp_685: int;
  var {:scalar} Tmp_686: int;
  var {:scalar} Tmp_687: int;
  var {:scalar} Tmp_688: int;
  var {:scalar} Tmp_689: int;
  var {:pointer} Tmp_691: int;
  var {:scalar} Tmp_692: int;
  var {:scalar} Tmp_693: int;
  var {:scalar} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:scalar} Tmp_696: int;
  var {:scalar} Tmp_697: int;
  var {:scalar} Tmp_698: int;
  var {:scalar} Tmp_699: int;
  var {:pointer} Tmp_700: int;
  var {:scalar} Tmp_701: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:pointer} Tmp_704: int;
  var {:scalar} variableType_1: int;
  var {:scalar} socket_5: int;
  var {:scalar} volume_1: int;
  var {:scalar} value_1: int;
  var {:pointer} prevValue_1: int;

  anon0:
    variableType_1 := actual_variableType_1;
    socket_5 := actual_socket_5;
    volume_1 := actual_volume_1;
    value_1 := actual_value_1;
    prevValue_1 := actual_prevValue_1;
    call {:si_unique_call 455} Tmp_683 := __HAVOC_malloc(32);
    call {:si_unique_call 456} Tmp_691 := __HAVOC_malloc(32);
    call {:si_unique_call 457} Tmp_695 := __HAVOC_malloc(32);
    call {:si_unique_call 458} Tmp_700 := __HAVOC_malloc(16);
    call {:si_unique_call 459} Tmp_702 := __HAVOC_malloc(32);
    call {:si_unique_call 460} Tmp_703 := __HAVOC_malloc(32);
    call {:si_unique_call 461} Tmp_704 := __HAVOC_malloc(32);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} prevValue_1 != 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} variableType_1 != 5;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} variableType_1 != 8;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} variableType_1 != 9;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} variableType_1 != 102;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} variableType_1 == 202;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} value_1 == 2;
    goto L16;

  L16:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} variableType_1 != 1;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} variableType_1 != 2;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} variableType_1 != 3;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} variableType_1 != 4;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} variableType_1 != 5;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} variableType_1 != 6;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} variableType_1 != 7;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} variableType_1 != 8;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} variableType_1 != 9;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} variableType_1 != 101;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} variableType_1 != 102;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} variableType_1 != 201;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} variableType_1 != 202;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} variableType_1 == 203;
    goto L20;

  L20:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} volume_1 >= 4;
    goto L22;

  L22:
    Tmp_682 := 51;
    goto L1;

  L1:
    return;

  anon117_Then:
    assume {:partition} 4 > volume_1;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} variableType_1 == 203;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} volume_1 != 3;
    goto L23;

  L23:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} socket_5 < 8;
    goto L27;

  L27:
    call {:si_unique_call 462} flInitGlobalVars();
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} variableType_1 != 1;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} variableType_1 != 2;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} variableType_1 != 3;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} variableType_1 != 5;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} variableType_1 != 6;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} variableType_1 != 8;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} variableType_1 != 9;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} variableType_1 != 101;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} variableType_1 != 201;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} variableType_1 != 202;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} variableType_1 == 203;
    Tmp_698 := volume_1 + 4;
    Tmp_688 := socket_5;
    havoc Tmp_691;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    Tmp_699 := volume_1 + 4;
    Tmp_689 := socket_5;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    goto L45;

  L45:
    Tmp_682 := 0;
    goto L1;

  anon147_Then:
    assume {:partition} variableType_1 != 203;
    Tmp_692 := socket_5;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    Tmp_685 := socket_5;
    goto L45;

  anon148_Then:
    assume {:partition} variableType_1 == 202;
    Tmp_697 := volume_1;
    Tmp_686 := socket_5;
    havoc Tmp_704;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    Tmp_701 := volume_1;
    Tmp_694 := socket_5;
    havoc Tmp_695;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    goto L45;

  anon149_Then:
    assume {:partition} variableType_1 == 201;
    Tmp_687 := volume_1;
    Tmp_684 := socket_5;
    havoc Tmp_700;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    goto L45;

  anon150_Then:
    assume {:partition} variableType_1 == 101;
    Tmp_693 := socket_5;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    Tmp_696 := socket_5;
    havoc Tmp_702;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    goto L45;

  anon151_Then:
    assume {:partition} variableType_1 == 9;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} value_1 != 0;
    goto L52;

  L52:
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    goto L45;

  anon122_Then:
    assume {:partition} value_1 == 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    call {:si_unique_call 463} flExit();
    goto L52;

  anon123_Then:
    goto L52;

  anon152_Then:
    assume {:partition} variableType_1 == 8;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    goto L45;

  anon153_Then:
    assume {:partition} variableType_1 == 6;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    goto L45;

  anon154_Then:
    assume {:partition} variableType_1 == 5;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    goto L45;

  anon155_Then:
    assume {:partition} variableType_1 == 3;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    goto L45;

  anon156_Then:
    assume {:partition} variableType_1 == 2;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    goto L45;

  anon121_Then:
    assume {:partition} variableType_1 == 1;
    assume {:nonnull} prevValue_1 != 0;
    assume prevValue_1 > 0;
    goto L45;

  anon119_Then:
    assume {:partition} 8 <= socket_5;
    Tmp_682 := 51;
    goto L1;

  anon120_Then:
    assume {:partition} volume_1 == 3;
    goto L22;

  anon118_Then:
    assume {:partition} variableType_1 != 203;
    goto L23;

  anon134_Then:
    assume {:partition} variableType_1 != 203;
    Tmp_682 := 106;
    goto L1;

  anon135_Then:
    assume {:partition} variableType_1 == 202;
    goto L20;

  anon136_Then:
    assume {:partition} variableType_1 == 201;
    goto L20;

  anon137_Then:
    assume {:partition} variableType_1 == 102;
    goto L19;

  L19:
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} socket_5 >= 8;
    Tmp_682 := 51;
    goto L1;

  anon116_Then:
    assume {:partition} 8 > socket_5;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} volume_1 != 255;
    Tmp_682 := 51;
    goto L1;

  anon124_Then:
    assume {:partition} volume_1 == 255;
    goto L27;

  anon138_Then:
    assume {:partition} variableType_1 == 101;
    goto L19;

  anon139_Then:
    assume {:partition} variableType_1 == 9;
    goto L18;

  L18:
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} socket_5 != 255;
    goto L77;

  L77:
    Tmp_682 := 51;
    goto L1;

  anon115_Then:
    assume {:partition} socket_5 == 255;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} volume_1 != 255;
    goto L77;

  anon125_Then:
    assume {:partition} volume_1 == 255;
    goto L27;

  anon140_Then:
    assume {:partition} variableType_1 == 8;
    goto L18;

  anon141_Then:
    assume {:partition} variableType_1 == 7;
    goto L18;

  anon142_Then:
    assume {:partition} variableType_1 == 6;
    goto L18;

  anon143_Then:
    assume {:partition} variableType_1 == 5;
    goto L18;

  anon144_Then:
    assume {:partition} variableType_1 == 4;
    goto L18;

  anon145_Then:
    assume {:partition} variableType_1 == 3;
    goto L18;

  anon146_Then:
    assume {:partition} variableType_1 == 2;
    goto L18;

  anon114_Then:
    assume {:partition} variableType_1 == 1;
    goto L18;

  anon111_Then:
    assume {:partition} value_1 != 2;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} value_1 == 0;
    goto L16;

  anon112_Then:
    assume {:partition} value_1 != 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} value_1 == 1;
    goto L16;

  anon113_Then:
    assume {:partition} value_1 != 1;
    Tmp_682 := 51;
    goto L1;

  anon130_Then:
    assume {:partition} variableType_1 != 202;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} value_1 != 1;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} value_1 != 0;
    Tmp_682 := 51;
    goto L1;

  anon129_Then:
    assume {:partition} value_1 == 0;
    goto L16;

  anon107_Then:
    assume {:partition} value_1 == 1;
    goto L16;

  anon131_Then:
    assume {:partition} variableType_1 == 102;
    goto L16;

  anon132_Then:
    assume {:partition} variableType_1 == 9;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} value_1 != 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} value_1 != 1;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} value_1 != 3;
    Tmp_682 := 51;
    goto L1;

  anon127_Then:
    assume {:partition} value_1 == 3;
    goto L16;

  anon126_Then:
    assume {:partition} value_1 == 1;
    goto L16;

  anon110_Then:
    assume {:partition} value_1 == 0;
    goto L16;

  anon133_Then:
    assume {:partition} variableType_1 == 8;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} BAND(value_1, 1) != 0;
    Tmp_682 := 51;
    goto L1;

  anon109_Then:
    assume {:partition} BAND(value_1, 1) == 0;
    goto L16;

  anon106_Then:
    assume {:partition} variableType_1 == 5;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} value_1 > 31;
    goto L86;

  L86:
    Tmp_682 := 51;
    goto L1;

  anon108_Then:
    assume {:partition} 31 >= value_1;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} 1 > value_1;
    goto L86;

  anon128_Then:
    assume {:partition} value_1 >= 1;
    goto L16;

  anon105_Then:
    assume {:partition} prevValue_1 == 0;
    Tmp_682 := 51;
    goto L1;
}



procedure {:origName "dismountVolume"} dismountVolume(actual_pVol_37: int) returns (Tmp_705: int);
  free ensures {:va_keep} Tmp_705 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "dismountVolume"} dismountVolume(actual_pVol_37: int) returns (Tmp_705: int)
{
  var {:scalar} status_9: int;
  var {:pointer} pVol_37: int;
  var vslice_dummy_var_1268: int;

  anon0:
    pVol_37 := actual_pVol_37;
    assume {:nonnull} pVol_37 != 0;
    assume pVol_37 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    status_9 := 0;
    assume {:nonnull} pVol_37 != 0;
    assume pVol_37 > 0;
    havoc vslice_dummy_var_1268;
    call {:si_unique_call 464} status_9 := flMediaCheck(vslice_dummy_var_1268);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} status_9 != 0;
    assume {:nonnull} pVol_37 != 0;
    assume pVol_37 > 0;
    goto L12;

  L12:
    assume {:nonnull} pVol_37 != 0;
    assume pVol_37 > 0;
    goto L4;

  L4:
    assume {:nonnull} pVol_37 != 0;
    assume pVol_37 > 0;
    Tmp_705 := 0;
    return;

  anon6_Then:
    assume {:partition} status_9 == 0;
    goto L12;

  anon5_Then:
    goto L4;
}



procedure {:origName "findFreeVolume_sdv_static_function_24"} findFreeVolume_sdv_static_function_24(actual_socket_6: int, actual_partition_1: int) returns (Tmp_707: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_707 == 31 || Tmp_707 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "findFreeVolume_sdv_static_function_24"} findFreeVolume_sdv_static_function_24(actual_socket_6: int, actual_partition_1: int) returns (Tmp_707: int)
{
  var {:scalar} Tmp_708: int;
  var {:pointer} Tmp_709: int;
  var {:scalar} Tmp_710: int;
  var {:scalar} Tmp_711: int;
  var {:scalar} Tmp_712: int;
  var {:scalar} Tmp_713: int;
  var {:scalar} Tmp_714: int;
  var {:scalar} Tmp_715: int;
  var {:scalar} Tmp_717: int;
  var {:scalar} Tmp_718: int;
  var {:scalar} volNo_5: int;
  var {:scalar} Tmp_719: int;
  var {:scalar} Tmp_720: int;
  var {:scalar} Tmp_721: int;
  var {:scalar} socket_6: int;
  var {:scalar} partition_1: int;

  anon0:
    socket_6 := actual_socket_6;
    partition_1 := actual_partition_1;
    call {:si_unique_call 465} Tmp_709 := __HAVOC_malloc(16);
    havoc volNo_5;
    goto L5;

  L5:
    call {:si_unique_call 466} Tmp_715, volNo_5 := findFreeVolume_sdv_static_function_24_loop_L5(Tmp_715, volNo_5);
    goto L5_last;

  L5_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} 20 > volNo_5;
    Tmp_715 := volNo_5;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    volNo_5 := volNo_5 + 1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    goto L6;

  L6:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} volNo_5 == 20;
    Tmp_707 := 31;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} volNo_5 != 20;
    Tmp_718 := partition_1;
    Tmp_720 := socket_6;
    havoc Tmp_709;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    Tmp_714 := volNo_5;
    Tmp_717 := socket_6;
    Tmp_719 := volNo_5;
    Tmp_712 := socket_6;
    Tmp_711 := volNo_5;
    Tmp_713 := socket_6;
    Tmp_721 := volNo_5;
    Tmp_708 := volNo_5;
    Tmp_710 := volNo_5;
    Tmp_707 := 0;
    goto L1;

  anon7_Then:
    assume {:partition} volNo_5 >= 20;
    goto L6;
}



procedure {:origName "physicalRead_sdv_static_function_24"} physicalRead_sdv_static_function_24(actual_pVol_38: int, actual_ioreq_12: int) returns (Tmp_722: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "physicalRead_sdv_static_function_24"} physicalRead_sdv_static_function_24(actual_pVol_38: int, actual_ioreq_12: int) returns (Tmp_722: int)
{
  var {:pointer} Tmp_723: int;
  var {:pointer} Tmp_725: int;
  var {:pointer} Tmp_726: int;
  var {:pointer} Tmp_727: int;
  var {:pointer} Tmp_729: int;
  var {:scalar} Tmp_730: int;
  var {:scalar} fl_34: int;
  var {:pointer} pVol_38: int;
  var {:pointer} ioreq_12: int;

  anon0:
    pVol_38 := actual_pVol_38;
    ioreq_12 := actual_ioreq_12;
    assume {:nonnull} pVol_38 != 0;
    assume pVol_38 > 0;
    havoc Tmp_729;
    assume {:nonnull} pVol_38 != 0;
    assume pVol_38 > 0;
    havoc Tmp_723;
    assume {:nonnull} Tmp_723 != 0;
    assume Tmp_723 > 0;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    assume {:nonnull} ioreq_12 != 0;
    assume ioreq_12 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_722 := 51;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:nonnull} pVol_38 != 0;
    assume pVol_38 > 0;
    havoc Tmp_727;
    assume {:nonnull} Tmp_727 != 0;
    assume Tmp_727 > 0;
    assume {:nonnull} ioreq_12 != 0;
    assume ioreq_12 > 0;
    havoc Tmp_730;
    assume {:nonnull} pVol_38 != 0;
    assume pVol_38 > 0;
    havoc Tmp_726;
    assume {:nonnull} Tmp_726 != 0;
    assume Tmp_726 > 0;
    assume {:nonnull} ioreq_12 != 0;
    assume ioreq_12 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} ioreq_12 != 0;
    assume ioreq_12 > 0;
    assume {:nonnull} ioreq_12 != 0;
    assume ioreq_12 > 0;
    assume {:nonnull} pVol_38 != 0;
    assume pVol_38 > 0;
    havoc Tmp_725;
    assume {:nonnull} Tmp_725 != 0;
    assume Tmp_725 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} fl_34 != 0;
    Tmp_722 := fl_34;
    goto L1;

  anon7_Then:
    assume {:partition} fl_34 == 0;
    Tmp_722 := 0;
    goto L1;

  anon9_Then:
    Tmp_722 := 51;
    goto L1;
}



procedure {:origName "mountVolume_sdv_static_function_24"} mountVolume_sdv_static_function_24(actual_pVol_39: int, actual_bootSectors: int) returns (Tmp_732: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_732 == 34 || Tmp_732 == 0 || Tmp_732 == 21 || Tmp_732 == 26 || Tmp_732 == 111 || Tmp_732 == 25 || Tmp_732 == 27 || Tmp_732 == 11 || Tmp_732 == 10;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "mountVolume_sdv_static_function_24"} mountVolume_sdv_static_function_24(actual_pVol_39: int, actual_bootSectors: int) returns (Tmp_732: int)
{
  var {:scalar} ptCount: int;
  var {:pointer} partitionTable_1: int;
  var {:scalar} ptSector: int;
  var {:pointer} Tmp_733: int;
  var {:scalar} extended: int;
  var {:scalar} sdv_324: int;
  var {:pointer} bootSector_1: int;
  var {:scalar} noOfSectors: int;
  var {:scalar} sdv_325: int;
  var {:pointer} sdv_326: int;
  var {:pointer} Tmp_735: int;
  var {:scalar} extendedPtFound: int;
  var {:pointer} Tmp_736: int;
  var {:pointer} sdv_327: int;
  var {:scalar} ptEntry: int;
  var {:scalar} primaryPtFound: int;
  var {:scalar} fl_35: int;
  var {:scalar} sdv_330: int;
  var {:scalar} Tmp_737: int;
  var {:pointer} Tmp_738: int;
  var {:pointer} pVol_39: int;
  var {:pointer} bootSectors: int;
  var boogieTmp: int;
  var vslice_dummy_var_1269: int;
  var vslice_dummy_var_1270: int;
  var vslice_dummy_var_1271: int;
  var vslice_dummy_var_1272: int;
  var vslice_dummy_var_1273: int;
  var vslice_dummy_var_1274: int;

  anon0:
    call {:si_unique_call 467} ptEntry := __HAVOC_malloc(32);
    pVol_39 := actual_pVol_39;
    bootSectors := actual_bootSectors;
    call {:si_unique_call 468} Tmp_733 := __HAVOC_malloc(12);
    call {:si_unique_call 469} Tmp_735 := __HAVOC_malloc(12);
    call {:si_unique_call 470} Tmp_736 := __HAVOC_malloc(224);
    call {:si_unique_call 471} Tmp_738 := __HAVOC_malloc(12);
    primaryPtFound := 0;
    extendedPtFound := 1;
    assume {:nonnull} bootSectors != 0;
    assume bootSectors > 0;
    call {:si_unique_call 472} fl_35 := absMountVolume(pVol_39);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} fl_35 != 0;
    Tmp_732 := fl_35;
    goto L1;

  L1:
    return;

  anon45_Then:
    assume {:partition} fl_35 == 0;
    extended := 0;
    ptSector := 0;
    goto L24;

  L24:
    call {:si_unique_call 473} ptCount, partitionTable_1, ptSector, extended, extendedPtFound, Tmp_736, sdv_327, primaryPtFound, Tmp_737, boogieTmp := mountVolume_sdv_static_function_24_loop_L24(ptCount, partitionTable_1, ptSector, extended, extendedPtFound, Tmp_736, sdv_327, ptEntry, primaryPtFound, Tmp_737, pVol_39, bootSectors, boogieTmp);
    goto L24_last;

  L24_last:
    assume {:CounterLoop 8} {:Counter "extended"} true;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} 8 > extended;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} primaryPtFound == 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} extendedPtFound == 1;
    extendedPtFound := 0;
    call {:si_unique_call 474} sdv_327 := findSector(pVol_39, ptSector);
    partitionTable_1 := sdv_327;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} partitionTable_1 != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} partitionTable_1 == dataErrorObject;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    Tmp_732 := 25;
    goto L1;

  anon49_Then:
    assume {:partition} partitionTable_1 != dataErrorObject;
    assume {:nonnull} partitionTable_1 != 0;
    assume partitionTable_1 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    ptCount := 0;
    goto L47;

  L47:
    call {:si_unique_call 475} ptCount, ptSector, extendedPtFound, Tmp_736, primaryPtFound, Tmp_737, boogieTmp := mountVolume_sdv_static_function_24_loop_L47(ptCount, partitionTable_1, ptSector, extendedPtFound, Tmp_736, ptEntry, primaryPtFound, Tmp_737, pVol_39, bootSectors, boogieTmp);
    goto L47_last;

  L47_last:
    assume {:CounterLoop 4} {:Counter "ptCount"} true;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} 4 > ptCount;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} primaryPtFound == 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} extendedPtFound == 0;
    Tmp_737 := ptCount;
    assume {:nonnull} partitionTable_1 != 0;
    assume partitionTable_1 > 0;
    havoc Tmp_736;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L61;

  L61:
    ptCount := ptCount + 1;
    goto L61_dummy;

  L61_dummy:
    assume false;
    return;

  anon56_Then:
    goto L54;

  L54:
    primaryPtFound := 1;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    havoc vslice_dummy_var_1269;
    call {:si_unique_call 476} boogieTmp := fromUNALLONG(vslice_dummy_var_1269);
    assume {:nonnull} bootSectors != 0;
    assume bootSectors > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    goto L61;

  anon57_Then:
    extendedPtFound := 1;
    assume {:nonnull} ptEntry != 0;
    assume ptEntry > 0;
    havoc vslice_dummy_var_1270;
    call {:si_unique_call 477} ptSector := fromUNALLONG(vslice_dummy_var_1270);
    goto L61;

  anon58_Then:
    goto L54;

  anon66_Then:
    goto L54;

  anon53_Then:
    assume {:partition} extendedPtFound != 0;
    goto L48;

  L48:
    extended := extended + 1;
    goto L48_dummy;

  L48_dummy:
    assume false;
    return;

  anon52_Then:
    assume {:partition} primaryPtFound != 0;
    goto L48;

  anon51_Then:
    assume {:partition} ptCount >= 4;
    goto L48;

  anon50_Then:
    goto L25;

  L25:
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    havoc vslice_dummy_var_1271;
    call {:si_unique_call 478} sdv_326 := findSector(pVol_39, vslice_dummy_var_1271);
    bootSector_1 := sdv_326;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} bootSector_1 != 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} bootSector_1 == dataErrorObject;
    Tmp_732 := 25;
    goto L1;

  anon54_Then:
    assume {:partition} bootSector_1 != dataErrorObject;
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    havoc Tmp_735;
    assume {:nonnull} Tmp_735 != 0;
    assume Tmp_735 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L76;

  L76:
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    havoc vslice_dummy_var_1272;
    call {:si_unique_call 479} sdv_324 := fromUNAL(vslice_dummy_var_1272);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_324 != 512;
    Tmp_732 := 11;
    goto L1;

  anon55_Then:
    assume {:partition} sdv_324 == 512;
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    havoc vslice_dummy_var_1273;
    call {:si_unique_call 480} sdv_330 := fromUNAL(vslice_dummy_var_1273);
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    havoc vslice_dummy_var_1274;
    call {:si_unique_call 481} sdv_325 := fromUNAL(vslice_dummy_var_1274);
    noOfSectors := sdv_325;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} noOfSectors != 0;
    goto L98;

  L98:
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    goto L100;

  L100:
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    Tmp_732 := 0;
    goto L1;

  anon62_Then:
    goto L100;

  anon61_Then:
    assume {:partition} noOfSectors == 0;
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    havoc noOfSectors;
    goto L98;

  anon60_Then:
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    havoc Tmp_733;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} bootSector_1 != 0;
    assume bootSector_1 > 0;
    havoc Tmp_738;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L105;

  L105:
    Tmp_732 := 10;
    goto L1;

  anon64_Then:
    goto L76;

  anon63_Then:
    goto L105;

  anon59_Then:
    assume {:partition} bootSector_1 == 0;
    Tmp_732 := 27;
    goto L1;

  anon65_Then:
    assume {:partition} partitionTable_1 == 0;
    assume {:nonnull} pVol_39 != 0;
    assume pVol_39 > 0;
    Tmp_732 := 27;
    goto L1;

  anon48_Then:
    assume {:partition} extendedPtFound != 1;
    goto L25;

  anon47_Then:
    assume {:partition} primaryPtFound != 0;
    goto L25;

  anon46_Then:
    assume {:partition} extended >= 8;
    goto L25;
}



procedure {:origName "dismountPhysicalDrive_sdv_static_function_24"} dismountPhysicalDrive_sdv_static_function_24(actual_socketNo_3: int) returns (Tmp_739: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_739 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "dismountPhysicalDrive_sdv_static_function_24"} dismountPhysicalDrive_sdv_static_function_24(actual_socketNo_3: int) returns (Tmp_739: int)
{
  var {:scalar} Tmp_740: int;
  var {:scalar} Tmp_741: int;
  var {:scalar} Tmp_742: int;
  var {:scalar} Tmp_743: int;
  var {:scalar} Tmp_744: int;
  var {:scalar} Tmp_745: int;
  var {:scalar} Tmp_746: int;
  var {:scalar} fl_36: int;
  var {:pointer} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} Tmp_749: int;
  var {:scalar} volNo_6: int;
  var {:pointer} Tmp_751: int;
  var {:scalar} fl_37: int;
  var {:scalar} partition_2: int;
  var {:scalar} socketNo_3: int;

  anon0:
    socketNo_3 := actual_socketNo_3;
    call {:si_unique_call 482} Tmp_749 := __HAVOC_malloc(16);
    call {:si_unique_call 483} Tmp_751 := __HAVOC_malloc(16);
    Tmp_745 := socketNo_3;
    havoc Tmp_747;
    call {:si_unique_call 484} fl_37 := dismountVolume(Tmp_747);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} fl_37 != 0;
    Tmp_739 := fl_37;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} fl_37 == 0;
    partition_2 := 1;
    goto L14;

  L14:
    call {:si_unique_call 485} Tmp_740, Tmp_741, Tmp_742, Tmp_743, Tmp_744, Tmp_746, fl_36, Tmp_748, Tmp_749, volNo_6, Tmp_751, partition_2 := dismountPhysicalDrive_sdv_static_function_24_loop_L14(Tmp_740, Tmp_741, Tmp_742, Tmp_743, Tmp_744, Tmp_746, fl_36, Tmp_748, Tmp_749, volNo_6, Tmp_751, partition_2, socketNo_3);
    goto L14_last;

  L14_last:
    assume {:CounterLoop 3} {:Counter "partition_2"} true;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} 4 > partition_2;
    Tmp_741 := partition_2;
    Tmp_744 := socketNo_3;
    havoc Tmp_749;
    assume {:nonnull} Tmp_749 != 0;
    assume Tmp_749 > 0;
    havoc volNo_6;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} volNo_6 != 255;
    Tmp_746 := volNo_6;
    havoc Tmp_748;
    call {:si_unique_call 486} fl_36 := dismountVolume(Tmp_748);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} fl_36 != 0;
    Tmp_739 := fl_36;
    goto L1;

  anon11_Then:
    assume {:partition} fl_36 == 0;
    Tmp_740 := partition_2;
    Tmp_743 := socketNo_3;
    havoc Tmp_751;
    assume {:nonnull} Tmp_751 != 0;
    assume Tmp_751 > 0;
    Tmp_742 := volNo_6;
    goto L18;

  L18:
    partition_2 := partition_2 + 1;
    goto L18_dummy;

  L18_dummy:
    assume false;
    return;

  anon12_Then:
    assume {:partition} volNo_6 == 255;
    goto L18;

  anon10_Then:
    assume {:partition} partition_2 >= 4;
    Tmp_739 := 0;
    goto L1;
}



procedure {:origName "absAddress_sdv_static_function_24"} absAddress_sdv_static_function_24(actual_pVol_40: int, actual_ioreq_13: int) returns (Tmp_752: int);
  free ensures {:va_keep} Tmp_752 == 25 || Tmp_752 == 0 || Tmp_752 == 27;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "absAddress_sdv_static_function_24"} absAddress_sdv_static_function_24(actual_pVol_40: int, actual_ioreq_13: int) returns (Tmp_752: int)
{
  var {:scalar} cardOffset: int;
  var {:pointer} sectorData: int;
  var {:pointer} pVol_40: int;
  var {:pointer} ioreq_13: int;

  anon0:
    pVol_40 := actual_pVol_40;
    ioreq_13 := actual_ioreq_13;
    assume {:nonnull} ioreq_13 != 0;
    assume ioreq_13 > 0;
    assume {:nonnull} pVol_40 != 0;
    assume pVol_40 > 0;
    assume {:nonnull} pVol_40 != 0;
    assume pVol_40 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} sectorData != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} sectorData == dataErrorObject;
    Tmp_752 := 25;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} sectorData != dataErrorObject;
    assume {:nonnull} ioreq_13 != 0;
    assume ioreq_13 > 0;
    Tmp_752 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} sectorData == 0;
    Tmp_752 := 27;
    goto L1;
}



procedure {:origName "flInitGlobalVars"} flInitGlobalVars();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flInitGlobalVars"} flInitGlobalVars()
{
  var {:scalar} i_12: int;
  var {:scalar} Tmp_755: int;
  var {:scalar} Tmp_756: int;
  var {:scalar} j_1: int;
  var {:pointer} Tmp_757: int;
  var {:scalar} Tmp_758: int;
  var {:scalar} Tmp_759: int;
  var {:scalar} Tmp_760: int;
  var {:pointer} Tmp_762: int;
  var vslice_dummy_var_105: int;

  anon0:
    call {:si_unique_call 487} vslice_dummy_var_105 := __HAVOC_malloc(4);
    call {:si_unique_call 488} Tmp_757 := __HAVOC_malloc(32);
    call {:si_unique_call 489} Tmp_762 := __HAVOC_malloc(16);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    i_12 := 0;
    goto L9;

  L9:
    call {:si_unique_call 490} i_12, Tmp_755, Tmp_756, j_1, Tmp_757, Tmp_758, Tmp_759, Tmp_760, Tmp_762 := flInitGlobalVars_loop_L9(i_12, Tmp_755, Tmp_756, j_1, Tmp_757, Tmp_758, Tmp_759, Tmp_760, Tmp_762);
    goto L9_last;

  L9_last:
    assume {:CounterLoop 8} {:Counter "i_12"} true;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} 8 > i_12;
    Tmp_756 := i_12;
    j_1 := 0;
    goto L13;

  L13:
    call {:si_unique_call 491} Tmp_755, j_1, Tmp_759, Tmp_762 := flInitGlobalVars_loop_L13(i_12, Tmp_755, j_1, Tmp_759, Tmp_762);
    goto L13_last;

  L13_last:
    assume {:CounterLoop 4} {:Counter "j_1"} true;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} 4 > j_1;
    Tmp_759 := j_1;
    Tmp_755 := i_12;
    havoc Tmp_762;
    assume {:nonnull} Tmp_762 != 0;
    assume Tmp_762 > 0;
    j_1 := j_1 + 1;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} j_1 >= 4;
    j_1 := 0;
    goto L17;

  L17:
    call {:si_unique_call 492} j_1, Tmp_757, Tmp_758, Tmp_760 := flInitGlobalVars_loop_L17(i_12, j_1, Tmp_757, Tmp_758, Tmp_760);
    goto L17_last;

  L17_last:
    assume {:CounterLoop 8} {:Counter "j_1"} true;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 8 > j_1;
    Tmp_758 := j_1;
    Tmp_760 := i_12;
    havoc Tmp_757;
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    j_1 := j_1 + 1;
    goto anon12_Else_dummy;

  anon12_Else_dummy:
    assume false;
    return;

  anon12_Then:
    assume {:partition} j_1 >= 8;
    i_12 := i_12 + 1;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    assume false;
    return;

  anon10_Then:
    assume {:partition} i_12 >= 8;
    goto L1;

  L1:
    return;

  anon9_Then:
    goto L1;
}



procedure {:origName "bdFormatPhysicalDrive_sdv_static_function_24"} bdFormatPhysicalDrive_sdv_static_function_24(actual_pVol_41: int, actual_ioreq_14: int) returns (Tmp_764: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdFormatPhysicalDrive_sdv_static_function_24"} bdFormatPhysicalDrive_sdv_static_function_24(actual_pVol_41: int, actual_ioreq_14: int) returns (Tmp_764: int)
{
  var {:scalar} fl_38: int;
  var {:scalar} fl_39: int;
  var {:pointer} userFp_1: int;
  var {:scalar} tlFp: int;
  var {:pointer} bdtl: int;
  var {:scalar} fl_40: int;
  var {:scalar} Tmp_766: int;
  var {:pointer} Tmp_767: int;
  var {:pointer} Tmp_768: int;
  var {:scalar} Tmp_769: int;
  var {:scalar} fl_41: int;
  var {:scalar} Tmp_770: int;
  var {:scalar} Tmp_771: int;
  var {:pointer} Tmp_772: int;
  var {:scalar} volNo_7: int;
  var {:scalar} Tmp_773: int;
  var {:scalar} fl_42: int;
  var {:scalar} fl_43: int;
  var {:scalar} fl_44: int;
  var {:scalar} partition_3: int;
  var {:scalar} fl_45: int;
  var {:scalar} fl_46: int;
  var {:scalar} fl_47: int;
  var {:scalar} Tmp_774: int;
  var {:scalar} socket_7: int;
  var {:pointer} pVol_41: int;
  var {:pointer} ioreq_14: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_1275: int;
  var vslice_dummy_var_1276: int;
  var vslice_dummy_var_1277: int;
  var vslice_dummy_var_1278: int;
  var vslice_dummy_var_1279: int;
  var vslice_dummy_var_1280: int;
  var vslice_dummy_var_1281: int;
  var vslice_dummy_var_1282: int;

  anon0:
    call {:si_unique_call 493} tlFp := __HAVOC_malloc(84);
    pVol_41 := actual_pVol_41;
    ioreq_14 := actual_ioreq_14;
    call {:si_unique_call 494} Tmp_767 := __HAVOC_malloc(16);
    assume {:nonnull} ioreq_14 != 0;
    assume ioreq_14 > 0;
    havoc userFp_1;
    assume {:nonnull} ioreq_14 != 0;
    assume ioreq_14 > 0;
    havoc socket_7;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    assume {:nonnull} ioreq_14 != 0;
    assume ioreq_14 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    havoc bdtl;
    assume {:IndirectCall} true;
    assume {:nonnull} bdtl != 0;
    assume bdtl > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    call {:si_unique_call 495} vslice_dummy_var_106 := flmemcpy(volumeId_TLFormatParams(tlFp), volumeId_BDTLPartitionFormatParams(bdtl), 4);
    assume {:nonnull} bdtl != 0;
    assume bdtl > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} bdtl != 0;
    assume bdtl > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} bdtl != 0;
    assume bdtl > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:IndirectCall} true;
    assume {:nonnull} bdtl != 0;
    assume bdtl > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    call {:si_unique_call 496} vslice_dummy_var_107 := flmemcpy(protectionKey_TLFormatParams(tlFp), protectionKey_BDTLPartitionFormatParams(bdtl), 8);
    assume {:nonnull} bdtl != 0;
    assume bdtl > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    call {:si_unique_call 497} fl_44 := dismountPhysicalDrive_sdv_static_function_24(socket_7);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} fl_44 != 0;
    Tmp_764 := fl_44;
    goto L1;

  L1:
    return;

  anon43_Then:
    assume {:partition} fl_44 == 0;
    Tmp_769 := socket_7;
    havoc pVol_41;
    assume {:nonnull} ioreq_14 != 0;
    assume ioreq_14 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L48;

  L48:
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    goto L50;

  L50:
    Tmp_771 := socket_7;
    assume {:nonnull} pVol_41 != 0;
    assume pVol_41 > 0;
    havoc vslice_dummy_var_1275;
    call {:si_unique_call 498} fl_40 := flFormat(Tmp_771, tlFp, vslice_dummy_var_1275);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} fl_40 != 0;
    Tmp_764 := fl_40;
    goto L1;

  anon45_Then:
    assume {:partition} fl_40 == 0;
    partition_3 := 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    havoc bdtl;
    goto L59;

  L59:
    call {:si_unique_call 499} fl_39, Tmp_767, fl_41, Tmp_770, volNo_7, Tmp_773, partition_3, fl_46, fl_47, Tmp_774, pVol_41 := bdFormatPhysicalDrive_sdv_static_function_24_loop_L59(fl_39, userFp_1, bdtl, Tmp_767, fl_41, Tmp_770, volNo_7, Tmp_773, fl_43, partition_3, fl_46, fl_47, Tmp_774, socket_7, pVol_41);
    goto L59_last;

  L59_last:
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} partition_3 > 0;
    call {:si_unique_call 500} fl_46 := findFreeVolume_sdv_static_function_24(socket_7, partition_3);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} fl_46 != 0;
    Tmp_764 := fl_46;
    goto L1;

  anon49_Then:
    assume {:partition} fl_46 == 0;
    goto L62;

  L62:
    Tmp_773 := partition_3;
    Tmp_774 := socket_7;
    havoc Tmp_767;
    assume {:nonnull} Tmp_767 != 0;
    assume Tmp_767 > 0;
    havoc volNo_7;
    Tmp_770 := volNo_7;
    havoc pVol_41;
    call {:si_unique_call 501} fl_39 := absMountVolume(pVol_41);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} fl_39 != 0;
    Tmp_764 := fl_39;
    goto L1;

  anon50_Then:
    assume {:partition} fl_39 == 0;
    assume {:nonnull} pVol_41 != 0;
    assume pVol_41 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} pVol_41 != 0;
    assume pVol_41 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} fl_43 != 0;
    Tmp_764 := fl_43;
    goto L1;

  anon53_Then:
    assume {:partition} fl_43 == 0;
    goto L79;

  L79:
    assume {:nonnull} bdtl != 0;
    assume bdtl > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L95;

  L95:
    call {:si_unique_call 502} fl_47 := dismountVolume(pVol_41);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} fl_47 != 0;
    Tmp_764 := fl_47;
    goto L1;

  anon55_Then:
    assume {:partition} fl_47 == 0;
    partition_3 := partition_3 + 1;
    goto anon55_Then_dummy;

  anon55_Then_dummy:
    assume false;
    return;

  anon52_Then:
    assume {:nonnull} pVol_41 != 0;
    assume pVol_41 > 0;
    call {:si_unique_call 503} fl_41 := flDosFormat(tl_Volume(pVol_41), bdtl);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} fl_41 == 0;
    goto L95;

  anon54_Then:
    assume {:partition} fl_41 != 0;
    Tmp_764 := fl_41;
    goto L1;

  anon51_Then:
    goto L79;

  anon48_Then:
    assume {:partition} 0 >= partition_3;
    goto L62;

  anon46_Then:
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L112;

  L112:
    call {:si_unique_call 504} fl_45 := mountLowLevel_sdv_static_function_24(pVol_41);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} fl_45 != 0;
    Tmp_764 := fl_45;
    goto L1;

  anon57_Then:
    assume {:partition} fl_45 == 0;
    assume {:nonnull} pVol_41 != 0;
    assume pVol_41 > 0;
    havoc Tmp_772;
    assume {:nonnull} Tmp_772 != 0;
    assume Tmp_772 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} pVol_41 != 0;
    assume pVol_41 > 0;
    havoc Tmp_768;
    assume {:nonnull} Tmp_768 != 0;
    assume Tmp_768 > 0;
    goto L1;

  anon63_Then:
    Tmp_764 := 0;
    goto L1;

  anon47_Then:
    Tmp_766 := socket_7;
    havoc pVol_41;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    havoc vslice_dummy_var_1276;
    havoc vslice_dummy_var_1277;
    havoc vslice_dummy_var_1278;
    havoc vslice_dummy_var_1279;
    call {:si_unique_call 505} fl_42 := placeExbByBuffer(pVol_41, vslice_dummy_var_1276, vslice_dummy_var_1277, vslice_dummy_var_1278, vslice_dummy_var_1279);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} fl_42 == 0;
    goto L112;

  anon56_Then:
    assume {:partition} fl_42 != 0;
    Tmp_764 := fl_42;
    goto L1;

  anon62_Then:
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto L124;

  L124:
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    havoc vslice_dummy_var_1280;
    havoc vslice_dummy_var_1281;
    havoc vslice_dummy_var_1282;
    call {:si_unique_call 506} fl_38 := getExbInfo(pVol_41, vslice_dummy_var_1280, vslice_dummy_var_1281, vslice_dummy_var_1282);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} fl_38 != 0;
    Tmp_764 := fl_38;
    goto L1;

  anon60_Then:
    assume {:partition} fl_38 == 0;
    assume {:nonnull} pVol_41 != 0;
    assume pVol_41 > 0;
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    goto L50;

  anon58_Then:
    assume {:nonnull} tlFp != 0;
    assume tlFp > 0;
    assume {:nonnull} userFp_1 != 0;
    assume userFp_1 > 0;
    goto L50;

  anon59_Then:
    goto L48;

  anon44_Then:
    goto L124;

  anon61_Then:
    Tmp_764 := 51;
    goto L1;
}



procedure {:origName "replaceFATsector"} replaceFATsector(actual_pVol_42: int, actual_sectorNo_1: int, actual_newFATsector: int) returns (Tmp_775: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "replaceFATsector"} replaceFATsector(actual_pVol_42: int, actual_sectorNo_1: int, actual_newFATsector: int) returns (Tmp_775: int)
{
  var {:pointer} Tmp_776: int;
  var {:scalar} Tmp_777: int;
  var {:scalar} halfByteOffset: int;
  var {:scalar} newFATentry: int;
  var {:scalar} oldFATentry: int;
  var {:scalar} firstCluster: int;
  var {:pointer} sdv_347: int;
  var {:pointer} Tmp_778: int;
  var {:scalar} Tmp_779: int;
  var {:pointer} sdv_351: int;
  var {:scalar} fl_48: int;
  var {:scalar} firstSector: int;
  var {:scalar} FAThalfBytes: int;
  var {:pointer} oldFATsector: int;
  var {:pointer} Tmp_781: int;
  var {:pointer} Tmp_782: int;
  var {:pointer} pVol_42: int;
  var {:scalar} sectorNo_1: int;
  var {:pointer} newFATsector: int;

  anon0:
    pVol_42 := actual_pVol_42;
    sectorNo_1 := actual_sectorNo_1;
    newFATsector := actual_newFATsector;
    call {:si_unique_call 507} sdv_347 := findSector(pVol_42, sectorNo_1);
    oldFATsector := sdv_347;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} oldFATsector != 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} oldFATsector != dataErrorObject;
    assume {:nonnull} pVol_42 != 0;
    assume pVol_42 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    Tmp_779 := 3;
    goto L18;

  L18:
    FAThalfBytes := Tmp_779;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} FAThalfBytes == 3;
    assume {:nonnull} pVol_42 != 0;
    assume pVol_42 > 0;
    havoc Tmp_777;
    goto L22;

  L22:
    firstCluster := Tmp_777;
    assume {:nonnull} pVol_42 != 0;
    assume pVol_42 > 0;
    havoc firstSector;
    halfByteOffset := BAND(firstCluster * FAThalfBytes, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512));
    goto L25;

  L25:
    call {:si_unique_call 508} Tmp_776, halfByteOffset, newFATentry, oldFATentry, Tmp_778, sdv_351, firstSector, oldFATsector, Tmp_781, Tmp_782 := replaceFATsector_loop_L25(Tmp_776, halfByteOffset, newFATentry, oldFATentry, Tmp_778, sdv_351, fl_48, firstSector, FAThalfBytes, oldFATsector, Tmp_781, Tmp_782, pVol_42, sectorNo_1, newFATsector);
    goto L25_last;

  L25_last:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} 1022 > halfByteOffset;
    Tmp_776 := oldFATsector;
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    havoc Tmp_781;
    call {:si_unique_call 509} oldFATentry := fromUNAL(Tmp_781);
    Tmp_782 := newFATsector;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    havoc Tmp_778;
    call {:si_unique_call 510} newFATentry := fromUNAL(Tmp_778);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(halfByteOffset, 1) != 0;
    call {:si_unique_call 511} oldFATentry := corral_nondet();
    call {:si_unique_call 512} newFATentry := corral_nondet();
    goto L43;

  L43:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} oldFATentry != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} newFATentry == 0;
    assume {:nonnull} pVol_42 != 0;
    assume pVol_42 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} fl_48 != 0;
    Tmp_775 := fl_48;
    goto L1;

  L1:
    return;

  anon28_Then:
    assume {:partition} fl_48 == 0;
    goto L44;

  L44:
    call {:si_unique_call 513} sdv_351 := findSector(pVol_42, sectorNo_1);
    oldFATsector := sdv_351;
    assume {:nonnull} pVol_42 != 0;
    assume pVol_42 > 0;
    havoc firstSector;
    halfByteOffset := halfByteOffset + FAThalfBytes;
    goto L44_dummy;

  L44_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} newFATentry != 0;
    goto L44;

  anon26_Then:
    assume {:partition} oldFATentry == 0;
    goto L44;

  anon24_Then:
    assume {:partition} BAND(halfByteOffset, 1) == 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} FAThalfBytes == 3;
    oldFATentry := BAND(oldFATentry, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048));
    newFATentry := BAND(newFATentry, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048));
    goto L43;

  anon25_Then:
    assume {:partition} FAThalfBytes != 3;
    goto L43;

  anon23_Then:
    assume {:partition} halfByteOffset >= 1022;
    Tmp_775 := 0;
    goto L1;

  anon30_Then:
    assume {:partition} FAThalfBytes != 3;
    assume {:nonnull} pVol_42 != 0;
    assume pVol_42 > 0;
    havoc Tmp_777;
    goto L22;

  anon22_Then:
    Tmp_779 := 4;
    goto L18;

  anon21_Then:
    assume {:partition} oldFATsector == dataErrorObject;
    goto L13;

  L13:
    Tmp_775 := 0;
    goto L1;

  anon29_Then:
    assume {:partition} oldFATsector == 0;
    goto L13;
}



procedure {:origName "defragmentVolume_sdv_static_function_24"} defragmentVolume_sdv_static_function_24(actual_pVol_43: int, actual_ioreq_15: int) returns (Tmp_783: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "defragmentVolume_sdv_static_function_24"} defragmentVolume_sdv_static_function_24(actual_pVol_43: int, actual_ioreq_15: int) returns (Tmp_783: int)
{
  var {:pointer} pVol_43: int;

  anon0:
    pVol_43 := actual_pVol_43;
    assume {:nonnull} pVol_43 != 0;
    assume pVol_43 > 0;
    return;
}



procedure {:origName "bdFormatVolume_sdv_static_function_24"} bdFormatVolume_sdv_static_function_24(actual_pVol_44: int, actual_ioreq_16: int) returns (Tmp_785: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdFormatVolume_sdv_static_function_24"} bdFormatVolume_sdv_static_function_24(actual_pVol_44: int, actual_ioreq_16: int) returns (Tmp_785: int)
{
  var {:scalar} Tmp_786: int;
  var {:scalar} fl_49: int;
  var {:pointer} userFp_2: int;
  var {:scalar} tlFp_1: int;
  var {:scalar} fl_50: int;
  var {:scalar} Tmp_788: int;
  var {:scalar} bdtlFp: int;
  var {:scalar} fl_51: int;
  var {:scalar} fl_52: int;
  var {:scalar} mountOK: int;
  var {:scalar} Tmp_789: int;
  var {:scalar} Tmp_790: int;
  var {:scalar} status_10: int;
  var {:scalar} fl_53: int;
  var {:scalar} socket_8: int;
  var {:scalar} Tmp_791: int;
  var {:pointer} pVol_44: int;
  var {:pointer} ioreq_16: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_1283: int;
  var vslice_dummy_var_1284: int;
  var vslice_dummy_var_1285: int;

  anon0:
    call {:si_unique_call 514} tlFp_1 := __HAVOC_malloc(84);
    call {:si_unique_call 515} bdtlFp := __HAVOC_malloc(32);
    pVol_44 := actual_pVol_44;
    ioreq_16 := actual_ioreq_16;
    assume {:nonnull} ioreq_16 != 0;
    assume ioreq_16 > 0;
    havoc userFp_2;
    mountOK := 0;
    assume {:nonnull} ioreq_16 != 0;
    assume ioreq_16 > 0;
    havoc socket_8;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} userFp_2 != 0;
    assume userFp_2 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} userFp_2 != 0;
    assume userFp_2 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} userFp_2 != 0;
    assume userFp_2 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} userFp_2 != 0;
    assume userFp_2 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} userFp_2 != 0;
    assume userFp_2 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} userFp_2 != 0;
    assume userFp_2 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} userFp_2 != 0;
    assume userFp_2 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    assume {:nonnull} tlFp_1 != 0;
    assume tlFp_1 > 0;
    call {:si_unique_call 516} fl_52 := dismountPhysicalDrive_sdv_static_function_24(socket_8);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} fl_52 != 0;
    Tmp_785 := fl_52;
    goto L1;

  L1:
    return;

  anon29_Then:
    assume {:partition} fl_52 == 0;
    Tmp_789 := socket_8;
    havoc pVol_44;
    assume {:nonnull} ioreq_16 != 0;
    assume ioreq_16 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto L38;

  L38:
    Tmp_790 := socket_8;
    assume {:nonnull} pVol_44 != 0;
    assume pVol_44 > 0;
    havoc vslice_dummy_var_1283;
    call {:si_unique_call 517} fl_50 := flFormat(Tmp_790, tlFp_1, vslice_dummy_var_1283);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} fl_50 != 0;
    Tmp_785 := fl_50;
    goto L1;

  anon31_Then:
    assume {:partition} fl_50 == 0;
    goto L44;

  L44:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} mountOK == 0;
    call {:si_unique_call 518} fl_51 := absMountVolume(pVol_44);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} fl_51 != 0;
    Tmp_785 := fl_51;
    goto L1;

  anon37_Then:
    assume {:partition} fl_51 == 0;
    goto L47;

  L47:
    assume {:nonnull} pVol_44 != 0;
    assume pVol_44 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} pVol_44 != 0;
    assume pVol_44 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} fl_53 != 0;
    Tmp_785 := fl_53;
    goto L1;

  anon35_Then:
    assume {:partition} fl_53 == 0;
    goto L48;

  L48:
    assume {:nonnull} ioreq_16 != 0;
    assume ioreq_16 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} bdtlFp != 0;
    assume bdtlFp > 0;
    assume {:nonnull} userFp_2 != 0;
    assume userFp_2 > 0;
    call {:si_unique_call 519} vslice_dummy_var_108 := flmemcpy(volumeId_BDTLPartitionFormatParams(bdtlFp), volumeId_FormatParams(userFp_2), 4);
    assume {:nonnull} bdtlFp != 0;
    assume bdtlFp > 0;
    assume {:nonnull} userFp_2 != 0;
    assume userFp_2 > 0;
    assume {:nonnull} bdtlFp != 0;
    assume bdtlFp > 0;
    assume {:nonnull} userFp_2 != 0;
    assume userFp_2 > 0;
    assume {:nonnull} bdtlFp != 0;
    assume bdtlFp > 0;
    assume {:nonnull} pVol_44 != 0;
    assume pVol_44 > 0;
    call {:si_unique_call 520} fl_49 := flDosFormat(tl_Volume(pVol_44), bdtlFp);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} fl_49 != 0;
    Tmp_785 := fl_49;
    goto L1;

  anon36_Then:
    assume {:partition} fl_49 == 0;
    goto L59;

  L59:
    Tmp_785 := 0;
    goto L1;

  anon34_Then:
    goto L59;

  anon33_Then:
    goto L48;

  anon32_Then:
    assume {:partition} mountOK != 0;
    goto L47;

  anon41_Then:
    assume {:nonnull} ioreq_16 != 0;
    assume ioreq_16 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    Tmp_788 := socket_8;
    Tmp_786 := socket_8;
    assume {:nonnull} pVol_44 != 0;
    assume pVol_44 > 0;
    havoc vslice_dummy_var_1284;
    call {:si_unique_call 521} status_10 := flMount(Tmp_786, Tmp_788, tl_Volume(pVol_44), 0, vslice_dummy_var_1284);
    mountOK := 1;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_10 == 26;
    goto L85;

  L85:
    assume {:nonnull} ioreq_16 != 0;
    assume ioreq_16 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    Tmp_791 := socket_8;
    assume {:nonnull} pVol_44 != 0;
    assume pVol_44 > 0;
    havoc vslice_dummy_var_1285;
    call {:si_unique_call 522} status_10 := flFormat(Tmp_791, tlFp_1, vslice_dummy_var_1285);
    mountOK := 0;
    goto L93;

  L93:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_10 != 0;
    Tmp_785 := status_10;
    goto L1;

  anon40_Then:
    assume {:partition} status_10 == 0;
    goto L44;

  anon39_Then:
    goto L86;

  L86:
    assume {:nonnull} pVol_44 != 0;
    assume pVol_44 > 0;
    assume {:nonnull} pVol_44 != 0;
    assume pVol_44 > 0;
    assume {:nonnull} pVol_44 != 0;
    assume pVol_44 > 0;
    assume {:nonnull} pVol_44 != 0;
    assume pVol_44 > 0;
    goto L93;

  anon42_Then:
    assume {:partition} status_10 != 26;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_10 != 23;
    goto L86;

  anon38_Then:
    assume {:partition} status_10 == 23;
    goto L85;

  anon30_Then:
    goto L38;
}



procedure {:origName "absMountVolume"} absMountVolume(actual_pVol_45: int) returns (Tmp_792: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_792 == 34 || Tmp_792 == 0 || Tmp_792 == 21 || Tmp_792 == 26 || Tmp_792 == 111;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "absMountVolume"} absMountVolume(actual_pVol_45: int) returns (Tmp_792: int)
{
  var {:pointer} Tmp_793: int;
  var {:pointer} partitionTable_2: int;
  var {:pointer} Tmp_794: int;
  var {:pointer} Tmp_795: int;
  var {:pointer} Tmp_796: int;
  var {:pointer} Tmp_797: int;
  var {:scalar} fl_54: int;
  var {:pointer} Tmp_798: int;
  var {:pointer} Tmp_799: int;
  var {:scalar} sdv_362: int;
  var {:pointer} Tmp_800: int;
  var {:pointer} Tmp_801: int;
  var {:pointer} Tmp_802: int;
  var {:pointer} Tmp_803: int;
  var {:pointer} Tmp_804: int;
  var {:scalar} sdv_363: int;
  var {:scalar} volNo_8: int;
  var {:pointer} sdv_365: int;
  var {:scalar} sdv_366: int;
  var {:scalar} sdv_367: int;
  var {:pointer} Tmp_806: int;
  var {:scalar} fl_55: int;
  var {:pointer} Tmp_807: int;
  var {:scalar} sdv_368: int;
  var {:pointer} Tmp_808: int;
  var {:pointer} Tmp_809: int;
  var {:scalar} Tmp_810: int;
  var {:pointer} pVol_45: int;
  var vslice_dummy_var_1286: int;

  anon0:
    pVol_45 := actual_pVol_45;
    call {:si_unique_call 523} Tmp_793 := __HAVOC_malloc(48);
    call {:si_unique_call 524} Tmp_794 := __HAVOC_malloc(48);
    call {:si_unique_call 525} Tmp_795 := __HAVOC_malloc(8);
    call {:si_unique_call 526} Tmp_796 := __HAVOC_malloc(48);
    call {:si_unique_call 527} Tmp_797 := __HAVOC_malloc(48);
    call {:si_unique_call 528} Tmp_798 := __HAVOC_malloc(8);
    call {:si_unique_call 529} Tmp_800 := __HAVOC_malloc(8);
    call {:si_unique_call 530} Tmp_804 := __HAVOC_malloc(8);
    call {:si_unique_call 531} Tmp_806 := __HAVOC_malloc(8);
    call {:si_unique_call 532} Tmp_807 := __HAVOC_malloc(48);
    call {:si_unique_call 533} Tmp_809 := __HAVOC_malloc(8);
    volNo_8 := pVol_45;
    call {:si_unique_call 534} fl_55 := dismountVolume(pVol_45);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} fl_55 == 0;
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    havoc Tmp_810;
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    havoc vslice_dummy_var_1286;
    call {:si_unique_call 535} fl_54 := flMount(volNo_8, Tmp_810, tl_Volume(pVol_45), 1, vslice_dummy_var_1286);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} fl_54 != 0;
    Tmp_792 := fl_54;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} fl_54 == 0;
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    call {:si_unique_call 536} sdv_365 := findSector(pVol_45, 0);
    partitionTable_2 := sdv_365;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} partitionTable_2 != 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} partitionTable_2 != dataErrorObject;
    assume {:nonnull} partitionTable_2 != 0;
    assume partitionTable_2 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    havoc Tmp_800;
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    havoc Tmp_795;
    assume {:nonnull} Tmp_795 != 0;
    assume Tmp_795 > 0;
    assume {:nonnull} Tmp_795 != 0;
    assume Tmp_795 > 0;
    assume {:nonnull} Tmp_800 != 0;
    assume Tmp_800 > 0;
    assume {:nonnull} partitionTable_2 != 0;
    assume partitionTable_2 > 0;
    havoc Tmp_797;
    assume {:nonnull} Tmp_797 != 0;
    assume Tmp_797 > 0;
    havoc Tmp_808;
    call {:si_unique_call 537} sdv_367 := fromUNALLONG(Tmp_808);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_367 != 0;
    goto L37;

  L37:
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    Tmp_792 := 0;
    goto L1;

  anon21_Then:
    assume {:partition} sdv_367 == 0;
    assume {:nonnull} partitionTable_2 != 0;
    assume partitionTable_2 > 0;
    havoc Tmp_793;
    assume {:nonnull} Tmp_793 != 0;
    assume Tmp_793 > 0;
    havoc Tmp_801;
    call {:si_unique_call 538} sdv_366 := fromUNALLONG(Tmp_801);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_366 != 0;
    goto L46;

  L46:
    assume {:nonnull} partitionTable_2 != 0;
    assume partitionTable_2 > 0;
    havoc Tmp_794;
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    havoc Tmp_799;
    call {:si_unique_call 539} sdv_362 := fromUNALLONG(Tmp_799);
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    havoc Tmp_804;
    assume {:nonnull} Tmp_804 != 0;
    assume Tmp_804 > 0;
    assume {:nonnull} partitionTable_2 != 0;
    assume partitionTable_2 > 0;
    havoc Tmp_796;
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    havoc Tmp_803;
    call {:si_unique_call 540} sdv_368 := fromUNALLONG(Tmp_803);
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    havoc Tmp_806;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    goto L37;

  anon22_Then:
    assume {:partition} sdv_366 == 0;
    assume {:nonnull} partitionTable_2 != 0;
    assume partitionTable_2 > 0;
    havoc Tmp_807;
    assume {:nonnull} Tmp_807 != 0;
    assume Tmp_807 > 0;
    havoc Tmp_802;
    call {:si_unique_call 541} sdv_363 := fromUNALLONG(Tmp_802);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_363 != 0;
    goto L46;

  anon23_Then:
    assume {:partition} sdv_363 == 0;
    goto L37;

  anon20_Then:
    goto L27;

  L27:
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    havoc Tmp_809;
    assume {:nonnull} pVol_45 != 0;
    assume pVol_45 > 0;
    havoc Tmp_798;
    assume {:nonnull} Tmp_798 != 0;
    assume Tmp_798 > 0;
    assume {:nonnull} Tmp_798 != 0;
    assume Tmp_798 > 0;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    goto L37;

  anon19_Then:
    assume {:partition} partitionTable_2 == dataErrorObject;
    goto L27;

  anon24_Then:
    assume {:partition} partitionTable_2 == 0;
    goto L27;

  anon17_Then:
    assume {:partition} fl_55 != 0;
    Tmp_792 := fl_55;
    goto L1;
}



procedure {:origName "setBusy"} setBusy(actual_pVol_46: int, actual_state: int, actual_partition_4: int) returns (Tmp_811: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} Tmp_811 == 9 || Tmp_811 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "setBusy"} setBusy(actual_pVol_46: int, actual_state: int, actual_partition_4: int) returns (Tmp_811: int)
{
  var {:scalar} sdv_369: int;
  var {:pointer} Tmp_812: int;
  var {:scalar} status_11: int;
  var {:pointer} pVol_46: int;
  var {:scalar} state: int;
  var {:scalar} partition_4: int;
  var vslice_dummy_var_1287: int;
  var vslice_dummy_var_1288: int;
  var vslice_dummy_var_1289: int;
  var vslice_dummy_var_1290: int;
  var vslice_dummy_var_1291: int;
  var vslice_dummy_var_1292: int;

  anon0:
    pVol_46 := actual_pVol_46;
    state := actual_state;
    partition_4 := actual_partition_4;
    status_11 := 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} state == 1;
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    havoc vslice_dummy_var_1287;
    call {:si_unique_call 542} sdv_369 := flTakeMutex(vslice_dummy_var_1287);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_369 != 0;
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    havoc Tmp_812;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    havoc vslice_dummy_var_1288;
    call {:si_unique_call 543} flSocketSetBusy(vslice_dummy_var_1288, 1);
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    havoc vslice_dummy_var_1289;
    call {:si_unique_call 544} flNeedVcc(vslice_dummy_var_1289);
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    goto L20;

  L20:
    Tmp_811 := status_11;
    goto L1;

  L1:
    return;

  anon11_Then:
    goto L20;

  anon10_Then:
    assume {:partition} sdv_369 == 0;
    Tmp_811 := 9;
    goto L1;

  anon12_Then:
    assume {:partition} state != 1;
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    goto L25;

  L25:
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    havoc vslice_dummy_var_1290;
    call {:si_unique_call 545} flDontNeedVcc(vslice_dummy_var_1290);
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    havoc vslice_dummy_var_1291;
    call {:si_unique_call 546} flSocketSetBusy(vslice_dummy_var_1291, 0);
    assume {:nonnull} pVol_46 != 0;
    assume pVol_46 > 0;
    havoc vslice_dummy_var_1292;
    call {:si_unique_call 547} flFreeMutex(vslice_dummy_var_1292);
    goto L20;

  anon9_Then:
    goto L25;
}



procedure {:origName "sectorsInVolume_sdv_static_function_24"} sectorsInVolume_sdv_static_function_24(actual_pVol_47: int, actual_ioreq_17: int) returns (Tmp_814: int);
  free ensures {:va_keep} Tmp_814 == 31 || Tmp_814 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sectorsInVolume_sdv_static_function_24"} sectorsInVolume_sdv_static_function_24(actual_pVol_47: int, actual_ioreq_17: int) returns (Tmp_814: int)
{
  var {:scalar} sectorsInVol: int;
  var {:pointer} pVol_47: int;
  var {:pointer} ioreq_17: int;

  anon0:
    pVol_47 := actual_pVol_47;
    ioreq_17 := actual_ioreq_17;
    assume {:nonnull} pVol_47 != 0;
    assume pVol_47 > 0;
    assume {:nonnull} pVol_47 != 0;
    assume pVol_47 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} ioreq_17 != 0;
    assume ioreq_17 > 0;
    Tmp_814 := 31;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} ioreq_17 != 0;
    assume ioreq_17 > 0;
    assume {:nonnull} pVol_47 != 0;
    assume pVol_47 > 0;
    Tmp_814 := 0;
    goto L1;
}



procedure {:origName "inquireCapabilities_sdv_static_function_24"} inquireCapabilities_sdv_static_function_24(actual_flash_25: int, actual_capability: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "inquireCapabilities_sdv_static_function_24"} inquireCapabilities_sdv_static_function_24(actual_flash_25: int, actual_capability: int)
{
  var {:scalar} inquiredCapability: int;
  var {:pointer} flash_25: int;
  var {:pointer} capability: int;
  var vslice_dummy_var_109: int;

  anon0:
    call {:si_unique_call 548} vslice_dummy_var_109 := __HAVOC_malloc(4);
    flash_25 := actual_flash_25;
    capability := actual_capability;
    assume {:nonnull} capability != 0;
    assume capability > 0;
    havoc inquiredCapability;
    assume {:nonnull} capability != 0;
    assume capability > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} inquiredCapability != 2;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} inquiredCapability != 3;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} inquiredCapability != 4;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} inquiredCapability != 5;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} inquiredCapability != 6;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} inquiredCapability != 7;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} inquiredCapability != 8;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} inquiredCapability != 9;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} inquiredCapability != 10;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} inquiredCapability == 11;
    assume {:nonnull} flash_25 != 0;
    assume flash_25 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L15;

  L15:
    assume {:nonnull} capability != 0;
    assume capability > 0;
    goto L1;

  L1:
    return;

  anon40_Then:
    assume {:nonnull} flash_25 != 0;
    assume flash_25 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto L15;

  anon41_Then:
    goto L1;

  anon42_Then:
    assume {:partition} inquiredCapability != 11;
    goto L1;

  anon43_Then:
    assume {:partition} inquiredCapability == 10;
    goto L8;

  L8:
    assume {:nonnull} flash_25 != 0;
    assume flash_25 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} capability != 0;
    assume capability > 0;
    goto L1;

  anon35_Then:
    goto L1;

  anon44_Then:
    assume {:partition} inquiredCapability == 9;
    assume {:nonnull} flash_25 != 0;
    assume flash_25 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} capability != 0;
    assume capability > 0;
    goto L1;

  anon39_Then:
    goto L1;

  anon45_Then:
    assume {:partition} inquiredCapability == 8;
    goto L11;

  L11:
    assume {:nonnull} flash_25 != 0;
    assume flash_25 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} capability != 0;
    assume capability > 0;
    goto L1;

  anon38_Then:
    goto L1;

  anon46_Then:
    assume {:partition} inquiredCapability == 7;
    goto L11;

  anon47_Then:
    assume {:partition} inquiredCapability == 6;
    goto L10;

  L10:
    assume {:nonnull} flash_25 != 0;
    assume flash_25 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} capability != 0;
    assume capability > 0;
    goto L1;

  anon37_Then:
    goto L1;

  anon48_Then:
    assume {:partition} inquiredCapability == 5;
    goto L10;

  anon49_Then:
    assume {:partition} inquiredCapability == 4;
    goto L9;

  L9:
    assume {:nonnull} flash_25 != 0;
    assume flash_25 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} capability != 0;
    assume capability > 0;
    goto L1;

  anon36_Then:
    goto L1;

  anon50_Then:
    assume {:partition} inquiredCapability == 3;
    goto L9;

  anon51_Then:
    assume {:partition} inquiredCapability == 2;
    goto L8;
}



procedure {:origName "flExit"} flExit();
  modifies alloc, initDone, LockDepth;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flExit"} flExit()
{
  var {:scalar} mutexTaken: int;
  var {:scalar} sdv_373: int;
  var {:pointer} pVol_48: int;
  var {:scalar} volNo_9: int;
  var {:scalar} sdv_376: int;
  var {:scalar} Tmp_820: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_1293: int;
  var vslice_dummy_var_1294: int;
  var vslice_dummy_var_1295: int;
  var vslice_dummy_var_1296: int;
  var vslice_dummy_var_1297: int;
  var vslice_dummy_var_1298: int;

  anon0:
    call {:si_unique_call 549} vslice_dummy_var_110 := __HAVOC_malloc(4);
    havoc pVol_48;
    mutexTaken := 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} li2bplFunctionConstant836 != 0;
    volNo_9 := 0;
    goto L11;

  L11:
    call {:si_unique_call 550} sdv_373, volNo_9, vslice_dummy_var_111, vslice_dummy_var_112 := flExit_loop_L11(sdv_373, pVol_48, volNo_9, vslice_dummy_var_111, vslice_dummy_var_112);
    goto L11_last;

  L11_last:
    assume {:CounterLoop 20} {:Counter "volNo_9"} true;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 20 > volNo_9;
    assume {:nonnull} pVol_48 != 0;
    assume pVol_48 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} pVol_48 != 0;
    assume pVol_48 > 0;
    havoc vslice_dummy_var_1293;
    call {:si_unique_call 551} sdv_373 := setBusy(pVol_48, 1, vslice_dummy_var_1293);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_373 == 0;
    call {:si_unique_call 552} vslice_dummy_var_111 := dismountVolume(pVol_48);
    call {:si_unique_call 553} dismountLowLevel_sdv_static_function_24(pVol_48);
    assume {:nonnull} pVol_48 != 0;
    assume pVol_48 > 0;
    havoc vslice_dummy_var_1294;
    call {:si_unique_call 554} vslice_dummy_var_112 := setBusy(pVol_48, 0, vslice_dummy_var_1294);
    goto L14;

  L14:
    volNo_9 := volNo_9 + 1;
    goto L14_dummy;

  L14_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} sdv_373 != 0;
    goto L14;

  anon16_Then:
    goto L14;

  anon15_Then:
    assume {:partition} volNo_9 >= 20;
    havoc pVol_48;
    volNo_9 := 0;
    goto L30;

  L30:
    call {:si_unique_call 555} mutexTaken, volNo_9, sdv_376, Tmp_820 := flExit_loop_L30(mutexTaken, pVol_48, volNo_9, sdv_376, Tmp_820);
    goto L30_last;

  L30_last:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} pVol_48 != 0;
    assume pVol_48 > 0;
    havoc vslice_dummy_var_1295;
    call {:si_unique_call 556} sdv_376 := setBusy(pVol_48, 1, vslice_dummy_var_1295);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_376 != 0;
    Tmp_820 := 0;
    goto L40;

  L40:
    mutexTaken := Tmp_820;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} mutexTaken == 1;
    assume {:nonnull} pVol_48 != 0;
    assume pVol_48 > 0;
    havoc vslice_dummy_var_1296;
    call {:si_unique_call 557} flFreeMutex(vslice_dummy_var_1296);
    assume {:nonnull} pVol_48 != 0;
    assume pVol_48 > 0;
    havoc vslice_dummy_var_1297;
    call {:si_unique_call 558} flDeleteMutex(vslice_dummy_var_1297);
    mutexTaken := 0;
    goto L42;

  L42:
    assume {:nonnull} pVol_48 != 0;
    assume pVol_48 > 0;
    havoc vslice_dummy_var_1298;
    call {:si_unique_call 559} flExitSocket(vslice_dummy_var_1298);
    volNo_9 := volNo_9 + 1;
    goto L42_dummy;

  L42_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} mutexTaken != 1;
    goto L42;

  anon19_Then:
    assume {:partition} sdv_376 == 0;
    Tmp_820 := 1;
    goto L40;

  anon18_Then:
    call {:si_unique_call 560} flRemoveTimer();
    initDone := 0;
    pVol_48 := 0;
    goto L1;

  L1:
    return;

  anon20_Then:
    assume {:partition} li2bplFunctionConstant836 == 0;
    goto L1;
}



procedure {:origName "flInit"} flInit() returns (Tmp_821: int);
  modifies alloc, initDone;
  free ensures {:va_keep} Tmp_821 == 0 || Tmp_821 == 60 || Tmp_821 == 102 || Tmp_821 == 31 || Tmp_821 == 63;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flInit"} flInit() returns (Tmp_821: int)
{
  var {:scalar} Tmp_822: int;
  var {:pointer} Tmp_823: int;
  var {:scalar} req: int;
  var {:scalar} Tmp_824: int;
  var {:scalar} Tmp_825: int;
  var {:scalar} fl_56: int;
  var {:scalar} Tmp_826: int;
  var {:scalar} Tmp_827: int;
  var {:pointer} pVol_49: int;
  var {:scalar} Tmp_828: int;
  var {:scalar} volNo_10: int;
  var {:scalar} Tmp_830: int;
  var {:scalar} Tmp_831: int;
  var {:scalar} Tmp_832: int;
  var {:scalar} fl_57: int;
  var {:scalar} Tmp_833: int;
  var {:pointer} Tmp_834: int;
  var {:pointer} Tmp_835: int;
  var {:scalar} Tmp_836: int;
  var {:scalar} Tmp_837: int;
  var {:scalar} fl_58: int;
  var {:scalar} status_12: int;
  var {:scalar} Tmp_838: int;
  var {:scalar} Tmp_839: int;
  var {:pointer} Tmp_840: int;
  var {:scalar} sdv_387: int;
  var {:scalar} Tmp_841: int;
  var boogieTmp: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_1299: int;
  var vslice_dummy_var_1300: int;
  var vslice_dummy_var_1301: int;

  anon0:
    call {:si_unique_call 561} req := __HAVOC_malloc(24);
    call {:si_unique_call 562} Tmp_834 := __HAVOC_malloc(16);
    call {:si_unique_call 563} Tmp_835 := __HAVOC_malloc(16);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} initDone == 0;
    havoc pVol_49;
    call {:si_unique_call 564} flInitGlobalVars();
    call {:si_unique_call 565} flSetEnvVar();
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L135;

  L135:
    assume {:IndirectCall} true;
    call {:si_unique_call 566} vslice_dummy_var_113 := flmemset(vols_3, 0, 2800);
    volNo_10 := 0;
    havoc pVol_49;
    goto L26;

  L26:
    call {:si_unique_call 567} volNo_10, Tmp_840, boogieTmp, vslice_dummy_var_114, vslice_dummy_var_115 := flInit_loop_L26(pVol_49, volNo_10, Tmp_840, boogieTmp, vslice_dummy_var_114, vslice_dummy_var_115);
    goto L26_last;

  L26_last:
    assume {:CounterLoop 20} {:Counter "volNo_10"} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} 20 > volNo_10;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} 8 > volNo_10;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    call {:si_unique_call 568} boogieTmp := flSocketOf(volNo_10);
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    call {:si_unique_call 569} boogieTmp := flFlashOf(volNo_10);
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    havoc vslice_dummy_var_1299;
    call {:si_unique_call 570} vslice_dummy_var_114 := flmemset(vslice_dummy_var_1299, 0, 116);
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    havoc vslice_dummy_var_1300;
    call {:si_unique_call 571} vslice_dummy_var_115 := flmemset(vslice_dummy_var_1300, 0, 176);
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    havoc Tmp_840;
    assume {:nonnull} Tmp_840 != 0;
    assume Tmp_840 > 0;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    goto L48;

  L48:
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    volNo_10 := volNo_10 + 1;
    goto L48_dummy;

  L48_dummy:
    assume false;
    return;

  anon32_Then:
    assume {:partition} volNo_10 >= 8;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    goto L48;

  anon31_Then:
    assume {:partition} volNo_10 >= 20;
    call {:si_unique_call 572} flSysfunInit();
    goto L52;

  L52:
    call {:si_unique_call 573} Tmp_826, Tmp_837, Tmp_841 := flInit_loop_L52(Tmp_826, Tmp_837, Tmp_841);
    goto L52_last;

  L52_last:
    assume {:CounterLoop 3} {:Counter "noOfTLs"} true;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_826;
    havoc Tmp_837;
    havoc Tmp_841;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    assume false;
    return;

  anon33_Then:
    initDone := 1;
    call {:si_unique_call 574} fl_57 := flRegisterComponents();
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} fl_57 != 0;
    Tmp_821 := fl_57;
    goto L1;

  L1:
    return;

  anon34_Then:
    assume {:partition} fl_57 == 0;
    call {:si_unique_call 575} bdkInit();
    call {:si_unique_call 576} fl_56 := flInitSockets();
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} fl_56 == 0;
    call {:si_unique_call 577} fl_58 := flInstallTimer(li2bplFunctionConstant835, 1500);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} fl_58 != 0;
    Tmp_821 := fl_58;
    goto L1;

  anon36_Then:
    assume {:partition} fl_58 == 0;
    volNo_10 := 0;
    goto L87;

  L87:
    call {:si_unique_call 578} Tmp_823, Tmp_825, Tmp_827, volNo_10, Tmp_832, sdv_387 := flInit_loop_L87(Tmp_823, Tmp_825, Tmp_827, volNo_10, Tmp_832, sdv_387);
    goto L87_last;

  L87_last:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 579} vslice_dummy_var_116 := flmemset(handleConversionTable, 255, 32);
    havoc pVol_49;
    assume {:nonnull} req != 0;
    assume req > 0;
    goto L102;

  L102:
    call {:si_unique_call 580} Tmp_822, Tmp_824, Tmp_828, volNo_10, Tmp_830, Tmp_831, Tmp_833, Tmp_834, Tmp_835, Tmp_836, status_12, Tmp_838, Tmp_839 := flInit_loop_L102(Tmp_822, req, Tmp_824, pVol_49, Tmp_828, volNo_10, Tmp_830, Tmp_831, Tmp_833, Tmp_834, Tmp_835, Tmp_836, status_12, Tmp_838, Tmp_839);
    goto L102_last;

  L102_last:
    assume {:nonnull} req != 0;
    assume req > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} req != 0;
    assume req > 0;
    havoc Tmp_822;
    havoc Tmp_835;
    assume {:nonnull} Tmp_835 != 0;
    assume Tmp_835 > 0;
    assume {:nonnull} req != 0;
    assume req > 0;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    assume {:nonnull} req != 0;
    assume req > 0;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    havoc vslice_dummy_var_1301;
    call {:si_unique_call 581} status_12 := flPreMount(807, req, vslice_dummy_var_1301);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_12 != 0;
    goto L113;

  L113:
    assume {:nonnull} req != 0;
    assume req > 0;
    goto L113_dummy;

  L113_dummy:
    assume false;
    return;

  anon40_Then:
    assume {:partition} status_12 == 0;
    assume {:nonnull} req != 0;
    assume req > 0;
    havoc Tmp_830;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    volNo_10 := 1;
    goto L116;

  L116:
    call {:si_unique_call 582} Tmp_824, Tmp_828, volNo_10, Tmp_831, Tmp_833, Tmp_834, Tmp_836, Tmp_838, Tmp_839 := flInit_loop_L116(req, Tmp_824, pVol_49, Tmp_828, volNo_10, Tmp_831, Tmp_833, Tmp_834, Tmp_836, Tmp_838, Tmp_839);
    goto L116_last;

  L116_last:
    assume {:nonnull} req != 0;
    assume req > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    Tmp_839 := volNo_10;
    assume {:nonnull} req != 0;
    assume req > 0;
    havoc Tmp_828;
    havoc Tmp_834;
    assume {:nonnull} Tmp_834 != 0;
    assume Tmp_834 > 0;
    havoc Tmp_833;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    havoc Tmp_831;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    havoc Tmp_824;
    assume {:nonnull} req != 0;
    assume req > 0;
    havoc Tmp_836;
    havoc Tmp_838;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    assume {:nonnull} pVol_49 != 0;
    assume pVol_49 > 0;
    volNo_10 := volNo_10 + 1;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    assume false;
    return;

  anon42_Then:
    goto L113;

  anon41_Then:
    goto L113;

  anon39_Then:
    goto L5;

  L5:
    Tmp_821 := 0;
    goto L1;

  anon37_Then:
    Tmp_832 := volNo_10;
    havoc Tmp_823;
    call {:si_unique_call 583} sdv_387 := flCreateMutex(Tmp_823);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_387 != 0;
    Tmp_821 := 31;
    goto L1;

  anon38_Then:
    assume {:partition} sdv_387 == 0;
    Tmp_827 := volNo_10;
    Tmp_825 := volNo_10;
    volNo_10 := volNo_10 + 1;
    goto anon38_Then_dummy;

  anon38_Then_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} fl_56 != 0;
    Tmp_821 := fl_56;
    goto L1;

  anon30_Then:
    goto L135;

  anon29_Then:
    assume {:partition} initDone != 0;
    goto L5;
}



procedure {:origName "getPhysicalInfo_sdv_static_function_24"} getPhysicalInfo_sdv_static_function_24(actual_pVol_50: int, actual_ioreq_18: int) returns (Tmp_842: int);
  free ensures {:va_keep} Tmp_842 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "getPhysicalInfo_sdv_static_function_24"} getPhysicalInfo_sdv_static_function_24(actual_pVol_50: int, actual_ioreq_18: int) returns (Tmp_842: int)
{
  var {:pointer} Tmp_843: int;
  var {:pointer} Tmp_845: int;
  var {:pointer} Tmp_846: int;
  var {:pointer} Tmp_847: int;
  var {:pointer} Tmp_848: int;
  var {:pointer} physicalInfo_1: int;
  var {:pointer} Tmp_849: int;
  var {:pointer} Tmp_850: int;
  var {:pointer} pVol_50: int;
  var {:pointer} ioreq_18: int;
  var vslice_dummy_var_117: int;

  anon0:
    pVol_50 := actual_pVol_50;
    ioreq_18 := actual_ioreq_18;
    assume {:nonnull} ioreq_18 != 0;
    assume ioreq_18 > 0;
    havoc physicalInfo_1;
    assume {:nonnull} pVol_50 != 0;
    assume pVol_50 > 0;
    havoc Tmp_843;
    assume {:nonnull} Tmp_843 != 0;
    assume Tmp_843 > 0;
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    assume {:nonnull} pVol_50 != 0;
    assume pVol_50 > 0;
    havoc Tmp_850;
    assume {:nonnull} Tmp_850 != 0;
    assume Tmp_850 > 0;
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    assume {:nonnull} pVol_50 != 0;
    assume pVol_50 > 0;
    havoc Tmp_846;
    assume {:nonnull} pVol_50 != 0;
    assume pVol_50 > 0;
    havoc Tmp_849;
    assume {:nonnull} Tmp_846 != 0;
    assume Tmp_846 > 0;
    assume {:nonnull} Tmp_849 != 0;
    assume Tmp_849 > 0;
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    assume {:nonnull} pVol_50 != 0;
    assume pVol_50 > 0;
    havoc Tmp_847;
    assume {:nonnull} Tmp_847 != 0;
    assume Tmp_847 > 0;
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    assume {:nonnull} pVol_50 != 0;
    assume pVol_50 > 0;
    havoc Tmp_845;
    assume {:nonnull} Tmp_845 != 0;
    assume Tmp_845 > 0;
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    assume {:nonnull} pVol_50 != 0;
    assume pVol_50 > 0;
    havoc Tmp_848;
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    goto L11;

  L11:
    assume {:nonnull} ioreq_18 != 0;
    assume ioreq_18 > 0;
    call {:si_unique_call 584} vslice_dummy_var_117 := socketInfo_sdv_static_function_24(pVol_50, irLength_IOreq(ioreq_18));
    Tmp_842 := 0;
    return;

  anon13_Then:
    goto L11;

  anon14_Then:
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    goto L11;

  anon15_Then:
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    goto L11;

  anon16_Then:
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    goto L11;

  anon17_Then:
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    goto L11;

  anon18_Then:
    assume {:nonnull} physicalInfo_1 != 0;
    assume physicalInfo_1 > 0;
    goto L11;
}



procedure {:origName "writeProtect_sdv_static_function_24"} writeProtect_sdv_static_function_24(actual_pVol_51: int, actual_ioreq_19: int) returns (Tmp_851: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "writeProtect_sdv_static_function_24"} writeProtect_sdv_static_function_24(actual_pVol_51: int, actual_ioreq_19: int) returns (Tmp_851: int)
{
  var {:scalar} passCode2: int;
  var {:pointer} Tmp_852: int;
  var {:scalar} passCode1: int;
  var {:pointer} Tmp_853: int;
  var {:pointer} Tmp_854: int;
  var {:pointer} Tmp_855: int;
  var {:pointer} Tmp_856: int;
  var {:pointer} Tmp_857: int;
  var {:pointer} Tmp_858: int;
  var {:pointer} Tmp_859: int;
  var {:pointer} Tmp_860: int;
  var {:pointer} Tmp_861: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_863: int;
  var {:pointer} Tmp_864: int;
  var {:pointer} pVol_51: int;
  var {:pointer} ioreq_19: int;

  anon0:
    pVol_51 := actual_pVol_51;
    ioreq_19 := actual_ioreq_19;
    call {:si_unique_call 585} Tmp_852 := __HAVOC_malloc(8);
    call {:si_unique_call 586} Tmp_853 := __HAVOC_malloc(8);
    call {:si_unique_call 587} Tmp_854 := __HAVOC_malloc(8);
    call {:si_unique_call 588} Tmp_855 := __HAVOC_malloc(8);
    call {:si_unique_call 589} Tmp_856 := __HAVOC_malloc(8);
    call {:si_unique_call 590} Tmp_857 := __HAVOC_malloc(8);
    call {:si_unique_call 591} Tmp_858 := __HAVOC_malloc(8);
    call {:si_unique_call 592} Tmp_859 := __HAVOC_malloc(8);
    call {:si_unique_call 593} Tmp_860 := __HAVOC_malloc(8);
    call {:si_unique_call 594} Tmp_861 := __HAVOC_malloc(8);
    call {:si_unique_call 595} Tmp_863 := __HAVOC_malloc(8);
    call {:si_unique_call 596} Tmp_864 := __HAVOC_malloc(8);
    status_13 := 19;
    assume {:nonnull} ioreq_19 != 0;
    assume ioreq_19 > 0;
    call {:si_unique_call 597} passCode1 := corral_nondet();
    call {:si_unique_call 598} passCode2 := corral_nondet();
    assume {:nonnull} ioreq_19 != 0;
    assume ioreq_19 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} ioreq_19 != 0;
    assume ioreq_19 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} ioreq_19 != 0;
    assume ioreq_19 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_855;
    assume {:nonnull} Tmp_855 != 0;
    assume Tmp_855 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_863;
    assume {:nonnull} Tmp_863 != 0;
    assume Tmp_863 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L18;

  L18:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    status_13 := 0;
    goto L21;

  L21:
    Tmp_851 := status_13;
    return;

  anon31_Then:
    goto L16;

  L16:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_854;
    assume {:nonnull} Tmp_854 != 0;
    assume Tmp_854 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L23;

  L23:
    status_13 := 19;
    goto L21;

  anon32_Then:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_859;
    assume {:nonnull} Tmp_859 != 0;
    assume Tmp_859 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L23;

  anon33_Then:
    goto L18;

  anon30_Then:
    goto L16;

  anon23_Then:
    status_13 := 31;
    goto L21;

  anon24_Then:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_861;
    assume {:nonnull} Tmp_861 != 0;
    assume Tmp_861 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_860;
    assume {:nonnull} Tmp_860 != 0;
    assume Tmp_860 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_864;
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_857;
    assume {:nonnull} Tmp_857 != 0;
    assume Tmp_857 > 0;
    assume {:nonnull} Tmp_857 != 0;
    assume Tmp_857 > 0;
    assume {:nonnull} Tmp_864 != 0;
    assume Tmp_864 > 0;
    call {:si_unique_call 599} status_13 := changePassword_sdv_static_function_24(pVol_51);
    goto L21;

  anon29_Then:
    goto L24;

  L24:
    status_13 := 19;
    goto L21;

  anon28_Then:
    goto L24;

  anon25_Then:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_853;
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L33;

  L33:
    status_13 := 19;
    goto L21;

  anon26_Then:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_856;
    assume {:nonnull} Tmp_856 != 0;
    assume Tmp_856 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_858;
    assume {:nonnull} Tmp_858 != 0;
    assume Tmp_858 > 0;
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    havoc Tmp_852;
    assume {:nonnull} Tmp_852 != 0;
    assume Tmp_852 > 0;
    call {:si_unique_call 600} status_13 := changePassword_sdv_static_function_24(pVol_51);
    assume {:nonnull} pVol_51 != 0;
    assume pVol_51 > 0;
    goto L21;

  anon27_Then:
    goto L33;
}



procedure {:origName "writeIPL_sdv_static_function_24"} writeIPL_sdv_static_function_24(actual_flash_26: int, actual_buf_6: int, actual_bufLen_4: int, actual_flags: int) returns (Tmp_865: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "writeIPL_sdv_static_function_24"} writeIPL_sdv_static_function_24(actual_flash_26: int, actual_buf_6: int, actual_bufLen_4: int, actual_flags: int) returns (Tmp_865: int)
{
  var {:pointer} flash_26: int;
  var {:scalar} bufLen_4: int;

  anon0:
    flash_26 := actual_flash_26;
    bufLen_4 := actual_bufLen_4;
    assume {:nonnull} flash_26 != 0;
    assume flash_26 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} flash_26 != 0;
    assume flash_26 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} flash_26 != 0;
    assume flash_26 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} flash_26 != 0;
    assume flash_26 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L13;

  L13:
    Tmp_865 := 106;
    goto L1;

  L1:
    return;

  anon13_Then:
    goto L6;

  L6:
    assume {:nonnull} flash_26 != 0;
    assume flash_26 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L13;

  anon12_Then:
    assume {:nonnull} flash_26 != 0;
    assume flash_26 > 0;
    goto L1;

  anon14_Then:
    goto L6;

  anon15_Then:
    goto L6;

  anon11_Then:
    goto L13;
}



procedure {:origName "absRead_sdv_static_function_24"} absRead_sdv_static_function_24(actual_pVol_52: int, actual_ioreq_20: int) returns (Tmp_868: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "absRead_sdv_static_function_24"} absRead_sdv_static_function_24(actual_pVol_52: int, actual_ioreq_20: int) returns (Tmp_868: int)
{
  var {:scalar} currSector_1: int;
  var {:pointer} mappedSector: int;
  var {:scalar} sdv_394: int;
  var {:pointer} sdv_395: int;
  var {:scalar} sdv_396: int;
  var {:pointer} userBuffer_1: int;
  var {:scalar} status_14: int;
  var {:scalar} sectorCount_1: int;
  var {:pointer} pVol_52: int;
  var {:pointer} ioreq_20: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;

  anon0:
    pVol_52 := actual_pVol_52;
    ioreq_20 := actual_ioreq_20;
    assume {:nonnull} ioreq_20 != 0;
    assume ioreq_20 > 0;
    havoc userBuffer_1;
    assume {:nonnull} ioreq_20 != 0;
    assume ioreq_20 > 0;
    assume {:nonnull} pVol_52 != 0;
    assume pVol_52 > 0;
    havoc currSector_1;
    assume {:nonnull} pVol_52 != 0;
    assume pVol_52 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} ioreq_20 != 0;
    assume ioreq_20 > 0;
    havoc sectorCount_1;
    assume {:nonnull} ioreq_20 != 0;
    assume ioreq_20 > 0;
    goto L25;

  L25:
    call {:si_unique_call 601} currSector_1, mappedSector, sdv_395, vslice_dummy_var_118, vslice_dummy_var_119 := absRead_sdv_static_function_24_loop_L25(currSector_1, mappedSector, sdv_395, sdv_396, userBuffer_1, sectorCount_1, pVol_52, ioreq_20, vslice_dummy_var_118, vslice_dummy_var_119);
    goto L25_last;

  L25_last:
    assume {:nonnull} ioreq_20 != 0;
    assume ioreq_20 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 602} sdv_395 := findSector(pVol_52, currSector_1);
    mappedSector := sdv_395;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} mappedSector != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} mappedSector != dataErrorObject;
    assume {:IndirectCall} true;
    call {:si_unique_call 603} vslice_dummy_var_118 := flmemcpy(userBuffer_1, mappedSector, 512);
    goto L40;

  L40:
    assume {:nonnull} ioreq_20 != 0;
    assume ioreq_20 > 0;
    currSector_1 := currSector_1 + 1;
    goto L40_dummy;

  L40_dummy:
    assume false;
    return;

  anon18_Then:
    assume {:partition} mappedSector == dataErrorObject;
    Tmp_868 := 25;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} mappedSector == 0;
    assume {:nonnull} pVol_52 != 0;
    assume pVol_52 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} currSector_1 < sdv_396;
    assume {:IndirectCall} true;
    call {:si_unique_call 604} vslice_dummy_var_119 := flmemset(userBuffer_1, 0, 512);
    goto L40;

  anon19_Then:
    assume {:partition} sdv_396 <= currSector_1;
    Tmp_868 := 27;
    goto L1;

  anon17_Then:
    Tmp_868 := 0;
    goto L1;

  anon20_Then:
    assume {:nonnull} ioreq_20 != 0;
    assume ioreq_20 > 0;
    assume {:nonnull} pVol_52 != 0;
    assume pVol_52 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_14 == 27;
    assume {:nonnull} pVol_52 != 0;
    assume pVol_52 > 0;
    assume {:nonnull} ioreq_20 != 0;
    assume ioreq_20 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    Tmp_868 := 0;
    goto L1;

  anon16_Then:
    goto L17;

  L17:
    Tmp_868 := status_14;
    goto L1;

  anon15_Then:
    assume {:partition} status_14 != 27;
    goto L17;
}



procedure {:origName "dismountLowLevel_sdv_static_function_24"} dismountLowLevel_sdv_static_function_24(actual_pVol_53: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "dismountLowLevel_sdv_static_function_24"} dismountLowLevel_sdv_static_function_24(actual_pVol_53: int)
{
  var {:pointer} pVol_53: int;
  var vslice_dummy_var_120: int;

  anon0:
    call {:si_unique_call 605} vslice_dummy_var_120 := __HAVOC_malloc(4);
    pVol_53 := actual_pVol_53;
    assume {:nonnull} pVol_53 != 0;
    assume pVol_53 > 0;
    return;
}



procedure {:origName "readIPL_sdv_static_function_24"} readIPL_sdv_static_function_24(actual_flash_27: int, actual_buf_7: int, actual_bufLen_5: int) returns (Tmp_873: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "readIPL_sdv_static_function_24"} readIPL_sdv_static_function_24(actual_flash_27: int, actual_buf_7: int, actual_bufLen_5: int) returns (Tmp_873: int)
{
  var {:scalar} fl_59: int;
  var {:scalar} status_15: int;
  var {:pointer} flash_27: int;
  var {:pointer} buf_7: int;
  var {:scalar} bufLen_5: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_1302: int;

  anon0:
    flash_27 := actual_flash_27;
    buf_7 := actual_buf_7;
    bufLen_5 := actual_bufLen_5;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(bufLen_5, 512) != 0;
    Tmp_873 := 24;
    goto L1;

  L1:
    return;

  anon39_Then:
    assume {:partition} BAND(bufLen_5, 512) == 0;
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L12;

  L12:
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L23;

  L23:
    Tmp_873 := 31;
    goto L1;

  anon31_Then:
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} fl_59 != 0;
    Tmp_873 := fl_59;
    goto L1;

  anon32_Then:
    assume {:partition} fl_59 == 0;
    Tmp_873 := 0;
    goto L1;

  anon36_Then:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} bufLen_5 != 512;
    Tmp_873 := 24;
    goto L1;

  anon28_Then:
    assume {:partition} bufLen_5 == 512;
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    havoc vslice_dummy_var_1302;
    call {:si_unique_call 606} vslice_dummy_var_121 := flmemcpy(buf_7, vslice_dummy_var_1302, bufLen_5);
    goto L23;

  anon35_Then:
    goto L23;

  anon37_Then:
    goto L12;

  anon38_Then:
    goto L11;

  L11:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} bufLen_5 > 1024;
    Tmp_873 := 24;
    goto L1;

  anon30_Then:
    assume {:partition} 1024 >= bufLen_5;
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_15 != 0;
    assume {:nonnull} flash_27 != 0;
    assume flash_27 > 0;
    goto L1;

  anon34_Then:
    assume {:partition} status_15 == 0;
    Tmp_873 := status_15;
    goto L1;

  anon33_Then:
    goto L23;

  anon27_Then:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} bufLen_5 != 512;
    Tmp_873 := 24;
    goto L1;

  anon29_Then:
    assume {:partition} bufLen_5 == 512;
    goto L11;
}



procedure {:origName "flRegisterComponents"} flRegisterComponents() returns (Tmp_876: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_876 == 0 || Tmp_876 == 60 || Tmp_876 == 102;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterComponents"} flRegisterComponents() returns (Tmp_876: int)
{
  var {:scalar} fl_60: int;
  var {:scalar} fl_61: int;
  var {:scalar} fl_62: int;
  var {:scalar} fl_63: int;
  var {:scalar} fl_64: int;
  var {:scalar} fl_65: int;
  var {:scalar} fl_66: int;
  var {:scalar} fl_67: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;

  anon0:
    call {:si_unique_call 607} vslice_dummy_var_122 := flRegisterDOCSOC(window, window);
    call {:si_unique_call 608} fl_65 := flRegisterNT5PCIC();
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} fl_65 != 0;
    Tmp_876 := fl_65;
    goto L1;

  L1:
    return;

  anon17_Then:
    assume {:partition} fl_65 == 0;
    call {:si_unique_call 609} vslice_dummy_var_123 := flRegisterDOC2000();
    call {:si_unique_call 610} vslice_dummy_var_124 := flRegisterDOCPLUS();
    call {:si_unique_call 611} fl_61 := flRegisterI28F008();
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} fl_61 == 0;
    call {:si_unique_call 612} fl_66 := flRegisterI28F016();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} fl_66 == 0;
    call {:si_unique_call 613} fl_60 := flRegisterAMDMTD();
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} fl_60 == 0;
    call {:si_unique_call 614} fl_63 := flRegisterCFISCS();
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} fl_63 == 0;
    call {:si_unique_call 615} fl_62 := flRegisterINFTL();
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} fl_62 == 0;
    call {:si_unique_call 616} fl_67 := flRegisterNFTL();
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} fl_67 == 0;
    call {:si_unique_call 617} fl_64 := flRegisterFTL();
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} fl_64 != 0;
    Tmp_876 := fl_64;
    goto L1;

  anon24_Then:
    assume {:partition} fl_64 == 0;
    Tmp_876 := 0;
    goto L1;

  anon23_Then:
    assume {:partition} fl_67 != 0;
    Tmp_876 := fl_67;
    goto L1;

  anon22_Then:
    assume {:partition} fl_62 != 0;
    Tmp_876 := fl_62;
    goto L1;

  anon21_Then:
    assume {:partition} fl_63 != 0;
    Tmp_876 := fl_63;
    goto L1;

  anon20_Then:
    assume {:partition} fl_60 != 0;
    Tmp_876 := fl_60;
    goto L1;

  anon19_Then:
    assume {:partition} fl_66 != 0;
    Tmp_876 := fl_66;
    goto L1;

  anon18_Then:
    assume {:partition} fl_61 != 0;
    Tmp_876 := fl_61;
    goto L1;
}



procedure {:origName "_sdv_init16"} _sdv_init16();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init16"} _sdv_init16()
{
  var vslice_dummy_var_125: int;

  anon0:
    call {:si_unique_call 618} vslice_dummy_var_125 := __HAVOC_malloc(4);
    assume window == 0;
    return;
}



procedure {:origName "flSetEnvVar"} flSetEnvVar();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSetEnvVar"} flSetEnvVar()
{
  var vslice_dummy_var_126: int;

  anon0:
    call {:si_unique_call 619} vslice_dummy_var_126 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller_1: int);
  modifies LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller_1: int)
{

  anon0:
    LockDepth := LockDepth - 1;
    return;
}



procedure {:origName "SLIC_sdv_IoCompleteRequest_entry"} {:osmodel} SLIC_sdv_IoCompleteRequest_entry(actual_caller_3: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_IoCompleteRequest_entry"} {:osmodel} SLIC_sdv_IoCompleteRequest_entry(actual_caller_3: int)
{
  var {:pointer} caller_3: int;

  anon0:
    caller_3 := actual_caller_3;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} LockDepth != 0;
    call {:si_unique_call 620} SLIC_ABORT_10_0(caller_3);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} LockDepth == 0;
    goto L2;
}



procedure {:origName "_sdv_init30"} {:osmodel} _sdv_init30();
  modifies LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> LockDepth == 0;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init30"} {:osmodel} _sdv_init30()
{

  anon0:
    LockDepth := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_ABORT_10_0"} SLIC_ABORT_10_0(actual_caller_7: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_10_0"} SLIC_ABORT_10_0(actual_caller_7: int)
{
  var {:pointer} caller_7: int;

  anon0:
    caller_7 := actual_caller_7;
    call {:si_unique_call 621} SLIC_ERROR_ROUTINE(strConst__li2bpl12);
    return;
}



procedure {:origName "SLIC_ABORT_12_0"} SLIC_ABORT_12_0(actual_caller_9: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_12_0"} SLIC_ABORT_12_0(actual_caller_9: int)
{
  var {:pointer} caller_9: int;

  anon0:
    caller_9 := actual_caller_9;
    call {:si_unique_call 622} SLIC_ERROR_ROUTINE(strConst__li2bpl14);
    return;
}



procedure {:origName "SLIC_IoStartNextPacket_entry"} {:osmodel} SLIC_IoStartNextPacket_entry(actual_caller_10: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_IoStartNextPacket_entry"} {:osmodel} SLIC_IoStartNextPacket_entry(actual_caller_10: int)
{
  var {:pointer} caller_10: int;

  anon0:
    caller_10 := actual_caller_10;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} LockDepth != 0;
    call {:si_unique_call 623} SLIC_ABORT_12_0(caller_10);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} LockDepth == 0;
    goto L2;
}



procedure {:origName "SLIC_sdv_KeAcquireSpinLock_exit"} {:osmodel} SLIC_sdv_KeAcquireSpinLock_exit(actual_caller_12: int);
  modifies LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} LockDepth == old(LockDepth) + 1;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_KeAcquireSpinLock_exit"} {:osmodel} SLIC_sdv_KeAcquireSpinLock_exit(actual_caller_12: int)
{

  anon0:
    LockDepth := LockDepth + 1;
    return;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "flIntelIdentify"} flIntelIdentify(actual_pVol_54: int, actual_amdCmdRoutine: int, actual_idOffset_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flIntelIdentify"} flIntelIdentify(actual_pVol_54: int, actual_amdCmdRoutine: int, actual_idOffset_1: int)
{
  var {:scalar} Tmp_882: int;
  var {:scalar} Tmp_884: int;
  var {:scalar} Tmp_885: int;
  var {:pointer} sdv_413: int;
  var {:scalar} Tmp_886: int;
  var {:scalar} Tmp_887: int;
  var {:pointer} flashPtr_8: int;
  var {:scalar} vendorId_2: int;
  var {:scalar} Tmp_890: int;
  var {:scalar} Tmp_891: int;
  var {:scalar} inlv_2: int;
  var {:scalar} resetCmd: int;
  var {:scalar} firstByte: int;
  var {:scalar} Tmp_892: int;
  var {:pointer} pVol_54: int;
  var {:scalar} amdCmdRoutine: int;
  var {:scalar} idOffset_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_1303: int;

  anon0:
    call {:si_unique_call 624} vslice_dummy_var_127 := __HAVOC_malloc(4);
    pVol_54 := actual_pVol_54;
    amdCmdRoutine := actual_amdCmdRoutine;
    idOffset_1 := actual_idOffset_1;
    vendorId_2 := 0;
    assume {:nonnull} pVol_54 != 0;
    assume pVol_54 > 0;
    havoc vslice_dummy_var_1303;
    call {:si_unique_call 625} sdv_413 := flMap(vslice_dummy_var_1303, idOffset_1);
    flashPtr_8 := sdv_413;
    firstByte := 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} amdCmdRoutine != 0;
    Tmp_886 := 240;
    goto L17;

  L17:
    resetCmd := Tmp_886;
    inlv_2 := 0;
    goto L19;

  L19:
    call {:si_unique_call 626} Tmp_882, Tmp_884, Tmp_885, vendorId_2, Tmp_890, Tmp_891, inlv_2, firstByte, Tmp_892 := flIntelIdentify_loop_L19(Tmp_882, Tmp_884, Tmp_885, flashPtr_8, vendorId_2, Tmp_890, Tmp_891, inlv_2, resetCmd, firstByte, Tmp_892, pVol_54, amdCmdRoutine, idOffset_1);
    goto L19_last;

  L19_last:
    assume {:CounterLoop 15} {:Counter "inlv_2"} true;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} 15 > inlv_2;
    Tmp_890 := inlv_2;
    assume {:nonnull} flashPtr_8 != 0;
    assume flashPtr_8 > 0;
    Tmp_882 := inlv_2;
    assume {:nonnull} flashPtr_8 != 0;
    assume flashPtr_8 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} inlv_2 != 0;
    goto L25;

  L25:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} amdCmdRoutine != 0;
    Tmp_891 := idOffset_1 + inlv_2;
    assume {:IndirectCall} true;
    assume amdCmdRoutine == li2bplFunctionConstant558;
    call {:si_unique_call 627} amdCommand(pVol_54, Tmp_891, 144, flashPtr_8);
    goto L31;

  L31:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} inlv_2 != 0;
    Tmp_885 := inlv_2;
    assume {:nonnull} flashPtr_8 != 0;
    assume flashPtr_8 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L35;

  L35:
    assume {:nonnull} pVol_54 != 0;
    assume pVol_54 > 0;
    call {:si_unique_call 628} boogieTmp := corral_nondet();
    Tmp_887 := inlv_2;
    assume {:nonnull} flashPtr_8 != 0;
    assume flashPtr_8 > 0;
    goto L20;

  L20:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(inlv_2, inlv_2 - 1) != 0;
    assume {:nonnull} pVol_54 != 0;
    assume pVol_54 > 0;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} BAND(inlv_2, inlv_2 - 1) == 0;
    assume {:nonnull} pVol_54 != 0;
    assume pVol_54 > 0;
    goto L1;

  anon24_Then:
    assume {:nonnull} flashPtr_8 != 0;
    assume flashPtr_8 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L38;

  L38:
    Tmp_884 := inlv_2;
    assume {:nonnull} flashPtr_8 != 0;
    assume flashPtr_8 > 0;
    inlv_2 := inlv_2 + 1;
    goto L38_dummy;

  L38_dummy:
    assume false;
    return;

  anon21_Then:
    goto L35;

  anon20_Then:
    assume {:partition} inlv_2 == 0;
    assume {:nonnull} flashPtr_8 != 0;
    assume flashPtr_8 > 0;
    havoc vendorId_2;
    goto L38;

  anon19_Then:
    assume {:partition} amdCmdRoutine == 0;
    Tmp_892 := inlv_2;
    assume {:nonnull} flashPtr_8 != 0;
    assume flashPtr_8 > 0;
    goto L31;

  anon23_Then:
    assume {:partition} inlv_2 == 0;
    assume {:nonnull} flashPtr_8 != 0;
    assume flashPtr_8 > 0;
    havoc firstByte;
    goto L25;

  anon17_Then:
    assume {:partition} inlv_2 >= 15;
    goto L20;

  anon22_Then:
    assume {:partition} amdCmdRoutine == 0;
    Tmp_886 := 255;
    goto L17;
}



procedure {:origName "flIdentifyFlash"} flIdentifyFlash(actual_socket_9: int, actual_pVol_55: int) returns (Tmp_893: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_893 == 34 || Tmp_893 == 0 || Tmp_893 == 21 || Tmp_893 == 26 || Tmp_893 == 111;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flIdentifyFlash"} flIdentifyFlash(actual_socket_9: int, actual_pVol_55: int) returns (Tmp_893: int)
{
  var {:scalar} blockSize_1: int;
  var {:scalar} Tmp_894: int;
  var {:scalar} Tmp_895: int;
  var {:scalar} sdv_415: int;
  var {:scalar} sdv_416: int;
  var {:scalar} fl_68: int;
  var {:scalar} iMTD: int;
  var {:scalar} status_16: int;
  var {:pointer} socket_9: int;
  var {:pointer} pVol_55: int;
  var vslice_dummy_var_1304: int;
  var vslice_dummy_var_1305: int;

  anon0:
    socket_9 := actual_socket_9;
    pVol_55 := actual_pVol_55;
    status_16 := 26;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    havoc vslice_dummy_var_1304;
    call {:si_unique_call 629} flResetCardChanged(vslice_dummy_var_1304);
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    havoc vslice_dummy_var_1305;
    call {:si_unique_call 630} fl_68 := flMediaCheck(vslice_dummy_var_1305);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} fl_68 != 0;
    Tmp_893 := fl_68;
    goto L1;

  L1:
    return;

  anon71_Then:
    assume {:partition} fl_68 == 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    call {:si_unique_call 631} sdv_415 := isRAM_sdv_static_function_3(pVol_55);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_415 != 0;
    Tmp_893 := 26;
    goto L1;

  anon73_Then:
    assume {:partition} sdv_415 == 0;
    goto L19;

  L19:
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    call {:si_unique_call 632} sdv_416 := flSocketNoOf(socket_9);
    Tmp_894 := sdv_416;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    goto L51;

  L51:
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    iMTD := 0;
    goto L72;

  L72:
    call {:si_unique_call 633} Tmp_895, iMTD, status_16 := flIdentifyFlash_loop_L72(Tmp_895, iMTD, status_16, pVol_55);
    goto L72_last;

  L72_last:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_16 != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} status_16 != 111;
    Tmp_895 := iMTD;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume Tmp_895 != 9;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume Tmp_895 != 8;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume Tmp_895 != 7;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume Tmp_895 != 6;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume Tmp_895 != 5;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume Tmp_895 != 4;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume Tmp_895 != 3;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume Tmp_895 != 2;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume Tmp_895 != 1;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume false;
    return;

  anon104_Then:
    assume Tmp_895 == 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 634} status_16 := amdMTDIdentify(pVol_55);
    goto L80;

  L80:
    iMTD := iMTD + 1;
    goto L80_dummy;

  L80_dummy:
    assume false;
    return;

  anon91_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 635} status_16 := cfiscsIdentify(pVol_55);
    goto L80;

  anon90_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 636} status_16 := doc2000Identify_sdv_static_function_15(pVol_55);
    goto L80;

  anon89_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 637} status_16 := docPlusIdentify(pVol_55);
    goto L80;

  anon88_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 638} status_16 := i28f008Identify(pVol_55);
    goto L80;

  anon105_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 639} status_16 := i28f016Identify(pVol_55);
    goto L80;

  anon102_Then:
    assume Tmp_895 == 1;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 640} status_16 := amdMTDIdentify(pVol_55);
    goto L80;

  anon87_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 641} status_16 := cfiscsIdentify(pVol_55);
    goto L80;

  anon86_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 642} status_16 := doc2000Identify_sdv_static_function_15(pVol_55);
    goto L80;

  anon85_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 643} status_16 := docPlusIdentify(pVol_55);
    goto L80;

  anon84_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 644} status_16 := i28f008Identify(pVol_55);
    goto L80;

  anon103_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 645} status_16 := i28f016Identify(pVol_55);
    goto L80;

  anon100_Then:
    assume Tmp_895 == 2;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 646} status_16 := amdMTDIdentify(pVol_55);
    goto L80;

  anon83_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 647} status_16 := cfiscsIdentify(pVol_55);
    goto L80;

  anon82_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 648} status_16 := doc2000Identify_sdv_static_function_15(pVol_55);
    goto L80;

  anon81_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 649} status_16 := docPlusIdentify(pVol_55);
    goto L80;

  anon80_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 650} status_16 := i28f008Identify(pVol_55);
    goto L80;

  anon101_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 651} status_16 := i28f016Identify(pVol_55);
    goto L80;

  anon99_Then:
    assume Tmp_895 == 3;
    goto L80;

  anon98_Then:
    assume Tmp_895 == 4;
    goto L80;

  anon97_Then:
    assume Tmp_895 == 5;
    goto L80;

  anon96_Then:
    assume Tmp_895 == 6;
    goto L80;

  anon95_Then:
    assume Tmp_895 == 7;
    goto L80;

  anon94_Then:
    assume Tmp_895 == 8;
    goto L80;

  anon93_Then:
    assume Tmp_895 == 9;
    goto L80;

  anon77_Then:
    assume {:partition} status_16 == 111;
    goto L73;

  L73:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} status_16 == 111;
    Tmp_893 := 111;
    goto L1;

  anon75_Then:
    assume {:partition} status_16 != 111;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} status_16 != 0;
    Tmp_893 := 26;
    goto L1;

  anon78_Then:
    assume {:partition} status_16 == 0;
    call {:si_unique_call 652} blockSize_1 := corral_nondet();
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    goto L86;

  L86:
    call {:si_unique_call 653} blockSize_1 := flIdentifyFlash_loop_L86(blockSize_1, pVol_55);
    goto L86_last;

  L86_last:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} blockSize_1 > 0;
    assume {:nonnull} pVol_55 != 0;
    assume pVol_55 > 0;
    call {:si_unique_call 654} blockSize_1 := corral_nondet();
    goto anon79_Else_dummy;

  anon79_Else_dummy:
    assume false;
    return;

  anon79_Then:
    assume {:partition} 0 >= blockSize_1;
    Tmp_893 := 0;
    goto L1;

  anon76_Then:
    assume {:partition} status_16 == 0;
    goto L73;

  anon74_Then:
    goto L73;

  anon92_Then:
    goto L51;

  anon72_Then:
    goto L19;
}



procedure {:origName "flashNoWrite_sdv_static_function_3"} flashNoWrite_sdv_static_function_3(actual_pVol_56: int, actual_address_4: int, actual_from: int, actual_length_2: int, actual_mode_2: int) returns (Tmp_897: int);
  free ensures {:va_keep} Tmp_897 == 19;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flashNoWrite_sdv_static_function_3"} flashNoWrite_sdv_static_function_3(actual_pVol_56: int, actual_address_4: int, actual_from: int, actual_length_2: int, actual_mode_2: int) returns (Tmp_897: int)
{

  anon0:
    Tmp_897 := 19;
    return;
}



procedure {:origName "isRAM_sdv_static_function_3"} isRAM_sdv_static_function_3(actual_pVol_57: int) returns (Tmp_899: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_899 == 1 || Tmp_899 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "isRAM_sdv_static_function_3"} isRAM_sdv_static_function_3(actual_pVol_57: int) returns (Tmp_899: int)
{
  var {:scalar} Tmp_900: int;
  var {:scalar} Tmp_901: int;
  var {:pointer} sdv_418: int;
  var {:scalar} Tmp_902: int;
  var {:pointer} flashPtr_9: int;
  var {:scalar} writeChar: int;
  var {:scalar} Tmp_904: int;
  var {:scalar} firstByte_1: int;
  var {:scalar} zero: int;
  var {:pointer} pVol_57: int;
  var vslice_dummy_var_1306: int;

  anon0:
    pVol_57 := actual_pVol_57;
    assume {:nonnull} pVol_57 != 0;
    assume pVol_57 > 0;
    havoc vslice_dummy_var_1306;
    call {:si_unique_call 655} sdv_418 := flMap(vslice_dummy_var_1306, 0);
    flashPtr_9 := sdv_418;
    zero := 0;
    assume {:nonnull} flashPtr_9 != 0;
    assume flashPtr_9 > 0;
    havoc firstByte_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} firstByte_1 != 0;
    Tmp_902 := 0;
    goto L17;

  L17:
    writeChar := Tmp_902;
    Tmp_901 := zero;
    assume {:nonnull} flashPtr_9 != 0;
    assume flashPtr_9 > 0;
    Tmp_900 := zero;
    assume {:nonnull} flashPtr_9 != 0;
    assume flashPtr_9 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_904 := zero;
    assume {:nonnull} flashPtr_9 != 0;
    assume flashPtr_9 > 0;
    Tmp_899 := 1;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_899 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} firstByte_1 == 0;
    Tmp_902 := 255;
    goto L17;
}



procedure {:origName "flIntelSize"} flIntelSize(actual_pVol_58: int, actual_amdCmdRoutine_1: int, actual_idOffset_2: int) returns (Tmp_905: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_905 == 0 || Tmp_905 == 26;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flIntelSize"} flIntelSize(actual_pVol_58: int, actual_amdCmdRoutine_1: int, actual_idOffset_2: int) returns (Tmp_905: int)
{
  var {:scalar} i_13: int;
  var {:scalar} Tmp_907: int;
  var {:scalar} Tmp_908: int;
  var {:pointer} sdv_419: int;
  var {:scalar} Tmp_909: int;
  var {:scalar} Tmp_911: int;
  var {:pointer} flashPtr_10: int;
  var {:pointer} sdv_420: int;
  var {:pointer} sdv_421: int;
  var {:scalar} Tmp_914: int;
  var {:scalar} resetCmd_1: int;
  var {:scalar} Tmp_915: int;
  var {:pointer} pVol_58: int;
  var {:scalar} amdCmdRoutine_1: int;
  var {:scalar} idOffset_2: int;

  anon0:
    pVol_58 := actual_pVol_58;
    amdCmdRoutine_1 := actual_amdCmdRoutine_1;
    idOffset_2 := actual_idOffset_2;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} amdCmdRoutine_1 != 0;
    Tmp_909 := 240;
    goto L7;

  L7:
    resetCmd_1 := Tmp_909;
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    flashPtr_10 := sdv_419;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} amdCmdRoutine_1 != 0;
    assume {:IndirectCall} true;
    assume amdCmdRoutine_1 == li2bplFunctionConstant558;
    call {:si_unique_call 656} amdCommand(pVol_58, 0, 144, flashPtr_10);
    goto L18;

  L18:
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    goto L19;

  L19:
    call {:si_unique_call 657} i_13, Tmp_907, Tmp_908, Tmp_911, flashPtr_10, Tmp_914 := flIntelSize_loop_L19(i_13, Tmp_907, Tmp_908, Tmp_911, flashPtr_10, sdv_421, Tmp_914, resetCmd_1, pVol_58, amdCmdRoutine_1, idOffset_2);
    goto L19_last;

  L19_last:
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    flashPtr_10 := sdv_421;
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L30;

  L30:
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_908 := 0;
    goto L35;

  L35:
    i_13 := Tmp_908;
    goto L36;

  L36:
    call {:si_unique_call 658} i_13, Tmp_907, Tmp_911, Tmp_914 := flIntelSize_loop_L36(i_13, Tmp_907, Tmp_911, flashPtr_10, Tmp_914, resetCmd_1, pVol_58, amdCmdRoutine_1, idOffset_2);
    goto L36_last;

  L36_last:
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} amdCmdRoutine_1 != 0;
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    havoc Tmp_911;
    assume {:IndirectCall} true;
    assume amdCmdRoutine_1 == li2bplFunctionConstant558;
    call {:si_unique_call 659} amdCommand(pVol_58, Tmp_911, 144, flashPtr_10);
    goto L44;

  L44:
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    Tmp_914 := i_13;
    assume {:nonnull} flashPtr_10 != 0;
    assume flashPtr_10 > 0;
    i_13 := i_13 + 1;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    assume false;
    return;

  anon30_Then:
    goto L20;

  L20:
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    flashPtr_10 := sdv_420;
    assume {:nonnull} flashPtr_10 != 0;
    assume flashPtr_10 > 0;
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    Tmp_915 := 0;
    goto L53;

  L53:
    Tmp_905 := Tmp_915;
    return;

  anon29_Then:
    Tmp_915 := 26;
    goto L53;

  anon25_Then:
    assume {:partition} amdCmdRoutine_1 == 0;
    Tmp_907 := i_13;
    assume {:nonnull} flashPtr_10 != 0;
    assume flashPtr_10 > 0;
    goto L44;

  anon24_Then:
    assume {:nonnull} pVol_58 != 0;
    assume pVol_58 > 0;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    assume false;
    return;

  anon23_Then:
    Tmp_908 := 1;
    goto L35;

  anon28_Then:
    goto L20;

  anon27_Then:
    goto L30;

  anon22_Then:
    goto L20;

  anon26_Then:
    assume {:partition} amdCmdRoutine_1 == 0;
    assume {:nonnull} flashPtr_10 != 0;
    assume flashPtr_10 > 0;
    goto L18;

  anon21_Then:
    assume {:partition} amdCmdRoutine_1 == 0;
    Tmp_909 := 255;
    goto L7;
}



procedure {:origName "flFlashOf"} flFlashOf(actual_volNo_11: int) returns (Tmp_917: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flFlashOf"} flFlashOf(actual_volNo_11: int) returns (Tmp_917: int)
{
  var {:scalar} Tmp_919: int;
  var {:scalar} volNo_11: int;

  anon0:
    volNo_11 := actual_volNo_11;
    Tmp_919 := volNo_11;
    havoc Tmp_917;
    return;
}



procedure {:origName "setNoCallback_sdv_static_function_3"} setNoCallback_sdv_static_function_3(actual_pVol_59: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "setNoCallback_sdv_static_function_3"} setNoCallback_sdv_static_function_3(actual_pVol_59: int)
{
  var {:pointer} pVol_59: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_1307: int;

  anon0:
    call {:si_unique_call 660} vslice_dummy_var_128 := __HAVOC_malloc(4);
    pVol_59 := actual_pVol_59;
    assume {:nonnull} pVol_59 != 0;
    assume pVol_59 > 0;
    havoc vslice_dummy_var_1307;
    call {:si_unique_call 661} flSetPowerOnCallback(vslice_dummy_var_1307, 0, 0);
    return;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_129: int;

  anon0:
    call {:si_unique_call 662} vslice_dummy_var_129 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "flashNoErase_sdv_static_function_3"} flashNoErase_sdv_static_function_3(actual_pVol_60: int, actual_firstBlock: int, actual_noOfBlocks: int) returns (Tmp_924: int);
  free ensures {:va_keep} Tmp_924 == 19;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flashNoErase_sdv_static_function_3"} flashNoErase_sdv_static_function_3(actual_pVol_60: int, actual_firstBlock: int, actual_noOfBlocks: int) returns (Tmp_924: int)
{

  anon0:
    Tmp_924 := 19;
    return;
}



procedure {:origName "flashMap_sdv_static_function_3"} flashMap_sdv_static_function_3(actual_pVol_61: int, actual_address_5: int, actual_length_3: int) returns (Tmp_926: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flashMap_sdv_static_function_3"} flashMap_sdv_static_function_3(actual_pVol_61: int, actual_address_5: int, actual_length_3: int) returns (Tmp_926: int)
{
  var {:pointer} pVol_61: int;
  var {:scalar} address_5: int;
  var vslice_dummy_var_1308: int;

  anon0:
    pVol_61 := actual_pVol_61;
    address_5 := actual_address_5;
    assume {:nonnull} pVol_61 != 0;
    assume pVol_61 > 0;
    havoc vslice_dummy_var_1308;
    call {:si_unique_call 663} Tmp_926 := flMap(vslice_dummy_var_1308, address_5);
    return;
}



procedure {:origName "flashRead_sdv_static_function_3"} flashRead_sdv_static_function_3(actual_pVol_62: int, actual_address_6: int, actual_buffer: int, actual_length_4: int, actual_mode_3: int) returns (Tmp_928: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_928 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flashRead_sdv_static_function_3"} flashRead_sdv_static_function_3(actual_pVol_62: int, actual_address_6: int, actual_buffer: int, actual_length_4: int, actual_mode_3: int) returns (Tmp_928: int)
{
  var {:pointer} sdv_423: int;
  var {:scalar} Tmp_929: int;
  var {:scalar} Tmp_931: int;
  var {:pointer} pVol_62: int;
  var {:scalar} address_6: int;
  var {:pointer} buffer: int;
  var {:scalar} length_4: int;
  var vslice_dummy_var_130: int;

  anon0:
    pVol_62 := actual_pVol_62;
    address_6 := actual_address_6;
    buffer := actual_buffer;
    length_4 := actual_length_4;
    Tmp_929 := length_4;
    Tmp_931 := length_4;
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_62 != 0;
    assume pVol_62 > 0;
    call {:si_unique_call 664} sdv_423 := flashMap_sdv_static_function_3(pVol_62, address_6, Tmp_931);
    assume {:IndirectCall} true;
    call {:si_unique_call 665} vslice_dummy_var_130 := flmemcpy(buffer, sdv_423, Tmp_929);
    Tmp_928 := 0;
    return;
}



procedure {:origName "flSetWindowSize"} flSetWindowSize(actual_pVol_63: int, actual_sizeIn4KBunits: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSetWindowSize"} flSetWindowSize(actual_pVol_63: int, actual_sizeIn4KBunits: int)
{
  var {:scalar} Tmp_932: int;
  var {:scalar} Tmp_935: int;
  var {:pointer} pVol_63: int;
  var {:scalar} sizeIn4KBunits: int;
  var vslice_dummy_var_131: int;

  anon0:
    call {:si_unique_call 666} vslice_dummy_var_131 := __HAVOC_malloc(4);
    pVol_63 := actual_pVol_63;
    sizeIn4KBunits := actual_sizeIn4KBunits;
    assume {:nonnull} pVol_63 != 0;
    assume pVol_63 > 0;
    assume {:nonnull} pVol_63 != 0;
    assume pVol_63 > 0;
    havoc Tmp_932;
    Tmp_935 := Tmp_932;
    assume {:nonnull} pVol_63 != 0;
    assume pVol_63 > 0;
    assume {:nonnull} pdriveInfo != 0;
    assume pdriveInfo > 0;
    assume {:nonnull} pVol_63 != 0;
    assume pVol_63 > 0;
    return;
}



procedure {:origName "flIntervalRoutine"} flIntervalRoutine(actual_pVol_64: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flIntervalRoutine"} flIntervalRoutine(actual_pVol_64: int)
{
  var {:scalar} sdv_425: int;
  var {:pointer} pVol_64: int;
  var vslice_dummy_var_132: int;

  anon0:
    call {:si_unique_call 667} vslice_dummy_var_132 := __HAVOC_malloc(4);
    pVol_64 := actual_pVol_64;
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L5;

  L5:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto L9;

  L9:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto L1;

  L1:
    return;

  anon25_Then:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto L1;

  anon26_Then:
    goto L1;

  anon24_Then:
    goto L1;

  anon22_Then:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto L9;

  anon23_Then:
    goto L9;

  anon21_Then:
    goto L1;

  anon19_Then:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_425 == 0;
    assume {:nonnull} pVol_64 != 0;
    assume pVol_64 > 0;
    goto L5;

  anon27_Then:
    assume {:partition} sdv_425 != 0;
    goto L5;

  anon20_Then:
    goto L5;
}



procedure {:origName "flMap"} flMap(actual_pVol_65: int, actual_address_7: int) returns (Tmp_938: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flMap"} flMap(actual_pVol_65: int, actual_address_7: int) returns (Tmp_938: int)
{
  var {:scalar} pageToMap: int;
  var {:pointer} pVol_65: int;
  var {:scalar} address_7: int;

  anon0:
    pVol_65 := actual_pVol_65;
    address_7 := actual_address_7;
    assume {:nonnull} pVol_65 != 0;
    assume pVol_65 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_65 != 0;
    assume pVol_65 > 0;
    call {:si_unique_call 668} setWindow_sdv_static_function_11(pVol_65);
    goto L5;

  L5:
    assume {:nonnull} pVol_65 != 0;
    assume pVol_65 > 0;
    call {:si_unique_call 669} pageToMap := corral_nondet();
    assume {:nonnull} pVol_65 != 0;
    assume pVol_65 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L17;

  L17:
    assume {:nonnull} pVol_65 != 0;
    assume pVol_65 > 0;
    havoc Tmp_938;
    return;

  anon12_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_65 != 0;
    assume pVol_65 > 0;
    call {:si_unique_call 670} setMappingContext_sdv_static_function_11(pVol_65, pageToMap);
    goto L15;

  L15:
    assume {:nonnull} pVol_65 != 0;
    assume pVol_65 > 0;
    assume {:nonnull} pVol_65 != 0;
    assume pVol_65 > 0;
    goto L17;

  anon11_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_65 != 0;
    assume pVol_65 > 0;
    call {:si_unique_call 671} setMappingContext_socketnt(pVol_65, pageToMap);
    goto L15;

  anon10_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_65 != 0;
    assume pVol_65 > 0;
    call {:si_unique_call 672} setWindow_socketnt(pVol_65);
    goto L5;

  anon9_Then:
    goto L5;
}



procedure {:origName "flResetCardChanged"} flResetCardChanged(actual_pVol_66: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flResetCardChanged"} flResetCardChanged(actual_pVol_66: int)
{
  var {:pointer} pVol_66: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;

  anon0:
    call {:si_unique_call 673} vslice_dummy_var_133 := __HAVOC_malloc(4);
    pVol_66 := actual_pVol_66;
    assume {:nonnull} pVol_66 != 0;
    assume pVol_66 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_66 != 0;
    assume pVol_66 > 0;
    call {:si_unique_call 674} vslice_dummy_var_135 := getAndClearCardChangeIndicator_sdv_static_function_11(pVol_66);
    goto L4;

  L4:
    assume {:nonnull} pVol_66 != 0;
    assume pVol_66 > 0;
    return;

  anon6_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_66 != 0;
    assume pVol_66 > 0;
    call {:si_unique_call 675} vslice_dummy_var_134 := getAndClearCardChangeIndicator_socketnt(pVol_66);
    goto L4;

  anon5_Then:
    goto L4;
}



procedure {:origName "flReadBackBufferOf"} flReadBackBufferOf(actual_volNo_12: int) returns (Tmp_943: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flReadBackBufferOf"} flReadBackBufferOf(actual_volNo_12: int) returns (Tmp_943: int)
{
  var {:scalar} Tmp_945: int;
  var {:scalar} volNo_12: int;

  anon0:
    volNo_12 := actual_volNo_12;
    Tmp_945 := volNo_12;
    havoc Tmp_943;
    return;
}



procedure {:origName "flSocketSetBusy"} flSocketSetBusy(actual_pVol_67: int, actual_state_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSocketSetBusy"} flSocketSetBusy(actual_pVol_67: int, actual_state_1: int)
{
  var {:scalar} Tmp_947: int;
  var {:scalar} Tmp_949: int;
  var {:pointer} Tmp_950: int;
  var {:pointer} pVol_67: int;
  var {:scalar} state_1: int;
  var vslice_dummy_var_136: int;

  anon0:
    call {:si_unique_call 676} vslice_dummy_var_136 := __HAVOC_malloc(4);
    pVol_67 := actual_pVol_67;
    state_1 := actual_state_1;
    call {:si_unique_call 677} Tmp_950 := __HAVOC_malloc(32);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} state_1 != 0;
    assume {:nonnull} pVol_67 != 0;
    assume pVol_67 > 0;
    havoc Tmp_947;
    assume {:nonnull} pVol_67 != 0;
    assume pVol_67 > 0;
    havoc Tmp_949;
    havoc Tmp_950;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} pVol_67 != 0;
    assume pVol_67 > 0;
    goto L7;

  L7:
    assume {:nonnull} pVol_67 != 0;
    assume pVol_67 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:nonnull} pVol_67 != 0;
    assume pVol_67 > 0;
    goto L7;

  anon5_Then:
    assume {:partition} state_1 == 0;
    goto L1;
}



procedure {:origName "flSetWindowBusWidth"} flSetWindowBusWidth(actual_pVol_68: int, actual_width: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSetWindowBusWidth"} flSetWindowBusWidth(actual_pVol_68: int, actual_width: int)
{
  var {:pointer} pVol_68: int;
  var {:scalar} width: int;
  var vslice_dummy_var_137: int;

  anon0:
    call {:si_unique_call 678} vslice_dummy_var_137 := __HAVOC_malloc(4);
    pVol_68 := actual_pVol_68;
    width := actual_width;
    assume {:nonnull} pVol_68 != 0;
    assume pVol_68 > 0;
    assume {:nonnull} pVol_68 != 0;
    assume pVol_68 > 0;
    return;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_138: int;

  anon0:
    call {:si_unique_call 679} vslice_dummy_var_138 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "flBufferOf"} flBufferOf(actual_volNo_13: int) returns (Tmp_955: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flBufferOf"} flBufferOf(actual_volNo_13: int) returns (Tmp_955: int)
{
  var {:scalar} Tmp_956: int;
  var {:scalar} volNo_13: int;

  anon0:
    volNo_13 := actual_volNo_13;
    Tmp_956 := volNo_13;
    havoc Tmp_955;
    return;
}



procedure {:origName "flMediaCheck"} flMediaCheck(actual_pVol_69: int) returns (Tmp_958: int);
  free ensures {:va_keep} Tmp_958 == 34 || Tmp_958 == 0 || Tmp_958 == 21;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flMediaCheck"} flMediaCheck(actual_pVol_69: int) returns (Tmp_958: int)
{
  var {:scalar} sdv_427: int;
  var {:scalar} sdv_428: int;
  var {:scalar} Tmp_960: int;
  var {:pointer} pVol_69: int;

  anon0:
    pVol_69 := actual_pVol_69;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_69 != 0;
    assume pVol_69 > 0;
    call {:si_unique_call 680} sdv_427 := cardDetected_sdv_static_function_11(pVol_69);
    goto L6;

  L6:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_427 != 0;
    assume {:nonnull} pVol_69 != 0;
    assume pVol_69 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_69 != 0;
    assume pVol_69 > 0;
    call {:si_unique_call 681} sdv_428 := getAndClearCardChangeIndicator_sdv_static_function_11(pVol_69);
    goto L13;

  L13:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} sdv_428 != 0;
    assume {:nonnull} pVol_69 != 0;
    assume pVol_69 > 0;
    goto L9;

  L9:
    assume {:nonnull} pVol_69 != 0;
    assume pVol_69 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    Tmp_960 := 34;
    goto L17;

  L17:
    Tmp_958 := Tmp_960;
    goto L1;

  L1:
    return;

  anon16_Then:
    Tmp_960 := 0;
    goto L17;

  anon18_Then:
    assume {:partition} sdv_428 == 0;
    goto L9;

  anon17_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_69 != 0;
    assume pVol_69 > 0;
    call {:si_unique_call 682} sdv_428 := getAndClearCardChangeIndicator_socketnt(pVol_69);
    goto L13;

  anon15_Then:
    goto L9;

  anon14_Then:
    assume {:partition} sdv_427 == 0;
    assume {:nonnull} pVol_69 != 0;
    assume pVol_69 > 0;
    Tmp_958 := 21;
    goto L1;

  anon13_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_69 != 0;
    assume pVol_69 > 0;
    call {:si_unique_call 683} sdv_427 := cardDetected_socketnt(pVol_69);
    goto L6;
}



procedure {:origName "flExitSocket"} flExitSocket(actual_pVol_70: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flExitSocket"} flExitSocket(actual_pVol_70: int)
{
  var {:scalar} Tmp_962: int;
  var {:scalar} Tmp_965: int;
  var {:pointer} pVol_70: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;

  anon0:
    call {:si_unique_call 684} vslice_dummy_var_139 := __HAVOC_malloc(4);
    pVol_70 := actual_pVol_70;
    call {:si_unique_call 685} vslice_dummy_var_140 := flMap(pVol_70, 0);
    call {:si_unique_call 686} flDontNeedVcc(pVol_70);
    call {:si_unique_call 687} flSocketSetBusy(pVol_70, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_70 != 0;
    assume pVol_70 > 0;
    call {:si_unique_call 688} freeSocket_sdv_static_function_11(pVol_70);
    goto L15;

  L15:
    assume {:nonnull} pVol_70 != 0;
    assume pVol_70 > 0;
    havoc Tmp_962;
    call {:si_unique_call 689} sdv_ExFreePool(0);
    assume {:nonnull} pVol_70 != 0;
    assume pVol_70 > 0;
    havoc Tmp_965;
    call {:si_unique_call 690} sdv_ExFreePool(0);
    return;

  anon3_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_70 != 0;
    assume pVol_70 > 0;
    call {:si_unique_call 691} freeSocket_socketnt(pVol_70);
    goto L15;
}



procedure {:origName "flInitSockets"} flInitSockets() returns (Tmp_967: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_967 == 0 || Tmp_967 == 63;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flInitSockets"} flInitSockets() returns (Tmp_967: int)
{
  var {:scalar} Tmp_968: int;
  var {:scalar} Tmp_969: int;
  var {:scalar} Tmp_970: int;
  var {:pointer} sdv_430: int;
  var {:pointer} pVol_71: int;
  var {:scalar} Tmp_972: int;
  var {:pointer} sdv_431: int;
  var {:scalar} volNo_14: int;
  var {:scalar} fl_69: int;

  anon0:
    havoc pVol_71;
    volNo_14 := 0;
    goto L7;

  L7:
    call {:si_unique_call 692} Tmp_968, Tmp_969, Tmp_970, sdv_430, Tmp_972, sdv_431, volNo_14, fl_69 := flInitSockets_loop_L7(Tmp_968, Tmp_969, Tmp_970, sdv_430, pVol_71, Tmp_972, sdv_431, volNo_14, fl_69);
    goto L7_last;

  L7_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 693} flSetWindowSpeed(pVol_71, 250);
    call {:si_unique_call 694} flSetWindowBusWidth(pVol_71, 16);
    call {:si_unique_call 695} flSetWindowSize(pVol_71, 2);
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    call {:si_unique_call 696} sdv_430 := myMalloc(528);
    Tmp_970 := volNo_14;
    Tmp_972 := volNo_14;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 697} sdv_431 := myMalloc(1024);
    Tmp_968 := volNo_14;
    Tmp_969 := volNo_14;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    call {:si_unique_call 698} fl_69 := initSocket_sdv_static_function_11(pVol_71);
    goto L36;

  L36:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} fl_69 != 0;
    Tmp_967 := fl_69;
    goto L1;

  L1:
    return;

  anon17_Then:
    assume {:partition} fl_69 == 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    call {:si_unique_call 699} VppOff_sdv_static_function_11(pVol_71);
    goto L41;

  L41:
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    call {:si_unique_call 700} VccOff_sdv_static_function_11(pVol_71);
    goto L46;

  L46:
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    volNo_14 := volNo_14 + 1;
    goto L46_dummy;

  L46_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    call {:si_unique_call 701} VccOff_socketnt(pVol_71);
    goto L46;

  anon18_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    call {:si_unique_call 702} VppOff_socketnt(pVol_71);
    goto L41;

  anon16_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_71 != 0;
    assume pVol_71 > 0;
    call {:si_unique_call 703} fl_69 := initSocket_socketnt(pVol_71);
    goto L36;

  anon20_Then:
    Tmp_967 := 63;
    goto L1;

  anon19_Then:
    Tmp_967 := 63;
    goto L1;

  anon15_Then:
    Tmp_967 := 0;
    goto L1;
}



procedure {:origName "updateSocketParameters"} updateSocketParameters(actual_pVol_72: int, actual_params: int) returns (Tmp_973: int);
  free ensures {:va_keep} Tmp_973 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "updateSocketParameters"} updateSocketParameters(actual_pVol_72: int, actual_params: int) returns (Tmp_973: int)
{
  var {:pointer} pVol_72: int;

  anon0:
    pVol_72 := actual_pVol_72;
    assume {:nonnull} pVol_72 != 0;
    assume pVol_72 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pVol_72 != 0;
    assume pVol_72 > 0;
    goto L4;

  L4:
    Tmp_973 := 0;
    return;

  anon3_Then:
    goto L4;
}



procedure {:origName "flSetWindowSpeed"} flSetWindowSpeed(actual_pVol_73: int, actual_nsec: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSetWindowSpeed"} flSetWindowSpeed(actual_pVol_73: int, actual_nsec: int)
{
  var {:pointer} pVol_73: int;
  var {:scalar} nsec: int;
  var vslice_dummy_var_141: int;

  anon0:
    call {:si_unique_call 704} vslice_dummy_var_141 := __HAVOC_malloc(4);
    pVol_73 := actual_pVol_73;
    nsec := actual_nsec;
    assume {:nonnull} pVol_73 != 0;
    assume pVol_73 > 0;
    assume {:nonnull} pVol_73 != 0;
    assume pVol_73 > 0;
    return;
}



procedure {:origName "flSetPowerOnCallback"} flSetPowerOnCallback(actual_pVol_74: int, actual_routine: int, actual_flash_28: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSetPowerOnCallback"} flSetPowerOnCallback(actual_pVol_74: int, actual_routine: int, actual_flash_28: int)
{
  var {:pointer} pVol_74: int;
  var {:scalar} routine: int;
  var {:pointer} flash_28: int;
  var vslice_dummy_var_142: int;

  anon0:
    call {:si_unique_call 705} vslice_dummy_var_142 := __HAVOC_malloc(4);
    pVol_74 := actual_pVol_74;
    routine := actual_routine;
    flash_28 := actual_flash_28;
    assume {:nonnull} pVol_74 != 0;
    assume pVol_74 > 0;
    assume {:nonnull} pVol_74 != 0;
    assume pVol_74 > 0;
    return;
}



procedure {:origName "flNeedVcc"} flNeedVcc(actual_pVol_75: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flNeedVcc"} flNeedVcc(actual_pVol_75: int)
{
  var {:pointer} pVol_75: int;
  var vslice_dummy_var_143: int;

  anon0:
    call {:si_unique_call 706} vslice_dummy_var_143 := __HAVOC_malloc(4);
    pVol_75 := actual_pVol_75;
    assume {:nonnull} pVol_75 != 0;
    assume pVol_75 > 0;
    assume {:nonnull} pVol_75 != 0;
    assume pVol_75 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L8;

  L8:
    assume {:nonnull} pVol_75 != 0;
    assume pVol_75 > 0;
    return;

  anon9_Then:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_75 != 0;
    assume pVol_75 > 0;
    call {:si_unique_call 707} VccOn_sdv_static_function_11(pVol_75);
    goto L9;

  L9:
    assume {:nonnull} pVol_75 != 0;
    assume pVol_75 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} pVol_75 != 0;
    assume pVol_75 > 0;
    goto L8;

  anon8_Then:
    goto L8;

  anon7_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} pVol_75 != 0;
    assume pVol_75 > 0;
    call {:si_unique_call 708} VccOn_socketnt(pVol_75);
    goto L9;
}



procedure {:origName "flDontNeedVcc"} flDontNeedVcc(actual_pVol_76: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flDontNeedVcc"} flDontNeedVcc(actual_pVol_76: int)
{
  var {:pointer} pVol_76: int;
  var vslice_dummy_var_144: int;

  anon0:
    call {:si_unique_call 709} vslice_dummy_var_144 := __HAVOC_malloc(4);
    pVol_76 := actual_pVol_76;
    assume {:nonnull} pVol_76 != 0;
    assume pVol_76 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pVol_76 != 0;
    assume pVol_76 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "flSocketNoOf"} flSocketNoOf(actual_pVol_77: int) returns (Tmp_983: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSocketNoOf"} flSocketNoOf(actual_pVol_77: int) returns (Tmp_983: int)
{
  var {:pointer} pVol_77: int;

  anon0:
    pVol_77 := actual_pVol_77;
    assume {:nonnull} pVol_77 != 0;
    assume pVol_77 > 0;
    havoc Tmp_983;
    return;
}



procedure {:origName "flSocketOf"} flSocketOf(actual_volNo_15: int) returns (Tmp_985: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSocketOf"} flSocketOf(actual_volNo_15: int) returns (Tmp_985: int)
{
  var {:scalar} Tmp_986: int;
  var {:scalar} volNo_15: int;

  anon0:
    volNo_15 := actual_volNo_15;
    Tmp_986 := volNo_15;
    havoc Tmp_985;
    return;
}



procedure {:origName "createDOSbootSector_sdv_static_function_4"} createDOSbootSector_sdv_static_function_4(actual_pVol_78: int, actual_bpb: int, actual_volumeId: int, actual_volumeLabel: int) returns (Tmp_988: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "createDOSbootSector_sdv_static_function_4"} createDOSbootSector_sdv_static_function_4(actual_pVol_78: int, actual_bpb: int, actual_volumeId: int, actual_volumeLabel: int) returns (Tmp_988: int)
{
  var {:scalar} bootSector_2: int;
  var {:pointer} Tmp_990: int;
  var {:pointer} pVol_78: int;
  var {:pointer} bpb: int;
  var {:pointer} volumeId: int;
  var {:pointer} volumeLabel: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;

  anon0:
    call {:si_unique_call 710} bootSector_2 := __HAVOC_malloc(88);
    pVol_78 := actual_pVol_78;
    bpb := actual_bpb;
    volumeId := actual_volumeId;
    volumeLabel := actual_volumeLabel;
    call {:si_unique_call 711} vslice_dummy_var_145 := __HAVOC_malloc(36);
    assume {:IndirectCall} true;
    call {:si_unique_call 712} vslice_dummy_var_146 := flmemset(bootSector_2, 0, 512);
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:IndirectCall} true;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    call {:si_unique_call 713} vslice_dummy_var_147 := flmemcpy(volumeId_DOSBootSector(bootSector_2), volumeId, 4);
    assume {:IndirectCall} true;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    call {:si_unique_call 714} vslice_dummy_var_148 := flmemset(volumeLabel_DOSBootSector(bootSector_2), 32, 11);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} volumeLabel != 0;
    assume {:IndirectCall} true;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    call {:si_unique_call 715} vslice_dummy_var_149 := flmemcpy(volumeLabel_DOSBootSector(bootSector_2), volumeLabel, 11);
    goto L16;

  L16:
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_990 := strConst__li2bpl16;
    goto L41;

  L41:
    assume {:IndirectCall} true;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    call {:si_unique_call 716} vslice_dummy_var_150 := flmemcpy(systemId_DOSBootSector(bootSector_2), Tmp_990, 8);
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bpb != 0;
    assume bpb > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} bootSector_2 != 0;
    assume bootSector_2 > 0;
    assume {:nonnull} pVol_78 != 0;
    assume pVol_78 > 0;
    return;

  anon6_Then:
    Tmp_990 := strConst__li2bpl15;
    goto L41;

  anon5_Then:
    assume {:partition} volumeLabel == 0;
    goto L16;
}



procedure {:origName "createRootDirectory_sdv_static_function_4"} createRootDirectory_sdv_static_function_4(actual_pVol_79: int, actual_bpb_1: int, actual_volumeLabel_1: int) returns (Tmp_992: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "createRootDirectory_sdv_static_function_4"} createRootDirectory_sdv_static_function_4(actual_pVol_79: int, actual_bpb_1: int, actual_volumeLabel_1: int) returns (Tmp_992: int)
{
  var {:scalar} Tmp_993: int;
  var {:pointer} Tmp_994: int;
  var {:scalar} sdv_440: int;
  var {:pointer} rootDirectorySector: int;
  var {:pointer} Tmp_995: int;
  var {:scalar} fl_70: int;
  var {:scalar} sectorNo_2: int;
  var {:scalar} iEntry: int;
  var {:pointer} pVol_79: int;
  var {:pointer} bpb_1: int;
  var {:pointer} volumeLabel_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_1309: int;

  anon0:
    call {:si_unique_call 717} rootDirectorySector := __HAVOC_malloc(4);
    pVol_79 := actual_pVol_79;
    bpb_1 := actual_bpb_1;
    volumeLabel_1 := actual_volumeLabel_1;
    assume {:nonnull} rootDirectorySector != 0;
    assume rootDirectorySector > 0;
    call {:si_unique_call 718} boogieTmp := __HAVOC_malloc(1664);
    assume {:nonnull} bpb_1 != 0;
    assume bpb_1 > 0;
    havoc sectorNo_2;
    iEntry := 0;
    goto L7;

  L7:
    call {:si_unique_call 719} Tmp_993, Tmp_994, sdv_440, Tmp_995, sectorNo_2, iEntry, vslice_dummy_var_151, vslice_dummy_var_152, vslice_dummy_var_153 := createRootDirectory_sdv_static_function_4_loop_L7(Tmp_993, Tmp_994, sdv_440, rootDirectorySector, Tmp_995, fl_70, sectorNo_2, iEntry, pVol_79, bpb_1, volumeLabel_1, vslice_dummy_var_151, vslice_dummy_var_152, vslice_dummy_var_153);
    goto L7_last;

  L7_last:
    assume {:nonnull} bpb_1 != 0;
    assume bpb_1 > 0;
    havoc vslice_dummy_var_1309;
    call {:si_unique_call 723} sdv_440 := fromUNAL(vslice_dummy_var_1309);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_440 > iEntry;
    assume {:IndirectCall} true;
    call {:si_unique_call 720} vslice_dummy_var_151 := flmemset(rootDirectorySector, 0, 512);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iEntry != 0;
    goto L19;

  L19:
    Tmp_993 := sectorNo_2;
    sectorNo_2 := sectorNo_2 + 1;
    assume {:nonnull} pVol_79 != 0;
    assume pVol_79 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} fl_70 != 0;
    Tmp_992 := fl_70;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} fl_70 == 0;
    iEntry := iEntry + 16;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    assume false;
    return;

  anon10_Then:
    assume {:partition} iEntry == 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} volumeLabel_1 != 0;
    assume {:nonnull} rootDirectorySector != 0;
    assume rootDirectorySector > 0;
    havoc Tmp_995;
    assume {:IndirectCall} true;
    call {:si_unique_call 721} vslice_dummy_var_152 := flmemset(Tmp_995, 32, 11);
    assume {:nonnull} rootDirectorySector != 0;
    assume rootDirectorySector > 0;
    havoc Tmp_994;
    assume {:IndirectCall} true;
    call {:si_unique_call 722} vslice_dummy_var_153 := flmemcpy(Tmp_994, volumeLabel_1, 11);
    assume {:nonnull} rootDirectorySector != 0;
    assume rootDirectorySector > 0;
    assume {:nonnull} rootDirectorySector != 0;
    assume rootDirectorySector > 0;
    assume {:nonnull} rootDirectorySector != 0;
    assume rootDirectorySector > 0;
    goto L19;

  anon11_Then:
    assume {:partition} volumeLabel_1 == 0;
    goto L19;

  anon9_Then:
    assume {:partition} iEntry >= sdv_440;
    Tmp_992 := 0;
    goto L1;
}



procedure {:origName "getDriveGeometry_sdv_static_function_4"} getDriveGeometry_sdv_static_function_4(actual_pVol_80: int, actual_bpb_2: int, actual_cylinders_1: int, actual_noOfFATs: int, actual_oldFormat_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "getDriveGeometry_sdv_static_function_4"} getDriveGeometry_sdv_static_function_4(actual_pVol_80: int, actual_bpb_2: int, actual_cylinders_1: int, actual_noOfFATs: int, actual_oldFormat_1: int)
{
  var {:scalar} Tmp_998: int;
  var {:scalar} directorySectors: int;
  var {:dopa} {:scalar} heads_1: int;
  var {:scalar} Tmp_999: int;
  var {:scalar} sizeInSectors: int;
  var {:scalar} capacity_1: int;
  var {:scalar} minClusterSize: int;
  var {:scalar} Tmp_1000: int;
  var {:scalar} noOfClusters: int;
  var {:scalar} sectorAlignment: int;
  var {:dopa} {:scalar} sectors_1: int;
  var {:scalar} sectorPadding: int;
  var {:scalar} Tmp_1002: int;
  var {:scalar} sectorsPerFAT: int;
  var {:scalar} Tmp_1004: int;
  var {:pointer} pVol_80: int;
  var {:pointer} bpb_2: int;
  var {:pointer} cylinders_1: int;
  var {:scalar} noOfFATs: int;
  var {:scalar} oldFormat_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_1310: int;
  var vslice_dummy_var_1311: int;
  var vslice_dummy_var_1312: int;

  anon0:
    call {:si_unique_call 724} heads_1 := __HAVOC_malloc(4);
    call {:si_unique_call 725} sectors_1 := __HAVOC_malloc(4);
    call {:si_unique_call 726} vslice_dummy_var_154 := __HAVOC_malloc(4);
    pVol_80 := actual_pVol_80;
    bpb_2 := actual_bpb_2;
    cylinders_1 := actual_cylinders_1;
    noOfFATs := actual_noOfFATs;
    oldFormat_1 := actual_oldFormat_1;
    assume {:nonnull} pVol_80 != 0;
    assume pVol_80 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} oldFormat_1 == 1;
    Tmp_998 := 1;
    goto L19;

  L19:
    minClusterSize := Tmp_998;
    call {:si_unique_call 727} flBuildGeometry(capacity_1, cylinders_1, heads_1, sectors_1, oldFormat_1);
    assume {:nonnull} pVol_80 != 0;
    assume pVol_80 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} pVol_80 != 0;
    assume pVol_80 > 0;
    goto L24;

  L24:
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    assume {:nonnull} sectors_1 != 0;
    assume sectors_1 > 0;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    assume {:nonnull} heads_1 != 0;
    assume heads_1 > 0;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    havoc vslice_dummy_var_1310;
    call {:si_unique_call 728} toUNAL(vslice_dummy_var_1310, 512);
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    assume {:nonnull} sectors_1 != 0;
    assume sectors_1 > 0;
    assume {:nonnull} cylinders_1 != 0;
    assume cylinders_1 > 0;
    assume {:nonnull} heads_1 != 0;
    assume heads_1 > 0;
    assume {:nonnull} sectors_1 != 0;
    assume sectors_1 > 0;
    havoc sizeInSectors;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sizeInSectors > 65535;
    Tmp_1004 := 0;
    goto L40;

  L40:
    Tmp_1000 := Tmp_1004;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    havoc vslice_dummy_var_1311;
    call {:si_unique_call 729} toUNAL(vslice_dummy_var_1311, Tmp_1000);
    noOfClusters := INTDIV(sizeInSectors, minClusterSize);
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    goto L46;

  L46:
    call {:si_unique_call 730} noOfClusters, Tmp_1002, boogieTmp := getDriveGeometry_sdv_static_function_4_loop_L46(noOfClusters, Tmp_1002, bpb_2, oldFormat_1, boogieTmp);
    goto L46_last;

  L46_last:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} oldFormat_1 != 0;
    goto L48;

  L48:
    Tmp_1002 := 65534;
    goto L49;

  L49:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} noOfClusters > Tmp_1002;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    call {:si_unique_call 731} boogieTmp := corral_nondet();
    call {:si_unique_call 732} noOfClusters := corral_nondet();
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} Tmp_1002 >= noOfClusters;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    sectorsPerFAT := INTDIV(INTDIV((noOfClusters + 2) * 3 + 1, 2) - 1, 512) + 1;
    goto L55;

  L55:
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    directorySectors := INTDIV(capacity_1, 200);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} 1 > directorySectors;
    directorySectors := 1;
    goto L58;

  L58:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} directorySectors > 15;
    directorySectors := 15;
    goto L60;

  L60:
    Tmp_999 := directorySectors * 16;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    havoc vslice_dummy_var_1312;
    call {:si_unique_call 733} toUNAL(vslice_dummy_var_1312, Tmp_999);
    assume {:nonnull} pVol_80 != 0;
    assume pVol_80 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    assume {:nonnull} sectors_1 != 0;
    assume sectors_1 > 0;
    havoc sectorPadding;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} 0 > sectorPadding;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    havoc sectorPadding;
    goto L70;

  L70:
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    goto L1;

  L1:
    return;

  anon33_Then:
    assume {:partition} sectorPadding >= 0;
    goto L70;

  anon30_Then:
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    goto L1;

  anon29_Then:
    assume {:partition} 15 >= directorySectors;
    goto L60;

  anon32_Then:
    assume {:partition} directorySectors >= 1;
    goto L58;

  anon28_Then:
    sectorsPerFAT := INTDIV((noOfClusters + 2) * 2 - 1, 512) + 1;
    goto L55;

  anon25_Then:
    assume {:partition} oldFormat_1 == 0;
    assume {:nonnull} bpb_2 != 0;
    assume bpb_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_1002 := 32766;
    goto L49;

  anon26_Then:
    goto L48;

  anon31_Then:
    assume {:partition} 65535 >= sizeInSectors;
    Tmp_1004 := sizeInSectors;
    goto L40;

  anon24_Then:
    goto L24;

  anon23_Then:
    assume {:partition} oldFormat_1 != 1;
    Tmp_998 := 4;
    goto L19;
}



procedure {:origName "flDosFormat"} flDosFormat(actual_pVol_81: int, actual_formatParams_1: int) returns (Tmp_1005: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flDosFormat"} flDosFormat(actual_pVol_81: int, actual_formatParams_1: int) returns (Tmp_1005: int)
{
  var {:scalar} Tmp_1006: int;
  var {:scalar} fl_71: int;
  var {:scalar} Tmp_1007: int;
  var {:dopa} {:scalar} cylinders_2: int;
  var {:scalar} fl_72: int;
  var {:scalar} fl_73: int;
  var {:scalar} fl_74: int;
  var {:scalar} bpb_3: int;
  var {:pointer} pVol_81: int;
  var {:pointer} formatParams_1: int;
  var vslice_dummy_var_1313: int;
  var vslice_dummy_var_1314: int;
  var vslice_dummy_var_1315: int;
  var vslice_dummy_var_1316: int;

  anon0:
    call {:si_unique_call 734} cylinders_2 := __HAVOC_malloc(4);
    call {:si_unique_call 735} bpb_3 := __HAVOC_malloc(56);
    pVol_81 := actual_pVol_81;
    formatParams_1 := actual_formatParams_1;
    assume {:nonnull} formatParams_1 != 0;
    assume formatParams_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_1007 := 1;
    goto L8;

  L8:
    assume {:nonnull} formatParams_1 != 0;
    assume formatParams_1 > 0;
    havoc Tmp_1006;
    call {:si_unique_call 736} getDriveGeometry_sdv_static_function_4(pVol_81, bpb_3, cylinders_2, Tmp_1006, Tmp_1007);
    assume {:nonnull} cylinders_2 != 0;
    assume cylinders_2 > 0;
    havoc vslice_dummy_var_1313;
    call {:si_unique_call 737} fl_73 := createMasterBootRecord_sdv_static_function_4(pVol_81, bpb_3, vslice_dummy_var_1313);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} fl_73 == 0;
    assume {:nonnull} formatParams_1 != 0;
    assume formatParams_1 > 0;
    havoc vslice_dummy_var_1314;
    havoc vslice_dummy_var_1315;
    call {:si_unique_call 738} fl_72 := createDOSbootSector_sdv_static_function_4(pVol_81, bpb_3, vslice_dummy_var_1314, vslice_dummy_var_1315);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} fl_72 == 0;
    call {:si_unique_call 739} fl_74 := createFATs_sdv_static_function_4(pVol_81, bpb_3);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} fl_74 == 0;
    assume {:nonnull} formatParams_1 != 0;
    assume formatParams_1 > 0;
    havoc vslice_dummy_var_1316;
    call {:si_unique_call 740} fl_71 := createRootDirectory_sdv_static_function_4(pVol_81, bpb_3, vslice_dummy_var_1316);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} fl_71 != 0;
    Tmp_1005 := fl_71;
    goto L1;

  L1:
    return;

  anon15_Then:
    assume {:partition} fl_71 == 0;
    Tmp_1005 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} fl_74 != 0;
    Tmp_1005 := fl_74;
    goto L1;

  anon13_Then:
    assume {:partition} fl_72 != 0;
    Tmp_1005 := fl_72;
    goto L1;

  anon12_Then:
    assume {:partition} fl_73 != 0;
    Tmp_1005 := fl_73;
    goto L1;

  anon11_Then:
    Tmp_1007 := 0;
    goto L8;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_155: int;

  anon0:
    call {:si_unique_call 741} vslice_dummy_var_155 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "createFATs_sdv_static_function_4"} createFATs_sdv_static_function_4(actual_pVol_82: int, actual_bpb_4: int) returns (Tmp_1011: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "createFATs_sdv_static_function_4"} createFATs_sdv_static_function_4(actual_pVol_82: int, actual_bpb_4: int) returns (Tmp_1011: int)
{
  var {:scalar} iFAT: int;
  var {:pointer} FATEntry: int;
  var {:scalar} iSector_1: int;
  var {:scalar} fl_75: int;
  var {:scalar} sectorNo_3: int;
  var {:scalar} Tmp_1014: int;
  var {:pointer} pVol_82: int;
  var {:pointer} bpb_4: int;
  var boogieTmp: int;
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 742} FATEntry := __HAVOC_malloc(4);
    pVol_82 := actual_pVol_82;
    bpb_4 := actual_bpb_4;
    assume {:nonnull} FATEntry != 0;
    assume FATEntry > 0;
    call {:si_unique_call 743} boogieTmp := __HAVOC_malloc(2048);
    assume {:nonnull} bpb_4 != 0;
    assume bpb_4 > 0;
    havoc sectorNo_3;
    iFAT := 0;
    goto L7;

  L7:
    call {:si_unique_call 744} iFAT, iSector_1, sectorNo_3, Tmp_1014, vslice_dummy_var_156 := createFATs_sdv_static_function_4_loop_L7(iFAT, FATEntry, iSector_1, fl_75, sectorNo_3, Tmp_1014, pVol_82, bpb_4, vslice_dummy_var_156);
    goto L7_last;

  L7_last:
    assume {:nonnull} bpb_4 != 0;
    assume bpb_4 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    iSector_1 := 0;
    goto L12;

  L12:
    call {:si_unique_call 745} iSector_1, sectorNo_3, Tmp_1014, vslice_dummy_var_156 := createFATs_sdv_static_function_4_loop_L12(FATEntry, iSector_1, fl_75, sectorNo_3, Tmp_1014, pVol_82, bpb_4, vslice_dummy_var_156);
    goto L12_last;

  L12_last:
    assume {:nonnull} bpb_4 != 0;
    assume bpb_4 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 746} vslice_dummy_var_156 := flmemset(FATEntry, 0, 512);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} iSector_1 != 0;
    goto L20;

  L20:
    Tmp_1014 := sectorNo_3;
    sectorNo_3 := sectorNo_3 + 1;
    assume {:nonnull} pVol_82 != 0;
    assume pVol_82 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} fl_75 != 0;
    Tmp_1011 := fl_75;
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:partition} fl_75 == 0;
    iSector_1 := iSector_1 + 1;
    goto anon14_Then_dummy;

  anon14_Then_dummy:
    assume false;
    return;

  anon13_Then:
    assume {:partition} iSector_1 == 0;
    assume {:nonnull} FATEntry != 0;
    assume FATEntry > 0;
    assume {:nonnull} bpb_4 != 0;
    assume bpb_4 > 0;
    assume {:nonnull} FATEntry != 0;
    assume FATEntry > 0;
    assume {:nonnull} FATEntry != 0;
    assume FATEntry > 0;
    assume {:nonnull} bpb_4 != 0;
    assume bpb_4 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} FATEntry != 0;
    assume FATEntry > 0;
    goto L20;

  anon15_Then:
    goto L20;

  anon12_Then:
    iFAT := iFAT + 1;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    assume false;
    return;

  anon11_Then:
    Tmp_1011 := 0;
    goto L1;
}



procedure {:origName "createMasterBootRecord_sdv_static_function_4"} createMasterBootRecord_sdv_static_function_4(actual_pVol_83: int, actual_bpb_5: int, actual_cylinders_3: int) returns (Tmp_1015: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "createMasterBootRecord_sdv_static_function_4"} createMasterBootRecord_sdv_static_function_4(actual_pVol_83: int, actual_bpb_5: int, actual_cylinders_3: int) returns (Tmp_1015: int)
{
  var {:scalar} Tmp_1016: int;
  var {:scalar} partitionTable_3: int;
  var {:pointer} ptEntry_1: int;
  var {:scalar} Tmp_1019: int;
  var {:pointer} pVol_83: int;
  var {:pointer} bpb_5: int;
  var {:scalar} cylinders_3: int;
  var boogieTmp: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_1317: int;
  var vslice_dummy_var_1318: int;
  var vslice_dummy_var_1319: int;

  anon0:
    call {:si_unique_call 747} partitionTable_3 := __HAVOC_malloc(20);
    pVol_83 := actual_pVol_83;
    bpb_5 := actual_bpb_5;
    cylinders_3 := actual_cylinders_3;
    assume {:IndirectCall} true;
    call {:si_unique_call 748} vslice_dummy_var_157 := flmemset(partitionTable_3, 0, 512);
    assume {:IndirectCall} true;
    call {:si_unique_call 749} vslice_dummy_var_158 := flmemcpy(partitionTable_3, bootCode_sdv_static_local_variable_113, 218);
    assume {:nonnull} partitionTable_3 != 0;
    assume partitionTable_3 > 0;
    havoc ptEntry_1;
    assume {:nonnull} ptEntry_1 != 0;
    assume ptEntry_1 > 0;
    assume {:nonnull} bpb_5 != 0;
    assume bpb_5 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} ptEntry_1 != 0;
    assume ptEntry_1 > 0;
    assume {:nonnull} ptEntry_1 != 0;
    assume ptEntry_1 > 0;
    goto L20;

  L20:
    assume {:nonnull} bpb_5 != 0;
    assume bpb_5 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_1016 := 1;
    goto L23;

  L23:
    assume {:nonnull} ptEntry_1 != 0;
    assume ptEntry_1 > 0;
    assume {:nonnull} bpb_5 != 0;
    assume bpb_5 > 0;
    assume {:nonnull} ptEntry_1 != 0;
    assume ptEntry_1 > 0;
    assume {:nonnull} ptEntry_1 != 0;
    assume ptEntry_1 > 0;
    call {:si_unique_call 750} boogieTmp := corral_nondet();
    assume {:nonnull} bpb_5 != 0;
    assume bpb_5 > 0;
    havoc Tmp_1019;
    assume {:nonnull} ptEntry_1 != 0;
    assume ptEntry_1 > 0;
    havoc vslice_dummy_var_1317;
    call {:si_unique_call 751} toUNALLONG(vslice_dummy_var_1317, Tmp_1019);
    assume {:nonnull} bpb_5 != 0;
    assume bpb_5 > 0;
    assume {:nonnull} ptEntry_1 != 0;
    assume ptEntry_1 > 0;
    havoc vslice_dummy_var_1318;
    havoc vslice_dummy_var_1319;
    call {:si_unique_call 752} toUNALLONG(vslice_dummy_var_1318, vslice_dummy_var_1319);
    assume {:nonnull} partitionTable_3 != 0;
    assume partitionTable_3 > 0;
    assume {:nonnull} pVol_83 != 0;
    assume pVol_83 > 0;
    return;

  anon5_Then:
    Tmp_1016 := 4;
    goto L23;

  anon6_Then:
    assume {:nonnull} ptEntry_1 != 0;
    assume ptEntry_1 > 0;
    assume {:nonnull} ptEntry_1 != 0;
    assume ptEntry_1 > 0;
    goto L20;
}



procedure {:origName "protectionInit_sdv_static_function_25"} protectionInit_sdv_static_function_25() returns (Tmp_1021: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "protectionInit_sdv_static_function_25"} protectionInit_sdv_static_function_25() returns (Tmp_1021: int)
{
  var {:scalar} fl_76: int;
  var {:pointer} Tmp_1022: int;

  anon0:
    call {:si_unique_call 753} fl_76 := bdkMount_sdv_static_function_25();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} fl_76 != 0;
    Tmp_1021 := fl_76;
    goto L1;

  L1:
    return;

  anon7_Then:
    assume {:partition} fl_76 == 0;
    havoc Tmp_1022;
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_1021 := 106;
    goto L1;

  anon9_Then:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1021 := 0;
    goto L1;

  anon8_Then:
    Tmp_1021 := 109;
    goto L1;
}



procedure {:origName "bdkRetrieveHeader"} bdkRetrieveHeader(actual_headerBuffer: int) returns (Tmp_1024: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1024 == 23 || Tmp_1024 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkRetrieveHeader"} bdkRetrieveHeader(actual_headerBuffer: int) returns (Tmp_1024: int)
{
  var {:scalar} Tmp_1025: int;
  var {:scalar} iUnit_1: int;
  var {:scalar} floorNo_1: int;
  var {:scalar} sdv_458: int;
  var {:scalar} index: int;
  var {:scalar} endUnit_1: int;
  var {:pointer} flash_29: int;
  var {:scalar} Tmp_1029: int;
  var {:scalar} flag: int;
  var {:scalar} status_17: int;
  var {:pointer} bbt: int;
  var {:scalar} Tmp_1030: int;
  var {:pointer} headerBuffer: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;

  anon0:
    headerBuffer := actual_headerBuffer;
    call {:si_unique_call 754} vslice_dummy_var_160 := __HAVOC_malloc(24);
    bbt := headerBuffer;
    havoc flash_29;
    assume {:IndirectCall} true;
    call {:si_unique_call 755} vslice_dummy_var_161 := flmemset(headerBuffer, 0, 280);
    endUnit_1 := 0;
    floorNo_1 := 0;
    goto L18;

  L18:
    call {:si_unique_call 756} Tmp_1025, iUnit_1, floorNo_1, index, endUnit_1, Tmp_1029, flag, Tmp_1030, vslice_dummy_var_159 := bdkRetrieveHeader_loop_L18(Tmp_1025, iUnit_1, floorNo_1, sdv_458, index, endUnit_1, flash_29, Tmp_1029, flag, status_17, bbt, Tmp_1030, headerBuffer, vslice_dummy_var_159);
    goto L18_last;

  L18_last:
    assume {:nonnull} flash_29 != 0;
    assume flash_29 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} flash_29 != 0;
    assume flash_29 > 0;
    havoc iUnit_1;
    havoc endUnit_1;
    flag := 0;
    goto L23;

  L23:
    call {:si_unique_call 757} iUnit_1, index, flag, vslice_dummy_var_159 := bdkRetrieveHeader_loop_L23(iUnit_1, sdv_458, index, endUnit_1, flash_29, flag, status_17, vslice_dummy_var_159);
    goto L23_last;

  L23_last:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} endUnit_1 > iUnit_1;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} flag == 0;
    index := 0;
    goto L27;

  L27:
    call {:si_unique_call 758} index, vslice_dummy_var_159 := bdkRetrieveHeader_loop_L27(sdv_458, index, flash_29, status_17, vslice_dummy_var_159);
    goto L27_last;

  L27_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} 2 > index;
    call {:si_unique_call 759} vslice_dummy_var_159 := corral_nondet();
    assume {:nonnull} flash_29 != 0;
    assume flash_29 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} status_17 != 0;
    Tmp_1024 := 23;
    goto L1;

  L1:
    return;

  anon22_Then:
    assume {:partition} status_17 == 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_458 != 0;
    index := index + 1;
    goto anon23_Else_dummy;

  anon23_Else_dummy:
    assume false;
    return;

  anon23_Then:
    assume {:partition} sdv_458 == 0;
    flag := 1;
    goto L28;

  L28:
    iUnit_1 := iUnit_1 + 1;
    goto L28_dummy;

  L28_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} index >= 2;
    goto L28;

  anon20_Then:
    assume {:partition} flag != 0;
    goto L24;

  L24:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} flag != 0;
    index := 0;
    goto L45;

  L45:
    call {:si_unique_call 760} Tmp_1025, index, Tmp_1029, Tmp_1030 := bdkRetrieveHeader_loop_L45(Tmp_1025, index, Tmp_1029, bbt, Tmp_1030, headerBuffer);
    goto L45_last;

  L45_last:
    assume {:CounterLoop 35} {:Counter "index"} true;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} 35 > index;
    Tmp_1025 := index;
    Tmp_1029 := index;
    Tmp_1030 := index;
    assume {:nonnull} bbt != 0;
    assume bbt > 0;
    assume {:nonnull} headerBuffer != 0;
    assume headerBuffer > 0;
    index := index + 1;
    goto anon24_Else_dummy;

  anon24_Else_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:partition} index >= 35;
    floorNo_1 := floorNo_1 + 1;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    assume false;
    return;

  anon19_Then:
    assume {:partition} flag == 0;
    Tmp_1024 := 23;
    goto L1;

  anon18_Then:
    assume {:partition} iUnit_1 >= endUnit_1;
    goto L24;

  anon17_Then:
    Tmp_1024 := 0;
    goto L1;
}



procedure {:origName "bdkGetBootPartitionInfo"} bdkGetBootPartitionInfo(actual_startUnit: int, actual_partitionSize: int, actual_realPartitionSize: int, actual_unitSize: int, actual_signature: int) returns (Tmp_1031: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkGetBootPartitionInfo"} bdkGetBootPartitionInfo(actual_startUnit: int, actual_partitionSize: int, actual_realPartitionSize: int, actual_unitSize: int, actual_signature: int) returns (Tmp_1031: int)
{
  var {:scalar} st: int;
  var {:pointer} Tmp_1033: int;
  var {:scalar} startUnit: int;
  var {:pointer} partitionSize: int;
  var {:pointer} realPartitionSize: int;
  var {:pointer} unitSize: int;
  var {:pointer} signature: int;
  var boogieTmp: int;

  anon0:
    startUnit := actual_startUnit;
    partitionSize := actual_partitionSize;
    realPartitionSize := actual_realPartitionSize;
    unitSize := actual_unitSize;
    signature := actual_signature;
    st := 0;
    assume {:nonnull} partitionSize != 0;
    assume partitionSize > 0;
    assume {:nonnull} unitSize != 0;
    assume unitSize > 0;
    call {:si_unique_call 761} st := getBootAreaInfo_sdv_static_function_25(startUnit, signature);
    assume {:nonnull} partitionSize != 0;
    assume partitionSize > 0;
    assume {:nonnull} realPartitionSize != 0;
    assume realPartitionSize > 0;
    assume {:nonnull} realPartitionSize != 0;
    assume realPartitionSize > 0;
    call {:si_unique_call 762} boogieTmp := corral_nondet();
    havoc Tmp_1033;
    assume {:nonnull} Tmp_1033 != 0;
    assume Tmp_1033 > 0;
    assume {:nonnull} unitSize != 0;
    assume unitSize > 0;
    Tmp_1031 := st;
    return;
}



procedure {:origName "bdkEraseBootArea"} bdkEraseBootArea(actual_startUnit_1: int, actual_noOfBlocks_1: int, actual_signature_1: int) returns (Tmp_1034: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkEraseBootArea"} bdkEraseBootArea(actual_startUnit_1: int, actual_noOfBlocks_1: int, actual_signature_1: int) returns (Tmp_1034: int)
{
  var {:pointer} Tmp_1035: int;
  var {:scalar} fl_77: int;
  var {:pointer} Tmp_1038: int;
  var {:pointer} Tmp_1039: int;
  var {:scalar} Tmp_1040: int;
  var {:pointer} Tmp_1041: int;
  var {:scalar} index_1: int;
  var {:scalar} sdv_464: int;
  var {:pointer} Tmp_1042: int;
  var {:scalar} Tmp_1043: int;
  var {:scalar} fl_78: int;
  var {:pointer} flash_30: int;
  var {:pointer} Tmp_1045: int;
  var {:scalar} fl_79: int;
  var {:scalar} status_18: int;
  var {:scalar} iBlock: int;
  var {:pointer} Tmp_1046: int;
  var {:scalar} startUnit_1: int;
  var {:scalar} noOfBlocks_1: int;
  var {:pointer} signature_1: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_1320: int;
  var vslice_dummy_var_1321: int;

  anon0:
    startUnit_1 := actual_startUnit_1;
    noOfBlocks_1 := actual_noOfBlocks_1;
    signature_1 := actual_signature_1;
    call {:si_unique_call 763} Tmp_1042 := __HAVOC_malloc(32);
    call {:si_unique_call 764} Tmp_1045 := __HAVOC_malloc(20);
    havoc flash_30;
    call {:si_unique_call 765} Tmp_1043 := corral_nondet();
    call {:si_unique_call 766} fl_78 := bdkUpdateBootAreaInit(startUnit_1, Tmp_1043, 0, signature_1);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} fl_78 != 0;
    Tmp_1034 := fl_78;
    goto L1;

  L1:
    return;

  anon19_Then:
    assume {:partition} fl_78 == 0;
    Tmp_1039 := signature_1;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1320;
    call {:si_unique_call 767} vslice_dummy_var_164 := flmemcpy(vslice_dummy_var_1320, Tmp_1039, 4);
    havoc Tmp_1042;
    Tmp_1046 := Tmp_1042 + 4 * 4;
    Tmp_1045 := strConst__li2bpl19;
    assume {:IndirectCall} true;
    call {:si_unique_call 768} vslice_dummy_var_165 := flmemcpy(Tmp_1046, Tmp_1045, 4);
    call {:si_unique_call 769} iBlock := corral_nondet();
    index_1 := 0;
    goto L26;

  L26:
    call {:si_unique_call 770} Tmp_1035, Tmp_1038, Tmp_1040, Tmp_1041, index_1, sdv_464, iBlock, vslice_dummy_var_162, vslice_dummy_var_163 := bdkEraseBootArea_loop_L26(Tmp_1035, fl_77, Tmp_1038, Tmp_1040, Tmp_1041, index_1, sdv_464, flash_30, fl_79, status_18, iBlock, noOfBlocks_1, signature_1, vslice_dummy_var_162, vslice_dummy_var_163);
    goto L26_last;

  L26_last:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} noOfBlocks_1 > index_1;
    goto L28;

  L28:
    call {:si_unique_call 771} Tmp_1035, Tmp_1038, Tmp_1040, Tmp_1041, sdv_464, iBlock, vslice_dummy_var_162 := bdkEraseBootArea_loop_L28(Tmp_1035, Tmp_1038, Tmp_1040, Tmp_1041, sdv_464, flash_30, status_18, iBlock, signature_1, vslice_dummy_var_162);
    goto L28_last;

  L28_last:
    havoc Tmp_1040;
    havoc Tmp_1041;
    assume {:nonnull} Tmp_1041 != 0;
    assume Tmp_1041 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_1035;
    assume {:nonnull} Tmp_1035 != 0;
    assume Tmp_1035 > 0;
    havoc iBlock;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_1034 := 31;
    goto L1;

  anon26_Then:
    goto L30;

  L30:
    call {:si_unique_call 772} vslice_dummy_var_162 := corral_nondet();
    assume {:nonnull} flash_30 != 0;
    assume flash_30 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_18 != 0;
    Tmp_1034 := status_18;
    goto L1;

  anon21_Then:
    assume {:partition} status_18 == 0;
    Tmp_1038 := signature_1;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1321;
    call {:si_unique_call 773} sdv_464 := flmemcmp(vslice_dummy_var_1321, Tmp_1038, 4);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_464 == 0;
    assume {:nonnull} flash_30 != 0;
    assume flash_30 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} fl_77 == 0;
    call {:si_unique_call 774} vslice_dummy_var_163 := corral_nondet();
    assume {:nonnull} flash_30 != 0;
    assume flash_30 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} fl_79 != 0;
    Tmp_1034 := fl_79;
    goto L1;

  anon24_Then:
    assume {:partition} fl_79 == 0;
    index_1 := index_1 + 1;
    iBlock := iBlock + 1;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    assume false;
    return;

  anon23_Then:
    assume {:partition} fl_77 != 0;
    Tmp_1034 := fl_77;
    goto L1;

  anon22_Then:
    assume {:partition} sdv_464 != 0;
    iBlock := iBlock + 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    Tmp_1034 := 52;
    goto L1;

  anon27_Then:
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    assume false;
    return;

  anon25_Then:
    goto L30;

  anon20_Then:
    assume {:partition} index_1 >= noOfBlocks_1;
    Tmp_1034 := 0;
    goto L1;
}



procedure {:origName "bdkCopyBootAreaBlock"} bdkCopyBootAreaBlock(actual_buf_8: int, actual_bufferLen: int, actual_checkSum: int) returns (Tmp_1047: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkCopyBootAreaBlock"} bdkCopyBootAreaBlock(actual_buf_8: int, actual_bufferLen: int, actual_checkSum: int) returns (Tmp_1047: int)
{
  var {:scalar} Tmp_1048: int;
  var {:pointer} signRead: int;
  var {:scalar} readLen: int;
  var {:scalar} modes: int;
  var {:pointer} Tmp_1050: int;
  var {:scalar} sdv_469: int;
  var {:pointer} flash_31: int;
  var {:pointer} Tmp_1052: int;
  var {:scalar} status_19: int;
  var {:scalar} iBlock_1: int;
  var {:scalar} Tmp_1053: int;
  var {:scalar} bufferLen: int;
  var boogieTmp: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_1322: int;

  anon0:
    call {:si_unique_call 775} signRead := __HAVOC_malloc(4);
    bufferLen := actual_bufferLen;
    assume {:nonnull} signRead != 0;
    assume signRead > 0;
    call {:si_unique_call 776} boogieTmp := __HAVOC_malloc(16);
    havoc flash_31;
    assume {:nonnull} flash_31 != 0;
    assume flash_31 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L12;

  L12:
    Tmp_1047 := 24;
    goto L1;

  L1:
    return;

  anon36_Then:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} flash_31 != 0;
    assume flash_31 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L15;

  L15:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    havoc Tmp_1053;
    goto L18;

  L18:
    readLen := Tmp_1053;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    modes := 2;
    goto L23;

  L23:
    assume {:nonnull} flash_31 != 0;
    assume flash_31 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_19 != 0;
    Tmp_1047 := status_19;
    goto L1;

  anon31_Then:
    assume {:partition} status_19 == 0;
    Tmp_1047 := 0;
    goto L1;

  anon30_Then:
    goto L20;

  L20:
    modes := 0;
    goto L23;

  anon37_Then:
    goto L20;

  anon29_Then:
    Tmp_1053 := bufferLen;
    goto L18;

  anon28_Then:
    call {:si_unique_call 777} iBlock_1 := corral_nondet();
    goto L34;

  L34:
    call {:si_unique_call 778} Tmp_1048, Tmp_1050, sdv_469, Tmp_1052, iBlock_1, vslice_dummy_var_166 := bdkCopyBootAreaBlock_loop_L34(Tmp_1048, signRead, Tmp_1050, sdv_469, flash_31, Tmp_1052, status_19, iBlock_1, vslice_dummy_var_166);
    goto L34_last;

  L34_last:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_1048;
    havoc Tmp_1052;
    assume {:nonnull} Tmp_1052 != 0;
    assume Tmp_1052 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_1050;
    assume {:nonnull} Tmp_1050 != 0;
    assume Tmp_1050 > 0;
    havoc iBlock_1;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L38;

  L38:
    call {:si_unique_call 779} vslice_dummy_var_166 := corral_nondet();
    assume {:nonnull} flash_31 != 0;
    assume flash_31 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_19 == 0;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1322;
    call {:si_unique_call 780} sdv_469 := flmemcmp(signRead, vslice_dummy_var_1322, 4);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_469 != 0;
    iBlock_1 := iBlock_1 + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} sdv_469 == 0;
    goto L35;

  L35:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    Tmp_1047 := 52;
    goto L1;

  anon33_Then:
    call {:si_unique_call 781} boogieTmp := corral_nondet();
    goto L15;

  anon34_Then:
    assume {:partition} status_19 != 0;
    Tmp_1047 := status_19;
    goto L1;

  anon39_Then:
    goto L35;

  anon38_Then:
    goto L38;

  anon32_Then:
    goto L35;

  anon27_Then:
    goto L12;
}



procedure {:origName "bdkSetProtectionType"} bdkSetProtectionType(actual_newType: int) returns (Tmp_1056: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkSetProtectionType"} bdkSetProtectionType(actual_newType: int) returns (Tmp_1056: int)
{
  var {:pointer} Tmp_1057: int;
  var {:pointer} Tmp_1058: int;
  var {:scalar} fl_80: int;
  var {:scalar} Tmp_1060: int;
  var {:scalar} floorNo_2: int;
  var {:dopa} {:scalar} type_1: int;
  var {:scalar} fl_81: int;
  var {:scalar} high: int;
  var {:scalar} Tmp_1062: int;
  var {:scalar} fl_82: int;
  var {:pointer} Tmp_1063: int;
  var {:pointer} Tmp_1064: int;
  var {:scalar} Tmp_1065: int;
  var {:scalar} newType: int;

  anon0:
    call {:si_unique_call 782} type_1 := __HAVOC_malloc(4);
    newType := actual_newType;
    call {:si_unique_call 783} fl_81 := protectionChangeInit_sdv_static_function_25(type_1);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} fl_81 != 0;
    Tmp_1056 := fl_81;
    goto L1;

  L1:
    return;

  anon17_Then:
    assume {:partition} fl_81 == 0;
    Tmp_1065 := BAND(newType, BOR(BOR(1, 2), 4));
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Tmp_1065 != newType;
    goto L17;

  L17:
    Tmp_1056 := 51;
    goto L1;

  anon21_Then:
    assume {:partition} Tmp_1065 == newType;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(newType, 1) != 0;
    assume {:nonnull} type_1 != 0;
    assume type_1 > 0;
    havoc newType;
    floorNo_2 := 0;
    goto L20;

  L20:
    call {:si_unique_call 784} Tmp_1057, Tmp_1058, Tmp_1060, floorNo_2, Tmp_1062, Tmp_1063, Tmp_1064 := bdkSetProtectionType_loop_L20(Tmp_1057, Tmp_1058, fl_80, Tmp_1060, floorNo_2, high, Tmp_1062, fl_82, Tmp_1063, Tmp_1064, newType);
    goto L20_last;

  L20_last:
    havoc Tmp_1063;
    assume {:nonnull} Tmp_1063 != 0;
    assume Tmp_1063 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    havoc Tmp_1057;
    assume {:nonnull} Tmp_1057 != 0;
    assume Tmp_1057 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} fl_80 == 0;
    havoc Tmp_1064;
    assume {:nonnull} Tmp_1064 != 0;
    assume Tmp_1064 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_1060 := 1;
    goto L33;

  L33:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} high != 0;
    Tmp_1062 := newType;
    goto L37;

  L37:
    havoc Tmp_1058;
    assume {:nonnull} Tmp_1058 != 0;
    assume Tmp_1058 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} fl_82 != 0;
    Tmp_1056 := fl_82;
    goto L1;

  anon20_Then:
    assume {:partition} fl_82 == 0;
    floorNo_2 := floorNo_2 + 1;
    goto anon20_Then_dummy;

  anon20_Then_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:partition} high == 0;
    Tmp_1062 := 1;
    goto L37;

  anon23_Then:
    Tmp_1060 := 0;
    goto L33;

  anon19_Then:
    assume {:partition} fl_80 != 0;
    Tmp_1056 := fl_80;
    goto L1;

  anon22_Then:
    Tmp_1056 := 0;
    goto L1;

  anon18_Then:
    assume {:partition} BAND(newType, 1) == 0;
    goto L17;
}



procedure {:origName "protectionChangeInit_sdv_static_function_25"} protectionChangeInit_sdv_static_function_25(actual_type_2: int) returns (Tmp_1067: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "protectionChangeInit_sdv_static_function_25"} protectionChangeInit_sdv_static_function_25(actual_type_2: int) returns (Tmp_1067: int)
{
  var {:pointer} Tmp_1068: int;
  var {:scalar} fl_83: int;
  var {:pointer} Tmp_1070: int;
  var {:pointer} Tmp_1072: int;
  var {:scalar} fl_84: int;
  var {:pointer} Tmp_1073: int;
  var {:pointer} Tmp_1074: int;
  var {:pointer} Tmp_1075: int;
  var vslice_dummy_var_167: int;

  anon0:
    call {:si_unique_call 785} vslice_dummy_var_167 := __HAVOC_malloc(36);
    call {:si_unique_call 786} fl_84 := protectionInit_sdv_static_function_25();
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} fl_84 != 0;
    Tmp_1067 := fl_84;
    goto L1;

  L1:
    return;

  anon15_Then:
    assume {:partition} fl_84 == 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    havoc Tmp_1075;
    assume {:nonnull} Tmp_1075 != 0;
    assume Tmp_1075 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    havoc Tmp_1070;
    assume {:nonnull} Tmp_1070 != 0;
    assume Tmp_1070 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1074;
    assume {:nonnull} Tmp_1074 != 0;
    assume Tmp_1074 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1068;
    assume {:nonnull} Tmp_1068 != 0;
    assume Tmp_1068 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_1073;
    assume {:nonnull} Tmp_1073 != 0;
    assume Tmp_1073 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} fl_83 != 0;
    Tmp_1067 := fl_83;
    goto L1;

  anon17_Then:
    assume {:partition} fl_83 == 0;
    havoc Tmp_1072;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    goto L1;

  anon21_Then:
    goto L13;

  L13:
    Tmp_1067 := 106;
    goto L1;

  anon20_Then:
    goto L13;

  anon19_Then:
    goto L13;

  anon18_Then:
    goto L13;

  anon16_Then:
    Tmp_1067 := 106;
    goto L1;
}



procedure {:origName "bdkMount_sdv_static_function_25"} bdkMount_sdv_static_function_25() returns (Tmp_1076: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkMount_sdv_static_function_25"} bdkMount_sdv_static_function_25() returns (Tmp_1076: int)
{
  var {:scalar} Tmp_1077: int;
  var {:pointer} buf1: int;
  var {:scalar} Tmp_1078: int;
  var {:scalar} Tmp_1080: int;
  var {:pointer} Tmp_1081: int;
  var {:scalar} Tmp_1082: int;
  var {:scalar} fl_85: int;
  var {:scalar} Tmp_1084: int;
  var {:scalar} Tmp_1086: int;
  var {:pointer} Tmp_1087: int;
  var {:pointer} Tmp_1088: int;
  var {:scalar} Tmp_1089: int;
  var {:scalar} noOfBlocks_2: int;
  var {:scalar} Tmp_1090: int;
  var {:pointer} headerBuffer_1: int;
  var {:scalar} Tmp_1091: int;
  var {:scalar} Tmp_1092: int;
  var {:scalar} Tmp_1093: int;
  var {:pointer} volume_2: int;
  var {:scalar} sdv_479: int;
  var {:pointer} buf2: int;
  var {:pointer} flash_32: int;
  var {:scalar} fl_86: int;
  var {:scalar} Tmp_1095: int;
  var {:scalar} Tmp_1096: int;
  var {:scalar} blockMultiplierBits: int;
  var {:scalar} iBlock_2: int;
  var {:scalar} maxPartition: int;
  var {:scalar} Tmp_1098: int;
  var boogieTmp: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;

  anon0:
    call {:si_unique_call 787} buf1 := __HAVOC_malloc(4);
    call {:si_unique_call 788} buf2 := __HAVOC_malloc(4);
    assume {:nonnull} buf1 != 0;
    assume buf1 > 0;
    call {:si_unique_call 789} boogieTmp := __HAVOC_malloc(24);
    call {:si_unique_call 790} Tmp_1081 := __HAVOC_malloc(12);
    call {:si_unique_call 791} Tmp_1087 := __HAVOC_malloc(12);
    call {:si_unique_call 792} Tmp_1088 := __HAVOC_malloc(12);
    call {:si_unique_call 793} headerBuffer_1 := __HAVOC_malloc(280);
    call {:si_unique_call 794} vslice_dummy_var_169 := __HAVOC_malloc(24);
    assume {:nonnull} buf2 != 0;
    assume buf2 > 0;
    call {:si_unique_call 795} boogieTmp := __HAVOC_malloc(24);
    call {:si_unique_call 796} vslice_dummy_var_170 := __HAVOC_malloc(24);
    havoc flash_32;
    maxPartition := 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto L16;

  L16:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L18;

  L18:
    Tmp_1076 := 20;
    goto L1;

  L1:
    return;

  anon39_Then:
    havoc Tmp_1089;
    havoc Tmp_1095;
    havoc Tmp_1087;
    assume {:nonnull} Tmp_1087 != 0;
    assume Tmp_1087 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    havoc Tmp_1098;
    havoc Tmp_1092;
    havoc Tmp_1081;
    assume {:nonnull} Tmp_1081 != 0;
    assume Tmp_1081 > 0;
    havoc Tmp_1096;
    Tmp_1076 := 0;
    goto L1;

  anon54_Then:
    goto L18;

  anon53_Then:
    assume {:nonnull} flash_32 != 0;
    assume flash_32 > 0;
    call {:si_unique_call 797} noOfBlocks_2 := corral_nondet();
    assume {:nonnull} flash_32 != 0;
    assume flash_32 > 0;
    call {:si_unique_call 798} boogieTmp := corral_nondet();
    assume {:nonnull} flash_32 != 0;
    assume flash_32 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L25;

  L25:
    assume {:nonnull} flash_32 != 0;
    assume flash_32 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L29;

  L29:
    assume {:nonnull} flash_32 != 0;
    assume flash_32 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} flash_32 != 0;
    assume flash_32 > 0;
    havoc iBlock_2;
    goto L35;

  L35:
    call {:si_unique_call 799} sdv_479, iBlock_2, vslice_dummy_var_168 := bdkMount_sdv_static_function_25_loop_L35(buf1, noOfBlocks_2, sdv_479, buf2, flash_32, fl_86, iBlock_2, vslice_dummy_var_168);
    goto L35_last;

  L35_last:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} noOfBlocks_2 > iBlock_2;
    call {:si_unique_call 800} vslice_dummy_var_168 := corral_nondet();
    assume {:nonnull} flash_32 != 0;
    assume flash_32 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} fl_86 == 0;
    assume {:IndirectCall} true;
    call {:si_unique_call 801} sdv_479 := flmemcmp(buf2, buf1, 6);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_479 != 0;
    iBlock_2 := iBlock_2 + 1;
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    assume false;
    return;

  anon45_Then:
    assume {:partition} sdv_479 == 0;
    goto L36;

  L36:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} iBlock_2 == noOfBlocks_2;
    Tmp_1076 := 23;
    goto L1;

  anon43_Then:
    assume {:partition} iBlock_2 != noOfBlocks_2;
    assume {:nonnull} flash_32 != 0;
    assume flash_32 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} iBlock_2 != 0;
    Tmp_1093 := iBlock_2 - 1;
    goto L58;

  L58:
    maxPartition := 1;
    goto L53;

  L53:
    assume {:nonnull} flash_32 != 0;
    assume flash_32 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    maxPartition := 0;
    call {:si_unique_call 802} fl_85 := bdkRetrieveHeader(headerBuffer_1);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} fl_85 != 0;
    Tmp_1076 := fl_85;
    goto L1;

  anon48_Then:
    assume {:partition} fl_85 == 0;
    volume_2 := headerBuffer_1;
    assume {:nonnull} volume_2 != 0;
    assume volume_2 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L72;

  L72:
    assume {:nonnull} headerBuffer_1 != 0;
    assume headerBuffer_1 > 0;
    havoc blockMultiplierBits;
    havoc Tmp_1084;
    goto L74;

  L74:
    call {:si_unique_call 803} Tmp_1078, Tmp_1080, Tmp_1090, maxPartition, boogieTmp := bdkMount_sdv_static_function_25_loop_L74(Tmp_1078, Tmp_1080, Tmp_1090, volume_2, maxPartition, boogieTmp);
    goto L74_last;

  L74_last:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} volume_2 != 0;
    assume volume_2 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    maxPartition := maxPartition + 1;
    call {:si_unique_call 804} boogieTmp := corral_nondet();
    call {:si_unique_call 805} boogieTmp := corral_nondet();
    havoc Tmp_1090;
    assume {:nonnull} volume_2 != 0;
    assume volume_2 > 0;
    assume {:nonnull} volume_2 != 0;
    assume volume_2 > 0;
    havoc Tmp_1078;
    havoc Tmp_1080;
    goto anon51_Else_dummy;

  anon51_Else_dummy:
    assume false;
    return;

  anon51_Then:
    goto L60;

  L60:
    blockMultiplierBits := 0;
    goto L87;

  L87:
    call {:si_unique_call 806} Tmp_1077, Tmp_1082, Tmp_1086, Tmp_1088, Tmp_1091, blockMultiplierBits := bdkMount_sdv_static_function_25_loop_L87(Tmp_1077, Tmp_1082, Tmp_1086, Tmp_1088, Tmp_1091, blockMultiplierBits, maxPartition);
    goto L87_last;

  L87_last:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} maxPartition > blockMultiplierBits;
    havoc Tmp_1077;
    Tmp_1091 := blockMultiplierBits;
    havoc Tmp_1086;
    havoc Tmp_1088;
    havoc Tmp_1082;
    assume {:nonnull} Tmp_1088 != 0;
    assume Tmp_1088 > 0;
    blockMultiplierBits := blockMultiplierBits + 1;
    goto anon52_Else_dummy;

  anon52_Else_dummy:
    assume false;
    return;

  anon52_Then:
    assume {:partition} blockMultiplierBits >= maxPartition;
    goto L16;

  anon50_Then:
    goto L60;

  anon57_Then:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    Tmp_1076 := 52;
    goto L1;

  anon49_Then:
    goto L72;

  anon47_Then:
    goto L60;

  anon56_Then:
    assume {:partition} iBlock_2 == 0;
    Tmp_1093 := 0;
    goto L58;

  anon46_Then:
    goto L53;

  anon44_Then:
    assume {:partition} fl_86 != 0;
    Tmp_1076 := fl_86;
    goto L1;

  anon42_Then:
    assume {:partition} iBlock_2 >= noOfBlocks_2;
    goto L36;

  anon41_Then:
    Tmp_1076 := 106;
    goto L1;

  anon40_Then:
    goto L29;

  anon55_Then:
    goto L25;
}



procedure {:origName "getBootAreaInfo_sdv_static_function_25"} getBootAreaInfo_sdv_static_function_25(actual_startUnit_2: int, actual_signature_2: int) returns (Tmp_1099: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "getBootAreaInfo_sdv_static_function_25"} getBootAreaInfo_sdv_static_function_25(actual_startUnit_2: int, actual_signature_2: int) returns (Tmp_1099: int)
{
  var {:pointer} Tmp_1101: int;
  var {:pointer} Tmp_1102: int;
  var {:scalar} Tmp_1103: int;
  var {:pointer} Tmp_1104: int;
  var {:pointer} Tmp_1105: int;
  var {:pointer} Tmp_1106: int;
  var {:pointer} Tmp_1107: int;
  var {:scalar} fl_87: int;
  var {:scalar} sdv_482: int;
  var {:pointer} Tmp_1109: int;
  var {:scalar} sdv_483: int;
  var {:scalar} sdv_486: int;
  var {:pointer} flash_33: int;
  var {:scalar} fl_88: int;
  var {:pointer} Tmp_1110: int;
  var {:scalar} numBlock: int;
  var {:pointer} Tmp_1111: int;
  var {:scalar} iBlock_3: int;
  var {:scalar} startUnit_2: int;
  var {:pointer} signature_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_1323: int;
  var vslice_dummy_var_1324: int;
  var vslice_dummy_var_1325: int;
  var vslice_dummy_var_1326: int;

  anon0:
    startUnit_2 := actual_startUnit_2;
    signature_2 := actual_signature_2;
    call {:si_unique_call 807} Tmp_1102 := __HAVOC_malloc(20);
    call {:si_unique_call 808} Tmp_1110 := __HAVOC_malloc(32);
    call {:si_unique_call 809} fl_88 := bdkMount_sdv_static_function_25();
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} fl_88 != 0;
    Tmp_1099 := fl_88;
    goto L1;

  L1:
    return;

  anon35_Then:
    assume {:partition} fl_88 == 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_1106 := signature_2;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1323;
    call {:si_unique_call 810} sdv_483 := flmemcmp(vslice_dummy_var_1323, Tmp_1106, 4);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_483 == 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L23;

  L23:
    Tmp_1099 := 0;
    goto L1;

  anon40_Then:
    goto L14;

  L14:
    Tmp_1107 := signature_2;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1324;
    call {:si_unique_call 811} vslice_dummy_var_172 := flmemcpy(vslice_dummy_var_1324, Tmp_1107, 4);
    havoc flash_33;
    numBlock := 0;
    numBlock := 0;
    havoc iBlock_3;
    goto L36;

  L36:
    call {:si_unique_call 812} Tmp_1101, Tmp_1102, Tmp_1103, Tmp_1104, Tmp_1105, sdv_482, Tmp_1109, sdv_486, Tmp_1110, numBlock, iBlock_3, boogieTmp, vslice_dummy_var_171 := getBootAreaInfo_sdv_static_function_25_loop_L36(Tmp_1101, Tmp_1102, Tmp_1103, Tmp_1104, Tmp_1105, fl_87, sdv_482, Tmp_1109, sdv_486, flash_33, Tmp_1110, numBlock, iBlock_3, startUnit_2, signature_2, boogieTmp, vslice_dummy_var_171);
    goto L36_last;

  L36_last:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_1103;
    havoc Tmp_1109;
    assume {:nonnull} Tmp_1109 != 0;
    assume Tmp_1109 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto L44;

  L44:
    call {:si_unique_call 813} vslice_dummy_var_171 := corral_nondet();
    assume {:nonnull} flash_33 != 0;
    assume flash_33 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} fl_87 != 0;
    Tmp_1099 := fl_87;
    goto L1;

  anon43_Then:
    assume {:partition} fl_87 == 0;
    Tmp_1104 := signature_2;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1325;
    call {:si_unique_call 814} sdv_486 := flmemcmp(Tmp_1104, vslice_dummy_var_1325, 4);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_486 != 0;
    goto L57;

  L57:
    iBlock_3 := iBlock_3 + 1;
    goto L57_dummy;

  L57_dummy:
    assume false;
    return;

  anon44_Then:
    assume {:partition} sdv_486 == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} numBlock != 0;
    goto L59;

  L59:
    numBlock := numBlock + 1;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} numBlock > startUnit_2;
    havoc Tmp_1110;
    Tmp_1101 := Tmp_1110 + 4 * 4;
    Tmp_1102 := strConst__li2bpl19;
    assume {:IndirectCall} true;
    call {:si_unique_call 815} sdv_482 := flmemcmp(Tmp_1101, Tmp_1102, 4);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_482 == 0;
    call {:si_unique_call 816} boogieTmp := corral_nondet();
    goto L57;

  anon47_Then:
    assume {:partition} sdv_482 != 0;
    goto L57;

  anon46_Then:
    assume {:partition} startUnit_2 >= numBlock;
    goto L57;

  anon51_Then:
    goto L57;

  anon45_Then:
    assume {:partition} numBlock == 0;
    goto L59;

  anon48_Then:
    havoc Tmp_1105;
    assume {:nonnull} Tmp_1105 != 0;
    assume Tmp_1105 > 0;
    havoc iBlock_3;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L44;

  anon49_Then:
    goto L37;

  L37:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} startUnit_2 >= numBlock;
    Tmp_1099 := 52;
    goto L1;

  anon42_Then:
    assume {:partition} numBlock > startUnit_2;
    call {:si_unique_call 817} boogieTmp := corral_nondet();
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L73;

  L73:
    Tmp_1111 := signature_2;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1326;
    call {:si_unique_call 818} vslice_dummy_var_173 := flmemcpy(vslice_dummy_var_1326, Tmp_1111, 4);
    goto L23;

  anon50_Then:
    call {:si_unique_call 819} boogieTmp := corral_nondet();
    goto L73;

  anon41_Then:
    goto L37;

  anon39_Then:
    goto L14;

  anon38_Then:
    goto L14;

  anon37_Then:
    assume {:partition} sdv_483 != 0;
    goto L14;

  anon36_Then:
    goto L14;
}



procedure {:origName "bdkUpdateBootAreaBlock"} bdkUpdateBootAreaBlock(actual_buf_9: int, actual_bufferLen_1: int) returns (Tmp_1112: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkUpdateBootAreaBlock"} bdkUpdateBootAreaBlock(actual_buf_9: int, actual_bufferLen_1: int) returns (Tmp_1112: int)
{
  var {:scalar} writeLen: int;
  var {:scalar} Tmp_1115: int;
  var {:pointer} Tmp_1116: int;
  var {:scalar} fl_89: int;
  var {:scalar} Tmp_1117: int;
  var {:pointer} Tmp_1118: int;
  var {:scalar} j_2: int;
  var {:pointer} signRead_1: int;
  var {:pointer} Tmp_1121: int;
  var {:scalar} modes_1: int;
  var {:scalar} sdv_490: int;
  var {:scalar} sdv_491: int;
  var {:scalar} sdv_493: int;
  var {:scalar} Tmp_1123: int;
  var {:scalar} i0: int;
  var {:pointer} flash_34: int;
  var {:scalar} fl_90: int;
  var {:pointer} Tmp_1125: int;
  var {:pointer} Tmp_1126: int;
  var {:scalar} status_20: int;
  var {:scalar} fl_91: int;
  var {:scalar} iBlock_4: int;
  var {:scalar} Tmp_1127: int;
  var {:pointer} Tmp_1130: int;
  var {:scalar} bufferLen_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_1327: int;
  var vslice_dummy_var_1328: int;

  anon0:
    call {:si_unique_call 820} signRead_1 := __HAVOC_malloc(4);
    bufferLen_1 := actual_bufferLen_1;
    call {:si_unique_call 821} vslice_dummy_var_175 := __HAVOC_malloc(20);
    call {:si_unique_call 822} Tmp_1118 := __HAVOC_malloc(32);
    assume {:nonnull} signRead_1 != 0;
    assume signRead_1 > 0;
    call {:si_unique_call 823} boogieTmp := __HAVOC_malloc(32);
    call {:si_unique_call 824} Tmp_1125 := __HAVOC_malloc(32);
    call {:si_unique_call 825} Tmp_1126 := __HAVOC_malloc(20);
    havoc flash_34;
    assume {:nonnull} flash_34 != 0;
    assume flash_34 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L14;

  L14:
    Tmp_1112 := 24;
    goto L1;

  L1:
    return;

  anon63_Then:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} flash_34 != 0;
    assume flash_34 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L17;

  L17:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_1127;
    goto L20;

  L20:
    writeLen := Tmp_1127;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    modes_1 := 2;
    goto L26;

  L26:
    assume {:nonnull} flash_34 != 0;
    assume flash_34 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} fl_90 != 0;
    Tmp_1112 := fl_90;
    goto L1;

  anon49_Then:
    assume {:partition} fl_90 == 0;
    Tmp_1112 := 0;
    goto L1;

  anon48_Then:
    goto L22;

  L22:
    modes_1 := 0;
    goto L26;

  anon64_Then:
    goto L22;

  anon47_Then:
    Tmp_1127 := bufferLen_1;
    goto L20;

  anon46_Then:
    call {:si_unique_call 826} iBlock_4 := corral_nondet();
    goto L37;

  L37:
    call {:si_unique_call 827} Tmp_1116, Tmp_1117, Tmp_1121, sdv_493, iBlock_4, vslice_dummy_var_174 := bdkUpdateBootAreaBlock_loop_L37(Tmp_1116, Tmp_1117, signRead_1, Tmp_1121, sdv_493, flash_34, status_20, iBlock_4, vslice_dummy_var_174);
    goto L37_last;

  L37_last:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    havoc Tmp_1117;
    havoc Tmp_1116;
    assume {:nonnull} Tmp_1116 != 0;
    assume Tmp_1116 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_1121;
    assume {:nonnull} Tmp_1121 != 0;
    assume Tmp_1121 > 0;
    havoc iBlock_4;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L41;

  L41:
    call {:si_unique_call 828} vslice_dummy_var_174 := corral_nondet();
    assume {:nonnull} flash_34 != 0;
    assume flash_34 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} status_20 == 0;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1327;
    call {:si_unique_call 829} sdv_493 := flmemcmp(signRead_1, vslice_dummy_var_1327, 4);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_493 != 0;
    iBlock_4 := iBlock_4 + 1;
    goto anon53_Else_dummy;

  anon53_Else_dummy:
    assume false;
    return;

  anon53_Then:
    assume {:partition} sdv_493 == 0;
    goto L38;

  L38:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    Tmp_1112 := 52;
    goto L1;

  anon51_Then:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} flash_34 != 0;
    assume flash_34 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} fl_89 != 0;
    Tmp_1112 := fl_89;
    goto L1;

  anon56_Then:
    assume {:partition} fl_89 == 0;
    goto L59;

  L59:
    assume {:nonnull} flash_34 != 0;
    assume flash_34 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_1118;
    Tmp_1130 := Tmp_1118 + 4 * 4;
    Tmp_1126 := strConst__li2bpl19;
    assume {:IndirectCall} true;
    call {:si_unique_call 830} vslice_dummy_var_176 := flmemcpy(Tmp_1130, Tmp_1126, 4);
    goto L73;

  L73:
    call {:si_unique_call 831} boogieTmp := corral_nondet();
    assume {:nonnull} flash_34 != 0;
    assume flash_34 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_20 == 29;
    assume {:nonnull} flash_34 != 0;
    assume flash_34 > 0;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1328;
    call {:si_unique_call 832} sdv_491 := flmemcmp(signRead_1, vslice_dummy_var_1328, 4);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_491 != 0;
    Tmp_1112 := 29;
    goto L1;

  anon59_Then:
    assume {:partition} sdv_491 == 0;
    assume {:nonnull} signRead_1 != 0;
    assume signRead_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_490 != 0;
    assume {:nonnull} flash_34 != 0;
    assume flash_34 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} fl_91 != 0;
    Tmp_1112 := fl_91;
    goto L1;

  anon61_Then:
    assume {:partition} fl_91 == 0;
    goto L17;

  anon60_Then:
    assume {:partition} sdv_490 == 0;
    goto L17;

  anon58_Then:
    assume {:partition} status_20 != 29;
    goto L17;

  anon57_Then:
    goto L67;

  L67:
    havoc i0;
    j_2 := 8;
    goto L106;

  L106:
    call {:si_unique_call 833} Tmp_1115, j_2, Tmp_1123, i0, Tmp_1125 := bdkUpdateBootAreaBlock_loop_L106(Tmp_1115, j_2, Tmp_1123, i0, Tmp_1125);
    goto L106_last;

  L106_last:
    assume {:CounterLoop 4} {:Counter "j_2"} true;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} j_2 > 4;
    Tmp_1123 := INTMOD(i0, 10);
    Tmp_1115 := j_2 - 1;
    havoc Tmp_1125;
    assume {:nonnull} Tmp_1125 != 0;
    assume Tmp_1125 > 0;
    i0 := INTDIV(i0, 10);
    j_2 := j_2 - 1;
    goto anon62_Else_dummy;

  anon62_Else_dummy:
    assume false;
    return;

  anon62_Then:
    assume {:partition} 4 >= j_2;
    goto L73;

  anon55_Then:
    goto L67;

  anon54_Then:
    goto L59;

  anon52_Then:
    assume {:partition} status_20 != 0;
    Tmp_1112 := status_20;
    goto L1;

  anon66_Then:
    goto L38;

  anon65_Then:
    goto L41;

  anon50_Then:
    goto L38;

  anon45_Then:
    goto L14;
}



procedure {:origName "bdkChangeKey"} bdkChangeKey(actual_key: int) returns (Tmp_1132: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkChangeKey"} bdkChangeKey(actual_key: int) returns (Tmp_1132: int)
{
  var {:pointer} Tmp_1133: int;
  var {:scalar} Tmp_1134: int;
  var {:pointer} Tmp_1135: int;
  var {:scalar} fl_92: int;
  var {:pointer} Tmp_1137: int;
  var {:scalar} floorNo_3: int;
  var {:dopa} {:scalar} type_3: int;
  var {:scalar} fl_93: int;
  var {:scalar} high_1: int;
  var {:scalar} fl_94: int;
  var {:pointer} Tmp_1140: int;
  var {:scalar} Tmp_1141: int;

  anon0:
    call {:si_unique_call 834} type_3 := __HAVOC_malloc(4);
    call {:si_unique_call 835} fl_93 := protectionChangeInit_sdv_static_function_25(type_3);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} fl_93 != 0;
    Tmp_1132 := fl_93;
    goto L1;

  L1:
    return;

  anon13_Then:
    assume {:partition} fl_93 == 0;
    floorNo_3 := 0;
    goto L15;

  L15:
    call {:si_unique_call 836} Tmp_1133, Tmp_1134, Tmp_1135, Tmp_1137, floorNo_3, Tmp_1140, Tmp_1141 := bdkChangeKey_loop_L15(Tmp_1133, Tmp_1134, Tmp_1135, fl_92, Tmp_1137, floorNo_3, type_3, high_1, fl_94, Tmp_1140, Tmp_1141);
    goto L15_last;

  L15_last:
    havoc Tmp_1140;
    assume {:nonnull} Tmp_1140 != 0;
    assume Tmp_1140 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    havoc Tmp_1135;
    assume {:nonnull} Tmp_1135 != 0;
    assume Tmp_1135 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} fl_92 == 0;
    havoc Tmp_1137;
    assume {:nonnull} Tmp_1137 != 0;
    assume Tmp_1137 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    Tmp_1134 := 1;
    goto L28;

  L28:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} high_1 != 0;
    assume {:nonnull} type_3 != 0;
    assume type_3 > 0;
    havoc Tmp_1141;
    goto L32;

  L32:
    havoc Tmp_1133;
    assume {:nonnull} Tmp_1133 != 0;
    assume Tmp_1133 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} fl_94 != 0;
    Tmp_1132 := fl_94;
    goto L1;

  anon15_Then:
    assume {:partition} fl_94 == 0;
    floorNo_3 := floorNo_3 + 1;
    goto anon15_Then_dummy;

  anon15_Then_dummy:
    assume false;
    return;

  anon18_Then:
    assume {:partition} high_1 == 0;
    Tmp_1141 := 1;
    goto L32;

  anon17_Then:
    Tmp_1134 := 0;
    goto L28;

  anon14_Then:
    assume {:partition} fl_92 != 0;
    Tmp_1132 := fl_92;
    goto L1;

  anon16_Then:
    Tmp_1132 := 0;
    goto L1;
}



procedure {:origName "getPhysAddressOfUnit_sdv_static_function_25"} getPhysAddressOfUnit_sdv_static_function_25(actual_startUnit_3: int) returns (Tmp_1142: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "getPhysAddressOfUnit_sdv_static_function_25"} getPhysAddressOfUnit_sdv_static_function_25(actual_startUnit_3: int) returns (Tmp_1142: int)
{
  var {:pointer} Tmp_1143: int;
  var {:pointer} signRead_2: int;
  var {:scalar} sdv_502: int;
  var {:pointer} Tmp_1146: int;
  var {:pointer} flash_35: int;
  var {:scalar} Tmp_1147: int;
  var {:scalar} status_21: int;
  var {:scalar} iBlock_5: int;
  var {:scalar} startUnit_3: int;
  var boogieTmp: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_1329: int;

  anon0:
    call {:si_unique_call 837} signRead_2 := __HAVOC_malloc(4);
    startUnit_3 := actual_startUnit_3;
    assume {:nonnull} signRead_2 != 0;
    assume signRead_2 > 0;
    call {:si_unique_call 838} boogieTmp := __HAVOC_malloc(16);
    havoc flash_35;
    havoc iBlock_5;
    goto L9;

  L9:
    call {:si_unique_call 839} Tmp_1143, sdv_502, Tmp_1146, Tmp_1147, iBlock_5, startUnit_3, vslice_dummy_var_177 := getPhysAddressOfUnit_sdv_static_function_25_loop_L9(Tmp_1143, signRead_2, sdv_502, Tmp_1146, flash_35, Tmp_1147, status_21, iBlock_5, startUnit_3, vslice_dummy_var_177);
    goto L9_last;

  L9_last:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} startUnit_3 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    havoc Tmp_1147;
    havoc Tmp_1143;
    assume {:nonnull} Tmp_1143 != 0;
    assume Tmp_1143 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    havoc Tmp_1146;
    assume {:nonnull} Tmp_1146 != 0;
    assume Tmp_1146 > 0;
    havoc iBlock_5;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L14;

  L14:
    call {:si_unique_call 840} vslice_dummy_var_177 := corral_nondet();
    assume {:nonnull} flash_35 != 0;
    assume flash_35 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_21 == 0;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1329;
    call {:si_unique_call 841} sdv_502 := flmemcmp(signRead_2, vslice_dummy_var_1329, 4);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} sdv_502 != 0;
    goto L29;

  L29:
    iBlock_5 := iBlock_5 + 1;
    goto L29_dummy;

  L29_dummy:
    assume false;
    return;

  anon16_Then:
    assume {:partition} sdv_502 == 0;
    startUnit_3 := startUnit_3 - 1;
    goto L29;

  anon15_Then:
    assume {:partition} status_21 != 0;
    Tmp_1142 := 0;
    goto L1;

  L1:
    return;

  anon18_Then:
    goto L10;

  L10:
    call {:si_unique_call 842} Tmp_1142 := corral_nondet();
    goto L1;

  anon17_Then:
    goto L14;

  anon14_Then:
    goto L10;

  anon13_Then:
    assume {:partition} 0 >= startUnit_3;
    goto L10;
}



procedure {:origName "bdkInsertKey"} bdkInsertKey(actual_key_1: int) returns (Tmp_1148: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkInsertKey"} bdkInsertKey(actual_key_1: int) returns (Tmp_1148: int)
{
  var {:pointer} Tmp_1149: int;
  var {:pointer} Tmp_1150: int;
  var {:scalar} fl_95: int;

  anon0:
    call {:si_unique_call 843} fl_95 := protectionInit_sdv_static_function_25();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} fl_95 != 0;
    Tmp_1148 := fl_95;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} fl_95 == 0;
    havoc Tmp_1149;
    assume {:nonnull} Tmp_1149 != 0;
    assume Tmp_1149 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    havoc Tmp_1150;
    assume {:nonnull} Tmp_1150 != 0;
    assume Tmp_1150 > 0;
    goto L1;

  anon6_Then:
    Tmp_1148 := 106;
    goto L1;
}



procedure {:origName "bdkInit"} bdkInit();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkInit"} bdkInit()
{
  var {:scalar} index_2: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;

  anon0:
    call {:si_unique_call 844} vslice_dummy_var_178 := __HAVOC_malloc(4);
    assume {:IndirectCall} true;
    call {:si_unique_call 845} vslice_dummy_var_179 := flmemset(bdkVols, 0, 204);
    assume {:IndirectCall} true;
    call {:si_unique_call 846} vslice_dummy_var_180 := flmemset(handleTable, 255, 24);
    index_2 := 0;
    goto L12;

  L12:
    call {:si_unique_call 847} index_2 := bdkInit_loop_L12(index_2);
    goto L12_last;

  L12_last:
    assume {:CounterLoop 3} {:Counter "index_2"} true;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} 3 > index_2;
    index_2 := index_2 + 1;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} index_2 >= 3;
    return;
}



procedure {:origName "bdkCall"} bdkCall(actual_functionNo_1: int, actual_ioreq_21: int, actual_flash_36: int) returns (Tmp_1154: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkCall"} bdkCall(actual_functionNo_1: int, actual_ioreq_21: int, actual_flash_36: int) returns (Tmp_1154: int)
{
  var {:scalar} Tmp_1156: int;
  var {:dopa} {:scalar} tmpFlags: int;
  var {:pointer} Tmp_1158: int;
  var {:pointer} bdkParam: int;
  var {:scalar} Tmp_1159: int;
  var {:pointer} Tmp_1160: int;
  var {:scalar} Tmp_1161: int;
  var {:scalar} Tmp_1162: int;
  var {:scalar} nIndex: int;
  var {:scalar} Tmp_1163: int;
  var {:scalar} Tmp_1164: int;
  var {:scalar} Tmp_1165: int;
  var {:scalar} Tmp_1166: int;
  var {:scalar} Tmp_1167: int;
  var {:pointer} Tmp_1168: int;
  var {:scalar} volNo_16: int;
  var {:scalar} Tmp_1169: int;
  var {:scalar} Tmp_1170: int;
  var {:pointer} Tmp_1171: int;
  var {:scalar} fl_96: int;
  var {:scalar} Tmp_1172: int;
  var {:dopa} {:scalar} unitSize_1: int;
  var {:scalar} Tmp_1173: int;
  var {:scalar} Tmp_1174: int;
  var {:scalar} status_22: int;
  var {:scalar} Tmp_1175: int;
  var {:scalar} Tmp_1176: int;
  var {:scalar} Tmp_1177: int;
  var {:scalar} Tmp_1179: int;
  var {:scalar} functionNo_1: int;
  var {:pointer} ioreq_21: int;
  var {:pointer} flash_36: int;
  var boogieTmp: int;
  var vslice_dummy_var_1330: int;
  var vslice_dummy_var_1331: int;
  var vslice_dummy_var_1332: int;
  var vslice_dummy_var_1333: int;
  var vslice_dummy_var_1334: int;
  var vslice_dummy_var_1335: int;
  var vslice_dummy_var_1336: int;
  var vslice_dummy_var_1337: int;
  var vslice_dummy_var_1338: int;
  var vslice_dummy_var_1339: int;
  var vslice_dummy_var_1340: int;
  var vslice_dummy_var_1341: int;
  var vslice_dummy_var_1342: int;
  var vslice_dummy_var_1343: int;

  anon0:
    call {:si_unique_call 848} tmpFlags := __HAVOC_malloc(4);
    call {:si_unique_call 849} unitSize_1 := __HAVOC_malloc(4);
    functionNo_1 := actual_functionNo_1;
    ioreq_21 := actual_ioreq_21;
    flash_36 := actual_flash_36;
    call {:si_unique_call 850} Tmp_1158 := __HAVOC_malloc(32);
    call {:si_unique_call 851} Tmp_1160 := __HAVOC_malloc(12);
    call {:si_unique_call 852} Tmp_1171 := __HAVOC_malloc(12);
    assume {:nonnull} ioreq_21 != 0;
    assume ioreq_21 > 0;
    havoc bdkParam;
    assume {:nonnull} ioreq_21 != 0;
    assume ioreq_21 > 0;
    assume {:nonnull} ioreq_21 != 0;
    assume ioreq_21 > 0;
    call {:si_unique_call 853} vslice_dummy_var_1330 := corral_nondet();
    goto anon57_Then, anon57_Else;

  anon57_Else:
    Tmp_1154 := 20;
    goto L1;

  L1:
    return;

  anon57_Then:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_1154 := 20;
    goto L1;

  anon41_Then:
    havoc Tmp_1161;
    havoc Tmp_1179;
    havoc Tmp_1171;
    assume {:nonnull} Tmp_1171 != 0;
    assume Tmp_1171 > 0;
    havoc volNo_16;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} volNo_16 != 255;
    Tmp_1176 := volNo_16;
    goto L18;

  L18:
    assume {:nonnull} flash_36 != 0;
    assume flash_36 > 0;
    havoc Tmp_1168;
    havoc Tmp_1164;
    havoc Tmp_1159;
    havoc Tmp_1158;
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} Tmp_1168 != 0;
    assume Tmp_1168 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} functionNo_1 != 401;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} functionNo_1 != 402;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} functionNo_1 != 403;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} functionNo_1 != 404;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} functionNo_1 != 405;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} functionNo_1 != 406;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} functionNo_1 != 407;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} functionNo_1 != 501;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} functionNo_1 != 502;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} functionNo_1 != 503;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} functionNo_1 != 504;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} functionNo_1 != 505;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} functionNo_1 == 506;
    call {:si_unique_call 854} Tmp_1154 := bdkRemoveKey();
    goto L1;

  anon45_Then:
    assume {:partition} functionNo_1 != 506;
    Tmp_1154 := 1;
    goto L1;

  anon46_Then:
    assume {:partition} functionNo_1 == 505;
    assume {:nonnull} ioreq_21 != 0;
    assume ioreq_21 > 0;
    havoc vslice_dummy_var_1331;
    call {:si_unique_call 855} Tmp_1154 := bdkInsertKey(vslice_dummy_var_1331);
    goto L1;

  anon47_Then:
    assume {:partition} functionNo_1 == 504;
    call {:si_unique_call 856} fl_96 := bdkGetProtectionType(tmpFlags);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} fl_96 != 0;
    Tmp_1154 := fl_96;
    goto L1;

  anon43_Then:
    assume {:partition} fl_96 == 0;
    assume {:nonnull} ioreq_21 != 0;
    assume ioreq_21 > 0;
    assume {:nonnull} tmpFlags != 0;
    assume tmpFlags > 0;
    Tmp_1154 := 0;
    goto L1;

  anon48_Then:
    assume {:partition} functionNo_1 == 503;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc Tmp_1156;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc vslice_dummy_var_1332;
    call {:si_unique_call 857} status_22 := bdkGetBootPartitionInfo(Tmp_1156, startingBlock_BDKStruct(bdkParam), length_BDKStruct(bdkParam), unitSize_1, vslice_dummy_var_1332);
    assume {:nonnull} ioreq_21 != 0;
    assume ioreq_21 > 0;
    call {:si_unique_call 858} boogieTmp := corral_nondet();
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    nIndex := 0;
    goto L60;

  L60:
    call {:si_unique_call 859} Tmp_1160, nIndex, Tmp_1163, Tmp_1165 := bdkCall_loop_L60(bdkParam, Tmp_1160, nIndex, Tmp_1163, Tmp_1165);
    goto L60_last;

  L60_last:
    assume {:CounterLoop 3} {:Counter "nIndex"} true;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} 3 > nIndex;
    Tmp_1165 := nIndex;
    havoc Tmp_1163;
    havoc Tmp_1160;
    assume {:nonnull} Tmp_1160 != 0;
    assume Tmp_1160 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    goto L63;

  L63:
    nIndex := nIndex + 1;
    goto L63_dummy;

  L63_dummy:
    assume false;
    return;

  anon60_Then:
    goto L63;

  anon44_Then:
    assume {:partition} nIndex >= 3;
    Tmp_1154 := status_22;
    goto L1;

  anon49_Then:
    assume {:partition} functionNo_1 == 502;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc Tmp_1173;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc vslice_dummy_var_1333;
    call {:si_unique_call 860} Tmp_1154 := bdkCopyBootAreaBlock(vslice_dummy_var_1333, Tmp_1173, 0);
    goto L1;

  anon50_Then:
    assume {:partition} functionNo_1 == 501;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc Tmp_1177;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc vslice_dummy_var_1334;
    havoc vslice_dummy_var_1335;
    call {:si_unique_call 861} Tmp_1154 := bdkCopyBootAreaInit(Tmp_1177, vslice_dummy_var_1334, vslice_dummy_var_1335);
    goto L1;

  anon51_Then:
    assume {:partition} functionNo_1 == 407;
    assume {:nonnull} ioreq_21 != 0;
    assume ioreq_21 > 0;
    havoc Tmp_1162;
    call {:si_unique_call 862} Tmp_1154 := bdkSetProtectionType(Tmp_1162);
    goto L1;

  anon52_Then:
    assume {:partition} functionNo_1 == 406;
    assume {:nonnull} ioreq_21 != 0;
    assume ioreq_21 > 0;
    havoc Tmp_1166;
    call {:si_unique_call 863} Tmp_1154 := bdkLockEnable(Tmp_1166);
    goto L1;

  anon53_Then:
    assume {:partition} functionNo_1 == 405;
    assume {:nonnull} ioreq_21 != 0;
    assume ioreq_21 > 0;
    havoc vslice_dummy_var_1336;
    call {:si_unique_call 864} Tmp_1154 := bdkChangeKey(vslice_dummy_var_1336);
    goto L1;

  anon54_Then:
    assume {:partition} functionNo_1 == 404;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc Tmp_1167;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc Tmp_1174;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc vslice_dummy_var_1337;
    call {:si_unique_call 865} Tmp_1154 := bdkEraseBootArea(Tmp_1174, Tmp_1167, vslice_dummy_var_1337);
    goto L1;

  anon55_Then:
    assume {:partition} functionNo_1 == 403;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc Tmp_1175;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc vslice_dummy_var_1338;
    havoc vslice_dummy_var_1339;
    call {:si_unique_call 866} Tmp_1154 := bdkCreateBootArea(Tmp_1175, vslice_dummy_var_1338, vslice_dummy_var_1339);
    goto L1;

  anon56_Then:
    assume {:partition} functionNo_1 == 402;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L97;

  L97:
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc Tmp_1172;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc vslice_dummy_var_1340;
    call {:si_unique_call 867} Tmp_1154 := bdkUpdateBootAreaBlock(vslice_dummy_var_1340, Tmp_1172);
    goto L1;

  anon42_Then:
    goto L97;

  anon59_Then:
    assume {:partition} functionNo_1 == 401;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc Tmp_1170;
    assume {:nonnull} bdkParam != 0;
    assume bdkParam > 0;
    havoc vslice_dummy_var_1341;
    havoc vslice_dummy_var_1342;
    havoc vslice_dummy_var_1343;
    call {:si_unique_call 868} Tmp_1154 := bdkUpdateBootAreaInit(Tmp_1170, vslice_dummy_var_1341, vslice_dummy_var_1342, vslice_dummy_var_1343);
    goto L1;

  anon58_Then:
    assume {:partition} volNo_16 == 255;
    havoc Tmp_1169;
    goto L18;
}



procedure {:origName "bdkCopyBootAreaInit"} bdkCopyBootAreaInit(actual_startUnit_4: int, actual_areaLen: int, actual_signature_3: int) returns (Tmp_1180: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkCopyBootAreaInit"} bdkCopyBootAreaInit(actual_startUnit_4: int, actual_areaLen: int, actual_signature_3: int) returns (Tmp_1180: int)
{
  var {:scalar} sdv_521: int;
  var {:scalar} fl_97: int;
  var {:scalar} realSize: int;
  var {:scalar} startUnit_4: int;
  var {:scalar} areaLen: int;
  var {:pointer} signature_3: int;

  anon0:
    startUnit_4 := actual_startUnit_4;
    areaLen := actual_areaLen;
    signature_3 := actual_signature_3;
    call {:si_unique_call 869} fl_97 := getBootAreaInfo_sdv_static_function_25(startUnit_4, signature_3);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} fl_97 != 0;
    Tmp_1180 := fl_97;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} fl_97 == 0;
    havoc realSize;
    call {:si_unique_call 870} realSize := corral_nondet();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} areaLen > realSize;
    Tmp_1180 := 52;
    goto L1;

  anon6_Then:
    assume {:partition} realSize >= areaLen;
    call {:si_unique_call 871} sdv_521 := getPhysAddressOfUnit_sdv_static_function_25(startUnit_4);
    Tmp_1180 := 0;
    goto L1;
}



procedure {:origName "_sdv_init25"} _sdv_init25();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init25"} _sdv_init25()
{
  var vslice_dummy_var_181: int;

  anon0:
    call {:si_unique_call 872} vslice_dummy_var_181 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "bdkLockEnable"} bdkLockEnable(actual_enabled: int) returns (Tmp_1184: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkLockEnable"} bdkLockEnable(actual_enabled: int) returns (Tmp_1184: int)
{
  var {:scalar} fl_98: int;
  var {:scalar} Tmp_1185: int;
  var {:scalar} Tmp_1188: int;
  var {:scalar} floorNo_4: int;
  var {:pointer} Tmp_1189: int;
  var {:dopa} {:scalar} type_4: int;
  var {:scalar} fl_99: int;
  var {:scalar} high_2: int;
  var {:pointer} Tmp_1191: int;
  var {:scalar} fl_100: int;
  var {:pointer} Tmp_1192: int;
  var {:pointer} Tmp_1193: int;
  var {:scalar} enabled: int;

  anon0:
    call {:si_unique_call 873} type_4 := __HAVOC_malloc(4);
    enabled := actual_enabled;
    call {:si_unique_call 874} fl_99 := protectionChangeInit_sdv_static_function_25(type_4);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} fl_99 != 0;
    Tmp_1184 := fl_99;
    goto L1;

  L1:
    return;

  anon15_Then:
    assume {:partition} fl_99 == 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} enabled == 8;
    assume {:nonnull} type_4 != 0;
    assume type_4 > 0;
    goto L17;

  L17:
    floorNo_4 := 0;
    goto L18;

  L18:
    call {:si_unique_call 875} Tmp_1185, Tmp_1188, floorNo_4, Tmp_1189, Tmp_1191, Tmp_1192, Tmp_1193 := bdkLockEnable_loop_L18(fl_98, Tmp_1185, Tmp_1188, floorNo_4, Tmp_1189, type_4, high_2, Tmp_1191, fl_100, Tmp_1192, Tmp_1193);
    goto L18_last;

  L18_last:
    havoc Tmp_1189;
    assume {:nonnull} Tmp_1189 != 0;
    assume Tmp_1189 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1193;
    assume {:nonnull} Tmp_1193 != 0;
    assume Tmp_1193 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} fl_98 == 0;
    havoc Tmp_1192;
    assume {:nonnull} Tmp_1192 != 0;
    assume Tmp_1192 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    Tmp_1185 := 1;
    goto L31;

  L31:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} high_2 != 0;
    assume {:nonnull} type_4 != 0;
    assume type_4 > 0;
    havoc Tmp_1188;
    goto L35;

  L35:
    havoc Tmp_1191;
    assume {:nonnull} Tmp_1191 != 0;
    assume Tmp_1191 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} fl_100 != 0;
    Tmp_1184 := fl_100;
    goto L1;

  anon18_Then:
    assume {:partition} fl_100 == 0;
    floorNo_4 := floorNo_4 + 1;
    goto anon18_Then_dummy;

  anon18_Then_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} high_2 == 0;
    Tmp_1188 := 1;
    goto L35;

  anon20_Then:
    Tmp_1185 := 0;
    goto L31;

  anon17_Then:
    assume {:partition} fl_98 != 0;
    Tmp_1184 := fl_98;
    goto L1;

  anon19_Then:
    Tmp_1184 := 0;
    goto L1;

  anon16_Then:
    assume {:partition} enabled != 8;
    assume {:nonnull} type_4 != 0;
    assume type_4 > 0;
    goto L17;
}



procedure {:origName "bdkCreateBootArea"} bdkCreateBootArea(actual_noOfBlocks_3: int, actual_oldSign: int, actual_newSign: int) returns (Tmp_1194: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkCreateBootArea"} bdkCreateBootArea(actual_noOfBlocks_3: int, actual_oldSign: int, actual_newSign: int) returns (Tmp_1194: int)
{
  var {:pointer} Tmp_1195: int;
  var {:pointer} Tmp_1196: int;
  var {:scalar} fl_101: int;
  var {:scalar} Tmp_1198: int;
  var {:pointer} Tmp_1199: int;
  var {:pointer} signRead_3: int;
  var {:pointer} Tmp_1200: int;
  var {:pointer} Tmp_1201: int;
  var {:pointer} Tmp_1202: int;
  var {:scalar} index_3: int;
  var {:scalar} sdv_530: int;
  var {:pointer} flash_37: int;
  var {:scalar} fl_102: int;
  var {:scalar} fl_103: int;
  var {:scalar} status_23: int;
  var {:scalar} Tmp_1204: int;
  var {:pointer} Tmp_1205: int;
  var {:scalar} iBlock_6: int;
  var {:pointer} Tmp_1207: int;
  var {:scalar} noOfBlocks_3: int;
  var {:pointer} oldSign: int;
  var {:pointer} newSign: int;
  var boogieTmp: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_1344: int;

  anon0:
    call {:si_unique_call 876} signRead_3 := __HAVOC_malloc(4);
    noOfBlocks_3 := actual_noOfBlocks_3;
    oldSign := actual_oldSign;
    newSign := actual_newSign;
    assume {:nonnull} signRead_3 != 0;
    assume signRead_3 > 0;
    call {:si_unique_call 877} boogieTmp := __HAVOC_malloc(16);
    call {:si_unique_call 878} Tmp_1205 := __HAVOC_malloc(32);
    call {:si_unique_call 879} Tmp_1207 := __HAVOC_malloc(20);
    havoc flash_37;
    Tmp_1195 := newSign;
    assume {:nonnull} Tmp_1195 != 0;
    assume Tmp_1195 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 880} Tmp_1204 := corral_nondet();
    call {:si_unique_call 881} fl_102 := bdkUpdateBootAreaInit(0, Tmp_1204, 0, oldSign);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} fl_102 != 0;
    Tmp_1194 := fl_102;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} fl_102 == 0;
    Tmp_1201 := newSign;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1344;
    call {:si_unique_call 882} vslice_dummy_var_184 := flmemcpy(vslice_dummy_var_1344, Tmp_1201, 4);
    havoc Tmp_1205;
    Tmp_1196 := Tmp_1205 + 4 * 4;
    Tmp_1207 := strConst__li2bpl19;
    assume {:IndirectCall} true;
    call {:si_unique_call 883} vslice_dummy_var_185 := flmemcpy(Tmp_1196, Tmp_1207, 4);
    call {:si_unique_call 884} iBlock_6 := corral_nondet();
    index_3 := 0;
    goto L29;

  L29:
    call {:si_unique_call 885} Tmp_1198, Tmp_1199, Tmp_1200, Tmp_1202, index_3, sdv_530, iBlock_6, vslice_dummy_var_182, vslice_dummy_var_183 := bdkCreateBootArea_loop_L29(fl_101, Tmp_1198, Tmp_1199, signRead_3, Tmp_1200, Tmp_1202, index_3, sdv_530, flash_37, fl_103, status_23, iBlock_6, noOfBlocks_3, oldSign, vslice_dummy_var_182, vslice_dummy_var_183);
    goto L29_last;

  L29_last:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} noOfBlocks_3 > index_3;
    goto L31;

  L31:
    call {:si_unique_call 886} Tmp_1198, Tmp_1199, Tmp_1200, Tmp_1202, sdv_530, iBlock_6, vslice_dummy_var_182 := bdkCreateBootArea_loop_L31(Tmp_1198, Tmp_1199, signRead_3, Tmp_1200, Tmp_1202, sdv_530, flash_37, status_23, iBlock_6, oldSign, vslice_dummy_var_182);
    goto L31_last;

  L31_last:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_1198;
    havoc Tmp_1199;
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_1202;
    assume {:nonnull} Tmp_1202 != 0;
    assume Tmp_1202 > 0;
    havoc iBlock_6;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L35;

  L35:
    call {:si_unique_call 887} vslice_dummy_var_182 := corral_nondet();
    assume {:nonnull} flash_37 != 0;
    assume flash_37 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_23 != 0;
    Tmp_1194 := status_23;
    goto L1;

  anon27_Then:
    assume {:partition} status_23 == 0;
    Tmp_1200 := oldSign;
    assume {:IndirectCall} true;
    call {:si_unique_call 888} sdv_530 := flmemcmp(Tmp_1200, signRead_3, 4);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_530 != 0;
    iBlock_6 := iBlock_6 + 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    assume false;
    return;

  anon28_Then:
    assume {:partition} sdv_530 == 0;
    goto L32;

  L32:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} flash_37 != 0;
    assume flash_37 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} fl_101 == 0;
    call {:si_unique_call 889} vslice_dummy_var_183 := corral_nondet();
    assume {:nonnull} flash_37 != 0;
    assume flash_37 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} fl_103 != 0;
    Tmp_1194 := fl_103;
    goto L1;

  anon30_Then:
    assume {:partition} fl_103 == 0;
    index_3 := index_3 + 1;
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} fl_101 != 0;
    Tmp_1194 := fl_101;
    goto L1;

  anon26_Then:
    Tmp_1194 := 52;
    goto L1;

  anon33_Then:
    goto L32;

  anon32_Then:
    goto L35;

  anon25_Then:
    goto L32;

  anon24_Then:
    assume {:partition} index_3 >= noOfBlocks_3;
    Tmp_1194 := 0;
    goto L1;

  anon31_Then:
    Tmp_1194 := 51;
    goto L1;
}



procedure {:origName "bdkUpdateBootAreaInit"} bdkUpdateBootAreaInit(actual_startUnit_5: int, actual_areaLen_1: int, actual_updateFlag: int, actual_signature_4: int) returns (Tmp_1208: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkUpdateBootAreaInit"} bdkUpdateBootAreaInit(actual_startUnit_5: int, actual_areaLen_1: int, actual_updateFlag: int, actual_signature_4: int) returns (Tmp_1208: int)
{
  var {:scalar} sdv_533: int;
  var {:scalar} fl_104: int;
  var {:scalar} startUnit_5: int;
  var {:scalar} areaLen_1: int;
  var {:scalar} updateFlag: int;
  var {:pointer} signature_4: int;
  var vslice_dummy_var_186: int;

  anon0:
    startUnit_5 := actual_startUnit_5;
    areaLen_1 := actual_areaLen_1;
    updateFlag := actual_updateFlag;
    signature_4 := actual_signature_4;
    call {:si_unique_call 890} fl_104 := getBootAreaInfo_sdv_static_function_25(startUnit_5, signature_4);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} fl_104 != 0;
    Tmp_1208 := fl_104;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} fl_104 == 0;
    call {:si_unique_call 891} vslice_dummy_var_186 := corral_nondet();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1208 := 52;
    goto L1;

  anon6_Then:
    call {:si_unique_call 892} sdv_533 := getPhysAddressOfUnit_sdv_static_function_25(startUnit_5);
    Tmp_1208 := 0;
    goto L1;
}



procedure {:origName "bdkGetProtectionType"} bdkGetProtectionType(actual_protectionType: int) returns (Tmp_1210: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkGetProtectionType"} bdkGetProtectionType(actual_protectionType: int) returns (Tmp_1210: int)
{
  var {:pointer} Tmp_1211: int;
  var {:pointer} Tmp_1212: int;
  var {:scalar} fl_105: int;
  var {:scalar} status_24: int;
  var {:pointer} protectionType: int;

  anon0:
    protectionType := actual_protectionType;
    call {:si_unique_call 893} status_24 := protectionInit_sdv_static_function_25();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_24 != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_24 == 109;
    assume {:nonnull} protectionType != 0;
    assume protectionType > 0;
    goto L9;

  L9:
    Tmp_1210 := status_24;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} status_24 != 109;
    goto L9;

  anon9_Then:
    assume {:partition} status_24 == 0;
    havoc Tmp_1212;
    assume {:nonnull} Tmp_1212 != 0;
    assume Tmp_1212 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    havoc Tmp_1211;
    assume {:nonnull} Tmp_1211 != 0;
    assume Tmp_1211 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} fl_105 != 0;
    Tmp_1210 := fl_105;
    goto L1;

  anon10_Then:
    assume {:partition} fl_105 == 0;
    assume {:nonnull} protectionType != 0;
    assume protectionType > 0;
    assume {:nonnull} protectionType != 0;
    assume protectionType > 0;
    Tmp_1210 := status_24;
    goto L1;

  anon12_Then:
    Tmp_1210 := 106;
    goto L1;
}



procedure {:origName "bdkRemoveKey"} bdkRemoveKey() returns (Tmp_1214: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "bdkRemoveKey"} bdkRemoveKey() returns (Tmp_1214: int)
{
  var {:pointer} Tmp_1215: int;
  var {:pointer} Tmp_1216: int;
  var {:scalar} fl_106: int;
  var {:pointer} Tmp_1217: int;

  anon0:
    call {:si_unique_call 894} fl_106 := protectionInit_sdv_static_function_25();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} fl_106 != 0;
    Tmp_1214 := fl_106;
    goto L1;

  L1:
    return;

  anon7_Then:
    assume {:partition} fl_106 == 0;
    havoc Tmp_1217;
    assume {:nonnull} Tmp_1217 != 0;
    assume Tmp_1217 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L12;

  L12:
    Tmp_1214 := 106;
    goto L1;

  anon8_Then:
    havoc Tmp_1215;
    assume {:nonnull} Tmp_1215 != 0;
    assume Tmp_1215 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    havoc Tmp_1216;
    assume {:nonnull} Tmp_1216 != 0;
    assume Tmp_1216 > 0;
    goto L1;

  anon9_Then:
    goto L12;
}



procedure {:origName "getAndClearCardChangeIndicator_socketnt"} getAndClearCardChangeIndicator_socketnt(actual_pVol_84: int) returns (Tmp_1219: int);
  free ensures {:va_keep} Tmp_1219 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "getAndClearCardChangeIndicator_socketnt"} getAndClearCardChangeIndicator_socketnt(actual_pVol_84: int) returns (Tmp_1219: int)
{

  anon0:
    Tmp_1219 := 0;
    return;
}



procedure {:origName "updatePcmciaSocketParams"} updatePcmciaSocketParams(actual_fdoExtension_1: int) returns (Tmp_1221: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "updatePcmciaSocketParams"} updatePcmciaSocketParams(actual_fdoExtension_1: int) returns (Tmp_1221: int)
{
  var {:scalar} Tmp_1222: int;
  var {:pointer} Tmp_1223: int;
  var {:pointer} irpSp: int;
  var {:scalar} Tmp_1224: int;
  var {:scalar} Tmp_1226: int;
  var {:scalar} device_1: int;
  var {:scalar} Tmp_1227: int;
  var {:pointer} irp: int;
  var {:scalar} Tmp_1228: int;
  var {:scalar} status_25: int;
  var {:scalar} event: int;
  var {:scalar} Tmp_1229: int;
  var {:pointer} fdoExtension_1: int;
  var vslice_dummy_var_1345: int;
  var vslice_dummy_var_1346: int;

  anon0:
    call {:si_unique_call 895} event := __HAVOC_malloc(124);
    fdoExtension_1 := actual_fdoExtension_1;
    irp := 0;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc Tmp_1223;
    assume {:nonnull} Tmp_1223 != 0;
    assume Tmp_1223 > 0;
    havoc vslice_dummy_var_1345;
    call {:si_unique_call 896} irp := IoAllocateIrp(vslice_dummy_var_1345, 0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} irp != 0;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc device_1;
    call {:si_unique_call 897} irpSp := sdv_IoGetNextIrpStackLocation(irp);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpSp)] := 8;
    assume {:nonnull} irp != 0;
    assume irp > 0;
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    Tmp_1224 := device_1;
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    call {:si_unique_call 898} KeInitializeEvent(event, 0, 0);
    call {:si_unique_call 899} sdv_IoSetCompletionRoutine(irp, li2bplFunctionConstant768, event, 1, 1, 1);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc vslice_dummy_var_1346;
    call {:si_unique_call 900} status_25 := sdv_IoCallDriver(vslice_dummy_var_1346, irp);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} status_25 == 259;
    call {:si_unique_call 901} status_25 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L39;

  L39:
    assume {:nonnull} irp != 0;
    assume irp > 0;
    havoc status_25;
    call {:si_unique_call 902} IoFreeIrp(0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_25 >= 0;
    Tmp_1226 := device_1;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    Tmp_1222 := device_1;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    Tmp_1227 := device_1;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    Tmp_1229 := device_1;
    Tmp_1228 := device_1;
    goto L48;

  L48:
    Tmp_1221 := status_25;
    return;

  anon9_Then:
    assume {:partition} 0 > status_25;
    goto L48;

  anon8_Then:
    assume {:partition} status_25 != 259;
    goto L39;

  anon7_Then:
    assume {:partition} irp == 0;
    status_25 := -1073741670;
    goto L48;
}



procedure {:origName "freeSocket_socketnt"} freeSocket_socketnt(actual_pVol_85: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "freeSocket_socketnt"} freeSocket_socketnt(actual_pVol_85: int)
{
  var vslice_dummy_var_187: int;

  anon0:
    call {:si_unique_call 903} vslice_dummy_var_187 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "flRegisterNT5PCIC"} flRegisterNT5PCIC() returns (Tmp_1232: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1232 == 0 || Tmp_1232 == 60;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterNT5PCIC"} flRegisterNT5PCIC() returns (Tmp_1232: int)
{
  var {:scalar} serialNo: int;
  var {:pointer} pVol_86: int;
  var {:scalar} Tmp_1234: int;
  var {:pointer} Tmp_1235: int;

  anon0:
    call {:si_unique_call 904} Tmp_1235 := __HAVOC_malloc(216);
    serialNo := 0;
    goto L5;

  L5:
    call {:si_unique_call 905} pVol_86, Tmp_1234, Tmp_1235 := flRegisterNT5PCIC_loop_L5(serialNo, pVol_86, Tmp_1234, Tmp_1235);
    goto L5_last;

  L5_last:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    havoc Tmp_1234;
    call {:si_unique_call 906} pVol_86 := flSocketOf(Tmp_1234);
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    assume {:nonnull} pVol_86 != 0;
    assume pVol_86 > 0;
    Tmp_1235 := strConst__li2bpl21;
    call {:si_unique_call 907} PRINTF(Tmp_1235);
    goto anon5_Else_dummy;

  anon5_Else_dummy:
    assume false;
    return;

  anon5_Then:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1232 := 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1232 := 60;
    goto L1;
}



procedure {:origName "VccOff_socketnt"} VccOff_socketnt(actual_pVol_87: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "VccOff_socketnt"} VccOff_socketnt(actual_pVol_87: int)
{
  var vslice_dummy_var_188: int;

  anon0:
    call {:si_unique_call 908} vslice_dummy_var_188 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "VccOn_socketnt"} VccOn_socketnt(actual_pVol_88: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "VccOn_socketnt"} VccOn_socketnt(actual_pVol_88: int)
{
  var vslice_dummy_var_189: int;

  anon0:
    call {:si_unique_call 909} vslice_dummy_var_189 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "initSocket_socketnt"} initSocket_socketnt(actual_pVol_89: int) returns (Tmp_1240: int);
  free ensures {:va_keep} Tmp_1240 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "initSocket_socketnt"} initSocket_socketnt(actual_pVol_89: int) returns (Tmp_1240: int)
{

  anon0:
    Tmp_1240 := 0;
    return;
}



procedure {:origName "setMappingContext_socketnt"} setMappingContext_socketnt(actual_pVol_90: int, actual_page_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "setMappingContext_socketnt"} setMappingContext_socketnt(actual_pVol_90: int, actual_page_1: int)
{
  var {:scalar} Tmp_1242: int;
  var {:scalar} Tmp_1243: int;
  var {:scalar} Tmp_1246: int;
  var {:scalar} Tmp_1249: int;
  var {:scalar} Tmp_1250: int;
  var {:scalar} Tmp_1252: int;
  var {:scalar} Tmp_1254: int;
  var {:pointer} Tmp_1255: int;
  var {:scalar} sdv_544: int;
  var {:scalar} Tmp_1256: int;
  var {:scalar} Tmp_1259: int;
  var {:scalar} Tmp_1260: int;
  var {:scalar} Tmp_1262: int;
  var {:pointer} pVol_90: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;

  anon0:
    call {:si_unique_call 910} vslice_dummy_var_190 := __HAVOC_malloc(4);
    pVol_90 := actual_pVol_90;
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    havoc Tmp_1250;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    havoc Tmp_1249;
    havoc Tmp_1255;
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    goto L1;

  L1:
    return;

  anon46_Then:
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    havoc Tmp_1242;
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    Tmp_1260 := 1;
    goto L14;

  L14:
    call {:si_unique_call 911} vslice_dummy_var_191 := corral_nondet();
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    havoc Tmp_1259;
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    havoc Tmp_1243;
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    havoc Tmp_1246;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume Tmp_1246 != 7;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume Tmp_1246 != 6;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume Tmp_1246 != 5;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume Tmp_1246 != 4;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume Tmp_1246 != 3;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume Tmp_1246 != 2;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume Tmp_1246 != 1;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume false;
    return;

  anon63_Then:
    assume Tmp_1246 == 0;
    goto L21;

  L21:
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Tmp_1252 := 1;
    goto L24;

  L24:
    call {:si_unique_call 912} vslice_dummy_var_192 := corral_nondet();
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    havoc Tmp_1254;
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    havoc Tmp_1256;
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    havoc Tmp_1262;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume Tmp_1262 != 7;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume Tmp_1262 != 6;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume Tmp_1262 != 5;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume Tmp_1262 != 4;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume Tmp_1262 != 3;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume Tmp_1262 != 2;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume Tmp_1262 != 1;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume false;
    return;

  anon56_Then:
    assume Tmp_1262 == 0;
    goto L31;

  L31:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_544 == 0;
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    goto L1;

  anon44_Then:
    assume {:partition} sdv_544 != 0;
    goto L1;

  anon55_Then:
    assume Tmp_1262 == 1;
    goto L31;

  anon54_Then:
    assume Tmp_1262 == 2;
    goto L31;

  anon53_Then:
    assume Tmp_1262 == 3;
    goto L31;

  anon52_Then:
    assume Tmp_1262 == 4;
    goto L31;

  anon51_Then:
    assume Tmp_1262 == 5;
    goto L31;

  anon50_Then:
    assume Tmp_1262 == 6;
    goto L31;

  anon49_Then:
    assume Tmp_1262 == 7;
    goto L31;

  anon43_Then:
    Tmp_1252 := 0;
    goto L24;

  anon62_Then:
    assume Tmp_1246 == 1;
    goto L21;

  anon61_Then:
    assume Tmp_1246 == 2;
    goto L21;

  anon60_Then:
    assume Tmp_1246 == 3;
    goto L21;

  anon59_Then:
    assume Tmp_1246 == 4;
    goto L21;

  anon58_Then:
    assume Tmp_1246 == 5;
    goto L21;

  anon57_Then:
    assume Tmp_1246 == 6;
    goto L21;

  anon48_Then:
    assume Tmp_1246 == 7;
    goto L21;

  anon47_Then:
    Tmp_1260 := 0;
    goto L14;

  anon45_Then:
    assume {:nonnull} pVol_90 != 0;
    assume pVol_90 > 0;
    goto L1;
}



procedure {:origName "setWindow_socketnt"} setWindow_socketnt(actual_pVol_91: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "setWindow_socketnt"} setWindow_socketnt(actual_pVol_91: int)
{
  var {:scalar} Tmp_1265: int;
  var {:scalar} Tmp_1267: int;
  var {:pointer} pVol_91: int;
  var vslice_dummy_var_193: int;

  anon0:
    call {:si_unique_call 913} vslice_dummy_var_193 := __HAVOC_malloc(4);
    pVol_91 := actual_pVol_91;
    assume {:nonnull} pVol_91 != 0;
    assume pVol_91 > 0;
    havoc Tmp_1265;
    assume {:nonnull} pVol_91 != 0;
    assume pVol_91 > 0;
    assume {:nonnull} pVol_91 != 0;
    assume pVol_91 > 0;
    havoc Tmp_1267;
    assume {:nonnull} pVol_91 != 0;
    assume pVol_91 > 0;
    return;
}



procedure {:origName "_sdv_init23"} _sdv_init23();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init23"} _sdv_init23()
{
  var vslice_dummy_var_194: int;

  anon0:
    call {:si_unique_call 914} vslice_dummy_var_194 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "VppOff_socketnt"} VppOff_socketnt(actual_pVol_92: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "VppOff_socketnt"} VppOff_socketnt(actual_pVol_92: int)
{
  var {:scalar} Tmp_1270: int;
  var {:scalar} Tmp_1273: int;
  var {:scalar} Tmp_1274: int;
  var {:scalar} Tmp_1275: int;
  var {:scalar} Tmp_1277: int;
  var {:pointer} Tmp_1278: int;
  var {:pointer} pVol_92: int;
  var vslice_dummy_var_195: int;

  anon0:
    call {:si_unique_call 915} vslice_dummy_var_195 := __HAVOC_malloc(4);
    pVol_92 := actual_pVol_92;
    assume {:nonnull} pVol_92 != 0;
    assume pVol_92 > 0;
    havoc Tmp_1270;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} pVol_92 != 0;
    assume pVol_92 > 0;
    havoc Tmp_1275;
    havoc Tmp_1278;
    assume {:nonnull} Tmp_1278 != 0;
    assume Tmp_1278 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} pVol_92 != 0;
    assume pVol_92 > 0;
    havoc Tmp_1277;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} pVol_92 != 0;
    assume pVol_92 > 0;
    havoc Tmp_1273;
    assume {:nonnull} pVol_92 != 0;
    assume pVol_92 > 0;
    havoc Tmp_1274;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume Tmp_1274 != 7;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume Tmp_1274 != 6;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume Tmp_1274 != 5;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume Tmp_1274 != 4;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume Tmp_1274 != 3;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume Tmp_1274 != 2;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume Tmp_1274 != 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume false;
    return;

  anon33_Then:
    assume Tmp_1274 == 0;
    goto L1;

  L1:
    return;

  anon32_Then:
    assume Tmp_1274 == 1;
    goto L1;

  anon31_Then:
    assume Tmp_1274 == 2;
    goto L1;

  anon30_Then:
    assume Tmp_1274 == 3;
    goto L1;

  anon29_Then:
    assume Tmp_1274 == 4;
    goto L1;

  anon28_Then:
    assume Tmp_1274 == 5;
    goto L1;

  anon27_Then:
    assume Tmp_1274 == 6;
    goto L1;

  anon26_Then:
    assume Tmp_1274 == 7;
    goto L1;

  anon25_Then:
    goto L1;

  anon24_Then:
    goto L1;

  anon23_Then:
    goto L1;
}



procedure {:origName "queryInterfaceCompletionRoutine"} queryInterfaceCompletionRoutine(actual_DeviceObject: int, actual_Irp: int, actual_Context: int) returns (Tmp_1279: int);
  free ensures {:va_keep} Tmp_1279 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "queryInterfaceCompletionRoutine"} queryInterfaceCompletionRoutine(actual_DeviceObject: int, actual_Irp: int, actual_Context: int) returns (Tmp_1279: int)
{
  var {:pointer} event_1: int;
  var {:pointer} Context: int;
  var vslice_dummy_var_196: int;

  anon0:
    Context := actual_Context;
    event_1 := Context;
    call {:si_unique_call 916} vslice_dummy_var_196 := KeSetEvent(event_1, 1, 0);
    Tmp_1279 := -1073741802;
    return;
}



procedure {:origName "cardDetected_socketnt"} cardDetected_socketnt(actual_pVol_93: int) returns (Tmp_1281: int);
  free ensures {:va_keep} Tmp_1281 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "cardDetected_socketnt"} cardDetected_socketnt(actual_pVol_93: int) returns (Tmp_1281: int)
{

  anon0:
    Tmp_1281 := 1;
    return;
}



procedure {:origName "RtlInitString"} {:osmodel} RtlInitString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitString"} {:osmodel} RtlInitString(actual_DestinationString: int, actual_SourceString: int)
{
  var vslice_dummy_var_197: int;

  anon0:
    call {:si_unique_call 917} vslice_dummy_var_197 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_198: int;

  anon0:
    call {:si_unique_call 918} vslice_dummy_var_198 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_1287: int);
  free ensures {:va_keep} Tmp_1287 == actual_Address;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_1287: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    record := Address;
    Tmp_1287 := record;
    return;
}



procedure {:origName "IoStartNextPacket"} {:osmodel} IoStartNextPacket(actual_DeviceObject_1: int, actual_Cancelable: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoStartNextPacket"} {:osmodel} IoStartNextPacket(actual_DeviceObject_1: int, actual_Cancelable: int)
{
  var vslice_dummy_var_199: int;

  anon0:
    call {:si_unique_call 919} vslice_dummy_var_199 := __HAVOC_malloc(4);
    call {:si_unique_call 920} SLIC_IoStartNextPacket_entry(strConst__li2bpl22);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p_1: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} LockDepth == old(LockDepth) + 1;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p_1: int)
{
  var {:pointer} p_1: int;
  var vslice_dummy_var_200: int;

  anon0:
    call {:si_unique_call 921} vslice_dummy_var_200 := __HAVOC_malloc(4);
    p_1 := actual_p_1;
    assume {:nonnull} p_1 != 0;
    assume p_1 > 0;
    call {:si_unique_call 922} SLIC_sdv_KeAcquireSpinLock_exit(0);
    return;
}



procedure {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_1293: int);
  free ensures {:va_keep} Tmp_1293 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_1293: int)
{

  anon0:
    Tmp_1293 := 1;
    return;
}



procedure {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end()
{
  var vslice_dummy_var_201: int;

  anon0:
    call {:si_unique_call 923} vslice_dummy_var_201 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_1297: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_1297: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_1297 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_1297 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_1297 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_202: int;

  anon0:
    call {:si_unique_call 924} vslice_dummy_var_202 := __HAVOC_malloc(4);
    Dpc := actual_Dpc;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc != 0;
    assume Dpc > 0;
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_2: int) returns (Tmp_1301: int);
  free ensures {:va_keep} Tmp_1301 == -1073741824 || Tmp_1301 == -1073741771 || Tmp_1301 == -1073741670 || Tmp_1301 == -1073741823 || Tmp_1301 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_2: int) returns (Tmp_1301: int)
{
  var {:pointer} DeviceObject_2: int;

  anon0:
    DeviceObject_2 := actual_DeviceObject_2;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Tmp_1301 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Tmp_1301 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Tmp_1301 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Tmp_1301 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_inside_init_entrypoint != 0;
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    goto L21;

  L21:
    Tmp_1301 := 0;
    goto L1;

  anon11_Then:
    assume {:partition} sdv_inside_init_entrypoint == 0;
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    goto L21;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_203: int;

  anon0:
    call {:si_unique_call 925} vslice_dummy_var_203 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int)
{
  var vslice_dummy_var_204: int;

  anon0:
    call {:si_unique_call 926} vslice_dummy_var_204 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int)
{
  var vslice_dummy_var_205: int;

  anon0:
    call {:si_unique_call 927} vslice_dummy_var_205 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_1309: int);
  free ensures {:va_keep} Tmp_1309 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_1309: int)
{

  anon0:
    Tmp_1309 := 1;
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int)
{
  var {:pointer} r: int;
  var {:pointer} pirp_2: int;
  var vslice_dummy_var_206: int;

  anon0:
    call {:si_unique_call 928} vslice_dummy_var_206 := __HAVOC_malloc(4);
    pirp_2 := actual_pirp_2;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    r := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_2)))];
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 1;
    goto L1;

  anon13_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 3;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 2;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int)
{
  var vslice_dummy_var_207: int;

  anon0:
    call {:si_unique_call 929} vslice_dummy_var_207 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_1315: int);
  free ensures {:va_keep} Tmp_1315 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_1315: int)
{

  anon0:
    Tmp_1315 := 0;
    return;
}



procedure {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_1: int, actual_Environment: int) returns (Tmp_1317: int);
  free ensures {:va_keep} Tmp_1317 == 0 || Tmp_1317 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_1: int, actual_Environment: int) returns (Tmp_1317: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1317 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1317 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RunISRRoutines"} {:osmodel} sdv_RunISRRoutines(actual_ki: int, actual_pv1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunISRRoutines"} {:osmodel} sdv_RunISRRoutines(actual_ki: int, actual_pv1: int)
{
  var vslice_dummy_var_208: int;

  anon0:
    call {:si_unique_call 930} vslice_dummy_var_208 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString_1: int, actual_SourceString_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString_1: int, actual_SourceString_1: int)
{
  var vslice_dummy_var_209: int;

  anon0:
    call {:si_unique_call 931} vslice_dummy_var_209 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int)
{
  var {:pointer} pirp_4: int;
  var vslice_dummy_var_210: int;

  anon0:
    call {:si_unique_call 932} vslice_dummy_var_210 := __HAVOC_malloc(4);
    pirp_4 := actual_pirp_4;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;
}



procedure {:origName "_sdv_init28"} {:osmodel} _sdv_init28();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init28"} {:osmodel} _sdv_init28()
{
  var vslice_dummy_var_211: int;

  anon0:
    call {:si_unique_call 933} vslice_dummy_var_211 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_inside_init_entrypoint == 0;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_start_irp_already_issued == 0;
    assume sdv_Io_Removelock_release_wait_returned == 0;
    assume sdv_isr_routine == li2bplFunctionConstant1042;
    assume sdv_ke_dpc == li2bplFunctionConstant1044;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant1047;
    assume sdv_p_devobj_top == sdv_devobj_top;
    return;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, initDone, LockDepth, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} sdv_553: int;
  var {:scalar} sdv_570: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;

  anon0:
    call {:si_unique_call 934} vslice_dummy_var_212 := __HAVOC_malloc(4);
    call {:si_unique_call 935} sdv_570 := sdv_CheckDispatchRoutines();
    call {:si_unique_call 936} sdv_553 := sdv_CheckStartIoRoutines();
    call {:si_unique_call 937} vslice_dummy_var_213 := sdv_CheckDpcRoutines();
    call {:si_unique_call 938} vslice_dummy_var_214 := sdv_CheckIsrRoutines();
    call {:si_unique_call 939} vslice_dummy_var_215 := sdv_CheckCancelRoutines();
    call {:si_unique_call 940} vslice_dummy_var_216 := sdv_CheckIoDpcRoutines();
    call {:si_unique_call 941} vslice_dummy_var_217 := sdv_IoCompletionRoutines();
    call {:si_unique_call 942} vslice_dummy_var_218 := sdv_CheckWorkerRoutines();
    call {:si_unique_call 943} vslice_dummy_var_219 := sdv_CheckAddDevice();
    call {:si_unique_call 944} vslice_dummy_var_220 := sdv_CheckIrpMjPnp();
    call {:si_unique_call 945} vslice_dummy_var_221 := sdv_CheckIrpMjPower();
    call {:si_unique_call 946} vslice_dummy_var_222 := sdv_CheckDriverUnload();
    goto anon177_Then, anon177_Else;

  anon177_Else:
    goto anon261_Then, anon261_Else;

  anon261_Else:
    goto anon260_Then, anon260_Else;

  anon260_Else:
    goto anon259_Then, anon259_Else;

  anon259_Else:
    goto anon258_Then, anon258_Else;

  anon258_Else:
    goto anon257_Then, anon257_Else;

  anon257_Else:
    goto anon256_Then, anon256_Else;

  anon256_Else:
    goto anon255_Then, anon255_Else;

  anon255_Else:
    goto anon254_Then, anon254_Else;

  anon254_Else:
    goto anon253_Then, anon253_Else;

  anon253_Else:
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto anon251_Then, anon251_Else;

  anon251_Else:
    goto anon250_Then, anon250_Else;

  anon250_Else:
    goto anon249_Then, anon249_Else;

  anon249_Else:
    goto anon248_Then, anon248_Else;

  anon248_Else:
    goto anon247_Then, anon247_Else;

  anon247_Else:
    goto anon246_Then, anon246_Else;

  anon246_Else:
    goto anon245_Then, anon245_Else;

  anon245_Else:
    goto anon244_Then, anon244_Else;

  anon244_Else:
    goto anon243_Then, anon243_Else;

  anon243_Else:
    goto anon242_Then, anon242_Else;

  anon242_Else:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    goto anon240_Then, anon240_Else;

  anon240_Else:
    goto anon239_Then, anon239_Else;

  anon239_Else:
    goto anon238_Then, anon238_Else;

  anon238_Else:
    goto anon237_Then, anon237_Else;

  anon237_Else:
    goto anon236_Then, anon236_Else;

  anon236_Else:
    goto anon235_Then, anon235_Else;

  anon235_Else:
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    goto anon230_Then, anon230_Else;

  anon230_Else:
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto anon226_Then, anon226_Else;

  anon226_Else:
    goto anon225_Then, anon225_Else;

  anon225_Else:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    goto anon222_Then, anon222_Else;

  anon222_Else:
    goto anon221_Then, anon221_Else;

  anon221_Else:
    goto anon220_Then, anon220_Else;

  anon220_Else:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto anon217_Then, anon217_Else;

  anon217_Else:
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto anon215_Then, anon215_Else;

  anon215_Else:
    goto anon214_Then, anon214_Else;

  anon214_Else:
    goto anon213_Then, anon213_Else;

  anon213_Else:
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto anon209_Then, anon209_Else;

  anon209_Else:
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto anon207_Then, anon207_Else;

  anon207_Else:
    goto anon206_Then, anon206_Else;

  anon206_Else:
    goto anon205_Then, anon205_Else;

  anon205_Else:
    goto anon204_Then, anon204_Else;

  anon204_Else:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon198_Then, anon198_Else;

  anon198_Else:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    goto anon192_Then, anon192_Else;

  anon192_Else:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto anon181_Then, anon181_Else;

  anon181_Else:
    goto anon180_Then, anon180_Else;

  anon180_Else:
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon180_Then:
    goto L1;

  anon181_Then:
    goto L1;

  anon182_Then:
    goto L1;

  anon183_Then:
    goto L1;

  anon184_Then:
    goto L1;

  anon185_Then:
    goto L1;

  anon186_Then:
    goto L1;

  anon187_Then:
    goto L1;

  anon188_Then:
    goto L1;

  anon189_Then:
    goto L1;

  anon190_Then:
    goto L1;

  anon191_Then:
    goto L1;

  anon192_Then:
    goto L1;

  anon193_Then:
    goto L1;

  anon194_Then:
    goto L1;

  anon195_Then:
    goto L1;

  anon196_Then:
    goto L1;

  anon197_Then:
    goto L1;

  anon198_Then:
    goto L1;

  anon199_Then:
    goto L1;

  anon200_Then:
    goto L1;

  anon201_Then:
    goto L1;

  anon202_Then:
    goto L1;

  anon203_Then:
    goto L1;

  anon204_Then:
    goto L1;

  anon205_Then:
    goto L1;

  anon206_Then:
    goto L1;

  anon207_Then:
    goto L1;

  anon208_Then:
    goto L1;

  anon209_Then:
    goto L1;

  anon210_Then:
    goto L1;

  anon211_Then:
    goto L1;

  anon212_Then:
    goto L1;

  anon213_Then:
    goto L1;

  anon214_Then:
    goto L1;

  anon215_Then:
    goto L1;

  anon216_Then:
    goto L1;

  anon217_Then:
    goto L1;

  anon218_Then:
    goto L1;

  anon219_Then:
    goto L1;

  anon220_Then:
    goto L1;

  anon221_Then:
    goto L1;

  anon222_Then:
    goto L1;

  anon223_Then:
    call {:si_unique_call 947} vslice_dummy_var_227 := queryInterfaceCompletionRoutine(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    goto L1;

  anon224_Then:
    call {:si_unique_call 948} vslice_dummy_var_226 := TrueffsSyncSendIrpCompletionRoutine(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    goto L1;

  anon225_Then:
    call {:si_unique_call 949} vslice_dummy_var_225 := TrueffsFdoPowerCompletionRoutine(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    goto L1;

  anon226_Then:
    call {:si_unique_call 950} vslice_dummy_var_224 := TrueffsCallDriverSyncCompletion(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    goto L1;

  anon227_Then:
    goto L1;

  anon228_Then:
    goto L1;

  anon229_Then:
    goto L1;

  anon230_Then:
    goto L1;

  anon231_Then:
    goto L1;

  anon232_Then:
    goto L1;

  anon233_Then:
    goto L1;

  anon234_Then:
    goto L1;

  anon235_Then:
    goto L1;

  anon236_Then:
    goto L1;

  anon237_Then:
    goto L1;

  anon238_Then:
    goto L1;

  anon239_Then:
    goto L1;

  anon240_Then:
    goto L1;

  anon241_Then:
    goto L1;

  anon242_Then:
    goto L1;

  anon243_Then:
    goto L1;

  anon244_Then:
    goto L1;

  anon245_Then:
    call {:si_unique_call 951} TrueffsThread(sdv_pv2);
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon264_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon246_Then:
    goto L1;

  anon247_Then:
    goto L1;

  anon248_Then:
    goto L1;

  anon249_Then:
    goto L1;

  anon250_Then:
    goto L1;

  anon251_Then:
    goto L1;

  anon252_Then:
    goto L1;

  anon253_Then:
    goto L1;

  anon254_Then:
    goto L1;

  anon255_Then:
    goto L1;

  anon256_Then:
    goto L1;

  anon257_Then:
    goto L1;

  anon258_Then:
    goto L1;

  anon259_Then:
    goto L1;

  anon260_Then:
    goto L1;

  anon261_Then:
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} sdv_553 != 0;
    call {:si_unique_call 952} sdv_stub_driver_init();
    call {:si_unique_call 953} sdv_RunStartIo(sdv_p_devobj_fdo, sdv_irp);
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon263_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon179_Then:
    assume {:partition} sdv_553 == 0;
    goto L1;

  anon177_Then:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} sdv_570 != 0;
    call {:si_unique_call 954} sdv_stub_driver_init();
    call {:si_unique_call 955} vslice_dummy_var_223 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon262_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon178_Then:
    assume {:partition} sdv_570 == 0;
    goto L1;
}



procedure {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_1329: int);
  free ensures {:va_keep} Tmp_1329 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_1329: int)
{

  anon0:
    Tmp_1329 := 1;
    return;
}



procedure {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_1331: int);
  free ensures {:va_keep} Tmp_1331 == 0 || Tmp_1331 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_1331: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1331 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1331 := -1073741823;
    goto L1;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_1333: int);
  free ensures {:va_keep} Tmp_1333 == 0 || Tmp_1333 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_1333: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1333 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1333 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_1335: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_1335: int)
{
  var {:pointer} sdv_585: int;
  var {:pointer} p_2: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 956} sdv_585 := __HAVOC_malloc(1);
    p_2 := sdv_585;
    Tmp_1335 := p_2;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1335 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl: int) returns (Tmp_1337: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl: int) returns (Tmp_1337: int)
{
  var {:pointer} x_2: int;
  var {:pointer} sdv_586: int;

  anon0:
    call {:si_unique_call 957} sdv_586 := __HAVOC_malloc(1);
    x_2 := sdv_586;
    Tmp_1337 := x_2;
    return;
}



procedure {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_1339: int);
  free ensures {:va_keep} Tmp_1339 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_1339: int)
{

  anon0:
    Tmp_1339 := 0;
    return;
}



procedure {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_1341: int);
  free ensures {:va_keep} Tmp_1341 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_1341: int)
{

  anon0:
    Tmp_1341 := 0;
    return;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_3: int, actual_Irp_1: int) returns (Tmp_1343: int);
  free ensures {:va_keep} Tmp_1343 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_3: int, actual_Irp_1: int) returns (Tmp_1343: int)
{
  var {:scalar} status_26: int;
  var {:pointer} Irp_1: int;

  anon0:
    Irp_1 := actual_Irp_1;
    status_26 := 259;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  L25:
    Tmp_1343 := status_26;
    return;

  anon33_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon32_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L19;

  anon40_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon39_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L44;

  anon41_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L28;

  anon31_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L36;
}



procedure {:origName "WmiSystemControl"} {:osmodel} WmiSystemControl(actual_WmiLibInfo: int, actual_DeviceObject_4: int, actual_pirp_5: int, actual_IrpDisposition: int) returns (Tmp_1345: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1345 == 0 || Tmp_1345 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WmiSystemControl"} {:osmodel} WmiSystemControl(actual_WmiLibInfo: int, actual_DeviceObject_4: int, actual_pirp_5: int, actual_IrpDisposition: int) returns (Tmp_1345: int)
{
  var {:scalar} s_1: int;
  var {:pointer} IrpDisposition: int;

  anon0:
    IrpDisposition := actual_IrpDisposition;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    s_1 := 0;
    call {:si_unique_call 958} sdv_stub_WmiIrpForward(0);
    goto L24;

  L24:
    Tmp_1345 := s_1;
    return;

  anon11_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    call {:si_unique_call 959} sdv_stub_WmiIrpForward(0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    s_1 := 0;
    goto L24;

  anon10_Then:
    s_1 := -1073741808;
    goto L24;

  anon12_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    s_1 := 0;
    call {:si_unique_call 960} sdv_stub_WmiIrpNotCompleted(0);
    goto L24;

  anon9_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    s_1 := 0;
    call {:si_unique_call 961} sdv_stub_WmiIrpProcessed(0);
    goto L24;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_5: int, actual_Type: int, actual_structPtr888State: int) returns (SD2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_5: int, actual_Type: int, actual_structPtr888State: int) returns (SD2: int)
{
  var {:scalar} State: int;
  var {:scalar} r_1: int;
  var {:scalar} Tmp_2: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 962} State := __HAVOC_malloc(8);
    call {:si_unique_call 963} r_1 := __HAVOC_malloc(8);
    call {:si_unique_call 964} Tmp_2 := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    SD2 := Tmp_2;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer: int) returns (Tmp_1348: int);
  free ensures {:va_keep} Tmp_1348 == 1 || Tmp_1348 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer: int) returns (Tmp_1348: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1348 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1348 := 0;
    goto L1;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp_1: int;
  var {:pointer} pirp_6: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_2: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_228: int;

  anon0:
    call {:si_unique_call 965} vslice_dummy_var_228 := __HAVOC_malloc(4);
    pirp_6 := actual_pirp_6;
    CompletionRoutine := actual_CompletionRoutine;
    Context_2 := actual_Context_2;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 966} irpSp_1 := sdv_IoGetNextIrpStackLocation(pirp_6);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    return;
}



procedure {:origName "KeSetTimerEx"} {:osmodel} KeSetTimerEx(actual_Timer_1: int, actual_structPtr888DueTime: int, actual_Period: int, actual_Dpc_1: int) returns (Tmp_1352: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1352 == 1 || Tmp_1352 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetTimerEx"} {:osmodel} KeSetTimerEx(actual_Timer_1: int, actual_structPtr888DueTime: int, actual_Period: int, actual_Dpc_1: int) returns (Tmp_1352: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 967} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1352 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1352 := 0;
    goto L1;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_229: int;

  anon0:
    call {:si_unique_call 968} vslice_dummy_var_229 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoDeassignArcName"} {:osmodel} sdv_IoDeassignArcName(actual_ArcName: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoDeassignArcName"} {:osmodel} sdv_IoDeassignArcName(actual_ArcName: int)
{
  var vslice_dummy_var_230: int;

  anon0:
    call {:si_unique_call 969} vslice_dummy_var_230 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int)
{
  var vslice_dummy_var_231: int;

  anon0:
    call {:si_unique_call 970} vslice_dummy_var_231 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_1360: int);
  free ensures {:va_keep} Tmp_1360 == 258 || Tmp_1360 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_1360: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1360 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1360 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_1360 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_6: int)
{
  var vslice_dummy_var_232: int;

  anon0:
    call {:si_unique_call 971} vslice_dummy_var_232 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait: int) returns (Tmp_1364: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait: int) returns (Tmp_1364: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_1364 := OldState;
    return;
}



procedure {:origName "KeReadStateSemaphore"} {:osmodel} KeReadStateSemaphore(actual_Semaphore: int) returns (Tmp_1368: int);
  free ensures {:va_keep} Tmp_1368 == 1 || Tmp_1368 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeReadStateSemaphore"} {:osmodel} KeReadStateSemaphore(actual_Semaphore: int) returns (Tmp_1368: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1368 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1368 := 0;
    goto L1;
}



procedure {:origName "ObReferenceObjectByHandle"} {:osmodel} ObReferenceObjectByHandle(actual_Handle: int, actual_DesiredAccess: int, actual_ObjectType: int, actual_AccessMode: int, actual_Object_1: int, actual_HandleInformation: int) returns (Tmp_1370: int);
  free ensures {:va_keep} Tmp_1370 == 0 || Tmp_1370 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ObReferenceObjectByHandle"} {:osmodel} ObReferenceObjectByHandle(actual_Handle: int, actual_DesiredAccess: int, actual_ObjectType: int, actual_AccessMode: int, actual_Object_1: int, actual_HandleInformation: int) returns (Tmp_1370: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1370 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1370 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_1372: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_1372: int)
{
  var {:pointer} pirp_7: int;

  anon0:
    pirp_7 := actual_pirp_7;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    Tmp_1372 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_7)))];
    return;
}



procedure {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_3: int, actual_n: int, actual_a: int, actual_r_2: int, actual_s_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_3: int, actual_n: int, actual_a: int, actual_r_2: int, actual_s_2: int)
{
  var vslice_dummy_var_233: int;

  anon0:
    call {:si_unique_call 972} vslice_dummy_var_233 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoAssignArcName"} {:osmodel} sdv_IoAssignArcName(actual_ArcName_1: int, actual_DeviceName_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoAssignArcName"} {:osmodel} sdv_IoAssignArcName(actual_ArcName_1: int, actual_DeviceName_2: int)
{
  var vslice_dummy_var_234: int;

  anon0:
    call {:si_unique_call 973} vslice_dummy_var_234 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoStartPacket"} {:osmodel} IoStartPacket(actual_DeviceObject_7: int, actual_Irp_3: int, actual_Key: int, actual_CancelFunction: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoStartPacket"} {:osmodel} IoStartPacket(actual_DeviceObject_7: int, actual_Irp_3: int, actual_Key: int, actual_CancelFunction: int)
{
  var vslice_dummy_var_235: int;

  anon0:
    call {:si_unique_call 974} vslice_dummy_var_235 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunKeDpcRoutines"} {:osmodel} sdv_RunKeDpcRoutines(actual_kdpc: int, actual_pDpcContext: int, actual_pv2: int, actual_pv3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunKeDpcRoutines"} {:osmodel} sdv_RunKeDpcRoutines(actual_kdpc: int, actual_pDpcContext: int, actual_pv2: int, actual_pv3: int)
{
  var vslice_dummy_var_236: int;

  anon0:
    call {:si_unique_call 975} vslice_dummy_var_236 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseSemaphore"} {:osmodel} KeReleaseSemaphore(actual_Semaphore_1: int, actual_Increment_2: int, actual_Adjustment: int, actual_Wait_1: int) returns (Tmp_1382: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeReleaseSemaphore"} {:osmodel} KeReleaseSemaphore(actual_Semaphore_1: int, actual_Increment_2: int, actual_Adjustment: int, actual_Wait_1: int) returns (Tmp_1382: int)
{
  var {:scalar} r_3: int;

  anon0:
    Tmp_1382 := r_3;
    return;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_8: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_4: int) returns (Tmp_1384: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1384 == -1073741584 || Tmp_1384 == 259 || Tmp_1384 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_8: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_4: int) returns (Tmp_1384: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} structPtr888PowerState: int;

  anon0:
    call {:si_unique_call 976} PowerState := __HAVOC_malloc(8);
    MinorFunction := actual_MinorFunction;
    structPtr888PowerState := actual_structPtr888PowerState;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1384 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1384 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1384 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_1386: int, dup_assertVar: bool);
  modifies alloc, LockDepth, yogi_error, initDone, Mem_T.CurrentStackLocation_unnamed_tag_7, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "main"} {:osmodel} main() returns (Tmp_1386: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_1387: int;
  var {:scalar} Tmp_1388: int;
  var boogieTmp: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var dataErrorObject__Loc: int;
  var vols_3__Loc: int;
  var handleConversionTable__Loc: int;
  var bootCode_sdv_static_local_variable_113__Loc: int;
  var bdkVols__Loc: int;
  var handleTable__Loc: int;
  var antiCrashWindow_socketnt__Loc: int;
  var GUID_PCMCIA_INTERFACE_STANDARD__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var sdv_MmMapIoSpace_int__Loc: int;
  var WmiTffsportAddressGuid__Loc: int;
  var WmiScsiAddressGuid__Loc: int;
  var ScsiRawInterfaceGuid__Loc: int;
  var driveInfoReferenceMutex__Loc: int;
  var timerObject__Loc: int;
  var DumpData__Loc: int;
  var timerDpc__Loc: int;
  var KeTickCount__Loc: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_440: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_457: int;
  var vslice_dummy_var_458: int;
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_461: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_466: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_504: int;
  var vslice_dummy_var_505: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_510: int;
  var vslice_dummy_var_511: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_525: int;
  var vslice_dummy_var_526: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_528: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;
  var vslice_dummy_var_532: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_534: int;
  var vslice_dummy_var_535: int;
  var vslice_dummy_var_536: int;
  var vslice_dummy_var_537: int;
  var vslice_dummy_var_538: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_542: int;
  var vslice_dummy_var_543: int;
  var vslice_dummy_var_544: int;
  var vslice_dummy_var_545: int;
  var vslice_dummy_var_546: int;
  var vslice_dummy_var_547: int;
  var vslice_dummy_var_548: int;
  var vslice_dummy_var_549: int;
  var vslice_dummy_var_550: int;
  var vslice_dummy_var_551: int;
  var vslice_dummy_var_552: int;
  var vslice_dummy_var_553: int;
  var vslice_dummy_var_554: int;
  var vslice_dummy_var_555: int;
  var vslice_dummy_var_556: int;
  var vslice_dummy_var_557: int;
  var vslice_dummy_var_558: int;
  var vslice_dummy_var_559: int;
  var vslice_dummy_var_560: int;
  var vslice_dummy_var_561: int;
  var vslice_dummy_var_562: int;
  var vslice_dummy_var_563: int;
  var vslice_dummy_var_564: int;
  var vslice_dummy_var_565: int;
  var vslice_dummy_var_566: int;
  var vslice_dummy_var_567: int;
  var vslice_dummy_var_568: int;
  var vslice_dummy_var_569: int;
  var vslice_dummy_var_570: int;
  var vslice_dummy_var_571: int;
  var vslice_dummy_var_572: int;
  var vslice_dummy_var_573: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_575: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_1347: int;
  var vslice_dummy_var_1348: int;
  var vslice_dummy_var_1349: int;
  var vslice_dummy_var_1350: int;
  var vslice_dummy_var_1351: int;
  var vslice_dummy_var_1352: int;
  var vslice_dummy_var_1353: int;
  var vslice_dummy_var_1354: int;
  var vslice_dummy_var_1355: int;
  var vslice_dummy_var_1356: int;
  var vslice_dummy_var_1357: int;
  var vslice_dummy_var_1358: int;
  var vslice_dummy_var_1359: int;
  var vslice_dummy_var_1360: int;
  var vslice_dummy_var_1361: int;
  var vslice_dummy_var_1362: int;
  var vslice_dummy_var_1363: int;
  var vslice_dummy_var_1364: int;
  var vslice_dummy_var_1365: int;
  var vslice_dummy_var_1366: int;
  var vslice_dummy_var_1367: int;
  var vslice_dummy_var_1368: int;
  var vslice_dummy_var_1369: int;
  var vslice_dummy_var_1370: int;
  var vslice_dummy_var_1371: int;
  var vslice_dummy_var_1372: int;
  var vslice_dummy_var_1373: int;
  var vslice_dummy_var_1374: int;
  var vslice_dummy_var_1375: int;
  var vslice_dummy_var_1376: int;
  var vslice_dummy_var_1377: int;
  var vslice_dummy_var_1378: int;
  var vslice_dummy_var_1379: int;
  var vslice_dummy_var_1380: int;
  var vslice_dummy_var_1381: int;
  var vslice_dummy_var_1382: int;
  var vslice_dummy_var_1383: int;
  var vslice_dummy_var_1384: int;
  var vslice_dummy_var_1385: int;
  var vslice_dummy_var_1386: int;
  var vslice_dummy_var_1387: int;
  var vslice_dummy_var_1388: int;
  var vslice_dummy_var_1389: int;
  var vslice_dummy_var_1390: int;
  var vslice_dummy_var_1391: int;
  var vslice_dummy_var_1392: int;
  var vslice_dummy_var_1393: int;
  var vslice_dummy_var_1394: int;
  var vslice_dummy_var_1395: int;
  var vslice_dummy_var_1396: int;
  var vslice_dummy_var_1397: int;
  var vslice_dummy_var_1398: int;
  var vslice_dummy_var_1399: int;
  var vslice_dummy_var_1400: int;
  var vslice_dummy_var_1401: int;
  var vslice_dummy_var_1402: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 977} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 978} dataErrorObject__Loc := __HAVOC_malloc_or_null(4);
    assume dataErrorObject__Loc == dataErrorObject;
    assume dataErrorObject != 0;
    call {:si_unique_call 979} vols_3__Loc := __HAVOC_malloc_or_null(4);
    assume vols_3__Loc == vols_3;
    assume vols_3 != 0;
    call {:si_unique_call 980} handleConversionTable__Loc := __HAVOC_malloc_or_null(4);
    assume handleConversionTable__Loc == handleConversionTable;
    assume handleConversionTable != 0;
    call {:si_unique_call 981} bootCode_sdv_static_local_variable_113__Loc := __HAVOC_malloc_or_null(4);
    assume bootCode_sdv_static_local_variable_113__Loc == bootCode_sdv_static_local_variable_113;
    assume bootCode_sdv_static_local_variable_113 != 0;
    call {:si_unique_call 982} bdkVols__Loc := __HAVOC_malloc_or_null(4);
    assume bdkVols__Loc == bdkVols;
    assume bdkVols != 0;
    call {:si_unique_call 983} handleTable__Loc := __HAVOC_malloc_or_null(4);
    assume handleTable__Loc == handleTable;
    assume handleTable != 0;
    call {:si_unique_call 984} antiCrashWindow_socketnt__Loc := __HAVOC_malloc_or_null(4);
    assume antiCrashWindow_socketnt__Loc == antiCrashWindow_socketnt;
    assume antiCrashWindow_socketnt != 0;
    call {:si_unique_call 985} GUID_PCMCIA_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCMCIA_INTERFACE_STANDARD__Loc == GUID_PCMCIA_INTERFACE_STANDARD;
    assume GUID_PCMCIA_INTERFACE_STANDARD != 0;
    call {:si_unique_call 986} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 987} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 988} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 989} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 990} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 991} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 992} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 993} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 994} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 995} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 996} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 997} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 998} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 999} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 1000} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 1001} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 1002} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 1003} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 1004} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 1005} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 1006} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 1007} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 1008} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 1009} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 1010} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 1011} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1012} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 1013} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 1014} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 1015} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 1016} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 1017} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 1018} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 1019} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 1020} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 1021} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 1022} sdv_MmMapIoSpace_int__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MmMapIoSpace_int__Loc == sdv_MmMapIoSpace_int;
    assume sdv_MmMapIoSpace_int != 0;
    call {:si_unique_call 1023} WmiTffsportAddressGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WmiTffsportAddressGuid__Loc == WmiTffsportAddressGuid;
    assume WmiTffsportAddressGuid != 0;
    call {:si_unique_call 1024} WmiScsiAddressGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WmiScsiAddressGuid__Loc == WmiScsiAddressGuid;
    assume WmiScsiAddressGuid != 0;
    call {:si_unique_call 1025} ScsiRawInterfaceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume ScsiRawInterfaceGuid__Loc == ScsiRawInterfaceGuid;
    assume ScsiRawInterfaceGuid != 0;
    call {:si_unique_call 1026} driveInfoReferenceMutex__Loc := __HAVOC_malloc_or_null(140);
    assume driveInfoReferenceMutex__Loc == driveInfoReferenceMutex;
    assume driveInfoReferenceMutex != 0;
    call {:si_unique_call 1027} timerObject__Loc := __HAVOC_malloc_or_null(160);
    assume timerObject__Loc == timerObject;
    assume timerObject != 0;
    call {:si_unique_call 1028} DumpData__Loc := __HAVOC_malloc_or_null(596);
    assume DumpData__Loc == DumpData;
    assume DumpData != 0;
    call {:si_unique_call 1029} timerDpc__Loc := __HAVOC_malloc_or_null(40);
    assume timerDpc__Loc == timerDpc;
    assume timerDpc != 0;
    call {:si_unique_call 1030} KeTickCount__Loc := __HAVOC_malloc_or_null(12);
    assume KeTickCount__Loc == KeTickCount;
    assume KeTickCount != 0;
    call {:si_unique_call 1031} boogieTmp := __HAVOC_malloc_or_null(68);
    call {:si_unique_call 1032} boogieTmp := __HAVOC_malloc_or_null(32);
    call {:si_unique_call 1033} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1034} boogieTmp := __HAVOC_malloc_or_null(68);
    call {:si_unique_call 1035} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1036} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1037} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1038} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1039} boogieTmp := __HAVOC_malloc_or_null(296);
    call {:si_unique_call 1040} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 1041} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 1042} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 1043} boogieTmp := __HAVOC_malloc_or_null(24);
    call {:si_unique_call 1044} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1045} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1046} boogieTmp := __HAVOC_malloc_or_null(296);
    call {:si_unique_call 1047} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1048} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1049} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1050} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1051} boogieTmp := __HAVOC_malloc_or_null(296);
    call {:si_unique_call 1052} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1053} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1054} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1055} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1056} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1057} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1058} boogieTmp := __HAVOC_malloc_or_null(140);
    call {:si_unique_call 1059} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1060} boogieTmp := __HAVOC_malloc_or_null(8);
    call {:si_unique_call 1061} boogieTmp := __HAVOC_malloc_or_null(192);
    call {:si_unique_call 1062} boogieTmp := __HAVOC_malloc_or_null(120);
    call {:si_unique_call 1063} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1064} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1065} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1066} boogieTmp := __HAVOC_malloc_or_null(100);
    call {:si_unique_call 1067} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1068} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1069} boogieTmp := __HAVOC_malloc_or_null(32);
    call {:si_unique_call 1070} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 1071} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1072} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv1 == boogieTmp;
    call {:si_unique_call 1073} boogieTmp := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc == boogieTmp;
    call {:si_unique_call 1074} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 1075} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pIoDpcContext == boogieTmp;
    call {:si_unique_call 1076} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 1077} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 1078} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 1079} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 1080} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 1081} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 1082} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1083} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 1084} boogieTmp := __HAVOC_malloc_or_null(4);
    assume NlsMbCodePageTag == boogieTmp;
    call {:si_unique_call 1085} boogieTmp := __HAVOC_malloc_or_null(8);
    call {:si_unique_call 1086} vslice_dummy_var_432 := __HAVOC_malloc(4);
    call {:si_unique_call 1087} vslice_dummy_var_433 := __HAVOC_malloc(4);
    call {:si_unique_call 1088} vslice_dummy_var_434 := __HAVOC_malloc(4);
    call {:si_unique_call 1089} vslice_dummy_var_435 := __HAVOC_malloc(4);
    call {:si_unique_call 1090} vslice_dummy_var_436 := __HAVOC_malloc(4);
    call {:si_unique_call 1091} vslice_dummy_var_1347 := __HAVOC_malloc(544);
    call {:si_unique_call 1092} vslice_dummy_var_437 := __HAVOC_malloc(4);
    call {:si_unique_call 1093} vslice_dummy_var_438 := __HAVOC_malloc(4);
    call {:si_unique_call 1094} vslice_dummy_var_439 := __HAVOC_malloc(4);
    call {:si_unique_call 1095} vslice_dummy_var_440 := __HAVOC_malloc(4);
    call {:si_unique_call 1096} vslice_dummy_var_1348 := __HAVOC_malloc(256);
    call {:si_unique_call 1097} vslice_dummy_var_441 := __HAVOC_malloc(4);
    call {:si_unique_call 1098} vslice_dummy_var_1349 := __HAVOC_malloc(40);
    call {:si_unique_call 1099} vslice_dummy_var_442 := __HAVOC_malloc(4);
    call {:si_unique_call 1100} vslice_dummy_var_1350 := __HAVOC_malloc(544);
    call {:si_unique_call 1101} vslice_dummy_var_443 := __HAVOC_malloc(4);
    call {:si_unique_call 1102} vslice_dummy_var_444 := __HAVOC_malloc(4);
    call {:si_unique_call 1103} vslice_dummy_var_445 := __HAVOC_malloc(4);
    call {:si_unique_call 1104} vslice_dummy_var_446 := __HAVOC_malloc(24);
    call {:si_unique_call 1105} vslice_dummy_var_1351 := __HAVOC_malloc(8);
    call {:si_unique_call 1106} vslice_dummy_var_447 := __HAVOC_malloc(4);
    call {:si_unique_call 1107} vslice_dummy_var_1352 := __HAVOC_malloc(32);
    call {:si_unique_call 1108} vslice_dummy_var_1353 := __HAVOC_malloc(40);
    call {:si_unique_call 1109} vslice_dummy_var_448 := __HAVOC_malloc(4);
    call {:si_unique_call 1110} vslice_dummy_var_1354 := __HAVOC_malloc(60);
    call {:si_unique_call 1111} vslice_dummy_var_449 := __HAVOC_malloc(4);
    call {:si_unique_call 1112} vslice_dummy_var_1355 := __HAVOC_malloc(2368);
    call {:si_unique_call 1113} vslice_dummy_var_450 := __HAVOC_malloc(4);
    call {:si_unique_call 1114} vslice_dummy_var_451 := __HAVOC_malloc(4);
    call {:si_unique_call 1115} vslice_dummy_var_1356 := __HAVOC_malloc(36);
    call {:si_unique_call 1116} vslice_dummy_var_452 := __HAVOC_malloc(4);
    call {:si_unique_call 1117} vslice_dummy_var_453 := __HAVOC_malloc(4);
    call {:si_unique_call 1118} vslice_dummy_var_454 := __HAVOC_malloc(4);
    call {:si_unique_call 1119} vslice_dummy_var_455 := __HAVOC_malloc(4);
    call {:si_unique_call 1120} vslice_dummy_var_456 := __HAVOC_malloc(4);
    call {:si_unique_call 1121} vslice_dummy_var_457 := __HAVOC_malloc(4);
    call {:si_unique_call 1122} vslice_dummy_var_1357 := __HAVOC_malloc(96);
    call {:si_unique_call 1123} vslice_dummy_var_1358 := __HAVOC_malloc(40);
    call {:si_unique_call 1124} vslice_dummy_var_458 := __HAVOC_malloc(4);
    call {:si_unique_call 1125} vslice_dummy_var_459 := __HAVOC_malloc(288);
    call {:si_unique_call 1126} vslice_dummy_var_460 := __HAVOC_malloc(4);
    call {:si_unique_call 1127} vslice_dummy_var_461 := __HAVOC_malloc(4);
    call {:si_unique_call 1128} vslice_dummy_var_462 := __HAVOC_malloc(4);
    call {:si_unique_call 1129} vslice_dummy_var_463 := __HAVOC_malloc(4);
    call {:si_unique_call 1130} vslice_dummy_var_1359 := __HAVOC_malloc(40);
    call {:si_unique_call 1131} vslice_dummy_var_464 := __HAVOC_malloc(4);
    call {:si_unique_call 1132} vslice_dummy_var_465 := __HAVOC_malloc(4);
    call {:si_unique_call 1133} vslice_dummy_var_466 := __HAVOC_malloc(4);
    call {:si_unique_call 1134} vslice_dummy_var_467 := __HAVOC_malloc(4);
    call {:si_unique_call 1135} vslice_dummy_var_468 := __HAVOC_malloc(4);
    call {:si_unique_call 1136} vslice_dummy_var_469 := __HAVOC_malloc(4);
    call {:si_unique_call 1137} vslice_dummy_var_1360 := __HAVOC_malloc(192);
    call {:si_unique_call 1138} vslice_dummy_var_470 := __HAVOC_malloc(4);
    call {:si_unique_call 1139} vslice_dummy_var_471 := __HAVOC_malloc(4);
    call {:si_unique_call 1140} vslice_dummy_var_472 := __HAVOC_malloc(4);
    call {:si_unique_call 1141} vslice_dummy_var_473 := __HAVOC_malloc(4);
    call {:si_unique_call 1142} vslice_dummy_var_1361 := __HAVOC_malloc(256);
    call {:si_unique_call 1143} vslice_dummy_var_474 := __HAVOC_malloc(4);
    call {:si_unique_call 1144} vslice_dummy_var_1362 := __HAVOC_malloc(128);
    call {:si_unique_call 1145} vslice_dummy_var_475 := __HAVOC_malloc(4);
    call {:si_unique_call 1146} vslice_dummy_var_1363 := __HAVOC_malloc(2880);
    call {:si_unique_call 1147} vslice_dummy_var_476 := __HAVOC_malloc(4);
    call {:si_unique_call 1148} vslice_dummy_var_477 := __HAVOC_malloc(4);
    call {:si_unique_call 1149} vslice_dummy_var_1364 := __HAVOC_malloc(36);
    call {:si_unique_call 1150} vslice_dummy_var_478 := __HAVOC_malloc(32);
    call {:si_unique_call 1151} vslice_dummy_var_1365 := __HAVOC_malloc(32);
    call {:si_unique_call 1152} vslice_dummy_var_479 := __HAVOC_malloc(4);
    call {:si_unique_call 1153} vslice_dummy_var_1366 := __HAVOC_malloc(8);
    call {:si_unique_call 1154} vslice_dummy_var_480 := __HAVOC_malloc(256);
    call {:si_unique_call 1155} vslice_dummy_var_481 := __HAVOC_malloc(4);
    call {:si_unique_call 1156} vslice_dummy_var_482 := __HAVOC_malloc(4);
    call {:si_unique_call 1157} vslice_dummy_var_483 := __HAVOC_malloc(4);
    call {:si_unique_call 1158} vslice_dummy_var_484 := __HAVOC_malloc(4);
    call {:si_unique_call 1159} vslice_dummy_var_485 := __HAVOC_malloc(4);
    call {:si_unique_call 1160} vslice_dummy_var_1367 := __HAVOC_malloc(256);
    call {:si_unique_call 1161} vslice_dummy_var_486 := __HAVOC_malloc(4);
    call {:si_unique_call 1162} vslice_dummy_var_487 := __HAVOC_malloc(4);
    call {:si_unique_call 1163} vslice_dummy_var_1368 := __HAVOC_malloc(2800);
    call {:si_unique_call 1164} vslice_dummy_var_1369 := __HAVOC_malloc(8);
    call {:si_unique_call 1165} vslice_dummy_var_488 := __HAVOC_malloc(4);
    call {:si_unique_call 1166} vslice_dummy_var_489 := __HAVOC_malloc(4);
    call {:si_unique_call 1167} vslice_dummy_var_1370 := __HAVOC_malloc(36);
    call {:si_unique_call 1168} vslice_dummy_var_1371 := __HAVOC_malloc(32);
    call {:si_unique_call 1169} vslice_dummy_var_490 := __HAVOC_malloc(64);
    call {:si_unique_call 1170} vslice_dummy_var_491 := __HAVOC_malloc(4);
    call {:si_unique_call 1171} vslice_dummy_var_492 := __HAVOC_malloc(4);
    call {:si_unique_call 1172} vslice_dummy_var_1372 := __HAVOC_malloc(544);
    call {:si_unique_call 1173} vslice_dummy_var_493 := __HAVOC_malloc(4);
    call {:si_unique_call 1174} vslice_dummy_var_494 := __HAVOC_malloc(4);
    call {:si_unique_call 1175} vslice_dummy_var_495 := __HAVOC_malloc(4);
    call {:si_unique_call 1176} vslice_dummy_var_1373 := __HAVOC_malloc(8);
    call {:si_unique_call 1177} vslice_dummy_var_496 := __HAVOC_malloc(4);
    call {:si_unique_call 1178} vslice_dummy_var_1374 := __HAVOC_malloc(32);
    call {:si_unique_call 1179} vslice_dummy_var_1375 := __HAVOC_malloc(40);
    call {:si_unique_call 1180} vslice_dummy_var_497 := __HAVOC_malloc(4);
    call {:si_unique_call 1181} vslice_dummy_var_498 := __HAVOC_malloc(4);
    call {:si_unique_call 1182} vslice_dummy_var_499 := __HAVOC_malloc(4);
    call {:si_unique_call 1183} vslice_dummy_var_500 := __HAVOC_malloc(4);
    call {:si_unique_call 1184} vslice_dummy_var_1376 := __HAVOC_malloc(36);
    call {:si_unique_call 1185} vslice_dummy_var_501 := __HAVOC_malloc(4);
    call {:si_unique_call 1186} vslice_dummy_var_1377 := __HAVOC_malloc(8);
    call {:si_unique_call 1187} vslice_dummy_var_502 := __HAVOC_malloc(4);
    call {:si_unique_call 1188} vslice_dummy_var_503 := __HAVOC_malloc(4);
    call {:si_unique_call 1189} vslice_dummy_var_504 := __HAVOC_malloc(4);
    call {:si_unique_call 1190} vslice_dummy_var_505 := __HAVOC_malloc(4);
    call {:si_unique_call 1191} vslice_dummy_var_506 := __HAVOC_malloc(4);
    call {:si_unique_call 1192} vslice_dummy_var_1378 := __HAVOC_malloc(40);
    call {:si_unique_call 1193} vslice_dummy_var_507 := __HAVOC_malloc(4);
    call {:si_unique_call 1194} vslice_dummy_var_1379 := __HAVOC_malloc(36);
    call {:si_unique_call 1195} vslice_dummy_var_508 := __HAVOC_malloc(4);
    call {:si_unique_call 1196} vslice_dummy_var_509 := __HAVOC_malloc(4);
    call {:si_unique_call 1197} vslice_dummy_var_510 := __HAVOC_malloc(4);
    call {:si_unique_call 1198} vslice_dummy_var_511 := __HAVOC_malloc(4);
    call {:si_unique_call 1199} vslice_dummy_var_1380 := __HAVOC_malloc(256);
    call {:si_unique_call 1200} vslice_dummy_var_512 := __HAVOC_malloc(4);
    call {:si_unique_call 1201} vslice_dummy_var_1381 := __HAVOC_malloc(128);
    call {:si_unique_call 1202} vslice_dummy_var_513 := __HAVOC_malloc(4);
    call {:si_unique_call 1203} boogieTmp := __HAVOC_malloc(2880);
    call {:si_unique_call 1204} vslice_dummy_var_514 := __HAVOC_malloc(4);
    call {:si_unique_call 1205} vslice_dummy_var_515 := __HAVOC_malloc(4);
    call {:si_unique_call 1206} vslice_dummy_var_1382 := __HAVOC_malloc(36);
    call {:si_unique_call 1207} boogieTmp := __HAVOC_malloc(128);
    call {:si_unique_call 1208} vslice_dummy_var_1383 := __HAVOC_malloc(64);
    call {:si_unique_call 1209} vslice_dummy_var_516 := __HAVOC_malloc(4);
    call {:si_unique_call 1210} vslice_dummy_var_1384 := __HAVOC_malloc(32);
    call {:si_unique_call 1211} vslice_dummy_var_517 := __HAVOC_malloc(4);
    call {:si_unique_call 1212} vslice_dummy_var_518 := __HAVOC_malloc(4);
    call {:si_unique_call 1213} vslice_dummy_var_519 := __HAVOC_malloc(4);
    call {:si_unique_call 1214} vslice_dummy_var_520 := __HAVOC_malloc(4);
    call {:si_unique_call 1215} vslice_dummy_var_521 := __HAVOC_malloc(4);
    call {:si_unique_call 1216} vslice_dummy_var_522 := __HAVOC_malloc(4);
    call {:si_unique_call 1217} vslice_dummy_var_523 := __HAVOC_malloc(4);
    call {:si_unique_call 1218} vslice_dummy_var_1385 := __HAVOC_malloc(1536);
    call {:si_unique_call 1219} vslice_dummy_var_524 := __HAVOC_malloc(4);
    call {:si_unique_call 1220} vslice_dummy_var_525 := __HAVOC_malloc(4);
    call {:si_unique_call 1221} vslice_dummy_var_526 := __HAVOC_malloc(4);
    call {:si_unique_call 1222} vslice_dummy_var_1386 := __HAVOC_malloc(32);
    call {:si_unique_call 1223} vslice_dummy_var_1387 := __HAVOC_malloc(40);
    call {:si_unique_call 1224} vslice_dummy_var_1388 := __HAVOC_malloc(256);
    call {:si_unique_call 1225} vslice_dummy_var_527 := __HAVOC_malloc(4);
    call {:si_unique_call 1226} vslice_dummy_var_528 := __HAVOC_malloc(4);
    call {:si_unique_call 1227} vslice_dummy_var_1389 := __HAVOC_malloc(960);
    call {:si_unique_call 1228} vslice_dummy_var_529 := __HAVOC_malloc(4);
    call {:si_unique_call 1229} vslice_dummy_var_530 := __HAVOC_malloc(4);
    call {:si_unique_call 1230} vslice_dummy_var_531 := __HAVOC_malloc(4);
    call {:si_unique_call 1231} vslice_dummy_var_1390 := __HAVOC_malloc(32);
    call {:si_unique_call 1232} vslice_dummy_var_1391 := __HAVOC_malloc(32);
    call {:si_unique_call 1233} vslice_dummy_var_532 := __HAVOC_malloc(4);
    call {:si_unique_call 1234} boogieTmp := __HAVOC_malloc(872);
    call {:si_unique_call 1235} vslice_dummy_var_533 := __HAVOC_malloc(4);
    call {:si_unique_call 1236} vslice_dummy_var_534 := __HAVOC_malloc(4);
    call {:si_unique_call 1237} vslice_dummy_var_535 := __HAVOC_malloc(4);
    call {:si_unique_call 1238} vslice_dummy_var_536 := __HAVOC_malloc(4);
    call {:si_unique_call 1239} boogieTmp := __HAVOC_malloc(384);
    call {:si_unique_call 1240} vslice_dummy_var_1392 := __HAVOC_malloc(256);
    call {:si_unique_call 1241} vslice_dummy_var_537 := __HAVOC_malloc(4);
    call {:si_unique_call 1242} vslice_dummy_var_538 := __HAVOC_malloc(4);
    call {:si_unique_call 1243} vslice_dummy_var_539 := __HAVOC_malloc(4);
    call {:si_unique_call 1244} vslice_dummy_var_540 := __HAVOC_malloc(4);
    call {:si_unique_call 1245} vslice_dummy_var_541 := __HAVOC_malloc(4);
    call {:si_unique_call 1246} boogieTmp := __HAVOC_malloc(96);
    call {:si_unique_call 1247} vslice_dummy_var_542 := __HAVOC_malloc(4);
    call {:si_unique_call 1248} vslice_dummy_var_1393 := __HAVOC_malloc(192);
    call {:si_unique_call 1249} vslice_dummy_var_543 := __HAVOC_malloc(4);
    call {:si_unique_call 1250} boogieTmp := __HAVOC_malloc(32768);
    call {:si_unique_call 1251} vslice_dummy_var_544 := __HAVOC_malloc(4);
    call {:si_unique_call 1252} vslice_dummy_var_545 := __HAVOC_malloc(4);
    call {:si_unique_call 1253} vslice_dummy_var_546 := __HAVOC_malloc(4);
    call {:si_unique_call 1254} vslice_dummy_var_1394 := __HAVOC_malloc(256);
    call {:si_unique_call 1255} vslice_dummy_var_547 := __HAVOC_malloc(4);
    call {:si_unique_call 1256} vslice_dummy_var_548 := __HAVOC_malloc(4);
    call {:si_unique_call 1257} vslice_dummy_var_549 := __HAVOC_malloc(4);
    call {:si_unique_call 1258} vslice_dummy_var_550 := __HAVOC_malloc(4);
    call {:si_unique_call 1259} vslice_dummy_var_551 := __HAVOC_malloc(4);
    call {:si_unique_call 1260} vslice_dummy_var_552 := __HAVOC_malloc(4);
    call {:si_unique_call 1261} vslice_dummy_var_1395 := __HAVOC_malloc(192);
    call {:si_unique_call 1262} vslice_dummy_var_553 := __HAVOC_malloc(4);
    call {:si_unique_call 1263} vslice_dummy_var_554 := __HAVOC_malloc(4);
    call {:si_unique_call 1264} vslice_dummy_var_555 := __HAVOC_malloc(4);
    call {:si_unique_call 1265} vslice_dummy_var_1396 := __HAVOC_malloc(12);
    call {:si_unique_call 1266} vslice_dummy_var_1397 := __HAVOC_malloc(12);
    call {:si_unique_call 1267} vslice_dummy_var_556 := __HAVOC_malloc(4);
    call {:si_unique_call 1268} vslice_dummy_var_1398 := __HAVOC_malloc(32);
    call {:si_unique_call 1269} vslice_dummy_var_1399 := __HAVOC_malloc(12);
    call {:si_unique_call 1270} vslice_dummy_var_1400 := __HAVOC_malloc(160);
    call {:si_unique_call 1271} vslice_dummy_var_557 := __HAVOC_malloc(4);
    call {:si_unique_call 1272} vslice_dummy_var_558 := __HAVOC_malloc(4);
    call {:si_unique_call 1273} vslice_dummy_var_559 := __HAVOC_malloc(4);
    call {:si_unique_call 1274} vslice_dummy_var_560 := __HAVOC_malloc(4);
    call {:si_unique_call 1275} vslice_dummy_var_561 := __HAVOC_malloc(4);
    call {:si_unique_call 1276} vslice_dummy_var_562 := __HAVOC_malloc(4);
    call {:si_unique_call 1277} vslice_dummy_var_563 := __HAVOC_malloc(4);
    call {:si_unique_call 1278} vslice_dummy_var_564 := __HAVOC_malloc(4);
    call {:si_unique_call 1279} vslice_dummy_var_565 := __HAVOC_malloc(4);
    call {:si_unique_call 1280} vslice_dummy_var_566 := __HAVOC_malloc(4);
    call {:si_unique_call 1281} vslice_dummy_var_567 := __HAVOC_malloc(4);
    call {:si_unique_call 1282} vslice_dummy_var_1401 := __HAVOC_malloc(192);
    call {:si_unique_call 1283} vslice_dummy_var_568 := __HAVOC_malloc(4);
    call {:si_unique_call 1284} vslice_dummy_var_569 := __HAVOC_malloc(4);
    call {:si_unique_call 1285} vslice_dummy_var_570 := __HAVOC_malloc(4);
    call {:si_unique_call 1286} vslice_dummy_var_571 := __HAVOC_malloc(4);
    call {:si_unique_call 1287} vslice_dummy_var_572 := __HAVOC_malloc(4);
    call {:si_unique_call 1288} vslice_dummy_var_573 := __HAVOC_malloc(4);
    call {:si_unique_call 1289} vslice_dummy_var_574 := __HAVOC_malloc(4);
    call {:si_unique_call 1290} vslice_dummy_var_575 := __HAVOC_malloc(4);
    call {:si_unique_call 1291} vslice_dummy_var_576 := __HAVOC_malloc(4);
    call {:si_unique_call 1292} vslice_dummy_var_1402 := __HAVOC_malloc(40);
    assume {:mainInitDone} true;
    call {:si_unique_call 1293} corralExtraInit();
    call {:si_unique_call 1294} corralExplainErrorInit();
    call {:si_unique_call 1295} _sdv_init30();
    call {:si_unique_call 1296} _sdv_init22();
    call {:si_unique_call 1297} _sdv_init18();
    call {:si_unique_call 1298} _sdv_init19();
    call {:si_unique_call 1299} _sdv_init17();
    call {:si_unique_call 1300} _sdv_init1();
    call {:si_unique_call 1301} _sdv_init28();
    call {:si_unique_call 1302} _sdv_init23();
    call {:si_unique_call 1303} _sdv_init25();
    call {:si_unique_call 1304} _sdv_init4();
    call {:si_unique_call 1305} _sdv_init5();
    call {:si_unique_call 1306} _sdv_init3();
    call {:si_unique_call 1307} _sdv_init16();
    call {:si_unique_call 1308} _sdv_init24();
    call {:si_unique_call 1309} _sdv_init14();
    call {:si_unique_call 1310} _sdv_init21();
    call {:si_unique_call 1311} _sdv_init6();
    call {:si_unique_call 1312} _sdv_init15();
    call {:si_unique_call 1313} _sdv_init27();
    call {:si_unique_call 1314} _sdv_init10();
    call {:si_unique_call 1315} _sdv_init26();
    call {:si_unique_call 1316} _sdv_init11();
    call {:si_unique_call 1317} _sdv_init9();
    call {:si_unique_call 1318} _sdv_init12();
    call {:si_unique_call 1319} _sdv_init13();
    call {:si_unique_call 1320} _sdv_init7();
    call {:si_unique_call 1321} _sdv_init8();
    call {:si_unique_call 1322} _sdv_init2();
    call {:si_unique_call 1323} _sdv_init20();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_1387 := 0;
    goto L53;

  L53:
    assume Tmp_1387 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_1388 := 0;
    goto L57;

  L57:
    assume Tmp_1388 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(sdv_irp)))] := sdv_harnessStackLocation;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(sdv_other_irp)))] := sdv_other_harnessStackLocation;
    call {:si_unique_call 1324} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L51;

  L51:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L51;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_1388 := 1;
    goto L57;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_1387 := 1;
    goto L53;
}



procedure {:origName "ZwSetValueKey"} {:osmodel} ZwSetValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_TitleIndex: int, actual_Type_1: int, actual_Data: int, actual_DataSize: int) returns (Tmp_1390: int);
  free ensures {:va_keep} Tmp_1390 == -1073741790 || Tmp_1390 == -1073741816 || Tmp_1390 == -1073741823 || Tmp_1390 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwSetValueKey"} {:osmodel} ZwSetValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_TitleIndex: int, actual_Type_1: int, actual_Data: int, actual_DataSize: int) returns (Tmp_1390: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1390 := -1073741790;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_1390 := -1073741816;
    goto L1;

  anon9_Then:
    Tmp_1390 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_1390 := 0;
    goto L1;
}



procedure {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_1392: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_1392: int)
{
  var {:pointer} sdv_599: int;

  anon0:
    call {:si_unique_call 1325} sdv_599 := __HAVOC_malloc(1);
    Tmp_1392 := sdv_599;
    return;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int)
{
  var {:pointer} pirp_8: int;
  var vslice_dummy_var_237: int;

  anon0:
    call {:si_unique_call 1326} vslice_dummy_var_237 := __HAVOC_malloc(4);
    pirp_8 := actual_pirp_8;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_8 == sdv_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_8 == sdv_other_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_8 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_8 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_ExInterlockedRemoveHeadList"} {:osmodel} sdv_ExInterlockedRemoveHeadList(actual_ListHead: int, actual_Lock: int) returns (Tmp_1396: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExInterlockedRemoveHeadList"} {:osmodel} sdv_ExInterlockedRemoveHeadList(actual_ListHead: int, actual_Lock: int) returns (Tmp_1396: int)
{
  var {:pointer} sdv_601: int;
  var {:pointer} p_4: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1327} sdv_601 := __HAVOC_malloc(1);
    p_4 := sdv_601;
    Tmp_1396 := p_4;
    goto L1;

  L1:
    return;

  anon3_Then:
    p_4 := 0;
    Tmp_1396 := p_4;
    goto L1;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_1398: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_1398: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_1398;
    return;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int)
{
  var {:pointer} DestinationString_2: int;
  var {:pointer} SourceString_2: int;
  var vslice_dummy_var_238: int;

  anon0:
    call {:si_unique_call 1328} vslice_dummy_var_238 := __HAVOC_malloc(4);
    DestinationString_2 := actual_DestinationString_2;
    SourceString_2 := actual_SourceString_2;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString_2 != 0;
    assume {:nonnull} DestinationString_2 != 0;
    assume DestinationString_2 > 0;
    assume {:nonnull} DestinationString_2 != 0;
    assume DestinationString_2 > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString_2 == 0;
    assume {:nonnull} DestinationString_2 != 0;
    assume DestinationString_2 > 0;
    assume {:nonnull} DestinationString_2 != 0;
    assume DestinationString_2 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString_2 != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString_2 == 0;
    goto L4;
}



procedure {:origName "IoGetAttachedDeviceReference"} {:osmodel} IoGetAttachedDeviceReference(actual_DeviceObject_9: int) returns (Tmp_1402: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoGetAttachedDeviceReference"} {:osmodel} IoGetAttachedDeviceReference(actual_DeviceObject_9: int) returns (Tmp_1402: int)
{
  var {:pointer} DeviceObject_9: int;

  anon0:
    DeviceObject_9 := actual_DeviceObject_9;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1402 := sdv_p_devobj_top;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1402 := DeviceObject_9;
    goto L1;
}



procedure {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po: int, actual_pirp_9: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po: int, actual_pirp_9: int)
{
  var {:pointer} po: int;
  var {:pointer} pirp_9: int;
  var vslice_dummy_var_239: int;

  anon0:
    call {:si_unique_call 1329} vslice_dummy_var_239 := __HAVOC_malloc(4);
    po := actual_po;
    pirp_9 := actual_pirp_9;
    call {:si_unique_call 1330} sdv_stub_startio_begin();
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    call {:si_unique_call 1331} TrueffsStartIo(po, pirp_9);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1332} sdv_stub_startio_end();
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_1406: int);
  free ensures {:va_keep} Tmp_1406 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_1406: int)
{

  anon0:
    Tmp_1406 := 1;
    return;
}



procedure {:origName "PsCreateSystemThread"} {:osmodel} PsCreateSystemThread(actual_ThreadHandle: int, actual_DesiredAccess_1: int, actual_ObjectAttributes: int, actual_ProcessHandle: int, actual_ClientId: int, actual_StartRoutine: int, actual_StartContext: int) returns (Tmp_1408: int);
  free ensures {:va_keep} Tmp_1408 == 0 || Tmp_1408 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PsCreateSystemThread"} {:osmodel} PsCreateSystemThread(actual_ThreadHandle: int, actual_DesiredAccess_1: int, actual_ObjectAttributes: int, actual_ProcessHandle: int, actual_ClientId: int, actual_StartRoutine: int, actual_StartContext: int) returns (Tmp_1408: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1408 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1408 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int)
{
  var vslice_dummy_var_240: int;

  anon0:
    call {:si_unique_call 1333} vslice_dummy_var_240 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeFlushIoBuffers"} {:osmodel} sdv_KeFlushIoBuffers(actual_Mdl_1: int, actual_ReadOperation: int, actual_DmaOperation: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeFlushIoBuffers"} {:osmodel} sdv_KeFlushIoBuffers(actual_Mdl_1: int, actual_ReadOperation: int, actual_DmaOperation: int)
{
  var vslice_dummy_var_241: int;

  anon0:
    call {:si_unique_call 1334} vslice_dummy_var_241 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin()
{
  var vslice_dummy_var_242: int;

  anon0:
    call {:si_unique_call 1335} vslice_dummy_var_242 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_243: int;

  anon0:
    call {:si_unique_call 1336} vslice_dummy_var_243 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwCreateKey"} {:osmodel} ZwCreateKey(actual_KeyHandle_1: int, actual_DesiredAccess_2: int, actual_ObjectAttributes_1: int, actual_TitleIndex_1: int, actual_Class: int, actual_CreateOptions: int, actual_Disposition: int) returns (Tmp_1418: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1418 == 0 || Tmp_1418 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwCreateKey"} {:osmodel} ZwCreateKey(actual_KeyHandle_1: int, actual_DesiredAccess_2: int, actual_ObjectAttributes_1: int, actual_TitleIndex_1: int, actual_Class: int, actual_CreateOptions: int, actual_Disposition: int) returns (Tmp_1418: int)
{
  var {:pointer} sdv_605: int;
  var {:pointer} KeyHandle_1: int;

  anon0:
    KeyHandle_1 := actual_KeyHandle_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1337} sdv_605 := __HAVOC_malloc(4);
    assume {:nonnull} KeyHandle_1 != 0;
    assume KeyHandle_1 > 0;
    Tmp_1418 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} KeyHandle_1 != 0;
    assume KeyHandle_1 > 0;
    Tmp_1418 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_10: int)
{
  var vslice_dummy_var_244: int;

  anon0:
    call {:si_unique_call 1338} vslice_dummy_var_244 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInterlockedInsertTailList"} {:osmodel} sdv_ExInterlockedInsertTailList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_1: int) returns (Tmp_1422: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExInterlockedInsertTailList"} {:osmodel} sdv_ExInterlockedInsertTailList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_1: int) returns (Tmp_1422: int)
{
  var {:pointer} sdv_607: int;
  var {:pointer} p_5: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1339} sdv_607 := __HAVOC_malloc(1);
    p_5 := sdv_607;
    Tmp_1422 := p_5;
    goto L1;

  L1:
    return;

  anon3_Then:
    p_5 := 0;
    Tmp_1422 := p_5;
    goto L1;
}



procedure {:origName "sdv_stub_WmiIrpNotCompleted"} {:osmodel} sdv_stub_WmiIrpNotCompleted(actual_pirp_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_WmiIrpNotCompleted"} {:osmodel} sdv_stub_WmiIrpNotCompleted(actual_pirp_11: int)
{
  var vslice_dummy_var_245: int;

  anon0:
    call {:si_unique_call 1340} vslice_dummy_var_245 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes: int)
{
  var vslice_dummy_var_246: int;

  anon0:
    call {:si_unique_call 1341} vslice_dummy_var_246 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_12: int) returns (Tmp_1428: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, LockDepth, yogi_error, initDone;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_12: int) returns (Tmp_1428: int)
{
  var {:pointer} ps: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_1430: int;
  var {:scalar} Tmp_1431: int;
  var {:scalar} sdv_616: int;
  var {:scalar} status_28: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_12: int;

  anon0:
    po_1 := actual_po_1;
    pirp_12 := actual_pirp_12;
    status_28 := 0;
    minor := sdv_616;
    assume {:nonnull} pirp_12 != 0;
    assume pirp_12 > 0;
    ps := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_12)))];
    assume {:nonnull} pirp_12 != 0;
    assume pirp_12 > 0;
    assume {:nonnull} pirp_12 != 0;
    assume pirp_12 > 0;
    call {:si_unique_call 1342} sdv_SetStatus(pirp_12);
    assume {:nonnull} pirp_12 != 0;
    assume pirp_12 > 0;
    assume {:nonnull} pirp_12 != 0;
    assume pirp_12 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] := minor;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1343} sdv_stub_dispatch_begin();
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] != 0;
    goto L60;

  L60:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] == 3;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_1431 := 0;
    goto L232;

  L232:
    assume Tmp_1431 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] == 2;
    goto L66;

  L66:
    call {:si_unique_call 1344} status_28 := TrueffsPnpDeviceControl(po_1, pirp_12);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1345} sdv_RunISRRoutines(0, 0);
    call {:si_unique_call 1346} sdv_RunKeDpcRoutines(0, 0, 0, 0);
    call {:si_unique_call 1347} sdv_RunIoDpcRoutines(0, 0, 0, 0);
    goto L81;

  L81:
    call {:si_unique_call 1348} sdv_stub_dispatch_end(status_28, 0);
    assume {:nonnull} pirp_12 != 0;
    assume pirp_12 > 0;
    Tmp_1428 := status_28;
    goto LM2;

  LM2:
    return;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] != 2;
    goto L66;

  anon61_Then:
    Tmp_1431 := 1;
    goto L232;

  anon59_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] != 3;
    goto L61;

  anon83_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] == 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_start_irp_already_issued != 0;
    Tmp_1430 := 0;
    goto L238;

  L238:
    assume Tmp_1430 != 0;
    goto L60;

  anon58_Then:
    assume {:partition} sdv_start_irp_already_issued == 0;
    Tmp_1430 := 1;
    goto L238;

  anon62_Then:
    call {:si_unique_call 1349} status_28 := sdv_DoNothing();
    goto L81;

  anon63_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1350} status_28 := TrueffsDispatchSystemControl(po_1, pirp_12);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1351} sdv_SetPowerIrpMinorFunction(pirp_12);
    call {:si_unique_call 1352} status_28 := TrueffsPowerControl(po_1, pirp_12);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1353} sdv_RunISRRoutines(0, 0);
    call {:si_unique_call 1354} sdv_RunKeDpcRoutines(0, 0, 0, 0);
    call {:si_unique_call 1355} sdv_RunIoDpcRoutines(0, 0, 0, 0);
    goto L81;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1356} status_28 := sdv_DoNothing();
    goto L81;

  anon66_Then:
    call {:si_unique_call 1357} status_28 := sdv_DoNothing();
    goto L81;

  anon67_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1358} status_28 := sdv_DoNothing();
    goto L81;

  anon68_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1359} status_28 := TrueffsScsiRequests(po_1, pirp_12);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1360} status_28 := TrueffsDeviceControl(po_1, pirp_12);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 1361} status_28 := sdv_DoNothing();
    goto L81;

  anon71_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1362} status_28 := sdv_DoNothing();
    goto L81;

  anon72_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1363} status_28 := sdv_DoNothing();
    goto L81;

  anon73_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1364} status_28 := sdv_DoNothing();
    goto L81;

  anon74_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1365} status_28 := sdv_DoNothing();
    goto L81;

  anon75_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1366} status_28 := sdv_DoNothing();
    goto L81;

  anon76_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1367} status_28 := TrueffsCreateClose(po_1, pirp_12);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1368} status_28 := TrueffsCreateClose(po_1, pirp_12);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int)
{
  var vslice_dummy_var_247: int;

  anon0:
    call {:si_unique_call 1369} vslice_dummy_var_247 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_1434: int);
  free ensures {:va_keep} Tmp_1434 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_1434: int)
{

  anon0:
    Tmp_1434 := 1;
    return;
}



procedure {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_1436: int);
  free ensures {:va_keep} Tmp_1436 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_1436: int)
{

  anon0:
    Tmp_1436 := 1;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_248: int;

  anon0:
    call {:si_unique_call 1370} vslice_dummy_var_248 := __HAVOC_malloc(4);
    new := actual_new;
    call {:si_unique_call 1371} SLIC_sdv_KeReleaseSpinLock_entry(0);
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_13: int, actual_PriorityBoost: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_13: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_249: int;

  anon0:
    call {:si_unique_call 1372} vslice_dummy_var_249 := __HAVOC_malloc(4);
    call {:si_unique_call 1373} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl22);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_3: int, actual_SourceString_3: int, actual_AllocateDestinationString: int) returns (Tmp_1442: int);
  free ensures {:va_keep} Tmp_1442 == 0 || Tmp_1442 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_3: int, actual_SourceString_3: int, actual_AllocateDestinationString: int) returns (Tmp_1442: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1442 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1442 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_250: int;

  anon0:
    call {:si_unique_call 1374} vslice_dummy_var_250 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunIoDpcRoutines"} {:osmodel} sdv_RunIoDpcRoutines(actual_Dpc_2: int, actual_DeviceObject_10: int, actual_Irp_5: int, actual_Context_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunIoDpcRoutines"} {:osmodel} sdv_RunIoDpcRoutines(actual_Dpc_2: int, actual_DeviceObject_10: int, actual_Irp_5: int, actual_Context_4: int)
{
  var vslice_dummy_var_251: int;

  anon0:
    call {:si_unique_call 1375} vslice_dummy_var_251 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_1: int, actual_CacheType: int) returns (Tmp_1448: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_1: int, actual_CacheType: int) returns (Tmp_1448: int)
{
  var {:scalar} PhysicalAddress: int;
  var {:pointer} structPtr888PhysicalAddress: int;

  anon0:
    call {:si_unique_call 1376} PhysicalAddress := __HAVOC_malloc(20);
    structPtr888PhysicalAddress := actual_structPtr888PhysicalAddress;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    Tmp_1448 := sdv_MmMapIoSpace_int;
    return;
}



procedure {:origName "sdv_stub_WmiIrpForward"} {:osmodel} sdv_stub_WmiIrpForward(actual_pirp_14: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_WmiIrpForward"} {:osmodel} sdv_stub_WmiIrpForward(actual_pirp_14: int)
{
  var vslice_dummy_var_252: int;

  anon0:
    call {:si_unique_call 1377} vslice_dummy_var_252 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_253: int;

  anon0:
    call {:si_unique_call 1378} vslice_dummy_var_253 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_1454: int);
  free ensures {:va_keep} Tmp_1454 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_1454: int)
{

  anon0:
    Tmp_1454 := 0;
    return;
}



procedure {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_11: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State_1: int) returns (Tmp_1456: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_11: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State_1: int) returns (Tmp_1456: int)
{
  var {:pointer} r_4: int;
  var {:pointer} sdv_628: int;

  anon0:
    call {:si_unique_call 1379} sdv_628 := __HAVOC_malloc(1);
    r_4 := sdv_628;
    Tmp_1456 := r_4;
    return;
}



procedure {:origName "PsTerminateSystemThread"} {:osmodel} PsTerminateSystemThread(actual_ExitStatus: int) returns (Tmp_1458: int);
  free ensures {:va_keep} Tmp_1458 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PsTerminateSystemThread"} {:osmodel} PsTerminateSystemThread(actual_ExitStatus: int) returns (Tmp_1458: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume false;
    Tmp_1458 := 0;
    return;

  anon3_Then:
    Tmp_1458 := -1073741823;
    goto L1;

  L1:
    return;
}



procedure {:origName "sdv_stub_WmiIrpProcessed"} {:osmodel} sdv_stub_WmiIrpProcessed(actual_pirp_15: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_WmiIrpProcessed"} {:osmodel} sdv_stub_WmiIrpProcessed(actual_pirp_15: int)
{
  var vslice_dummy_var_254: int;

  anon0:
    call {:si_unique_call 1380} vslice_dummy_var_254 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_1464: int);
  free ensures {:va_keep} Tmp_1464 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_1464: int)
{

  anon0:
    Tmp_1464 := 1;
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1466: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1466: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_1466;
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_255: int;

  anon0:
    call {:si_unique_call 1381} vslice_dummy_var_255 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_1470: int);
  free ensures {:va_keep} Tmp_1470 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_1470: int)
{

  anon0:
    Tmp_1470 := 1;
    return;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota: int) returns (Tmp_1472: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota: int) returns (Tmp_1472: int)
{
  var {:pointer} irpSp_2: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 1382} irpSp_2 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    Tmp_1472 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1472 := 0;
    goto L1;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_12: int, actual_Irp_6: int) returns (Tmp_1474: int);
  free ensures {:va_keep} Tmp_1474 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_12: int, actual_Irp_6: int) returns (Tmp_1474: int)
{
  var {:scalar} status_29: int;
  var {:pointer} Irp_6: int;

  anon0:
    Irp_6 := actual_Irp_6;
    status_29 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L25;

  L25:
    Tmp_1474 := status_29;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L36;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_2: int) returns (Tmp_1476: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_2: int) returns (Tmp_1476: int)
{
  var {:scalar} p_7: int;

  anon0:
    Tmp_1476 := p_7;
    return;
}



procedure {:origName "ZwOpenKey"} {:osmodel} ZwOpenKey(actual_KeyHandle_2: int, actual_DesiredAccess_3: int, actual_ObjectAttributes_2: int) returns (Tmp_1478: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1478 == 0 || Tmp_1478 == -1073741727;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwOpenKey"} {:osmodel} ZwOpenKey(actual_KeyHandle_2: int, actual_DesiredAccess_3: int, actual_ObjectAttributes_2: int) returns (Tmp_1478: int)
{
  var {:pointer} sdv_635: int;
  var {:pointer} KeyHandle_2: int;

  anon0:
    KeyHandle_2 := actual_KeyHandle_2;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1383} sdv_635 := __HAVOC_malloc(4);
    assume {:nonnull} KeyHandle_2 != 0;
    assume KeyHandle_2 > 0;
    Tmp_1478 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} KeyHandle_2 != 0;
    assume KeyHandle_2 > 0;
    Tmp_1478 := -1073741727;
    goto L1;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_2: int, actual_State_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_2: int, actual_State_2: int)
{
  var {:pointer} Event_1: int;
  var {:scalar} Type_2: int;
  var {:scalar} State_2: int;
  var vslice_dummy_var_256: int;

  anon0:
    call {:si_unique_call 1384} vslice_dummy_var_256 := __HAVOC_malloc(4);
    Event_1 := actual_Event_1;
    Type_2 := actual_Type_2;
    State_2 := actual_State_2;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_257: int;

  anon0:
    call {:si_unique_call 1385} vslice_dummy_var_257 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_13: int, actual_Irp_7: int) returns (Tmp_1484: int);
  free ensures {:va_keep} Tmp_1484 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_13: int, actual_Irp_7: int) returns (Tmp_1484: int)
{
  var {:pointer} Irp_7: int;

  anon0:
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 1386} Tmp_1484 := IofCallDriver(0, Irp_7);
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_16: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_16: int)
{
  var vslice_dummy_var_258: int;

  anon0:
    call {:si_unique_call 1387} vslice_dummy_var_258 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoInvalidateDeviceRelations"} {:osmodel} IoInvalidateDeviceRelations(actual_DeviceObject_14: int, actual_Type_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoInvalidateDeviceRelations"} {:osmodel} IoInvalidateDeviceRelations(actual_DeviceObject_14: int, actual_Type_3: int)
{
  var vslice_dummy_var_259: int;

  anon0:
    call {:si_unique_call 1388} vslice_dummy_var_259 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int)
{
  var {:pointer} SpinLock_2: int;
  var vslice_dummy_var_260: int;

  anon0:
    call {:si_unique_call 1389} vslice_dummy_var_260 := __HAVOC_malloc(4);
    SpinLock_2 := actual_SpinLock_2;
    assume {:nonnull} SpinLock_2 != 0;
    assume SpinLock_2 > 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes_2: int, actual_Tag: int) returns (Tmp_1492: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes_2: int, actual_Tag: int) returns (Tmp_1492: int)
{
  var {:pointer} sdv_638: int;
  var {:scalar} NumberOfBytes_2: int;

  anon0:
    NumberOfBytes_2 := actual_NumberOfBytes_2;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1390} sdv_638 := __HAVOC_malloc(NumberOfBytes_2);
    Tmp_1492 := sdv_638;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1492 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_261: int;

  anon0:
    call {:si_unique_call 1391} vslice_dummy_var_261 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_262: int;

  anon0:
    call {:si_unique_call 1392} vslice_dummy_var_262 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoGetDriverObjectExtension"} {:osmodel} IoGetDriverObjectExtension(actual_DriverObject_1: int, actual_ClientIdentificationAddress: int) returns (Tmp_1498: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoGetDriverObjectExtension"} {:osmodel} IoGetDriverObjectExtension(actual_DriverObject_1: int, actual_ClientIdentificationAddress: int) returns (Tmp_1498: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1498 := igdoe;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1498 := 0;
    goto L1;
}



procedure {:origName "sdv_ObDereferenceObject"} {:osmodel} sdv_ObDereferenceObject(actual_Object_3: int) returns (Tmp_1500: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ObDereferenceObject"} {:osmodel} sdv_ObDereferenceObject(actual_Object_3: int) returns (Tmp_1500: int)
{
  var {:scalar} p_8: int;

  anon0:
    Tmp_1500 := p_8;
    return;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_1: int) returns (Tmp_1502: int);
  free ensures {:va_keep} Tmp_1502 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_1: int) returns (Tmp_1502: int)
{

  anon0:
    Tmp_1502 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1504: int);
  free ensures {:va_keep} Tmp_1504 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1504: int)
{

  anon0:
    Tmp_1504 := -1073741823;
    return;
}



procedure {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_15: int, actual_Action: int) returns (Tmp_1506: int);
  free ensures {:va_keep} Tmp_1506 == -1073741823 || Tmp_1506 == -1073741811 || Tmp_1506 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_15: int, actual_Action: int) returns (Tmp_1506: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1506 := -1073741823;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1506 := -1073741811;
    goto L1;

  anon5_Then:
    Tmp_1506 := 0;
    goto L1;
}



procedure {:origName "KeClearEvent"} {:osmodel} KeClearEvent(actual_Event_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeClearEvent"} {:osmodel} KeClearEvent(actual_Event_2: int)
{
  var {:pointer} Event_2: int;
  var vslice_dummy_var_263: int;

  anon0:
    call {:si_unique_call 1393} vslice_dummy_var_263 := __HAVOC_malloc(4);
    Event_2 := actual_Event_2;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    return;
}



procedure {:origName "TrueffsParentPowerUpCompletionRoutine"} TrueffsParentPowerUpCompletionRoutine(actual_Context_5: int, actual_FdoStatus: int) returns (Tmp_1510: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsParentPowerUpCompletionRoutine"} TrueffsParentPowerUpCompletionRoutine(actual_Context_5: int, actual_FdoStatus: int) returns (Tmp_1510: int)
{
  var {:pointer} Tmp_1511: int;
  var {:scalar} chipId_2: int;
  var {:pointer} Tmp_1512: int;
  var {:pointer} Tmp_1513: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_1515: int;
  var {:scalar} sdv_643: int;
  var {:pointer} irp_1: int;
  var {:scalar} cIrql: int;
  var {:scalar} status_30: int;
  var {:pointer} Tmp_1518: int;
  var {:pointer} Context_5: int;
  var {:scalar} FdoStatus: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_1403: int;

  anon0:
    Context_5 := actual_Context_5;
    FdoStatus := actual_FdoStatus;
    pdoExtension := Context_5;
    status_30 := FdoStatus;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} FdoStatus >= 0;
    chipId_2 := 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_1515;
    assume {:nonnull} Tmp_1515 != 0;
    assume Tmp_1515 > 0;
    call {:si_unique_call 1394} chipId_2 := corral_nondet();
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} chipId_2 == 32;
    goto L34;

  L34:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1395} Tmp_1511 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1511 != 0;
    assume Tmp_1511 > 0;
    call {:si_unique_call 1396} sdv_KeAcquireSpinLock(0, Tmp_1511);
    assume {:nonnull} Tmp_1511 != 0;
    assume Tmp_1511 > 0;
    havoc cIrql;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_1512;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_1513;
    assume {:nonnull} Tmp_1512 != 0;
    assume Tmp_1512 > 0;
    assume {:nonnull} Tmp_1513 != 0;
    assume Tmp_1513 > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1397} sdv_KeReleaseSpinLock(0, cIrql);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1398} sdv_643 := KeReadStateSemaphore(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_643 == 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1399} vslice_dummy_var_264 := KeReleaseSemaphore(0, 0, 1, 0);
    goto L10;

  L10:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc irp_1;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} irp_1 != 0;
    assume {:nonnull} irp_1 != 0;
    assume irp_1 > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1403;
    call {:si_unique_call 1400} TrueffsPdoCompletePowerIrp(vslice_dummy_var_1403, irp_1);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto L62;

  L62:
    Tmp_1510 := status_30;
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    assume {:partition} irp_1 == 0;
    goto L62;

  anon15_Then:
    assume {:partition} sdv_643 != 0;
    goto L10;

  anon13_Then:
    assume {:partition} chipId_2 != 32;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} chipId_2 != 48;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_1518;
    assume {:nonnull} Tmp_1518 != 0;
    assume Tmp_1518 > 0;
    goto L34;

  anon14_Then:
    assume {:partition} chipId_2 == 48;
    goto L34;

  anon16_Then:
    assume {:partition} 0 > FdoStatus;
    goto L10;
}



procedure {:origName "TrueffsPnpDeviceControl"} TrueffsPnpDeviceControl(actual_DeviceObject_16: int, actual_Irp_8: int) returns (Tmp_1520: int);
  modifies alloc, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, initDone;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsPnpDeviceControl"} TrueffsPnpDeviceControl(actual_DeviceObject_16: int, actual_Irp_8: int) returns (Tmp_1520: int)
{
  var {:pointer} Tmp_1521: int;
  var {:pointer} irpStack: int;
  var {:scalar} sdv_651: int;
  var {:scalar} devicePowerState: int;
  var {:scalar} processHeldRequests: int;
  var {:pointer} pdoExtension_1: int;
  var {:scalar} devicePowerState_1: int;
  var {:scalar} sdv_661: int;
  var {:scalar} sdv_662: int;
  var {:pointer} targetDeviceObject: int;
  var {:scalar} devicePowerState_2: int;
  var {:scalar} Fdo: int;
  var {:scalar} powerState: int;
  var {:pointer} deviceUsageCount: int;
  var {:pointer} deviceUsageCount_1: int;
  var {:pointer} devExtension: int;
  var {:scalar} devicePowerState_3: int;
  var {:pointer} Tmp_1522: int;
  var {:scalar} sdv_678: int;
  var {:scalar} sdv_684: int;
  var {:scalar} cIrql_1: int;
  var {:scalar} devicePowerState_4: int;
  var {:scalar} ioStatus: int;
  var {:scalar} status_31: int;
  var {:pointer} deviceExtension: int;
  var {:scalar} event_2: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_8: int;
  var boogieTmp: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_1404: int;
  var vslice_dummy_var_1405: int;
  var vslice_dummy_var_1406: int;
  var vslice_dummy_var_1407: int;
  var vslice_dummy_var_1408: int;
  var vslice_dummy_var_1409: int;
  var vslice_dummy_var_1410: int;
  var vslice_dummy_var_1411: int;
  var vslice_dummy_var_1412: int;
  var vslice_dummy_var_1413: int;
  var vslice_dummy_var_1414: int;
  var vslice_dummy_var_1415: int;
  var vslice_dummy_var_1416: int;
  var vslice_dummy_var_1417: int;
  var vslice_dummy_var_1418: int;
  var vslice_dummy_var_1419: int;

  anon0:
    call {:si_unique_call 1401} powerState := __HAVOC_malloc(8);
    call {:si_unique_call 1402} ioStatus := __HAVOC_malloc(12);
    call {:si_unique_call 1403} event_2 := __HAVOC_malloc(124);
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_8 := actual_Irp_8;
    call {:si_unique_call 1404} irpStack := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    pdoExtension_1 := 0;
    Fdo := 0;
    processHeldRequests := 0;
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc devExtension;
    assume {:nonnull} devExtension != 0;
    assume devExtension > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc deviceExtension;
    Fdo := 1;
    goto L24;

  L24:
    call {:si_unique_call 1405} KeInitializeEvent(event_2, 0, 0);
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 0;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 1;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 2;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 3;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 4;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 5;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 6;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 7;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 9;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 19;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 22;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 23;
    status_31 := 0;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume {:partition} Fdo == 0;
    call {:si_unique_call 1406} IoInvalidateDeviceRelations(0, 0);
    call {:si_unique_call 1407} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1408} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1409} sdv_KeReleaseSpinLock(0, cIrql_1);
    devicePowerState_4 := 4;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    call {:si_unique_call 1410} vslice_dummy_var_272 := PoRegisterDeviceForIdleDetection(0, 0, 0, devicePowerState_4);
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto L109;

  L109:
    call {:si_unique_call 1411} vslice_dummy_var_271 := TrueffsWmiDeregister(pdoExtension_1);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1412} sdv_IoCompleteRequest(0, 0);
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  L96:
    Tmp_1520 := status_31;
    goto LM2;

  LM2:
    return;

  anon272_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon271_Then:
    goto L109;

  anon270_Then:
    assume {:partition} Fdo != 0;
    call {:si_unique_call 1413} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1414} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1415} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L56;

  L56:
    call {:si_unique_call 1416} vslice_dummy_var_265 := TrueffsPnpDeviceControl_loop_L56(vslice_dummy_var_265);
    goto L56_last;

  L56_last:
    call {:si_unique_call 1530} vslice_dummy_var_265 := sdv_ExInterlockedRemoveHeadList(0, 0);
    goto anon188_Then, anon188_Else;

  anon188_Else:
    call {:si_unique_call 1417} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1418} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1419} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 1420} sdv_678 := KeReadStateSemaphore(0);
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} sdv_678 != 0;
    goto L74;

  L74:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    call {:si_unique_call 1421} vslice_dummy_var_267 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 1422} vslice_dummy_var_268 := sdv_ObDereferenceObject(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto L75;

  L75:
    call {:si_unique_call 1423} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1404;
    call {:si_unique_call 1424} status_31 := sdv_IoCallDriver(vslice_dummy_var_1404, Irp_8);
    call {:si_unique_call 1425} vslice_dummy_var_269 := TrueffsStopRemoveDevice(deviceExtension);
    call {:si_unique_call 1426} vslice_dummy_var_270 := TrueffsDeleteSymblicLinks(deviceExtension);
    goto L96;

  anon190_Then:
    goto L75;

  anon189_Then:
    assume {:partition} sdv_678 == 0;
    call {:si_unique_call 1427} vslice_dummy_var_266 := KeReleaseSemaphore(0, 0, 1, 0);
    goto L74;

  anon188_Then:
    goto anon188_Then_dummy;

  anon188_Then_dummy:
    assume false;
    return;

  anon225_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] != 23;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} Fdo != 0;
    call {:si_unique_call 1428} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1405;
    call {:si_unique_call 1429} status_31 := sdv_IoCallDriver(vslice_dummy_var_1405, Irp_8);
    goto L96;

  anon184_Then:
    assume {:partition} Fdo == 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_31;
    call {:si_unique_call 1430} sdv_IoCompleteRequest(0, 0);
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon273_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon226_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 22;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} Fdo == 0;
    deviceUsageCount := 0;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} pdoExtension_1 != 0;
    assume {:nonnull} ioStatus != 0;
    assume ioStatus > 0;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    deviceUsageCount := CrashDumpPathCount__DEVICE_EXTENSION_HEADER(pdoExtension_1);
    goto L169;

  L169:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1406;
    call {:si_unique_call 1431} targetDeviceObject := IoGetAttachedDeviceReference(vslice_dummy_var_1406);
    assume {:nonnull} ioStatus != 0;
    assume ioStatus > 0;
    call {:si_unique_call 1432} status_31 := TrueffsSyncSendIrp(targetDeviceObject, irpStack, ioStatus);
    call {:si_unique_call 1433} vslice_dummy_var_273 := sdv_ObDereferenceObject(0);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} status_31 >= 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} deviceUsageCount != 0;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc vslice_dummy_var_1407;
    call {:si_unique_call 1434} sdv_IoAdjustPagingPathCount(0, vslice_dummy_var_1407);
    goto L184;

  L184:
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    devicePowerState := 4;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 1435} boogieTmp := PoRegisterDeviceForIdleDetection(0, -2, -2, devicePowerState);
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    havoc Tmp_1522;
    assume {:nonnull} Tmp_1522 != 0;
    assume Tmp_1522 > 0;
    goto L196;

  L196:
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 1436} vslice_dummy_var_291 := PoRequestPowerIrp(0, 2, powerState, 0, 0, 0);
    goto L182;

  L182:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1437} sdv_IoCompleteRequest(0, 0);
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon269_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon197_Then:
    goto L196;

  anon196_Then:
    goto L182;

  anon195_Then:
    assume {:partition} deviceUsageCount == 0;
    goto L184;

  anon194_Then:
    assume {:partition} 0 > status_31;
    goto L182;

  anon238_Then:
    deviceUsageCount := 0;
    goto L169;

  anon239_Then:
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    deviceUsageCount := HiberPathCount__DEVICE_EXTENSION_HEADER(pdoExtension_1);
    goto L169;

  anon268_Then:
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    deviceUsageCount := PagingPathCount__DEVICE_EXTENSION_HEADER(pdoExtension_1);
    goto L169;

  anon267_Then:
    assume {:partition} pdoExtension_1 == 0;
    status_31 := -1073741810;
    goto L182;

  anon187_Then:
    assume {:partition} Fdo != 0;
    deviceUsageCount_1 := 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    deviceUsageCount_1 := CrashDumpPathCount__DEVICE_EXTENSION_HEADER(deviceExtension);
    goto L131;

  L131:
    call {:si_unique_call 1438} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1408;
    call {:si_unique_call 1439} status_31 := TrueffsCallDriverSync(vslice_dummy_var_1408, Irp_8);
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} status_31 >= 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} deviceUsageCount_1 != 0;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc vslice_dummy_var_1409;
    call {:si_unique_call 1440} sdv_IoAdjustPagingPathCount(0, vslice_dummy_var_1409);
    goto L139;

  L139:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1441} sdv_IoCompleteRequest(0, 0);
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon265_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon193_Then:
    assume {:partition} deviceUsageCount_1 == 0;
    goto L139;

  anon192_Then:
    assume {:partition} 0 > status_31;
    goto L139;

  anon236_Then:
    deviceUsageCount_1 := 0;
    goto L131;

  anon237_Then:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    deviceUsageCount_1 := HiberPathCount__DEVICE_EXTENSION_HEADER(deviceExtension);
    goto L131;

  anon191_Then:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    deviceUsageCount_1 := PagingPathCount__DEVICE_EXTENSION_HEADER(deviceExtension);
    goto L131;

  anon264_Then:
    status_31 := -1073741661;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1442} sdv_IoCompleteRequest(0, 0);
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon266_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon227_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 19;
    call {:si_unique_call 1443} status_31 := TrueffsDeviceQueryId(DeviceObject_16, Irp_8, Fdo);
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon263_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon228_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 9;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} Fdo != 0;
    call {:si_unique_call 1444} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1410;
    call {:si_unique_call 1445} status_31 := sdv_IoCallDriver(vslice_dummy_var_1410, Irp_8);
    goto L96;

  anon186_Then:
    assume {:partition} Fdo == 0;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc vslice_dummy_var_1411;
    call {:si_unique_call 1446} status_31 := TrueffsDeviceQueryCapabilities(deviceExtension, vslice_dummy_var_1411);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1447} sdv_IoCompleteRequest(0, 0);
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon262_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon229_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 7;
    call {:si_unique_call 1448} status_31 := TrueffsQueryDeviceRelations(DeviceObject_16, Irp_8, Fdo);
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon261_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon230_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 6;
    status_31 := 0;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:partition} Fdo != 0;
    call {:si_unique_call 1449} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1412;
    call {:si_unique_call 1450} status_31 := sdv_IoCallDriver(vslice_dummy_var_1412, Irp_8);
    goto L236;

  L236:
    call {:si_unique_call 1451} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1452} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1453} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 1454} sdv_661 := KeReadStateSemaphore(0);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} sdv_661 == 0;
    call {:si_unique_call 1455} vslice_dummy_var_274 := KeReleaseSemaphore(0, 0, 1, 0);
    goto L96;

  anon198_Then:
    assume {:partition} sdv_661 != 0;
    goto L96;

  anon259_Then:
    assume {:partition} Fdo == 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1456} sdv_IoCompleteRequest(0, 0);
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:partition} yogi_error != 1;
    goto L236;

  anon260_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon231_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 5;
    status_31 := 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:partition} Fdo != 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    goto L258;

  L258:
    status_31 := -1073741823;
    goto L259;

  L259:
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} status_31 >= 0;
    call {:si_unique_call 1457} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1458} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1459} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} Fdo != 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    call {:si_unique_call 1460} vslice_dummy_var_275 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L271;

  L271:
    call {:si_unique_call 1461} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1413;
    call {:si_unique_call 1462} status_31 := sdv_IoCallDriver(vslice_dummy_var_1413, Irp_8);
    goto L96;

  anon204_Then:
    goto L271;

  anon203_Then:
    assume {:partition} Fdo == 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1463} sdv_IoCompleteRequest(0, 0);
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon257_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon202_Then:
    assume {:partition} 0 > status_31;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1464} sdv_IoCompleteRequest(0, 0);
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon258_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon200_Then:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto L259;

  anon201_Then:
    goto L258;

  anon256_Then:
    assume {:partition} Fdo == 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto L290;

  L290:
    status_31 := -1073741823;
    goto L259;

  anon199_Then:
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    goto L290;

  anon205_Then:
    goto L259;

  anon232_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 4;
    status_31 := 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:partition} Fdo == 0;
    devicePowerState_2 := 4;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    call {:si_unique_call 1465} vslice_dummy_var_277 := PoRegisterDeviceForIdleDetection(0, 0, 0, devicePowerState_2);
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto L314;

  L314:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1466} sdv_IoCompleteRequest(0, 0);
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon255_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon254_Then:
    goto L314;

  anon253_Then:
    assume {:partition} Fdo != 0;
    call {:si_unique_call 1467} vslice_dummy_var_276 := TrueffsStopRemoveDevice(deviceExtension);
    call {:si_unique_call 1468} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1414;
    call {:si_unique_call 1469} status_31 := sdv_IoCallDriver(vslice_dummy_var_1414, Irp_8);
    call {:si_unique_call 1470} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1471} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1472} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L96;

  anon233_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 3;
    status_31 := 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} Fdo != 0;
    call {:si_unique_call 1473} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1415;
    call {:si_unique_call 1474} status_31 := sdv_IoCallDriver(vslice_dummy_var_1415, Irp_8);
    goto L331;

  L331:
    call {:si_unique_call 1475} sdv_651 := KeReadStateSemaphore(0);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} sdv_651 == 0;
    call {:si_unique_call 1476} vslice_dummy_var_278 := KeReleaseSemaphore(0, 0, 1, 0);
    goto L96;

  anon206_Then:
    assume {:partition} sdv_651 != 0;
    goto L96;

  anon251_Then:
    assume {:partition} Fdo == 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1477} sdv_IoCompleteRequest(0, 0);
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:partition} yogi_error != 1;
    goto L331;

  anon252_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon234_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 2;
    status_31 := 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:partition} Fdo != 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto L348;

  L348:
    call {:si_unique_call 1478} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1416;
    call {:si_unique_call 1479} status_31 := sdv_IoCallDriver(vslice_dummy_var_1416, Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    call {:si_unique_call 1480} IoDeleteDevice(0);
    goto L356;

  L356:
    call {:si_unique_call 1481} vslice_dummy_var_279 := TrueffsDeleteSymblicLinks(deviceExtension);
    call {:si_unique_call 1482} IoDetachDevice(0);
    call {:si_unique_call 1483} IoDeleteDevice(0);
    goto L96;

  anon209_Then:
    goto L356;

  anon208_Then:
    call {:si_unique_call 1484} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1485} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1486} sdv_KeReleaseSpinLock(0, cIrql_1);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    call {:si_unique_call 1487} vslice_dummy_var_280 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L374;

  L374:
    call {:si_unique_call 1488} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1489} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1490} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L386;

  L386:
    call {:si_unique_call 1491} vslice_dummy_var_281 := TrueffsPnpDeviceControl_loop_L386(vslice_dummy_var_281);
    goto L386_last;

  L386_last:
    call {:si_unique_call 1531} vslice_dummy_var_281 := sdv_ExInterlockedRemoveHeadList(0, 0);
    goto anon211_Then, anon211_Else;

  anon211_Else:
    call {:si_unique_call 1492} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1493} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1494} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 1495} sdv_662 := KeReadStateSemaphore(0);
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} sdv_662 != 0;
    goto L404;

  L404:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    call {:si_unique_call 1496} vslice_dummy_var_284 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 1497} vslice_dummy_var_285 := sdv_ObDereferenceObject(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto L405;

  L405:
    call {:si_unique_call 1498} vslice_dummy_var_283 := TrueffsStopRemoveDevice(deviceExtension);
    goto L348;

  anon213_Then:
    goto L405;

  anon212_Then:
    assume {:partition} sdv_662 == 0;
    call {:si_unique_call 1499} vslice_dummy_var_282 := KeReleaseSemaphore(0, 0, 1, 0);
    goto L404;

  anon211_Then:
    goto anon211_Then_dummy;

  anon211_Then_dummy:
    assume false;
    return;

  anon210_Then:
    goto L374;

  anon248_Then:
    assume {:partition} Fdo == 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    call {:si_unique_call 1500} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1501} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1502} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L429;

  L429:
    call {:si_unique_call 1503} vslice_dummy_var_286 := TrueffsPnpDeviceControl_loop_L429(vslice_dummy_var_286);
    goto L429_last;

  L429_last:
    call {:si_unique_call 1532} vslice_dummy_var_286 := sdv_ExInterlockedRemoveHeadList(0, 0);
    goto anon214_Then, anon214_Else;

  anon214_Else:
    devicePowerState_3 := 4;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    call {:si_unique_call 1504} vslice_dummy_var_288 := PoRegisterDeviceForIdleDetection(0, 0, 0, devicePowerState_3);
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto L435;

  L435:
    call {:si_unique_call 1505} vslice_dummy_var_287 := TrueffsWmiDeregister(pdoExtension_1);
    goto L416;

  L416:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1506} sdv_IoCompleteRequest(0, 0);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon249_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon250_Then:
    goto L435;

  anon214_Then:
    goto anon214_Then_dummy;

  anon214_Then_dummy:
    assume false;
    return;

  anon207_Then:
    goto L416;

  anon235_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 1;
    status_31 := 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} Fdo != 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto L446;

  L446:
    status_31 := -1073741823;
    goto L447;

  L447:
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} status_31 >= 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} Fdo != 0;
    call {:si_unique_call 1507} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1417;
    call {:si_unique_call 1508} status_31 := sdv_IoCallDriver(vslice_dummy_var_1417, Irp_8);
    goto L96;

  anon219_Then:
    assume {:partition} Fdo == 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1509} sdv_IoCompleteRequest(0, 0);
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon246_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon218_Then:
    assume {:partition} 0 > status_31;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1510} sdv_IoCompleteRequest(0, 0);
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon247_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon216_Then:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    goto L447;

  anon217_Then:
    goto L446;

  anon245_Then:
    assume {:partition} Fdo == 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    goto L467;

  L467:
    status_31 := -1073741823;
    goto L447;

  anon215_Then:
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    goto L467;

  anon220_Then:
    goto L447;

  anon183_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] == 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} Fdo != 0;
    call {:si_unique_call 1511} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1512} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    processHeldRequests := 1;
    goto L474;

  L474:
    call {:si_unique_call 1513} sdv_KeReleaseSpinLock(0, cIrql_1);
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc vslice_dummy_var_1418;
    call {:si_unique_call 1514} status_31 := TrueffsStartDevice(deviceExtension, vslice_dummy_var_1418, 1);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} status_31 >= 0;
    call {:si_unique_call 1515} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_8);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_1419;
    call {:si_unique_call 1516} status_31 := TrueffsCallDriverSync(vslice_dummy_var_1419, Irp_8);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} status_31 >= 0;
    call {:si_unique_call 1517} status_31 := TrueffsMountMedia(deviceExtension);
    call {:si_unique_call 1518} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1519} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1520} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} processHeldRequests != 0;
    call {:si_unique_call 1521} sdv_684 := KeReadStateSemaphore(0);
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} sdv_684 == 0;
    call {:si_unique_call 1522} vslice_dummy_var_289 := KeReleaseSemaphore(0, 0, 1, 0);
    goto L483;

  L483:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1523} sdv_IoCompleteRequest(0, 0);
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon242_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon224_Then:
    assume {:partition} sdv_684 != 0;
    goto L483;

  anon223_Then:
    assume {:partition} processHeldRequests == 0;
    goto L483;

  anon222_Then:
    assume {:partition} 0 > status_31;
    goto L483;

  anon221_Then:
    assume {:partition} 0 > status_31;
    goto L483;

  anon241_Then:
    goto L474;

  anon185_Then:
    assume {:partition} Fdo == 0;
    status_31 := 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    devicePowerState_1 := 4;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 1524} boogieTmp := PoRegisterDeviceForIdleDetection(0, -1, -1, devicePowerState_1);
    goto L518;

  L518:
    call {:si_unique_call 1525} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    call {:si_unique_call 1526} sdv_KeAcquireSpinLock(0, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    havoc cIrql_1;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1527} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 1528} vslice_dummy_var_290 := TrueffsWmiRegister(pdoExtension_1);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 1529} sdv_IoCompleteRequest(0, 0);
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon244_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon243_Then:
    goto L518;

  anon240_Then:
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc pdoExtension_1;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    havoc deviceExtension;
    goto L24;
}



procedure {:origName "TrueffsGetParameterFromServiceSubKey"} TrueffsGetParameterFromServiceSubKey(actual_DriverObject_2: int, actual_ParameterName: int, actual_ParameterType: int, actual_Read: int, actual_ParameterValue: int, actual_ParameterValueWriteSize: int) returns (Tmp_1523: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1523 == 0 || Tmp_1523 == -1073741823 || Tmp_1523 == -1073741790 || Tmp_1523 == -1073741816;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsGetParameterFromServiceSubKey"} TrueffsGetParameterFromServiceSubKey(actual_DriverObject_2: int, actual_ParameterName: int, actual_ParameterType: int, actual_Read: int, actual_ParameterValue: int, actual_ParameterValueWriteSize: int) returns (Tmp_1523: int)
{
  var {:pointer} subServiceKey: int;
  var {:pointer} queryTable: int;
  var {:scalar} unicodeParameterName: int;
  var {:scalar} status_32: int;
  var {:scalar} subKeyPath: int;
  var {:pointer} DriverObject_2: int;
  var {:pointer} ParameterName: int;
  var {:scalar} ParameterType: int;
  var {:scalar} Read: int;
  var {:pointer} ParameterValue: int;
  var {:scalar} ParameterValueWriteSize: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;

  anon0:
    call {:si_unique_call 1533} vslice_dummy_var_292 := __HAVOC_malloc(12);
    call {:si_unique_call 1534} unicodeParameterName := __HAVOC_malloc(12);
    call {:si_unique_call 1535} subKeyPath := __HAVOC_malloc(12);
    DriverObject_2 := actual_DriverObject_2;
    ParameterName := actual_ParameterName;
    ParameterType := actual_ParameterType;
    Read := actual_Read;
    ParameterValue := actual_ParameterValue;
    ParameterValueWriteSize := actual_ParameterValueWriteSize;
    call {:si_unique_call 1536} vslice_dummy_var_293 := __HAVOC_malloc(200);
    call {:si_unique_call 1537} queryTable := __HAVOC_malloc(56);
    call {:si_unique_call 1538} vslice_dummy_var_294 := __HAVOC_malloc(44);
    call {:si_unique_call 1539} sdv_RtlZeroMemory(0, ParameterValueWriteSize);
    call {:si_unique_call 1540} vslice_dummy_var_295 := corral_nondet();
    call {:si_unique_call 1541} RtlInitAnsiString(0, 0);
    call {:si_unique_call 1542} status_32 := RtlAnsiStringToUnicodeString(0, 0, 1);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} status_32 >= 0;
    call {:si_unique_call 1543} subServiceKey := TrueffsOpenServiceSubKey(DriverObject_2, subKeyPath);
    call {:si_unique_call 1544} RtlFreeUnicodeString(0);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} subServiceKey != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Read != 0;
    assume {:nonnull} queryTable != 0;
    assume queryTable > 0;
    assume {:nonnull} queryTable != 0;
    assume queryTable > 0;
    assume {:nonnull} queryTable != 0;
    assume queryTable > 0;
    assume {:nonnull} queryTable != 0;
    assume queryTable > 0;
    assume {:nonnull} queryTable != 0;
    assume queryTable > 0;
    assume {:nonnull} queryTable != 0;
    assume queryTable > 0;
    assume {:nonnull} queryTable != 0;
    assume queryTable > 0;
    call {:si_unique_call 1545} status_32 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    goto L52;

  L52:
    call {:si_unique_call 1546} TrueffsCloseServiceSubKey(subServiceKey);
    goto L27;

  L27:
    Tmp_1523 := status_32;
    return;

  anon9_Then:
    assume {:partition} Read == 0;
    call {:si_unique_call 1547} RtlInitUnicodeString(unicodeParameterName, ParameterName);
    call {:si_unique_call 1548} status_32 := ZwSetValueKey(0, 0, 0, ParameterType, 0, ParameterValueWriteSize);
    goto L52;

  anon8_Then:
    assume {:partition} subServiceKey == 0;
    goto L27;

  anon7_Then:
    assume {:partition} 0 > status_32;
    goto L27;
}



procedure {:origName "TrueffsCheckDiskOnChip"} TrueffsCheckDiskOnChip(actual_InterfaceType: int, actual_BusNumber: int, actual_StartSearchAddress: int, actual_WindowSize: int, actual_WindowBase: int, actual_AddressSpace: int) returns (Tmp_1527: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1527 == 0 || Tmp_1527 == -1073741823 || Tmp_1527 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsCheckDiskOnChip"} TrueffsCheckDiskOnChip(actual_InterfaceType: int, actual_BusNumber: int, actual_StartSearchAddress: int, actual_WindowSize: int, actual_WindowBase: int, actual_AddressSpace: int) returns (Tmp_1527: int)
{
  var {:pointer} SD1: int;
  var {:scalar} chipId_3: int;
  var {:scalar} DOCAddressMemoryBase: int;
  var {:scalar} toggle2_2: int;
  var {:dopa} {:scalar} DOCAddressSpace: int;
  var {:scalar} Tmp_1: int;
  var {:scalar} status_33: int;
  var {:pointer} DOCAddressBase: int;
  var {:scalar} InterfaceType: int;
  var {:scalar} BusNumber: int;
  var {:scalar} StartSearchAddress: int;
  var {:scalar} WindowSize: int;
  var {:pointer} WindowBase: int;
  var {:pointer} AddressSpace: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_1420: int;
  var vslice_dummy_var_1421: int;

  anon0:
    call {:si_unique_call 1549} vslice_dummy_var_296 := __HAVOC_malloc(20);
    call {:si_unique_call 1550} DOCAddressMemoryBase := __HAVOC_malloc(20);
    call {:si_unique_call 1551} DOCAddressSpace := __HAVOC_malloc(4);
    call {:si_unique_call 1552} Tmp_1 := __HAVOC_malloc(20);
    call {:si_unique_call 1553} DOCAddressBase := __HAVOC_malloc(4);
    InterfaceType := actual_InterfaceType;
    BusNumber := actual_BusNumber;
    StartSearchAddress := actual_StartSearchAddress;
    WindowSize := actual_WindowSize;
    WindowBase := actual_WindowBase;
    AddressSpace := actual_AddressSpace;
    assume {:nonnull} DOCAddressSpace != 0;
    assume DOCAddressSpace > 0;
    assume {:nonnull} DOCAddressBase != 0;
    assume DOCAddressBase > 0;
    call {:si_unique_call 1554} SD1 := RtlConvertLongToLargeInteger(StartSearchAddress);
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    call {:si_unique_call 1555} status_33 := TrueffsTranslateAddress(InterfaceType, BusNumber, Tmp_1, WindowSize, DOCAddressSpace, DOCAddressBase, DOCAddressMemoryBase);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_33 >= 0;
    assume {:nonnull} DOCAddressBase != 0;
    assume DOCAddressBase > 0;
    call {:si_unique_call 1556} chipId_3 := corral_nondet();
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} chipId_3 == 32;
    goto L43;

  L43:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} chipId_3 == 48;
    call {:si_unique_call 1557} vslice_dummy_var_298 := corral_nondet();
    call {:si_unique_call 1558} vslice_dummy_var_299 := corral_nondet();
    call {:si_unique_call 1559} toggle2_2 := corral_nondet();
    goto L55;

  L55:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} BAND(toggle2_2, 4) != 0;
    assume {:nonnull} DOCAddressBase != 0;
    assume DOCAddressBase > 0;
    assume {:nonnull} WindowBase != 0;
    assume WindowBase > 0;
    assume {:nonnull} AddressSpace != 0;
    assume AddressSpace > 0;
    assume {:nonnull} DOCAddressSpace != 0;
    assume DOCAddressSpace > 0;
    Tmp_1527 := 0;
    goto L1;

  L1:
    return;

  anon19_Then:
    assume {:partition} BAND(toggle2_2, 4) == 0;
    goto L56;

  L56:
    assume {:nonnull} DOCAddressBase != 0;
    assume DOCAddressBase > 0;
    call {:si_unique_call 1560} chipId_3 := corral_nondet();
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} chipId_3 == 64;
    call {:si_unique_call 1561} vslice_dummy_var_300 := corral_nondet();
    call {:si_unique_call 1562} vslice_dummy_var_301 := corral_nondet();
    call {:si_unique_call 1563} toggle2_2 := corral_nondet();
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} BAND(toggle2_2, 4) != 0;
    assume {:nonnull} DOCAddressBase != 0;
    assume DOCAddressBase > 0;
    assume {:nonnull} WindowBase != 0;
    assume WindowBase > 0;
    assume {:nonnull} AddressSpace != 0;
    assume AddressSpace > 0;
    assume {:nonnull} DOCAddressSpace != 0;
    assume DOCAddressSpace > 0;
    Tmp_1527 := 0;
    goto L1;

  anon21_Then:
    assume {:partition} BAND(toggle2_2, 4) == 0;
    goto L77;

  L77:
    assume {:nonnull} DOCAddressBase != 0;
    assume DOCAddressBase > 0;
    assume {:nonnull} DOCAddressSpace != 0;
    assume DOCAddressSpace > 0;
    havoc vslice_dummy_var_1420;
    havoc vslice_dummy_var_1421;
    call {:si_unique_call 1564} TrueffsFreeTranslatedAddress(vslice_dummy_var_1420, WindowSize, vslice_dummy_var_1421);
    Tmp_1527 := -1073741823;
    goto L1;

  anon20_Then:
    assume {:partition} chipId_3 != 64;
    goto L77;

  anon18_Then:
    assume {:partition} chipId_3 != 48;
    call {:si_unique_call 1565} vslice_dummy_var_297 := corral_nondet();
    call {:si_unique_call 1566} vslice_dummy_var_302 := corral_nondet();
    call {:si_unique_call 1567} toggle2_2 := corral_nondet();
    goto L55;

  anon16_Then:
    assume {:partition} chipId_3 != 32;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} chipId_3 != 48;
    goto L56;

  anon17_Then:
    assume {:partition} chipId_3 == 48;
    goto L43;

  anon15_Then:
    assume {:partition} 0 > status_33;
    Tmp_1527 := status_33;
    goto L1;
}



procedure {:origName "TrueffsScsiRequests"} TrueffsScsiRequests(actual_DeviceObject_17: int, actual_Irp_9: int) returns (Tmp_1529: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsScsiRequests"} TrueffsScsiRequests(actual_DeviceObject_17: int, actual_Irp_9: int) returns (Tmp_1529: int)
{
  var {:pointer} irpStack_1: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} devExtension_1: int;
  var {:pointer} Tmp_1530: int;
  var {:scalar} cIrql_2: int;
  var {:pointer} srb: int;
  var {:scalar} status_34: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} DeviceObject_17: int;
  var {:pointer} Irp_9: int;

  anon0:
    DeviceObject_17 := actual_DeviceObject_17;
    Irp_9 := actual_Irp_9;
    call {:si_unique_call 1568} irpStack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    havoc devExtension_1;
    assume {:nonnull} devExtension_1 != 0;
    assume devExtension_1 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    havoc pdoExtension_2;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc deviceExtension_1;
    goto L17;

  L17:
    assume {:nonnull} irpStack_1 != 0;
    assume irpStack_1 > 0;
    havoc srb;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    status_34 := -1073741632;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 1569} sdv_IoCompleteRequest(0, 0);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1529 := status_34;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon40_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon39_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1570} Tmp_1530 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1530 != 0;
    assume Tmp_1530 > 0;
    call {:si_unique_call 1571} sdv_KeAcquireSpinLock(0, Tmp_1530);
    assume {:nonnull} Tmp_1530 != 0;
    assume Tmp_1530 > 0;
    havoc cIrql_2;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    status_34 := 17;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L35;

  L35:
    call {:si_unique_call 1572} sdv_KeReleaseSpinLock(0, cIrql_2);
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 1573} sdv_IoCompleteRequest(0, 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1529 := status_34;
    goto L1;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    status_34 := 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L35;

  anon31_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1574} Tmp_1530 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1530 != 0;
    assume Tmp_1530 > 0;
    call {:si_unique_call 1575} sdv_KeAcquireSpinLock(0, Tmp_1530);
    assume {:nonnull} Tmp_1530 != 0;
    assume Tmp_1530 > 0;
    havoc cIrql_2;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1576} sdv_KeReleaseSpinLock(0, cIrql_2);
    status_34 := 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 1577} sdv_IoCompleteRequest(0, 0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1529 := status_34;
    goto L1;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L62;

  L62:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    status_34 := 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 1578} sdv_IoCompleteRequest(0, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1529 := 0;
    goto L1;

  anon43_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    status_34 := 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 1579} sdv_IoCompleteRequest(0, 0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1529 := status_34;
    goto L1;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    status_34 := -1073741637;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 1580} sdv_IoCompleteRequest(0, 0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1529 := status_34;
    goto L1;

  anon45_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    call {:si_unique_call 1581} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 1582} IoStartPacket(0, 0, 0, 0);
    Tmp_1529 := 259;
    goto L1;

  anon35_Then:
    goto L62;

  anon38_Then:
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    havoc deviceExtension_1;
    goto L17;
}



procedure {:origName "TrueffsSetFdoPowerState"} TrueffsSetFdoPowerState(actual_DeviceObject_18: int, actual_Irp_10: int) returns (Tmp_1531: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsSetFdoPowerState"} TrueffsSetFdoPowerState(actual_DeviceObject_18: int, actual_Irp_10: int) returns (Tmp_1531: int)
{
  var {:pointer} SD3: int;
  var {:pointer} irpStack_2: int;
  var {:pointer} sdv_714: int;
  var {:pointer} context: int;
  var {:scalar} passItDown: int;
  var {:scalar} powerState_1: int;
  var {:scalar} sdv_3: int;
  var {:pointer} fdoExtension_2: int;
  var {:scalar} status_35: int;
  var {:pointer} DeviceObject_18: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_1422: int;

  anon0:
    call {:si_unique_call 1583} powerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 1584} sdv_3 := __HAVOC_malloc(8);
    DeviceObject_18 := actual_DeviceObject_18;
    Irp_10 := actual_Irp_10;
    status_35 := 0;
    context := 0;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc fdoExtension_2;
    call {:si_unique_call 1585} sdv_714 := ExAllocatePoolWithTag(0, 8, -463051180);
    context := sdv_714;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} context != 0;
    call {:si_unique_call 1586} sdv_RtlZeroMemory(0, 8);
    call {:si_unique_call 1587} irpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    passItDown := 1;
    assume {:nonnull} context != 0;
    assume context > 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    assume {:nonnull} context != 0;
    assume context > 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    assume {:nonnull} context != 0;
    assume context > 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc vslice_dummy_var_1422;
    call {:si_unique_call 1588} SD3 := PoSetPowerState(0, 1, vslice_dummy_var_1422);
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    goto L34;

  L34:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_35 >= 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} passItDown != 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    call {:si_unique_call 1589} vslice_dummy_var_303 := KeCancelTimer(0);
    goto L41;

  L41:
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} context != 0;
    assume context > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto L63;

  L63:
    assume {:nonnull} context != 0;
    assume context > 0;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    call {:si_unique_call 1590} status_35 := PoRequestPowerIrp(0, 2, powerState_1, li2bplFunctionConstant158, 0, 0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_35 >= 0;
    status_35 := 259;
    goto L69;

  L69:
    call {:si_unique_call 1591} sdv_ExFreePool(0);
    goto L59;

  L59:
    Tmp_1531 := status_35;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon44_Then:
    assume {:partition} 0 > status_35;
    goto L69;

  anon43_Then:
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto L63;

  anon40_Then:
    call {:si_unique_call 1592} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_10);
    call {:si_unique_call 1593} sdv_IoSetCompletionRoutine(Irp_10, li2bplFunctionConstant157, context, 1, 1, 1);
    call {:si_unique_call 1594} status_35 := PoCallDriver(0, Irp_10);
    goto L59;

  anon42_Then:
    goto L41;

  anon41_Then:
    goto L41;

  anon39_Then:
    goto L41;

  anon38_Then:
    assume {:partition} passItDown == 0;
    goto L38;

  L38:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    call {:si_unique_call 1595} PoStartNextPowerIrp(0);
    call {:si_unique_call 1596} sdv_IoCompleteRequest(0, 0);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} context != 0;
    call {:si_unique_call 1597} sdv_ExFreePool(0);
    goto L81;

  L81:
    Tmp_1531 := status_35;
    goto L1;

  anon45_Then:
    assume {:partition} context == 0;
    goto L81;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    assume {:partition} 0 > status_35;
    goto L38;

  anon36_Then:
    goto L34;

  anon35_Then:
    passItDown := 0;
    goto L34;

  anon34_Then:
    status_35 := -1073741808;
    goto L34;

  anon47_Then:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    passItDown := 0;
    goto L34;

  anon33_Then:
    goto L34;

  anon46_Then:
    assume {:partition} context == 0;
    status_35 := -1073741670;
    goto L34;
}



procedure {:origName "TrueffsSetPdoDevicePowerState"} TrueffsSetPdoDevicePowerState(actual_Pdo: int, actual_Irp_11: int) returns (Tmp_1533: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsSetPdoDevicePowerState"} TrueffsSetPdoDevicePowerState(actual_Pdo: int, actual_Irp_11: int) returns (Tmp_1533: int)
{
  var {:pointer} SD2_1: int;
  var {:pointer} irpStack_3: int;
  var {:pointer} Tmp_1536: int;
  var {:pointer} pdoExtension_3: int;
  var {:scalar} setPowerRequest: int;
  var {:pointer} Tmp_1538: int;
  var {:scalar} newPowerState: int;
  var {:pointer} Tmp_1539: int;
  var {:scalar} powerUpParent: int;
  var {:scalar} powerUp: int;
  var {:scalar} sdv_2: int;
  var {:scalar} newDevicePowerState: int;
  var {:scalar} sdv_722: int;
  var {:pointer} Tmp_1543: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} status_36: int;
  var {:pointer} Tmp_1544: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} Tmp_1545: int;
  var {:pointer} Pdo: int;
  var {:pointer} Irp_11: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_1423: int;

  anon0:
    call {:si_unique_call 1598} newPowerState := __HAVOC_malloc(8);
    call {:si_unique_call 1599} sdv_2 := __HAVOC_malloc(8);
    Pdo := actual_Pdo;
    Irp_11 := actual_Irp_11;
    assume {:nonnull} Pdo != 0;
    assume Pdo > 0;
    havoc pdoExtension_3;
    call {:si_unique_call 1600} irpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    status_36 := 0;
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc newDevicePowerState;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc deviceExtension_2;
    setPowerRequest := 0;
    powerUp := 0;
    powerUpParent := 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_1533 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon41_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} newPowerState != 0;
    assume newPowerState > 0;
    call {:si_unique_call 1601} SD2_1 := PoSetPowerState(0, 1, newPowerState);
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    goto L26;

  L26:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} newDevicePowerState == 1;
    goto L33;

  L33:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    powerUpParent := 1;
    setPowerRequest := 1;
    powerUp := 1;
    goto L34;

  L34:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} setPowerRequest != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_36 >= 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} powerUpParent != 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1423;
    call {:si_unique_call 1602} status_36 := TrueffsFdoChildRequestPowerUp(vslice_dummy_var_1423, pdoExtension_3, Irp_11);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto L38;

  L38:
    Tmp_1533 := status_36;
    goto L1;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon35_Then:
    assume {:partition} powerUpParent == 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} powerUp != 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc Tmp_1539;
    assume {:nonnull} Tmp_1539 != 0;
    assume Tmp_1539 > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 1603} Tmp_1545 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1545 != 0;
    assume Tmp_1545 > 0;
    call {:si_unique_call 1604} sdv_KeAcquireSpinLock(0, Tmp_1545);
    assume {:nonnull} Tmp_1545 != 0;
    assume Tmp_1545 > 0;
    havoc cIrql_3;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc Tmp_1536;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc Tmp_1544;
    assume {:nonnull} Tmp_1536 != 0;
    assume Tmp_1536 > 0;
    assume {:nonnull} Tmp_1544 != 0;
    assume Tmp_1544 > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 1605} sdv_KeReleaseSpinLock(0, cIrql_3);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 1606} sdv_722 := KeReadStateSemaphore(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_722 == 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 1607} vslice_dummy_var_304 := KeReleaseSemaphore(0, 0, 1, 0);
    goto L38;

  anon37_Then:
    assume {:partition} sdv_722 != 0;
    goto L38;

  anon36_Then:
    assume {:partition} powerUp == 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 1608} Tmp_1545 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1545 != 0;
    assume Tmp_1545 > 0;
    call {:si_unique_call 1609} sdv_KeAcquireSpinLock(0, Tmp_1545);
    assume {:nonnull} Tmp_1545 != 0;
    assume Tmp_1545 > 0;
    havoc cIrql_3;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc Tmp_1543;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc Tmp_1538;
    assume {:nonnull} Tmp_1538 != 0;
    assume Tmp_1538 > 0;
    assume {:nonnull} Tmp_1543 != 0;
    assume Tmp_1543 > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 1610} sdv_KeReleaseSpinLock(0, cIrql_3);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 1611} vslice_dummy_var_305 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L38;

  anon38_Then:
    goto L38;

  anon34_Then:
    assume {:partition} 0 > status_36;
    goto L38;

  anon33_Then:
    assume {:partition} setPowerRequest == 0;
    goto L38;

  anon32_Then:
    goto L34;

  anon30_Then:
    assume {:partition} newDevicePowerState != 1;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} newDevicePowerState != 2;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} newDevicePowerState != 3;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    setPowerRequest := 1;
    goto L34;

  anon40_Then:
    goto L34;

  anon39_Then:
    assume {:partition} newDevicePowerState == 3;
    goto L33;

  anon31_Then:
    assume {:partition} newDevicePowerState == 2;
    goto L33;

  anon29_Then:
    goto L26;
}



procedure {:origName "TrueffsDeviceQueryCapabilities"} TrueffsDeviceQueryCapabilities(actual_deviceExtension_3: int, actual_Capabilities: int) returns (Tmp_1547: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1547 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsDeviceQueryCapabilities"} TrueffsDeviceQueryCapabilities(actual_deviceExtension_3: int, actual_Capabilities: int) returns (Tmp_1547: int)
{
  var {:pointer} Tmp_1549: int;
  var {:pointer} Tmp_1550: int;
  var {:pointer} Tmp_1551: int;
  var {:pointer} Tmp_1552: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Capabilities: int;

  anon0:
    deviceExtension_3 := actual_deviceExtension_3;
    Capabilities := actual_Capabilities;
    call {:si_unique_call 1612} Tmp_1549 := __HAVOC_malloc(28);
    call {:si_unique_call 1613} Tmp_1550 := __HAVOC_malloc(28);
    call {:si_unique_call 1614} Tmp_1551 := __HAVOC_malloc(28);
    call {:si_unique_call 1615} Tmp_1552 := __HAVOC_malloc(28);
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    havoc Tmp_1552;
    assume {:nonnull} Tmp_1552 != 0;
    assume Tmp_1552 > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    havoc Tmp_1551;
    assume {:nonnull} Tmp_1551 != 0;
    assume Tmp_1551 > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    havoc Tmp_1550;
    assume {:nonnull} Tmp_1550 != 0;
    assume Tmp_1550 > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    havoc Tmp_1549;
    assume {:nonnull} Tmp_1549 != 0;
    assume Tmp_1549 > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    assume {:nonnull} Capabilities != 0;
    assume Capabilities > 0;
    Tmp_1547 := 0;
    return;
}



procedure {:origName "TrueffsCallDriverSync"} TrueffsCallDriverSync(actual_DeviceObject_19: int, actual_Irp_12: int) returns (Tmp_1553: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsCallDriverSync"} TrueffsCallDriverSync(actual_DeviceObject_19: int, actual_Irp_12: int) returns (Tmp_1553: int)
{
  var {:scalar} status_37: int;
  var {:scalar} event_3: int;
  var {:pointer} DeviceObject_19: int;
  var {:pointer} Irp_12: int;
  var vslice_dummy_var_306: int;

  anon0:
    call {:si_unique_call 1616} event_3 := __HAVOC_malloc(124);
    DeviceObject_19 := actual_DeviceObject_19;
    Irp_12 := actual_Irp_12;
    call {:si_unique_call 1617} sdv_do_paged_code_check();
    call {:si_unique_call 1618} KeInitializeEvent(event_3, 0, 0);
    call {:si_unique_call 1619} sdv_IoSetCompletionRoutine(Irp_12, li2bplFunctionConstant155, event_3, 1, 1, 1);
    call {:si_unique_call 1620} status_37 := sdv_IoCallDriver(DeviceObject_19, Irp_12);
    call {:si_unique_call 1621} vslice_dummy_var_306 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    havoc status_37;
    Tmp_1553 := status_37;
    return;
}



procedure {:origName "TrueffsDeviceControl"} TrueffsDeviceControl(actual_DeviceObject_20: int, actual_Irp_13: int) returns (Tmp_1555: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsDeviceControl"} TrueffsDeviceControl(actual_DeviceObject_20: int, actual_Irp_13: int) returns (Tmp_1555: int)
{
  var {:pointer} irpStack_4: int;
  var {:pointer} pdoExtension_4: int;
  var {:scalar} Fdo_1: int;
  var {:pointer} devExtension_2: int;
  var {:pointer} dumpPointers: int;
  var {:pointer} pDiskGeometry: int;
  var {:pointer} sdv_749: int;
  var {:scalar} status_38: int;
  var {:pointer} dumpInitData: int;
  var {:pointer} deviceExtension_4: int;
  var {:pointer} DeviceObject_20: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_1424: int;
  var vslice_dummy_var_1425: int;
  var vslice_dummy_var_1426: int;
  var vslice_dummy_var_1427: int;
  var vslice_dummy_var_1428: int;
  var vslice_dummy_var_1429: int;
  var vslice_dummy_var_1430: int;
  var vslice_dummy_var_1431: int;
  var vslice_dummy_var_1432: int;
  var vslice_dummy_var_1433: int;

  anon0:
    DeviceObject_20 := actual_DeviceObject_20;
    Irp_13 := actual_Irp_13;
    call {:si_unique_call 1622} irpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_13);
    Fdo_1 := 0;
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc devExtension_2;
    assume {:nonnull} devExtension_2 != 0;
    assume devExtension_2 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc deviceExtension_4;
    Fdo_1 := 1;
    goto L24;

  L24:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc vslice_dummy_var_1424;
    call {:si_unique_call 1623} vslice_dummy_var_316 := DebugLogEvent(vslice_dummy_var_1424, 200);
    call {:si_unique_call 1624} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  L98:
    Tmp_1555 := status_38;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon78_Then:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc status_38;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 1625} sdv_IoCompleteRequest(0, 0);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L98;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    call {:si_unique_call 1626} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon80_Then:
    call {:si_unique_call 1627} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon81_Then:
    call {:si_unique_call 1628} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon82_Then:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc vslice_dummy_var_1425;
    call {:si_unique_call 1629} vslice_dummy_var_315 := DebugLogEvent(vslice_dummy_var_1425, 200);
    call {:si_unique_call 1630} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon83_Then:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc vslice_dummy_var_1426;
    call {:si_unique_call 1631} vslice_dummy_var_314 := DebugLogEvent(vslice_dummy_var_1426, 200);
    call {:si_unique_call 1632} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon84_Then:
    call {:si_unique_call 1633} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon85_Then:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc vslice_dummy_var_1427;
    call {:si_unique_call 1634} vslice_dummy_var_313 := DebugLogEvent(vslice_dummy_var_1427, 200);
    call {:si_unique_call 1635} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon86_Then:
    call {:si_unique_call 1636} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon87_Then:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc vslice_dummy_var_1428;
    call {:si_unique_call 1637} vslice_dummy_var_312 := DebugLogEvent(vslice_dummy_var_1428, 200);
    call {:si_unique_call 1638} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon88_Then:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc vslice_dummy_var_1429;
    call {:si_unique_call 1639} vslice_dummy_var_311 := DebugLogEvent(vslice_dummy_var_1429, 200);
    call {:si_unique_call 1640} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon89_Then:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc vslice_dummy_var_1430;
    call {:si_unique_call 1641} vslice_dummy_var_310 := DebugLogEvent(vslice_dummy_var_1430, 200);
    call {:si_unique_call 1642} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon90_Then:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc vslice_dummy_var_1431;
    call {:si_unique_call 1643} vslice_dummy_var_309 := DebugLogEvent(vslice_dummy_var_1431, 200);
    call {:si_unique_call 1644} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon91_Then:
    call {:si_unique_call 1645} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon92_Then:
    call {:si_unique_call 1646} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon93_Then:
    call {:si_unique_call 1647} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon94_Then:
    call {:si_unique_call 1648} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon95_Then:
    call {:si_unique_call 1649} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon96_Then:
    call {:si_unique_call 1650} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon97_Then:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc vslice_dummy_var_1432;
    call {:si_unique_call 1651} vslice_dummy_var_308 := DebugLogEvent(vslice_dummy_var_1432, 200);
    call {:si_unique_call 1652} status_38 := QueueIrpToThread(Irp_13, deviceExtension_4);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L98;

  anon98_Then:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc status_38;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 1653} sdv_IoCompleteRequest(0, 0);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto L98;

  anon109_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon108_Then:
    call {:si_unique_call 1654} status_38 := TrueffsQueryProperty(deviceExtension_4, Irp_13);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    goto L98;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon99_Then:
    pDiskGeometry := 0;
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc status_38;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 1655} sdv_IoCompleteRequest(0, 0);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} yogi_error != 1;
    goto L98;

  anon106_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc pDiskGeometry;
    assume {:nonnull} pDiskGeometry != 0;
    assume pDiskGeometry > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    assume {:nonnull} pDiskGeometry != 0;
    assume pDiskGeometry > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    assume {:nonnull} pDiskGeometry != 0;
    assume pDiskGeometry > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    assume {:nonnull} pDiskGeometry != 0;
    assume pDiskGeometry > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    assume {:nonnull} pDiskGeometry != 0;
    assume pDiskGeometry > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc status_38;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 1656} sdv_IoCompleteRequest(0, 0);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} yogi_error != 1;
    goto L98;

  anon107_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon101_Then:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc vslice_dummy_var_1433;
    call {:si_unique_call 1657} vslice_dummy_var_307 := DebugLogEvent(vslice_dummy_var_1433, 300);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} Fdo_1 != 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc status_38;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 1658} sdv_IoCompleteRequest(0, 0);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1555 := status_38;
    goto L1;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon75_Then:
    assume {:partition} Fdo_1 == 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc status_38;
    goto L227;

  L227:
    call {:si_unique_call 1659} sdv_IoCompleteRequest(0, 0);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} yogi_error != 1;
    goto L98;

  anon103_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    call {:si_unique_call 1660} sdv_749 := ExAllocatePoolWithTag(0, 4, -463051180);
    dumpInitData := sdv_749;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} dumpInitData != 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc dumpPointers;
    call {:si_unique_call 1661} sdv_RtlZeroMemory(0, 4);
    assume {:nonnull} dumpInitData != 0;
    assume dumpInitData > 0;
    assume {:nonnull} pdoExtension_4 != 0;
    assume pdoExtension_4 > 0;
    assume {:nonnull} dumpPointers != 0;
    assume dumpPointers > 0;
    assume {:nonnull} dumpPointers != 0;
    assume dumpPointers > 0;
    assume {:nonnull} dumpPointers != 0;
    assume dumpPointers > 0;
    assume {:nonnull} dumpPointers != 0;
    assume dumpPointers > 0;
    assume {:nonnull} dumpPointers != 0;
    assume dumpPointers > 0;
    assume {:nonnull} dumpPointers != 0;
    assume dumpPointers > 0;
    assume {:nonnull} dumpPointers != 0;
    assume dumpPointers > 0;
    assume {:nonnull} pdoExtension_4 != 0;
    assume pdoExtension_4 > 0;
    assume {:nonnull} dumpPointers != 0;
    assume dumpPointers > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc status_38;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto L227;

  anon104_Then:
    assume {:partition} dumpInitData == 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc status_38;
    goto L227;

  anon77_Then:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc status_38;
    goto L227;

  anon100_Then:
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc pdoExtension_4;
    assume {:nonnull} pdoExtension_4 != 0;
    assume pdoExtension_4 > 0;
    havoc deviceExtension_4;
    goto L24;
}



procedure {:origName "TrueffsGetDeviceTypeString"} TrueffsGetDeviceTypeString(actual_DeviceType_1: int) returns (Tmp_1557: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsGetDeviceTypeString"} TrueffsGetDeviceTypeString(actual_DeviceType_1: int) returns (Tmp_1557: int)
{
  var {:scalar} Tmp_1558: int;
  var {:scalar} DeviceType_1: int;

  anon0:
    DeviceType_1 := actual_DeviceType_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} 1 > DeviceType_1;
    Tmp_1558 := DeviceType_1;
    havoc Tmp_1557;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} DeviceType_1 >= 1;
    Tmp_1557 := 0;
    goto L1;
}



procedure {:origName "TrueffsStopRemoveDevice"} TrueffsStopRemoveDevice(actual_deviceExtension_5: int) returns (Tmp_1560: int);
  modifies alloc, initDone, LockDepth;
  free ensures {:va_keep} Tmp_1560 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsStopRemoveDevice"} TrueffsStopRemoveDevice(actual_deviceExtension_5: int) returns (Tmp_1560: int)
{
  var {:scalar} ioreq_22: int;
  var {:scalar} deviceIndex: int;
  var {:scalar} Tmp_1561: int;
  var {:scalar} Tmp_1562: int;
  var {:scalar} Tmp_1563: int;
  var {:scalar} Tmp_1564: int;
  var {:scalar} Tmp_1567: int;
  var {:scalar} Tmp_1568: int;
  var {:scalar} Tmp_1569: int;
  var {:pointer} deviceExtension_5: int;
  var boogieTmp: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_1434: int;
  var vslice_dummy_var_1435: int;
  var vslice_dummy_var_1436: int;

  anon0:
    call {:si_unique_call 1662} ioreq_22 := __HAVOC_malloc(24);
    deviceExtension_5 := actual_deviceExtension_5;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L7;

  L7:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} ioreq_22 != 0;
    assume ioreq_22 > 0;
    call {:si_unique_call 1663} vslice_dummy_var_317 := bdCall(813, ioreq_22);
    call {:si_unique_call 1664} deviceIndex := TrueffsGetInfoNumber(deviceExtension_5);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} 4 > deviceIndex;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L23;

  L23:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    Tmp_1562 := deviceIndex;
    call {:si_unique_call 1665} boogieTmp := corral_nondet();
    goto L25;

  L25:
    Tmp_1560 := 0;
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc Tmp_1564;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc Tmp_1563;
    Tmp_1568 := deviceIndex;
    goto L23;

  anon13_Then:
    assume {:partition} deviceIndex >= 4;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc vslice_dummy_var_1434;
    havoc vslice_dummy_var_1435;
    havoc vslice_dummy_var_1436;
    call {:si_unique_call 1666} TrueffsFreeTranslatedAddress(vslice_dummy_var_1434, vslice_dummy_var_1435, vslice_dummy_var_1436);
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc Tmp_1561;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc Tmp_1569;
    goto L25;

  anon11_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc Tmp_1567;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Tmp_1560 := 0;
    goto L1;

  anon15_Then:
    goto L7;

  anon12_Then:
    goto L7;
}



procedure {:origName "TrueffsDispatchSystemControl"} TrueffsDispatchSystemControl(actual_DeviceObject_21: int, actual_Irp_14: int) returns (Tmp_1570: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsDispatchSystemControl"} TrueffsDispatchSystemControl(actual_DeviceObject_21: int, actual_Irp_14: int) returns (Tmp_1570: int)
{
  var {:pointer} thisIrpSp: int;
  var {:pointer} devExtension_3: int;
  var {:scalar} status_39: int;
  var {:pointer} DeviceObject_21: int;
  var {:pointer} Irp_14: int;
  var vslice_dummy_var_1437: int;

  anon0:
    DeviceObject_21 := actual_DeviceObject_21;
    Irp_14 := actual_Irp_14;
    call {:si_unique_call 1667} thisIrpSp := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    havoc devExtension_3;
    assume {:nonnull} devExtension_3 != 0;
    assume devExtension_3 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 1668} sdv_IoSkipCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} devExtension_3 != 0;
    assume devExtension_3 > 0;
    havoc vslice_dummy_var_1437;
    call {:si_unique_call 1669} status_39 := sdv_IoCallDriver(vslice_dummy_var_1437, Irp_14);
    goto L22;

  L22:
    Tmp_1570 := status_39;
    goto LM2;

  LM2:
    return;

  anon10_Then:
    assume {:nonnull} thisIrpSp != 0;
    assume thisIrpSp > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 10 > Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(thisIrpSp)];
    call {:si_unique_call 1670} status_39 := TrueffsWmiSystemControl(DeviceObject_21, Irp_14);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto L22;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(thisIrpSp)] >= 10;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    havoc status_39;
    call {:si_unique_call 1671} sdv_IoCompleteRequest(0, 0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L22;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "TrueffsGetInfoNumber"} TrueffsGetInfoNumber(actual_deviceExtension_6: int) returns (Tmp_1572: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsGetInfoNumber"} TrueffsGetInfoNumber(actual_deviceExtension_6: int) returns (Tmp_1572: int)
{
  var {:scalar} i_14: int;
  var {:scalar} Tmp_1574: int;
  var {:pointer} deviceExtension_6: int;

  anon0:
    deviceExtension_6 := actual_deviceExtension_6;
    i_14 := 0;
    goto L6;

  L6:
    call {:si_unique_call 1672} i_14, Tmp_1574 := TrueffsGetInfoNumber_loop_L6(i_14, Tmp_1574, deviceExtension_6);
    goto L6_last;

  L6_last:
    assume {:CounterLoop 4} {:Counter "i_14"} true;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} 4 > i_14;
    Tmp_1574 := i_14;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    i_14 := i_14 + 1;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    assume false;
    return;

  anon6_Then:
    goto L7;

  L7:
    Tmp_1572 := i_14;
    return;

  anon5_Then:
    assume {:partition} i_14 >= 4;
    goto L7;
}



procedure {:origName "DeviceBuildBusId"} DeviceBuildBusId(actual_deviceExtension_7: int, actual_Fdo_2: int) returns (Tmp_1575: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "DeviceBuildBusId"} DeviceBuildBusId(actual_deviceExtension_7: int, actual_Fdo_2: int) returns (Tmp_1575: int)
{
  var {:pointer} compatibleId: int;
  var {:pointer} idString: int;
  var {:scalar} unicodeIdString: int;
  var {:pointer} compatibleIdString: int;
  var {:scalar} sdv_768: int;
  var {:pointer} sdv_769: int;
  var {:scalar} sdv_770: int;
  var {:scalar} Tmp_1580: int;
  var {:scalar} compatibleIdLen: int;
  var {:scalar} Tmp_1583: int;
  var {:scalar} idStringBufLen: int;
  var {:scalar} Tmp_1584: int;
  var {:scalar} Tmp_1585: int;
  var {:pointer} deviceExtension_7: int;
  var {:scalar} Fdo_2: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;

  anon0:
    call {:si_unique_call 1673} unicodeIdString := __HAVOC_malloc(12);
    call {:si_unique_call 1674} vslice_dummy_var_318 := __HAVOC_malloc(12);
    deviceExtension_7 := actual_deviceExtension_7;
    Fdo_2 := actual_Fdo_2;
    call {:si_unique_call 1675} compatibleId := __HAVOC_malloc(40);
    call {:si_unique_call 1676} vslice_dummy_var_319 := __HAVOC_malloc(20);
    call {:si_unique_call 1677} vslice_dummy_var_320 := __HAVOC_malloc(36);
    call {:si_unique_call 1678} vslice_dummy_var_321 := __HAVOC_malloc(28);
    call {:si_unique_call 1679} vslice_dummy_var_322 := __HAVOC_malloc(20);
    call {:si_unique_call 1680} vslice_dummy_var_323 := __HAVOC_malloc(100);
    call {:si_unique_call 1681} vslice_dummy_var_324 := __HAVOC_malloc(68);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Fdo_2 != 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_1584;
    call {:si_unique_call 1682} compatibleIdString := TrueffsGetCompatibleIdStringFDO(Tmp_1584);
    goto L21;

  L21:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} compatibleIdString != 0;
    goto L28;

  L28:
    compatibleIdLen := sdv_768;
    idStringBufLen := (sdv_770 + compatibleIdLen + 8 + 16 + 4 + 4 + 1) * 2;
    Tmp_1583 := idStringBufLen * 2;
    call {:si_unique_call 1683} sdv_769 := ExAllocatePoolWithTag(1, Tmp_1583, -463051180);
    idString := sdv_769;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} idString != 0;
    call {:si_unique_call 1684} vslice_dummy_var_325 := corral_nondet();
    call {:si_unique_call 1685} RtlInitAnsiString(0, 0);
    assume {:nonnull} unicodeIdString != 0;
    assume unicodeIdString > 0;
    assume {:nonnull} unicodeIdString != 0;
    assume unicodeIdString > 0;
    assume {:nonnull} unicodeIdString != 0;
    assume unicodeIdString > 0;
    call {:si_unique_call 1686} vslice_dummy_var_326 := RtlAnsiStringToUnicodeString(0, 0, 0);
    assume {:nonnull} unicodeIdString != 0;
    assume unicodeIdString > 0;
    havoc Tmp_1585;
    assume {:nonnull} unicodeIdString != 0;
    assume unicodeIdString > 0;
    goto L39;

  L39:
    Tmp_1575 := idString;
    return;

  anon9_Then:
    assume {:partition} idString == 0;
    goto L39;

  anon7_Then:
    assume {:partition} compatibleIdString == 0;
    call {:si_unique_call 1687} vslice_dummy_var_327 := corral_nondet();
    compatibleIdString := compatibleId;
    goto L28;

  anon8_Then:
    assume {:partition} Fdo_2 == 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_1580;
    call {:si_unique_call 1688} compatibleIdString := TrueffsGetCompatibleIdString(Tmp_1580);
    goto L21;
}



procedure {:origName "AllocatePdo"} AllocatePdo(actual_FdoExtension: int) returns (Tmp_1588: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AllocatePdo"} AllocatePdo(actual_FdoExtension: int) returns (Tmp_1588: int)
{
  var {:pointer} pdoExtension_5: int;
  var {:scalar} status_40: int;
  var {:pointer} physicalDeviceObject: int;
  var {:pointer} FdoExtension: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;

  anon0:
    call {:si_unique_call 1689} vslice_dummy_var_328 := __HAVOC_malloc(12);
    call {:si_unique_call 1690} vslice_dummy_var_329 := __HAVOC_malloc(12);
    call {:si_unique_call 1691} physicalDeviceObject := __HAVOC_malloc(4);
    FdoExtension := actual_FdoExtension;
    call {:si_unique_call 1692} vslice_dummy_var_330 := __HAVOC_malloc(256);
    call {:si_unique_call 1693} vslice_dummy_var_331 := __HAVOC_malloc(96);
    assume {:nonnull} physicalDeviceObject != 0;
    assume physicalDeviceObject > 0;
    call {:si_unique_call 1694} vslice_dummy_var_332 := corral_nondet();
    call {:si_unique_call 1695} RtlInitString(0, 0);
    call {:si_unique_call 1696} status_40 := RtlAnsiStringToUnicodeString(0, 0, 1);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} status_40 >= 0;
    call {:si_unique_call 1697} status_40 := IoCreateDevice(0, 76, 0, 7, 256, 0, physicalDeviceObject);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} status_40 >= 0;
    assume {:nonnull} physicalDeviceObject != 0;
    assume physicalDeviceObject > 0;
    havoc pdoExtension_5;
    call {:si_unique_call 1698} sdv_RtlZeroMemory(0, 76);
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    assume {:nonnull} physicalDeviceObject != 0;
    assume physicalDeviceObject > 0;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto L27;

  L27:
    call {:si_unique_call 1699} RtlFreeUnicodeString(0);
    assume {:nonnull} physicalDeviceObject != 0;
    assume physicalDeviceObject > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} physicalDeviceObject != 0;
    assume physicalDeviceObject > 0;
    assume {:nonnull} physicalDeviceObject != 0;
    assume physicalDeviceObject > 0;
    assume {:nonnull} physicalDeviceObject != 0;
    assume physicalDeviceObject > 0;
    assume {:nonnull} physicalDeviceObject != 0;
    assume physicalDeviceObject > 0;
    Tmp_1588 := pdoExtension_5;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_1588 := 0;
    goto L1;

  anon8_Then:
    assume {:partition} 0 > status_40;
    goto L27;

  anon7_Then:
    assume {:partition} 0 > status_40;
    Tmp_1588 := 0;
    goto L1;
}



procedure {:origName "TrueffsTranslateSRBStatus"} TrueffsTranslateSRBStatus(actual_status_41: int) returns (Tmp_1591: int);
  free ensures {:va_keep} Tmp_1591 == -1073741662 || Tmp_1591 == -1073741667 || Tmp_1591 == -1073741808 || Tmp_1591 == -1073741462 || Tmp_1591 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsTranslateSRBStatus"} TrueffsTranslateSRBStatus(actual_status_41: int) returns (Tmp_1591: int)
{
  var {:scalar} status_41: int;

  anon0:
    status_41 := actual_status_41;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_41 != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_41 != 3;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status_41 != 6;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_41 != 10;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_41 == 48;
    Tmp_1591 := -1073741662;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} status_41 != 48;
    goto L4;

  L4:
    Tmp_1591 := -1073741462;
    goto L1;

  anon13_Then:
    assume {:partition} status_41 == 10;
    Tmp_1591 := -1073741667;
    goto L1;

  anon14_Then:
    assume {:partition} status_41 == 6;
    Tmp_1591 := -1073741808;
    goto L1;

  anon15_Then:
    assume {:partition} status_41 == 3;
    goto L4;

  anon11_Then:
    assume {:partition} status_41 == 1;
    Tmp_1591 := 0;
    goto L1;
}



procedure {:origName "PRINTF"} PRINTF(actual_DebugMessage: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PRINTF"} PRINTF(actual_DebugMessage: int)
{
  var vslice_dummy_var_333: int;

  anon0:
    call {:si_unique_call 1700} vslice_dummy_var_333 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "TrueffsWmiDeregister"} TrueffsWmiDeregister(actual_DevExtension: int) returns (Tmp_1595: int);
  free ensures {:va_keep} Tmp_1595 == -1073741823 || Tmp_1595 == -1073741811 || Tmp_1595 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsWmiDeregister"} TrueffsWmiDeregister(actual_DevExtension: int) returns (Tmp_1595: int)
{
  var {:scalar} status_42: int;

  anon0:
    call {:si_unique_call 1701} status_42 := IoWMIRegistrationControl(0, 2);
    Tmp_1595 := status_42;
    return;
}



procedure {:origName "CopyField"} CopyField(actual_Destination_3: int, actual_Source_2: int, actual_Count_1: int, actual_Change: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CopyField"} CopyField(actual_Destination_3: int, actual_Source_2: int, actual_Count_1: int, actual_Change: int)
{
  var {:scalar} i_15: int;
  var {:scalar} Tmp_1597: int;
  var {:scalar} Tmp_1598: int;
  var {:scalar} pastEnd: int;
  var {:scalar} Tmp_1599: int;
  var {:scalar} Tmp_1601: int;
  var {:scalar} Tmp_1602: int;
  var {:scalar} Tmp_1603: int;
  var {:scalar} Tmp_1605: int;
  var {:scalar} Tmp_1606: int;
  var {:pointer} Destination_3: int;
  var {:pointer} Source_2: int;
  var {:scalar} Count_1: int;
  var {:scalar} Change: int;
  var vslice_dummy_var_334: int;

  anon0:
    call {:si_unique_call 1702} vslice_dummy_var_334 := __HAVOC_malloc(4);
    Destination_3 := actual_Destination_3;
    Source_2 := actual_Source_2;
    Count_1 := actual_Count_1;
    Change := actual_Change;
    i_15 := 0;
    pastEnd := 0;
    i_15 := 0;
    goto L8;

  L8:
    call {:si_unique_call 1703} i_15, Tmp_1597, Tmp_1598, pastEnd, Tmp_1599, Tmp_1601, Tmp_1603, Tmp_1605, Tmp_1606 := CopyField_loop_L8(i_15, Tmp_1597, Tmp_1598, pastEnd, Tmp_1599, Tmp_1601, Tmp_1603, Tmp_1605, Tmp_1606, Destination_3, Source_2, Count_1, Change);
    goto L8_last;

  L8_last:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Count_1 > i_15;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} pastEnd != 0;
    Tmp_1605 := i_15;
    assume {:nonnull} Destination_3 != 0;
    assume Destination_3 > 0;
    goto L13;

  L13:
    i_15 := i_15 + 1;
    goto L13_dummy;

  L13_dummy:
    assume false;
    return;

  anon10_Then:
    assume {:partition} pastEnd == 0;
    Tmp_1599 := i_15;
    assume {:nonnull} Source_2 != 0;
    assume Source_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_1598 := i_15;
    assume {:nonnull} Source_2 != 0;
    assume Source_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1597 := i_15;
    assume {:nonnull} Destination_3 != 0;
    assume Destination_3 > 0;
    goto L13;

  anon12_Then:
    Tmp_1606 := i_15;
    Tmp_1603 := i_15;
    assume {:nonnull} Destination_3 != 0;
    assume Destination_3 > 0;
    assume {:nonnull} Source_2 != 0;
    assume Source_2 > 0;
    goto L13;

  anon11_Then:
    pastEnd := 1;
    Tmp_1601 := i_15;
    assume {:nonnull} Destination_3 != 0;
    assume Destination_3 > 0;
    goto L13;

  anon9_Then:
    assume {:partition} i_15 >= Count_1;
    Tmp_1602 := i_15;
    assume {:nonnull} Destination_3 != 0;
    assume Destination_3 > 0;
    return;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_335: int;

  anon0:
    call {:si_unique_call 1704} vslice_dummy_var_335 := __HAVOC_malloc(4);
    assume patitionTwo == 0;
    assume TrueffsNextDeviceNumber_tffsport == 0;
    return;
}



procedure {:origName "DeviceBuildHardwareId"} DeviceBuildHardwareId(actual_deviceExtension_8: int, actual_Fdo_3: int) returns (Tmp_1609: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "DeviceBuildHardwareId"} DeviceBuildHardwareId(actual_deviceExtension_8: int, actual_Fdo_3: int) returns (Tmp_1609: int)
{
  var {:scalar} ScsiDeviceType: int;
  var {:scalar} i_16: int;
  var {:pointer} Tmp_1610: int;
  var {:scalar} Tmp_1611: int;
  var {:scalar} Tmp_1612: int;
  var {:pointer} idString_1: int;
  var {:scalar} unicodeIdString_1: int;
  var {:pointer} Tmp_1614: int;
  var {:pointer} sdv_780: int;
  var {:pointer} Tmp_1615: int;
  var {:pointer} Tmp_1616: int;
  var {:pointer} Tmp_1617: int;
  var {:pointer} Tmp_1618: int;
  var {:pointer} Tmp_1619: int;
  var {:pointer} Tmp_1620: int;
  var {:pointer} Tmp_1621: int;
  var {:scalar} Tmp_1623: int;
  var {:pointer} deviceTypeCompIdString: int;
  var {:pointer} Tmp_1624: int;
  var {:pointer} Tmp_1625: int;
  var {:scalar} Tmp_1626: int;
  var {:scalar} Tmp_1627: int;
  var {:pointer} Tmp_1628: int;
  var {:scalar} Tmp_1629: int;
  var {:pointer} deviceTypeId: int;
  var {:pointer} idMultiString: int;
  var {:pointer} Tmp_1631: int;
  var {:scalar} ansiCompatibleIdString: int;
  var {:pointer} Tmp_1633: int;
  var {:pointer} Tmp_1634: int;
  var {:pointer} deviceTypeIdString: int;
  var {:pointer} Tmp_1636: int;
  var {:pointer} Tmp_1637: int;
  var {:pointer} Tmp_1639: int;
  var {:scalar} idStringLen: int;
  var {:pointer} scratch: int;
  var {:pointer} Tmp_1640: int;
  var {:pointer} deviceTypeCompId: int;
  var {:pointer} deviceExtension_8: int;
  var {:scalar} Fdo_3: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;

  anon0:
    call {:si_unique_call 1705} unicodeIdString_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1706} ansiCompatibleIdString := __HAVOC_malloc(12);
    deviceExtension_8 := actual_deviceExtension_8;
    Fdo_3 := actual_Fdo_3;
    call {:si_unique_call 1707} vslice_dummy_var_336 := __HAVOC_malloc(56);
    call {:si_unique_call 1708} Tmp_1614 := __HAVOC_malloc(20);
    call {:si_unique_call 1709} Tmp_1615 := __HAVOC_malloc(68);
    call {:si_unique_call 1710} Tmp_1616 := __HAVOC_malloc(36);
    call {:si_unique_call 1711} Tmp_1618 := __HAVOC_malloc(36);
    call {:si_unique_call 1712} Tmp_1619 := __HAVOC_malloc(68);
    call {:si_unique_call 1713} Tmp_1620 := __HAVOC_malloc(20);
    call {:si_unique_call 1714} vslice_dummy_var_337 := __HAVOC_malloc(48);
    call {:si_unique_call 1715} deviceTypeId := __HAVOC_malloc(80);
    call {:si_unique_call 1716} vslice_dummy_var_338 := __HAVOC_malloc(28);
    call {:si_unique_call 1717} Tmp_1633 := __HAVOC_malloc(68);
    call {:si_unique_call 1718} vslice_dummy_var_339 := __HAVOC_malloc(40);
    call {:si_unique_call 1719} Tmp_1637 := __HAVOC_malloc(36);
    call {:si_unique_call 1720} vslice_dummy_var_340 := __HAVOC_malloc(56);
    call {:si_unique_call 1721} Tmp_1639 := __HAVOC_malloc(20);
    call {:si_unique_call 1722} scratch := __HAVOC_malloc(256);
    call {:si_unique_call 1723} Tmp_1640 := __HAVOC_malloc(36);
    call {:si_unique_call 1724} deviceTypeCompId := __HAVOC_malloc(80);
    assume {:nonnull} scratch != 0;
    assume scratch > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc ScsiDeviceType;
    idStringLen := 642;
    call {:si_unique_call 1725} sdv_780 := ExAllocatePoolWithTag(1, idStringLen, -463051180);
    idMultiString := sdv_780;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} idMultiString != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Fdo_3 != 0;
    Tmp_1629 := ScsiDeviceType;
    call {:si_unique_call 1726} deviceTypeIdString := TrueffsGetDeviceTypeStringFDO(Tmp_1629);
    goto L32;

  L32:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} deviceTypeIdString != 0;
    goto L36;

  L36:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Fdo_3 != 0;
    Tmp_1627 := ScsiDeviceType;
    call {:si_unique_call 1727} deviceTypeCompIdString := TrueffsGetCompatibleIdStringFDO(Tmp_1627);
    goto L43;

  L43:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} deviceTypeCompIdString != 0;
    goto L47;

  L47:
    call {:si_unique_call 1728} sdv_RtlZeroMemory(0, idStringLen);
    idString_1 := idMultiString;
    i_16 := 0;
    goto L52;

  L52:
    call {:si_unique_call 1729} i_16, Tmp_1610, Tmp_1611, Tmp_1614, Tmp_1615, Tmp_1616, Tmp_1617, Tmp_1618, Tmp_1619, Tmp_1620, Tmp_1621, Tmp_1624, Tmp_1625, Tmp_1626, Tmp_1628, Tmp_1631, Tmp_1633, Tmp_1634, Tmp_1636, Tmp_1637, Tmp_1639, Tmp_1640, vslice_dummy_var_341, vslice_dummy_var_342, vslice_dummy_var_343, vslice_dummy_var_344, vslice_dummy_var_345 := DeviceBuildHardwareId_loop_L52(i_16, Tmp_1610, Tmp_1611, idString_1, unicodeIdString_1, Tmp_1614, Tmp_1615, Tmp_1616, Tmp_1617, Tmp_1618, Tmp_1619, Tmp_1620, Tmp_1621, Tmp_1624, Tmp_1625, Tmp_1626, Tmp_1628, Tmp_1631, ansiCompatibleIdString, Tmp_1633, Tmp_1634, Tmp_1636, Tmp_1637, Tmp_1639, scratch, Tmp_1640, vslice_dummy_var_341, vslice_dummy_var_342, vslice_dummy_var_343, vslice_dummy_var_344, vslice_dummy_var_345);
    goto L52_last;

  L52_last:
    assume {:CounterLoop 5} {:Counter "i_16"} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} 5 > i_16;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} i_16 != 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} i_16 != 1;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} i_16 != 2;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} i_16 != 3;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} i_16 != 4;
    goto L72;

  L72:
    call {:si_unique_call 1730} RtlInitAnsiString(0, 0);
    assume {:nonnull} unicodeIdString_1 != 0;
    assume unicodeIdString_1 > 0;
    assume {:nonnull} NlsMbCodePageTag != 0;
    assume NlsMbCodePageTag > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    call {:si_unique_call 1731} Tmp_1626 := corral_nondet();
    goto L82;

  L82:
    assume {:nonnull} unicodeIdString_1 != 0;
    assume unicodeIdString_1 > 0;
    assume {:nonnull} unicodeIdString_1 != 0;
    assume unicodeIdString_1 > 0;
    call {:si_unique_call 1732} vslice_dummy_var_342 := RtlAnsiStringToUnicodeString(0, 0, 0);
    assume {:nonnull} unicodeIdString_1 != 0;
    assume unicodeIdString_1 > 0;
    havoc Tmp_1611;
    assume {:nonnull} idString_1 != 0;
    assume idString_1 > 0;
    i_16 := i_16 + 1;
    goto L82_dummy;

  L82_dummy:
    assume false;
    return;

  anon39_Then:
    assume {:nonnull} ansiCompatibleIdString != 0;
    assume ansiCompatibleIdString > 0;
    havoc Tmp_1626;
    goto L82;

  anon34_Then:
    assume {:partition} i_16 == 4;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L72;

  anon33_Then:
    call {:si_unique_call 1733} vslice_dummy_var_345 := __HAVOC_malloc(1);
    goto L72;

  anon35_Then:
    assume {:partition} i_16 == 3;
    Tmp_1640 := strConst__li2bpl17;
    call {:si_unique_call 1734} CopyField(scratch, Tmp_1640, 8, 95);
    Tmp_1624 := scratch;
    Tmp_1619 := strConst__li2bpl26;
    call {:si_unique_call 1735} CopyField(Tmp_1624, Tmp_1619, 16, 95);
    Tmp_1628 := scratch;
    Tmp_1639 := strConst__li2bpl27;
    call {:si_unique_call 1736} CopyField(Tmp_1628, Tmp_1639, 4, 95);
    goto L72;

  anon36_Then:
    assume {:partition} i_16 == 2;
    call {:si_unique_call 1737} vslice_dummy_var_344 := corral_nondet();
    Tmp_1621 := scratch;
    Tmp_1637 := strConst__li2bpl17;
    call {:si_unique_call 1738} CopyField(Tmp_1621, Tmp_1637, 8, 95);
    goto L72;

  anon37_Then:
    assume {:partition} i_16 == 1;
    call {:si_unique_call 1739} vslice_dummy_var_343 := corral_nondet();
    Tmp_1610 := scratch;
    Tmp_1618 := strConst__li2bpl17;
    call {:si_unique_call 1740} CopyField(Tmp_1610, Tmp_1618, 8, 95);
    Tmp_1631 := scratch;
    Tmp_1615 := strConst__li2bpl26;
    call {:si_unique_call 1741} CopyField(Tmp_1631, Tmp_1615, 16, 95);
    Tmp_1625 := scratch;
    Tmp_1620 := strConst__li2bpl27;
    call {:si_unique_call 1742} CopyField(Tmp_1625, Tmp_1620, 4, 95);
    goto L72;

  anon32_Then:
    assume {:partition} i_16 == 0;
    call {:si_unique_call 1743} vslice_dummy_var_341 := corral_nondet();
    Tmp_1617 := scratch;
    Tmp_1616 := strConst__li2bpl17;
    call {:si_unique_call 1744} CopyField(Tmp_1617, Tmp_1616, 8, 95);
    Tmp_1634 := scratch;
    Tmp_1633 := strConst__li2bpl26;
    call {:si_unique_call 1745} CopyField(Tmp_1634, Tmp_1633, 16, 95);
    Tmp_1636 := scratch;
    Tmp_1614 := strConst__li2bpl27;
    call {:si_unique_call 1746} CopyField(Tmp_1636, Tmp_1614, 4, 95);
    goto L72;

  anon31_Then:
    assume {:partition} i_16 >= 5;
    assume {:nonnull} idString_1 != 0;
    assume idString_1 > 0;
    Tmp_1609 := idMultiString;
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:partition} deviceTypeCompIdString == 0;
    call {:si_unique_call 1747} vslice_dummy_var_346 := corral_nondet();
    deviceTypeCompIdString := deviceTypeCompId;
    goto L47;

  anon29_Then:
    assume {:partition} Fdo_3 == 0;
    Tmp_1623 := ScsiDeviceType;
    call {:si_unique_call 1748} deviceTypeCompIdString := TrueffsGetCompatibleIdString(Tmp_1623);
    goto L43;

  anon28_Then:
    assume {:partition} deviceTypeIdString == 0;
    call {:si_unique_call 1749} vslice_dummy_var_347 := corral_nondet();
    deviceTypeIdString := deviceTypeId;
    goto L36;

  anon27_Then:
    assume {:partition} Fdo_3 == 0;
    Tmp_1612 := ScsiDeviceType;
    call {:si_unique_call 1750} deviceTypeIdString := TrueffsGetDeviceTypeString(Tmp_1612);
    goto L32;

  anon38_Then:
    assume {:partition} idMultiString == 0;
    Tmp_1609 := 0;
    goto L1;
}



procedure {:origName "TrueffsCreateClose"} TrueffsCreateClose(actual_DeviceObject_22: int, actual_Irp_15: int) returns (Tmp_1641: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsCreateClose"} TrueffsCreateClose(actual_DeviceObject_22: int, actual_Irp_15: int) returns (Tmp_1641: int)
{
  var {:pointer} Irp_15: int;

  anon0:
    Irp_15 := actual_Irp_15;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    call {:si_unique_call 1751} sdv_IoCompleteRequest(0, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1641 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "DebugLogEvent"} DebugLogEvent(actual_DriverObject_3: int, actual_Value: int) returns (Tmp_1643: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1643 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "DebugLogEvent"} DebugLogEvent(actual_DriverObject_3: int, actual_Value: int) returns (Tmp_1643: int)
{
  var {:pointer} Tmp_1644: int;
  var {:pointer} Tmp_1645: int;
  var {:dopa} {:scalar} DebugValue: int;
  var {:pointer} DriverObject_3: int;
  var {:scalar} Value: int;
  var vslice_dummy_var_348: int;

  anon0:
    call {:si_unique_call 1752} DebugValue := __HAVOC_malloc(4);
    DriverObject_3 := actual_DriverObject_3;
    Value := actual_Value;
    call {:si_unique_call 1753} Tmp_1644 := __HAVOC_malloc(44);
    assume {:nonnull} DebugValue != 0;
    assume DebugValue > 0;
    assume {:nonnull} DebugValue != 0;
    assume DebugValue > 0;
    Tmp_1645 := DebugValue;
    Tmp_1644 := strConst__li2bpl33;
    call {:si_unique_call 1754} vslice_dummy_var_348 := TrueffsGetParameterFromServiceSubKey(DriverObject_3, Tmp_1644, 4, 0, Tmp_1645, 4);
    Tmp_1643 := 0;
    return;
}



procedure {:origName "TrueffsCreateSymblicLinks"} TrueffsCreateSymblicLinks(actual_FdoExtension_1: int) returns (Tmp_1647: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1647 == 0 || Tmp_1647 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsCreateSymblicLinks"} TrueffsCreateSymblicLinks(actual_FdoExtension_1: int) returns (Tmp_1647: int)
{
  var {:scalar} i_17: int;
  var {:scalar} unicodeDeviceSymbolicNameString: int;
  var {:pointer} scsiportNumber: int;
  var {:pointer} sdv_803: int;
  var {:pointer} deviceSymbolicNameBuffer: int;
  var {:scalar} status_44: int;
  var {:pointer} FdoExtension_1: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;

  anon0:
    call {:si_unique_call 1755} unicodeDeviceSymbolicNameString := __HAVOC_malloc(12);
    call {:si_unique_call 1756} vslice_dummy_var_349 := __HAVOC_malloc(12);
    call {:si_unique_call 1757} vslice_dummy_var_350 := __HAVOC_malloc(12);
    call {:si_unique_call 1758} vslice_dummy_var_351 := __HAVOC_malloc(12);
    FdoExtension_1 := actual_FdoExtension_1;
    call {:si_unique_call 1759} vslice_dummy_var_352 := __HAVOC_malloc(76);
    call {:si_unique_call 1760} vslice_dummy_var_353 := __HAVOC_malloc(80);
    call {:si_unique_call 1761} vslice_dummy_var_354 := __HAVOC_malloc(76);
    call {:si_unique_call 1762} deviceSymbolicNameBuffer := __HAVOC_malloc(256);
    call {:si_unique_call 1763} vslice_dummy_var_355 := __HAVOC_malloc(256);
    call {:si_unique_call 1764} vslice_dummy_var_356 := corral_nondet();
    call {:si_unique_call 1765} RtlInitString(0, 0);
    call {:si_unique_call 1766} status_44 := RtlAnsiStringToUnicodeString(0, 0, 1);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_44 >= 0;
    call {:si_unique_call 1767} sdv_803 := IoGetConfigurationInformation();
    assume {:nonnull} sdv_803 != 0;
    assume sdv_803 > 0;
    scsiportNumber := ScsiPortCount__CONFIGURATION_INFORMATION(sdv_803);
    assume {:nonnull} unicodeDeviceSymbolicNameString != 0;
    assume unicodeDeviceSymbolicNameString > 0;
    assume {:nonnull} unicodeDeviceSymbolicNameString != 0;
    assume unicodeDeviceSymbolicNameString > 0;
    assume {:nonnull} unicodeDeviceSymbolicNameString != 0;
    assume unicodeDeviceSymbolicNameString > 0;
    i_17 := 0;
    goto L32;

  L32:
    call {:si_unique_call 1768} i_17, status_44, vslice_dummy_var_357 := TrueffsCreateSymblicLinks_loop_L32(i_17, scsiportNumber, status_44, vslice_dummy_var_357);
    goto L32_last;

  L32_last:
    assume {:nonnull} scsiportNumber != 0;
    assume scsiportNumber > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 1769} vslice_dummy_var_357 := corral_nondet();
    call {:si_unique_call 1770} RtlInitString(0, 0);
    call {:si_unique_call 1771} status_44 := RtlAnsiStringToUnicodeString(0, 0, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_44 >= 0;
    call {:si_unique_call 1772} status_44 := IoCreateSymbolicLink(0, 0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_44 >= 0;
    call {:si_unique_call 1773} vslice_dummy_var_358 := corral_nondet();
    call {:si_unique_call 1774} RtlInitString(0, 0);
    call {:si_unique_call 1775} status_44 := RtlAnsiStringToUnicodeString(0, 0, 1);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} status_44 >= 0;
    call {:si_unique_call 1776} sdv_IoAssignArcName(0, 0);
    call {:si_unique_call 1777} RtlFreeUnicodeString(0);
    goto L33;

  L33:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_44 >= 0;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    assume {:nonnull} scsiportNumber != 0;
    assume scsiportNumber > 0;
    goto L71;

  L71:
    call {:si_unique_call 1778} RtlFreeUnicodeString(0);
    Tmp_1647 := status_44;
    goto L1;

  L1:
    return;

  anon15_Then:
    assume {:partition} 0 > status_44;
    goto L71;

  anon18_Then:
    assume {:partition} 0 > status_44;
    goto L33;

  anon17_Then:
    assume {:partition} 0 > status_44;
    i_17 := i_17 + 1;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon16_Then:
    assume {:partition} 0 > status_44;
    goto L33;

  anon14_Then:
    goto L33;

  anon13_Then:
    assume {:partition} 0 > status_44;
    Tmp_1647 := status_44;
    goto L1;
}



procedure {:origName "TrueffsOpenServiceSubKey"} TrueffsOpenServiceSubKey(actual_DriverObject_4: int, actual_SubKeyPath: int) returns (Tmp_1652: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsOpenServiceSubKey"} TrueffsOpenServiceSubKey(actual_DriverObject_4: int, actual_SubKeyPath: int) returns (Tmp_1652: int)
{
  var {:pointer} sdv_807: int;
  var {:pointer} subServiceKey_1: int;
  var {:pointer} serviceKey: int;
  var {:scalar} status_45: int;
  var {:pointer} trueffsDriverExtension: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;

  anon0:
    call {:si_unique_call 1779} vslice_dummy_var_359 := __HAVOC_malloc(24);
    call {:si_unique_call 1780} subServiceKey_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1781} serviceKey := __HAVOC_malloc(4);
    call {:si_unique_call 1782} sdv_807 := IoGetDriverObjectExtension(0, 0);
    trueffsDriverExtension := sdv_807;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} trueffsDriverExtension != 0;
    call {:si_unique_call 1783} sdv_InitializeObjectAttributes(0, 0, 64, 0, 0);
    call {:si_unique_call 1784} status_45 := ZwOpenKey(serviceKey, 983103, 0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} status_45 >= 0;
    call {:si_unique_call 1785} sdv_InitializeObjectAttributes(0, 0, 64, 0, 0);
    call {:si_unique_call 1786} status_45 := ZwCreateKey(subServiceKey_1, 131103, 0, 0, 0, 0, 0);
    call {:si_unique_call 1787} vslice_dummy_var_360 := ZwClose(0);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} status_45 >= 0;
    assume {:nonnull} subServiceKey_1 != 0;
    assume subServiceKey_1 > 0;
    havoc Tmp_1652;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} 0 > status_45;
    Tmp_1652 := 0;
    goto L1;

  anon7_Then:
    assume {:partition} 0 > status_45;
    Tmp_1652 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} trueffsDriverExtension == 0;
    Tmp_1652 := 0;
    goto L1;
}



procedure {:origName "TrueffsGetCompatibleIdString"} TrueffsGetCompatibleIdString(actual_DeviceType_2: int) returns (Tmp_1654: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsGetCompatibleIdString"} TrueffsGetCompatibleIdString(actual_DeviceType_2: int) returns (Tmp_1654: int)
{
  var {:scalar} Tmp_1655: int;
  var {:scalar} DeviceType_2: int;

  anon0:
    DeviceType_2 := actual_DeviceType_2;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} 1 > DeviceType_2;
    Tmp_1655 := DeviceType_2;
    havoc Tmp_1654;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} DeviceType_2 >= 1;
    Tmp_1654 := 0;
    goto L1;
}



procedure {:origName "TrueffsWmiRegister"} TrueffsWmiRegister(actual_DevExtension_1: int) returns (Tmp_1657: int);
  free ensures {:va_keep} Tmp_1657 == -1073741823 || Tmp_1657 == -1073741811 || Tmp_1657 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsWmiRegister"} TrueffsWmiRegister(actual_DevExtension_1: int) returns (Tmp_1657: int)
{
  var {:scalar} status_46: int;
  var {:pointer} DevExtension_1: int;

  anon0:
    DevExtension_1 := actual_DevExtension_1;
    assume {:nonnull} DevExtension_1 != 0;
    assume DevExtension_1 > 0;
    assume {:nonnull} DevExtension_1 != 0;
    assume DevExtension_1 > 0;
    assume {:nonnull} DevExtension_1 != 0;
    assume DevExtension_1 > 0;
    assume {:nonnull} DevExtension_1 != 0;
    assume DevExtension_1 > 0;
    assume {:nonnull} DevExtension_1 != 0;
    assume DevExtension_1 > 0;
    assume {:nonnull} DevExtension_1 != 0;
    assume DevExtension_1 > 0;
    assume {:nonnull} DevExtension_1 != 0;
    assume DevExtension_1 > 0;
    assume {:nonnull} DevExtension_1 != 0;
    assume DevExtension_1 > 0;
    call {:si_unique_call 1788} status_46 := IoWMIRegistrationControl(0, 1);
    Tmp_1657 := status_46;
    return;
}



procedure {:origName "TrueffsQueryDeviceRelations"} TrueffsQueryDeviceRelations(actual_DeviceObject_23: int, actual_Irp_16: int, actual_Fdo_4: int) returns (Tmp_1659: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsQueryDeviceRelations"} TrueffsQueryDeviceRelations(actual_DeviceObject_23: int, actual_Irp_16: int, actual_Fdo_4: int) returns (Tmp_1659: int)
{
  var {:pointer} deviceRelations: int;
  var {:pointer} thisIrpSp_1: int;
  var {:pointer} sdv_813: int;
  var {:pointer} sdv_814: int;
  var {:scalar} status_47: int;
  var {:pointer} Tmp_1661: int;
  var {:pointer} deviceExtension_9: int;
  var {:pointer} Tmp_1662: int;
  var {:pointer} DeviceObject_23: int;
  var {:pointer} Irp_16: int;
  var {:scalar} Fdo_4: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_1438: int;
  var vslice_dummy_var_1439: int;

  anon0:
    DeviceObject_23 := actual_DeviceObject_23;
    Irp_16 := actual_Irp_16;
    Fdo_4 := actual_Fdo_4;
    call {:si_unique_call 1789} Tmp_1661 := __HAVOC_malloc(4);
    call {:si_unique_call 1790} Tmp_1662 := __HAVOC_malloc(4);
    call {:si_unique_call 1791} thisIrpSp_1 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    status_47 := 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Fdo_4 != 0;
    assume {:nonnull} DeviceObject_23 != 0;
    assume DeviceObject_23 > 0;
    havoc deviceExtension_9;
    assume {:nonnull} thisIrpSp_1 != 0;
    assume thisIrpSp_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 1792} sdv_814 := ExAllocatePoolWithTag(0, 8, -463051180);
    deviceRelations := sdv_814;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} deviceRelations != 0;
    call {:si_unique_call 1793} vslice_dummy_var_361 := sdv_ObReferenceObject(0);
    assume {:nonnull} deviceRelations != 0;
    assume deviceRelations > 0;
    havoc Tmp_1662;
    assume {:nonnull} Tmp_1662 != 0;
    assume Tmp_1662 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    assume {:nonnull} deviceRelations != 0;
    assume deviceRelations > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto L20;

  L20:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} status_47 >= 0;
    call {:si_unique_call 1794} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_16);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc vslice_dummy_var_1438;
    call {:si_unique_call 1795} status_47 := sdv_IoCallDriver(vslice_dummy_var_1438, Irp_16);
    goto L46;

  L46:
    Tmp_1659 := status_47;
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} 0 > status_47;
    call {:si_unique_call 1796} sdv_IoCompleteRequest(0, 0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto L46;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} deviceRelations == 0;
    status_47 := -1073741670;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto L20;

  anon20_Then:
    goto L20;

  anon22_Then:
    call {:si_unique_call 1797} sdv_IoSkipCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc vslice_dummy_var_1439;
    call {:si_unique_call 1798} status_47 := sdv_IoCallDriver(vslice_dummy_var_1439, Irp_16);
    goto L46;

  anon21_Then:
    assume {:partition} Fdo_4 == 0;
    assume {:nonnull} thisIrpSp_1 != 0;
    assume thisIrpSp_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 1799} sdv_813 := ExAllocatePoolWithTag(0, 8, -463051180);
    deviceRelations := sdv_813;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} deviceRelations != 0;
    call {:si_unique_call 1800} vslice_dummy_var_362 := sdv_ObReferenceObject(0);
    assume {:nonnull} deviceRelations != 0;
    assume deviceRelations > 0;
    havoc Tmp_1661;
    assume {:nonnull} Tmp_1661 != 0;
    assume Tmp_1661 > 0;
    assume {:nonnull} deviceRelations != 0;
    assume deviceRelations > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto L65;

  L65:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto L67;

  L67:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 1801} sdv_IoCompleteRequest(0, 0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L46;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} deviceRelations == 0;
    status_47 := -1073741670;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto L65;

  anon19_Then:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    havoc status_47;
    goto L67;
}



procedure {:origName "TrueffsFdoChildRequestPowerUp"} TrueffsFdoChildRequestPowerUp(actual_FdoExtension_2: int, actual_PdoExtension: int, actual_Irp_17: int) returns (Tmp_1663: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsFdoChildRequestPowerUp"} TrueffsFdoChildRequestPowerUp(actual_FdoExtension_2: int, actual_PdoExtension: int, actual_Irp_17: int) returns (Tmp_1663: int)
{
  var {:pointer} Tmp_1664: int;
  var {:scalar} sdv_819: int;
  var {:scalar} powerState_2: int;
  var {:scalar} status_48: int;
  var {:pointer} FdoExtension_2: int;
  var {:pointer} PdoExtension: int;
  var {:pointer} Irp_17: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;

  anon0:
    call {:si_unique_call 1802} powerState_2 := __HAVOC_malloc(8);
    FdoExtension_2 := actual_FdoExtension_2;
    PdoExtension := actual_PdoExtension;
    Irp_17 := actual_Irp_17;
    status_48 := 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_819 != 0;
    call {:si_unique_call 1803} Tmp_1664 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    call {:si_unique_call 1804} vslice_dummy_var_364 := sdv_InterlockedIncrement(Tmp_1664);
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    call {:si_unique_call 1805} vslice_dummy_var_363 := TrueffsParentPowerUpCompletionRoutine(PdoExtension, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    Tmp_1663 := status_48;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} sdv_819 == 0;
    assume {:nonnull} powerState_2 != 0;
    assume powerState_2 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1806} status_48 := PoRequestPowerIrp(0, 2, powerState_2, li2bplFunctionConstant166, 0, 0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} status_48 >= 0;
    status_48 := 259;
    goto L17;

  anon7_Then:
    assume {:partition} 0 > status_48;
    Tmp_1663 := status_48;
    goto L1;
}



procedure {:origName "TrueffsPowerControl"} TrueffsPowerControl(actual_DeviceObject_24: int, actual_Irp_18: int) returns (Tmp_1665: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsPowerControl"} TrueffsPowerControl(actual_DeviceObject_24: int, actual_Irp_18: int) returns (Tmp_1665: int)
{
  var {:pointer} irpStack_5: int;
  var {:pointer} pdoExtension_6: int;
  var {:scalar} Fdo_5: int;
  var {:pointer} devExtension_4: int;
  var {:scalar} status_49: int;
  var {:pointer} DeviceObject_24: int;
  var {:pointer} Irp_18: int;

  anon0:
    DeviceObject_24 := actual_DeviceObject_24;
    Irp_18 := actual_Irp_18;
    call {:si_unique_call 1807} irpStack_5 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    Fdo_5 := 0;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    havoc devExtension_4;
    assume {:nonnull} devExtension_4 != 0;
    assume devExtension_4 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    havoc pdoExtension_6;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto L18;

  L18:
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_5)] != 2;
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_5)] == 3;
    status_49 := 0;
    call {:si_unique_call 1808} PoStartNextPowerIrp(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Fdo_5 != 0;
    call {:si_unique_call 1809} sdv_IoSkipCurrentIrpStackLocation(Irp_18);
    call {:si_unique_call 1810} status_49 := PoCallDriver(0, Irp_18);
    goto L37;

  L37:
    Tmp_1665 := status_49;
    goto LM2;

  LM2:
    return;

  anon23_Then:
    assume {:partition} Fdo_5 == 0;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    call {:si_unique_call 1811} sdv_IoCompleteRequest(0, 0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon25_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_5)] != 3;
    call {:si_unique_call 1812} PoStartNextPowerIrp(0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Fdo_5 != 0;
    call {:si_unique_call 1813} sdv_IoSkipCurrentIrpStackLocation(Irp_18);
    call {:si_unique_call 1814} status_49 := PoCallDriver(0, Irp_18);
    goto L37;

  anon24_Then:
    assume {:partition} Fdo_5 == 0;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    havoc status_49;
    call {:si_unique_call 1815} sdv_IoCompleteRequest(0, 0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_5)] == 2;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Fdo_5 != 0;
    call {:si_unique_call 1816} status_49 := TrueffsSetFdoPowerState(DeviceObject_24, Irp_18);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} Fdo_5 == 0;
    call {:si_unique_call 1817} status_49 := TrueffsSetPdoPowerState(DeviceObject_24, Irp_18);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon28_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    Fdo_5 := 1;
    goto L18;
}



procedure {:origName "TrueffsFdoPowerCompletionRoutine"} TrueffsFdoPowerCompletionRoutine(actual_DeviceObject_25: int, actual_Irp_19: int, actual_Context_6: int) returns (Tmp_1667: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsFdoPowerCompletionRoutine"} TrueffsFdoPowerCompletionRoutine(actual_DeviceObject_25: int, actual_Irp_19: int, actual_Context_6: int) returns (Tmp_1667: int)
{
  var {:pointer} SD1_1: int;
  var {:scalar} sdv_1: int;
  var {:pointer} context_1: int;
  var {:scalar} callPoSetPowerState: int;
  var {:pointer} fdoExtension_3: int;
  var {:pointer} DeviceObject_25: int;
  var {:pointer} Irp_19: int;
  var {:pointer} Context_6: int;
  var vslice_dummy_var_1440: int;
  var vslice_dummy_var_1441: int;

  anon0:
    call {:si_unique_call 1818} sdv_1 := __HAVOC_malloc(8);
    DeviceObject_25 := actual_DeviceObject_25;
    Irp_19 := actual_Irp_19;
    Context_6 := actual_Context_6;
    context_1 := Context_6;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    havoc fdoExtension_3;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    callPoSetPowerState := 1;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    callPoSetPowerState := 0;
    goto L19;

  L19:
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto L14;

  L14:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} callPoSetPowerState != 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    havoc vslice_dummy_var_1440;
    havoc vslice_dummy_var_1441;
    call {:si_unique_call 1819} SD1_1 := PoSetPowerState(0, vslice_dummy_var_1440, vslice_dummy_var_1441);
    assume {:nonnull} SD1_1 != 0;
    assume SD1_1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1_1 != 0;
    assume SD1_1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    goto L9;

  L9:
    call {:si_unique_call 1820} sdv_ExFreePool(0);
    call {:si_unique_call 1821} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    havoc Tmp_1667;
    return;

  anon13_Then:
    assume {:partition} callPoSetPowerState == 0;
    goto L9;

  anon15_Then:
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 1822} startIntervalTimer();
    goto L19;

  anon16_Then:
    goto L19;

  anon14_Then:
    goto L14;

  anon18_Then:
    goto L14;

  anon17_Then:
    goto L9;
}



procedure {:origName "TrueffsStartDevice"} TrueffsStartDevice(actual_deviceExtension_11: int, actual_ResourceList: int, actual_CheckResources: int) returns (Tmp_1669: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, initDone, LockDepth;
  free ensures {:va_keep} Tmp_1669 == 0 || Tmp_1669 == -1073741823 || Tmp_1669 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsStartDevice"} TrueffsStartDevice(actual_deviceExtension_11: int, actual_ResourceList: int, actual_CheckResources: int) returns (Tmp_1669: int)
{
  var {:scalar} i_18: int;
  var {:scalar} deviceIndex_1: int;
  var {:scalar} Tmp_1670: int;
  var {:scalar} Tmp_1671: int;
  var {:scalar} Tmp_1672: int;
  var {:scalar} AddressMemoryBase: int;
  var {:pointer} mappedWindowBase: int;
  var {:scalar} Tmp_1673: int;
  var {:scalar} baseAddress_2: int;
  var {:scalar} Tmp_1674: int;
  var {:scalar} Tmp_1675: int;
  var {:pointer} fullResourceList: int;
  var {:pointer} partialResourceList: int;
  var {:scalar} Tmp_1676: int;
  var {:scalar} Tmp_1677: int;
  var {:scalar} Tmp_1678: int;
  var {:scalar} Tmp_1679: int;
  var {:pointer} partialDescriptors: int;
  var {:scalar} j_3: int;
  var {:dopa} {:scalar} PcmciaAddressSpace: int;
  var {:scalar} Tmp_1680: int;
  var {:scalar} Tmp_1681: int;
  var {:scalar} Tmp_1682: int;
  var {:scalar} Tmp_1683: int;
  var {:scalar} Tmp_1684: int;
  var {:scalar} Tmp_1685: int;
  var {:scalar} Tmp_1687: int;
  var {:scalar} Tmp_1688: int;
  var {:scalar} Tmp_1691: int;
  var {:scalar} status_50: int;
  var {:scalar} Tmp_1692: int;
  var {:dopa} {:scalar} addressSpace: int;
  var {:scalar} Tmp_1693: int;
  var {:scalar} Tmp_1694: int;
  var {:scalar} Tmp_1695: int;
  var {:pointer} deviceExtension_11: int;
  var {:pointer} ResourceList: int;
  var {:scalar} CheckResources: int;
  var boogieTmp: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_1442: int;
  var vslice_dummy_var_1443: int;
  var vslice_dummy_var_1444: int;
  var vslice_dummy_var_1445: int;
  var vslice_dummy_var_1446: int;
  var vslice_dummy_var_1447: int;

  anon0:
    call {:si_unique_call 1823} AddressMemoryBase := __HAVOC_malloc(20);
    call {:si_unique_call 1824} mappedWindowBase := __HAVOC_malloc(4);
    call {:si_unique_call 1825} PcmciaAddressSpace := __HAVOC_malloc(4);
    call {:si_unique_call 1826} vslice_dummy_var_365 := __HAVOC_malloc(20);
    call {:si_unique_call 1827} vslice_dummy_var_366 := __HAVOC_malloc(20);
    call {:si_unique_call 1828} addressSpace := __HAVOC_malloc(4);
    deviceExtension_11 := actual_deviceExtension_11;
    ResourceList := actual_ResourceList;
    CheckResources := actual_CheckResources;
    status_50 := -1073741823;
    assume {:nonnull} mappedWindowBase != 0;
    assume mappedWindowBase > 0;
    call {:si_unique_call 1829} ExAcquireFastMutex(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} CheckResources != 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} ResourceList == 0;
    goto L115;

  L115:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} status_50 >= 0;
    goto L119;

  L119:
    call {:si_unique_call 1830} ExReleaseFastMutex(0);
    Tmp_1669 := status_50;
    goto L1;

  L1:
    return;

  anon66_Then:
    assume {:partition} 0 > status_50;
    call {:si_unique_call 1831} vslice_dummy_var_368 := TrueffsStopRemoveDevice(deviceExtension_11);
    call {:si_unique_call 1832} vslice_dummy_var_369 := TrueffsDeleteSymblicLinks(deviceExtension_11);
    goto L119;

  anon53_Then:
    assume {:partition} ResourceList != 0;
    assume {:nonnull} ResourceList != 0;
    assume ResourceList > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L115;

  anon54_Then:
    assume {:nonnull} ResourceList != 0;
    assume ResourceList > 0;
    havoc fullResourceList;
    i_18 := 0;
    goto L23;

  L23:
    call {:si_unique_call 1833} i_18, deviceIndex_1, Tmp_1672, Tmp_1673, baseAddress_2, Tmp_1675, fullResourceList, partialResourceList, Tmp_1676, Tmp_1678, partialDescriptors, j_3, Tmp_1681, Tmp_1684, Tmp_1685, Tmp_1688, status_50, Tmp_1692, Tmp_1693, Tmp_1694, Tmp_1695, boogieTmp := TrueffsStartDevice_loop_L23(i_18, deviceIndex_1, Tmp_1672, mappedWindowBase, Tmp_1673, baseAddress_2, Tmp_1675, fullResourceList, partialResourceList, Tmp_1676, Tmp_1678, partialDescriptors, j_3, Tmp_1681, Tmp_1684, Tmp_1685, Tmp_1688, status_50, Tmp_1692, addressSpace, Tmp_1693, Tmp_1694, Tmp_1695, deviceExtension_11, ResourceList, boogieTmp);
    goto L23_last;

  L23_last:
    assume {:nonnull} ResourceList != 0;
    assume ResourceList > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} fullResourceList != 0;
    assume fullResourceList > 0;
    partialResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(fullResourceList);
    assume {:nonnull} fullResourceList != 0;
    assume fullResourceList > 0;
    havoc partialDescriptors;
    j_3 := 0;
    goto L28;

  L28:
    call {:si_unique_call 1834} deviceIndex_1, Tmp_1672, Tmp_1673, baseAddress_2, Tmp_1675, Tmp_1676, Tmp_1678, j_3, Tmp_1681, Tmp_1684, Tmp_1685, Tmp_1688, status_50, Tmp_1692, Tmp_1693, Tmp_1694, Tmp_1695, boogieTmp := TrueffsStartDevice_loop_L28(deviceIndex_1, Tmp_1672, mappedWindowBase, Tmp_1673, baseAddress_2, Tmp_1675, fullResourceList, partialResourceList, Tmp_1676, Tmp_1678, partialDescriptors, j_3, Tmp_1681, Tmp_1684, Tmp_1685, Tmp_1688, status_50, Tmp_1692, addressSpace, Tmp_1693, Tmp_1694, Tmp_1695, deviceExtension_11, boogieTmp);
    goto L28_last;

  L28_last:
    assume {:nonnull} partialResourceList != 0;
    assume partialResourceList > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    Tmp_1673 := j_3;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    deviceIndex_1 := 0;
    Tmp_1692 := j_3;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    havoc baseAddress_2;
    Tmp_1678 := j_3;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    havoc Tmp_1693;
    Tmp_1672 := j_3;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    havoc Tmp_1695;
    assume {:nonnull} fullResourceList != 0;
    assume fullResourceList > 0;
    havoc vslice_dummy_var_1442;
    havoc vslice_dummy_var_1443;
    call {:si_unique_call 1835} status_50 := TrueffsCheckDiskOnChip(vslice_dummy_var_1442, vslice_dummy_var_1443, Tmp_1695, Tmp_1693, mappedWindowBase, addressSpace);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_50 >= 0;
    deviceIndex_1 := 0;
    goto L45;

  L45:
    call {:si_unique_call 1836} deviceIndex_1, Tmp_1675, Tmp_1688 := TrueffsStartDevice_loop_L45(deviceIndex_1, baseAddress_2, Tmp_1675, Tmp_1688);
    goto L45_last;

  L45_last:
    assume {:CounterLoop 4} {:Counter "deviceIndex_1"} true;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} 4 > deviceIndex_1;
    Tmp_1675 := deviceIndex_1;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    call {:si_unique_call 1837} boogieTmp := corral_nondet();
    Tmp_1681 := deviceIndex_1;
    Tmp_1676 := deviceIndex_1;
    goto L46;

  L46:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} deviceIndex_1 != 4;
    goto L43;

  L43:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_50 >= 0;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    assume {:nonnull} mappedWindowBase != 0;
    assume mappedWindowBase > 0;
    Tmp_1687 := j_3;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    assume {:nonnull} addressSpace != 0;
    assume addressSpace > 0;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    Tmp_1671 := j_3;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    havoc Tmp_1683;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    call {:si_unique_call 1838} boogieTmp := RtlConvertLongToLargeInteger(Tmp_1683);
    Tmp_1677 := j_3;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    assume {:nonnull} fullResourceList != 0;
    assume fullResourceList > 0;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    assume {:nonnull} fullResourceList != 0;
    assume fullResourceList > 0;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    call {:si_unique_call 1839} vslice_dummy_var_367 := updateDocSocketParams(deviceExtension_11);
    goto L17;

  L17:
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L136;

  L136:
    call {:si_unique_call 1840} ExReleaseFastMutex(0);
    Tmp_1669 := 0;
    goto L1;

  anon52_Then:
    call {:si_unique_call 1841} status_50 := TrueffsCreateSymblicLinks(deviceExtension_11);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} status_50 >= 0;
    goto L136;

  anon68_Then:
    assume {:partition} 0 > status_50;
    goto L115;

  anon74_Then:
    goto L17;

  anon59_Then:
    assume {:partition} 0 > status_50;
    goto L31;

  L31:
    j_3 := j_3 + 1;
    goto L31_dummy;

  L31_dummy:
    assume false;
    return;

  anon61_Then:
    assume {:partition} deviceIndex_1 == 4;
    goto L24;

  L24:
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L77;

  L77:
    assume {:nonnull} ResourceList != 0;
    assume ResourceList > 0;
    havoc fullResourceList;
    i_18 := 0;
    goto L79;

  L79:
    call {:si_unique_call 1842} i_18, Tmp_1670, Tmp_1674, fullResourceList, partialResourceList, Tmp_1679, partialDescriptors, j_3, Tmp_1680, Tmp_1691, status_50, boogieTmp := TrueffsStartDevice_loop_L79(i_18, Tmp_1670, AddressMemoryBase, mappedWindowBase, Tmp_1674, fullResourceList, partialResourceList, Tmp_1679, partialDescriptors, j_3, PcmciaAddressSpace, Tmp_1680, Tmp_1691, status_50, deviceExtension_11, ResourceList, boogieTmp);
    goto L79_last;

  L79_last:
    assume {:nonnull} ResourceList != 0;
    assume ResourceList > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} fullResourceList != 0;
    assume fullResourceList > 0;
    partialResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(fullResourceList);
    assume {:nonnull} fullResourceList != 0;
    assume fullResourceList > 0;
    havoc partialDescriptors;
    j_3 := 0;
    goto L84;

  L84:
    call {:si_unique_call 1843} Tmp_1670, Tmp_1674, Tmp_1679, j_3, Tmp_1680, Tmp_1691, status_50, boogieTmp := TrueffsStartDevice_loop_L84(Tmp_1670, AddressMemoryBase, mappedWindowBase, Tmp_1674, fullResourceList, partialResourceList, Tmp_1679, partialDescriptors, j_3, PcmciaAddressSpace, Tmp_1680, Tmp_1691, status_50, deviceExtension_11, boogieTmp);
    goto L84_last;

  L84_last:
    assume {:nonnull} partialResourceList != 0;
    assume partialResourceList > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    Tmp_1670 := j_3;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} PcmciaAddressSpace != 0;
    assume PcmciaAddressSpace > 0;
    Tmp_1691 := j_3;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    Tmp_1679 := j_3;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    havoc Tmp_1680;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    call {:si_unique_call 1844} boogieTmp := RtlConvertLongToLargeInteger(Tmp_1680);
    Tmp_1674 := j_3;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    assume {:nonnull} partialDescriptors != 0;
    assume partialDescriptors > 0;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    assume {:nonnull} fullResourceList != 0;
    assume fullResourceList > 0;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    assume {:nonnull} fullResourceList != 0;
    assume fullResourceList > 0;
    assume {:nonnull} mappedWindowBase != 0;
    assume mappedWindowBase > 0;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    havoc vslice_dummy_var_1444;
    havoc vslice_dummy_var_1445;
    havoc vslice_dummy_var_1446;
    havoc vslice_dummy_var_1447;
    call {:si_unique_call 1845} status_50 := TrueffsTranslateAddress(vslice_dummy_var_1444, vslice_dummy_var_1445, vslice_dummy_var_1446, vslice_dummy_var_1447, PcmciaAddressSpace, mappedWindowBase, AddressMemoryBase);
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    assume {:nonnull} mappedWindowBase != 0;
    assume mappedWindowBase > 0;
    assume {:nonnull} PcmciaAddressSpace != 0;
    assume PcmciaAddressSpace > 0;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_50 < 0;
    goto L115;

  anon72_Then:
    assume {:partition} 0 <= status_50;
    call {:si_unique_call 1846} status_50 := updatePcmciaSocketParams(deviceExtension_11);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_50 < 0;
    goto L87;

  L87:
    j_3 := j_3 + 1;
    goto L87_dummy;

  L87_dummy:
    assume false;
    return;

  anon65_Then:
    assume {:partition} 0 <= status_50;
    goto L17;

  anon71_Then:
    goto L87;

  anon64_Then:
    fullResourceList := partialDescriptors;
    i_18 := i_18 + 1;
    goto anon64_Then_dummy;

  anon64_Then_dummy:
    assume false;
    return;

  anon63_Then:
    status_50 := -1073741811;
    goto L115;

  anon56_Then:
    i_18 := 4;
    goto L128;

  L128:
    call {:si_unique_call 1847} i_18, Tmp_1682 := TrueffsStartDevice_loop_L128(i_18, Tmp_1682);
    goto L128_last;

  L128_last:
    assume {:CounterLoop 4} {:Counter "i_18"} true;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} 8 > i_18;
    Tmp_1682 := i_18;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    i_18 := i_18 + 1;
    goto anon73_Else_dummy;

  anon73_Else_dummy:
    assume false;
    return;

  anon73_Then:
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    goto L77;

  anon67_Then:
    assume {:partition} i_18 >= 8;
    goto L77;

  anon70_Then:
    Tmp_1688 := deviceIndex_1;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L53;

  L53:
    deviceIndex_1 := deviceIndex_1 + 1;
    goto L53_dummy;

  L53_dummy:
    assume false;
    return;

  anon75_Then:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} baseAddress_2 != 0;
    Tmp_1684 := deviceIndex_1;
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    Tmp_1694 := deviceIndex_1;
    Tmp_1685 := deviceIndex_1;
    goto L46;

  anon62_Then:
    assume {:partition} baseAddress_2 == 0;
    goto L53;

  anon60_Then:
    assume {:partition} deviceIndex_1 >= 4;
    goto L46;

  anon58_Then:
    assume {:partition} 0 > status_50;
    goto L43;

  anon69_Then:
    goto L31;

  anon57_Then:
    fullResourceList := partialDescriptors;
    i_18 := i_18 + 1;
    goto anon57_Then_dummy;

  anon57_Then_dummy:
    assume false;
    return;

  anon55_Then:
    goto L24;

  anon51_Then:
    assume {:partition} CheckResources == 0;
    goto L17;
}



procedure {:origName "TrueffsGetCompatibleIdStringFDO"} TrueffsGetCompatibleIdStringFDO(actual_DeviceType_3: int) returns (Tmp_1697: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsGetCompatibleIdStringFDO"} TrueffsGetCompatibleIdStringFDO(actual_DeviceType_3: int) returns (Tmp_1697: int)
{
  var {:scalar} Tmp_1699: int;
  var {:scalar} DeviceType_3: int;

  anon0:
    DeviceType_3 := actual_DeviceType_3;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} 1 > DeviceType_3;
    Tmp_1699 := DeviceType_3;
    havoc Tmp_1697;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} DeviceType_3 >= 1;
    Tmp_1697 := 0;
    goto L1;
}



procedure {:origName "TrueffsGetDeviceTypeStringFDO"} TrueffsGetDeviceTypeStringFDO(actual_DeviceType_4: int) returns (Tmp_1700: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsGetDeviceTypeStringFDO"} TrueffsGetDeviceTypeStringFDO(actual_DeviceType_4: int) returns (Tmp_1700: int)
{
  var {:scalar} Tmp_1702: int;
  var {:scalar} DeviceType_4: int;

  anon0:
    DeviceType_4 := actual_DeviceType_4;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} 1 > DeviceType_4;
    Tmp_1702 := DeviceType_4;
    havoc Tmp_1700;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} DeviceType_4 >= 1;
    Tmp_1700 := 0;
    goto L1;
}



procedure {:origName "DeviceBuildCompatibleId"} DeviceBuildCompatibleId(actual_deviceExtension_12: int, actual_Fdo_6: int) returns (Tmp_1703: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "DeviceBuildCompatibleId"} DeviceBuildCompatibleId(actual_deviceExtension_12: int, actual_Fdo_6: int) returns (Tmp_1703: int)
{
  var {:scalar} unicodeIdString_2: int;
  var {:scalar} Tmp_1705: int;
  var {:scalar} Tmp_1706: int;
  var {:scalar} Tmp_1707: int;
  var {:pointer} sdv_839: int;
  var {:scalar} Tmp_1708: int;
  var {:scalar} ansiCompatibleIdString_1: int;
  var {:scalar} Tmp_1709: int;
  var {:scalar} idStringBufLen_1: int;
  var {:pointer} deviceExtension_12: int;
  var {:scalar} Fdo_6: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;

  anon0:
    call {:si_unique_call 1848} unicodeIdString_2 := __HAVOC_malloc(12);
    call {:si_unique_call 1849} ansiCompatibleIdString_1 := __HAVOC_malloc(12);
    deviceExtension_12 := actual_deviceExtension_12;
    Fdo_6 := actual_Fdo_6;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Fdo_6 != 0;
    assume {:nonnull} deviceExtension_12 != 0;
    assume deviceExtension_12 > 0;
    havoc Tmp_1708;
    call {:si_unique_call 1850} vslice_dummy_var_371 := TrueffsGetCompatibleIdStringFDO(Tmp_1708);
    goto L15;

  L15:
    call {:si_unique_call 1851} RtlInitAnsiString(0, 0);
    assume {:nonnull} NlsMbCodePageTag != 0;
    assume NlsMbCodePageTag > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 1852} Tmp_1707 := corral_nondet();
    goto L24;

  L24:
    idStringBufLen_1 := Tmp_1707;
    assume {:nonnull} unicodeIdString_2 != 0;
    assume unicodeIdString_2 > 0;
    assume {:nonnull} unicodeIdString_2 != 0;
    assume unicodeIdString_2 > 0;
    idStringBufLen_1 := idStringBufLen_1 + 4;
    call {:si_unique_call 1853} sdv_839 := ExAllocatePoolWithTag(1, idStringBufLen_1, -463051180);
    assume {:nonnull} unicodeIdString_2 != 0;
    assume unicodeIdString_2 > 0;
    assume {:nonnull} unicodeIdString_2 != 0;
    assume unicodeIdString_2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1854} vslice_dummy_var_370 := RtlAnsiStringToUnicodeString(0, 0, 0);
    assume {:nonnull} unicodeIdString_2 != 0;
    assume unicodeIdString_2 > 0;
    havoc Tmp_1706;
    assume {:nonnull} unicodeIdString_2 != 0;
    assume unicodeIdString_2 > 0;
    assume {:nonnull} unicodeIdString_2 != 0;
    assume unicodeIdString_2 > 0;
    havoc Tmp_1705;
    assume {:nonnull} unicodeIdString_2 != 0;
    assume unicodeIdString_2 > 0;
    goto L33;

  L33:
    assume {:nonnull} unicodeIdString_2 != 0;
    assume unicodeIdString_2 > 0;
    havoc Tmp_1703;
    return;

  anon9_Then:
    goto L33;

  anon8_Then:
    assume {:nonnull} ansiCompatibleIdString_1 != 0;
    assume ansiCompatibleIdString_1 > 0;
    havoc Tmp_1707;
    goto L24;

  anon7_Then:
    assume {:partition} Fdo_6 == 0;
    assume {:nonnull} deviceExtension_12 != 0;
    assume deviceExtension_12 > 0;
    havoc Tmp_1709;
    call {:si_unique_call 1855} vslice_dummy_var_372 := TrueffsGetCompatibleIdString(Tmp_1709);
    goto L15;
}



procedure {:origName "TrueffsCallDriverSyncCompletion"} TrueffsCallDriverSyncCompletion(actual_DeviceObject_26: int, actual_Irp_20: int, actual_Context_7: int) returns (Tmp_1710: int);
  free ensures {:va_keep} Tmp_1710 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsCallDriverSyncCompletion"} TrueffsCallDriverSyncCompletion(actual_DeviceObject_26: int, actual_Irp_20: int, actual_Context_7: int) returns (Tmp_1710: int)
{
  var {:pointer} event_4: int;
  var {:pointer} Context_7: int;
  var vslice_dummy_var_373: int;

  anon0:
    Context_7 := actual_Context_7;
    event_4 := Context_7;
    call {:si_unique_call 1856} vslice_dummy_var_373 := KeSetEvent(event_4, 0, 0);
    Tmp_1710 := -1073741802;
    return;
}



procedure {:origName "TrueffsSetPdoSystemPowerState"} TrueffsSetPdoSystemPowerState(actual_DeviceObject_27: int, actual_Irp_21: int) returns (Tmp_1712: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1712 == 259 || Tmp_1712 == -1073741584 || Tmp_1712 == -1073741670 || Tmp_1712 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsSetPdoSystemPowerState"} TrueffsSetPdoSystemPowerState(actual_DeviceObject_27: int, actual_Irp_21: int) returns (Tmp_1712: int)
{
  var {:pointer} irpStack_6: int;
  var {:pointer} pdoExtension_7: int;
  var {:scalar} powerState_3: int;
  var {:scalar} status_51: int;
  var {:scalar} newSystemState: int;
  var {:pointer} DeviceObject_27: int;
  var {:pointer} Irp_21: int;

  anon0:
    call {:si_unique_call 1857} powerState_3 := __HAVOC_malloc(8);
    DeviceObject_27 := actual_DeviceObject_27;
    Irp_21 := actual_Irp_21;
    assume {:nonnull} DeviceObject_27 != 0;
    assume DeviceObject_27 > 0;
    havoc pdoExtension_7;
    status_51 := 0;
    call {:si_unique_call 1858} irpStack_6 := sdv_IoGetCurrentIrpStackLocation(Irp_21);
    assume {:nonnull} irpStack_6 != 0;
    assume irpStack_6 > 0;
    havoc newSystemState;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} newSystemState == 5;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} powerState_3 != 0;
    assume powerState_3 > 0;
    goto L23;

  L23:
    call {:si_unique_call 1859} status_51 := PoRequestPowerIrp(0, 2, powerState_3, li2bplFunctionConstant161, 0, 0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_51 >= 0;
    status_51 := 259;
    goto L16;

  L16:
    Tmp_1712 := status_51;
    return;

  anon19_Then:
    assume {:partition} 0 > status_51;
    goto L16;

  anon18_Then:
    goto L20;

  L20:
    assume {:nonnull} powerState_3 != 0;
    assume powerState_3 > 0;
    goto L23;

  anon17_Then:
    assume {:partition} newSystemState != 5;
    goto L20;

  anon15_Then:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} newSystemState == 1;
    assume {:nonnull} powerState_3 != 0;
    assume powerState_3 > 0;
    goto L31;

  L31:
    call {:si_unique_call 1860} status_51 := PoRequestPowerIrp(0, 2, powerState_3, li2bplFunctionConstant161, 0, 0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} status_51 >= 0;
    status_51 := 259;
    goto L16;

  anon20_Then:
    assume {:partition} 0 > status_51;
    goto L16;

  anon16_Then:
    assume {:partition} newSystemState != 1;
    assume {:nonnull} powerState_3 != 0;
    assume powerState_3 > 0;
    goto L31;

  anon21_Then:
    goto L16;
}



procedure {:origName "TrueffsDeleteSymblicLinks"} TrueffsDeleteSymblicLinks(actual_FdoExtension_3: int) returns (Tmp_1714: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1714 == 0 || Tmp_1714 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsDeleteSymblicLinks"} TrueffsDeleteSymblicLinks(actual_FdoExtension_3: int) returns (Tmp_1714: int)
{
  var {:pointer} sdv_847: int;
  var {:scalar} status_52: int;
  var {:pointer} FdoExtension_3: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;

  anon0:
    call {:si_unique_call 1861} vslice_dummy_var_374 := __HAVOC_malloc(12);
    call {:si_unique_call 1862} vslice_dummy_var_375 := __HAVOC_malloc(12);
    call {:si_unique_call 1863} vslice_dummy_var_376 := __HAVOC_malloc(12);
    FdoExtension_3 := actual_FdoExtension_3;
    call {:si_unique_call 1864} vslice_dummy_var_377 := __HAVOC_malloc(76);
    call {:si_unique_call 1865} vslice_dummy_var_378 := __HAVOC_malloc(80);
    call {:si_unique_call 1866} vslice_dummy_var_379 := __HAVOC_malloc(256);
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1867} vslice_dummy_var_380 := corral_nondet();
    call {:si_unique_call 1868} RtlInitString(0, 0);
    call {:si_unique_call 1869} status_52 := RtlAnsiStringToUnicodeString(0, 0, 1);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} status_52 >= 0;
    call {:si_unique_call 1870} vslice_dummy_var_381 := corral_nondet();
    call {:si_unique_call 1871} RtlInitString(0, 0);
    call {:si_unique_call 1872} status_52 := RtlAnsiStringToUnicodeString(0, 0, 1);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_52 >= 0;
    call {:si_unique_call 1873} status_52 := IoDeleteSymbolicLink(0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_52 >= 0;
    call {:si_unique_call 1874} sdv_IoDeassignArcName(0);
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    call {:si_unique_call 1875} sdv_847 := IoGetConfigurationInformation();
    assume {:nonnull} sdv_847 != 0;
    assume sdv_847 > 0;
    goto L42;

  L42:
    call {:si_unique_call 1876} RtlFreeUnicodeString(0);
    goto L34;

  L34:
    call {:si_unique_call 1877} RtlFreeUnicodeString(0);
    goto L22;

  L22:
    Tmp_1714 := status_52;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} 0 > status_52;
    goto L42;

  anon11_Then:
    assume {:partition} 0 > status_52;
    goto L34;

  anon10_Then:
    assume {:partition} 0 > status_52;
    goto L22;

  anon9_Then:
    Tmp_1714 := 0;
    goto L1;
}



procedure {:origName "TrueffsSyncSendIrpCompletionRoutine"} TrueffsSyncSendIrpCompletionRoutine(actual_DeviceObject_28: int, actual_Irp_22: int, actual_Context_8: int) returns (Tmp_1718: int);
  free ensures {:va_keep} Tmp_1718 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsSyncSendIrpCompletionRoutine"} TrueffsSyncSendIrpCompletionRoutine(actual_DeviceObject_28: int, actual_Irp_22: int, actual_Context_8: int) returns (Tmp_1718: int)
{
  var {:pointer} event_5: int;
  var {:pointer} Context_8: int;
  var vslice_dummy_var_382: int;

  anon0:
    Context_8 := actual_Context_8;
    event_5 := Context_8;
    call {:si_unique_call 1878} vslice_dummy_var_382 := KeSetEvent(event_5, 1, 0);
    Tmp_1718 := -1073741802;
    return;
}



procedure {:origName "TrueffsMountMedia"} TrueffsMountMedia(actual_deviceExtension_13: int) returns (Tmp_1720: int);
  modifies alloc, initDone, LockDepth;
  free ensures {:va_keep} Tmp_1720 == 0 || Tmp_1720 == -1073741804 || Tmp_1720 == -1073741823 || Tmp_1720 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsMountMedia"} TrueffsMountMedia(actual_deviceExtension_13: int) returns (Tmp_1720: int)
{
  var {:scalar} flStatusProt: int;
  var {:scalar} ioreq_23: int;
  var {:dopa} {:scalar} prevValue_2: int;
  var {:scalar} flStatus: int;
  var {:dopa} {:scalar} cylinders_4: int;
  var {:dopa} {:scalar} heads_2: int;
  var {:scalar} ioreqProt: int;
  var {:pointer} sdv_854: int;
  var {:scalar} Tmp_1721: int;
  var {:scalar} Tmp_1723: int;
  var {:scalar} currSockets: int;
  var {:dopa} {:scalar} sectors_2: int;
  var {:scalar} status_53: int;
  var {:scalar} Tmp_1724: int;
  var {:pointer} deviceExtension_13: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_1448: int;

  anon0:
    call {:si_unique_call 1879} ioreq_23 := __HAVOC_malloc(24);
    call {:si_unique_call 1880} prevValue_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1881} cylinders_4 := __HAVOC_malloc(4);
    call {:si_unique_call 1882} heads_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1883} ioreqProt := __HAVOC_malloc(24);
    call {:si_unique_call 1884} sectors_2 := __HAVOC_malloc(4);
    deviceExtension_13 := actual_deviceExtension_13;
    flStatus := 0;
    flStatusProt := 0;
    currSockets := 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} ioreq_23 != 0;
    assume ioreq_23 > 0;
    call {:si_unique_call 1885} flStatus := bdCall(810, ioreq_23);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} flStatus != 0;
    status_53 := -1073741804;
    goto L26;

  L26:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} status_53 >= 0;
    goto L30;

  L30:
    Tmp_1720 := status_53;
    goto L1;

  L1:
    return;

  anon22_Then:
    assume {:partition} 0 > status_53;
    call {:si_unique_call 1886} vslice_dummy_var_383 := TrueffsStopRemoveDevice(deviceExtension_13);
    call {:si_unique_call 1887} vslice_dummy_var_384 := TrueffsDeleteSymblicLinks(deviceExtension_13);
    goto L30;

  anon21_Then:
    assume {:partition} flStatus == 0;
    assume {:nonnull} ioreqProt != 0;
    assume ioreqProt > 0;
    assume {:nonnull} ioreq_23 != 0;
    assume ioreq_23 > 0;
    assume {:nonnull} ioreqProt != 0;
    assume ioreqProt > 0;
    call {:si_unique_call 1888} flStatusProt := bdCall(801, ioreqProt);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} flStatusProt != 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    goto L43;

  L43:
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    call {:si_unique_call 1889} vslice_dummy_var_386 := bdCall(821, ioreq_23);
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} ioreq_23 != 0;
    assume ioreq_23 > 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    havoc vslice_dummy_var_1448;
    call {:si_unique_call 1890} flBuildGeometry(vslice_dummy_var_1448, cylinders_4, heads_2, sectors_2, 0);
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} sectors_2 != 0;
    assume sectors_2 > 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} heads_2 != 0;
    assume heads_2 > 0;
    assume {:nonnull} cylinders_4 != 0;
    assume cylinders_4 > 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L60;

  L60:
    currSockets := 0;
    goto L61;

  L61:
    call {:si_unique_call 1891} Tmp_1721, Tmp_1723, currSockets, status_53, Tmp_1724 := TrueffsMountMedia_loop_L61(prevValue_2, Tmp_1721, Tmp_1723, currSockets, status_53, Tmp_1724);
    goto L61_last;

  L61_last:
    assume {:CounterLoop 8} {:Counter "currSockets"} true;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} 8 > currSockets;
    Tmp_1724 := currSockets;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    Tmp_1723 := currSockets;
    havoc Tmp_1721;
    call {:si_unique_call 1892} status_53 := flSetEnvSocket(202, currSockets, Tmp_1721, prevValue_2);
    goto L64;

  L64:
    currSockets := currSockets + 1;
    goto L64_dummy;

  L64_dummy:
    assume false;
    return;

  anon29_Then:
    goto L64;

  anon25_Then:
    assume {:partition} currSockets >= 8;
    Tmp_1720 := 0;
    goto L1;

  anon28_Then:
    call {:si_unique_call 1893} sdv_854 := AllocatePdo(deviceExtension_13);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_854 != 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    call {:si_unique_call 1894} status_53 := PsCreateSystemThread(0, 0, 0, 0, 0, li2bplFunctionConstant146, 0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_53 >= 0;
    call {:si_unique_call 1895} status_53 := ObReferenceObjectByHandle(0, 1048576, 0, 0, 0, 0);
    call {:si_unique_call 1896} vslice_dummy_var_385 := ZwClose(0);
    goto L60;

  anon27_Then:
    assume {:partition} 0 > status_53;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    goto L26;

  anon30_Then:
    goto L60;

  anon26_Then:
    assume {:partition} sdv_854 == 0;
    status_53 := -1073741670;
    goto L26;

  anon23_Then:
    assume {:partition} flStatusProt == 0;
    assume {:nonnull} ioreqProt != 0;
    assume ioreqProt > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    call {:si_unique_call 1897} sdv_RtlZeroMemory(0, 512);
    goto L43;

  anon24_Then:
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    goto L43;
}



procedure {:origName "DeviceBuildInstanceId"} DeviceBuildInstanceId(actual_deviceExtension_14: int, actual_Fdo_7: int) returns (Tmp_1725: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "DeviceBuildInstanceId"} DeviceBuildInstanceId(actual_deviceExtension_14: int, actual_Fdo_7: int) returns (Tmp_1725: int)
{
  var {:pointer} idString_2: int;
  var {:pointer} sdv_863: int;
  var {:scalar} idStringBufLen_2: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;

  anon0:
    call {:si_unique_call 1898} vslice_dummy_var_388 := __HAVOC_malloc(36);
    idStringBufLen_2 := 100;
    call {:si_unique_call 1899} sdv_863 := ExAllocatePoolWithTag(1, idStringBufLen_2, -463051180);
    idString_2 := sdv_863;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} idString_2 != 0;
    call {:si_unique_call 1900} vslice_dummy_var_387 := corral_nondet();
    Tmp_1725 := idString_2;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} idString_2 == 0;
    Tmp_1725 := 0;
    goto L1;
}



procedure {:origName "TrueffsThread"} TrueffsThread(actual_Context_9: int);
  modifies alloc, initDone, yogi_error, LockDepth;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsThread"} TrueffsThread(actual_Context_9: int)
{
  var {:scalar} ioreq_24: int;
  var {:scalar} flStatusProt_1: int;
  var {:pointer} Tmp_1727: int;
  var {:pointer} Tmp_1728: int;
  var {:pointer} Tmp_1729: int;
  var {:pointer} userOutput: int;
  var {:pointer} Tmp_1731: int;
  var {:pointer} cdb: int;
  var {:pointer} Tmp_1732: int;
  var {:pointer} Tmp_1733: int;
  var {:scalar} Tmp_1734: int;
  var {:pointer} tmpDataBuffer: int;
  var {:pointer} Tmp_1735: int;
  var {:pointer} irpSp_3: int;
  var {:scalar} iplInput: int;
  var {:pointer} Tmp_1738: int;
  var {:scalar} Tmp_1739: int;
  var {:pointer} Tmp_1740: int;
  var {:pointer} Tmp_1741: int;
  var {:pointer} Tmp_1742: int;
  var {:scalar} Tmp_1743: int;
  var {:pointer} Tmp_1744: int;
  var {:pointer} Tmp_1746: int;
  var {:scalar} ioreqProt_1: int;
  var {:pointer} sdv_873: int;
  var {:pointer} Tmp_1747: int;
  var {:pointer} Tmp_1748: int;
  var {:pointer} Tmp_1750: int;
  var {:scalar} Tmp_1751: int;
  var {:scalar} placeExbInput: int;
  var {:pointer} Tmp_1752: int;
  var {:pointer} Tmp_1753: int;
  var {:pointer} Tmp_1754: int;
  var {:pointer} Tmp_1756: int;
  var {:pointer} Tmp_1757: int;
  var {:scalar} flFp: int;
  var {:scalar} queueWait: int;
  var {:pointer} Tmp_1759: int;
  var {:pointer} Tmp_1761: int;
  var {:scalar} Tmp_1762: int;
  var {:pointer} Tmp_1763: int;
  var {:pointer} Tmp_1764: int;
  var {:pointer} Tmp_1765: int;
  var {:pointer} Tmp_1766: int;
  var {:scalar} Tmp_1767: int;
  var {:pointer} sdv_877: int;
  var {:pointer} Tmp_1768: int;
  var {:scalar} tffsStatus: int;
  var {:pointer} irp_2: int;
  var {:scalar} waitStatus: int;
  var {:pointer} Tmp_1769: int;
  var {:scalar} Tmp_1770: int;
  var {:pointer} Tmp_1771: int;
  var {:scalar} protectionInput: int;
  var {:pointer} Tmp_1773: int;
  var {:scalar} Tmp_1774: int;
  var {:pointer} Tmp_1775: int;
  var {:pointer} Tmp_1776: int;
  var {:pointer} Tmp_1777: int;
  var {:pointer} Tmp_1779: int;
  var {:pointer} revisionString: int;
  var {:pointer} Tmp_1781: int;
  var {:pointer} Tmp_1782: int;
  var {:pointer} Tmp_1783: int;
  var {:pointer} deviceExtension_15: int;
  var {:pointer} Tmp_1784: int;
  var {:pointer} Tmp_1785: int;
  var {:pointer} Tmp_1786: int;
  var {:pointer} Tmp_1787: int;
  var {:pointer} dataOffset: int;
  var {:pointer} request: int;
  var {:pointer} Tmp_1788: int;
  var {:pointer} Tmp_1789: int;
  var {:scalar} transferForbidden: int;
  var {:pointer} Tmp_1790: int;
  var {:pointer} Tmp_1791: int;
  var {:pointer} Tmp_1792: int;
  var {:dopa} {:scalar} i_19: int;
  var {:pointer} Tmp_1795: int;
  var {:pointer} Tmp_1796: int;
  var {:pointer} Tmp_1797: int;
  var {:pointer} Tmp_1798: int;
  var {:pointer} Tmp_1799: int;
  var {:pointer} Tmp_1800: int;
  var {:pointer} Tmp_1801: int;
  var {:pointer} Tmp_1802: int;
  var {:pointer} Tmp_1803: int;
  var {:scalar} Tmp_1804: int;
  var {:pointer} Tmp_1805: int;
  var {:pointer} Tmp_1806: int;
  var {:scalar} Tmp_1807: int;
  var {:pointer} Tmp_1808: int;
  var {:scalar} bdkOperationInput: int;
  var {:scalar} otpInput: int;
  var {:pointer} productString: int;
  var {:scalar} tffsPriority: int;
  var {:pointer} inquiryData: int;
  var {:pointer} userInput: int;
  var {:pointer} Tmp_1810: int;
  var {:pointer} Tmp_1811: int;
  var {:pointer} Tmp_1812: int;
  var {:pointer} Srb: int;
  var {:pointer} Tmp_1813: int;
  var {:pointer} Tmp_1814: int;
  var {:pointer} Tmp_1815: int;
  var {:pointer} Tmp_1816: int;
  var {:pointer} Tmp_1817: int;
  var {:pointer} Tmp_1818: int;
  var {:pointer} Tmp_1819: int;
  var {:scalar} startingSector: int;
  var {:pointer} Tmp_1821: int;
  var {:pointer} Tmp_1823: int;
  var {:pointer} Tmp_1824: int;
  var {:scalar} Tmp_1825: int;
  var {:pointer} storedSrbDataBuffer: int;
  var {:pointer} vendorString: int;
  var {:pointer} Tmp_1827: int;
  var {:scalar} flIoctlRec: int;
  var {:pointer} Tmp_1829: int;
  var {:pointer} Tmp_1830: int;
  var {:pointer} Tmp_1831: int;
  var {:scalar} status_54: int;
  var {:pointer} Tmp_1832: int;
  var {:pointer} Tmp_1833: int;
  var {:scalar} Tmp_1834: int;
  var {:pointer} pageData: int;
  var {:scalar} Tmp_1835: int;
  var {:pointer} Tmp_1836: int;
  var {:pointer} Tmp_1838: int;
  var {:pointer} Tmp_1839: int;
  var {:pointer} Tmp_1840: int;
  var {:scalar} iDefrag: int;
  var {:scalar} Tmp_1841: int;
  var {:pointer} Context_9: int;
  var boogieTmp: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_1449: int;
  var vslice_dummy_var_1450: int;
  var vslice_dummy_var_1451: int;

  anon0:
    call {:si_unique_call 1901} ioreq_24 := __HAVOC_malloc(24);
    call {:si_unique_call 1902} vslice_dummy_var_389 := __HAVOC_malloc(4);
    call {:si_unique_call 1903} iplInput := __HAVOC_malloc(12);
    call {:si_unique_call 1904} ioreqProt_1 := __HAVOC_malloc(24);
    call {:si_unique_call 1905} placeExbInput := __HAVOC_malloc(16);
    call {:si_unique_call 1906} flFp := __HAVOC_malloc(68);
    call {:si_unique_call 1907} queueWait := __HAVOC_malloc(20);
    call {:si_unique_call 1908} protectionInput := __HAVOC_malloc(12);
    call {:si_unique_call 1909} i_19 := __HAVOC_malloc(4);
    call {:si_unique_call 1910} bdkOperationInput := __HAVOC_malloc(32);
    call {:si_unique_call 1911} otpInput := __HAVOC_malloc(20);
    call {:si_unique_call 1912} flIoctlRec := __HAVOC_malloc(8);
    call {:si_unique_call 1913} iDefrag := __HAVOC_malloc(4);
    Context_9 := actual_Context_9;
    call {:si_unique_call 1914} vslice_dummy_var_392 := __HAVOC_malloc(8);
    call {:si_unique_call 1915} Tmp_1740 := __HAVOC_malloc(32);
    call {:si_unique_call 1916} Tmp_1753 := __HAVOC_malloc(16);
    call {:si_unique_call 1917} Tmp_1771 := __HAVOC_malloc(64);
    call {:si_unique_call 1918} vslice_dummy_var_393 := __HAVOC_malloc(8);
    call {:si_unique_call 1919} revisionString := __HAVOC_malloc(16);
    call {:si_unique_call 1920} Tmp_1802 := __HAVOC_malloc(64);
    call {:si_unique_call 1921} productString := __HAVOC_malloc(64);
    call {:si_unique_call 1922} vendorString := __HAVOC_malloc(32);
    call {:si_unique_call 1923} Tmp_1832 := __HAVOC_malloc(16);
    call {:si_unique_call 1924} Tmp_1840 := __HAVOC_malloc(16);
    deviceExtension_15 := Context_9;
    storedSrbDataBuffer := 0;
    tffsStatus := 0;
    flStatusProt_1 := 0;
    userInput := 0;
    userOutput := 0;
    call {:si_unique_call 1925} sdv_do_paged_code_check();
    assume {:nonnull} queueWait != 0;
    assume queueWait > 0;
    goto L47;

  L47:
    call {:si_unique_call 1926} flStatusProt_1, Tmp_1727, Tmp_1728, Tmp_1729, userOutput, Tmp_1731, cdb, Tmp_1732, Tmp_1733, Tmp_1734, tmpDataBuffer, Tmp_1735, irpSp_3, Tmp_1738, Tmp_1739, Tmp_1740, Tmp_1741, Tmp_1742, Tmp_1743, Tmp_1744, Tmp_1746, sdv_873, Tmp_1747, Tmp_1748, Tmp_1750, Tmp_1751, Tmp_1752, Tmp_1753, Tmp_1754, Tmp_1756, Tmp_1757, Tmp_1759, Tmp_1761, Tmp_1762, Tmp_1763, Tmp_1764, Tmp_1765, Tmp_1766, Tmp_1767, sdv_877, Tmp_1768, tffsStatus, irp_2, waitStatus, Tmp_1769, Tmp_1770, Tmp_1771, Tmp_1773, Tmp_1774, Tmp_1775, Tmp_1776, Tmp_1777, Tmp_1779, Tmp_1781, Tmp_1782, Tmp_1783, Tmp_1784, Tmp_1785, Tmp_1786, Tmp_1787, dataOffset, request, Tmp_1788, Tmp_1789, transferForbidden, Tmp_1790, Tmp_1791, Tmp_1792, Tmp_1795, Tmp_1796, Tmp_1797, Tmp_1798, Tmp_1799, Tmp_1800, Tmp_1801, Tmp_1802, Tmp_1803, Tmp_1804, Tmp_1805, Tmp_1806, Tmp_1807, Tmp_1808, tffsPriority, inquiryData, userInput, Tmp_1810, Tmp_1811, Tmp_1812, Srb, Tmp_1813, Tmp_1814, Tmp_1815, Tmp_1816, Tmp_1817, Tmp_1818, Tmp_1819, startingSector, Tmp_1821, Tmp_1823, Tmp_1824, Tmp_1825, storedSrbDataBuffer, Tmp_1827, Tmp_1829, Tmp_1830, Tmp_1831, status_54, Tmp_1832, Tmp_1833, Tmp_1834, pageData, Tmp_1835, Tmp_1836, Tmp_1838, Tmp_1839, Tmp_1840, Tmp_1841, boogieTmp, vslice_dummy_var_390, vslice_dummy_var_391, vslice_dummy_var_394, vslice_dummy_var_395, vslice_dummy_var_396, vslice_dummy_var_397, vslice_dummy_var_398 := TrueffsThread_loop_L47(ioreq_24, flStatusProt_1, Tmp_1727, Tmp_1728, Tmp_1729, userOutput, Tmp_1731, cdb, Tmp_1732, Tmp_1733, Tmp_1734, tmpDataBuffer, Tmp_1735, irpSp_3, iplInput, Tmp_1738, Tmp_1739, Tmp_1740, Tmp_1741, Tmp_1742, Tmp_1743, Tmp_1744, Tmp_1746, ioreqProt_1, sdv_873, Tmp_1747, Tmp_1748, Tmp_1750, Tmp_1751, placeExbInput, Tmp_1752, Tmp_1753, Tmp_1754, Tmp_1756, Tmp_1757, flFp, queueWait, Tmp_1759, Tmp_1761, Tmp_1762, Tmp_1763, Tmp_1764, Tmp_1765, Tmp_1766, Tmp_1767, sdv_877, Tmp_1768, tffsStatus, irp_2, waitStatus, Tmp_1769, Tmp_1770, Tmp_1771, protectionInput, Tmp_1773, Tmp_1774, Tmp_1775, Tmp_1776, Tmp_1777, Tmp_1779, revisionString, Tmp_1781, Tmp_1782, Tmp_1783, deviceExtension_15, Tmp_1784, Tmp_1785, Tmp_1786, Tmp_1787, dataOffset, request, Tmp_1788, Tmp_1789, transferForbidden, Tmp_1790, Tmp_1791, Tmp_1792, i_19, Tmp_1795, Tmp_1796, Tmp_1797, Tmp_1798, Tmp_1799, Tmp_1800, Tmp_1801, Tmp_1802, Tmp_1803, Tmp_1804, Tmp_1805, Tmp_1806, Tmp_1807, Tmp_1808, bdkOperationInput, otpInput, productString, tffsPriority, inquiryData, userInput, Tmp_1810, Tmp_1811, Tmp_1812, Srb, Tmp_1813, Tmp_1814, Tmp_1815, Tmp_1816, Tmp_1817, Tmp_1818, Tmp_1819, startingSector, Tmp_1821, Tmp_1823, Tmp_1824, Tmp_1825, storedSrbDataBuffer, vendorString, Tmp_1827, flIoctlRec, Tmp_1829, Tmp_1830, Tmp_1831, status_54, Tmp_1832, Tmp_1833, Tmp_1834, pageData, Tmp_1835, Tmp_1836, Tmp_1838, Tmp_1839, Tmp_1840, iDefrag, Tmp_1841, boogieTmp, vslice_dummy_var_390, vslice_dummy_var_391, vslice_dummy_var_394, vslice_dummy_var_395, vslice_dummy_var_396, vslice_dummy_var_397, vslice_dummy_var_398);
    goto L47_last;

  L47_last:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    call {:si_unique_call 1995} vslice_dummy_var_390 := KeSetEvent(PendingIRPEvent__DEVICE_EXTENSION(deviceExtension_15), 0, 0);
    call {:si_unique_call 1996} waitStatus := KeWaitForSingleObject(0, 0, 0, 0, queueWait);
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume {:partition} waitStatus == 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    goto L61;

  L61:
    call {:si_unique_call 1927} flStatusProt_1, Tmp_1727, Tmp_1728, Tmp_1729, userOutput, Tmp_1731, cdb, Tmp_1732, Tmp_1733, Tmp_1734, tmpDataBuffer, Tmp_1735, irpSp_3, Tmp_1738, Tmp_1739, Tmp_1740, Tmp_1741, Tmp_1742, Tmp_1743, Tmp_1744, Tmp_1746, sdv_873, Tmp_1747, Tmp_1748, Tmp_1750, Tmp_1751, Tmp_1752, Tmp_1753, Tmp_1754, Tmp_1756, Tmp_1757, Tmp_1759, Tmp_1761, Tmp_1762, Tmp_1763, Tmp_1764, Tmp_1765, Tmp_1766, Tmp_1767, sdv_877, Tmp_1768, tffsStatus, irp_2, Tmp_1769, Tmp_1770, Tmp_1771, Tmp_1773, Tmp_1774, Tmp_1775, Tmp_1776, Tmp_1777, Tmp_1779, Tmp_1781, Tmp_1782, Tmp_1783, Tmp_1784, Tmp_1785, Tmp_1786, Tmp_1787, dataOffset, request, Tmp_1788, Tmp_1789, transferForbidden, Tmp_1790, Tmp_1791, Tmp_1792, Tmp_1795, Tmp_1796, Tmp_1797, Tmp_1798, Tmp_1799, Tmp_1800, Tmp_1801, Tmp_1802, Tmp_1803, Tmp_1804, Tmp_1805, Tmp_1806, Tmp_1807, Tmp_1808, tffsPriority, inquiryData, userInput, Tmp_1810, Tmp_1811, Tmp_1812, Srb, Tmp_1813, Tmp_1814, Tmp_1815, Tmp_1816, Tmp_1817, Tmp_1818, Tmp_1819, startingSector, Tmp_1821, Tmp_1823, Tmp_1824, Tmp_1825, storedSrbDataBuffer, Tmp_1827, Tmp_1829, Tmp_1830, Tmp_1831, status_54, Tmp_1832, Tmp_1833, Tmp_1834, pageData, Tmp_1835, Tmp_1836, Tmp_1838, Tmp_1839, Tmp_1840, Tmp_1841, boogieTmp, vslice_dummy_var_391, vslice_dummy_var_394, vslice_dummy_var_395, vslice_dummy_var_396, vslice_dummy_var_397 := TrueffsThread_loop_L61(ioreq_24, flStatusProt_1, Tmp_1727, Tmp_1728, Tmp_1729, userOutput, Tmp_1731, cdb, Tmp_1732, Tmp_1733, Tmp_1734, tmpDataBuffer, Tmp_1735, irpSp_3, iplInput, Tmp_1738, Tmp_1739, Tmp_1740, Tmp_1741, Tmp_1742, Tmp_1743, Tmp_1744, Tmp_1746, ioreqProt_1, sdv_873, Tmp_1747, Tmp_1748, Tmp_1750, Tmp_1751, placeExbInput, Tmp_1752, Tmp_1753, Tmp_1754, Tmp_1756, Tmp_1757, flFp, Tmp_1759, Tmp_1761, Tmp_1762, Tmp_1763, Tmp_1764, Tmp_1765, Tmp_1766, Tmp_1767, sdv_877, Tmp_1768, tffsStatus, irp_2, Tmp_1769, Tmp_1770, Tmp_1771, protectionInput, Tmp_1773, Tmp_1774, Tmp_1775, Tmp_1776, Tmp_1777, Tmp_1779, revisionString, Tmp_1781, Tmp_1782, Tmp_1783, deviceExtension_15, Tmp_1784, Tmp_1785, Tmp_1786, Tmp_1787, dataOffset, request, Tmp_1788, Tmp_1789, transferForbidden, Tmp_1790, Tmp_1791, Tmp_1792, i_19, Tmp_1795, Tmp_1796, Tmp_1797, Tmp_1798, Tmp_1799, Tmp_1800, Tmp_1801, Tmp_1802, Tmp_1803, Tmp_1804, Tmp_1805, Tmp_1806, Tmp_1807, Tmp_1808, bdkOperationInput, otpInput, productString, tffsPriority, inquiryData, userInput, Tmp_1810, Tmp_1811, Tmp_1812, Srb, Tmp_1813, Tmp_1814, Tmp_1815, Tmp_1816, Tmp_1817, Tmp_1818, Tmp_1819, startingSector, Tmp_1821, Tmp_1823, Tmp_1824, Tmp_1825, storedSrbDataBuffer, vendorString, Tmp_1827, flIoctlRec, Tmp_1829, Tmp_1830, Tmp_1831, status_54, Tmp_1832, Tmp_1833, Tmp_1834, pageData, Tmp_1835, Tmp_1836, Tmp_1838, Tmp_1839, Tmp_1840, iDefrag, Tmp_1841, boogieTmp, vslice_dummy_var_391, vslice_dummy_var_394, vslice_dummy_var_395, vslice_dummy_var_396, vslice_dummy_var_397);
    goto L61_last;

  L61_last:
    call {:si_unique_call 1994} request := sdv_ExInterlockedRemoveHeadList(0, 0);
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    call {:si_unique_call 1928} KeClearEvent(PendingIRPEvent__DEVICE_EXTENSION(deviceExtension_15));
    call {:si_unique_call 1929} sdv_877 := sdv_containing_record(request, 88);
    irp_2 := sdv_877;
    call {:si_unique_call 1930} irpSp_3 := sdv_IoGetCurrentIrpStackLocation(irp_2);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    havoc Srb;
    transferForbidden := 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto anon457_Then, anon457_Else;

  anon457_Else:
    tmpDataBuffer := 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon458_Then, anon458_Else;

  anon458_Else:
    goto L86;

  L86:
    Tmp_1751 := 32;
    goto L87;

  L87:
    tffsPriority := Tmp_1751;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc storedSrbDataBuffer;
    call {:si_unique_call 1931} sdv_873 := sdv_MmGetSystemAddressForMdlSafe(0, tffsPriority);
    dataOffset := sdv_873;
    goto anon459_Then, anon459_Else;

  anon459_Else:
    assume {:partition} dataOffset != 0;
    call {:si_unique_call 1932} vslice_dummy_var_391 := sdv_MmGetMdlVirtualAddress(0);
    tmpDataBuffer := dataOffset;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto L80;

  L80:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon446_Then, anon446_Else;

  anon446_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon445_Then, anon445_Else;

  anon445_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    goto L123;

  L123:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L125;

  L125:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1933} sdv_IoCompleteRequest(0, 1);
    goto anon487_Then, anon487_Else;

  anon487_Else:
    assume {:partition} yogi_error != 1;
    goto anon487_Else_dummy;

  anon487_Else_dummy:
    assume false;
    return;

  anon487_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon359_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1934} tffsStatus := flIOctl(ioreq_24);
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L125;

  anon361_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L125;

  anon360_Then:
    goto L123;

  anon428_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon448_Then, anon448_Else;

  anon448_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon447_Then, anon447_Else;

  anon447_Else:
    goto L652;

  L652:
    status_54 := 1;
    goto L654;

  L654:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon490_Then, anon490_Else;

  anon490_Else:
    assume {:partition} status_54 == 1;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L659;

  L659:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto L660;

  L660:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1935} boogieTmp := TrueffsTranslateSRBStatus(status_54);
    call {:si_unique_call 1936} sdv_IoCompleteRequest(0, 1);
    goto anon491_Then, anon491_Else;

  anon491_Else:
    assume {:partition} yogi_error != 1;
    goto anon491_Else_dummy;

  anon491_Else_dummy:
    assume false;
    return;

  anon491_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon402_Then:
    goto L660;

  anon490_Then:
    assume {:partition} status_54 != 1;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L659;

  anon447_Then:
    status_54 := 6;
    goto L654;

  anon448_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    status_54 := 3;
    goto L654;

  anon401_Then:
    goto L652;

  anon340_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto L672;

  L672:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1937} sdv_IoCompleteRequest(0, 0);
    goto anon488_Then, anon488_Else;

  anon488_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  anon488_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon403_Then:
    goto L672;

  anon400_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_1802;
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    goto anon489_Then, anon489_Else;

  anon489_Else:
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    goto anon456_Then, anon456_Else;

  anon456_Else:
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    goto anon455_Then, anon455_Else;

  anon455_Else:
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    goto anon454_Then, anon454_Else;

  anon454_Else:
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    goto anon453_Then, anon453_Else;

  anon453_Else:
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    goto anon452_Then, anon452_Else;

  anon452_Else:
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    goto anon451_Then, anon451_Else;

  anon451_Else:
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    goto anon450_Then, anon450_Else;

  anon450_Else:
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    goto anon449_Then, anon449_Else;

  anon449_Else:
    status_54 := 1;
    goto L654;

  anon449_Then:
    status_54 := 6;
    goto L654;

  anon450_Then:
    goto L688;

  L688:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    call {:si_unique_call 1938} startingSector := corral_nondet();
    goto anon495_Then, anon495_Else;

  anon495_Else:
    assume {:partition} transferForbidden != 0;
    status_54 := 4;
    goto L654;

  anon495_Then:
    assume {:partition} transferForbidden == 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    call {:si_unique_call 1939} boogieTmp := corral_nondet();
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon496_Then, anon496_Else;

  anon496_Else:
    tffsStatus := 27;
    goto L654;

  anon496_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    havoc vslice_dummy_var_1449;
    call {:si_unique_call 1940} vslice_dummy_var_395 := flmemcpy(vslice_dummy_var_1449, PartitonTable__DEVICE_EXTENSION(deviceExtension_15), 512);
    tffsStatus := 0;
    goto anon497_Then, anon497_Else;

  anon497_Else:
    assume {:partition} tffsStatus == 0;
    Tmp_1767 := 1;
    goto L718;

  L718:
    status_54 := Tmp_1767;
    goto L654;

  anon497_Then:
    assume {:partition} tffsStatus != 0;
    Tmp_1767 := 4;
    goto L718;

  anon410_Then:
    goto L706;

  L706:
    call {:si_unique_call 1941} tffsStatus := bdCall(818, ioreq_24);
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    call {:si_unique_call 1942} sdv_KeFlushIoBuffers(0, 1, 0);
    goto L721;

  L721:
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:partition} tffsStatus == 0;
    Tmp_1734 := 1;
    goto L727;

  L727:
    status_54 := Tmp_1734;
    goto L654;

  anon412_Then:
    assume {:partition} tffsStatus != 0;
    Tmp_1734 := 4;
    goto L727;

  anon411_Then:
    goto L721;

  anon409_Then:
    goto L706;

  anon408_Then:
    goto L706;

  anon406_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    goto L729;

  L729:
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    goto L731;

  L731:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    goto L733;

  L733:
    tffsStatus := -1073741662;
    status_54 := tffsStatus;
    goto L654;

  anon416_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    call {:si_unique_call 1943} tffsStatus := bdCall(816, ioreq_24);
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:partition} tffsStatus == 19;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    goto anon498_Then, anon498_Else;

  anon498_Else:
    goto L744;

  L744:
    tffsStatus := -1073741662;
    status_54 := tffsStatus;
    goto L654;

  anon498_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    havoc vslice_dummy_var_1450;
    call {:si_unique_call 1944} vslice_dummy_var_396 := flmemcpy(PartitonTable__DEVICE_EXTENSION(deviceExtension_15), vslice_dummy_var_1450, 512);
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto L744;

  anon420_Then:
    goto L744;

  anon418_Then:
    assume {:partition} tffsStatus != 19;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} tffsStatus != 0;
    status_54 := 4;
    goto L654;

  anon419_Then:
    assume {:partition} tffsStatus == 0;
    status_54 := 1;
    goto L654;

  anon417_Then:
    goto L733;

  anon414_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    havoc vslice_dummy_var_1451;
    call {:si_unique_call 1945} vslice_dummy_var_397 := flmemcpy(PartitonTable__DEVICE_EXTENSION(deviceExtension_15), vslice_dummy_var_1451, 512);
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    tffsStatus := -1073741662;
    status_54 := tffsStatus;
    goto L654;

  anon415_Then:
    goto L731;

  anon407_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    goto L731;

  anon413_Then:
    goto L729;

  anon451_Then:
    goto L688;

  anon452_Then:
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:partition} transferForbidden != 0;
    status_54 := 4;
    goto L654;

  anon405_Then:
    assume {:partition} transferForbidden == 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_1744;
    assume {:nonnull} Tmp_1744 != 0;
    assume Tmp_1744 > 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    Tmp_1796 := i_19;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    Tmp_1782 := i_19;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    Tmp_1817 := i_19;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    Tmp_1752 := i_19;
    status_54 := 1;
    goto L654;

  anon453_Then:
    status_54 := 1;
    goto L654;

  anon454_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdb := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon494_Then, anon494_Else;

  anon494_Else:
    goto L771;

  L771:
    status_54 := 6;
    goto L654;

  anon494_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:partition} transferForbidden != 0;
    status_54 := 4;
    goto L654;

  anon422_Then:
    assume {:partition} transferForbidden == 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc pageData;
    Tmp_1769 := pageData;
    assume {:nonnull} Tmp_1769 != 0;
    assume Tmp_1769 > 0;
    Tmp_1747 := pageData;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    Tmp_1795 := pageData;
    assume {:nonnull} Tmp_1795 != 0;
    assume Tmp_1795 > 0;
    Tmp_1784 := pageData;
    assume {:nonnull} Tmp_1784 != 0;
    assume Tmp_1784 > 0;
    Tmp_1746 := pageData;
    assume {:nonnull} Tmp_1746 != 0;
    assume Tmp_1746 > 0;
    Tmp_1792 := pageData;
    assume {:nonnull} Tmp_1792 != 0;
    assume Tmp_1792 > 0;
    Tmp_1764 := pageData;
    assume {:nonnull} Tmp_1764 != 0;
    assume Tmp_1764 > 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    Tmp_1836 := SectorsPerTrack__DEVICE_EXTENSION(deviceExtension_15);
    Tmp_1810 := pageData;
    assume {:nonnull} Tmp_1810 != 0;
    assume Tmp_1810 > 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    Tmp_1798 := SectorsPerTrack__DEVICE_EXTENSION(deviceExtension_15);
    Tmp_1823 := pageData;
    assume {:nonnull} Tmp_1823 != 0;
    assume Tmp_1823 > 0;
    Tmp_1761 := pageData;
    assume {:nonnull} Tmp_1761 != 0;
    assume Tmp_1761 > 0;
    Tmp_1779 := pageData;
    assume {:nonnull} Tmp_1779 != 0;
    assume Tmp_1779 > 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    Tmp_1729 := Cylinders__DEVICE_EXTENSION(deviceExtension_15);
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    Tmp_1766 := Cylinders__DEVICE_EXTENSION(deviceExtension_15);
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    Tmp_1833 := Cylinders__DEVICE_EXTENSION(deviceExtension_15);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    status_54 := 1;
    goto L654;

  anon421_Then:
    goto L771;

  anon455_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    goto L799;

  L799:
    status_54 := 10;
    goto L654;

  anon404_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc inquiryData;
    goto anon492_Then, anon492_Else;

  anon492_Else:
    assume {:partition} transferForbidden != 0;
    status_54 := 4;
    goto L654;

  anon492_Then:
    assume {:partition} transferForbidden == 0;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto L807;

  L807:
    call {:si_unique_call 1946} Tmp_1757, Tmp_1774 := TrueffsThread_loop_L807(Tmp_1757, Tmp_1774, i_19, Srb);
    goto L807_last;

  L807_last:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1774;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_1757;
    assume {:nonnull} Tmp_1757 != 0;
    assume Tmp_1757 > 0;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto anon424_Else_dummy;

  anon424_Else_dummy:
    assume false;
    return;

  anon424_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon493_Then, anon493_Else;

  anon493_Else:
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    goto L812;

  L812:
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto L814;

  L814:
    call {:si_unique_call 1947} Tmp_1740, Tmp_1804, Tmp_1807 := TrueffsThread_loop_L814(Tmp_1740, i_19, Tmp_1804, Tmp_1807, inquiryData, vendorString);
    goto L814_last;

  L814_last:
    assume {:CounterLoop 8} {:Counter "i_19"} true;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1807;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc Tmp_1740;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1804;
    assume {:nonnull} Tmp_1740 != 0;
    assume Tmp_1740 > 0;
    assume {:nonnull} vendorString != 0;
    assume vendorString > 0;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto anon425_Else_dummy;

  anon425_Else_dummy:
    assume false;
    return;

  anon425_Then:
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto L818;

  L818:
    call {:si_unique_call 1948} Tmp_1762, Tmp_1771, Tmp_1841 := TrueffsThread_loop_L818(Tmp_1762, Tmp_1771, i_19, productString, inquiryData, Tmp_1841);
    goto L818_last;

  L818_last:
    assume {:CounterLoop 16} {:Counter "i_19"} true;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1841;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc Tmp_1771;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1762;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} productString != 0;
    assume productString > 0;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto anon426_Else_dummy;

  anon426_Else_dummy:
    assume false;
    return;

  anon426_Then:
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto L822;

  L822:
    call {:si_unique_call 1949} Tmp_1743, Tmp_1753, Tmp_1834 := TrueffsThread_loop_L822(Tmp_1743, Tmp_1753, revisionString, i_19, inquiryData, Tmp_1834);
    goto L822_last;

  L822_last:
    assume {:CounterLoop 4} {:Counter "i_19"} true;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1834;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc Tmp_1753;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1743;
    assume {:nonnull} Tmp_1753 != 0;
    assume Tmp_1753 > 0;
    assume {:nonnull} revisionString != 0;
    assume revisionString > 0;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto anon427_Else_dummy;

  anon427_Else_dummy:
    assume false;
    return;

  anon427_Then:
    status_54 := 1;
    goto L654;

  anon493_Then:
    goto L812;

  anon423_Then:
    goto L799;

  anon456_Then:
    goto L654;

  anon489_Then:
    status_54 := 1;
    goto L654;

  anon429_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    goto L145;

  L145:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L147;

  L147:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1950} sdv_IoCompleteRequest(0, 1);
    goto anon486_Then, anon486_Else;

  anon486_Else:
    assume {:partition} yogi_error != 1;
    goto anon486_Else_dummy;

  anon486_Else_dummy:
    assume false;
    return;

  anon486_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon358_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1951} tffsStatus := flIOctl(ioreq_24);
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L147;

  anon363_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L147;

  anon362_Then:
    goto L145;

  anon430_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L169;

  L169:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1952} sdv_IoCompleteRequest(0, 1);
    goto anon485_Then, anon485_Else;

  anon485_Else:
    assume {:partition} yogi_error != 1;
    goto anon485_Else_dummy;

  anon485_Else_dummy:
    assume false;
    return;

  anon485_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon357_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L169;

  anon364_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1953} tffsStatus := flIOctl(ioreq_24);
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L169;

  anon365_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L169;

  anon431_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L193;

  L193:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1954} sdv_IoCompleteRequest(0, 1);
    goto anon484_Then, anon484_Else;

  anon484_Else:
    assume {:partition} yogi_error != 1;
    goto anon484_Else_dummy;

  anon484_Else_dummy:
    assume false;
    return;

  anon484_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon356_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L193;

  anon366_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc Tmp_1773;
    assume {:nonnull} Tmp_1773 != 0;
    assume Tmp_1773 > 0;
    assume {:nonnull} iplInput != 0;
    assume iplInput > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc Tmp_1824;
    assume {:nonnull} Tmp_1824 != 0;
    assume Tmp_1824 > 0;
    assume {:nonnull} iplInput != 0;
    assume iplInput > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1955} tffsStatus := flIOctl(ioreq_24);
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L193;

  anon367_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L193;

  anon432_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L217;

  L217:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L219;

  L219:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1956} sdv_IoCompleteRequest(0, 1);
    goto anon483_Then, anon483_Else;

  anon483_Else:
    assume {:partition} yogi_error != 1;
    goto anon483_Else_dummy;

  anon483_Else_dummy:
    assume false;
    return;

  anon483_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon355_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc Tmp_1838;
    assume {:nonnull} Tmp_1838 != 0;
    assume Tmp_1838 > 0;
    assume {:nonnull} placeExbInput != 0;
    assume placeExbInput > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc Tmp_1731;
    assume {:nonnull} Tmp_1731 != 0;
    assume Tmp_1731 > 0;
    assume {:nonnull} placeExbInput != 0;
    assume placeExbInput > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc Tmp_1831;
    assume {:nonnull} Tmp_1831 != 0;
    assume Tmp_1831 > 0;
    assume {:nonnull} placeExbInput != 0;
    assume placeExbInput > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc Tmp_1797;
    assume {:nonnull} Tmp_1797 != 0;
    assume Tmp_1797 > 0;
    assume {:nonnull} placeExbInput != 0;
    assume placeExbInput > 0;
    call {:si_unique_call 1957} tffsStatus := flIOctl(ioreq_24);
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L219;

  anon369_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L219;

  anon368_Then:
    goto L217;

  anon433_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L244;

  L244:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L246;

  L246:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1958} sdv_IoCompleteRequest(0, 1);
    goto anon482_Then, anon482_Else;

  anon482_Else:
    assume {:partition} yogi_error != 1;
    goto anon482_Else_dummy;

  anon482_Else_dummy:
    assume false;
    return;

  anon482_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon354_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1959} tffsStatus := flIOctl(ioreq_24);
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L246;

  anon371_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L246;

  anon370_Then:
    goto L244;

  anon434_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L268;

  L268:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1960} sdv_IoCompleteRequest(0, 1);
    goto anon481_Then, anon481_Else;

  anon481_Else:
    assume {:partition} yogi_error != 1;
    goto anon481_Else_dummy;

  anon481_Else_dummy:
    assume false;
    return;

  anon481_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon353_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1961} tffsStatus := flIOctl(ioreq_24);
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L268;

  anon372_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L268;

  anon435_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L288;

  L288:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1962} sdv_IoCompleteRequest(0, 1);
    goto anon480_Then, anon480_Else;

  anon480_Else:
    assume {:partition} yogi_error != 1;
    goto anon480_Else_dummy;

  anon480_Else_dummy:
    assume false;
    return;

  anon480_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon352_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1963} tffsStatus := flIOctl(ioreq_24);
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L288;

  anon373_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L288;

  anon436_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L308;

  L308:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1964} sdv_IoCompleteRequest(0, 1);
    goto anon479_Then, anon479_Else;

  anon479_Else:
    assume {:partition} yogi_error != 1;
    goto anon479_Else_dummy;

  anon479_Else_dummy:
    assume false;
    return;

  anon479_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon351_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1965} tffsStatus := flIOctl(ioreq_24);
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L308;

  anon374_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L308;

  anon437_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    goto L326;

  L326:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L328;

  L328:
    userInput := 0;
    userOutput := 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1966} sdv_IoCompleteRequest(0, 1);
    goto anon475_Then, anon475_Else;

  anon475_Else:
    assume {:partition} yogi_error != 1;
    goto anon475_Else_dummy;

  anon475_Else_dummy:
    assume false;
    return;

  anon475_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon350_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc userInput;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc userOutput;
    Tmp_1788 := userInput;
    assume {:nonnull} Tmp_1788 != 0;
    assume Tmp_1788 > 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    goto anon476_Then, anon476_Else;

  anon476_Else:
    Tmp_1803 := userInput;
    assume {:nonnull} Tmp_1803 != 0;
    assume Tmp_1803 > 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    goto anon477_Then, anon477_Else;

  anon477_Else:
    Tmp_1742 := userInput;
    assume {:nonnull} Tmp_1742 != 0;
    assume Tmp_1742 > 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    goto L339;

  L339:
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    Tmp_1735 := userInput;
    assume {:nonnull} Tmp_1735 != 0;
    assume Tmp_1735 > 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    goto L345;

  L345:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    Tmp_1781 := userOutput;
    assume {:nonnull} Tmp_1781 != 0;
    assume Tmp_1781 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    call {:si_unique_call 1967} tffsStatus := flIOctl(ioreq_24);
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L328;

  anon377_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    goto anon478_Then, anon478_Else;

  anon478_Else:
    Tmp_1805 := userOutput;
    assume {:nonnull} Tmp_1805 != 0;
    assume Tmp_1805 > 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    Tmp_1816 := userOutput;
    assume {:nonnull} Tmp_1816 != 0;
    assume Tmp_1816 > 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    Tmp_1787 := userOutput;
    assume {:nonnull} Tmp_1787 != 0;
    assume Tmp_1787 > 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    Tmp_1775 := userOutput;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    goto L328;

  anon478_Then:
    goto L328;

  anon376_Then:
    Tmp_1799 := userOutput;
    assume {:nonnull} Tmp_1799 != 0;
    assume Tmp_1799 > 0;
    assume {:nonnull} otpInput != 0;
    assume otpInput > 0;
    goto L345;

  anon477_Then:
    goto L339;

  anon476_Then:
    goto L339;

  anon375_Then:
    goto L326;

  anon438_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    goto L365;

  L365:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L367;

  L367:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1968} sdv_IoCompleteRequest(0, 1);
    goto anon474_Then, anon474_Else;

  anon474_Else:
    assume {:partition} yogi_error != 1;
    goto anon474_Else_dummy;

  anon474_Else_dummy:
    assume false;
    return;

  anon474_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon349_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc Tmp_1814;
    assume {:nonnull} Tmp_1814 != 0;
    assume Tmp_1814 > 0;
    assume {:nonnull} protectionInput != 0;
    assume protectionInput > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc Tmp_1790;
    assume {:nonnull} Tmp_1790 != 0;
    assume Tmp_1790 > 0;
    assume {:nonnull} protectionInput != 0;
    assume protectionInput > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc Tmp_1777;
    assume {:nonnull} Tmp_1777 != 0;
    assume Tmp_1777 > 0;
    Tmp_1786 := key_flBDKProtectionInput(Tmp_1777);
    assume {:IndirectCall} true;
    assume {:nonnull} protectionInput != 0;
    assume protectionInput > 0;
    call {:si_unique_call 1969} vslice_dummy_var_394 := flmemcpy(key_flProtectionInput(protectionInput), Tmp_1786, 8);
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    call {:si_unique_call 1970} boogieTmp := corral_nondet();
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1971} tffsStatus := flIOctl(ioreq_24);
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L367;

  anon379_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L367;

  anon378_Then:
    goto L365;

  anon439_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    goto L394;

  L394:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L396;

  L396:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1972} sdv_IoCompleteRequest(0, 1);
    goto anon473_Then, anon473_Else;

  anon473_Else:
    assume {:partition} yogi_error != 1;
    goto anon473_Else_dummy;

  anon473_Else_dummy:
    assume false;
    return;

  anon473_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon348_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1973} tffsStatus := flIOctl(ioreq_24);
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L396;

  anon381_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    flStatusProt_1 := 0;
    assume {:nonnull} ioreqProt_1 != 0;
    assume ioreqProt_1 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreqProt_1 != 0;
    assume ioreqProt_1 > 0;
    call {:si_unique_call 1974} flStatusProt_1 := bdCall(801, ioreqProt_1);
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} flStatusProt_1 != 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto L396;

  anon382_Then:
    assume {:partition} flStatusProt_1 == 0;
    assume {:nonnull} ioreqProt_1 != 0;
    assume ioreqProt_1 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} ioreqProt_1 != 0;
    assume ioreqProt_1 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto L396;

  anon384_Then:
    goto L425;

  L425:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto L396;

  anon383_Then:
    goto L425;

  anon380_Then:
    goto L394;

  anon440_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    goto L429;

  L429:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L431;

  L431:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1975} sdv_IoCompleteRequest(0, 1);
    goto anon471_Then, anon471_Else;

  anon471_Else:
    assume {:partition} yogi_error != 1;
    goto anon471_Else_dummy;

  anon471_Else_dummy:
    assume false;
    return;

  anon471_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon347_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc userInput;
    Tmp_1789 := userInput;
    assume {:nonnull} Tmp_1789 != 0;
    assume Tmp_1789 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1819 := userInput;
    assume {:nonnull} Tmp_1819 != 0;
    assume Tmp_1819 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1776 := userInput;
    assume {:nonnull} Tmp_1776 != 0;
    assume Tmp_1776 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1754 := userInput;
    assume {:nonnull} Tmp_1754 != 0;
    assume Tmp_1754 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1765 := userInput;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1783 := userInput;
    assume {:nonnull} Tmp_1783 != 0;
    assume Tmp_1783 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1741 := userInput;
    assume {:nonnull} Tmp_1741 != 0;
    assume Tmp_1741 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1812 := userInput;
    assume {:nonnull} Tmp_1812 != 0;
    assume Tmp_1812 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1808 := userInput;
    assume {:nonnull} Tmp_1808 != 0;
    assume Tmp_1808 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1759 := userInput;
    assume {:nonnull} Tmp_1759 != 0;
    assume Tmp_1759 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1806 := userInput;
    assume {:nonnull} Tmp_1806 != 0;
    assume Tmp_1806 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1815 := userInput;
    assume {:nonnull} Tmp_1815 != 0;
    assume Tmp_1815 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1829 := userInput;
    assume {:nonnull} Tmp_1829 != 0;
    assume Tmp_1829 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1801 := userInput;
    assume {:nonnull} Tmp_1801 != 0;
    assume Tmp_1801 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1756 := userInput;
    assume {:nonnull} Tmp_1756 != 0;
    assume Tmp_1756 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    Tmp_1748 := userInput;
    assume {:nonnull} Tmp_1748 != 0;
    assume Tmp_1748 > 0;
    assume {:nonnull} flFp != 0;
    assume flFp > 0;
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1976} tffsStatus := flIOctl(ioreq_24);
    userInput := 0;
    goto anon472_Then, anon472_Else;

  anon472_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L431;

  anon472_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L431;

  anon385_Then:
    goto L429;

  anon441_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon346_Then, anon346_Else;

  anon346_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L472;

  L472:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1977} sdv_IoCompleteRequest(0, 1);
    goto anon470_Then, anon470_Else;

  anon470_Else:
    assume {:partition} yogi_error != 1;
    goto anon470_Else_dummy;

  anon470_Else_dummy:
    assume false;
    return;

  anon470_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon346_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1978} tffsStatus := flIOctl(ioreq_24);
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L472;

  anon386_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L472;

  anon442_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    goto L491;

  L491:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L493;

  L493:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1979} sdv_IoCompleteRequest(0, 1);
    goto anon468_Then, anon468_Else;

  anon468_Else:
    assume {:partition} yogi_error != 1;
    goto anon468_Else_dummy;

  anon468_Else_dummy:
    assume false;
    return;

  anon468_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon345_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc userInput;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc userOutput;
    Tmp_1830 := userInput;
    assume {:nonnull} Tmp_1830 != 0;
    assume Tmp_1830 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto L502;

  L502:
    call {:si_unique_call 1980} Tmp_1739, Tmp_1768, Tmp_1770, Tmp_1818, Tmp_1825, Tmp_1832, Tmp_1835, Tmp_1840 := TrueffsThread_loop_L502(Tmp_1739, Tmp_1768, Tmp_1770, i_19, bdkOperationInput, userInput, Tmp_1818, Tmp_1825, Tmp_1832, Tmp_1835, Tmp_1840);
    goto L502_last;

  L502_last:
    assume {:CounterLoop 4} {:Counter "i_19"} true;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1770;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1739;
    Tmp_1818 := userInput;
    assume {:nonnull} Tmp_1818 != 0;
    assume Tmp_1818 > 0;
    havoc Tmp_1832;
    assume {:nonnull} Tmp_1832 != 0;
    assume Tmp_1832 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1825;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    havoc Tmp_1835;
    Tmp_1768 := userInput;
    assume {:nonnull} Tmp_1768 != 0;
    assume Tmp_1768 > 0;
    havoc Tmp_1840;
    assume {:nonnull} Tmp_1840 != 0;
    assume Tmp_1840 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    assume {:nonnull} i_19 != 0;
    assume i_19 > 0;
    goto anon388_Else_dummy;

  anon388_Else_dummy:
    assume false;
    return;

  anon388_Then:
    Tmp_1732 := userInput;
    assume {:nonnull} Tmp_1732 != 0;
    assume Tmp_1732 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    Tmp_1763 := userInput;
    assume {:nonnull} Tmp_1763 != 0;
    assume Tmp_1763 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    Tmp_1813 := userInput;
    assume {:nonnull} Tmp_1813 != 0;
    assume Tmp_1813 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    Tmp_1738 := userInput;
    assume {:nonnull} Tmp_1738 != 0;
    assume Tmp_1738 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    goto anon469_Then, anon469_Else;

  anon469_Else:
    Tmp_1750 := userInput;
    assume {:nonnull} Tmp_1750 != 0;
    assume Tmp_1750 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    goto L513;

  L513:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    call {:si_unique_call 1981} boogieTmp := corral_nondet();
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    Tmp_1727 := userOutput;
    assume {:nonnull} Tmp_1727 != 0;
    assume Tmp_1727 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    call {:si_unique_call 1982} tffsStatus := flIOctl(ioreq_24);
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L493;

  anon389_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    Tmp_1839 := userOutput;
    assume {:nonnull} Tmp_1839 != 0;
    assume Tmp_1839 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    Tmp_1733 := userOutput;
    assume {:nonnull} Tmp_1733 != 0;
    assume Tmp_1733 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    Tmp_1785 := userOutput;
    assume {:nonnull} Tmp_1785 != 0;
    assume Tmp_1785 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    Tmp_1728 := userOutput;
    assume {:nonnull} Tmp_1728 != 0;
    assume Tmp_1728 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    goto L527;

  L527:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L493;

  anon390_Then:
    goto L527;

  anon469_Then:
    Tmp_1800 := userOutput;
    assume {:nonnull} Tmp_1800 != 0;
    assume Tmp_1800 > 0;
    assume {:nonnull} bdkOperationInput != 0;
    assume bdkOperationInput > 0;
    goto L513;

  anon387_Then:
    goto L491;

  anon443_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    goto L534;

  L534:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L536;

  L536:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1983} sdv_IoCompleteRequest(0, 1);
    goto anon467_Then, anon467_Else;

  anon467_Else:
    assume {:partition} yogi_error != 1;
    goto anon467_Else_dummy;

  anon467_Else_dummy:
    assume false;
    return;

  anon467_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon344_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1984} tffsStatus := flIOctl(ioreq_24);
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L536;

  anon392_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L536;

  anon391_Then:
    goto L534;

  anon444_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    goto L556;

  L556:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L558;

  L558:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1985} sdv_IoCompleteRequest(0, 1);
    goto anon466_Then, anon466_Else;

  anon466_Else:
    assume {:partition} yogi_error != 1;
    goto anon466_Else_dummy;

  anon466_Else_dummy:
    assume false;
    return;

  anon466_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon343_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1986} tffsStatus := flIOctl(ioreq_24);
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L558;

  anon394_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L558;

  anon393_Then:
    goto L556;

  anon445_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L580;

  L580:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1987} sdv_IoCompleteRequest(0, 1);
    goto anon462_Then, anon462_Else;

  anon462_Else:
    assume {:partition} yogi_error != 1;
    goto anon462_Else_dummy;

  anon462_Else_dummy:
    assume false;
    return;

  anon462_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon342_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1988} tffsStatus := flIOctl(ioreq_24);
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L580;

  anon395_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    havoc Tmp_1791;
    assume {:nonnull} Tmp_1791 != 0;
    assume Tmp_1791 > 0;
    goto anon463_Then, anon463_Else;

  anon463_Else:
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    havoc Tmp_1821;
    assume {:nonnull} Tmp_1821 != 0;
    assume Tmp_1821 > 0;
    goto anon464_Then, anon464_Else;

  anon464_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto L580;

  anon464_Then:
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    havoc Tmp_1811;
    assume {:nonnull} Tmp_1811 != 0;
    assume Tmp_1811 > 0;
    goto anon465_Then, anon465_Else;

  anon465_Else:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto L580;

  anon465_Then:
    goto L580;

  anon463_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto L580;

  anon446_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L608;

  L608:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1989} sdv_IoCompleteRequest(0, 1);
    goto anon461_Then, anon461_Else;

  anon461_Else:
    assume {:partition} yogi_error != 1;
    goto anon461_Else_dummy;

  anon461_Else_dummy:
    assume false;
    return;

  anon461_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon396_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    havoc Tmp_1827;
    assume {:nonnull} Tmp_1827 != 0;
    assume Tmp_1827 > 0;
    assume {:nonnull} iDefrag != 0;
    assume iDefrag > 0;
    goto L615;

  L615:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1990} tffsStatus := flIOctl(ioreq_24);
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L608;

  anon398_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L608;

  anon397_Then:
    assume {:nonnull} iDefrag != 0;
    assume iDefrag > 0;
    goto L615;

  anon338_Then:
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    status_54 := -1073741811;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto L632;

  L632:
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1991} sdv_IoCompleteRequest(0, 1);
    goto anon460_Then, anon460_Else;

  anon460_Else:
    assume {:partition} yogi_error != 1;
    goto anon460_Else_dummy;

  anon460_Else_dummy:
    assume false;
    return;

  anon460_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon341_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} ioreq_24 != 0;
    assume ioreq_24 > 0;
    assume {:nonnull} flIoctlRec != 0;
    assume flIoctlRec > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 1992} tffsStatus := flIOctl(ioreq_24);
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:partition} tffsStatus != 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := -1073741823;
    goto L632;

  anon399_Then:
    assume {:partition} tffsStatus == 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    status_54 := 0;
    goto L632;

  anon459_Then:
    assume {:partition} dataOffset == 0;
    transferForbidden := 1;
    goto L80;

  anon458_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    Tmp_1751 := 16;
    goto L87;

  anon339_Then:
    goto L86;

  anon457_Then:
    goto L80;

  anon337_Then:
    goto anon337_Then_dummy;

  anon337_Then_dummy:
    assume false;
    return;

  anon336_Then:
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    call {:si_unique_call 1993} vslice_dummy_var_398 := PsTerminateSystemThread(0);
    goto L61;

  anon335_Then:
    goto anon335_Then_dummy;

  anon335_Then_dummy:
    assume false;
    return;

  anon334_Then:
    goto anon334_Then_dummy;

  anon334_Then_dummy:
    assume false;
    return;

  anon333_Then:
    assume {:partition} waitStatus != 0;
    goto anon333_Then_dummy;

  anon333_Then_dummy:
    assume false;
    return;
}



procedure {:origName "TrueffsStartIo"} TrueffsStartIo(actual_DeviceObject_29: int, actual_Irp_23: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsStartIo"} TrueffsStartIo(actual_DeviceObject_29: int, actual_Irp_23: int)
{
  var {:pointer} irpStack_7: int;
  var {:pointer} pdoExtension_8: int;
  var {:scalar} powerState_4: int;
  var {:pointer} Tmp_1843: int;
  var {:pointer} devExtension_5: int;
  var {:pointer} srb_1: int;
  var {:scalar} status_55: int;
  var {:pointer} Tmp_1845: int;
  var {:pointer} deviceExtension_16: int;
  var {:pointer} DeviceObject_29: int;
  var {:pointer} Irp_23: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;

  anon0:
    call {:si_unique_call 1997} powerState_4 := __HAVOC_malloc(8);
    call {:si_unique_call 1998} vslice_dummy_var_399 := __HAVOC_malloc(4);
    DeviceObject_29 := actual_DeviceObject_29;
    Irp_23 := actual_Irp_23;
    call {:si_unique_call 1999} irpStack_7 := sdv_IoGetCurrentIrpStackLocation(Irp_23);
    assume {:nonnull} irpStack_7 != 0;
    assume irpStack_7 > 0;
    havoc srb_1;
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    havoc devExtension_5;
    assume {:nonnull} devExtension_5 != 0;
    assume devExtension_5 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    havoc deviceExtension_16;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    havoc Tmp_1843;
    assume {:nonnull} Tmp_1843 != 0;
    assume Tmp_1843 > 0;
    havoc pdoExtension_8;
    goto L19;

  L19:
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    status_55 := -1073741632;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    call {:si_unique_call 2000} sdv_IoCompleteRequest(0, 0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2001} IoStartNextPacket(0, 0);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon28_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    call {:si_unique_call 2002} status_55 := QueueIrpToThread(Irp_23, deviceExtension_16);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} status_55 != 259;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    call {:si_unique_call 2003} sdv_IoCompleteRequest(0, 0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} status_55 == 259;
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    havoc Tmp_1845;
    assume {:nonnull} Tmp_1845 != 0;
    assume Tmp_1845 > 0;
    goto L42;

  L42:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    call {:si_unique_call 2004} vslice_dummy_var_400 := PoRequestPowerIrp(0, 2, powerState_4, 0, 0, 0);
    goto L44;

  L44:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    call {:si_unique_call 2005} IoStartNextPacket(0, 0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon25_Then:
    goto L44;

  anon24_Then:
    goto L44;

  anon23_Then:
    goto L42;

  anon26_Then:
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    havoc pdoExtension_8;
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    havoc deviceExtension_16;
    goto L19;
}



procedure {:origName "TrueffsQueryProperty"} TrueffsQueryProperty(actual_deviceExtension_17: int, actual_QueryIrp: int) returns (Tmp_1846: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsQueryProperty"} TrueffsQueryProperty(actual_deviceExtension_17: int, actual_QueryIrp: int) returns (Tmp_1846: int)
{
  var {:pointer} irpStack_8: int;
  var {:pointer} query_1: int;
  var {:scalar} adapterDescriptor: int;
  var {:pointer} outBuffer: int;
  var {:scalar} deviceDescriptor: int;
  var {:scalar} status_56: int;
  var {:scalar} numBytesToCopy: int;
  var {:scalar} outBufferSize: int;
  var {:pointer} storageDeviceDescriptor: int;
  var {:pointer} deviceExtension_17: int;
  var {:pointer} QueryIrp: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;

  anon0:
    call {:si_unique_call 2006} adapterDescriptor := __HAVOC_malloc(48);
    call {:si_unique_call 2007} deviceDescriptor := __HAVOC_malloc(52);
    deviceExtension_17 := actual_deviceExtension_17;
    QueryIrp := actual_QueryIrp;
    call {:si_unique_call 2008} vslice_dummy_var_401 := __HAVOC_malloc(68);
    call {:si_unique_call 2009} vslice_dummy_var_402 := __HAVOC_malloc(20);
    call {:si_unique_call 2010} vslice_dummy_var_403 := __HAVOC_malloc(36);
    call {:si_unique_call 2011} vslice_dummy_var_404 := __HAVOC_malloc(20);
    call {:si_unique_call 2012} irpStack_8 := sdv_IoGetCurrentIrpStackLocation(QueryIrp);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    havoc query_1;
    assume {:nonnull} query_1 != 0;
    assume query_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    status_56 := -1073741822;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 2013} sdv_IoCompleteRequest(0, 0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1846 := status_56;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    assume {:nonnull} query_1 != 0;
    assume query_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    status_56 := 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 2014} sdv_IoCompleteRequest(0, 1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1846 := status_56;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:nonnull} query_1 != 0;
    assume query_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} query_1 != 0;
    assume query_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 2015} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} adapterDescriptor != 0;
    assume adapterDescriptor > 0;
    assume {:nonnull} irpStack_8 != 0;
    assume irpStack_8 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} irpStack_8 != 0;
    assume irpStack_8 > 0;
    havoc outBufferSize;
    goto L62;

  L62:
    call {:si_unique_call 2016} sdv_RtlCopyMemory(0, 0, outBufferSize);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    status_56 := 0;
    goto L68;

  L68:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 2017} sdv_IoCompleteRequest(0, 1);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1846 := status_56;
    goto L1;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    outBufferSize := 32;
    goto L62;

  anon33_Then:
    status_56 := -1073741822;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    goto L68;

  anon32_Then:
    assume {:nonnull} irpStack_8 != 0;
    assume irpStack_8 > 0;
    havoc outBufferSize;
    call {:si_unique_call 2018} sdv_RtlZeroMemory(0, 40);
    assume {:nonnull} deviceDescriptor != 0;
    assume deviceDescriptor > 0;
    assume {:nonnull} deviceDescriptor != 0;
    assume deviceDescriptor > 0;
    assume {:nonnull} deviceDescriptor != 0;
    assume deviceDescriptor > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} deviceDescriptor != 0;
    assume deviceDescriptor > 0;
    goto L80;

  L80:
    assume {:nonnull} deviceDescriptor != 0;
    assume deviceDescriptor > 0;
    assume {:nonnull} deviceDescriptor != 0;
    assume deviceDescriptor > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} deviceDescriptor != 0;
    assume deviceDescriptor > 0;
    havoc numBytesToCopy;
    goto L85;

  L85:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    havoc outBuffer;
    status_56 := 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    havoc storageDeviceDescriptor;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} numBytesToCopy > 40;
    call {:si_unique_call 2019} sdv_RtlCopyMemory(0, 0, 40);
    numBytesToCopy := numBytesToCopy - 40;
    assume {:nonnull} storageDeviceDescriptor != 0;
    assume storageDeviceDescriptor > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} numBytesToCopy > 9;
    call {:si_unique_call 2020} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} outBuffer != 0;
    assume outBuffer > 0;
    numBytesToCopy := numBytesToCopy - 9;
    assume {:nonnull} storageDeviceDescriptor != 0;
    assume storageDeviceDescriptor > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} numBytesToCopy > 17;
    call {:si_unique_call 2021} sdv_RtlCopyMemory(0, 0, 16);
    assume {:nonnull} outBuffer != 0;
    assume outBuffer > 0;
    numBytesToCopy := numBytesToCopy - 17;
    assume {:nonnull} storageDeviceDescriptor != 0;
    assume storageDeviceDescriptor > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} numBytesToCopy > 5;
    call {:si_unique_call 2022} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} outBuffer != 0;
    assume outBuffer > 0;
    numBytesToCopy := numBytesToCopy - 5;
    assume {:nonnull} storageDeviceDescriptor != 0;
    assume storageDeviceDescriptor > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} numBytesToCopy > 5;
    call {:si_unique_call 2023} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} outBuffer != 0;
    assume outBuffer > 0;
    goto L68;

  anon43_Then:
    assume {:partition} 5 >= numBytesToCopy;
    call {:si_unique_call 2024} sdv_RtlCopyMemory(0, 0, numBytesToCopy);
    goto L68;

  anon42_Then:
    assume {:partition} 5 >= numBytesToCopy;
    call {:si_unique_call 2025} sdv_RtlCopyMemory(0, 0, numBytesToCopy);
    goto L68;

  anon41_Then:
    assume {:partition} 17 >= numBytesToCopy;
    call {:si_unique_call 2026} sdv_RtlCopyMemory(0, 0, numBytesToCopy);
    goto L68;

  anon40_Then:
    assume {:partition} 9 >= numBytesToCopy;
    call {:si_unique_call 2027} sdv_RtlCopyMemory(0, 0, numBytesToCopy);
    goto L68;

  anon39_Then:
    assume {:partition} 40 >= numBytesToCopy;
    call {:si_unique_call 2028} sdv_RtlCopyMemory(0, 0, numBytesToCopy);
    goto L68;

  anon38_Then:
    numBytesToCopy := outBufferSize;
    goto L85;

  anon37_Then:
    goto L80;
}



procedure {:origName "TrueffsWmiSystemControl"} TrueffsWmiSystemControl(actual_DeviceObject_30: int, actual_Irp_24: int) returns (Tmp_1848: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsWmiSystemControl"} TrueffsWmiSystemControl(actual_DeviceObject_30: int, actual_Irp_24: int) returns (Tmp_1848: int)
{
  var {:dopa} {:scalar} disposition_1: int;
  var {:pointer} pdoExtension_9: int;
  var {:scalar} status_57: int;
  var {:pointer} DeviceObject_30: int;
  var {:pointer} Irp_24: int;

  anon0:
    call {:si_unique_call 2029} disposition_1 := __HAVOC_malloc(4);
    DeviceObject_30 := actual_DeviceObject_30;
    Irp_24 := actual_Irp_24;
    assume {:nonnull} DeviceObject_30 != 0;
    assume DeviceObject_30 > 0;
    havoc pdoExtension_9;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} pdoExtension_9 != 0;
    call {:si_unique_call 2030} status_57 := WmiSystemControl(0, 0, Irp_24, disposition_1);
    assume {:nonnull} disposition_1 != 0;
    assume disposition_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} disposition_1 != 0;
    assume disposition_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    status_57 := -1073741637;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    call {:si_unique_call 2031} sdv_IoCompleteRequest(0, 0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    Tmp_1848 := status_57;
    goto LM2;

  LM2:
    return;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    call {:si_unique_call 2032} sdv_IoCompleteRequest(0, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  anon16_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    goto L20;

  anon15_Then:
    assume {:partition} pdoExtension_9 == 0;
    status_57 := -1073741823;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    call {:si_unique_call 2033} sdv_IoCompleteRequest(0, 0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "TrueffsSetPdoPowerState"} TrueffsSetPdoPowerState(actual_Pdo_1: int, actual_Irp_25: int) returns (Tmp_1850: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsSetPdoPowerState"} TrueffsSetPdoPowerState(actual_Pdo_1: int, actual_Irp_25: int) returns (Tmp_1850: int)
{
  var {:pointer} irpStack_9: int;
  var {:scalar} status_58: int;
  var {:pointer} Pdo_1: int;
  var {:pointer} Irp_25: int;

  anon0:
    Pdo_1 := actual_Pdo_1;
    Irp_25 := actual_Irp_25;
    call {:si_unique_call 2034} irpStack_9 := sdv_IoGetCurrentIrpStackLocation(Irp_25);
    call {:si_unique_call 2035} sdv_IoMarkIrpPending(0);
    assume {:nonnull} irpStack_9 != 0;
    assume irpStack_9 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 2036} status_58 := TrueffsSetPdoDevicePowerState(Pdo_1, Irp_25);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto L18;

  L18:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_58 != 259;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    call {:si_unique_call 2037} TrueffsPdoCompletePowerIrp(Pdo_1, Irp_25);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L19;

  L19:
    Tmp_1850 := status_58;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} status_58 == 259;
    goto L19;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:nonnull} irpStack_9 != 0;
    assume irpStack_9 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    status_58 := -1073741822;
    goto L18;

  anon12_Then:
    call {:si_unique_call 2038} status_58 := TrueffsSetPdoSystemPowerState(Pdo_1, Irp_25);
    goto L18;
}



procedure {:origName "TrueffsFdoChildReportPowerDown"} TrueffsFdoChildReportPowerDown(actual_FdoExtension_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsFdoChildReportPowerDown"} TrueffsFdoChildReportPowerDown(actual_FdoExtension_4: int)
{
  var {:scalar} powerState_5: int;
  var {:scalar} sdv_910: int;
  var {:pointer} Tmp_1853: int;
  var {:pointer} FdoExtension_4: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;

  anon0:
    call {:si_unique_call 2039} vslice_dummy_var_405 := __HAVOC_malloc(4);
    call {:si_unique_call 2040} powerState_5 := __HAVOC_malloc(8);
    FdoExtension_4 := actual_FdoExtension_4;
    call {:si_unique_call 2041} Tmp_1853 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} Tmp_1853 != 0;
    assume Tmp_1853 > 0;
    call {:si_unique_call 2042} vslice_dummy_var_406 := sdv_InterlockedDecrement(Tmp_1853);
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} Tmp_1853 != 0;
    assume Tmp_1853 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_910 == 0;
    assume {:nonnull} powerState_5 != 0;
    assume powerState_5 > 0;
    call {:si_unique_call 2043} vslice_dummy_var_407 := PoRequestPowerIrp(0, 2, powerState_5, 0, 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} sdv_910 != 0;
    goto L1;
}



procedure {:origName "TrueffsCloseServiceSubKey"} TrueffsCloseServiceSubKey(actual_SubServiceKey: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsCloseServiceSubKey"} TrueffsCloseServiceSubKey(actual_SubServiceKey: int)
{
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;

  anon0:
    call {:si_unique_call 2044} vslice_dummy_var_408 := __HAVOC_malloc(4);
    call {:si_unique_call 2045} vslice_dummy_var_409 := ZwClose(0);
    return;
}



procedure {:origName "TrueffsPdoCompletePowerIrp"} TrueffsPdoCompletePowerIrp(actual_DeviceObject_31: int, actual_Irp_26: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsPdoCompletePowerIrp"} TrueffsPdoCompletePowerIrp(actual_DeviceObject_31: int, actual_Irp_26: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:pointer} irpStack_10: int;
  var {:pointer} pdoExtension_10: int;
  var {:scalar} callPoSetPowerState_1: int;
  var {:scalar} sdv: int;
  var {:pointer} fdoExtension_4: int;
  var {:pointer} DeviceObject_31: int;
  var {:pointer} Irp_26: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_1452: int;
  var vslice_dummy_var_1453: int;

  anon0:
    call {:si_unique_call 2046} vslice_dummy_var_410 := __HAVOC_malloc(4);
    call {:si_unique_call 2047} sdv := __HAVOC_malloc(8);
    DeviceObject_31 := actual_DeviceObject_31;
    Irp_26 := actual_Irp_26;
    call {:si_unique_call 2048} irpStack_10 := sdv_IoGetCurrentIrpStackLocation(Irp_26);
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    havoc pdoExtension_10;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    havoc fdoExtension_4;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    callPoSetPowerState_1 := 1;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    callPoSetPowerState_1 := 0;
    goto L22;

  L22:
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 2049} TrueffsFdoChildReportPowerDown(fdoExtension_4);
    goto L26;

  L26:
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto L24;

  L24:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} callPoSetPowerState_1 != 0;
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    havoc vslice_dummy_var_1452;
    havoc vslice_dummy_var_1453;
    call {:si_unique_call 2050} structPtr888sdv := PoSetPowerState(0, vslice_dummy_var_1452, vslice_dummy_var_1453);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    goto L14;

  L14:
    call {:si_unique_call 2051} PoStartNextPowerIrp(0);
    call {:si_unique_call 2052} sdv_IoCompleteRequest(0, 0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} callPoSetPowerState_1 == 0;
    goto L14;

  anon21_Then:
    goto L26;

  anon19_Then:
    goto L24;

  anon18_Then:
    goto L22;

  anon23_Then:
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto L24;

  anon17_Then:
    goto L24;

  anon22_Then:
    goto L14;
}



procedure {:origName "TrueffsTranslateAddress"} TrueffsTranslateAddress(actual_InterfaceType_1: int, actual_BusNumber_1: int, actual_structPtr888StartAddress: int, actual_Length_3: int, actual_AddressSpace_1: int, actual_TranslatedAddress: int, actual_TranslatedMemoryAddress: int) returns (Tmp_1858: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1858 == 0 || Tmp_1858 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsTranslateAddress"} TrueffsTranslateAddress(actual_InterfaceType_1: int, actual_BusNumber_1: int, actual_structPtr888StartAddress: int, actual_Length_3: int, actual_AddressSpace_1: int, actual_TranslatedAddress: int, actual_TranslatedMemoryAddress: int) returns (Tmp_1858: int)
{
  var {:scalar} StartAddress: int;
  var {:scalar} sdv_914: int;
  var {:scalar} translatedAddress: int;
  var {:pointer} structPtr888StartAddress: int;
  var {:scalar} Length_3: int;
  var {:pointer} AddressSpace_1: int;
  var {:pointer} TranslatedAddress: int;
  var {:pointer} TranslatedMemoryAddress: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 2053} StartAddress := __HAVOC_malloc(20);
    call {:si_unique_call 2054} translatedAddress := __HAVOC_malloc(20);
    structPtr888StartAddress := actual_structPtr888StartAddress;
    Length_3 := actual_Length_3;
    AddressSpace_1 := actual_AddressSpace_1;
    TranslatedAddress := actual_TranslatedAddress;
    TranslatedMemoryAddress := actual_TranslatedMemoryAddress;
    assume {:nonnull} StartAddress != 0;
    assume StartAddress > 0;
    assume {:nonnull} structPtr888StartAddress != 0;
    assume structPtr888StartAddress > 0;
    assume {:nonnull} StartAddress != 0;
    assume StartAddress > 0;
    assume {:nonnull} structPtr888StartAddress != 0;
    assume structPtr888StartAddress > 0;
    assume {:nonnull} StartAddress != 0;
    assume StartAddress > 0;
    assume {:nonnull} structPtr888StartAddress != 0;
    assume structPtr888StartAddress > 0;
    assume {:nonnull} StartAddress != 0;
    assume StartAddress > 0;
    assume {:nonnull} structPtr888StartAddress != 0;
    assume structPtr888StartAddress > 0;
    assume {:nonnull} StartAddress != 0;
    assume StartAddress > 0;
    assume {:nonnull} structPtr888StartAddress != 0;
    assume structPtr888StartAddress > 0;
    assume {:nonnull} TranslatedAddress != 0;
    assume TranslatedAddress > 0;
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    call {:si_unique_call 2055} sdv_914 := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_914 != 0;
    assume {:nonnull} AddressSpace_1 != 0;
    assume AddressSpace_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    assume {:nonnull} TranslatedAddress != 0;
    assume TranslatedAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    goto L10;

  L10:
    assume {:nonnull} TranslatedAddress != 0;
    assume TranslatedAddress > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_1858 := 0;
    goto L1;

  L1:
    return;

  anon10_Then:
    Tmp_1858 := -1073741811;
    goto L1;

  anon11_Then:
    assume {:nonnull} AddressSpace_1 != 0;
    assume AddressSpace_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    assume {:nonnull} TranslatedMemoryAddress != 0;
    assume TranslatedMemoryAddress > 0;
    assume {:nonnull} translatedAddress != 0;
    assume translatedAddress > 0;
    assume {:nonnull} TranslatedAddress != 0;
    assume TranslatedAddress > 0;
    call {:si_unique_call 2056} boogieTmp := MmMapIoSpace(translatedAddress, Length_3, 0);
    goto L10;

  anon12_Then:
    goto L10;

  anon9_Then:
    assume {:partition} sdv_914 == 0;
    goto L10;
}



procedure {:origName "TrueffsSyncSendIrp"} TrueffsSyncSendIrp(actual_TargetDeviceObject: int, actual_IrpSp: int, actual_IoStatus: int) returns (Tmp_1860: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsSyncSendIrp"} TrueffsSyncSendIrp(actual_TargetDeviceObject: int, actual_IrpSp: int, actual_IoStatus: int) returns (Tmp_1860: int)
{
  var {:pointer} newIrp: int;
  var {:scalar} status_59: int;
  var {:scalar} event_6: int;
  var {:pointer} TargetDeviceObject: int;
  var {:pointer} IoStatus: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_1454: int;

  anon0:
    call {:si_unique_call 2057} event_6 := __HAVOC_malloc(124);
    TargetDeviceObject := actual_TargetDeviceObject;
    IoStatus := actual_IoStatus;
    assume {:nonnull} TargetDeviceObject != 0;
    assume TargetDeviceObject > 0;
    havoc vslice_dummy_var_1454;
    call {:si_unique_call 2058} newIrp := IoAllocateIrp(vslice_dummy_var_1454, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} newIrp != 0;
    call {:si_unique_call 2059} vslice_dummy_var_411 := sdv_IoGetNextIrpStackLocation(newIrp);
    call {:si_unique_call 2060} sdv_RtlMoveMemory(0, 0, 36);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} IoStatus != 0;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto L23;

  L23:
    call {:si_unique_call 2061} KeInitializeEvent(event_6, 0, 0);
    call {:si_unique_call 2062} sdv_IoSetCompletionRoutine(newIrp, li2bplFunctionConstant153, event_6, 1, 1, 1);
    call {:si_unique_call 2063} status_59 := sdv_IoCallDriver(TargetDeviceObject, newIrp);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_59 == 259;
    call {:si_unique_call 2064} status_59 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L34;

  L34:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    havoc status_59;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} IoStatus != 0;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto L40;

  L40:
    call {:si_unique_call 2065} IoFreeIrp(0);
    Tmp_1860 := status_59;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} IoStatus == 0;
    goto L40;

  anon11_Then:
    assume {:partition} status_59 != 259;
    goto L34;

  anon10_Then:
    assume {:partition} IoStatus == 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto L23;

  anon9_Then:
    assume {:partition} newIrp == 0;
    Tmp_1860 := -1073741801;
    goto L1;
}



procedure {:origName "QueueIrpToThread"} QueueIrpToThread(actual_Irp_27: int, actual_deviceExtension_18: int) returns (Tmp_1862: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1862 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "QueueIrpToThread"} QueueIrpToThread(actual_Irp_27: int, actual_deviceExtension_18: int) returns (Tmp_1862: int)
{
  var {:scalar} sdv_921: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;

  anon0:
    call {:si_unique_call 2066} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 2067} vslice_dummy_var_412 := sdv_ExInterlockedInsertTailList(0, 0, 0);
    call {:si_unique_call 2068} sdv_921 := KeReadStateSemaphore(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_921 != 0;
    goto L17;

  L17:
    Tmp_1862 := 259;
    return;

  anon3_Then:
    assume {:partition} sdv_921 == 0;
    call {:si_unique_call 2069} vslice_dummy_var_413 := KeReleaseSemaphore(0, 0, 1, 0);
    goto L17;
}



procedure {:origName "RtlConvertLongToLargeInteger"} RtlConvertLongToLargeInteger(actual_SignedInteger: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlConvertLongToLargeInteger"} RtlConvertLongToLargeInteger(actual_SignedInteger: int) returns (structPtr888Tmp: int)
{
  var {:scalar} Result: int;
  var {:scalar} Tmp: int;
  var {:scalar} SignedInteger: int;

  anon0:
    call {:si_unique_call 2070} Result := __HAVOC_malloc(20);
    call {:si_unique_call 2071} Tmp := __HAVOC_malloc(20);
    SignedInteger := actual_SignedInteger;
    assume {:nonnull} Result != 0;
    assume Result > 0;
    assume {:nonnull} Result != 0;
    assume Result > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} Result != 0;
    assume Result > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} Result != 0;
    assume Result > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} Result != 0;
    assume Result > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} Result != 0;
    assume Result > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "TrueffsDeviceQueryId"} TrueffsDeviceQueryId(actual_DeviceObject_32: int, actual_Irp_28: int, actual_Fdo_8: int) returns (Tmp_1865: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsDeviceQueryId"} TrueffsDeviceQueryId(actual_DeviceObject_32: int, actual_Irp_28: int, actual_Fdo_8: int) returns (Tmp_1865: int)
{
  var {:pointer} thisIrpSp_2: int;
  var {:pointer} idString_3: int;
  var {:pointer} pdoExtension_11: int;
  var {:scalar} bHandled: int;
  var {:scalar} status_60: int;
  var {:pointer} deviceExtension_19: int;
  var {:pointer} DeviceObject_32: int;
  var {:pointer} Irp_28: int;
  var {:scalar} Fdo_8: int;
  var vslice_dummy_var_1455: int;
  var vslice_dummy_var_1456: int;

  anon0:
    DeviceObject_32 := actual_DeviceObject_32;
    Irp_28 := actual_Irp_28;
    Fdo_8 := actual_Fdo_8;
    call {:si_unique_call 2072} thisIrpSp_2 := sdv_IoGetCurrentIrpStackLocation(Irp_28);
    idString_3 := 0;
    bHandled := 1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Fdo_8 == 0;
    assume {:nonnull} DeviceObject_32 != 0;
    assume DeviceObject_32 > 0;
    havoc pdoExtension_11;
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc deviceExtension_19;
    goto L17;

  L17:
    assume {:nonnull} thisIrpSp_2 != 0;
    assume thisIrpSp_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} thisIrpSp_2 != 0;
    assume thisIrpSp_2 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} thisIrpSp_2 != 0;
    assume thisIrpSp_2 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} thisIrpSp_2 != 0;
    assume thisIrpSp_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 2073} idString_3 := DeviceBuildInstanceId(deviceExtension_19, Fdo_8);
    goto L33;

  L33:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} bHandled != 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} idString_3 == 0;
    status_60 := -1073741670;
    bHandled := 0;
    goto L34;

  L34:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} bHandled != 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Fdo_8 != 0;
    call {:si_unique_call 2074} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_28);
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    havoc vslice_dummy_var_1455;
    call {:si_unique_call 2075} status_60 := TrueffsCallDriverSync(vslice_dummy_var_1455, Irp_28);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_60 == -1073741637;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    status_60 := 0;
    goto L54;

  L54:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    call {:si_unique_call 2076} sdv_IoCompleteRequest(0, 0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1865 := status_60;
    goto LM2;

  LM2:
    return;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:partition} status_60 != -1073741637;
    call {:si_unique_call 2077} sdv_ExFreePool(0);
    goto L54;

  anon30_Then:
    assume {:partition} Fdo_8 == 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    status_60 := 0;
    goto L54;

  anon27_Then:
    assume {:partition} bHandled == 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Fdo_8 != 0;
    call {:si_unique_call 2078} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_28);
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    havoc vslice_dummy_var_1456;
    call {:si_unique_call 2079} status_60 := TrueffsCallDriverSync(vslice_dummy_var_1456, Irp_28);
    goto L54;

  anon29_Then:
    assume {:partition} Fdo_8 == 0;
    goto L54;

  anon28_Then:
    assume {:partition} idString_3 != 0;
    goto L34;

  anon26_Then:
    assume {:partition} bHandled == 0;
    goto L34;

  anon32_Then:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    havoc status_60;
    bHandled := 0;
    goto L33;

  anon33_Then:
    call {:si_unique_call 2080} idString_3 := DeviceBuildCompatibleId(deviceExtension_19, Fdo_8);
    goto L33;

  anon34_Then:
    call {:si_unique_call 2081} idString_3 := DeviceBuildHardwareId(deviceExtension_19, Fdo_8);
    goto L33;

  anon25_Then:
    call {:si_unique_call 2082} idString_3 := DeviceBuildBusId(deviceExtension_19, Fdo_8);
    goto L33;

  anon35_Then:
    assume {:partition} Fdo_8 != 0;
    assume {:nonnull} DeviceObject_32 != 0;
    assume DeviceObject_32 > 0;
    havoc deviceExtension_19;
    goto L17;
}



procedure {:origName "TrueffsFreeTranslatedAddress"} TrueffsFreeTranslatedAddress(actual_TranslatedAddress_1: int, actual_Length_4: int, actual_AddressSpace_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "TrueffsFreeTranslatedAddress"} TrueffsFreeTranslatedAddress(actual_TranslatedAddress_1: int, actual_Length_4: int, actual_AddressSpace_2: int)
{
  var {:pointer} TranslatedAddress_1: int;
  var {:scalar} Length_4: int;
  var {:scalar} AddressSpace_2: int;
  var vslice_dummy_var_414: int;

  anon0:
    call {:si_unique_call 2083} vslice_dummy_var_414 := __HAVOC_malloc(4);
    TranslatedAddress_1 := actual_TranslatedAddress_1;
    Length_4 := actual_Length_4;
    AddressSpace_2 := actual_AddressSpace_2;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} TranslatedAddress_1 != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} AddressSpace_2 == 0;
    call {:si_unique_call 2084} MmUnmapIoSpace(0, Length_4);
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} AddressSpace_2 != 0;
    goto L1;

  anon5_Then:
    assume {:partition} TranslatedAddress_1 == 0;
    goto L1;
}



procedure {:origName "_sdv_init17"} _sdv_init17();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init17"} _sdv_init17()
{
  var vslice_dummy_var_415: int;

  anon0:
    call {:si_unique_call 2085} vslice_dummy_var_415 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "fromUNALLONG"} fromUNALLONG(actual_unal: int) returns (Tmp_1871: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "fromUNALLONG"} fromUNALLONG(actual_unal: int) returns (Tmp_1871: int)
{
  var {:pointer} Tmp_1873: int;
  var {:pointer} Tmp_1874: int;
  var {:pointer} unal: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;

  anon0:
    unal := actual_unal;
    assume {:nonnull} unal != 0;
    assume unal > 0;
    havoc Tmp_1873;
    call {:si_unique_call 2086} vslice_dummy_var_416 := fromUNAL(Tmp_1873);
    assume {:nonnull} unal != 0;
    assume unal > 0;
    havoc Tmp_1874;
    call {:si_unique_call 2087} vslice_dummy_var_417 := fromUNAL(Tmp_1874);
    call {:si_unique_call 2088} Tmp_1871 := corral_nondet();
    return;
}



procedure {:origName "fromUNAL"} fromUNAL(actual_unal_1: int) returns (Tmp_1875: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "fromUNAL"} fromUNAL(actual_unal_1: int) returns (Tmp_1875: int)
{

  anon0:
    call {:si_unique_call 2089} Tmp_1875 := corral_nondet();
    return;
}



procedure {:origName "toUNAL"} toUNAL(actual_unal_2: int, actual_n_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "toUNAL"} toUNAL(actual_unal_2: int, actual_n_1: int)
{
  var {:pointer} unal_2: int;
  var {:scalar} n_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_418: int;

  anon0:
    call {:si_unique_call 2090} vslice_dummy_var_418 := __HAVOC_malloc(4);
    unal_2 := actual_unal_2;
    n_1 := actual_n_1;
    assume {:nonnull} unal_2 != 0;
    assume unal_2 > 0;
    call {:si_unique_call 2091} boogieTmp := corral_nondet();
    assume {:nonnull} unal_2 != 0;
    assume unal_2 > 0;
    return;
}



procedure {:origName "toUNALLONG"} toUNALLONG(actual_unal_3: int, actual_n_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "toUNALLONG"} toUNALLONG(actual_unal_3: int, actual_n_2: int)
{
  var {:scalar} Tmp_1879: int;
  var {:pointer} Tmp_1881: int;
  var {:pointer} Tmp_1882: int;
  var {:scalar} Tmp_1884: int;
  var {:pointer} unal_3: int;
  var {:scalar} n_2: int;
  var vslice_dummy_var_419: int;

  anon0:
    call {:si_unique_call 2092} vslice_dummy_var_419 := __HAVOC_malloc(4);
    unal_3 := actual_unal_3;
    n_2 := actual_n_2;
    Tmp_1879 := n_2;
    assume {:nonnull} unal_3 != 0;
    assume unal_3 > 0;
    havoc Tmp_1881;
    call {:si_unique_call 2093} toUNAL(Tmp_1881, Tmp_1879);
    call {:si_unique_call 2094} Tmp_1884 := corral_nondet();
    assume {:nonnull} unal_3 != 0;
    assume unal_3 > 0;
    havoc Tmp_1882;
    call {:si_unique_call 2095} toUNAL(Tmp_1882, Tmp_1884);
    return;
}



procedure {:origName "flIOctl"} flIOctl(actual_ioreq1: int) returns (Tmp_1885: int);
  modifies alloc, initDone, LockDepth;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flIOctl"} flIOctl(actual_ioreq1: int) returns (Tmp_1885: int)
{
  var {:pointer} inputRec: int;
  var {:pointer} outputRec: int;
  var {:pointer} outputRec_1: int;
  var {:pointer} outputRec_2: int;
  var {:pointer} inputRec_1: int;
  var {:pointer} outputRec_3: int;
  var {:pointer} inputRec_2: int;
  var {:pointer} inputRec_3: int;
  var {:pointer} outputRec_4: int;
  var {:pointer} inputRec_4: int;
  var {:pointer} inputRec_5: int;
  var {:pointer} outputRec_5: int;
  var {:pointer} outputRec_6: int;
  var {:pointer} inputRec_6: int;
  var {:pointer} inputRec_7: int;
  var {:pointer} outputRec_7: int;
  var {:pointer} outputRecord: int;
  var {:pointer} outputRec_8: int;
  var {:pointer} outputRec_9: int;
  var {:pointer} outputRec_10: int;
  var {:pointer} inputRec_8: int;
  var {:pointer} outputRec_11: int;
  var {:pointer} inputRec_9: int;
  var {:pointer} outputRec_12: int;
  var {:pointer} outputRec_13: int;
  var {:pointer} outputRec_14: int;
  var {:pointer} inputRec_10: int;
  var {:scalar} ioreq2_1: int;
  var {:pointer} inputRec_11: int;
  var {:pointer} Tmp_1886: int;
  var {:pointer} inputRecord: int;
  var {:pointer} outputRec_15: int;
  var {:pointer} Tmp_1887: int;
  var {:pointer} inputRec_12: int;
  var {:pointer} outputRec_16: int;
  var {:pointer} outputRec_17: int;
  var {:pointer} outputRec_18: int;
  var {:pointer} outputRec_19: int;
  var {:pointer} inputRec_13: int;
  var {:pointer} outputRec_20: int;
  var {:pointer} inputRec_14: int;
  var {:pointer} inputRec_15: int;
  var {:pointer} inputRec_16: int;
  var {:pointer} ioreq1: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 2096} ioreq2_1 := __HAVOC_malloc(24);
    ioreq1 := actual_ioreq1;
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    havoc Tmp_1886;
    assume {:nonnull} Tmp_1886 != 0;
    assume Tmp_1886 > 0;
    havoc inputRecord;
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    havoc Tmp_1887;
    assume {:nonnull} Tmp_1887 != 0;
    assume Tmp_1887 > 0;
    havoc outputRecord;
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} ioreq1 != 0;
    assume ioreq1 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    inputRec_8 := inputRecord;
    outputRec_17 := outputRecord;
    assume {:nonnull} inputRec_8 != 0;
    assume inputRec_8 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_17 != 0;
    assume outputRec_17 > 0;
    call {:si_unique_call 2097} boogieTmp := bdCall(706, ioreq2_1);
    assume {:nonnull} outputRec_17 != 0;
    assume outputRec_17 > 0;
    havoc Tmp_1885;
    goto L1;

  L1:
    return;

  anon93_Then:
    Tmp_1885 := 51;
    goto L1;

  anon94_Then:
    inputRec_7 := inputRecord;
    outputRec := outputRecord;
    assume {:nonnull} inputRec_7 != 0;
    assume inputRec_7 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_7 != 0;
    assume inputRec_7 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec != 0;
    assume outputRec > 0;
    call {:si_unique_call 2098} boogieTmp := bdCall(704, ioreq2_1);
    assume {:nonnull} outputRec != 0;
    assume outputRec > 0;
    havoc Tmp_1885;
    goto L1;

  anon95_Then:
    inputRec_13 := inputRecord;
    outputRec_6 := outputRecord;
    assume {:nonnull} inputRec_13 != 0;
    assume inputRec_13 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_13 != 0;
    assume inputRec_13 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_13 != 0;
    assume inputRec_13 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_13 != 0;
    assume inputRec_13 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_6 != 0;
    assume outputRec_6 > 0;
    call {:si_unique_call 2099} boogieTmp := bdCall(716, ioreq2_1);
    assume {:nonnull} outputRec_6 != 0;
    assume outputRec_6 > 0;
    havoc Tmp_1885;
    goto L1;

  anon96_Then:
    inputRec_4 := inputRecord;
    outputRec_12 := outputRecord;
    assume {:nonnull} inputRec_4 != 0;
    assume inputRec_4 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_12 != 0;
    assume outputRec_12 > 0;
    call {:si_unique_call 2100} boogieTmp := bdCall(808, ioreq2_1);
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_12 != 0;
    assume outputRec_12 > 0;
    assume {:nonnull} outputRec_12 != 0;
    assume outputRec_12 > 0;
    havoc Tmp_1885;
    goto L1;

  anon97_Then:
    outputRec_3 := outputRecord;
    assume {:nonnull} outputRec_3 != 0;
    assume outputRec_3 > 0;
    call {:si_unique_call 2101} boogieTmp := bdCall(807, ioreq2_1);
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_3 != 0;
    assume outputRec_3 > 0;
    assume {:nonnull} outputRec_3 != 0;
    assume outputRec_3 > 0;
    havoc Tmp_1885;
    goto L1;

  anon98_Then:
    outputRec_19 := outputRecord;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_19 != 0;
    assume outputRec_19 > 0;
    assume {:nonnull} outputRec_19 != 0;
    assume outputRec_19 > 0;
    call {:si_unique_call 2102} boogieTmp := bdCall(712, ioreq2_1);
    assume {:nonnull} outputRec_19 != 0;
    assume outputRec_19 > 0;
    havoc Tmp_1885;
    goto L1;

  anon99_Then:
    outputRec_5 := outputRecord;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_5 != 0;
    assume outputRec_5 > 0;
    assume {:nonnull} outputRec_5 != 0;
    assume outputRec_5 > 0;
    call {:si_unique_call 2103} boogieTmp := bdCall(713, ioreq2_1);
    assume {:nonnull} outputRec_5 != 0;
    assume outputRec_5 > 0;
    havoc Tmp_1885;
    goto L1;

  anon100_Then:
    inputRec := inputRecord;
    outputRec_14 := outputRecord;
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_14 != 0;
    assume outputRec_14 > 0;
    call {:si_unique_call 2104} boogieTmp := bdCall(703, ioreq2_1);
    goto L110;

  L110:
    assume {:nonnull} outputRec_14 != 0;
    assume outputRec_14 > 0;
    havoc Tmp_1885;
    goto L1;

  anon131_Then:
    assume {:nonnull} outputRec_14 != 0;
    assume outputRec_14 > 0;
    goto L110;

  anon132_Then:
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_14 != 0;
    assume outputRec_14 > 0;
    call {:si_unique_call 2105} boogieTmp := bdCall(702, ioreq2_1);
    goto L110;

  anon138_Then:
    assume {:nonnull} outputRec_14 != 0;
    assume outputRec_14 > 0;
    call {:si_unique_call 2106} boogieTmp := bdCall(701, ioreq2_1);
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec != 0;
    assume inputRec > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    goto L110;

  anon101_Then:
    inputRec_11 := inputRecord;
    outputRec_1 := outputRecord;
    assume {:nonnull} inputRec_11 != 0;
    assume inputRec_11 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} inputRec_11 != 0;
    assume inputRec_11 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} inputRec_11 != 0;
    assume inputRec_11 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} inputRec_11 != 0;
    assume inputRec_11 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} inputRec_11 != 0;
    assume inputRec_11 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} inputRec_11 != 0;
    assume inputRec_11 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} inputRec_11 != 0;
    assume inputRec_11 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} inputRec_11 != 0;
    assume inputRec_11 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_1 != 0;
    assume outputRec_1 > 0;
    call {:si_unique_call 2107} boogieTmp := bdCall(407, ioreq2_1);
    goto L145;

  L145:
    assume {:nonnull} outputRec_1 != 0;
    assume outputRec_1 > 0;
    havoc Tmp_1885;
    goto L1;

  anon125_Then:
    assume {:nonnull} outputRec_1 != 0;
    assume outputRec_1 > 0;
    goto L145;

  anon126_Then:
    assume {:nonnull} inputRec_11 != 0;
    assume inputRec_11 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_1 != 0;
    assume outputRec_1 > 0;
    call {:si_unique_call 2108} boogieTmp := bdCall(405, ioreq2_1);
    goto L145;

  anon127_Then:
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_1 != 0;
    assume outputRec_1 > 0;
    call {:si_unique_call 2109} boogieTmp := bdCall(406, ioreq2_1);
    goto L145;

  anon128_Then:
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_1 != 0;
    assume outputRec_1 > 0;
    call {:si_unique_call 2110} boogieTmp := bdCall(406, ioreq2_1);
    goto L145;

  anon129_Then:
    assume {:nonnull} outputRec_1 != 0;
    assume outputRec_1 > 0;
    call {:si_unique_call 2111} boogieTmp := bdCall(504, ioreq2_1);
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_1 != 0;
    assume outputRec_1 > 0;
    goto L145;

  anon130_Then:
    assume {:nonnull} outputRec_1 != 0;
    assume outputRec_1 > 0;
    call {:si_unique_call 2112} boogieTmp := bdCall(506, ioreq2_1);
    goto L145;

  anon137_Then:
    assume {:nonnull} inputRec_11 != 0;
    assume inputRec_11 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_1 != 0;
    assume outputRec_1 > 0;
    call {:si_unique_call 2113} boogieTmp := bdCall(505, ioreq2_1);
    goto L145;

  anon102_Then:
    inputRec_5 := inputRecord;
    outputRec_4 := outputRecord;
    assume {:nonnull} inputRec_5 != 0;
    assume inputRec_5 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} inputRec_5 != 0;
    assume inputRec_5 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} inputRec_5 != 0;
    assume inputRec_5 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} inputRec_5 != 0;
    assume inputRec_5 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} inputRec_5 != 0;
    assume inputRec_5 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} inputRec_5 != 0;
    assume inputRec_5 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} inputRec_5 != 0;
    assume inputRec_5 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} inputRec_5 != 0;
    assume inputRec_5 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_4 != 0;
    assume outputRec_4 > 0;
    call {:si_unique_call 2114} boogieTmp := bdCall(806, ioreq2_1);
    goto L193;

  L193:
    assume {:nonnull} outputRec_4 != 0;
    assume outputRec_4 > 0;
    havoc Tmp_1885;
    goto L1;

  anon119_Then:
    assume {:nonnull} outputRec_4 != 0;
    assume outputRec_4 > 0;
    goto L193;

  anon120_Then:
    assume {:nonnull} inputRec_5 != 0;
    assume inputRec_5 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_4 != 0;
    assume outputRec_4 > 0;
    call {:si_unique_call 2115} boogieTmp := bdCall(805, ioreq2_1);
    goto L193;

  anon121_Then:
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_4 != 0;
    assume outputRec_4 > 0;
    call {:si_unique_call 2116} boogieTmp := bdCall(804, ioreq2_1);
    goto L193;

  anon122_Then:
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_4 != 0;
    assume outputRec_4 > 0;
    call {:si_unique_call 2117} boogieTmp := bdCall(804, ioreq2_1);
    goto L193;

  anon123_Then:
    assume {:nonnull} outputRec_4 != 0;
    assume outputRec_4 > 0;
    call {:si_unique_call 2118} boogieTmp := bdCall(801, ioreq2_1);
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_4 != 0;
    assume outputRec_4 > 0;
    goto L193;

  anon124_Then:
    assume {:nonnull} outputRec_4 != 0;
    assume outputRec_4 > 0;
    call {:si_unique_call 2119} boogieTmp := bdCall(802, ioreq2_1);
    goto L193;

  anon136_Then:
    assume {:nonnull} inputRec_5 != 0;
    assume inputRec_5 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_4 != 0;
    assume outputRec_4 > 0;
    call {:si_unique_call 2120} boogieTmp := bdCall(803, ioreq2_1);
    goto L193;

  anon103_Then:
    inputRec_10 := inputRecord;
    outputRec_18 := outputRecord;
    assume {:nonnull} inputRec_10 != 0;
    assume inputRec_10 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_18 != 0;
    assume outputRec_18 > 0;
    call {:si_unique_call 2121} boogieTmp := bdCall(811, ioreq2_1);
    assume {:nonnull} outputRec_18 != 0;
    assume outputRec_18 > 0;
    havoc Tmp_1885;
    goto L1;

  anon104_Then:
    inputRec_2 := inputRecord;
    outputRec_15 := outputRecord;
    assume {:nonnull} inputRec_2 != 0;
    assume inputRec_2 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_2 != 0;
    assume inputRec_2 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_15 != 0;
    assume outputRec_15 > 0;
    call {:si_unique_call 2122} boogieTmp := bdCall(715, ioreq2_1);
    assume {:nonnull} outputRec_15 != 0;
    assume outputRec_15 > 0;
    havoc Tmp_1885;
    goto L1;

  anon105_Then:
    inputRec_12 := inputRecord;
    outputRec_13 := outputRecord;
    assume {:nonnull} inputRec_12 != 0;
    assume inputRec_12 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_12 != 0;
    assume inputRec_12 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_12 != 0;
    assume inputRec_12 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_13 != 0;
    assume outputRec_13 > 0;
    call {:si_unique_call 2123} boogieTmp := bdCall(816, ioreq2_1);
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_13 != 0;
    assume outputRec_13 > 0;
    assume {:nonnull} outputRec_13 != 0;
    assume outputRec_13 > 0;
    havoc Tmp_1885;
    goto L1;

  anon106_Then:
    inputRec_15 := inputRecord;
    outputRec_10 := outputRecord;
    assume {:nonnull} inputRec_15 != 0;
    assume inputRec_15 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_15 != 0;
    assume inputRec_15 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_15 != 0;
    assume inputRec_15 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_10 != 0;
    assume outputRec_10 > 0;
    call {:si_unique_call 2124} boogieTmp := bdCall(818, ioreq2_1);
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_10 != 0;
    assume outputRec_10 > 0;
    assume {:nonnull} outputRec_10 != 0;
    assume outputRec_10 > 0;
    havoc Tmp_1885;
    goto L1;

  anon107_Then:
    inputRec_9 := inputRecord;
    outputRec_16 := outputRecord;
    assume {:nonnull} inputRec_9 != 0;
    assume inputRec_9 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_9 != 0;
    assume inputRec_9 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_16 != 0;
    assume outputRec_16 > 0;
    call {:si_unique_call 2125} boogieTmp := bdCall(817, ioreq2_1);
    assume {:nonnull} outputRec_16 != 0;
    assume outputRec_16 > 0;
    havoc Tmp_1885;
    goto L1;

  anon108_Then:
    inputRec_3 := inputRecord;
    outputRec_8 := outputRecord;
    assume {:nonnull} inputRec_3 != 0;
    assume inputRec_3 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_3 != 0;
    assume inputRec_3 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} inputRec_3 != 0;
    assume inputRec_3 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} inputRec_3 != 0;
    assume inputRec_3 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} inputRec_3 != 0;
    assume inputRec_3 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} inputRec_3 != 0;
    assume inputRec_3 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} inputRec_3 != 0;
    assume inputRec_3 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} inputRec_3 != 0;
    assume inputRec_3 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} outputRec_8 != 0;
    assume outputRec_8 > 0;
    call {:si_unique_call 2126} boogieTmp := bdCall(503, ioreq2_1);
    goto L302;

  L302:
    assume {:nonnull} outputRec_8 != 0;
    assume outputRec_8 > 0;
    havoc Tmp_1885;
    goto L1;

  anon113_Then:
    assume {:nonnull} outputRec_8 != 0;
    assume outputRec_8 > 0;
    goto L302;

  anon114_Then:
    assume {:nonnull} outputRec_8 != 0;
    assume outputRec_8 > 0;
    call {:si_unique_call 2127} boogieTmp := bdCall(403, ioreq2_1);
    goto L302;

  anon115_Then:
    assume {:nonnull} outputRec_8 != 0;
    assume outputRec_8 > 0;
    call {:si_unique_call 2128} boogieTmp := bdCall(404, ioreq2_1);
    goto L302;

  anon116_Then:
    assume {:nonnull} outputRec_8 != 0;
    assume outputRec_8 > 0;
    call {:si_unique_call 2129} boogieTmp := bdCall(402, ioreq2_1);
    goto L302;

  anon117_Then:
    assume {:nonnull} outputRec_8 != 0;
    assume outputRec_8 > 0;
    call {:si_unique_call 2130} boogieTmp := bdCall(401, ioreq2_1);
    goto L302;

  anon118_Then:
    assume {:nonnull} outputRec_8 != 0;
    assume outputRec_8 > 0;
    call {:si_unique_call 2131} boogieTmp := bdCall(502, ioreq2_1);
    goto L302;

  anon135_Then:
    assume {:nonnull} outputRec_8 != 0;
    assume outputRec_8 > 0;
    call {:si_unique_call 2132} boogieTmp := bdCall(501, ioreq2_1);
    goto L302;

  anon109_Then:
    inputRec_6 := inputRecord;
    outputRec_2 := outputRecord;
    assume {:nonnull} inputRec_6 != 0;
    assume inputRec_6 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_6 != 0;
    assume inputRec_6 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_2 != 0;
    assume outputRec_2 > 0;
    call {:si_unique_call 2133} boogieTmp := bdCall(714, ioreq2_1);
    assume {:nonnull} outputRec_2 != 0;
    assume outputRec_2 > 0;
    havoc Tmp_1885;
    goto L1;

  anon110_Then:
    inputRec_1 := inputRecord;
    outputRec_7 := outputRecord;
    assume {:nonnull} inputRec_1 != 0;
    assume inputRec_1 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} outputRec_7 != 0;
    assume outputRec_7 > 0;
    call {:si_unique_call 2134} boogieTmp := bdCall(813, ioreq2_1);
    goto L337;

  L337:
    assume {:nonnull} outputRec_7 != 0;
    assume outputRec_7 > 0;
    havoc Tmp_1885;
    goto L1;

  anon134_Then:
    assume {:nonnull} outputRec_7 != 0;
    assume outputRec_7 > 0;
    call {:si_unique_call 2135} boogieTmp := bdCall(810, ioreq2_1);
    goto L337;

  anon111_Then:
    inputRec_14 := inputRecord;
    outputRec_11 := outputRecord;
    assume {:nonnull} inputRec_14 != 0;
    assume inputRec_14 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} inputRec_14 != 0;
    assume inputRec_14 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_11 != 0;
    assume outputRec_11 > 0;
    call {:si_unique_call 2136} boogieTmp := bdCall(812, ioreq2_1);
    assume {:nonnull} outputRec_11 != 0;
    assume outputRec_11 > 0;
    havoc Tmp_1885;
    goto L1;

  anon112_Then:
    inputRec_16 := inputRecord;
    outputRec_9 := outputRecord;
    assume {:nonnull} inputRec_16 != 0;
    assume inputRec_16 > 0;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_9 != 0;
    assume outputRec_9 > 0;
    call {:si_unique_call 2137} boogieTmp := bdCall(815, ioreq2_1);
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_9 != 0;
    assume outputRec_9 > 0;
    assume {:nonnull} outputRec_9 != 0;
    assume outputRec_9 > 0;
    havoc Tmp_1885;
    goto L1;

  anon133_Then:
    outputRec_20 := outputRecord;
    assume {:nonnull} ioreq2_1 != 0;
    assume ioreq2_1 > 0;
    assume {:nonnull} outputRec_20 != 0;
    assume outputRec_20 > 0;
    assume {:nonnull} outputRec_20 != 0;
    assume outputRec_20 > 0;
    call {:si_unique_call 2138} boogieTmp := bdCall(822, ioreq2_1);
    assume {:nonnull} outputRec_20 != 0;
    assume outputRec_20 > 0;
    havoc Tmp_1885;
    goto L1;
}



procedure {:origName "_sdv_init19"} _sdv_init19();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init19"} _sdv_init19()
{
  var vslice_dummy_var_420: int;

  anon0:
    call {:si_unique_call 2139} vslice_dummy_var_420 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "flSysfunInit"} flSysfunInit();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flSysfunInit"} flSysfunInit()
{
  var vslice_dummy_var_421: int;

  anon0:
    call {:si_unique_call 2140} vslice_dummy_var_421 := __HAVOC_malloc(4);
    call {:si_unique_call 2141} timerInit();
    return;
}



procedure {:origName "_sdv_init18"} _sdv_init18();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init18"} _sdv_init18()
{
  var vslice_dummy_var_422: int;

  anon0:
    call {:si_unique_call 2142} vslice_dummy_var_422 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "flDelayMsecs"} flDelayMsecs(actual_milliseconds: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flDelayMsecs"} flDelayMsecs(actual_milliseconds: int)
{
  var {:scalar} i_20: int;
  var {:scalar} j_4: int;
  var {:scalar} innerLoop: int;
  var {:scalar} milliseconds: int;
  var vslice_dummy_var_423: int;

  anon0:
    call {:si_unique_call 2143} vslice_dummy_var_423 := __HAVOC_malloc(4);
    milliseconds := actual_milliseconds;
    innerLoop := 65535;
    i_20 := 0;
    goto L8;

  L8:
    call {:si_unique_call 2144} i_20, j_4 := flDelayMsecs_loop_L8(i_20, j_4, innerLoop, milliseconds);
    goto L8_last;

  L8_last:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} milliseconds > i_20;
    j_4 := 0;
    goto L10;

  L10:
    call {:si_unique_call 2145} j_4 := flDelayMsecs_loop_L10(j_4, innerLoop);
    goto L10_last;

  L10_last:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} innerLoop > j_4;
    j_4 := j_4 + 1;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    assume false;
    return;

  anon6_Then:
    assume {:partition} j_4 >= innerLoop;
    i_20 := i_20 + 1;
    goto anon6_Then_dummy;

  anon6_Then_dummy:
    assume false;
    return;

  anon5_Then:
    assume {:partition} i_20 >= milliseconds;
    return;
}



procedure {:origName "myMalloc"} myMalloc(actual_numberOfBytes: int) returns (Tmp_1897: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "myMalloc"} myMalloc(actual_numberOfBytes: int) returns (Tmp_1897: int)
{
  var {:scalar} numberOfBytes: int;

  anon0:
    numberOfBytes := actual_numberOfBytes;
    call {:si_unique_call 2146} Tmp_1897 := ExAllocatePoolWithTag(0, numberOfBytes, -463051180);
    return;
}



procedure {:origName "startIntervalTimer"} startIntervalTimer();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "startIntervalTimer"} startIntervalTimer()
{
  var {:scalar} dueTime: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_1457: int;

  anon0:
    call {:si_unique_call 2147} dueTime := __HAVOC_malloc(20);
    call {:si_unique_call 2148} vslice_dummy_var_424 := __HAVOC_malloc(4);
    assume {:nonnull} dueTime != 0;
    assume dueTime > 0;
    havoc vslice_dummy_var_1457;
    call {:si_unique_call 2149} vslice_dummy_var_425 := KeSetTimerEx(0, dueTime, vslice_dummy_var_1457, 0);
    return;
}



procedure {:origName "flFreeMutex"} flFreeMutex(actual_mutex: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flFreeMutex"} flFreeMutex(actual_mutex: int)
{
  var {:pointer} mutex: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_1458: int;

  anon0:
    call {:si_unique_call 2150} vslice_dummy_var_426 := __HAVOC_malloc(4);
    mutex := actual_mutex;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} mutex != 0;
    assume {:nonnull} mutex != 0;
    assume mutex > 0;
    havoc vslice_dummy_var_1458;
    call {:si_unique_call 2151} sdv_KeReleaseSpinLock(0, vslice_dummy_var_1458);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} mutex == 0;
    goto L1;
}



procedure {:origName "flTakeMutex"} flTakeMutex(actual_mutex_1: int) returns (Tmp_1903: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_1903 == 1 || Tmp_1903 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flTakeMutex"} flTakeMutex(actual_mutex_1: int) returns (Tmp_1903: int)
{
  var {:pointer} Tmp_1904: int;
  var {:pointer} mutex_1: int;

  anon0:
    mutex_1 := actual_mutex_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} mutex_1 != 0;
    call {:si_unique_call 2152} Tmp_1904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1904 != 0;
    assume Tmp_1904 > 0;
    assume {:nonnull} mutex_1 != 0;
    assume mutex_1 > 0;
    call {:si_unique_call 2153} sdv_KeAcquireSpinLock(0, Tmp_1904);
    assume {:nonnull} Tmp_1904 != 0;
    assume Tmp_1904 > 0;
    assume {:nonnull} mutex_1 != 0;
    assume mutex_1 > 0;
    Tmp_1903 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} mutex_1 == 0;
    Tmp_1903 := 0;
    goto L1;
}



procedure {:origName "flmemcpy"} flmemcpy(actual_dest: int, actual_src: int, actual_count: int) returns (Tmp_1905: int);
  free ensures {:va_keep} Tmp_1905 == actual_dest;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flmemcpy"} flmemcpy(actual_dest: int, actual_src: int, actual_count: int) returns (Tmp_1905: int)
{
  var {:scalar} i_21: int;
  var {:pointer} ldest: int;
  var {:pointer} lsrc: int;
  var {:pointer} dest: int;
  var {:pointer} src: int;
  var {:scalar} count: int;

  anon0:
    dest := actual_dest;
    src := actual_src;
    count := actual_count;
    ldest := dest;
    lsrc := src;
    i_21 := 0;
    goto L9;

  L9:
    call {:si_unique_call 2154} i_21 := flmemcpy_loop_L9(i_21, ldest, lsrc, count);
    goto L9_last;

  L9_last:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} count > i_21;
    assume {:nonnull} ldest != 0;
    assume ldest > 0;
    assume {:nonnull} lsrc != 0;
    assume lsrc > 0;
    i_21 := i_21 + 1;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} i_21 >= count;
    Tmp_1905 := dest;
    return;
}



procedure {:origName "flDeleteMutex"} flDeleteMutex(actual_mutex_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flDeleteMutex"} flDeleteMutex(actual_mutex_2: int)
{
  var vslice_dummy_var_427: int;

  anon0:
    call {:si_unique_call 2155} vslice_dummy_var_427 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "timerInit"} timerInit();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "timerInit"} timerInit()
{
  var vslice_dummy_var_428: int;

  anon0:
    call {:si_unique_call 2156} vslice_dummy_var_428 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "flAddLongToFarPointer"} flAddLongToFarPointer(actual_ptr: int, actual_offset_3: int) returns (Tmp_1911: int);
  free ensures {:va_keep} Tmp_1911 == actual_ptr;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flAddLongToFarPointer"} flAddLongToFarPointer(actual_ptr: int, actual_offset_3: int) returns (Tmp_1911: int)
{
  var {:pointer} ptr: int;

  anon0:
    ptr := actual_ptr;
    Tmp_1911 := ptr;
    return;
}



procedure {:origName "flInstallTimer"} flInstallTimer(actual_routine_1: int, actual_intervalMsec: int) returns (Tmp_1913: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1913 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flInstallTimer"} flInstallTimer(actual_routine_1: int, actual_intervalMsec: int) returns (Tmp_1913: int)
{
  var {:scalar} routine_1: int;
  var {:scalar} intervalMsec: int;

  anon0:
    routine_1 := actual_routine_1;
    intervalMsec := actual_intervalMsec;
    call {:si_unique_call 2157} KeInitializeDpc(timerDpc, li2bplFunctionConstant681, 0);
    call {:si_unique_call 2158} KeInitializeTimer(0);
    call {:si_unique_call 2159} startIntervalTimer();
    Tmp_1913 := 0;
    return;
}



procedure {:origName "flRemoveTimer"} flRemoveTimer();
  modifies alloc, LockDepth;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRemoveTimer"} flRemoveTimer()
{
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;

  anon0:
    call {:si_unique_call 2160} vslice_dummy_var_429 := __HAVOC_malloc(4);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 2161} vslice_dummy_var_430 := KeCancelTimer(0);
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 2162} socketIntervalRoutine_sdv_static_function_24();
    assume {:IndirectCall} true;
    call {:si_unique_call 2163} socketIntervalRoutine_sdv_static_function_24();
    goto L1;

  L1:
    return;

  anon6_Then:
    goto L1;

  anon5_Then:
    goto L4;
}



procedure {:origName "flCreateMutex"} flCreateMutex(actual_mutex_3: int) returns (Tmp_1917: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1917 == 0 || Tmp_1917 == 31;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flCreateMutex"} flCreateMutex(actual_mutex_3: int) returns (Tmp_1917: int)
{
  var {:pointer} Tmp_1918: int;
  var {:pointer} mutex_3: int;

  anon0:
    mutex_3 := actual_mutex_3;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} mutex_3 != 0;
    call {:si_unique_call 2164} Tmp_1918 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1918 != 0;
    assume Tmp_1918 > 0;
    assume {:nonnull} mutex_3 != 0;
    assume mutex_3 > 0;
    call {:si_unique_call 2165} sdv_KeInitializeSpinLock(Tmp_1918);
    assume {:nonnull} Tmp_1918 != 0;
    assume Tmp_1918 > 0;
    assume {:nonnull} mutex_3 != 0;
    assume mutex_3 > 0;
    Tmp_1917 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} mutex_3 == 0;
    Tmp_1917 := 31;
    goto L1;
}



procedure {:origName "flmemcmp"} flmemcmp(actual_dest_1: int, actual_src_1: int, actual_count_1: int) returns (Tmp_1919: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flmemcmp"} flmemcmp(actual_dest_1: int, actual_src_1: int, actual_count_1: int) returns (Tmp_1919: int)
{
  var {:scalar} i_22: int;
  var {:pointer} ldest_1: int;
  var {:pointer} lsrc_1: int;
  var {:pointer} dest_1: int;
  var {:pointer} src_1: int;
  var {:scalar} count_1: int;

  anon0:
    dest_1 := actual_dest_1;
    src_1 := actual_src_1;
    count_1 := actual_count_1;
    ldest_1 := dest_1;
    lsrc_1 := src_1;
    i_22 := 0;
    goto L9;

  L9:
    call {:si_unique_call 2166} i_22 := flmemcmp_loop_L9(i_22, ldest_1, lsrc_1, count_1);
    goto L9_last;

  L9_last:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} count_1 > i_22;
    assume {:nonnull} ldest_1 != 0;
    assume ldest_1 > 0;
    assume {:nonnull} lsrc_1 != 0;
    assume lsrc_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} ldest_1 != 0;
    assume ldest_1 > 0;
    assume {:nonnull} lsrc_1 != 0;
    assume lsrc_1 > 0;
    havoc Tmp_1919;
    goto L1;

  L1:
    return;

  anon6_Then:
    i_22 := i_22 + 1;
    goto anon6_Then_dummy;

  anon6_Then_dummy:
    assume false;
    return;

  anon5_Then:
    assume {:partition} i_22 >= count_1;
    Tmp_1919 := 0;
    goto L1;
}



procedure {:origName "flmemset"} flmemset(actual_dest_2: int, actual_c: int, actual_count_2: int) returns (Tmp_1921: int);
  free ensures {:va_keep} Tmp_1921 == actual_dest_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flmemset"} flmemset(actual_dest_2: int, actual_c: int, actual_count_2: int) returns (Tmp_1921: int)
{
  var {:scalar} i_23: int;
  var {:pointer} ldest_2: int;
  var {:pointer} dest_2: int;
  var {:scalar} c: int;
  var {:scalar} count_2: int;

  anon0:
    dest_2 := actual_dest_2;
    c := actual_c;
    count_2 := actual_count_2;
    ldest_2 := dest_2;
    i_23 := 0;
    goto L7;

  L7:
    call {:si_unique_call 2167} i_23 := flmemset_loop_L7(i_23, ldest_2, c, count_2);
    goto L7_last;

  L7_last:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} count_2 > i_23;
    assume {:nonnull} ldest_2 != 0;
    assume ldest_2 > 0;
    i_23 := i_23 + 1;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} i_23 >= count_2;
    Tmp_1921 := dest_2;
    return;
}



procedure {:origName "flRandByte"} flRandByte() returns (Tmp_1923: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRandByte"} flRandByte() returns (Tmp_1923: int)
{
  var {:pointer} s_p_e_c_i_a_l_1: int;
  var {:pointer} Tmp_1925: int;
  var {:scalar} tickCount: int;

  anon0:
    call {:si_unique_call 2168} tickCount := __HAVOC_malloc(20);
    Tmp_1925 := KeTickCount;
    assume {:nonnull} Tmp_1925 != 0;
    assume Tmp_1925 > 0;
    havoc s_p_e_c_i_a_l_1;
    goto L7;

  L7:
    call {:si_unique_call 2169} flRandByte_loop_L7(s_p_e_c_i_a_l_1, tickCount);
    goto L7_last;

  L7_last:
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} tickCount != 0;
    assume tickCount > 0;
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} tickCount != 0;
    assume tickCount > 0;
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} tickCount != 0;
    assume tickCount > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} tickCount != 0;
    assume tickCount > 0;
    havoc Tmp_1923;
    return;

  anon3_Then:
    goto anon3_Then_dummy;

  anon3_Then_dummy:
    assume false;
    return;
}



procedure {:origName "i28f016Identify"} i28f016Identify(actual_pVol_94: int) returns (Tmp_1926: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1926 == 26 || Tmp_1926 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "i28f016Identify"} i28f016Identify(actual_pVol_94: int) returns (Tmp_1926: int)
{
  var {:scalar} Tmp_1927: int;
  var {:pointer} sdv_977: int;
  var {:pointer} flashPtr_11: int;
  var {:scalar} sdv_979: int;
  var {:scalar} sdv_980: int;
  var {:scalar} sdv_982: int;
  var {:scalar} fl_107: int;
  var {:scalar} sdv_983: int;
  var {:pointer} pVol_94: int;
  var vslice_dummy_var_1459: int;
  var vslice_dummy_var_1460: int;
  var vslice_dummy_var_1461: int;
  var vslice_dummy_var_1462: int;

  anon0:
    pVol_94 := actual_pVol_94;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    havoc vslice_dummy_var_1459;
    call {:si_unique_call 2170} flSetWindowBusWidth(vslice_dummy_var_1459, 16);
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    havoc vslice_dummy_var_1460;
    call {:si_unique_call 2171} flSetWindowSpeed(vslice_dummy_var_1460, 150);
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    havoc vslice_dummy_var_1461;
    call {:si_unique_call 2172} flSetWindowSize(vslice_dummy_var_1461, 2);
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    havoc vslice_dummy_var_1462;
    call {:si_unique_call 2173} sdv_977 := flMap(vslice_dummy_var_1462, 0);
    flashPtr_11 := sdv_977;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    call {:si_unique_call 2174} sdv_979 := corral_nondet();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_979 == 137;
    call {:si_unique_call 2175} sdv_982 := corral_nondet();
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_982 == 26272;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    goto L38;

  L38:
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L40;

  L40:
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 2176} Tmp_1927 := i28f016WordSize(pVol_94);
    goto L51;

  L51:
    fl_107 := Tmp_1927;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} fl_107 != 0;
    Tmp_1926 := fl_107;
    goto L1;

  L1:
    return;

  anon27_Then:
    assume {:partition} fl_107 == 0;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    Tmp_1926 := 0;
    goto L1;

  anon26_Then:
    call {:si_unique_call 2177} Tmp_1927 := flIntelSize(pVol_94, 0, 0);
    goto L51;

  anon21_Then:
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    Tmp_1926 := 26;
    goto L1;

  anon22_Then:
    goto L40;

  anon20_Then:
    assume {:partition} sdv_982 != 26272;
    goto L25;

  L25:
    call {:si_unique_call 2178} sdv_980 := corral_nondet();
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_980 == 176;
    call {:si_unique_call 2179} sdv_983 := corral_nondet();
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_983 == 26248;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    goto L38;

  anon24_Then:
    assume {:partition} sdv_983 != 26248;
    goto L62;

  L62:
    call {:si_unique_call 2180} flIntelIdentify(pVol_94, 0, 0);
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} pVol_94 != 0;
    assume pVol_94 > 0;
    goto L38;

  anon25_Then:
    goto L38;

  anon23_Then:
    assume {:partition} sdv_980 != 176;
    goto L62;

  anon19_Then:
    assume {:partition} sdv_979 != 137;
    goto L25;
}



procedure {:origName "flRegisterI28F016"} flRegisterI28F016() returns (Tmp_1931: int);
  free ensures {:va_keep} Tmp_1931 == 102 || Tmp_1931 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "flRegisterI28F016"} flRegisterI28F016() returns (Tmp_1931: int)
{
  var {:scalar} Tmp_1932: int;
  var {:scalar} Tmp_1934: int;

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_1931 := 102;
    goto L1;

  L1:
    return;

  anon11_Then:
    havoc Tmp_1932;
    Tmp_1934 := Tmp_1932;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume Tmp_1934 <= 2;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume Tmp_1934 != 2;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume Tmp_1934 != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume Tmp_1934 != 0;
    goto L8;

  L8:
    Tmp_1931 := 0;
    goto L1;

  anon15_Then:
    assume Tmp_1934 == 0;
    Tmp_1934 := 0;
    goto L8;

  anon14_Then:
    assume Tmp_1934 == 1;
    Tmp_1934 := 1;
    goto L8;

  anon13_Then:
    assume Tmp_1934 == 2;
    Tmp_1934 := 2;
    goto L8;

  anon12_Then:
    assume Tmp_1934 > 2;
    goto L8;
}



procedure {:origName "_sdv_init22"} _sdv_init22();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init22"} _sdv_init22()
{
  var vslice_dummy_var_431: int;

  anon0:
    call {:si_unique_call 2181} vslice_dummy_var_431 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "i28f016WordSize"} i28f016WordSize(actual_pVol_95: int) returns (Tmp_1937: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1937 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "i28f016WordSize"} i28f016WordSize(actual_pVol_95: int) returns (Tmp_1937: int)
{
  var {:scalar} Tmp_1938: int;
  var {:pointer} sdv_984: int;
  var {:scalar} sdv_985: int;
  var {:pointer} flashPtr_12: int;
  var {:pointer} sdv_986: int;
  var {:scalar} id0: int;
  var {:pointer} sdv_987: int;
  var {:scalar} sdv_988: int;
  var {:scalar} sdv_989: int;
  var {:scalar} sdv_990: int;
  var {:scalar} id1: int;
  var {:pointer} pVol_95: int;
  var vslice_dummy_var_1463: int;
  var vslice_dummy_var_1464: int;
  var vslice_dummy_var_1465: int;

  anon0:
    pVol_95 := actual_pVol_95;
    assume {:nonnull} pVol_95 != 0;
    assume pVol_95 > 0;
    havoc vslice_dummy_var_1463;
    call {:si_unique_call 2182} sdv_984 := flMap(vslice_dummy_var_1463, 0);
    flashPtr_12 := sdv_984;
    assume {:nonnull} pVol_95 != 0;
    assume pVol_95 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    id0 := 137;
    id1 := 26272;
    goto L20;

  L20:
    assume {:nonnull} pVol_95 != 0;
    assume pVol_95 > 0;
    goto L21;

  L21:
    call {:si_unique_call 2183} Tmp_1938, sdv_985, flashPtr_12, sdv_987, sdv_988, sdv_989, sdv_990 := i28f016WordSize_loop_L21(Tmp_1938, sdv_985, flashPtr_12, id0, sdv_987, sdv_988, sdv_989, sdv_990, id1, pVol_95);
    goto L21_last;

  L21_last:
    assume {:CounterLoop 1999} true;
    assume {:nonnull} pVol_95 != 0;
    assume pVol_95 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} pVol_95 != 0;
    assume pVol_95 > 0;
    havoc Tmp_1938;
    assume {:nonnull} pVol_95 != 0;
    assume pVol_95 > 0;
    havoc vslice_dummy_var_1464;
    call {:si_unique_call 2184} sdv_987 := flMap(vslice_dummy_var_1464, Tmp_1938);
    flashPtr_12 := sdv_987;
    call {:si_unique_call 2185} sdv_989 := corral_nondet();
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} sdv_989 == id0;
    call {:si_unique_call 2186} sdv_988 := corral_nondet();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_988 != id1;
    goto L34;

  L34:
    call {:si_unique_call 2187} sdv_985 := corral_nondet();
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_985 == id0;
    call {:si_unique_call 2188} sdv_990 := corral_nondet();
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_990 == id1;
    assume {:nonnull} pVol_95 != 0;
    assume pVol_95 > 0;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} sdv_990 != id1;
    goto L22;

  L22:
    assume {:nonnull} pVol_95 != 0;
    assume pVol_95 > 0;
    havoc vslice_dummy_var_1465;
    call {:si_unique_call 2189} sdv_986 := flMap(vslice_dummy_var_1465, 0);
    flashPtr_12 := sdv_986;
    Tmp_1937 := 0;
    return;

  anon20_Then:
    assume {:partition} sdv_985 != id0;
    goto L22;

  anon19_Then:
    assume {:partition} sdv_988 == id1;
    goto L22;

  anon18_Then:
    assume {:partition} sdv_989 != id0;
    goto L34;

  anon17_Then:
    goto L22;

  anon15_Then:
    assume {:nonnull} pVol_95 != 0;
    assume pVol_95 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    id0 := 176;
    id1 := 26248;
    goto L20;

  anon16_Then:
    goto L20;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AcceleratedTransfer"} AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.AdapterObject__DUMP_POINTERS"} {:fieldname "AdapterObject"} AdapterObject__DUMP_POINTERS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterScansDown"} AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AlignmentMask"} AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentRequirement__DEVICE_OBJECT"} {:fieldname "AlignmentRequirement"} AlignmentRequirement__DEVICE_OBJECT(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.AllocateCommonBuffers__DUMP_POINTERS"} {:fieldname "AllocateCommonBuffers"} AllocateCommonBuffers__DUMP_POINTERS(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.AllocatedResourcesTranslated_unnamed_tag_39"} {:fieldname "AllocatedResourcesTranslated"} AllocatedResourcesTranslated_unnamed_tag_39(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__MODE_SENSE"} {:fieldname "AllocationLength"} AllocationLength__MODE_SENSE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.AssociatedIrp__IRP"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BDTLPartitionInfo_FormatParams2"} {:fieldname "BDTLPartitionInfo"} BDTLPartitionInfo_FormatParams2(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BDTLPartitionInfo_TLFormatParams"} {:fieldname "BDTLPartitionInfo"} BDTLPartitionInfo_TLFormatParams(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BDTLPartitionInfo_UserFormatParams2"} {:fieldname "BDTLPartitionInfo"} BDTLPartitionInfo_UserFormatParams2(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BlockDescriptorLength__MODE_PARAMETER_HEADER"} {:fieldname "BlockDescriptorLength"} BlockDescriptorLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Buffer__STRING"} {:fieldname "Buffer"} Buffer__STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMajorVersion"} BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMinorVersion"} BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "BusNumber"} BusNumber__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__NTpcicParams"} {:fieldname "BusNumber"} BusNumber__NTpcicParams(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Byte0__FOUR_BYTE"} {:fieldname "Byte0"} Byte0__FOUR_BYTE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Byte1__FOUR_BYTE"} {:fieldname "Byte1"} Byte1__FOUR_BYTE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Byte2__FOUR_BYTE"} {:fieldname "Byte2"} Byte2__FOUR_BYTE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Byte3__FOUR_BYTE"} {:fieldname "Byte3"} Byte3__FOUR_BYTE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BytesPerBlock__READ_CAPACITY_DATA"} {:fieldname "BytesPerBlock"} BytesPerBlock__READ_CAPACITY_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BytesPerSector__DEVICE_EXTENSION"} {:fieldname "BytesPerSector"} BytesPerSector__DEVICE_EXTENSION(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.BytesPerSector__DISK_GEOMETRY"} {:fieldname "BytesPerSector"} BytesPerSector__DISK_GEOMETRY(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_29"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_29(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Cdb"} Cdb__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.ChildPdo__DEVICE_EXTENSION"} {:fieldname "ChildPdo"} ChildPdo__DEVICE_EXTENSION(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommonBufferPa__DUMP_POINTERS"} {:fieldname "CommonBufferPa"} CommonBufferPa__DUMP_POINTERS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.CommonBufferSize__DUMP_POINTERS"} {:fieldname "CommonBufferSize"} CommonBufferSize__DUMP_POINTERS(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.CommonBufferVa__DUMP_POINTERS"} {:fieldname "CommonBufferVa"} CommonBufferVa__DUMP_POINTERS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CompatibleIdString__TFFS_DEVICE_TYPE"} {:fieldname "CompatibleIdString"} CompatibleIdString__TFFS_DEVICE_TYPE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.Context__PCMCIA_INTERFACE_STANDARD"} {:fieldname "Context"} Context__PCMCIA_INTERFACE_STANDARD(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Count__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "Count"} Count__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Count__CM_RESOURCE_LIST"} {:fieldname "Count"} Count__CM_RESOURCE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Count__DEVICE_RELATIONS"} {:fieldname "Count"} Count__DEVICE_RELATIONS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "CrashDumpPathCount"} CrashDumpPathCount__DEVICE_EXTENSION_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CurrentSrb__DEVICE_EXTENSION"} {:fieldname "CurrentSrb"} CurrentSrb__DEVICE_EXTENSION(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_7"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_7(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Cylinders"} Cylinders__DEVICE_EXTENSION(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.Cylinders__DISK_GEOMETRY"} {:fieldname "Cylinders"} Cylinders__DISK_GEOMETRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.DOCType_VolumeInfoRecord"} {:fieldname "DOCType"} DOCType_VolumeInfoRecord(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataBuffer__DEVICE_EXTENSION"} {:fieldname "DataBuffer"} DataBuffer__DEVICE_EXTENSION(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.DataBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "DataBuffer"} DataBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DataTransferLength__SCSI_REQUEST_BLOCK"} {:fieldname "DataTransferLength"} DataTransferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.DefaultData__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultData"} DefaultData__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DefaultLength__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultLength"} DefaultLength__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DefaultType__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultType"} DefaultType__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_9"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_9(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__DEVICE_EXTENSION(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_9"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_9(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__DEVICE_EXTENSION_HEADER"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_EXTENSION_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__DUMP_POINTERS"} {:fieldname "DeviceObject"} DeviceObject__DUMP_POINTERS(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__DEVICE_EXTENSION_HEADER"} {:fieldname "DevicePowerState"} DevicePowerState__DEVICE_EXTENSION_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTypeString__TFFS_DEVICE_TYPE"} {:fieldname "DeviceTypeString"} DeviceTypeString__TFFS_DEVICE_TYPE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__INQUIRYDATA"} {:fieldname "DeviceType"} DeviceType__INQUIRYDATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceType"} DeviceType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.DockDevice__DEVICE_CAPABILITIES"} {:fieldname "DockDevice"} DockDevice__DEVICE_CAPABILITIES(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__DEVICE_EXTENSION_HEADER"} {:fieldname "DriverObject"} DriverObject__DEVICE_EXTENSION_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__DEVICE_OBJECT"} {:fieldname "DriverObject"} DriverObject__DEVICE_OBJECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DumpData__DUMP_POINTERS"} {:fieldname "DumpData"} DumpData__DUMP_POINTERS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.EjectSupported__DEVICE_CAPABILITIES"} {:fieldname "EjectSupported"} EjectSupported__DEVICE_CAPABILITIES(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.EntryContext__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "EntryContext"} EntryContext__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ExecuteWmiMethod__WMILIB_CONTEXT"} {:fieldname "ExecuteWmiMethod"} ExecuteWmiMethod__WMILIB_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Flags"} Flags__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Function__SCSI_REQUEST_BLOCK"} {:fieldname "Function"} Function__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GuidCount__WMILIB_CONTEXT"} {:fieldname "GuidCount"} GuidCount__WMILIB_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.GuidList__WMILIB_CONTEXT"} {:fieldname "GuidList"} GuidList__WMILIB_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "HiberPathCount"} HiberPathCount__DEVICE_EXTENSION_HEADER(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.High1Time__KSYSTEM_TIME"} {:fieldname "High1Time"} High1Time__KSYSTEM_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.High2Time__KSYSTEM_TIME"} {:fieldname "High2Time"} High2Time__KSYSTEM_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_33"} {:fieldname "IdType"} IdType_unnamed_tag_33(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IdleCounter__PDO_EXTENSION"} {:fieldname "IdleCounter"} IdleCounter__PDO_EXTENSION(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.InPath_unnamed_tag_35"} {:fieldname "InPath"} InPath_unnamed_tag_35(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_21"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_21(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfaceSpecificData_unnamed_tag_28"} {:fieldname "InterfaceSpecificData"} InterfaceSpecificData_unnamed_tag_28(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "InterfaceType"} InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__NTpcicParams"} {:fieldname "InterfaceType"} InterfaceType__NTpcicParams(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType_unnamed_tag_28"} {:fieldname "InterfaceType"} InterfaceType_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Interface_unnamed_tag_28"} {:fieldname "Interface"} Interface_unnamed_tag_28(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_21"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_21(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IsPartitonTableWritten__DEVICE_EXTENSION"} {:fieldname "IsPartitonTableWritten"} IsPartitonTableWritten__DEVICE_EXTENSION(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.IsSWWriteProtected__DEVICE_EXTENSION"} {:fieldname "IsSWWriteProtected"} IsSWWriteProtected__DEVICE_EXTENSION(x: int) : int
{
  x + 2512
}

function {:inline true} {:fieldmap "Mem_T.IsWriteProtected__DEVICE_EXTENSION"} {:fieldname "IsWriteProtected"} IsWriteProtected__DEVICE_EXTENSION(x: int) : int
{
  x + 460
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_17"} {:fieldname "Length"} Length_unnamed_tag_17(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_43"} {:fieldname "Length"} Length_unnamed_tag_43(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.List__CM_RESOURCE_LIST"} {:fieldname "List"} List__CM_RESOURCE_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LockSupported__DEVICE_CAPABILITIES"} {:fieldname "LockSupported"} LockSupported__DEVICE_CAPABILITIES(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.LowPart__KSYSTEM_TIME"} {:fieldname "LowPart"} LowPart__KSYSTEM_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__DEVICE_EXTENSION_HEADER"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__DEVICE_EXTENSION_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Lun__SCSI_REQUEST_BLOCK"} {:fieldname "Lun"} Lun__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE__CDB"} {:fieldname "MODE_SENSE"} MODE_SENSE__CDB(x: int) : int
{
  x + 1648
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MappedRegisterBase__DUMP_POINTERS"} {:fieldname "MappedRegisterBase"} MappedRegisterBase__DUMP_POINTERS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__STRING"} {:fieldname "MaximumLength"} MaximumLength__STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MdlAddress__IRP"} {:fieldname "MdlAddress"} MdlAddress__IRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MediaType__DISK_GEOMETRY"} {:fieldname "MediaType"} MediaType__DISK_GEOMETRY(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_42"} {:fieldname "Memory"} Memory_unnamed_tag_42(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModeDataLength__MODE_PARAMETER_HEADER"} {:fieldname "ModeDataLength"} ModeDataLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ModifyMemoryWindow__PCMCIA_INTERFACE_STANDARD"} {:fieldname "ModifyMemoryWindow"} ModifyMemoryWindow__PCMCIA_INTERFACE_STANDARD(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Mutex__SpinLockMutex"} {:fieldname "Mutex"} Mutex__SpinLockMutex(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Name__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Name"} Name__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NumberOfDisksPoweredUp__DEVICE_EXTENSION"} {:fieldname "NumberOfDisksPoweredUp"} NumberOfDisksPoweredUp__DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.NumberOfHeads__DEVICE_EXTENSION"} {:fieldname "NumberOfHeads"} NumberOfHeads__DEVICE_EXTENSION(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.NumberOfHeads__MODE_RIGID_GEOMETRY_PAGE"} {:fieldname "NumberOfHeads"} NumberOfHeads__MODE_RIGID_GEOMETRY_PAGE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.OEMname_BPB"} {:fieldname "OEMname"} OEMname_BPB(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "OSAKVer"} OSAKVer_VolumeInfoRecord(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.Objects__DEVICE_RELATIONS"} {:fieldname "Objects"} Objects__DEVICE_RELATIONS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_21"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_21(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_6"} {:fieldname "Overlay"} Overlay_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_DISCONNECT_PAGE"} {:fieldname "PageCode"} PageCode__MODE_DISCONNECT_PAGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_SENSE"} {:fieldname "PageCode"} PageCode__MODE_SENSE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PageLength__MODE_DISCONNECT_PAGE"} {:fieldname "PageLength"} PageLength__MODE_DISCONNECT_PAGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PagingPathCount"} PagingPathCount__DEVICE_EXTENSION_HEADER(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PartialDescriptors__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialDescriptors"} PartialDescriptors__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialResourceList"} PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "PartitonTable"} PartitonTable__DEVICE_EXTENSION(x: int) : int
{
  x + 464
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingIRPEvent"} PendingIRPEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 276
}

function {:inline true} {:fieldmap "Mem_T.PendingPowerIrp__PDO_EXTENSION"} {:fieldname "PendingPowerIrp"} PendingPowerIrp__PDO_EXTENSION(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.Pext__PDO_EXTENSION"} {:fieldname "Pext"} Pext__PDO_EXTENSION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Pointer__IO_STATUS_BLOCK"} {:fieldname "Pointer"} Pointer__IO_STATUS_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.PowerState__FDO_POWER_CONTEXT"} {:fieldname "PowerState"} PowerState__FDO_POWER_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.PowerType__FDO_POWER_CONTEXT"} {:fieldname "PowerType"} PowerType__FDO_POWER_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_9"} {:fieldname "Power"} Power_unnamed_tag_9(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductIdOffset"} ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ProductId__INQUIRYDATA"} {:fieldname "ProductId"} ProductId__INQUIRYDATA(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionLevel__INQUIRYDATA"} {:fieldname "ProductRevisionLevel"} ProductRevisionLevel__INQUIRYDATA(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductRevisionOffset"} ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.PropertyId__STORAGE_PROPERTY_QUERY"} {:fieldname "PropertyId"} PropertyId__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_9"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_9(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_9"} {:fieldname "QueryId"} QueryId_unnamed_tag_9(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryInterface_unnamed_tag_9"} {:fieldname "QueryInterface"} QueryInterface_unnamed_tag_9(x: int) : int
{
  x + 292
}

function {:inline true} {:fieldmap "Mem_T.QueryRoutine__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "QueryRoutine"} QueryRoutine__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QueryType__STORAGE_PROPERTY_QUERY"} {:fieldname "QueryType"} QueryType__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "QueryWmiDataBlock"} QueryWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiRegInfo__WMILIB_CONTEXT"} {:fieldname "QueryWmiRegInfo"} QueryWmiRegInfo__WMILIB_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.RawDeviceOK__DEVICE_CAPABILITIES"} {:fieldname "RawDeviceOK"} RawDeviceOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__INQUIRYDATA"} {:fieldname "RemovableMedia"} RemovableMedia__INQUIRYDATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "RemovableMedia"} RemovableMedia__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Removable__DEVICE_CAPABILITIES"} {:fieldname "Removable"} Removable__DEVICE_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.RequestorMode__IRP"} {:fieldname "RequestorMode"} RequestorMode__IRP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ScsiDeviceType__DEVICE_EXTENSION"} {:fieldname "ScsiDeviceType"} ScsiDeviceType__DEVICE_EXTENSION(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "ScsiPortCount"} ScsiPortCount__CONFIGURATION_INFORMATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ScsiPortNumber__DEVICE_EXTENSION"} {:fieldname "ScsiPortNumber"} ScsiPortNumber__DEVICE_EXTENSION(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Scsi_unnamed_tag_9"} {:fieldname "Scsi"} Scsi_unnamed_tag_9(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SectorsPerTrack"} SectorsPerTrack__DEVICE_EXTENSION(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.SectorsPerTrack__DISK_GEOMETRY"} {:fieldname "SectorsPerTrack"} SectorsPerTrack__DISK_GEOMETRY(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SectorsPerTrack__MODE_FORMAT_PAGE"} {:fieldname "SectorsPerTrack"} SectorsPerTrack__MODE_FORMAT_PAGE(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "SerialNumberOffset"} SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SetVpp__PCMCIA_INTERFACE_STANDARD"} {:fieldname "SetVpp"} SetVpp__PCMCIA_INTERFACE_STANDARD(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "SetWmiDataBlock"} SetWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataItem__WMILIB_CONTEXT"} {:fieldname "SetWmiDataItem"} SetWmiDataItem__WMILIB_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size_unnamed_tag_28"} {:fieldname "Size"} Size_unnamed_tag_28(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SrbFlags__SCSI_REQUEST_BLOCK"} {:fieldname "SrbFlags"} SrbFlags__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SrbStatus__SCSI_REQUEST_BLOCK"} {:fieldname "SrbStatus"} SrbStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Srb_unnamed_tag_25"} {:fieldname "Srb"} Srb_unnamed_tag_25(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.StartDevice_unnamed_tag_9"} {:fieldname "StartDevice"} StartDevice_unnamed_tag_9(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.Start_unnamed_tag_43"} {:fieldname "Start"} Start_unnamed_tag_43(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_38"} {:fieldname "State"} State_unnamed_tag_38(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SymbolicLinkCreated__DEVICE_EXTENSION"} {:fieldname "SymbolicLinkCreated"} SymbolicLinkCreated__DEVICE_EXTENSION(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_2"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__DEVICE_EXTENSION_HEADER"} {:fieldname "SystemPowerState"} SystemPowerState__DEVICE_EXTENSION_HEADER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TargetId__SCSI_REQUEST_BLOCK"} {:fieldname "TargetId"} TargetId__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.TffsportThreadObject__DEVICE_EXTENSION"} {:fieldname "TffsportThreadObject"} TffsportThreadObject__DEVICE_EXTENSION(x: int) : int
{
  x + 452
}

function {:inline true} {:fieldmap "Mem_T.TracksPerCylinder__DISK_GEOMETRY"} {:fieldname "TracksPerCylinder"} TracksPerCylinder__DISK_GEOMETRY(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_27"} {:fieldname "Type"} Type_unnamed_tag_27(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_35"} {:fieldname "Type"} Type_unnamed_tag_35(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_38"} {:fieldname "Type"} Type_unnamed_tag_38(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitNumber__DEVICE_EXTENSION"} {:fieldname "UnitNumber"} UnitNumber__DEVICE_EXTENSION(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.UsageNotification_unnamed_tag_9"} {:fieldname "UsageNotification"} UsageNotification_unnamed_tag_9(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.VccOff_tSocket"} {:fieldname "VccOff"} VccOff_tSocket(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.VccOn_tSocket"} {:fieldname "VccOn"} VccOn_tSocket(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.VccState_tSocket"} {:fieldname "VccState"} VccState_tSocket(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.VccUsers_tSocket"} {:fieldname "VccUsers"} VccUsers_tSocket(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "VendorIdOffset"} VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VendorId__INQUIRYDATA"} {:fieldname "VendorId"} VendorId__INQUIRYDATA(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version_unnamed_tag_28"} {:fieldname "Version"} Version_unnamed_tag_28(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.VppOff_tSocket"} {:fieldname "VppOff"} VppOff_tSocket(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.VppOn_tSocket"} {:fieldname "VppOn"} VppOn_tSocket(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.VppState_tSocket"} {:fieldname "VppState"} VppState_tSocket(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VppUsers_tSocket"} {:fieldname "VppUsers"} VppUsers_tSocket(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WmiFunctionControl__WMILIB_CONTEXT"} {:fieldname "WmiFunctionControl"} WmiFunctionControl__WMILIB_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.WmiLibInfo__DEVICE_EXTENSION_HEADER"} {:fieldname "WmiLibInfo"} WmiLibInfo__DEVICE_EXTENSION_HEADER(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.activeFlag_Partition"} {:fieldname "activeFlag"} activeFlag_Partition(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.actualNoOfSectors_flDefragOutput"} {:fieldname "actualNoOfSectors"} actualNoOfSectors_flDefragOutput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.actualReadLen_BDKVol"} {:fieldname "actualReadLen"} actualReadLen_BDKVol(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.actualUpdateLen_BDKVol"} {:fieldname "actualUpdateLen"} actualUpdateLen_BDKVol(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.addressSpace__NTpcicParams"} {:fieldname "addressSpace"} addressSpace__NTpcicParams(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.afterSuspend_CFI"} {:fieldname "afterSuspend"} afterSuspend_CFI(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.allocationRover_Volume"} {:fieldname "allocationRover"} allocationRover_Volume(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.altCommandSetId_CFI"} {:fieldname "altCommandSetId"} altCommandSetId_CFI(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.attributes_DirectoryEntry"} {:fieldname "attributes"} attributes_DirectoryEntry(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "baseAddress"} baseAddress_VolumeInfoRecord(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.baseAddress__TempINFO"} {:fieldname "baseAddress"} baseAddress__TempINFO(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.baseAddress_unnamed_tag_1"} {:fieldname "baseAddress"} baseAddress_unnamed_tag_1(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.baseMask_Vars"} {:fieldname "baseMask"} baseMask_Vars(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.base_unnamed_tag_1"} {:fieldname "base"} base_unnamed_tag_1(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.bdkBuffer_BDKStruct"} {:fieldname "bdkBuffer"} bdkBuffer_BDKStruct(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.bdkEDC_BDKVol"} {:fieldname "bdkEDC"} bdkEDC_BDKVol(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.bdkGlobalStatus_BDKVol"} {:fieldname "bdkGlobalStatus"} bdkGlobalStatus_BDKVol(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.bdkSavedSignOffset_BDKVol"} {:fieldname "bdkSavedSignOffset"} bdkSavedSignOffset_BDKVol(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.bdkSavedStartUnit_BDKVol"} {:fieldname "bdkSavedStartUnit"} bdkSavedStartUnit_BDKVol(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.bdkSignOffset_BDKVol"} {:fieldname "bdkSignOffset"} bdkSignOffset_BDKVol(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BDKStruct"} {:fieldname "bdkStruct"} bdkStruct_flBDKOperationInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.bdkStruct_flUserBDKOperationInput"} {:fieldname "bdkStruct"} bdkStruct_flUserBDKOperationInput(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.bdkStruct_flUserBDKOperationOutput"} {:fieldname "bdkStruct"} bdkStruct_flUserBDKOperationOutput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.binaryLength_Volume"} {:fieldname "binaryLength"} binaryLength_Volume(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.binaryPartitionInfo_FormatParams2"} {:fieldname "binaryPartitionInfo"} binaryPartitionInfo_FormatParams2(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.binaryPartitionInfo_TLFormatParams"} {:fieldname "binaryPartitionInfo"} binaryPartitionInfo_TLFormatParams(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.binaryPartitionInfo_UserFormatParams2"} {:fieldname "binaryPartitionInfo"} binaryPartitionInfo_UserFormatParams2(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.BIOSHeader"} {:fieldname "biosHdr"} biosHdr_SplHeader(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.blockPerFloor_BDKVol"} {:fieldname "blockPerFloor"} blockPerFloor_BDKVol(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.bootAreaSize_TLInfo"} {:fieldname "bootAreaSize"} bootAreaSize_TLInfo(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.bootAreaSize_VolumeInfoRecord"} {:fieldname "bootAreaSize"} bootAreaSize_VolumeInfoRecord(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.bootImageLen_FormatParams"} {:fieldname "bootImageLen"} bootImageLen_FormatParams(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.bootImageLen_TLFormatParams"} {:fieldname "bootImageLen"} bootImageLen_TLFormatParams(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.bootImageSize_BDKVol"} {:fieldname "bootImageSize"} bootImageSize_BDKVol(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.bootSectorNo_Volume"} {:fieldname "bootSectorNo"} bootSectorNo_Volume(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.bpb_DOSBootSector"} {:fieldname "bpb"} bpb_DOSBootSector(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.bufLen_flIplInput"} {:fieldname "bufLen"} bufLen_flIplInput(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.bufLen_flPlaceExbInput"} {:fieldname "bufLen"} bufLen_flPlaceExbInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.bufLen_flUserIplInput"} {:fieldname "bufLen"} bufLen_flUserIplInput(x: int) : int
{
  x + 16388
}

function {:inline true} {:fieldmap "Mem_T.bufLen_flUserPlaceExbInput"} {:fieldname "bufLen"} bufLen_flUserPlaceExbInput(x: int) : int
{
  x + 2048
}

function {:inline true} {:fieldmap "Mem_T.buf_flIplInput"} {:fieldname "buf"} buf_flIplInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.buf_flPlaceExbInput"} {:fieldname "buf"} buf_flPlaceExbInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.buf_flReadWriteInput"} {:fieldname "buf"} buf_flReadWriteInput(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.buf_flUserIplInput"} {:fieldname "buf"} buf_flUserIplInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.buf_flUserPlaceExbInput"} {:fieldname "buf"} buf_flUserPlaceExbInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.bufferOffset_exbStruct"} {:fieldname "bufferOffset"} bufferOffset_exbStruct(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.buffer_NFDC21Vars"} {:fieldname "buffer"} buffer_NFDC21Vars(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.buffer_UserOtpInput"} {:fieldname "buffer"} buffer_UserOtpInput(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.buffer_UserOtpOutput"} {:fieldname "buffer"} buffer_UserOtpOutput(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.buffer_exbStruct"} {:fieldname "buffer"} buffer_exbStruct(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.buffer_flOtpInput"} {:fieldname "buffer"} buffer_flOtpInput(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.busAccessType_tFlash"} {:fieldname "busAccessType"} busAccessType_tFlash(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.busWidth_unnamed_tag_1"} {:fieldname "busWidth"} busWidth_unnamed_tag_1(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.bytesPerCluster_Volume"} {:fieldname "bytesPerCluster"} bytesPerCluster_Volume(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.bytesPerSector_BPB"} {:fieldname "bytesPerSector"} bytesPerSector_BPB(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.cIrql__SpinLockMutex"} {:fieldname "cIrql"} cIrql__SpinLockMutex(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.capability_flCapabilityInput"} {:fieldname "capability"} capability_flCapabilityInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.cardChanged_tSocket"} {:fieldname "cardChanged"} cardChanged_tSocket(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.cardDetected_tSocket"} {:fieldname "cardDetected"} cardDetected_tSocket(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.cascadedDeviceNo_FormatParams2"} {:fieldname "cascadedDeviceNo"} cascadedDeviceNo_FormatParams2(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.cascadedDeviceNo_TLFormatParams"} {:fieldname "cascadedDeviceNo"} cascadedDeviceNo_TLFormatParams(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.cascadedDeviceNo_UserFormatParams2"} {:fieldname "cascadedDeviceNo"} cascadedDeviceNo_UserFormatParams2(x: int) : int
{
  x + 2544
}

function {:inline true} {:fieldmap "Mem_T.cdFdoExtension__CRASHDUMP_INIT_DATA"} {:fieldname "cdFdoExtension"} cdFdoExtension__CRASHDUMP_INIT_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.changeableProtectedAreas_tFlash"} {:fieldname "changeableProtectedAreas"} changeableProtectedAreas_tFlash(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.checkVolume_tTL"} {:fieldname "checkVolume"} checkVolume_tTL(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.chipID_NFDC21Vars"} {:fieldname "chipID"} chipID_NFDC21Vars(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.chipSize_PhysicalInfo"} {:fieldname "chipSize"} chipSize_PhysicalInfo(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.chipSize_tFlash"} {:fieldname "chipSize"} chipSize_tFlash(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.chksumFix_SplHeader"} {:fieldname "chksumFix"} chksumFix_SplHeader(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.chksumFix_TffsHeader"} {:fieldname "chksumFix"} chksumFix_TffsHeader(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.commandSetId_CFI"} {:fieldname "commandSetId"} commandSetId_CFI(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.curPartition_tSocket"} {:fieldname "curPartition"} curPartition_tSocket(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.curReadImageAddress_BDKVol"} {:fieldname "curReadImageAddress"} curReadImageAddress_BDKVol(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.curReadImageBlock_BDKVol"} {:fieldname "curReadImageBlock"} curReadImageBlock_BDKVol(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.curUpdateImageAddress_BDKVol"} {:fieldname "curUpdateImageAddress"} curUpdateImageAddress_BDKVol(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.curUpdateImageBlock_BDKVol"} {:fieldname "curUpdateImageBlock"} curUpdateImageBlock_BDKVol(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.currentFloor_NFDC21Vars"} {:fieldname "currentFloor"} currentFloor_NFDC21Vars(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.currentPage_unnamed_tag_1"} {:fieldname "currentPage"} currentPage_unnamed_tag_1(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "cylinders"} cylinders_VolumeInfoRecord(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.defragment_tTL"} {:fieldname "defragment"} defragment_tTL(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.deleteSector_tTL"} {:fieldname "deleteSector"} deleteSector_tTL(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.dismount_tTL"} {:fieldname "dismount"} dismount_tTL(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.download_tFlash"} {:fieldname "download"} download_tFlash(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "driverVer"} driverVer_VolumeInfoRecord(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.dummy_IplHeader"} {:fieldname "dummy"} dummy_IplHeader(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.embeddedCIS_FormatParams"} {:fieldname "embeddedCIS"} embeddedCIS_FormatParams(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.embeddedCIS_FormatParams2"} {:fieldname "embeddedCIS"} embeddedCIS_FormatParams2(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.embeddedCIS_TLFormatParams"} {:fieldname "embeddedCIS"} embeddedCIS_TLFormatParams(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.embeddedCIS_UserFormatParams2"} {:fieldname "embeddedCIS"} embeddedCIS_UserFormatParams2(x: int) : int
{
  x + 2564
}

function {:inline true} {:fieldmap "Mem_T.embeddedCISlength_FormatParams"} {:fieldname "embeddedCISlength"} embeddedCISlength_FormatParams(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.embeddedCISlength_FormatParams2"} {:fieldname "embeddedCISlength"} embeddedCISlength_FormatParams2(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.embeddedCISlength_TLFormatParams"} {:fieldname "embeddedCISlength"} embeddedCISlength_TLFormatParams(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.embeddedCISlength_UserFormatParams2"} {:fieldname "embeddedCISlength"} embeddedCISlength_UserFormatParams2(x: int) : int
{
  x + 2560
}

function {:inline true} {:fieldmap "Mem_T.endImageBlock_BDKVol"} {:fieldname "endImageBlock"} endImageBlock_BDKVol(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.endOffset_FirmwareHeader"} {:fieldname "endOffset"} endOffset_FirmwareHeader(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.endPartitionBlock_BDKVol"} {:fieldname "endPartitionBlock"} endPartitionBlock_BDKVol(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.endingCylinderSector_Partition"} {:fieldname "endingCylinderSector"} endingCylinderSector_Partition(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.endingHead_Partition"} {:fieldname "endingHead"} endingHead_Partition(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.enterDeepPowerDownMode_tFlash"} {:fieldname "enterDeepPowerDownMode"} enterDeepPowerDownMode_tFlash(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.erasableBlockBits_BDKVol"} {:fieldname "erasableBlockBits"} erasableBlockBits_BDKVol(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.erasableBlockSizeBits_tFlash"} {:fieldname "erasableBlockSizeBits"} erasableBlockSizeBits_tFlash(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.erasableBlockSize_tFlash"} {:fieldname "erasableBlockSize"} erasableBlockSize_tFlash(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.eraseCycles_TLInfo"} {:fieldname "eraseCycles"} eraseCycles_TLInfo(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.erase_tFlash"} {:fieldname "erase"} erase_tFlash(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.exbBufferLen_FormatParams2"} {:fieldname "exbBufferLen"} exbBufferLen_FormatParams2(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.exbBufferLen_UserFormatParams2"} {:fieldname "exbBufferLen"} exbBufferLen_UserFormatParams2(x: int) : int
{
  x + 2528
}

function {:inline true} {:fieldmap "Mem_T.exbBuffer_FormatParams2"} {:fieldname "exbBuffer"} exbBuffer_FormatParams2(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "exbBuffer"} exbBuffer_UserFormatParams2(x: int) : int
{
  x + 480
}

function {:inline true} {:fieldmap "Mem_T.exbFileEnd_exbStruct"} {:fieldname "exbFileEnd"} exbFileEnd_exbStruct(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.exbFileOffset_exbStruct"} {:fieldname "exbFileOffset"} exbFileOffset_exbStruct(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.exbFlags_FormatParams2"} {:fieldname "exbFlags"} exbFlags_FormatParams2(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.exbFlags_TffsHeader"} {:fieldname "exbFlags"} exbFlags_TffsHeader(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.exbFlags_UserFormatParams2"} {:fieldname "exbFlags"} exbFlags_UserFormatParams2(x: int) : int
{
  x + 2540
}

function {:inline true} {:fieldmap "Mem_T.exbFlags_exbStruct"} {:fieldname "exbFlags"} exbFlags_exbStruct(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.exbFlags_flPlaceExbInput"} {:fieldname "exbFlags"} exbFlags_flPlaceExbInput(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.exbFlags_flUserPlaceExbInput"} {:fieldname "exbFlags"} exbFlags_flUserPlaceExbInput(x: int) : int
{
  x + 2052
}

function {:inline true} {:fieldmap "Mem_T.exbLen_FormatParams2"} {:fieldname "exbLen"} exbLen_FormatParams2(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.exbLen_TLFormatParams"} {:fieldname "exbLen"} exbLen_TLFormatParams(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.exbLen_UserFormatParams2"} {:fieldname "exbLen"} exbLen_UserFormatParams2(x: int) : int
{
  x + 2532
}

function {:inline true} {:fieldmap "Mem_T.exbWindow_FormatParams2"} {:fieldname "exbWindow"} exbWindow_FormatParams2(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.exbWindow_UserFormatParams2"} {:fieldname "exbWindow"} exbWindow_UserFormatParams2(x: int) : int
{
  x + 2536
}

function {:inline true} {:fieldmap "Mem_T.exbWindow_flPlaceExbInput"} {:fieldname "exbWindow"} exbWindow_flPlaceExbInput(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.exbWindow_flUserPlaceExbInput"} {:fieldname "exbWindow"} exbWindow_flUserPlaceExbInput(x: int) : int
{
  x + 2056
}

function {:inline true} {:fieldmap "Mem_T.extendedBootSignature_DOSBootSector"} {:fieldname "extendedBootSignature"} extendedBootSignature_DOSBootSector(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.fdoExtension_NTsocketParams"} {:fieldname "fdoExtension"} fdoExtension_NTsocketParams(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.fileSize_ExbGlobalHeader"} {:fieldname "fileSize"} fileSize_ExbGlobalHeader(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.firmwareEnd_exbStruct"} {:fieldname "firmwareEnd"} firmwareEnd_exbStruct(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.firmwareStart_exbStruct"} {:fieldname "firmwareStart"} firmwareStart_exbStruct(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.firstDataSectorNo_Volume"} {:fieldname "firstDataSectorNo"} firstDataSectorNo_Volume(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.firstFATSectorNo_Volume"} {:fieldname "firstFATSectorNo"} firstFATSectorNo_Volume(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.firstSector_flDeleteSectorsInput"} {:fieldname "firstSector"} firstSector_flDeleteSectorsInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.firstUsableBlock_tFlash"} {:fieldname "firstUsableBlock"} firstUsableBlock_tFlash(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "flData"} flData_FLBuffer(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.flags_BDKStruct"} {:fieldname "flags"} flags_BDKStruct(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.flags_BDTLPartitionFormatParams"} {:fieldname "flags"} flags_BDTLPartitionFormatParams(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.flags_NFDC21Vars"} {:fieldname "flags"} flags_NFDC21Vars(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.flags_TLFormatParams"} {:fieldname "flags"} flags_TLFormatParams(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.flags_Volume"} {:fieldname "flags"} flags_Volume(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.flags_VolumeRecord"} {:fieldname "flags"} flags_VolumeRecord(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.flags_tFlash"} {:fieldname "flags"} flags_tFlash(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.flashType_VolumeInfoRecord"} {:fieldname "flashType"} flashType_VolumeInfoRecord(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.flash_BDKVol"} {:fieldname "flash"} flash_BDKVol(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.flash_Volume"} {:fieldname "flash"} flash_Volume(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.flash_tSocket"} {:fieldname "flash"} flash_tSocket(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.floorSizeBits_NFDC21Vars"} {:fieldname "floorSizeBits"} floorSizeBits_NFDC21Vars(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.floorSizeMask_NFDC21Vars"} {:fieldname "floorSizeMask"} floorSizeMask_NFDC21Vars(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.floorSize_NFDC21Vars"} {:fieldname "floorSize"} floorSize_NFDC21Vars(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.formatRoutine_TLentry"} {:fieldname "formatRoutine"} formatRoutine_TLentry(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.formatType_flFormatInput"} {:fieldname "formatType"} formatType_flFormatInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.formatType_flFormatPhysicalInput"} {:fieldname "formatType"} formatType_flFormatPhysicalInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.formatType_flUserFormatPhysicalInput"} {:fieldname "formatType"} formatType_flUserFormatPhysicalInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FormatParams"} {:fieldname "fp"} fp_flFormatInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BDTLPartitionFormatParams"} {:fieldname "fp"} fp_flFormatLogicalInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FormatParams2"} {:fieldname "fp"} fp_flFormatPhysicalInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fp_flUserFormatPhysicalInput"} {:fieldname "fp"} fp_flUserFormatPhysicalInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.freeSocket_tSocket"} {:fieldname "freeSocket"} freeSocket_tSocket(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.getAndClearCardChangeIndicator_tSocket"} {:fieldname "getAndClearCardChangeIndicator"} getAndClearCardChangeIndicator_tSocket(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.getTLInfo_tTL"} {:fieldname "getTLInfo"} getTLInfo_tTL(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.getUniqueId_tFlash"} {:fieldname "getUniqueId"} getUniqueId_tFlash(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "heads"} heads_VolumeInfoRecord(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.heapLen_TffsHeader"} {:fieldname "heapLen"} heapLen_TffsHeader(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "id"} id_flCustomerIdOutput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "id"} id_flUniqueIdOutput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.if_cfg_NFDC21Vars"} {:fieldname "if_cfg"} if_cfg_NFDC21Vars(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.VolumeInfoRecord"} {:fieldname "info"} info_flDiskInfoOutput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.initSocket_tSocket"} {:fieldname "initSocket"} initSocket_tSocket(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.inputRecord_flIOctlRecord"} {:fieldname "inputRecord"} inputRecord_flIOctlRecord(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.interfAlive_NTsocketParams"} {:fieldname "interfAlive"} interfAlive_NTsocketParams(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.interleaving_PhysicalInfo"} {:fieldname "interleaving"} interleaving_PhysicalInfo(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.interleaving_tFlash"} {:fieldname "interleaving"} interleaving_tFlash(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.iplMod512_exbStruct"} {:fieldname "iplMod512"} iplMod512_exbStruct(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.irCount_IOreq"} {:fieldname "irCount"} irCount_IOreq(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.irData_IOreq"} {:fieldname "irData"} irData_IOreq(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "irFlags"} irFlags_IOreq(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.irHandle_IOreq"} {:fieldname "irHandle"} irHandle_IOreq(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "irLength"} irLength_IOreq(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.jumpInstruction_BPB"} {:fieldname "jumpInstruction"} jumpInstruction_BPB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "key"} key_flBDKProtectionInput(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "key"} key_flProtectionInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.lenMod512_BIOSHeader"} {:fieldname "lenMod512"} lenMod512_BIOSHeader(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "length"} length_BDKStruct(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.length_UserOtpInput"} {:fieldname "length"} length_UserOtpInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.length_UserOtpOutput"} {:fieldname "length"} length_UserOtpOutput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.length_flOtpInput"} {:fieldname "length"} length_flOtpInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.lifeTime_VolumeInfoRecord"} {:fieldname "lifeTime"} lifeTime_VolumeInfoRecord(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.lockedFlag_UserOtpOutput"} {:fieldname "lockedFlag"} lockedFlag_UserOtpOutput(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.lockedFlag_flOtpInput"} {:fieldname "lockedFlag"} lockedFlag_flOtpInput(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.logicalSectors_VolumeInfoRecord"} {:fieldname "logicalSectors"} logicalSectors_VolumeInfoRecord(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.logicalUnits_tTLrec"} {:fieldname "logicalUnits"} logicalUnits_tTLrec(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.mapSector_tTL"} {:fieldname "mapSector"} mapSector_tTL(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.map_tFlash"} {:fieldname "map"} map_tFlash(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.maxBytesWrite_CFI"} {:fieldname "maxBytesWrite"} maxBytesWrite_CFI(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.maxCluster_Volume"} {:fieldname "maxCluster"} maxCluster_Volume(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.maxEraseCycles_tFlash"} {:fieldname "maxEraseCycles"} maxEraseCycles_tFlash(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.mediaDescriptor_BPB"} {:fieldname "mediaDescriptor"} mediaDescriptor_BPB(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.mediaSize_PhysicalInfo"} {:fieldname "mediaSize"} mediaSize_PhysicalInfo(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.mediaType_PhysicalInfo"} {:fieldname "mediaType"} mediaType_PhysicalInfo(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.mediaType_tFlash"} {:fieldname "mediaType"} mediaType_tFlash(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.memRead16bit_tFlash"} {:fieldname "memRead16bit"} memRead16bit_tFlash(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.memRead8bit_tFlash"} {:fieldname "memRead8bit"} memRead8bit_tFlash(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.memRead_tFlash"} {:fieldname "memRead"} memRead_tFlash(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.memSet_tFlash"} {:fieldname "memSet"} memSet_tFlash(x: int) : int
{
  x + 172
}

function {:inline true} {:fieldmap "Mem_T.memWindowSize_tFlash"} {:fieldname "memWindowSize"} memWindowSize_tFlash(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.memWrite16bit_tFlash"} {:fieldname "memWrite16bit"} memWrite16bit_tFlash(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.memWrite8bit_tFlash"} {:fieldname "memWrite8bit"} memWrite8bit_tFlash(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.memWrite_tFlash"} {:fieldname "memWrite"} memWrite_tFlash(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.moduleLength_exbStruct"} {:fieldname "moduleLength"} moduleLength_exbStruct(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.moduleNo_Volume"} {:fieldname "moduleNo"} moduleNo_Volume(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.mountRoutine_TLentry"} {:fieldname "mountRoutine"} mountRoutine_TLentry(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.mtdVars_tFlash"} {:fieldname "mtdVars"} mtdVars_tFlash(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.multiplier_CFI"} {:fieldname "multiplier"} multiplier_CFI(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "name"} name_DirectoryEntry(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.newSign_BDKStruct"} {:fieldname "newSign"} newSign_BDKStruct(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nextPartition__TempINFO"} {:fieldname "nextPartition"} nextPartition__TempINFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.noOfBDTLPartitions_FormatParams2"} {:fieldname "noOfBDTLPartitions"} noOfBDTLPartitions_FormatParams2(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.noOfBDTLPartitions_TLFormatParams"} {:fieldname "noOfBDTLPartitions"} noOfBDTLPartitions_TLFormatParams(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.noOfBDTLPartitions_UserFormatParams2"} {:fieldname "noOfBDTLPartitions"} noOfBDTLPartitions_UserFormatParams2(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.noOfBinaryPartitions_FormatParams2"} {:fieldname "noOfBinaryPartitions"} noOfBinaryPartitions_FormatParams2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.noOfBinaryPartitions_TLFormatParams"} {:fieldname "noOfBinaryPartitions"} noOfBinaryPartitions_TLFormatParams(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.noOfBinaryPartitions_UserFormatParams2"} {:fieldname "noOfBinaryPartitions"} noOfBinaryPartitions_UserFormatParams2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.noOfBlocks_NFDC21Vars"} {:fieldname "noOfBlocks"} noOfBlocks_NFDC21Vars(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.noOfCascadedDevices_FormatParams2"} {:fieldname "noOfCascadedDevices"} noOfCascadedDevices_FormatParams2(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.noOfCascadedDevices_TLFormatParams"} {:fieldname "noOfCascadedDevices"} noOfCascadedDevices_TLFormatParams(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.noOfCascadedDevices_UserFormatParams2"} {:fieldname "noOfCascadedDevices"} noOfCascadedDevices_UserFormatParams2(x: int) : int
{
  x + 2548
}

function {:inline true} {:fieldmap "Mem_T.noOfChips_tFlash"} {:fieldname "noOfChips"} noOfChips_tFlash(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.noOfFATS_BPB"} {:fieldname "noOfFATS"} noOfFATS_BPB(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.noOfFATcopies_BDTLPartitionFormatParams"} {:fieldname "noOfFATcopies"} noOfFATcopies_BDTLPartitionFormatParams(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.noOfFATcopies_FormatParams"} {:fieldname "noOfFATcopies"} noOfFATcopies_FormatParams(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.noOfFATcopies_TLFormatParams"} {:fieldname "noOfFATcopies"} noOfFATcopies_TLFormatParams(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.noOfFirmwares_ExbGlobalHeader"} {:fieldname "noOfFirmwares"} noOfFirmwares_ExbGlobalHeader(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.noOfFloors_tFlash"} {:fieldname "noOfFloors"} noOfFloors_tFlash(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.noOfHeads_BPB"} {:fieldname "noOfHeads"} noOfHeads_BPB(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.noOfHiddenSectors_BPB"} {:fieldname "noOfHiddenSectors"} noOfHiddenSectors_BPB(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.noOfPartitions_flCountPartitionsOutput"} {:fieldname "noOfPartitions"} noOfPartitions_flCountPartitionsOutput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.noOfSpareUnits_BDTLPartitionFormatParams"} {:fieldname "noOfSpareUnits"} noOfSpareUnits_BDTLPartitionFormatParams(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.noOfSpareUnits_FormatParams"} {:fieldname "noOfSpareUnits"} noOfSpareUnits_FormatParams(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.noOfSpareUnits_TLFormatParams"} {:fieldname "noOfSpareUnits"} noOfSpareUnits_TLFormatParams(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.numberOfFATS_Volume"} {:fieldname "numberOfFATS"} numberOfFATS_Volume(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.numberOfSectors_flDeleteSectorsInput"} {:fieldname "numberOfSectors"} numberOfSectors_flDeleteSectorsInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.numberOfSectors_flReadWriteOutput"} {:fieldname "numberOfSectors"} numberOfSectors_flReadWriteOutput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.oldSign_BDKStruct"} {:fieldname "oldSign"} oldSign_BDKStruct(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.optionalCommands_CFI"} {:fieldname "optionalCommands"} optionalCommands_CFI(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.otpSize_tFlash"} {:fieldname "otpSize"} otpSize_tFlash(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.outputRecord_flIOctlRecord"} {:fieldname "outputRecord"} outputRecord_flIOctlRecord(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pageAreaSize_NFDC21Vars"} {:fieldname "pageAreaSize"} pageAreaSize_NFDC21Vars(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.pageMask_NFDC21Vars"} {:fieldname "pageMask"} pageMask_NFDC21Vars(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.pageSize_tFlash"} {:fieldname "pageSize"} pageSize_tFlash(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.pageTable_tTLrec"} {:fieldname "pageTable"} pageTable_tTLrec(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.pagesPerBlock_NFDC21Vars"} {:fieldname "pagesPerBlock"} pagesPerBlock_NFDC21Vars(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.partitionNo_tTL"} {:fieldname "partitionNo"} partitionNo_tTL(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.passwordInfo_PartitionTable"} {:fieldname "passwordInfo"} passwordInfo_PartitionTable(x: int) : int
{
  x + 1688
}

function {:inline true} {:fieldmap "Mem_T.password_Volume"} {:fieldname "password"} password_Volume(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "password"} password_flWriteProtectInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pcmciaParams__DEVICE_EXTENSION"} {:fieldname "pcmciaParams"} pcmciaParams__DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.percentUse_FormatParams"} {:fieldname "percentUse"} percentUse_FormatParams(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.percentUse_FormatParams2"} {:fieldname "percentUse"} percentUse_FormatParams2(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.percentUse_TLFormatParams"} {:fieldname "percentUse"} percentUse_TLFormatParams(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.percentUse_UserFormatParams2"} {:fieldname "percentUse"} percentUse_UserFormatParams2(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.phWindowBase__NTpcicParams"} {:fieldname "phWindowBase"} phWindowBase__NTpcicParams(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.physWindow_NTsocketParams"} {:fieldname "physWindow"} physWindow_NTsocketParams(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.physWindow__NTpcicParams"} {:fieldname "physWindow"} physWindow__NTpcicParams(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.physicalDriveNo_DOSBootSector"} {:fieldname "physicalDriveNo"} physicalDriveNo_DOSBootSector(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.physicalSize_VolumeInfoRecord"} {:fieldname "physicalSize"} physicalSize_VolumeInfoRecord(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.physicalUnitSize_VolumeInfoRecord"} {:fieldname "physicalUnitSize"} physicalUnitSize_VolumeInfoRecord(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.physicalUnits_tTLrec"} {:fieldname "physicalUnits"} physicalUnits_tTLrec(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.pnpHeader_IplHeader"} {:fieldname "pnpHeader"} pnpHeader_IplHeader(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.powerOnCallback_tSocket"} {:fieldname "powerOnCallback"} powerOnCallback_tSocket(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.ppp_tFlash"} {:fieldname "ppp"} ppp_tFlash(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.preMountRoutine_TLentry"} {:fieldname "preMountRoutine"} preMountRoutine_TLentry(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.progressCallback_FormatParams"} {:fieldname "progressCallback"} progressCallback_FormatParams(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.progressCallback_FormatParams2"} {:fieldname "progressCallback"} progressCallback_FormatParams2(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.progressCallback_TLFormatParams"} {:fieldname "progressCallback"} progressCallback_TLFormatParams(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.protectionArea_BDKVol"} {:fieldname "protectionArea"} protectionArea_BDKVol(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.protectionArea_VolumeRecord"} {:fieldname "protectionArea"} protectionArea_VolumeRecord(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.protectionBoundries_tFlash"} {:fieldname "protectionBoundries"} protectionBoundries_tFlash(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.protectionKeyInsert_tFlash"} {:fieldname "protectionKeyInsert"} protectionKeyInsert_tFlash(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.protectionKeyRemove_tFlash"} {:fieldname "protectionKeyRemove"} protectionKeyRemove_tFlash(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "protectionKey"} protectionKey_BDTLPartitionFormatParams(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "protectionKey"} protectionKey_TLFormatParams(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.protectionSet_tFlash"} {:fieldname "protectionSet"} protectionSet_tFlash(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.protectionType_BDKVol"} {:fieldname "protectionType"} protectionType_BDKVol(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.protectionType_BDTLPartitionFormatParams"} {:fieldname "protectionType"} protectionType_BDTLPartitionFormatParams(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.protectionType_BinaryPartitionFormatParams"} {:fieldname "protectionType"} protectionType_BinaryPartitionFormatParams(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.protectionType_TLFormatParams"} {:fieldname "protectionType"} protectionType_TLFormatParams(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.protectionType_flBDKProtectionInput"} {:fieldname "protectionType"} protectionType_flBDKProtectionInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.protectionType_flProtectionInput"} {:fieldname "protectionType"} protectionType_flProtectionInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.protectionType_flProtectionOutput"} {:fieldname "protectionType"} protectionType_flProtectionOutput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.protectionType_tFlash"} {:fieldname "protectionType"} protectionType_tFlash(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.ptEntry_PartitionTable"} {:fieldname "ptEntry"} ptEntry_PartitionTable(x: int) : int
{
  x + 1784
}

function {:inline true} {:fieldmap "Mem_T.readBBT_tFlash"} {:fieldname "readBBT"} readBBT_tFlash(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.readBBT_tTL"} {:fieldname "readBBT"} readBBT_tTL(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.readBackBuffer_NFDC21Vars"} {:fieldname "readBackBuffer"} readBackBuffer_NFDC21Vars(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.readBufferSize_tFlash"} {:fieldname "readBufferSize"} readBufferSize_tFlash(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.readBuffer_tFlash"} {:fieldname "readBuffer"} readBuffer_tFlash(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.readIPL_tFlash"} {:fieldname "readIPL"} readIPL_tFlash(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.readOTP_tFlash"} {:fieldname "readOTP"} readOTP_tFlash(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.readSectors_tTL"} {:fieldname "readSectors"} readSectors_tTL(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.read_tFlash"} {:fieldname "read"} read_tFlash(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.realBootImageSize_BDKVol"} {:fieldname "realBootImageSize"} realBootImageSize_BDKVol(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.recommendedClusterInfo_tTL"} {:fieldname "recommendedClusterInfo"} recommendedClusterInfo_tTL(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.remapped_tSocket"} {:fieldname "remapped"} remapped_tSocket(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.removableMedia__DEVICE_EXTENSION"} {:fieldname "removableMedia"} removableMedia__DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.requiredNoOfSectors_flDefragInput"} {:fieldname "requiredNoOfSectors"} requiredNoOfSectors_flDefragInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.reservedSectors_BPB"} {:fieldname "reservedSectors"} reservedSectors_BPB(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.rootDirectoryEntries_BPB"} {:fieldname "rootDirectoryEntries"} rootDirectoryEntries_BPB(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.rootDirectorySectorNo_Volume"} {:fieldname "rootDirectorySectorNo"} rootDirectorySectorNo_Volume(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.runtimeID_SplHeader"} {:fieldname "runtimeID"} runtimeID_SplHeader(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.secondFATSectorNo_Volume"} {:fieldname "secondFATSectorNo"} secondFATSectorNo_Volume(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.sectorsInPartition_Partition"} {:fieldname "sectorsInPartition"} sectorsInPartition_Partition(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.sectorsInRootDirectory_Volume"} {:fieldname "sectorsInRootDirectory"} sectorsInRootDirectory_Volume(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.sectorsInVolume_TLInfo"} {:fieldname "sectorsInVolume"} sectorsInVolume_TLInfo(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.sectorsInVolume_tTL"} {:fieldname "sectorsInVolume"} sectorsInVolume_tTL(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.sectorsPerCluster_BPB"} {:fieldname "sectorsPerCluster"} sectorsPerCluster_BPB(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.sectorsPerCluster_Volume"} {:fieldname "sectorsPerCluster"} sectorsPerCluster_Volume(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.sectorsPerFAT_BPB"} {:fieldname "sectorsPerFAT"} sectorsPerFAT_BPB(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.sectorsPerFAT_Volume"} {:fieldname "sectorsPerFAT"} sectorsPerFAT_Volume(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.sectorsPerTrack_BPB"} {:fieldname "sectorsPerTrack"} sectorsPerTrack_BPB(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "sectors"} sectors_VolumeInfoRecord(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.serialNo_tSocket"} {:fieldname "serialNo"} serialNo_tSocket(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.setMappingContext_tSocket"} {:fieldname "setMappingContext"} setMappingContext_tSocket(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.setPowerOnCallback_tFlash"} {:fieldname "setPowerOnCallback"} setPowerOnCallback_tFlash(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.setWindow_tSocket"} {:fieldname "setWindow"} setWindow_tSocket(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "signBuffer"} signBuffer_BDKVol(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.signOffset_BDKStruct"} {:fieldname "signOffset"} signOffset_BDKStruct(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.sign_BinaryPartitionFormatParams"} {:fieldname "sign"} sign_BinaryPartitionFormatParams(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.signature_BIOSHeader"} {:fieldname "signature"} signature_BIOSHeader(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.signature_DOSBootSector"} {:fieldname "signature"} signature_DOSBootSector(x: int) : int
{
  x + 2000
}

function {:inline true} {:fieldmap "Mem_T.signature_PartitionTable"} {:fieldname "signature"} signature_PartitionTable(x: int) : int
{
  x + 2008
}

function {:inline true} {:fieldmap "Mem_T.size_unnamed_tag_1"} {:fieldname "size"} size_unnamed_tag_1(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.socketNo_tTL"} {:fieldname "socketNo"} socketNo_tTL(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.socket_Volume"} {:fieldname "socket"} socket_Volume(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.socket_tFlash"} {:fieldname "socket"} socket_tFlash(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.speed_unnamed_tag_1"} {:fieldname "speed"} speed_unnamed_tag_1(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.splEndOffset_FirmwareHeader"} {:fieldname "splEndOffset"} splEndOffset_FirmwareHeader(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.splEnd_exbStruct"} {:fieldname "splEnd"} splEnd_exbStruct(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.splStartOffset_FirmwareHeader"} {:fieldname "splStartOffset"} splStartOffset_FirmwareHeader(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.splStart_exbStruct"} {:fieldname "splStart"} splStart_exbStruct(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.startImageBlock_BDKVol"} {:fieldname "startImageBlock"} startImageBlock_BDKVol(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.startOffset_FirmwareHeader"} {:fieldname "startOffset"} startOffset_FirmwareHeader(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.startPartitionBlock_BDKVol"} {:fieldname "startPartitionBlock"} startPartitionBlock_BDKVol(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "startingBlock"} startingBlock_BDKStruct(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.startingCylinderSector_Partition"} {:fieldname "startingCylinderSector"} startingCylinderSector_Partition(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.startingHead_Partition"} {:fieldname "startingHead"} startingHead_Partition(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.startingSectorOfPartition_Partition"} {:fieldname "startingSectorOfPartition"} startingSectorOfPartition_Partition(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.state_flPowerDownInput"} {:fieldname "state"} state_flPowerDownInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.flOutputStatusRecord"} {:fieldname "statusRec"} statusRec_UserOtpOutput(x: int) : int
{
  x + 24588
}

function {:inline true} {:fieldmap "Mem_T.flOutputStatusRecord"} {:fieldname "statusRec"} statusRec_flUserBDKOperationOutput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.status_flCapabilityOutput"} {:fieldname "status"} status_flCapabilityOutput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.status_flCountPartitionsOutput"} {:fieldname "status"} status_flCountPartitionsOutput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.status_flCustomerIdOutput"} {:fieldname "status"} status_flCustomerIdOutput(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.status_flDefragOutput"} {:fieldname "status"} status_flDefragOutput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.status_flDiskInfoOutput"} {:fieldname "status"} status_flDiskInfoOutput(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.status_flOutputStatusRecord"} {:fieldname "status"} status_flOutputStatusRecord(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.status_flProtectionOutput"} {:fieldname "status"} status_flProtectionOutput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.status_flReadWriteOutput"} {:fieldname "status"} status_flReadWriteOutput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.status_flUniqueIdOutput"} {:fieldname "status"} status_flUniqueIdOutput(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "systemId"} systemId_DOSBootSector(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.tailSize_NFDC21Vars"} {:fieldname "tailSize"} tailSize_NFDC21Vars(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.tffsFarHeapSize_exbStruct"} {:fieldname "tffsFarHeapSize"} tffsFarHeapSize_exbStruct(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.tffsHeapSize_SplHeader"} {:fieldname "tffsHeapSize"} tffsHeapSize_SplHeader(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.tffsHeapSize_exbStruct"} {:fieldname "tffsHeapSize"} tffsHeapSize_exbStruct(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.threadReferenceCount__DEVICE_EXTENSION"} {:fieldname "threadReferenceCount"} threadReferenceCount__DEVICE_EXTENSION(x: int) : int
{
  x + 272
}

function {:inline true} {:fieldmap "Mem_T.tlSetBusy_tTL"} {:fieldname "tlSetBusy"} tlSetBusy_tTL(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.tTL"} {:fieldname "tl"} tl_Volume(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.totalProtectedAreas_tFlash"} {:fieldname "totalProtectedAreas"} totalProtectedAreas_tFlash(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.totalSectorsInVolumeDOS3_BPB"} {:fieldname "totalSectorsInVolumeDOS3"} totalSectorsInVolumeDOS3_BPB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.totalSectorsInVolume_BPB"} {:fieldname "totalSectorsInVolume"} totalSectorsInVolume_BPB(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.totalSectors__DEVICE_EXTENSION"} {:fieldname "totalSectors"} totalSectors__DEVICE_EXTENSION(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.type_Partition"} {:fieldname "type"} type_Partition(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.type_UserOtpInput"} {:fieldname "type"} type_UserOtpInput(x: int) : int
{
  x + 24588
}

function {:inline true} {:fieldmap "Mem_T.type_flBDKProtectionInput"} {:fieldname "type"} type_flBDKProtectionInput(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.type_flMountInput"} {:fieldname "type"} type_flMountInput(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.type_flOtpInput"} {:fieldname "type"} type_flOtpInput(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.type_flProtectionInput"} {:fieldname "type"} type_flProtectionInput(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.type_flUserBDKOperationInput"} {:fieldname "type"} type_flUserBDKOperationInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.u__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.unitSize_PhysicalInfo"} {:fieldname "unitSize"} unitSize_PhysicalInfo(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.unlockAddr1_Vars"} {:fieldname "unlockAddr1"} unlockAddr1_Vars(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.unlockAddr2_Vars"} {:fieldname "unlockAddr2"} unlockAddr2_Vars(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.updateDate_DirectoryEntry"} {:fieldname "updateDate"} updateDate_DirectoryEntry(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.updateImageFlag_BDKVol"} {:fieldname "updateImageFlag"} updateImageFlag_BDKVol(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.updateSocketParams_tSocket"} {:fieldname "updateSocketParams"} updateSocketParams_tSocket(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.updateTime_DirectoryEntry"} {:fieldname "updateTime"} updateTime_DirectoryEntry(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.usedSize_UserOtpInput"} {:fieldname "usedSize"} usedSize_UserOtpInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.usedSize_UserOtpOutput"} {:fieldname "usedSize"} usedSize_UserOtpOutput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.usedSize_flOtpInput"} {:fieldname "usedSize"} usedSize_flOtpInput(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.vendorID_NFDC21Vars"} {:fieldname "vendorID"} vendorID_NFDC21Vars(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.verifyWrite_tSocket"} {:fieldname "verifyWrite"} verifyWrite_tSocket(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.vmAddressingLimit_FormatParams"} {:fieldname "vmAddressingLimit"} vmAddressingLimit_FormatParams(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.vmAddressingLimit_FormatParams2"} {:fieldname "vmAddressingLimit"} vmAddressingLimit_FormatParams2(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.vmAddressingLimit_TLFormatParams"} {:fieldname "vmAddressingLimit"} vmAddressingLimit_TLFormatParams(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.vmAddressingLimit_UserFormatParams2"} {:fieldname "vmAddressingLimit"} vmAddressingLimit_UserFormatParams2(x: int) : int
{
  x + 2556
}

function {:inline true} {:fieldmap "Mem_T.volExecInProgress_Volume"} {:fieldname "volExecInProgress"} volExecInProgress_Volume(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.volNo_tSocket"} {:fieldname "volNo"} volNo_tSocket(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "volumeId"} volumeId_BDTLPartitionFormatParams(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "volumeId"} volumeId_DOSBootSector(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "volumeId"} volumeId_FormatParams(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "volumeId"} volumeId_TLFormatParams(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.volumeLabel_BDTLPartitionFormatParams"} {:fieldname "volumeLabel"} volumeLabel_BDTLPartitionFormatParams(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "volumeLabel"} volumeLabel_DOSBootSector(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.volumeLabel_FormatParams"} {:fieldname "volumeLabel"} volumeLabel_FormatParams(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.volumeLabel_TLFormatParams"} {:fieldname "volumeLabel"} volumeLabel_TLFormatParams(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.vpp_CFI"} {:fieldname "vpp"} vpp_CFI(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.winBase_NTsocketParams"} {:fieldname "winBase"} winBase_NTsocketParams(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.win_NFDC21Vars"} {:fieldname "win"} win_NFDC21Vars(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.win_io_NFDC21Vars"} {:fieldname "win_io"} win_io_NFDC21Vars(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.win_tFlash"} {:fieldname "win"} win_tFlash(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.windowBase_IplHeader"} {:fieldname "windowBase"} windowBase_IplHeader(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.windowBase_SplHeader"} {:fieldname "windowBase"} windowBase_SplHeader(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.windowBase__NTpcicParams"} {:fieldname "windowBase"} windowBase__NTpcicParams(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.windowSize_NTsocketParams"} {:fieldname "windowSize"} windowSize_NTsocketParams(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.windowSize__NTpcicParams"} {:fieldname "windowSize"} windowSize__NTpcicParams(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.window_tSocket"} {:fieldname "window"} window_tSocket(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.wordMode_CFI"} {:fieldname "wordMode"} wordMode_CFI(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.writeIPL_tFlash"} {:fieldname "writeIPL"} writeIPL_tFlash(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.writeMultiSector_tTL"} {:fieldname "writeMultiSector"} writeMultiSector_tTL(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.writeOTP_tFlash"} {:fieldname "writeOTP"} writeOTP_tFlash(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.writeProtected_tSocket"} {:fieldname "writeProtected"} writeProtected_tSocket(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.writeSector_tTL"} {:fieldname "writeSector"} writeSector_tTL(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.write_tFlash"} {:fieldname "write"} write_tFlash(x: int) : int
{
  x + 92
}

const {:string ""} unique strConst__li2bpl2: int;

const {:string "\030???"} unique strConst__li2bpl3: int;

const {:string "%x.%x.%x"} unique strConst__li2bpl37: int;

const {:string "00000000"} unique strConst__li2bpl20: int;

const {:string "0001"} unique strConst__li2bpl28: int;

const {:string "1.00"} unique strConst__li2bpl27: int;

const {:string "5.1"} unique strConst__li2bpl11: int;

const {:string "5100"} unique strConst__li2bpl1: int;

const {:string "ANAND"} unique strConst__li2bpl9: int;

const {:string "BNAND"} unique strConst__li2bpl18: int;

const {:string "Debug: flRegisterNT5PCIC():Socket No %d is register.\n"} unique strConst__li2bpl21: int;

const {:string "DebugValue"} unique strConst__li2bpl33: int;

const {:string "DiskOnChip2000  "} unique strConst__li2bpl26: int;

const {:string "FAT12   "} unique strConst__li2bpl16: int;

const {:string "FAT16   "} unique strConst__li2bpl15: int;

const {:string "FFFF"} unique strConst__li2bpl19: int;

const {:string "FlashMedia\\"} unique strConst__li2bpl32: int;

const {:string "FlashMedia\\%s"} unique strConst__li2bpl31: int;

const {:string "FlashMedia\\%s_%s_%s%s_%s"} unique strConst__li2bpl24: int;

const {:string "GenType%d"} unique strConst__li2bpl30: int;

const {:string "IoStartNextPacket has been called with an invalid spinlock state"} unique strConst__li2bpl14: int;

const {:string "IofCompleteRequest has been called with an invalid spinlock state"} unique strConst__li2bpl13: int;

const {:string "MSystems"} unique strConst__li2bpl17: int;

const {:string "OS Less 5.1"} unique strConst__li2bpl10: int;

const {:string "OSAK"} unique strConst__li2bpl0: int;

const {:string "PRI"} unique strConst__li2bpl5: int;

const {:string "Parameters"} unique strConst__li2bpl23: int;

const {:string "QRY"} unique strConst__li2bpl4: int;

const {:string "Type%d"} unique strConst__li2bpl25: int;

const {:string "\\Device\\ScsiPort%d"} unique strConst__li2bpl35: int;

const {:string "\\Device\\TffsPort%d"} unique strConst__li2bpl34: int;

const {:string "\\Device\\TrueffsDevice%d"} unique strConst__li2bpl29: int;

const {:string "\\DosDevices\\Scsi%d:"} unique strConst__li2bpl36: int;

const {:string "callee"} unique strConst__li2bpl22: int;

const {:string "flRegisterFTL():SUSU TEST @@@@@@@@@@@@@@@ = %x \n"} unique strConst__li2bpl6: int;

const {:string "flRegisterFTL():Started ... \n"} unique strConst__li2bpl7: int;

const {:string "flRegisterFTL():tlTable[noOfTLs].mountRoutine = %x \n"} unique strConst__li2bpl8: int;

const {:string "sdv_IoCompleteRequest has been called with an invalid spinlock state"} unique strConst__li2bpl12: int;

const {:allocated} li2bplFunctionConstant1042: int;

axiom li2bplFunctionConstant1042 == 1042;

const {:allocated} li2bplFunctionConstant1044: int;

axiom li2bplFunctionConstant1044 == 1044;

const {:allocated} li2bplFunctionConstant1047: int;

axiom li2bplFunctionConstant1047 == 1047;

const {:allocated} li2bplFunctionConstant119: int;

axiom li2bplFunctionConstant119 == 119;

const {:allocated} li2bplFunctionConstant146: int;

axiom li2bplFunctionConstant146 == 146;

const {:allocated} li2bplFunctionConstant153: int;

axiom li2bplFunctionConstant153 == 153;

const {:allocated} li2bplFunctionConstant155: int;

axiom li2bplFunctionConstant155 == 155;

const {:allocated} li2bplFunctionConstant157: int;

axiom li2bplFunctionConstant157 == 157;

const {:allocated} li2bplFunctionConstant158: int;

axiom li2bplFunctionConstant158 == 158;

const {:allocated} li2bplFunctionConstant161: int;

axiom li2bplFunctionConstant161 == 161;

const {:allocated} li2bplFunctionConstant166: int;

axiom li2bplFunctionConstant166 == 166;

const {:allocated} li2bplFunctionConstant185: int;

axiom li2bplFunctionConstant185 == 185;

const {:allocated} li2bplFunctionConstant192: int;

axiom li2bplFunctionConstant192 == 192;

const {:allocated} li2bplFunctionConstant193: int;

axiom li2bplFunctionConstant193 == 193;

const {:allocated} li2bplFunctionConstant194: int;

axiom li2bplFunctionConstant194 == 194;

const {:allocated} li2bplFunctionConstant195: int;

axiom li2bplFunctionConstant195 == 195;

const {:allocated} li2bplFunctionConstant215: int;

axiom li2bplFunctionConstant215 == 215;

const {:allocated} li2bplFunctionConstant216: int;

axiom li2bplFunctionConstant216 == 216;

const {:allocated} li2bplFunctionConstant219: int;

axiom li2bplFunctionConstant219 == 219;

const {:allocated} li2bplFunctionConstant220: int;

axiom li2bplFunctionConstant220 == 220;

const {:allocated} li2bplFunctionConstant221: int;

axiom li2bplFunctionConstant221 == 221;

const {:allocated} li2bplFunctionConstant222: int;

axiom li2bplFunctionConstant222 == 222;

const {:allocated} li2bplFunctionConstant223: int;

axiom li2bplFunctionConstant223 == 223;

const {:allocated} li2bplFunctionConstant237: int;

axiom li2bplFunctionConstant237 == 237;

const {:allocated} li2bplFunctionConstant238: int;

axiom li2bplFunctionConstant238 == 238;

const {:allocated} li2bplFunctionConstant239: int;

axiom li2bplFunctionConstant239 == 239;

const {:allocated} li2bplFunctionConstant240: int;

axiom li2bplFunctionConstant240 == 240;

const {:allocated} li2bplFunctionConstant241: int;

axiom li2bplFunctionConstant241 == 241;

const {:allocated} li2bplFunctionConstant354: int;

axiom li2bplFunctionConstant354 == 354;

const {:allocated} li2bplFunctionConstant355: int;

axiom li2bplFunctionConstant355 == 355;

const {:allocated} li2bplFunctionConstant379: int;

axiom li2bplFunctionConstant379 == 379;

const {:allocated} li2bplFunctionConstant380: int;

axiom li2bplFunctionConstant380 == 380;

const {:allocated} li2bplFunctionConstant398: int;

axiom li2bplFunctionConstant398 == 398;

const {:allocated} li2bplFunctionConstant401: int;

axiom li2bplFunctionConstant401 == 401;

const {:allocated} li2bplFunctionConstant402: int;

axiom li2bplFunctionConstant402 == 402;

const {:allocated} li2bplFunctionConstant403: int;

axiom li2bplFunctionConstant403 == 403;

const {:allocated} li2bplFunctionConstant404: int;

axiom li2bplFunctionConstant404 == 404;

const {:allocated} li2bplFunctionConstant406: int;

axiom li2bplFunctionConstant406 == 406;

const {:allocated} li2bplFunctionConstant407: int;

axiom li2bplFunctionConstant407 == 407;

const {:allocated} li2bplFunctionConstant408: int;

axiom li2bplFunctionConstant408 == 408;

const {:allocated} li2bplFunctionConstant409: int;

axiom li2bplFunctionConstant409 == 409;

const {:allocated} li2bplFunctionConstant410: int;

axiom li2bplFunctionConstant410 == 410;

const {:allocated} li2bplFunctionConstant411: int;

axiom li2bplFunctionConstant411 == 411;

const {:allocated} li2bplFunctionConstant412: int;

axiom li2bplFunctionConstant412 == 412;

const {:allocated} li2bplFunctionConstant413: int;

axiom li2bplFunctionConstant413 == 413;

const {:allocated} li2bplFunctionConstant414: int;

axiom li2bplFunctionConstant414 == 414;

const {:allocated} li2bplFunctionConstant415: int;

axiom li2bplFunctionConstant415 == 415;

const {:allocated} li2bplFunctionConstant416: int;

axiom li2bplFunctionConstant416 == 416;

const {:allocated} li2bplFunctionConstant417: int;

axiom li2bplFunctionConstant417 == 417;

const {:allocated} li2bplFunctionConstant443: int;

axiom li2bplFunctionConstant443 == 443;

const {:allocated} li2bplFunctionConstant444: int;

axiom li2bplFunctionConstant444 == 444;

const {:allocated} li2bplFunctionConstant445: int;

axiom li2bplFunctionConstant445 == 445;

const {:allocated} li2bplFunctionConstant446: int;

axiom li2bplFunctionConstant446 == 446;

const {:allocated} li2bplFunctionConstant447: int;

axiom li2bplFunctionConstant447 == 447;

const {:allocated} li2bplFunctionConstant448: int;

axiom li2bplFunctionConstant448 == 448;

const {:allocated} li2bplFunctionConstant449: int;

axiom li2bplFunctionConstant449 == 449;

const {:allocated} li2bplFunctionConstant450: int;

axiom li2bplFunctionConstant450 == 450;

const {:allocated} li2bplFunctionConstant451: int;

axiom li2bplFunctionConstant451 == 451;

const {:allocated} li2bplFunctionConstant452: int;

axiom li2bplFunctionConstant452 == 452;

const {:allocated} li2bplFunctionConstant453: int;

axiom li2bplFunctionConstant453 == 453;

const {:allocated} li2bplFunctionConstant454: int;

axiom li2bplFunctionConstant454 == 454;

const {:allocated} li2bplFunctionConstant455: int;

axiom li2bplFunctionConstant455 == 455;

const {:allocated} li2bplFunctionConstant456: int;

axiom li2bplFunctionConstant456 == 456;

const {:allocated} li2bplFunctionConstant457: int;

axiom li2bplFunctionConstant457 == 457;

const {:allocated} li2bplFunctionConstant458: int;

axiom li2bplFunctionConstant458 == 458;

const {:allocated} li2bplFunctionConstant459: int;

axiom li2bplFunctionConstant459 == 459;

const {:allocated} li2bplFunctionConstant460: int;

axiom li2bplFunctionConstant460 == 460;

const {:allocated} li2bplFunctionConstant461: int;

axiom li2bplFunctionConstant461 == 461;

const {:allocated} li2bplFunctionConstant462: int;

axiom li2bplFunctionConstant462 == 462;

const {:allocated} li2bplFunctionConstant463: int;

axiom li2bplFunctionConstant463 == 463;

const {:allocated} li2bplFunctionConstant464: int;

axiom li2bplFunctionConstant464 == 464;

const {:allocated} li2bplFunctionConstant465: int;

axiom li2bplFunctionConstant465 == 465;

const {:allocated} li2bplFunctionConstant466: int;

axiom li2bplFunctionConstant466 == 466;

const {:allocated} li2bplFunctionConstant467: int;

axiom li2bplFunctionConstant467 == 467;

const {:allocated} li2bplFunctionConstant468: int;

axiom li2bplFunctionConstant468 == 468;

const {:allocated} li2bplFunctionConstant469: int;

axiom li2bplFunctionConstant469 == 469;

const {:allocated} li2bplFunctionConstant470: int;

axiom li2bplFunctionConstant470 == 470;

const {:allocated} li2bplFunctionConstant471: int;

axiom li2bplFunctionConstant471 == 471;

const {:allocated} li2bplFunctionConstant472: int;

axiom li2bplFunctionConstant472 == 472;

const {:allocated} li2bplFunctionConstant473: int;

axiom li2bplFunctionConstant473 == 473;

const {:allocated} li2bplFunctionConstant474: int;

axiom li2bplFunctionConstant474 == 474;

const {:allocated} li2bplFunctionConstant475: int;

axiom li2bplFunctionConstant475 == 475;

const {:allocated} li2bplFunctionConstant476: int;

axiom li2bplFunctionConstant476 == 476;

const {:allocated} li2bplFunctionConstant477: int;

axiom li2bplFunctionConstant477 == 477;

const {:allocated} li2bplFunctionConstant478: int;

axiom li2bplFunctionConstant478 == 478;

const {:allocated} li2bplFunctionConstant479: int;

axiom li2bplFunctionConstant479 == 479;

const {:allocated} li2bplFunctionConstant480: int;

axiom li2bplFunctionConstant480 == 480;

const {:allocated} li2bplFunctionConstant481: int;

axiom li2bplFunctionConstant481 == 481;

const {:allocated} li2bplFunctionConstant482: int;

axiom li2bplFunctionConstant482 == 482;

const {:allocated} li2bplFunctionConstant495: int;

axiom li2bplFunctionConstant495 == 495;

const {:allocated} li2bplFunctionConstant496: int;

axiom li2bplFunctionConstant496 == 496;

const {:allocated} li2bplFunctionConstant497: int;

axiom li2bplFunctionConstant497 == 497;

const {:allocated} li2bplFunctionConstant498: int;

axiom li2bplFunctionConstant498 == 498;

const {:allocated} li2bplFunctionConstant499: int;

axiom li2bplFunctionConstant499 == 499;

const {:allocated} li2bplFunctionConstant500: int;

axiom li2bplFunctionConstant500 == 500;

const {:allocated} li2bplFunctionConstant501: int;

axiom li2bplFunctionConstant501 == 501;

const {:allocated} li2bplFunctionConstant502: int;

axiom li2bplFunctionConstant502 == 502;

const {:allocated} li2bplFunctionConstant503: int;

axiom li2bplFunctionConstant503 == 503;

const {:allocated} li2bplFunctionConstant504: int;

axiom li2bplFunctionConstant504 == 504;

const {:allocated} li2bplFunctionConstant505: int;

axiom li2bplFunctionConstant505 == 505;

const {:allocated} li2bplFunctionConstant558: int;

axiom li2bplFunctionConstant558 == 558;

const {:allocated} li2bplFunctionConstant559: int;

axiom li2bplFunctionConstant559 == 559;

const {:allocated} li2bplFunctionConstant561: int;

axiom li2bplFunctionConstant561 == 561;

const {:allocated} li2bplFunctionConstant562: int;

axiom li2bplFunctionConstant562 == 562;

const {:allocated} li2bplFunctionConstant563: int;

axiom li2bplFunctionConstant563 == 563;

const {:allocated} li2bplFunctionConstant564: int;

axiom li2bplFunctionConstant564 == 564;

const {:allocated} li2bplFunctionConstant614: int;

axiom li2bplFunctionConstant614 == 614;

const {:allocated} li2bplFunctionConstant615: int;

axiom li2bplFunctionConstant615 == 615;

const {:allocated} li2bplFunctionConstant629: int;

axiom li2bplFunctionConstant629 == 629;

const {:allocated} li2bplFunctionConstant631: int;

axiom li2bplFunctionConstant631 == 631;

const {:allocated} li2bplFunctionConstant633: int;

axiom li2bplFunctionConstant633 == 633;

const {:allocated} li2bplFunctionConstant634: int;

axiom li2bplFunctionConstant634 == 634;

const {:allocated} li2bplFunctionConstant635: int;

axiom li2bplFunctionConstant635 == 635;

const {:allocated} li2bplFunctionConstant638: int;

axiom li2bplFunctionConstant638 == 638;

const {:allocated} li2bplFunctionConstant681: int;

axiom li2bplFunctionConstant681 == 681;

const {:allocated} li2bplFunctionConstant696: int;

axiom li2bplFunctionConstant696 == 696;

const {:allocated} li2bplFunctionConstant697: int;

axiom li2bplFunctionConstant697 == 697;

const {:allocated} li2bplFunctionConstant698: int;

axiom li2bplFunctionConstant698 == 698;

const {:allocated} li2bplFunctionConstant734: int;

axiom li2bplFunctionConstant734 == 734;

const {:allocated} li2bplFunctionConstant735: int;

axiom li2bplFunctionConstant735 == 735;

const {:allocated} li2bplFunctionConstant736: int;

axiom li2bplFunctionConstant736 == 736;

const {:allocated} li2bplFunctionConstant737: int;

axiom li2bplFunctionConstant737 == 737;

const {:allocated} li2bplFunctionConstant738: int;

axiom li2bplFunctionConstant738 == 738;

const {:allocated} li2bplFunctionConstant751: int;

axiom li2bplFunctionConstant751 == 751;

const {:allocated} li2bplFunctionConstant752: int;

axiom li2bplFunctionConstant752 == 752;

const {:allocated} li2bplFunctionConstant753: int;

axiom li2bplFunctionConstant753 == 753;

const {:allocated} li2bplFunctionConstant754: int;

axiom li2bplFunctionConstant754 == 754;

const {:allocated} li2bplFunctionConstant755: int;

axiom li2bplFunctionConstant755 == 755;

const {:allocated} li2bplFunctionConstant768: int;

axiom li2bplFunctionConstant768 == 768;

const {:allocated} li2bplFunctionConstant770: int;

axiom li2bplFunctionConstant770 == 770;

const {:allocated} li2bplFunctionConstant771: int;

axiom li2bplFunctionConstant771 == 771;

const {:allocated} li2bplFunctionConstant772: int;

axiom li2bplFunctionConstant772 == 772;

const {:allocated} li2bplFunctionConstant773: int;

axiom li2bplFunctionConstant773 == 773;

const {:allocated} li2bplFunctionConstant774: int;

axiom li2bplFunctionConstant774 == 774;

const {:allocated} li2bplFunctionConstant775: int;

axiom li2bplFunctionConstant775 == 775;

const {:allocated} li2bplFunctionConstant776: int;

axiom li2bplFunctionConstant776 == 776;

const {:allocated} li2bplFunctionConstant777: int;

axiom li2bplFunctionConstant777 == 777;

const {:allocated} li2bplFunctionConstant778: int;

axiom li2bplFunctionConstant778 == 778;

const {:allocated} li2bplFunctionConstant779: int;

axiom li2bplFunctionConstant779 == 779;

const {:allocated} li2bplFunctionConstant780: int;

axiom li2bplFunctionConstant780 == 780;

const {:allocated} li2bplFunctionConstant835: int;

axiom li2bplFunctionConstant835 == 835;

const {:allocated} li2bplFunctionConstant836: int;

axiom li2bplFunctionConstant836 == 836;

const {:allocated} li2bplFunctionConstant933: int;

axiom li2bplFunctionConstant933 == 933;

const {:allocated} li2bplFunctionConstant935: int;

axiom li2bplFunctionConstant935 == 935;

const {:allocated} li2bplFunctionConstant937: int;

axiom li2bplFunctionConstant937 == 937;

const {:allocated} li2bplFunctionConstant985: int;

axiom li2bplFunctionConstant985 == 985;

const {:allocated} li2bplFunctionConstant988: int;

axiom li2bplFunctionConstant988 == 988;

function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation getExbInfo_loop_L59(in_i: int, in_globalHeader: int, in_mediaType: int, in_firmwareHeader: int) returns (out_i: int)
{

  entry:
    out_i := in_i;
    goto L59, exit;

  exit:
    return;

  L59:
    assume {:nonnull} in_globalHeader != 0;
    assume in_globalHeader > 0;
    goto anon38_Else;

  anon38_Else:
    assume {:nonnull} in_firmwareHeader != 0;
    assume in_firmwareHeader > 0;
    goto anon39_Else;

  anon39_Else:
    out_i := out_i + 1;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    havoc out_i;
    return;
}



procedure {:LoopProcedure} getExbInfo_loop_L59(in_i: int, in_globalHeader: int, in_mediaType: int, in_firmwareHeader: int) returns (out_i: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation placeExbByBuffer_loop_L46(in_ioreq_1: int, in_ipl: int, in_Tmp_53: int, in_Tmp_54: int, in_sdv_20: int, in_fl_5: int, in_Tmp_55: int, in_Tmp_56: int, in_Tmp_57: int, in_anandMark: int, in_tffs: int, in_Tmp_59: int, in_length_1: int, in_fl_6: int, in_Tmp_60: int, in_Tmp_62: int, in_fl_7: int, in_Tmp_65: int, in_Tmp_66: int, in_Tmp_67: int, in_Tmp_68: int, in_hdr: int, in_Tmp_69: int, in_sdv_28: int, in_sdv_29: int, in_exb_1: int, in_fl_8: int, in_spl: int, in_Tmp_74: int, in_Tmp_75: int, in_fl_10: int, in_Tmp_76: int, in_Tmp_77: int, in_tmpWord: int, in_Tmp_78: int, in_Tmp_79: int, in_pVol_3: int, in_buf_3: int, in_bufLen_3: int, in_docWinBase: int, in_exbFlags_2: int, in_boogieTmp: int, in_vslice_dummy_var_6: int, in_vslice_dummy_var_7: int) returns (out_ipl: int, out_Tmp_53: int, out_Tmp_54: int, out_sdv_20: int, out_fl_5: int, out_Tmp_55: int, out_Tmp_56: int, out_Tmp_57: int, out_tffs: int, out_Tmp_59: int, out_Tmp_60: int, out_Tmp_62: int, out_fl_7: int, out_Tmp_65: int, out_Tmp_66: int, out_Tmp_67: int, out_Tmp_68: int, out_hdr: int, out_Tmp_69: int, out_sdv_28: int, out_sdv_29: int, out_fl_8: int, out_spl: int, out_Tmp_74: int, out_Tmp_75: int, out_fl_10: int, out_Tmp_76: int, out_Tmp_77: int, out_tmpWord: int, out_Tmp_78: int, out_Tmp_79: int, out_boogieTmp: int, out_vslice_dummy_var_6: int, out_vslice_dummy_var_7: int)
{
  var vslice_dummy_var_1466: int;
  var vslice_dummy_var_1467: int;
  var vslice_dummy_var_1468: int;
  var vslice_dummy_var_1469: int;
  var vslice_dummy_var_1470: int;
  var vslice_dummy_var_1471: int;
  var vslice_dummy_var_1472: int;
  var vslice_dummy_var_1473: int;
  var vslice_dummy_var_1474: int;

  entry:
    out_ipl, out_Tmp_53, out_Tmp_54, out_sdv_20, out_fl_5, out_Tmp_55, out_Tmp_56, out_Tmp_57, out_tffs, out_Tmp_59, out_Tmp_60, out_Tmp_62, out_fl_7, out_Tmp_65, out_Tmp_66, out_Tmp_67, out_Tmp_68, out_hdr, out_Tmp_69, out_sdv_28, out_sdv_29, out_fl_8, out_spl, out_Tmp_74, out_Tmp_75, out_fl_10, out_Tmp_76, out_Tmp_77, out_tmpWord, out_Tmp_78, out_Tmp_79, out_boogieTmp, out_vslice_dummy_var_6, out_vslice_dummy_var_7 := in_ipl, in_Tmp_53, in_Tmp_54, in_sdv_20, in_fl_5, in_Tmp_55, in_Tmp_56, in_Tmp_57, in_tffs, in_Tmp_59, in_Tmp_60, in_Tmp_62, in_fl_7, in_Tmp_65, in_Tmp_66, in_Tmp_67, in_Tmp_68, in_hdr, in_Tmp_69, in_sdv_28, in_sdv_29, in_fl_8, in_spl, in_Tmp_74, in_Tmp_75, in_fl_10, in_Tmp_76, in_Tmp_77, in_tmpWord, in_Tmp_78, in_Tmp_79, in_boogieTmp, in_vslice_dummy_var_6, in_vslice_dummy_var_7;
    goto L46, exit;

  exit:
    return;

  L46:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    goto anon94_Else;

  anon94_Else:
    assume {:nonnull} in_length_1 != 0;
    assume in_length_1 > 0;
    goto anon96_Else;

  anon96_Else:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc out_Tmp_74;
    assume {:nonnull} out_Tmp_74 != 0;
    assume out_Tmp_74 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    call {:si_unique_call 2197} out_sdv_28 := waitForFullBuffer(in_pVol_3, in_buf_3, in_bufLen_3, in_length_1, 1);
    goto anon98_Else;

  anon98_Else:
    assume {:partition} out_sdv_28 != 0;
    goto L61;

  L61:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L63;

  L63:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc out_Tmp_65;
    assume {:nonnull} out_Tmp_65 != 0;
    assume out_Tmp_65 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} out_Tmp_65 != 0;
    assume out_Tmp_65 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} out_Tmp_65 != 0;
    assume out_Tmp_65 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} out_Tmp_65 != 0;
    assume out_Tmp_65 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    goto L107;

  L107:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    havoc out_Tmp_66;
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_66 != 0;
    assume out_Tmp_66 > 0;
    call {:si_unique_call 2190} out_vslice_dummy_var_6 := flmemset(flData_FLBuffer(out_Tmp_66), 255, 512);
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    goto anon109_Else_dummy;

  anon109_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 2211} {:si_old_unique_call 1} out_ipl, out_Tmp_53, out_Tmp_54, out_sdv_20, out_fl_5, out_Tmp_55, out_Tmp_56, out_Tmp_57, out_tffs, out_Tmp_59, out_Tmp_60, out_Tmp_62, out_fl_7, out_Tmp_65, out_Tmp_66, out_Tmp_67, out_Tmp_68, out_hdr, out_Tmp_69, out_sdv_28, out_sdv_29, out_fl_8, out_spl, out_Tmp_74, out_Tmp_75, out_fl_10, out_Tmp_76, out_Tmp_77, out_tmpWord, out_Tmp_78, out_Tmp_79, out_boogieTmp, out_vslice_dummy_var_6, out_vslice_dummy_var_7 := placeExbByBuffer_loop_L46(in_ioreq_1, out_ipl, out_Tmp_53, out_Tmp_54, out_sdv_20, out_fl_5, out_Tmp_55, out_Tmp_56, out_Tmp_57, in_anandMark, out_tffs, out_Tmp_59, in_length_1, in_fl_6, out_Tmp_60, out_Tmp_62, out_fl_7, out_Tmp_65, out_Tmp_66, out_Tmp_67, out_Tmp_68, out_hdr, out_Tmp_69, out_sdv_28, out_sdv_29, in_exb_1, out_fl_8, out_spl, out_Tmp_74, out_Tmp_75, out_fl_10, out_Tmp_76, out_Tmp_77, out_tmpWord, out_Tmp_78, out_Tmp_79, in_pVol_3, in_buf_3, in_bufLen_3, in_docWinBase, in_exbFlags_2, out_boogieTmp, out_vslice_dummy_var_6, out_vslice_dummy_var_7);
    return;

  anon109_Then:
    goto anon109_Then_dummy;

  anon109_Then_dummy:
    goto L_BAF_0;

  anon117_Then:
    goto L69;

  L69:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc out_Tmp_67;
    assume {:nonnull} out_Tmp_67 != 0;
    assume out_Tmp_67 > 0;
    goto anon128_Else;

  anon128_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(in_exbFlags_2, 256) == 0;
    goto L76;

  L76:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc out_Tmp_76;
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    assume {:nonnull} out_Tmp_76 != 0;
    assume out_Tmp_76 > 0;
    goto anon104_Else;

  anon104_Else:
    assume {:partition} in_fl_6 == 0;
    goto L107;

  anon103_Then:
    assume {:partition} BAND(in_exbFlags_2, 256) != 0;
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    havoc out_Tmp_79;
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_79 != 0;
    assume out_Tmp_79 > 0;
    call {:si_unique_call 2210} out_vslice_dummy_var_7 := flmemset(flData_FLBuffer(out_Tmp_79), 255, 512);
    goto L76;

  anon118_Then:
    goto L69;

  anon119_Then:
    goto L69;

  anon127_Then:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto L99;

  L99:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc out_Tmp_77;
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_77 != 0;
    assume out_Tmp_77 > 0;
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc vslice_dummy_var_1472;
    call {:si_unique_call 2207} out_fl_8 := flashNoWrite_sdv_static_function_3(vslice_dummy_var_1472, 1030, in_anandMark, 2, 4);
    goto anon108_Else;

  anon108_Else:
    assume {:partition} out_fl_8 == 0;
    goto L107;

  anon102_Then:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} BAND(in_exbFlags_2, 256) != 0;
    goto L99;

  anon105_Then:
    assume {:partition} BAND(in_exbFlags_2, 256) == 0;
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc vslice_dummy_var_1474;
    call {:si_unique_call 2209} out_fl_10 := bdkCall(402, in_ioreq_1, vslice_dummy_var_1474);
    goto anon106_Else;

  anon106_Else:
    assume {:partition} out_fl_10 == 0;
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc vslice_dummy_var_1473;
    call {:si_unique_call 2208} out_fl_5 := bdkCall(402, in_ioreq_1, vslice_dummy_var_1473);
    goto anon107_Else;

  anon107_Else:
    assume {:partition} out_fl_5 == 0;
    goto L99;

  anon126_Then:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} BAND(in_exbFlags_2, 256) == 0;
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc vslice_dummy_var_1471;
    call {:si_unique_call 2206} out_fl_7 := bdkCall(402, in_ioreq_1, vslice_dummy_var_1471);
    goto anon110_Then;

  anon110_Then:
    assume {:partition} out_fl_7 == 0;
    goto L107;

  anon101_Then:
    assume {:partition} BAND(in_exbFlags_2, 256) != 0;
    goto L107;

  anon99_Then:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    havoc out_Tmp_56;
    assume {:nonnull} out_Tmp_56 != 0;
    assume out_Tmp_56 > 0;
    out_Tmp_54 := flData_FLBuffer(out_Tmp_56);
    assume {:nonnull} out_Tmp_54 != 0;
    assume out_Tmp_54 > 0;
    out_hdr := biosHdr_SplHeader(out_Tmp_54);
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    call {:si_unique_call 2198} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc out_Tmp_53;
    assume {:nonnull} out_Tmp_53 != 0;
    assume out_Tmp_53 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    goto L125;

  L125:
    assume {:nonnull} out_hdr != 0;
    assume out_hdr > 0;
    havoc out_Tmp_68;
    assume {:nonnull} out_Tmp_68 != 0;
    assume out_Tmp_68 > 0;
    goto anon130_Then;

  anon130_Then:
    assume {:nonnull} out_hdr != 0;
    assume out_hdr > 0;
    havoc out_Tmp_69;
    assume {:nonnull} out_Tmp_69 != 0;
    assume out_Tmp_69 > 0;
    goto anon131_Else;

  anon131_Else:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    havoc out_Tmp_60;
    assume {:nonnull} out_Tmp_60 != 0;
    assume out_Tmp_60 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    goto L133;

  L133:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    havoc out_Tmp_55;
    assume {:nonnull} out_Tmp_55 != 0;
    assume out_Tmp_55 > 0;
    out_tffs := flData_FLBuffer(out_Tmp_55);
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    assume {:nonnull} out_tffs != 0;
    assume out_tffs > 0;
    assume {:nonnull} out_tffs != 0;
    assume out_tffs > 0;
    call {:si_unique_call 2204} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    assume {:nonnull} out_tffs != 0;
    assume out_tffs > 0;
    havoc vslice_dummy_var_1469;
    havoc vslice_dummy_var_1470;
    call {:si_unique_call 2205} toUNAL(vslice_dummy_var_1469, vslice_dummy_var_1470);
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    goto L129;

  L129:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    havoc out_Tmp_57;
    assume {:nonnull} out_Tmp_57 != 0;
    assume out_Tmp_57 > 0;
    out_tffs := flData_FLBuffer(out_Tmp_57);
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    assume {:nonnull} out_tffs != 0;
    assume out_tffs > 0;
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    assume {:nonnull} out_tffs != 0;
    assume out_tffs > 0;
    goto L63;

  anon134_Then:
    goto L133;

  anon120_Then:
    goto L129;

  anon121_Then:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    havoc out_Tmp_75;
    assume {:nonnull} out_Tmp_75 != 0;
    assume out_Tmp_75 > 0;
    out_spl := flData_FLBuffer(out_Tmp_75);
    call {:si_unique_call 2199} out_sdv_20 := flRandByte();
    out_tmpWord := out_sdv_20;
    assume {:nonnull} out_spl != 0;
    assume out_spl > 0;
    havoc vslice_dummy_var_1467;
    call {:si_unique_call 2200} toUNAL(vslice_dummy_var_1467, out_tmpWord);
    assume {:nonnull} out_spl != 0;
    assume out_spl > 0;
    assume {:nonnull} out_spl != 0;
    assume out_spl > 0;
    call {:si_unique_call 2201} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    havoc out_Tmp_62;
    assume {:nonnull} out_spl != 0;
    assume out_spl > 0;
    havoc vslice_dummy_var_1468;
    call {:si_unique_call 2202} toUNAL(vslice_dummy_var_1468, out_Tmp_62);
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    assume {:nonnull} out_spl != 0;
    assume out_spl > 0;
    assume {:nonnull} out_spl != 0;
    assume out_spl > 0;
    call {:si_unique_call 2203} out_boogieTmp := corral_nondet();
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} in_docWinBase > 0;
    assume {:nonnull} out_spl != 0;
    assume out_spl > 0;
    havoc vslice_dummy_var_1466;
    call {:si_unique_call 2191} toUNAL(vslice_dummy_var_1466, in_docWinBase);
    assume {:nonnull} out_spl != 0;
    assume out_spl > 0;
    assume {:nonnull} out_spl != 0;
    assume out_spl > 0;
    call {:si_unique_call 2192} out_boogieTmp := corral_nondet();
    goto L63;

  anon133_Then:
    assume {:partition} 0 >= in_docWinBase;
    goto L63;

  anon111_Then:
    assume {:nonnull} in_pVol_3 != 0;
    assume in_pVol_3 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto L165;

  L165:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    havoc out_Tmp_78;
    assume {:nonnull} out_Tmp_78 != 0;
    assume out_Tmp_78 > 0;
    out_ipl := flData_FLBuffer(out_Tmp_78);
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} out_ipl != 0;
    assume out_ipl > 0;
    call {:si_unique_call 2194} out_boogieTmp := corral_nondet();
    assume {:nonnull} out_ipl != 0;
    assume out_ipl > 0;
    goto L167;

  L167:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} in_docWinBase > 0;
    assume {:nonnull} out_ipl != 0;
    assume out_ipl > 0;
    assume {:nonnull} out_ipl != 0;
    assume out_ipl > 0;
    assume {:nonnull} out_ipl != 0;
    assume out_ipl > 0;
    call {:si_unique_call 2193} out_boogieTmp := corral_nondet();
    goto L63;

  anon113_Then:
    assume {:partition} 0 >= in_docWinBase;
    goto L63;

  anon132_Then:
    goto L167;

  anon112_Then:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    goto L165;

  anon129_Then:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    call {:si_unique_call 2195} out_boogieTmp := corral_nondet();
    goto L125;

  anon100_Then:
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    havoc out_Tmp_59;
    assume {:nonnull} out_Tmp_59 != 0;
    assume out_Tmp_59 > 0;
    out_hdr := flData_FLBuffer(out_Tmp_59);
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    assume {:nonnull} out_hdr != 0;
    assume out_hdr > 0;
    goto L125;

  anon125_Then:
    goto L52;

  L52:
    call {:si_unique_call 2196} out_sdv_29 := waitForFullBuffer(in_pVol_3, in_buf_3, in_bufLen_3, in_length_1, 0);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} out_sdv_29 == 0;
    assume {:nonnull} in_exb_1 != 0;
    assume in_exb_1 > 0;
    goto anon115_Then;

  anon115_Then:
    goto L61;

  anon114_Then:
    assume {:partition} out_sdv_29 != 0;
    goto L61;

  anon97_Then:
    goto L52;
}



procedure {:LoopProcedure} placeExbByBuffer_loop_L46(in_ioreq_1: int, in_ipl: int, in_Tmp_53: int, in_Tmp_54: int, in_sdv_20: int, in_fl_5: int, in_Tmp_55: int, in_Tmp_56: int, in_Tmp_57: int, in_anandMark: int, in_tffs: int, in_Tmp_59: int, in_length_1: int, in_fl_6: int, in_Tmp_60: int, in_Tmp_62: int, in_fl_7: int, in_Tmp_65: int, in_Tmp_66: int, in_Tmp_67: int, in_Tmp_68: int, in_hdr: int, in_Tmp_69: int, in_sdv_28: int, in_sdv_29: int, in_exb_1: int, in_fl_8: int, in_spl: int, in_Tmp_74: int, in_Tmp_75: int, in_fl_10: int, in_Tmp_76: int, in_Tmp_77: int, in_tmpWord: int, in_Tmp_78: int, in_Tmp_79: int, in_pVol_3: int, in_buf_3: int, in_bufLen_3: int, in_docWinBase: int, in_exbFlags_2: int, in_boogieTmp: int, in_vslice_dummy_var_6: int, in_vslice_dummy_var_7: int) returns (out_ipl: int, out_Tmp_53: int, out_Tmp_54: int, out_sdv_20: int, out_fl_5: int, out_Tmp_55: int, out_Tmp_56: int, out_Tmp_57: int, out_tffs: int, out_Tmp_59: int, out_Tmp_60: int, out_Tmp_62: int, out_fl_7: int, out_Tmp_65: int, out_Tmp_66: int, out_Tmp_67: int, out_Tmp_68: int, out_hdr: int, out_Tmp_69: int, out_sdv_28: int, out_sdv_29: int, out_fl_8: int, out_spl: int, out_Tmp_74: int, out_Tmp_75: int, out_fl_10: int, out_Tmp_76: int, out_Tmp_77: int, out_tmpWord: int, out_Tmp_78: int, out_Tmp_79: int, out_boogieTmp: int, out_vslice_dummy_var_6: int, out_vslice_dummy_var_7: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_28 == 0 || out_sdv_28 == 1 || out_sdv_28 == in_sdv_28;
  free ensures {:va_keep} out_sdv_29 == 0 || out_sdv_29 == 1 || out_sdv_29 == in_sdv_29;
  free ensures {:va_keep} out_fl_8 == 19 || out_fl_8 == in_fl_8;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation cfiscsByteIdentify_loop_L44(in_counter: int, in_flashPtr: int, in_sdv_34: int, in_inlv: int, in_idChar: int, in_mul: int, in_offset: int) returns (out_counter: int, out_sdv_34: int, out_offset: int)
{

  entry:
    out_counter, out_sdv_34, out_offset := in_counter, in_sdv_34, in_offset;
    goto L44, exit;

  exit:
    return;

  L44:
    goto anon32_Else;

  anon32_Else:
    assume {:partition} in_mul > out_counter;
    call {:si_unique_call 2212} out_sdv_34 := corral_nondet();
    goto anon34_Else;

  anon34_Else:
    assume {:partition} out_sdv_34 == in_idChar;
    out_counter := out_counter + 1;
    out_offset := out_offset + in_inlv;
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    call {:si_unique_call 2213} {:si_old_unique_call 1} out_counter, out_sdv_34, out_offset := cfiscsByteIdentify_loop_L44(out_counter, in_flashPtr, out_sdv_34, in_inlv, in_idChar, in_mul, out_offset);
    return;
}



procedure {:LoopProcedure} cfiscsByteIdentify_loop_L44(in_counter: int, in_flashPtr: int, in_sdv_34: int, in_inlv: int, in_idChar: int, in_mul: int, in_offset: int) returns (out_counter: int, out_sdv_34: int, out_offset: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation cfiscsByteIdentify_loop_L29(in_counter: int, in_flashPtr: int, in_sdv_34: int, in_inlv: int, in_idChar: int, in_mul: int, in_offset: int, in_letter: int) returns (out_counter: int, out_sdv_34: int, out_idChar: int, out_offset: int, out_letter: int)
{

  entry:
    out_counter, out_sdv_34, out_idChar, out_offset, out_letter := in_counter, in_sdv_34, in_idChar, in_offset, in_letter;
    goto L29, exit;

  exit:
    return;

  L29:
    assume {:CounterLoop 3} {:Counter "letter"} true;
    goto anon31_Else;

  anon31_Else:
    assume {:partition} 3 > out_letter;
    out_idChar := 63;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} out_letter != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} out_letter != 1;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} out_letter == 2;
    out_idChar := 89;
    goto L36;

  L36:
    out_counter := 0;
    out_offset := (16 + out_letter) * in_inlv * in_mul;
    goto L44;

  L44:
    call {:si_unique_call 2214} out_counter, out_sdv_34, out_offset := cfiscsByteIdentify_loop_L44(out_counter, in_flashPtr, out_sdv_34, in_inlv, out_idChar, in_mul, out_offset);
    goto L44_last;

  L44_last:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} in_mul > out_counter;
    call {:si_unique_call 2215} out_sdv_34 := corral_nondet();
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} out_sdv_34 == out_idChar;
    out_counter := out_counter + 1;
    out_offset := out_offset + in_inlv;
    assume false;
    return;

  anon34_Then:
    assume {:partition} out_sdv_34 != out_idChar;
    goto L45;

  L45:
    goto anon33_Else;

  anon33_Else:
    assume {:partition} in_mul <= out_counter;
    out_letter := out_letter + 1;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    call {:si_unique_call 2216} {:si_old_unique_call 1} out_counter, out_sdv_34, out_idChar, out_offset, out_letter := cfiscsByteIdentify_loop_L29(out_counter, in_flashPtr, out_sdv_34, in_inlv, out_idChar, in_mul, out_offset, out_letter);
    return;

  anon32_Then:
    assume {:partition} out_counter >= in_mul;
    goto L45;

  anon37_Then:
    assume {:partition} out_letter != 2;
    goto L36;

  anon38_Then:
    assume {:partition} out_letter == 1;
    out_idChar := 82;
    goto L36;

  anon39_Then:
    assume {:partition} out_letter == 0;
    out_idChar := 81;
    goto L36;
}



procedure {:LoopProcedure} cfiscsByteIdentify_loop_L29(in_counter: int, in_flashPtr: int, in_sdv_34: int, in_inlv: int, in_idChar: int, in_mul: int, in_offset: int, in_letter: int) returns (out_counter: int, out_sdv_34: int, out_idChar: int, out_offset: int, out_letter: int);
  free ensures {:va_keep} out_idChar == 89 || out_idChar == 63 || out_idChar == 82 || out_idChar == 81 || out_idChar == in_idChar;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation cfiscsByteIdentify_loop_L21(in_counter: int, in_flashPtr: int, in_sdv_34: int, in_inlv: int, in_idChar: int, in_mul: int, in_offset: int, in_letter: int) returns (out_counter: int, out_sdv_34: int, out_idChar: int, out_mul: int, out_offset: int, out_letter: int)
{

  entry:
    out_counter, out_sdv_34, out_idChar, out_mul, out_offset, out_letter := in_counter, in_sdv_34, in_idChar, in_mul, in_offset, in_letter;
    goto L21, exit;

  exit:
    return;

  L21:
    assume {:CounterLoop 7} {:Counter "mul"} true;
    goto anon30_Else;

  anon30_Else:
    assume {:partition} 8 >= out_mul;
    out_letter := 0;
    goto L29;

  L29:
    call {:si_unique_call 2217} out_counter, out_sdv_34, out_idChar, out_offset, out_letter := cfiscsByteIdentify_loop_L29(out_counter, in_flashPtr, out_sdv_34, in_inlv, out_idChar, out_mul, out_offset, out_letter);
    goto L29_last;

  L29_last:
    assume {:CounterLoop 3} {:Counter "letter"} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} 3 > out_letter;
    out_idChar := 63;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} out_letter != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} out_letter != 1;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} out_letter == 2;
    out_idChar := 89;
    goto L36;

  L36:
    out_counter := 0;
    out_offset := (16 + out_letter) * in_inlv * out_mul;
    goto L44;

  L44:
    call {:si_unique_call 2218} out_counter, out_sdv_34, out_offset := cfiscsByteIdentify_loop_L44(out_counter, in_flashPtr, out_sdv_34, in_inlv, out_idChar, out_mul, out_offset);
    goto L44_last;

  L44_last:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} out_mul > out_counter;
    call {:si_unique_call 2219} out_sdv_34 := corral_nondet();
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} out_sdv_34 == out_idChar;
    out_counter := out_counter + 1;
    out_offset := out_offset + in_inlv;
    assume false;
    return;

  anon34_Then:
    assume {:partition} out_sdv_34 != out_idChar;
    goto L45;

  L45:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} out_mul <= out_counter;
    out_letter := out_letter + 1;
    assume false;
    return;

  anon33_Then:
    assume {:partition} out_counter < out_mul;
    goto L30;

  L30:
    goto anon35_Else;

  anon35_Else:
    assume {:partition} out_letter < 3;
    out_mul := out_mul + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    call {:si_unique_call 2220} {:si_old_unique_call 1} out_counter, out_sdv_34, out_idChar, out_mul, out_offset, out_letter := cfiscsByteIdentify_loop_L21(out_counter, in_flashPtr, out_sdv_34, in_inlv, out_idChar, out_mul, out_offset, out_letter);
    return;

  anon32_Then:
    assume {:partition} out_counter >= out_mul;
    goto L45;

  anon37_Then:
    assume {:partition} out_letter != 2;
    goto L36;

  anon38_Then:
    assume {:partition} out_letter == 1;
    out_idChar := 82;
    goto L36;

  anon39_Then:
    assume {:partition} out_letter == 0;
    out_idChar := 81;
    goto L36;

  anon31_Then:
    assume {:partition} out_letter >= 3;
    goto L30;
}



procedure {:LoopProcedure} cfiscsByteIdentify_loop_L21(in_counter: int, in_flashPtr: int, in_sdv_34: int, in_inlv: int, in_idChar: int, in_mul: int, in_offset: int, in_letter: int) returns (out_counter: int, out_sdv_34: int, out_idChar: int, out_mul: int, out_offset: int, out_letter: int);
  free ensures {:va_keep} out_idChar == 89 || out_idChar == 63 || out_idChar == 82 || out_idChar == 81 || out_idChar == in_idChar;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation cfiscsByteIdentify_loop_L18(in_counter: int, in_flashPtr: int, in_sdv_34: int, in_inlv: int, in_idChar: int, in_mul: int, in_offset: int, in_letter: int) returns (out_counter: int, out_sdv_34: int, out_inlv: int, out_idChar: int, out_mul: int, out_offset: int, out_letter: int)
{

  entry:
    out_counter, out_sdv_34, out_inlv, out_idChar, out_mul, out_offset, out_letter := in_counter, in_sdv_34, in_inlv, in_idChar, in_mul, in_offset, in_letter;
    goto L18, exit;

  exit:
    return;

  L18:
    goto anon28_Else;

  anon28_Else:
    assume {:partition} 8 >= out_inlv;
    out_mul := 1;
    goto L21;

  L21:
    call {:si_unique_call 2221} out_counter, out_sdv_34, out_idChar, out_mul, out_offset, out_letter := cfiscsByteIdentify_loop_L21(out_counter, in_flashPtr, out_sdv_34, out_inlv, out_idChar, out_mul, out_offset, out_letter);
    goto L21_last;

  L21_last:
    assume {:CounterLoop 7} {:Counter "mul"} true;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 8 >= out_mul;
    out_letter := 0;
    goto L29;

  L29:
    call {:si_unique_call 2222} out_counter, out_sdv_34, out_idChar, out_offset, out_letter := cfiscsByteIdentify_loop_L29(out_counter, in_flashPtr, out_sdv_34, out_inlv, out_idChar, out_mul, out_offset, out_letter);
    goto L29_last;

  L29_last:
    assume {:CounterLoop 3} {:Counter "letter"} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} 3 > out_letter;
    out_idChar := 63;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} out_letter != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} out_letter != 1;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} out_letter == 2;
    out_idChar := 89;
    goto L36;

  L36:
    out_counter := 0;
    out_offset := (16 + out_letter) * out_inlv * out_mul;
    goto L44;

  L44:
    call {:si_unique_call 2223} out_counter, out_sdv_34, out_offset := cfiscsByteIdentify_loop_L44(out_counter, in_flashPtr, out_sdv_34, out_inlv, out_idChar, out_mul, out_offset);
    goto L44_last;

  L44_last:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} out_mul > out_counter;
    call {:si_unique_call 2224} out_sdv_34 := corral_nondet();
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} out_sdv_34 == out_idChar;
    out_counter := out_counter + 1;
    out_offset := out_offset + out_inlv;
    assume false;
    return;

  anon34_Then:
    assume {:partition} out_sdv_34 != out_idChar;
    goto L45;

  L45:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} out_mul <= out_counter;
    out_letter := out_letter + 1;
    assume false;
    return;

  anon33_Then:
    assume {:partition} out_counter < out_mul;
    goto L30;

  L30:
    goto anon35_Else;

  anon35_Else:
    assume {:partition} out_letter < 3;
    out_mul := out_mul + 1;
    assume false;
    return;

  anon32_Then:
    assume {:partition} out_counter >= out_mul;
    goto L45;

  anon37_Then:
    assume {:partition} out_letter != 2;
    goto L36;

  anon38_Then:
    assume {:partition} out_letter == 1;
    out_idChar := 82;
    goto L36;

  anon39_Then:
    assume {:partition} out_letter == 0;
    out_idChar := 81;
    goto L36;

  anon31_Then:
    assume {:partition} out_letter >= 3;
    goto L30;

  anon30_Then:
    assume {:partition} out_mul > 8;
    out_inlv := out_inlv + 1;
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    call {:si_unique_call 2225} {:si_old_unique_call 1} out_counter, out_sdv_34, out_inlv, out_idChar, out_mul, out_offset, out_letter := cfiscsByteIdentify_loop_L18(out_counter, in_flashPtr, out_sdv_34, out_inlv, out_idChar, out_mul, out_offset, out_letter);
    return;
}



procedure {:LoopProcedure} cfiscsByteIdentify_loop_L18(in_counter: int, in_flashPtr: int, in_sdv_34: int, in_inlv: int, in_idChar: int, in_mul: int, in_offset: int, in_letter: int) returns (out_counter: int, out_sdv_34: int, out_inlv: int, out_idChar: int, out_mul: int, out_offset: int, out_letter: int);
  free ensures {:va_keep} out_idChar == 89 || out_idChar == 63 || out_idChar == 82 || out_idChar == 81 || out_idChar == in_idChar;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation cfiscsByteIdentify_loop_L11(in_flashPtr: int, in_inlv: int) returns (out_inlv: int)
{

  entry:
    out_inlv := in_inlv;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:CounterLoop 7} {:Counter "inlv"} true;
    goto anon27_Else;

  anon27_Else:
    assume {:partition} 8 >= out_inlv;
    out_inlv := out_inlv + 1;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    havoc out_inlv;
    return;
}



procedure {:LoopProcedure} cfiscsByteIdentify_loop_L11(in_flashPtr: int, in_inlv: int) returns (out_inlv: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation cfiscsByteSize_loop_L46(in_i_2: int, in_flashPtr_1: int, in_sdv_39: int, in_sdv_40: int, in_queryIdStr: int, in_sdv_45: int, in_pVol_5: int) returns (out_i_2: int, out_sdv_39: int, out_sdv_40: int, out_sdv_45: int)
{

  entry:
    out_i_2, out_sdv_39, out_sdv_40, out_sdv_45 := in_i_2, in_sdv_39, in_sdv_40, in_sdv_45;
    goto L46, exit;

  exit:
    return;

  L46:
    assume {:nonnull} in_pVol_5 != 0;
    assume in_pVol_5 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 2228} out_sdv_45 := corral_nondet();
    assume {:nonnull} in_queryIdStr != 0;
    assume in_queryIdStr > 0;
    goto anon29_Else;

  anon29_Else:
    call {:si_unique_call 2227} out_sdv_40 := corral_nondet();
    assume {:nonnull} in_queryIdStr != 0;
    assume in_queryIdStr > 0;
    goto anon30_Else;

  anon30_Else:
    call {:si_unique_call 2226} out_sdv_39 := corral_nondet();
    assume {:nonnull} in_queryIdStr != 0;
    assume in_queryIdStr > 0;
    goto anon31_Else;

  anon31_Else:
    out_i_2 := out_i_2 + 1;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    havoc out_i_2;
    return;
}



procedure {:LoopProcedure} cfiscsByteSize_loop_L46(in_i_2: int, in_flashPtr_1: int, in_sdv_39: int, in_sdv_40: int, in_queryIdStr: int, in_sdv_45: int, in_pVol_5: int) returns (out_i_2: int, out_sdv_39: int, out_sdv_40: int, out_sdv_45: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation cfiscsByteSize_loop_L15(in_i_2: int, in_Tmp_98: int, in_Tmp_99: int, in_sdv_38: int, in_flashPtr_1: int, in_sdv_39: int, in_sdv_40: int, in_sdv_42: int, in_sdv_43: int, in_sdv_44: int, in_queryIdStr: int, in_sdv_45: int, in_pVol_5: int) returns (out_i_2: int, out_Tmp_98: int, out_Tmp_99: int, out_sdv_38: int, out_flashPtr_1: int, out_sdv_39: int, out_sdv_40: int, out_sdv_42: int, out_sdv_43: int, out_sdv_44: int, out_sdv_45: int)
{
  var vslice_dummy_var_1475: int;

  entry:
    out_i_2, out_Tmp_98, out_Tmp_99, out_sdv_38, out_flashPtr_1, out_sdv_39, out_sdv_40, out_sdv_42, out_sdv_43, out_sdv_44, out_sdv_45 := in_i_2, in_Tmp_98, in_Tmp_99, in_sdv_38, in_flashPtr_1, in_sdv_39, in_sdv_40, in_sdv_42, in_sdv_43, in_sdv_44, in_sdv_45;
    goto L15, exit;

  exit:
    return;

  L15:
    assume {:nonnull} in_pVol_5 != 0;
    assume in_pVol_5 > 0;
    goto anon23_Else;

  anon23_Else:
    assume {:nonnull} in_pVol_5 != 0;
    assume in_pVol_5 > 0;
    havoc out_Tmp_99;
    assume {:nonnull} in_pVol_5 != 0;
    assume in_pVol_5 > 0;
    havoc vslice_dummy_var_1475;
    call {:si_unique_call 2233} out_sdv_42 := flMap(vslice_dummy_var_1475, out_Tmp_99);
    out_flashPtr_1 := out_sdv_42;
    assume {:nonnull} in_pVol_5 != 0;
    assume in_pVol_5 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 2234} out_sdv_43 := corral_nondet();
    assume {:nonnull} in_queryIdStr != 0;
    assume in_queryIdStr > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 2235} out_sdv_44 := corral_nondet();
    assume {:nonnull} in_queryIdStr != 0;
    assume in_queryIdStr > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 2236} out_sdv_38 := corral_nondet();
    assume {:nonnull} in_queryIdStr != 0;
    assume in_queryIdStr > 0;
    goto anon27_Else;

  anon27_Else:
    goto L26;

  L26:
    assume {:nonnull} in_pVol_5 != 0;
    assume in_pVol_5 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    out_Tmp_98 := 0;
    goto L45;

  L45:
    out_i_2 := out_Tmp_98;
    goto L46;

  L46:
    call {:si_unique_call 2229} out_i_2, out_sdv_39, out_sdv_40, out_sdv_45 := cfiscsByteSize_loop_L46(out_i_2, out_flashPtr_1, out_sdv_39, out_sdv_40, in_queryIdStr, out_sdv_45, in_pVol_5);
    goto L46_last;

  L46_last:
    assume {:nonnull} in_pVol_5 != 0;
    assume in_pVol_5 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2232} out_sdv_45 := corral_nondet();
    assume {:nonnull} in_queryIdStr != 0;
    assume in_queryIdStr > 0;
    goto anon29_Else;

  anon29_Else:
    call {:si_unique_call 2231} out_sdv_40 := corral_nondet();
    assume {:nonnull} in_queryIdStr != 0;
    assume in_queryIdStr > 0;
    goto anon30_Else;

  anon30_Else:
    call {:si_unique_call 2230} out_sdv_39 := corral_nondet();
    assume {:nonnull} in_queryIdStr != 0;
    assume in_queryIdStr > 0;
    goto anon31_Else;

  anon31_Else:
    out_i_2 := out_i_2 + 1;
    assume false;
    return;

  anon28_Then:
    assume {:nonnull} in_pVol_5 != 0;
    assume in_pVol_5 > 0;
    goto anon28_Then_dummy;

  anon28_Then_dummy:
    call {:si_unique_call 2237} {:si_old_unique_call 1} out_i_2, out_Tmp_98, out_Tmp_99, out_sdv_38, out_flashPtr_1, out_sdv_39, out_sdv_40, out_sdv_42, out_sdv_43, out_sdv_44, out_sdv_45 := cfiscsByteSize_loop_L15(out_i_2, out_Tmp_98, out_Tmp_99, out_sdv_38, out_flashPtr_1, out_sdv_39, out_sdv_40, out_sdv_42, out_sdv_43, out_sdv_44, in_queryIdStr, out_sdv_45, in_pVol_5);
    return;

  anon24_Then:
    out_Tmp_98 := 1;
    goto L45;

  anon26_Then:
    goto L26;

  anon25_Then:
    goto L26;

  anon33_Then:
    goto L26;
}



procedure {:LoopProcedure} cfiscsByteSize_loop_L15(in_i_2: int, in_Tmp_98: int, in_Tmp_99: int, in_sdv_38: int, in_flashPtr_1: int, in_sdv_39: int, in_sdv_40: int, in_sdv_42: int, in_sdv_43: int, in_sdv_44: int, in_queryIdStr: int, in_sdv_45: int, in_pVol_5: int) returns (out_i_2: int, out_Tmp_98: int, out_Tmp_99: int, out_sdv_38: int, out_flashPtr_1: int, out_sdv_39: int, out_sdv_40: int, out_sdv_42: int, out_sdv_43: int, out_sdv_44: int, out_sdv_45: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_98 == 0 || out_Tmp_98 == 1 || out_Tmp_98 == in_Tmp_98;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation cfiscsWordSize_loop_L18(in_sdv_47: int, in_flashPtr_2: int, in_sdv_48: int, in_sdv_49: int, in_sdv_51: int, in_sdv_52: int, in_sdv_53: int, in_queryIdStr_1: int, in_sdv_54: int, in_Tmp_116: int, in_pVol_6: int) returns (out_sdv_47: int, out_flashPtr_2: int, out_sdv_48: int, out_sdv_49: int, out_sdv_51: int, out_sdv_52: int, out_sdv_53: int, out_sdv_54: int, out_Tmp_116: int)
{
  var vslice_dummy_var_1476: int;

  entry:
    out_sdv_47, out_flashPtr_2, out_sdv_48, out_sdv_49, out_sdv_51, out_sdv_52, out_sdv_53, out_sdv_54, out_Tmp_116 := in_sdv_47, in_flashPtr_2, in_sdv_48, in_sdv_49, in_sdv_51, in_sdv_52, in_sdv_53, in_sdv_54, in_Tmp_116;
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:CounterLoop 1999} true;
    assume {:nonnull} in_pVol_6 != 0;
    assume in_pVol_6 > 0;
    goto anon15_Else;

  anon15_Else:
    assume {:nonnull} in_pVol_6 != 0;
    assume in_pVol_6 > 0;
    havoc out_Tmp_116;
    assume {:nonnull} in_pVol_6 != 0;
    assume in_pVol_6 > 0;
    havoc vslice_dummy_var_1476;
    call {:si_unique_call 2241} out_sdv_51 := flMap(vslice_dummy_var_1476, out_Tmp_116);
    out_flashPtr_2 := out_sdv_51;
    call {:si_unique_call 2242} out_sdv_53 := corral_nondet();
    assume {:nonnull} in_queryIdStr_1 != 0;
    assume in_queryIdStr_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 2243} out_sdv_52 := corral_nondet();
    assume {:nonnull} in_queryIdStr_1 != 0;
    assume in_queryIdStr_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 2244} out_sdv_47 := corral_nondet();
    assume {:nonnull} in_queryIdStr_1 != 0;
    assume in_queryIdStr_1 > 0;
    goto anon18_Else;

  anon18_Else:
    goto L32;

  L32:
    call {:si_unique_call 2240} out_sdv_54 := corral_nondet();
    assume {:nonnull} in_queryIdStr_1 != 0;
    assume in_queryIdStr_1 > 0;
    goto anon19_Else;

  anon19_Else:
    call {:si_unique_call 2239} out_sdv_49 := corral_nondet();
    assume {:nonnull} in_queryIdStr_1 != 0;
    assume in_queryIdStr_1 > 0;
    goto anon20_Else;

  anon20_Else:
    call {:si_unique_call 2238} out_sdv_48 := corral_nondet();
    assume {:nonnull} in_queryIdStr_1 != 0;
    assume in_queryIdStr_1 > 0;
    goto anon21_Else;

  anon21_Else:
    assume {:nonnull} in_pVol_6 != 0;
    assume in_pVol_6 > 0;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 2245} {:si_old_unique_call 1} out_sdv_47, out_flashPtr_2, out_sdv_48, out_sdv_49, out_sdv_51, out_sdv_52, out_sdv_53, out_sdv_54, out_Tmp_116 := cfiscsWordSize_loop_L18(out_sdv_47, out_flashPtr_2, out_sdv_48, out_sdv_49, out_sdv_51, out_sdv_52, out_sdv_53, in_queryIdStr_1, out_sdv_54, out_Tmp_116, in_pVol_6);
    return;

  anon17_Then:
    goto L32;

  anon16_Then:
    goto L32;
}



procedure {:LoopProcedure} cfiscsWordSize_loop_L18(in_sdv_47: int, in_flashPtr_2: int, in_sdv_48: int, in_sdv_49: int, in_sdv_51: int, in_sdv_52: int, in_sdv_53: int, in_queryIdStr_1: int, in_sdv_54: int, in_Tmp_116: int, in_pVol_6: int) returns (out_sdv_47: int, out_flashPtr_2: int, out_sdv_48: int, out_sdv_49: int, out_sdv_51: int, out_sdv_52: int, out_sdv_53: int, out_sdv_54: int, out_Tmp_116: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation changeInterleave_loop_L43(in_flash_1: int)
{

  entry:
    goto L43, exit;

  exit:
    return;

  L43:
    goto anon19_Else;

  anon19_Else:
    assume {:nonnull} in_flash_1 != 0;
    assume in_flash_1 > 0;
    goto anon19_Else_dummy;

  anon19_Else_dummy:
    call {:si_unique_call 2246} {:si_old_unique_call 1} changeInterleave_loop_L43(in_flash_1);
    return;
}



procedure {:LoopProcedure} changeInterleave_loop_L43(in_flash_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 4} releasePowerDown_loop_L7(in_i_3: int, in_sdv_154: int, in_junk: int, in_flash_4: int) returns (out_i_3: int, out_junk: int)
{

  entry:
    out_i_3, out_junk := in_i_3, in_junk;
    goto L7, exit;

  exit:
    return;

  L7:
    assume {:CounterLoop 4} {:Counter "i_3"} true;
    goto anon3_Else;

  anon3_Else:
    assume {:partition} 4 > out_i_3;
    assume {:nonnull} in_flash_4 != 0;
    assume in_flash_4 > 0;
    out_junk := out_junk + in_sdv_154;
    out_i_3 := out_i_3 + 1;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    call {:si_unique_call 2247} {:si_old_unique_call 1} out_i_3, out_junk := releasePowerDown_loop_L7(out_i_3, in_sdv_154, out_junk, in_flash_4);
    return;
}



procedure {:LoopProcedure} releasePowerDown_loop_L7(in_i_3: int, in_sdv_154: int, in_junk: int, in_flash_4: int) returns (out_i_3: int, out_junk: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation recoverFromAccessError_sdv_static_function_8_loop_L17(in_i_4: int, in_flash_6: int) returns (out_i_4: int)
{

  entry:
    out_i_4 := in_i_4;
    goto L17, exit;

  exit:
    return;

  L17:
    assume {:CounterLoop 2} {:Counter "i_4"} true;
    goto anon11_Else;

  anon11_Else:
    assume {:partition} 2 > out_i_4;
    assume {:nonnull} in_flash_6 != 0;
    assume in_flash_6 > 0;
    out_i_4 := out_i_4 + 1;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    havoc out_i_4;
    return;
}



procedure {:LoopProcedure} recoverFromAccessError_sdv_static_function_8_loop_L17(in_i_4: int, in_flash_6: int) returns (out_i_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation docPlusIdentify_loop_L114(in_dev: int, in_maxDevs: int, in_flash_7: int) returns (out_dev: int)
{

  entry:
    out_dev := in_dev;
    goto L114, exit;

  exit:
    return;

  L114:
    goto anon45_Else;

  anon45_Else:
    assume {:partition} in_maxDevs > out_dev;
    assume {:nonnull} in_flash_7 != 0;
    assume in_flash_7 > 0;
    call {:si_unique_call 2248} command_sdv_static_function_8(in_flash_7, 255);
    out_dev := out_dev + 1;
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    havoc out_dev;
    return;
}



procedure {:LoopProcedure} docPlusIdentify_loop_L114(in_dev: int, in_maxDevs: int, in_flash_7: int) returns (out_dev: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation docPlusIdentify_loop_L138(in_sdv_160: int, in_sdv_173: int, in_dev: int, in_floor: int, in_sdv_175: int, in_flash_7: int) returns (out_sdv_160: int, out_dev: int, out_floor: int, out_sdv_175: int)
{

  entry:
    out_sdv_160, out_dev, out_floor, out_sdv_175 := in_sdv_160, in_dev, in_floor, in_sdv_175;
    goto L138, exit;

  exit:
    return;

  L138:
    assume {:CounterLoop 4} {:Counter "floor"} true;
    goto anon46_Else;

  anon46_Else:
    assume {:partition} 4 > out_floor;
    assume {:nonnull} in_flash_7 != 0;
    assume in_flash_7 > 0;
    assume {:nonnull} in_flash_7 != 0;
    assume in_flash_7 > 0;
    out_dev := in_sdv_173;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} out_dev != 64;
    goto anon47_Else;

  anon47_Else:
    assume {:partition} out_dev == 65;
    goto L148;

  L148:
    call {:si_unique_call 2250} out_sdv_175 := checkToggle_sdv_static_function_8(in_flash_7);
    goto anon48_Else;

  anon48_Else:
    assume {:partition} out_sdv_175 != 0;
    call {:si_unique_call 2249} out_sdv_160 := chkASICDownload_sdv_static_function_8(in_flash_7, out_floor);
    goto anon49_Then;

  anon49_Then:
    assume {:partition} out_sdv_160 == 0;
    assume {:nonnull} in_flash_7 != 0;
    assume in_flash_7 > 0;
    out_floor := out_floor + 1;
    goto anon49_Then_dummy;

  anon49_Then_dummy:
    call {:si_unique_call 2251} {:si_old_unique_call 1} out_sdv_160, out_dev, out_floor, out_sdv_175 := docPlusIdentify_loop_L138(out_sdv_160, in_sdv_173, out_dev, out_floor, out_sdv_175, in_flash_7);
    return;

  anon57_Then:
    assume {:partition} out_dev == 64;
    goto L148;
}



procedure {:LoopProcedure} docPlusIdentify_loop_L138(in_sdv_160: int, in_sdv_173: int, in_dev: int, in_floor: int, in_sdv_175: int, in_flash_7: int) returns (out_sdv_160: int, out_dev: int, out_floor: int, out_sdv_175: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_160 == 0 || out_sdv_160 == 115 || out_sdv_160 == 111 || out_sdv_160 == in_sdv_160;
  free ensures {:va_keep} out_dev == in_dev || out_dev == in_sdv_173;
  free ensures {:va_keep} out_sdv_175 == 1 || out_sdv_175 == 0 || out_sdv_175 == in_sdv_175;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 5} docPlusIdentify_loop_L108(in_dev: int, in_floor: int, in_maxDevs: int, in_flash_7: int) returns (out_dev: int, out_floor: int)
{

  entry:
    out_dev, out_floor := in_dev, in_floor;
    goto L108, exit;

  exit:
    return;

  L108:
    assume {:CounterLoop 4} {:Counter "floor"} true;
    goto anon44_Else;

  anon44_Else:
    assume {:partition} 4 > out_floor;
    assume {:nonnull} in_flash_7 != 0;
    assume in_flash_7 > 0;
    out_dev := 0;
    goto L114;

  L114:
    call {:si_unique_call 2252} out_dev := docPlusIdentify_loop_L114(out_dev, in_maxDevs, in_flash_7);
    goto L114_last;

  L114_last:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} in_maxDevs > out_dev;
    assume {:nonnull} in_flash_7 != 0;
    assume in_flash_7 > 0;
    call {:si_unique_call 2253} command_sdv_static_function_8(in_flash_7, 255);
    out_dev := out_dev + 1;
    assume false;
    return;

  anon45_Then:
    assume {:partition} out_dev >= in_maxDevs;
    out_floor := out_floor + 1;
    goto anon45_Then_dummy;

  anon45_Then_dummy:
    call {:si_unique_call 2254} {:si_old_unique_call 1} out_dev, out_floor := docPlusIdentify_loop_L108(out_dev, out_floor, in_maxDevs, in_flash_7);
    return;
}



procedure {:LoopProcedure} docPlusIdentify_loop_L108(in_dev: int, in_floor: int, in_maxDevs: int, in_flash_7: int) returns (out_dev: int, out_floor: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flRegisterFTL_loop_L22(in_i_5: int, in_Tmp_326: int, in_Tmp_327: int, in_Tmp_328: int) returns (out_i_5: int, out_Tmp_326: int, out_Tmp_327: int, out_Tmp_328: int)
{

  entry:
    out_i_5, out_Tmp_326, out_Tmp_327, out_Tmp_328 := in_i_5, in_Tmp_326, in_Tmp_327, in_Tmp_328;
    goto L22, exit;

  exit:
    return;

  L22:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon6_Else;

  anon6_Else:
    assume {:partition} 8 > out_i_5;
    out_Tmp_327 := out_i_5;
    out_Tmp_328 := out_i_5;
    out_Tmp_326 := out_i_5;
    out_i_5 := out_i_5 + 1;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    havoc out_i_5;
    return;
}



procedure {:LoopProcedure} flRegisterFTL_loop_L22(in_i_5: int, in_Tmp_326: int, in_Tmp_327: int, in_Tmp_328: int) returns (out_i_5: int, out_Tmp_326: int, out_Tmp_327: int, out_Tmp_328: int);
  free ensures {:va_keep} out_Tmp_326 == in_i_5 || out_Tmp_326 == in_Tmp_326;
  free ensures {:va_keep} out_Tmp_327 == in_i_5 || out_Tmp_327 == in_Tmp_327;
  free ensures {:va_keep} out_Tmp_328 == in_i_5 || out_Tmp_328 == in_Tmp_328;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation amdMTDIdentify_loop_L19(in_inlv_1: int, in_pVol_11: int) returns (out_inlv_1: int)
{
  var vslice_dummy_var_1477: int;

  entry:
    out_inlv_1 := in_inlv_1;
    goto L19, exit;

  exit:
    return;

  L19:
    goto anon71_Else;

  anon71_Else:
    assume {:partition} out_inlv_1 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} out_inlv_1 == 1;
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    havoc vslice_dummy_var_1477;
    call {:si_unique_call 2257} flSetWindowBusWidth(vslice_dummy_var_1477, 8);
    goto L22;

  L22:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    call {:si_unique_call 2256} flIntelIdentify(in_pVol_11, li2bplFunctionConstant558, 0);
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon74_Else;

  anon74_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon75_Else;

  anon75_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon76_Else;

  anon76_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon77_Else;

  anon77_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon78_Else;

  anon78_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon79_Else;

  anon79_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon80_Else;

  anon80_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon81_Else;

  anon81_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon82_Else;

  anon82_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon83_Else;

  anon83_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon84_Else;

  anon84_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon85_Else;

  anon85_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon86_Else;

  anon86_Else:
    assume {:nonnull} in_pVol_11 != 0;
    assume in_pVol_11 > 0;
    goto anon87_Else;

  anon87_Else:
    call {:si_unique_call 2255} out_inlv_1 := corral_nondet();
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    call {:si_unique_call 2258} {:si_old_unique_call 1} out_inlv_1 := amdMTDIdentify_loop_L19(out_inlv_1, in_pVol_11);
    return;

  anon73_Then:
    assume {:partition} out_inlv_1 != 1;
    goto L22;
}



procedure {:LoopProcedure} amdMTDIdentify_loop_L19(in_inlv_1: int, in_pVol_11: int) returns (out_inlv_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flRegisterDOCSOC_loop_L4(in_Tmp_404: int, in_pVol_21: int, in_Tmp_405: int, in_Tmp_406: int, in_boogieTmp: int) returns (out_Tmp_404: int, out_pVol_21: int, out_Tmp_405: int, out_Tmp_406: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1478: int;

  entry:
    out_Tmp_404, out_pVol_21, out_Tmp_405, out_Tmp_406, out_boogieTmp := in_Tmp_404, in_pVol_21, in_Tmp_405, in_Tmp_406, in_boogieTmp;
    goto L4, exit;

  exit:
    return;

  L4:
    goto anon8_Else;

  anon8_Else:
    havoc out_Tmp_406;
    call {:si_unique_call 2259} out_pVol_21 := flSocketOf(out_Tmp_406);
    assume {:nonnull} out_pVol_21 != 0;
    assume out_pVol_21 > 0;
    call {:si_unique_call 2260} docSocketInit(out_pVol_21);
    call {:si_unique_call 2261} flSetWindowSize(out_pVol_21, 2);
    assume {:nonnull} out_pVol_21 != 0;
    assume out_pVol_21 > 0;
    havoc vslice_dummy_var_1478;
    call {:si_unique_call 2262} out_boogieTmp := windowBaseAddress(vslice_dummy_var_1478);
    assume {:nonnull} out_pVol_21 != 0;
    assume out_pVol_21 > 0;
    havoc out_Tmp_404;
    out_Tmp_405 := out_Tmp_404;
    assume {:nonnull} out_pVol_21 != 0;
    assume out_pVol_21 > 0;
    assume {:nonnull} pdriveInfo != 0;
    assume pdriveInfo > 0;
    goto anon8_Else_dummy;

  anon8_Else_dummy:
    call {:si_unique_call 2263} {:si_old_unique_call 1} out_Tmp_404, out_pVol_21, out_Tmp_405, out_Tmp_406, out_boogieTmp := flRegisterDOCSOC_loop_L4(out_Tmp_404, out_pVol_21, out_Tmp_405, out_Tmp_406, out_boogieTmp);
    return;
}



procedure {:LoopProcedure} flRegisterDOCSOC_loop_L4(in_Tmp_404: int, in_pVol_21: int, in_Tmp_405: int, in_Tmp_406: int, in_boogieTmp: int) returns (out_Tmp_404: int, out_pVol_21: int, out_Tmp_405: int, out_Tmp_406: int, out_boogieTmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flRegisterINFTL_loop_L15(in_i_6: int, in_Tmp_415: int) returns (out_i_6: int, out_Tmp_415: int)
{

  entry:
    out_i_6, out_Tmp_415 := in_i_6, in_Tmp_415;
    goto L15, exit;

  exit:
    return;

  L15:
    assume {:CounterLoop 20} {:Counter "i_6"} true;
    goto anon9_Else;

  anon9_Else:
    assume {:partition} 20 > out_i_6;
    out_Tmp_415 := out_i_6;
    out_i_6 := out_i_6 + 1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    havoc out_i_6;
    return;
}



procedure {:LoopProcedure} flRegisterINFTL_loop_L15(in_i_6: int, in_Tmp_415: int) returns (out_i_6: int, out_Tmp_415: int);
  free ensures {:va_keep} out_Tmp_415 == in_i_6 || out_Tmp_415 == in_Tmp_415;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 8} flRegisterINFTL_loop_L11(in_i_6: int, in_Tmp_413: int) returns (out_i_6: int, out_Tmp_413: int)
{

  entry:
    out_i_6, out_Tmp_413 := in_i_6, in_Tmp_413;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:CounterLoop 8} {:Counter "i_6"} true;
    goto anon8_Else;

  anon8_Else:
    assume {:partition} 8 > out_i_6;
    out_Tmp_413 := out_i_6;
    out_i_6 := out_i_6 + 1;
    goto anon8_Else_dummy;

  anon8_Else_dummy:
    call {:si_unique_call 2264} {:si_old_unique_call 1} out_i_6, out_Tmp_413 := flRegisterINFTL_loop_L11(out_i_6, out_Tmp_413);
    return;
}



procedure {:LoopProcedure} flRegisterINFTL_loop_L11(in_i_6: int, in_Tmp_413: int) returns (out_i_6: int, out_Tmp_413: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flRegisterNFTL_loop_L10(in_i_7: int, in_Tmp_429: int) returns (out_i_7: int, out_Tmp_429: int)
{

  entry:
    out_i_7, out_Tmp_429 := in_i_7, in_Tmp_429;
    goto L10, exit;

  exit:
    return;

  L10:
    assume {:CounterLoop 20} {:Counter "i_7"} true;
    goto anon6_Else;

  anon6_Else:
    assume {:partition} 20 > out_i_7;
    out_Tmp_429 := out_i_7;
    out_i_7 := out_i_7 + 1;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} flRegisterNFTL_loop_L10(in_i_7: int, in_Tmp_429: int) returns (out_i_7: int, out_Tmp_429: int);
  free ensures {:va_keep} out_Tmp_429 == in_i_7 || out_Tmp_429 == in_Tmp_429;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation doc2000Identify_sdv_static_function_15_loop_L67(in_dev_1: int, in_flash_10: int) returns (out_dev_1: int)
{

  entry:
    out_dev_1 := in_dev_1;
    goto L67, exit;

  exit:
    return;

  L67:
    assume {:CounterLoop 3} {:Counter "dev_1"} true;
    goto anon39_Else;

  anon39_Else:
    assume {:partition} 3 > out_dev_1;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    out_dev_1 := out_dev_1 + 1;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    havoc out_dev_1;
    return;
}



procedure {:LoopProcedure} doc2000Identify_sdv_static_function_15_loop_L67(in_dev_1: int, in_flash_10: int) returns (out_dev_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation doc2000Identify_sdv_static_function_15_loop_L105(in_Tmp_443: int, in_dev_1: int, in_maxDevs_1: int, in_flash_10: int) returns (out_Tmp_443: int, out_dev_1: int)
{

  entry:
    out_Tmp_443, out_dev_1 := in_Tmp_443, in_dev_1;
    goto L105, exit;

  exit:
    return;

  L105:
    goto anon42_Else;

  anon42_Else:
    assume {:partition} in_maxDevs_1 > out_dev_1;
    out_Tmp_443 := out_dev_1;
    call {:si_unique_call 2265} selectChip_sdv_static_function_15(in_flash_10, out_Tmp_443);
    call {:si_unique_call 2266} command_sdv_static_function_15(in_flash_10, 255);
    out_dev_1 := out_dev_1 + 1;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    call {:si_unique_call 2267} {:si_old_unique_call 1} out_Tmp_443, out_dev_1 := doc2000Identify_sdv_static_function_15_loop_L105(out_Tmp_443, out_dev_1, in_maxDevs_1, in_flash_10);
    return;
}



procedure {:LoopProcedure} doc2000Identify_sdv_static_function_15_loop_L105(in_Tmp_443: int, in_dev_1: int, in_maxDevs_1: int, in_flash_10: int) returns (out_Tmp_443: int, out_dev_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation doc2000Identify_sdv_static_function_15_loop_L126(in_Tmp_437: int, in_Tmp_444: int, in_address_1: int, in_sdv_196: int, in_addr: int, in_floorCnt: int, in_dev_1: int, in_floor_1: int, in_Tmp_467: int, in_maxDevs_1: int, in_flash_10: int) returns (out_Tmp_437: int, out_Tmp_444: int, out_sdv_196: int, out_floorCnt: int, out_dev_1: int, out_floor_1: int, out_Tmp_467: int, out_maxDevs_1: int)
{

  entry:
    out_Tmp_437, out_Tmp_444, out_sdv_196, out_floorCnt, out_dev_1, out_floor_1, out_Tmp_467, out_maxDevs_1 := in_Tmp_437, in_Tmp_444, in_sdv_196, in_floorCnt, in_dev_1, in_floor_1, in_Tmp_467, in_maxDevs_1;
    goto L126, exit;

  exit:
    return;

  L126:
    goto anon44_Else;

  anon44_Else:
    assume {:partition} out_maxDevs_1 > out_dev_1;
    assume {:nonnull} in_addr != 0;
    assume in_addr > 0;
    assume {:nonnull} in_address_1 != 0;
    assume in_address_1 > 0;
    call {:si_unique_call 2268} mapWin_sdv_static_function_15(in_flash_10, in_addr);
    call {:si_unique_call 2269} out_sdv_196 := readFlashID_sdv_static_function_15(in_flash_10, out_dev_1);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} out_sdv_196 == 1;
    out_floorCnt := out_floor_1 + 1;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} out_floor_1 != 0;
    goto L141;

  L141:
    assume {:nonnull} in_address_1 != 0;
    assume in_address_1 > 0;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    goto L142;

  L142:
    out_dev_1 := out_dev_1 + 1;
    goto L142_dummy;

  L142_dummy:
    call {:si_unique_call 2270} {:si_old_unique_call 1} out_Tmp_437, out_Tmp_444, out_sdv_196, out_floorCnt, out_dev_1, out_floor_1, out_Tmp_467, out_maxDevs_1 := doc2000Identify_sdv_static_function_15_loop_L126(out_Tmp_437, out_Tmp_444, in_address_1, out_sdv_196, in_addr, out_floorCnt, out_dev_1, out_floor_1, out_Tmp_467, out_maxDevs_1, in_flash_10);
    return;

  anon53_Then:
    assume {:partition} out_floor_1 == 0;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    havoc out_Tmp_444;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    havoc out_Tmp_467;
    assume {:nonnull} out_Tmp_444 != 0;
    assume out_Tmp_444 > 0;
    assume {:nonnull} out_Tmp_467 != 0;
    assume out_Tmp_467 > 0;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    goto L141;

  anon45_Then:
    assume {:partition} out_sdv_196 != 1;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} out_floor_1 != 0;
    out_dev_1 := out_maxDevs_1;
    out_floor_1 := 4;
    goto L142;

  anon46_Then:
    assume {:partition} out_floor_1 == 0;
    out_maxDevs_1 := out_dev_1;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    havoc out_Tmp_437;
    assume {:nonnull} out_Tmp_437 != 0;
    assume out_Tmp_437 > 0;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    goto L142;
}



procedure {:LoopProcedure} doc2000Identify_sdv_static_function_15_loop_L126(in_Tmp_437: int, in_Tmp_444: int, in_address_1: int, in_sdv_196: int, in_addr: int, in_floorCnt: int, in_dev_1: int, in_floor_1: int, in_Tmp_467: int, in_maxDevs_1: int, in_flash_10: int) returns (out_Tmp_437: int, out_Tmp_444: int, out_sdv_196: int, out_floorCnt: int, out_dev_1: int, out_floor_1: int, out_Tmp_467: int, out_maxDevs_1: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_196 == 0 || out_sdv_196 == 1 || out_sdv_196 == in_sdv_196;
  free ensures {:va_keep} out_floor_1 == 4 || out_floor_1 == in_floor_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 2} doc2000Identify_sdv_static_function_15_loop_L123(in_Tmp_437: int, in_Tmp_444: int, in_address_1: int, in_sdv_196: int, in_addr: int, in_floorCnt: int, in_dev_1: int, in_floor_1: int, in_Tmp_467: int, in_maxDevs_1: int, in_flash_10: int) returns (out_Tmp_437: int, out_Tmp_444: int, out_sdv_196: int, out_floorCnt: int, out_dev_1: int, out_floor_1: int, out_Tmp_467: int, out_maxDevs_1: int)
{

  entry:
    out_Tmp_437, out_Tmp_444, out_sdv_196, out_floorCnt, out_dev_1, out_floor_1, out_Tmp_467, out_maxDevs_1 := in_Tmp_437, in_Tmp_444, in_sdv_196, in_floorCnt, in_dev_1, in_floor_1, in_Tmp_467, in_maxDevs_1;
    goto L123, exit;

  exit:
    return;

  L123:
    assume {:CounterLoop 4} {:Counter "floor_1"} true;
    goto anon43_Else;

  anon43_Else:
    assume {:partition} 4 > out_floor_1;
    out_dev_1 := 0;
    goto L126;

  L126:
    call {:si_unique_call 2271} out_Tmp_437, out_Tmp_444, out_sdv_196, out_floorCnt, out_dev_1, out_floor_1, out_Tmp_467, out_maxDevs_1 := doc2000Identify_sdv_static_function_15_loop_L126(out_Tmp_437, out_Tmp_444, in_address_1, out_sdv_196, in_addr, out_floorCnt, out_dev_1, out_floor_1, out_Tmp_467, out_maxDevs_1, in_flash_10);
    goto L126_last;

  L126_last:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} out_maxDevs_1 > out_dev_1;
    assume {:nonnull} in_addr != 0;
    assume in_addr > 0;
    assume {:nonnull} in_address_1 != 0;
    assume in_address_1 > 0;
    call {:si_unique_call 2272} mapWin_sdv_static_function_15(in_flash_10, in_addr);
    call {:si_unique_call 2273} out_sdv_196 := readFlashID_sdv_static_function_15(in_flash_10, out_dev_1);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} out_sdv_196 == 1;
    out_floorCnt := out_floor_1 + 1;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} out_floor_1 != 0;
    goto L141;

  L141:
    assume {:nonnull} in_address_1 != 0;
    assume in_address_1 > 0;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    goto L142;

  L142:
    out_dev_1 := out_dev_1 + 1;
    assume false;
    return;

  anon53_Then:
    assume {:partition} out_floor_1 == 0;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    havoc out_Tmp_444;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    havoc out_Tmp_467;
    assume {:nonnull} out_Tmp_444 != 0;
    assume out_Tmp_444 > 0;
    assume {:nonnull} out_Tmp_467 != 0;
    assume out_Tmp_467 > 0;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    goto L141;

  anon45_Then:
    assume {:partition} out_sdv_196 != 1;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} out_floor_1 != 0;
    out_dev_1 := out_maxDevs_1;
    out_floor_1 := 4;
    goto L142;

  anon46_Then:
    assume {:partition} out_floor_1 == 0;
    out_maxDevs_1 := out_dev_1;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    havoc out_Tmp_437;
    assume {:nonnull} out_Tmp_437 != 0;
    assume out_Tmp_437 > 0;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    goto L142;

  anon44_Then:
    assume {:partition} out_dev_1 >= out_maxDevs_1;
    out_floor_1 := out_floor_1 + 1;
    goto anon44_Then_dummy;

  anon44_Then_dummy:
    call {:si_unique_call 2274} {:si_old_unique_call 1} out_Tmp_437, out_Tmp_444, out_sdv_196, out_floorCnt, out_dev_1, out_floor_1, out_Tmp_467, out_maxDevs_1 := doc2000Identify_sdv_static_function_15_loop_L123(out_Tmp_437, out_Tmp_444, in_address_1, out_sdv_196, in_addr, out_floorCnt, out_dev_1, out_floor_1, out_Tmp_467, out_maxDevs_1, in_flash_10);
    return;
}



procedure {:LoopProcedure} doc2000Identify_sdv_static_function_15_loop_L123(in_Tmp_437: int, in_Tmp_444: int, in_address_1: int, in_sdv_196: int, in_addr: int, in_floorCnt: int, in_dev_1: int, in_floor_1: int, in_Tmp_467: int, in_maxDevs_1: int, in_flash_10: int) returns (out_Tmp_437: int, out_Tmp_444: int, out_sdv_196: int, out_floorCnt: int, out_dev_1: int, out_floor_1: int, out_Tmp_467: int, out_maxDevs_1: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_196 == 0 || out_sdv_196 == 1 || out_sdv_196 == in_sdv_196;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation doc2000Identify_sdv_static_function_15_loop_L98(in_Tmp_439: int, in_Tmp_443: int, in_Tmp_452: int, in_dev_1: int, in_Tmp_466: int, in_maxDevs_1: int, in_Tmp_471: int, in_flash_10: int) returns (out_Tmp_439: int, out_Tmp_443: int, out_Tmp_452: int, out_dev_1: int, out_Tmp_466: int, out_Tmp_471: int)
{

  entry:
    out_Tmp_439, out_Tmp_443, out_Tmp_452, out_dev_1, out_Tmp_466, out_Tmp_471 := in_Tmp_439, in_Tmp_443, in_Tmp_452, in_dev_1, in_Tmp_466, in_Tmp_471;
    goto L98, exit;

  exit:
    return;

  L98:
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    havoc out_Tmp_452;
    assume {:nonnull} out_Tmp_452 != 0;
    assume out_Tmp_452 > 0;
    goto anon52_Else;

  anon52_Else:
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    havoc out_Tmp_471;
    assume {:nonnull} out_Tmp_471 != 0;
    assume out_Tmp_471 > 0;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    out_dev_1 := 0;
    goto L105;

  L105:
    call {:si_unique_call 2275} out_Tmp_443, out_dev_1 := doc2000Identify_sdv_static_function_15_loop_L105(out_Tmp_443, out_dev_1, in_maxDevs_1, in_flash_10);
    goto L105_last;

  L105_last:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} in_maxDevs_1 > out_dev_1;
    out_Tmp_443 := out_dev_1;
    call {:si_unique_call 2276} selectChip_sdv_static_function_15(in_flash_10, out_Tmp_443);
    call {:si_unique_call 2277} command_sdv_static_function_15(in_flash_10, 255);
    out_dev_1 := out_dev_1 + 1;
    assume false;
    return;

  anon42_Then:
    assume {:partition} out_dev_1 >= in_maxDevs_1;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    havoc out_Tmp_466;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    havoc out_Tmp_439;
    assume {:nonnull} in_flash_10 != 0;
    assume in_flash_10 > 0;
    assume {:nonnull} out_Tmp_439 != 0;
    assume out_Tmp_439 > 0;
    assume {:nonnull} out_Tmp_466 != 0;
    assume out_Tmp_466 > 0;
    goto anon42_Then_dummy;

  anon42_Then_dummy:
    call {:si_unique_call 2278} {:si_old_unique_call 1} out_Tmp_439, out_Tmp_443, out_Tmp_452, out_dev_1, out_Tmp_466, out_Tmp_471 := doc2000Identify_sdv_static_function_15_loop_L98(out_Tmp_439, out_Tmp_443, out_Tmp_452, out_dev_1, out_Tmp_466, in_maxDevs_1, out_Tmp_471, in_flash_10);
    return;
}



procedure {:LoopProcedure} doc2000Identify_sdv_static_function_15_loop_L98(in_Tmp_439: int, in_Tmp_443: int, in_Tmp_452: int, in_dev_1: int, in_Tmp_466: int, in_maxDevs_1: int, in_Tmp_471: int, in_flash_10: int) returns (out_Tmp_439: int, out_Tmp_443: int, out_Tmp_452: int, out_dev_1: int, out_Tmp_466: int, out_Tmp_471: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 2} writeSignals_sdv_static_function_15_loop_L10(in_i_8: int, in_sdv_203: int, in_junk_1: int, in_flash_17: int) returns (out_i_8: int, out_junk_1: int)
{

  entry:
    out_i_8, out_junk_1 := in_i_8, in_junk_1;
    goto L10, exit;

  exit:
    return;

  L10:
    assume {:CounterLoop 2} {:Counter "i_8"} true;
    goto anon3_Else;

  anon3_Else:
    assume {:partition} 2 > out_i_8;
    assume {:nonnull} in_flash_17 != 0;
    assume in_flash_17 > 0;
    out_junk_1 := out_junk_1 + in_sdv_203;
    out_i_8 := out_i_8 + 1;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    call {:si_unique_call 2279} {:si_old_unique_call 1} out_i_8, out_junk_1 := writeSignals_sdv_static_function_15_loop_L10(out_i_8, in_sdv_203, out_junk_1, in_flash_17);
    return;
}



procedure {:LoopProcedure} writeSignals_sdv_static_function_15_loop_L10(in_i_8: int, in_sdv_203: int, in_junk_1: int, in_flash_17: int) returns (out_i_8: int, out_junk_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 2} readFlashID_sdv_static_function_15_loop_L51(in_i_9: int, in_junk_2: int, in_sdv_213: int, in_flash_19: int) returns (out_i_9: int, out_junk_2: int)
{

  entry:
    out_i_9, out_junk_2 := in_i_9, in_junk_2;
    goto L51, exit;

  exit:
    return;

  L51:
    assume {:CounterLoop 2} {:Counter "i_9"} true;
    goto anon18_Else;

  anon18_Else:
    assume {:partition} 2 > out_i_9;
    assume {:nonnull} in_flash_19 != 0;
    assume in_flash_19 > 0;
    out_junk_2 := out_junk_2 + in_sdv_213;
    out_i_9 := out_i_9 + 1;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    call {:si_unique_call 2280} {:si_old_unique_call 1} out_i_9, out_junk_2 := readFlashID_sdv_static_function_15_loop_L51(out_i_9, out_junk_2, in_sdv_213, in_flash_19);
    return;
}



procedure {:LoopProcedure} readFlashID_sdv_static_function_15_loop_L51(in_i_9: int, in_junk_2: int, in_sdv_213: int, in_flash_19: int) returns (out_i_9: int, out_junk_2: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 2} readFlashID_sdv_static_function_15_loop_L29(in_i_9: int, in_sdv_205: int, in_junk_2: int, in_flash_19: int) returns (out_i_9: int, out_junk_2: int)
{

  entry:
    out_i_9, out_junk_2 := in_i_9, in_junk_2;
    goto L29, exit;

  exit:
    return;

  L29:
    assume {:CounterLoop 2} {:Counter "i_9"} true;
    goto anon17_Else;

  anon17_Else:
    assume {:partition} 2 > out_i_9;
    assume {:nonnull} in_flash_19 != 0;
    assume in_flash_19 > 0;
    out_junk_2 := out_junk_2 + in_sdv_205;
    out_i_9 := out_i_9 + 1;
    goto anon17_Else_dummy;

  anon17_Else_dummy:
    call {:si_unique_call 2281} {:si_old_unique_call 1} out_i_9, out_junk_2 := readFlashID_sdv_static_function_15_loop_L29(out_i_9, in_sdv_205, out_junk_2, in_flash_19);
    return;
}



procedure {:LoopProcedure} readFlashID_sdv_static_function_15_loop_L29(in_i_9: int, in_sdv_205: int, in_junk_2: int, in_flash_19: int) returns (out_i_9: int, out_junk_2: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation check43Format_loop_L80(in_i_10: int, in_Tmp_542: int, in_Tmp_544: int, in_buf_4: int, in_Tmp_545: int, in_blocksPerUnit: int, in_status_3: int, in_mediaHeaderBlock: int, in_Tmp_549: int, in_offset_1: int, in_Tmp_551: int, in_flash_20: int, in_vslice_dummy_var_85: int, in_vslice_dummy_var_86: int) returns (out_i_10: int, out_Tmp_542: int, out_Tmp_544: int, out_Tmp_545: int, out_status_3: int, out_Tmp_549: int, out_Tmp_551: int, out_vslice_dummy_var_85: int, out_vslice_dummy_var_86: int)
{

  entry:
    out_i_10, out_Tmp_542, out_Tmp_544, out_Tmp_545, out_status_3, out_Tmp_549, out_Tmp_551, out_vslice_dummy_var_85, out_vslice_dummy_var_86 := in_i_10, in_Tmp_542, in_Tmp_544, in_Tmp_545, in_status_3, in_Tmp_549, in_Tmp_551, in_vslice_dummy_var_85, in_vslice_dummy_var_86;
    goto L80, exit;

  exit:
    return;

  L80:
    assume {:CounterLoop 512} {:Counter "i_10"} true;
    goto anon49_Else;

  anon49_Else:
    assume {:partition} 512 > out_i_10;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} out_i_10 + in_offset_1 == in_mediaHeaderBlock;
    goto L85;

  L85:
    out_i_10 := out_i_10 + 1;
    goto L85_dummy;

  L85_dummy:
    call {:si_unique_call 2285} {:si_old_unique_call 1} out_i_10, out_Tmp_542, out_Tmp_544, out_Tmp_545, out_status_3, out_Tmp_549, out_Tmp_551, out_vslice_dummy_var_85, out_vslice_dummy_var_86 := check43Format_loop_L80(out_i_10, out_Tmp_542, out_Tmp_544, in_buf_4, out_Tmp_545, in_blocksPerUnit, out_status_3, in_mediaHeaderBlock, out_Tmp_549, in_offset_1, out_Tmp_551, in_flash_20, out_vslice_dummy_var_85, out_vslice_dummy_var_86);
    return;

  anon50_Then:
    assume {:partition} out_i_10 + in_offset_1 != in_mediaHeaderBlock;
    out_Tmp_549 := out_i_10;
    assume {:nonnull} in_buf_4 != 0;
    assume in_buf_4 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    out_Tmp_551 := in_blocksPerUnit;
    out_Tmp_545 := out_i_10 + in_offset_1;
    assume {:IndirectCall} true;
    assume {:nonnull} in_flash_20 != 0;
    assume in_flash_20 > 0;
    call {:si_unique_call 2284} out_status_3 := flashNoErase_sdv_static_function_3(in_flash_20, out_Tmp_545, out_Tmp_551);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} out_status_3 != 0;
    out_Tmp_542 := out_i_10 + in_offset_1;
    call {:si_unique_call 2282} out_vslice_dummy_var_85 := markUnitBad(in_flash_20, out_Tmp_542);
    goto L85;

  anon51_Then:
    assume {:partition} out_status_3 == 0;
    goto L85;

  anon54_Then:
    out_Tmp_544 := out_i_10 + in_offset_1;
    call {:si_unique_call 2283} out_vslice_dummy_var_86 := markUnitBad(in_flash_20, out_Tmp_544);
    goto L85;
}



procedure {:LoopProcedure} check43Format_loop_L80(in_i_10: int, in_Tmp_542: int, in_Tmp_544: int, in_buf_4: int, in_Tmp_545: int, in_blocksPerUnit: int, in_status_3: int, in_mediaHeaderBlock: int, in_Tmp_549: int, in_offset_1: int, in_Tmp_551: int, in_flash_20: int, in_vslice_dummy_var_85: int, in_vslice_dummy_var_86: int) returns (out_i_10: int, out_Tmp_542: int, out_Tmp_544: int, out_Tmp_545: int, out_status_3: int, out_Tmp_549: int, out_Tmp_551: int, out_vslice_dummy_var_85: int, out_vslice_dummy_var_86: int);
  free ensures {:va_keep} out_status_3 == 19 || out_status_3 == in_status_3;
  free ensures {:va_keep} out_Tmp_551 == in_Tmp_551 || out_Tmp_551 == in_blocksPerUnit;
  free ensures {:va_keep} out_vslice_dummy_var_85 == 0 || out_vslice_dummy_var_85 == in_vslice_dummy_var_85;
  free ensures {:va_keep} out_vslice_dummy_var_86 == 0 || out_vslice_dummy_var_86 == in_vslice_dummy_var_86;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation check43Format_loop_L68(in_i_10: int, in_Tmp_542: int, in_fl_16: int, in_Tmp_544: int, in_buf_4: int, in_Tmp_545: int, in_blocksPerUnit: int, in_addr_1: int, in_Tmp_547: int, in_status_3: int, in_mediaHeaderBlock: int, in_Tmp_549: int, in_offset_1: int, in_Tmp_551: int, in_flash_20: int, in_vslice_dummy_var_85: int, in_vslice_dummy_var_86: int) returns (out_i_10: int, out_Tmp_542: int, out_fl_16: int, out_Tmp_544: int, out_Tmp_545: int, out_Tmp_547: int, out_status_3: int, out_Tmp_549: int, out_offset_1: int, out_Tmp_551: int, out_vslice_dummy_var_85: int, out_vslice_dummy_var_86: int)
{

  entry:
    out_i_10, out_Tmp_542, out_fl_16, out_Tmp_544, out_Tmp_545, out_Tmp_547, out_status_3, out_Tmp_549, out_offset_1, out_Tmp_551, out_vslice_dummy_var_85, out_vslice_dummy_var_86 := in_i_10, in_Tmp_542, in_fl_16, in_Tmp_544, in_Tmp_545, in_Tmp_547, in_status_3, in_Tmp_549, in_offset_1, in_Tmp_551, in_vslice_dummy_var_85, in_vslice_dummy_var_86;
    goto L68, exit;

  exit:
    return;

  L68:
    goto anon47_Else;

  anon47_Else:
    out_Tmp_547 := in_addr_1 + out_offset_1 + 512;
    assume {:IndirectCall} true;
    assume {:nonnull} in_flash_20 != 0;
    assume in_flash_20 > 0;
    call {:si_unique_call 2290} out_fl_16 := flashRead_sdv_static_function_3(in_flash_20, out_Tmp_547, in_buf_4, 512, 2);
    goto anon48_Then;

  anon48_Then:
    assume {:partition} out_fl_16 == 0;
    out_i_10 := 0;
    goto L80;

  L80:
    call {:si_unique_call 2286} out_i_10, out_Tmp_542, out_Tmp_544, out_Tmp_545, out_status_3, out_Tmp_549, out_Tmp_551, out_vslice_dummy_var_85, out_vslice_dummy_var_86 := check43Format_loop_L80(out_i_10, out_Tmp_542, out_Tmp_544, in_buf_4, out_Tmp_545, in_blocksPerUnit, out_status_3, in_mediaHeaderBlock, out_Tmp_549, out_offset_1, out_Tmp_551, in_flash_20, out_vslice_dummy_var_85, out_vslice_dummy_var_86);
    goto L80_last;

  L80_last:
    assume {:CounterLoop 512} {:Counter "i_10"} true;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} 512 > out_i_10;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} out_i_10 + out_offset_1 == in_mediaHeaderBlock;
    goto L85;

  L85:
    out_i_10 := out_i_10 + 1;
    assume false;
    return;

  anon50_Then:
    assume {:partition} out_i_10 + out_offset_1 != in_mediaHeaderBlock;
    out_Tmp_549 := out_i_10;
    assume {:nonnull} in_buf_4 != 0;
    assume in_buf_4 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    out_Tmp_551 := in_blocksPerUnit;
    out_Tmp_545 := out_i_10 + out_offset_1;
    assume {:IndirectCall} true;
    assume {:nonnull} in_flash_20 != 0;
    assume in_flash_20 > 0;
    call {:si_unique_call 2289} out_status_3 := flashNoErase_sdv_static_function_3(in_flash_20, out_Tmp_545, out_Tmp_551);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} out_status_3 != 0;
    out_Tmp_542 := out_i_10 + out_offset_1;
    call {:si_unique_call 2287} out_vslice_dummy_var_85 := markUnitBad(in_flash_20, out_Tmp_542);
    goto L85;

  anon51_Then:
    assume {:partition} out_status_3 == 0;
    goto L85;

  anon54_Then:
    out_Tmp_544 := out_i_10 + out_offset_1;
    call {:si_unique_call 2288} out_vslice_dummy_var_86 := markUnitBad(in_flash_20, out_Tmp_544);
    goto L85;

  anon49_Then:
    assume {:partition} out_i_10 >= 512;
    out_offset_1 := out_offset_1 + 512;
    goto anon49_Then_dummy;

  anon49_Then_dummy:
    call {:si_unique_call 2291} {:si_old_unique_call 1} out_i_10, out_Tmp_542, out_fl_16, out_Tmp_544, out_Tmp_545, out_Tmp_547, out_status_3, out_Tmp_549, out_offset_1, out_Tmp_551, out_vslice_dummy_var_85, out_vslice_dummy_var_86 := check43Format_loop_L68(out_i_10, out_Tmp_542, out_fl_16, out_Tmp_544, in_buf_4, out_Tmp_545, in_blocksPerUnit, in_addr_1, out_Tmp_547, out_status_3, in_mediaHeaderBlock, out_Tmp_549, out_offset_1, out_Tmp_551, in_flash_20, out_vslice_dummy_var_85, out_vslice_dummy_var_86);
    return;
}



procedure {:LoopProcedure} check43Format_loop_L68(in_i_10: int, in_Tmp_542: int, in_fl_16: int, in_Tmp_544: int, in_buf_4: int, in_Tmp_545: int, in_blocksPerUnit: int, in_addr_1: int, in_Tmp_547: int, in_status_3: int, in_mediaHeaderBlock: int, in_Tmp_549: int, in_offset_1: int, in_Tmp_551: int, in_flash_20: int, in_vslice_dummy_var_85: int, in_vslice_dummy_var_86: int) returns (out_i_10: int, out_Tmp_542: int, out_fl_16: int, out_Tmp_544: int, out_Tmp_545: int, out_Tmp_547: int, out_status_3: int, out_Tmp_549: int, out_offset_1: int, out_Tmp_551: int, out_vslice_dummy_var_85: int, out_vslice_dummy_var_86: int);
  modifies alloc;
  free ensures {:va_keep} out_fl_16 == 0 || out_fl_16 == in_fl_16;
  free ensures {:va_keep} out_status_3 == 19 || out_status_3 == in_status_3;
  free ensures {:va_keep} out_Tmp_551 == in_Tmp_551 || out_Tmp_551 == in_blocksPerUnit;
  free ensures {:va_keep} out_vslice_dummy_var_85 == 0 || out_vslice_dummy_var_85 == in_vslice_dummy_var_85;
  free ensures {:va_keep} out_vslice_dummy_var_86 == 0 || out_vslice_dummy_var_86 == in_vslice_dummy_var_86;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation check43Format_loop_L62(in_blockShift: int, in_offset_1: int, in_mediaSize: int) returns (out_blockShift: int, out_offset_1: int)
{

  entry:
    out_blockShift, out_offset_1 := in_blockShift, in_offset_1;
    goto L62, exit;

  exit:
    return;

  L62:
    goto anon46_Else;

  anon46_Else:
    assume {:partition} in_mediaSize > out_offset_1;
    call {:si_unique_call 2292} out_offset_1 := corral_nondet();
    out_blockShift := out_blockShift + 1;
    goto anon46_Else_dummy;

  anon46_Else_dummy:
    havoc out_blockShift;
    return;
}



procedure {:LoopProcedure} check43Format_loop_L62(in_blockShift: int, in_offset_1: int, in_mediaSize: int) returns (out_blockShift: int, out_offset_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation check43Format_loop_L50(in_buf_4: int, in_blockSize: int, in_Tmp_546: int, in_addr_1: int, in_status_3: int, in_offset_1: int, in_flash_20: int) returns (out_Tmp_546: int, out_status_3: int, out_offset_1: int)
{

  entry:
    out_Tmp_546, out_status_3, out_offset_1 := in_Tmp_546, in_status_3, in_offset_1;
    goto L50, exit;

  exit:
    return;

  L50:
    goto anon43_Else;

  anon43_Else:
    assume {:partition} in_addr_1 + in_blockSize > out_offset_1;
    goto anon45_Else;

  anon45_Else:
    assume {:partition} out_status_3 == 0;
    out_Tmp_546 := in_addr_1 + out_offset_1;
    assume {:IndirectCall} true;
    assume {:nonnull} in_flash_20 != 0;
    assume in_flash_20 > 0;
    call {:si_unique_call 2293} out_status_3 := flashRead_sdv_static_function_3(in_flash_20, out_Tmp_546, in_buf_4, 512, 2);
    out_offset_1 := out_offset_1 + 512;
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    call {:si_unique_call 2294} {:si_old_unique_call 1} out_Tmp_546, out_status_3, out_offset_1 := check43Format_loop_L50(in_buf_4, in_blockSize, out_Tmp_546, in_addr_1, out_status_3, out_offset_1, in_flash_20);
    return;
}



procedure {:LoopProcedure} check43Format_loop_L50(in_buf_4: int, in_blockSize: int, in_Tmp_546: int, in_addr_1: int, in_status_3: int, in_offset_1: int, in_flash_20: int) returns (out_Tmp_546: int, out_status_3: int, out_offset_1: int);
  modifies alloc;
  free ensures {:va_keep} out_status_3 == 0 || out_status_3 == in_status_3;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation check43Format_loop_L32(in_buf_4: int, in_blockSize: int, in_Tmp_546: int, in_addr_1: int, in_sdv_224: int, in_fl_17: int, in_status_3: int, in_offset_1: int, in_mediaSize: int, in_flash_20: int) returns (out_Tmp_546: int, out_addr_1: int, out_fl_17: int, out_status_3: int, out_offset_1: int)
{

  entry:
    out_Tmp_546, out_addr_1, out_fl_17, out_status_3, out_offset_1 := in_Tmp_546, in_addr_1, in_fl_17, in_status_3, in_offset_1;
    goto L32, exit;

  exit:
    return;

  L32:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} in_mediaSize > out_addr_1;
    assume {:IndirectCall} true;
    assume {:nonnull} in_flash_20 != 0;
    assume in_flash_20 > 0;
    call {:si_unique_call 2295} out_fl_17 := flashRead_sdv_static_function_3(in_flash_20, out_addr_1, in_buf_4, 5, 0);
    goto anon41_Then;

  anon41_Then:
    assume {:partition} out_fl_17 == 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} in_sdv_224 != 0;
    out_addr_1 := out_addr_1 + in_blockSize;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 2298} {:si_old_unique_call 1} out_Tmp_546, out_addr_1, out_fl_17, out_status_3, out_offset_1 := check43Format_loop_L32(in_buf_4, in_blockSize, out_Tmp_546, out_addr_1, in_sdv_224, out_fl_17, out_status_3, out_offset_1, in_mediaSize, in_flash_20);
    return;

  anon42_Then:
    assume {:partition} in_sdv_224 == 0;
    goto L33;

  L33:
    goto anon40_Then;

  anon40_Then:
    assume {:partition} out_addr_1 != in_mediaSize;
    out_offset_1 := out_addr_1 + 512;
    out_status_3 := 0;
    goto L50;

  L50:
    call {:si_unique_call 2296} out_Tmp_546, out_status_3, out_offset_1 := check43Format_loop_L50(in_buf_4, in_blockSize, out_Tmp_546, out_addr_1, out_status_3, out_offset_1, in_flash_20);
    goto L50_last;

  L50_last:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} out_addr_1 + in_blockSize > out_offset_1;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} out_status_3 == 0;
    out_Tmp_546 := out_addr_1 + out_offset_1;
    assume {:IndirectCall} true;
    assume {:nonnull} in_flash_20 != 0;
    assume in_flash_20 > 0;
    call {:si_unique_call 2297} out_status_3 := flashRead_sdv_static_function_3(in_flash_20, out_Tmp_546, in_buf_4, 512, 2);
    out_offset_1 := out_offset_1 + 512;
    assume false;
    return;

  anon45_Then:
    assume {:partition} out_status_3 != 0;
    goto L51;

  L51:
    goto anon44_Then;

  anon44_Then:
    assume {:partition} out_offset_1 == out_addr_1 + 1024;
    goto anon44_Then_dummy;

  anon44_Then_dummy:
    goto L_BAF_1;

  anon43_Then:
    assume {:partition} out_offset_1 >= out_addr_1 + in_blockSize;
    goto L51;

  anon39_Then:
    assume {:partition} out_addr_1 >= in_mediaSize;
    goto L33;
}



procedure {:LoopProcedure} check43Format_loop_L32(in_buf_4: int, in_blockSize: int, in_Tmp_546: int, in_addr_1: int, in_sdv_224: int, in_fl_17: int, in_status_3: int, in_offset_1: int, in_mediaSize: int, in_flash_20: int) returns (out_Tmp_546: int, out_addr_1: int, out_fl_17: int, out_status_3: int, out_offset_1: int);
  modifies alloc;
  free ensures {:va_keep} out_fl_17 == 0 || out_fl_17 == in_fl_17;
  free ensures {:va_keep} out_status_3 == 0 || out_status_3 == in_status_3;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flMount_loop_L48(in_Tmp_555: int, in_iTL: int, in_sdv_231: int, in_Tmp_558: int) returns (out_Tmp_555: int, out_iTL: int, out_Tmp_558: int)
{

  entry:
    out_Tmp_555, out_iTL, out_Tmp_558 := in_Tmp_555, in_iTL, in_Tmp_558;
    goto L48, exit;

  exit:
    return;

  L48:
    goto anon48_Else;

  anon48_Else:
    out_Tmp_555 := out_iTL;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L53;

  L53:
    out_iTL := out_iTL + 1;
    goto L53_dummy;

  L53_dummy:
    havoc out_iTL;
    return;

  anon54_Then:
    out_Tmp_558 := out_iTL;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume out_Tmp_558 != 2;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume out_Tmp_558 != 1;
    goto anon57_Then;

  anon57_Then:
    assume out_Tmp_558 == 0;
    goto L54;

  L54:
    goto anon49_Else;

  anon49_Else:
    assume {:partition} in_sdv_231 != 0;
    goto L53;

  anon56_Then:
    assume out_Tmp_558 == 1;
    goto L54;

  anon55_Then:
    assume out_Tmp_558 == 2;
    goto L54;
}



procedure {:LoopProcedure} flMount_loop_L48(in_Tmp_555: int, in_iTL: int, in_sdv_231: int, in_Tmp_558: int) returns (out_Tmp_555: int, out_iTL: int, out_Tmp_558: int);
  free ensures {:va_keep} out_Tmp_555 == in_iTL || out_Tmp_555 == in_Tmp_555;
  free ensures {:va_keep} out_Tmp_558 == in_Tmp_558 || out_Tmp_558 == in_iTL;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flMount_loop_L28(in_iTL: int, in_Tmp_556: int, in_Tmp_557: int, in_flashStatus: int, in_status_4: int, in_flash_21: int) returns (out_iTL: int, out_Tmp_556: int, out_Tmp_557: int)
{

  entry:
    out_iTL, out_Tmp_556, out_Tmp_557 := in_iTL, in_Tmp_556, in_Tmp_557;
    goto L28, exit;

  exit:
    return;

  L28:
    goto anon41_Else;

  anon41_Else:
    goto anon43_Else;

  anon43_Else:
    assume {:partition} in_status_4 != 0;
    goto anon44_Else;

  anon44_Else:
    assume {:partition} in_status_4 != 115;
    out_Tmp_556 := out_iTL;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} in_flashStatus != 0;
    goto L37;

  L37:
    out_Tmp_557 := out_iTL;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume out_Tmp_557 != 2;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume out_Tmp_557 != 1;
    goto anon53_Then;

  anon53_Then:
    assume out_Tmp_557 == 0;
    goto L33;

  L33:
    out_iTL := out_iTL + 1;
    goto L33_dummy;

  L33_dummy:
    havoc out_iTL;
    return;

  anon52_Then:
    assume out_Tmp_557 == 1;
    goto L33;

  anon51_Then:
    assume out_Tmp_557 == 2;
    goto L33;

  anon45_Then:
    assume {:partition} in_flashStatus == 0;
    goto L37;

  anon50_Then:
    goto L33;
}



procedure {:LoopProcedure} flMount_loop_L28(in_iTL: int, in_Tmp_556: int, in_Tmp_557: int, in_flashStatus: int, in_status_4: int, in_flash_21: int) returns (out_iTL: int, out_Tmp_556: int, out_Tmp_557: int);
  free ensures {:va_keep} out_Tmp_556 == in_iTL || out_Tmp_556 == in_Tmp_556;
  free ensures {:va_keep} out_Tmp_557 == in_iTL || out_Tmp_557 == in_Tmp_557;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flPreMount_loop_L58(in_badBlockNo: int, in_Tmp_561: int, in_iUnit: int, in_unitsPerFloor: int, in_callStatus: int, in_Tmp_567: int, in_sdv_237: int, in_endUnit: int, in_bUnit: int, in_ioreq_2: int, in_flash_22: int, in_vslice_dummy_var_88: int, in_vslice_dummy_var_89: int) returns (out_badBlockNo: int, out_Tmp_561: int, out_iUnit: int, out_Tmp_567: int, out_sdv_237: int, out_bUnit: int, out_vslice_dummy_var_88: int, out_vslice_dummy_var_89: int)
{
  var vslice_dummy_var_1479: int;

  entry:
    out_badBlockNo, out_Tmp_561, out_iUnit, out_Tmp_567, out_sdv_237, out_bUnit, out_vslice_dummy_var_88, out_vslice_dummy_var_89 := in_badBlockNo, in_Tmp_561, in_iUnit, in_Tmp_567, in_sdv_237, in_bUnit, in_vslice_dummy_var_88, in_vslice_dummy_var_89;
    goto L58, exit;

  exit:
    return;

  L58:
    goto anon62_Else;

  anon62_Else:
    assume {:partition} in_endUnit > out_iUnit;
    assume {:nonnull} in_ioreq_2 != 0;
    assume in_ioreq_2 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} out_bUnit == out_iUnit;
    out_badBlockNo := out_badBlockNo + 1;
    out_Tmp_567 := out_badBlockNo * 4;
    assume {:nonnull} in_ioreq_2 != 0;
    assume in_ioreq_2 > 0;
    havoc vslice_dummy_var_1479;
    call {:si_unique_call 2299} out_sdv_237 := flAddLongToFarPointer(vslice_dummy_var_1479, out_Tmp_567);
    call {:si_unique_call 2300} out_bUnit := corral_nondet();
    assume {:nonnull} in_flash_22 != 0;
    assume in_flash_22 > 0;
    call {:si_unique_call 2301} out_vslice_dummy_var_88 := markUnitBad(in_flash_22, out_iUnit);
    goto L77;

  L77:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} INTDIV(out_iUnit + 1, in_unitsPerFloor) != 0;
    out_Tmp_561 := 1;
    goto L80;

  L80:
    out_iUnit := out_iUnit + out_Tmp_561;
    goto L80_dummy;

  L80_dummy:
    call {:si_unique_call 2303} {:si_old_unique_call 1} out_badBlockNo, out_Tmp_561, out_iUnit, out_Tmp_567, out_sdv_237, out_bUnit, out_vslice_dummy_var_88, out_vslice_dummy_var_89 := flPreMount_loop_L58(out_badBlockNo, out_Tmp_561, out_iUnit, in_unitsPerFloor, in_callStatus, out_Tmp_567, out_sdv_237, in_endUnit, out_bUnit, in_ioreq_2, in_flash_22, out_vslice_dummy_var_88, out_vslice_dummy_var_89);
    return;

  anon65_Then:
    assume {:partition} INTDIV(out_iUnit + 1, in_unitsPerFloor) == 0;
    assume {:nonnull} in_flash_22 != 0;
    assume in_flash_22 > 0;
    havoc out_Tmp_561;
    goto L80;

  anon64_Then:
    assume {:partition} out_bUnit != out_iUnit;
    goto L61;

  L61:
    assume {:nonnull} in_flash_22 != 0;
    assume in_flash_22 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} in_callStatus != 0;
    call {:si_unique_call 2302} out_vslice_dummy_var_89 := markUnitBad(in_flash_22, out_iUnit);
    goto L77;

  anon66_Then:
    assume {:partition} in_callStatus == 0;
    goto L77;

  anon63_Then:
    goto L61;
}



procedure {:LoopProcedure} flPreMount_loop_L58(in_badBlockNo: int, in_Tmp_561: int, in_iUnit: int, in_unitsPerFloor: int, in_callStatus: int, in_Tmp_567: int, in_sdv_237: int, in_endUnit: int, in_bUnit: int, in_ioreq_2: int, in_flash_22: int, in_vslice_dummy_var_88: int, in_vslice_dummy_var_89: int) returns (out_badBlockNo: int, out_Tmp_561: int, out_iUnit: int, out_Tmp_567: int, out_sdv_237: int, out_bUnit: int, out_vslice_dummy_var_88: int, out_vslice_dummy_var_89: int);
  free ensures {:va_keep} out_vslice_dummy_var_88 == 0 || out_vslice_dummy_var_88 == in_vslice_dummy_var_88;
  free ensures {:va_keep} out_vslice_dummy_var_89 == 0 || out_vslice_dummy_var_89 == in_vslice_dummy_var_89;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flPreMount_loop_L28(in_Tmp_562: int, in_Tmp_563: int, in_layerStatus: int, in_iTL_1: int) returns (out_Tmp_562: int, out_Tmp_563: int, out_iTL_1: int)
{

  entry:
    out_Tmp_562, out_Tmp_563, out_iTL_1 := in_Tmp_562, in_Tmp_563, in_iTL_1;
    goto L28, exit;

  exit:
    return;

  L28:
    goto anon55_Else;

  anon55_Else:
    goto anon57_Else;

  anon57_Else:
    assume {:partition} in_layerStatus != 0;
    out_Tmp_563 := out_iTL_1;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    out_Tmp_562 := out_iTL_1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume out_Tmp_562 != 2;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume out_Tmp_562 != 1;
    goto anon71_Then;

  anon71_Then:
    assume out_Tmp_562 == 0;
    goto L32;

  L32:
    out_iTL_1 := out_iTL_1 + 1;
    goto L32_dummy;

  L32_dummy:
    havoc out_iTL_1;
    return;

  anon70_Then:
    assume out_Tmp_562 == 1;
    goto L32;

  anon69_Then:
    assume out_Tmp_562 == 2;
    goto L32;

  anon68_Then:
    goto L32;
}



procedure {:LoopProcedure} flPreMount_loop_L28(in_Tmp_562: int, in_Tmp_563: int, in_layerStatus: int, in_iTL_1: int) returns (out_Tmp_562: int, out_Tmp_563: int, out_iTL_1: int);
  free ensures {:va_keep} out_Tmp_562 == in_iTL_1 || out_Tmp_562 == in_Tmp_562;
  free ensures {:va_keep} out_Tmp_563 == in_iTL_1 || out_Tmp_563 == in_Tmp_563;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flFormat_loop_L38(in_Tmp_573: int, in_Tmp_576: int, in_iTL_2: int, in_flashStatus_1: int, in_status_5: int, in_flash_23: int) returns (out_Tmp_573: int, out_Tmp_576: int, out_iTL_2: int)
{

  entry:
    out_Tmp_573, out_Tmp_576, out_iTL_2 := in_Tmp_573, in_Tmp_576, in_iTL_2;
    goto L38, exit;

  exit:
    return;

  L38:
    goto anon45_Else;

  anon45_Else:
    goto anon46_Else;

  anon46_Else:
    assume {:partition} in_status_5 == 26;
    out_Tmp_576 := out_iTL_2;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} in_flashStatus_1 != 0;
    goto L46;

  L46:
    out_Tmp_573 := out_iTL_2;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume out_Tmp_573 != 2;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume out_Tmp_573 != 1;
    goto anon55_Then;

  anon55_Then:
    assume out_Tmp_573 == 0;
    goto L42;

  L42:
    out_iTL_2 := out_iTL_2 + 1;
    goto L42_dummy;

  L42_dummy:
    havoc out_iTL_2;
    return;

  anon54_Then:
    assume out_Tmp_573 == 1;
    goto L42;

  anon53_Then:
    assume out_Tmp_573 == 2;
    goto L42;

  anon47_Then:
    assume {:partition} in_flashStatus_1 == 0;
    goto L46;

  anon52_Then:
    goto L42;
}



procedure {:LoopProcedure} flFormat_loop_L38(in_Tmp_573: int, in_Tmp_576: int, in_iTL_2: int, in_flashStatus_1: int, in_status_5: int, in_flash_23: int) returns (out_Tmp_573: int, out_Tmp_576: int, out_iTL_2: int);
  free ensures {:va_keep} out_Tmp_573 == in_iTL_2 || out_Tmp_573 == in_Tmp_573;
  free ensures {:va_keep} out_Tmp_576 == in_iTL_2 || out_Tmp_576 == in_Tmp_576;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flFormat_loop_L25(in_partitionNo: int, in_Tmp_578: int, in_partitionPtr: int, in_formatParams: int) returns (out_partitionNo: int, out_Tmp_578: int)
{

  entry:
    out_partitionNo, out_Tmp_578 := in_partitionNo, in_Tmp_578;
    goto L25, exit;

  exit:
    return;

  L25:
    assume {:nonnull} in_formatParams != 0;
    assume in_formatParams > 0;
    goto anon43_Then;

  anon43_Then:
    assume {:nonnull} in_partitionPtr != 0;
    assume in_partitionPtr > 0;
    havoc out_Tmp_578;
    assume {:nonnull} out_Tmp_578 != 0;
    assume out_Tmp_578 > 0;
    goto anon51_Then;

  anon51_Then:
    out_partitionNo := out_partitionNo + 1;
    goto anon51_Then_dummy;

  anon51_Then_dummy:
    havoc out_partitionNo;
    return;
}



procedure {:LoopProcedure} flFormat_loop_L25(in_partitionNo: int, in_Tmp_578: int, in_partitionPtr: int, in_formatParams: int) returns (out_partitionNo: int, out_Tmp_578: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation markUnitBad_loop_L8(in_sdv_244: int, in_offset_2: int, in_flash_24: int, in_vslice_dummy_var_91: int) returns (out_offset_2: int, out_vslice_dummy_var_91: int)
{

  entry:
    out_offset_2, out_vslice_dummy_var_91 := in_offset_2, in_vslice_dummy_var_91;
    goto L8, exit;

  exit:
    return;

  L8:
    assume {:nonnull} in_flash_24 != 0;
    assume in_flash_24 > 0;
    goto anon5_Else;

  anon5_Else:
    call {:si_unique_call 2304} out_vslice_dummy_var_91 := corral_nondet();
    assume {:nonnull} in_flash_24 != 0;
    assume in_flash_24 > 0;
    goto anon6_Else;

  anon6_Else:
    assume {:partition} in_sdv_244 != 0;
    assume {:nonnull} in_flash_24 != 0;
    assume in_flash_24 > 0;
    havoc out_offset_2;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    havoc out_offset_2;
    return;
}



procedure {:LoopProcedure} markUnitBad_loop_L8(in_sdv_244: int, in_offset_2: int, in_flash_24: int, in_vslice_dummy_var_91: int) returns (out_offset_2: int, out_vslice_dummy_var_91: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation i28f008Identify_loop_L57(in_i_11: int, in_flashPtr_7: int, in_pVol_23: int) returns (out_i_11: int)
{

  entry:
    out_i_11 := in_i_11;
    goto L57, exit;

  exit:
    return;

  L57:
    assume {:nonnull} in_pVol_23 != 0;
    assume in_pVol_23 > 0;
    goto anon31_Else;

  anon31_Else:
    out_i_11 := out_i_11 + 1;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    havoc out_i_11;
    return;
}



procedure {:LoopProcedure} i28f008Identify_loop_L57(in_i_11: int, in_flashPtr_7: int, in_pVol_23: int) returns (out_i_11: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation i28f008Identify_loop_L47(in_i_11: int, in_Tmp_590: int, in_flashPtr_7: int, in_sdv_246: int, in_iChip: int, in_pVol_23: int) returns (out_i_11: int, out_Tmp_590: int, out_flashPtr_7: int, out_sdv_246: int, out_iChip: int)
{
  var vslice_dummy_var_1480: int;

  entry:
    out_i_11, out_Tmp_590, out_flashPtr_7, out_sdv_246, out_iChip := in_i_11, in_Tmp_590, in_flashPtr_7, in_sdv_246, in_iChip;
    goto L47, exit;

  exit:
    return;

  L47:
    assume {:nonnull} in_pVol_23 != 0;
    assume in_pVol_23 > 0;
    goto anon30_Else;

  anon30_Else:
    assume {:nonnull} in_pVol_23 != 0;
    assume in_pVol_23 > 0;
    havoc out_Tmp_590;
    assume {:nonnull} in_pVol_23 != 0;
    assume in_pVol_23 > 0;
    havoc vslice_dummy_var_1480;
    call {:si_unique_call 2306} out_sdv_246 := flMap(vslice_dummy_var_1480, out_Tmp_590);
    out_flashPtr_7 := out_sdv_246;
    out_i_11 := 0;
    goto L57;

  L57:
    call {:si_unique_call 2305} out_i_11 := i28f008Identify_loop_L57(out_i_11, out_flashPtr_7, in_pVol_23);
    goto L57_last;

  L57_last:
    assume {:nonnull} in_pVol_23 != 0;
    assume in_pVol_23 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    out_i_11 := out_i_11 + 1;
    assume false;
    return;

  anon31_Then:
    assume {:nonnull} in_pVol_23 != 0;
    assume in_pVol_23 > 0;
    havoc out_iChip;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    call {:si_unique_call 2307} {:si_old_unique_call 1} out_i_11, out_Tmp_590, out_flashPtr_7, out_sdv_246, out_iChip := i28f008Identify_loop_L47(out_i_11, out_Tmp_590, out_flashPtr_7, out_sdv_246, out_iChip, in_pVol_23);
    return;
}



procedure {:LoopProcedure} i28f008Identify_loop_L47(in_i_11: int, in_Tmp_590: int, in_flashPtr_7: int, in_sdv_246: int, in_iChip: int, in_pVol_23: int) returns (out_i_11: int, out_Tmp_590: int, out_flashPtr_7: int, out_sdv_246: int, out_iChip: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation absWrite_sdv_static_function_24_loop_L14(in_currSector: int, in_iSector: int, in_userBuffer: int, in_sectorCount: int, in_pVol_25: int, in_vslice_dummy_var_94: int) returns (out_currSector: int, out_iSector: int, out_vslice_dummy_var_94: int)
{

  entry:
    out_currSector, out_iSector, out_vslice_dummy_var_94 := in_currSector, in_iSector, in_vslice_dummy_var_94;
    goto L14, exit;

  exit:
    return;

  L14:
    goto anon21_Else;

  anon21_Else:
    assume {:partition} in_sectorCount > out_iSector;
    assume {:nonnull} in_pVol_25 != 0;
    assume in_pVol_25 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} in_pVol_25 != 0;
    assume in_pVol_25 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 2308} out_vslice_dummy_var_94 := replaceFATsector(in_pVol_25, out_currSector, in_userBuffer);
    goto L17;

  L17:
    out_iSector := out_iSector + 1;
    out_currSector := out_currSector + 1;
    goto L17_dummy;

  L17_dummy:
    call {:si_unique_call 2309} {:si_old_unique_call 1} out_currSector, out_iSector, out_vslice_dummy_var_94 := absWrite_sdv_static_function_24_loop_L14(out_currSector, out_iSector, in_userBuffer, in_sectorCount, in_pVol_25, out_vslice_dummy_var_94);
    return;

  anon23_Then:
    goto L17;

  anon22_Then:
    goto L17;
}



procedure {:LoopProcedure} absWrite_sdv_static_function_24_loop_L14(in_currSector: int, in_iSector: int, in_userBuffer: int, in_sectorCount: int, in_pVol_25: int, in_vslice_dummy_var_94: int) returns (out_currSector: int, out_iSector: int, out_vslice_dummy_var_94: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation absWrite_sdv_static_function_24_loop_L34(in_currSector: int, in_fl_20: int, in_userBuffer: int, in_sectorCount: int, in_pVol_25: int, in_ioreq_4: int) returns (out_currSector: int)
{

  entry:
    out_currSector := in_currSector;
    goto L34, exit;

  exit:
    return;

  L34:
    assume {:nonnull} in_ioreq_4 != 0;
    assume in_ioreq_4 > 0;
    goto anon25_Else;

  anon25_Else:
    assume {:nonnull} in_pVol_25 != 0;
    assume in_pVol_25 > 0;
    goto anon26_Then;

  anon26_Then:
    assume {:partition} in_fl_20 == 0;
    assume {:nonnull} in_ioreq_4 != 0;
    assume in_ioreq_4 > 0;
    out_currSector := out_currSector + 1;
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    call {:si_unique_call 2310} {:si_old_unique_call 1} out_currSector := absWrite_sdv_static_function_24_loop_L34(out_currSector, in_fl_20, in_userBuffer, in_sectorCount, in_pVol_25, in_ioreq_4);
    return;
}



procedure {:LoopProcedure} absWrite_sdv_static_function_24_loop_L34(in_currSector: int, in_fl_20: int, in_userBuffer: int, in_sectorCount: int, in_pVol_25: int, in_ioreq_4: int) returns (out_currSector: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flSetEnvSocket_loop_L15(in_volume: int, in_status_6: int, in_variableType: int, in_socket_3: int, in_value: int, in_prevValue: int) returns (out_volume: int, out_status_6: int)
{

  entry:
    out_volume, out_status_6 := in_volume, in_status_6;
    goto L15, exit;

  exit:
    return;

  L15:
    goto anon18_Then;

  anon18_Then:
    assume {:partition} out_volume < 3;
    goto anon19_Then;

  anon19_Then:
    assume {:partition} out_status_6 == 0;
    call {:si_unique_call 2311} out_status_6 := flSetEnvVolume(in_variableType, in_socket_3, out_volume, in_value, in_prevValue);
    out_volume := out_volume + 1;
    goto anon19_Then_dummy;

  anon19_Then_dummy:
    call {:si_unique_call 2312} {:si_old_unique_call 1} out_volume, out_status_6 := flSetEnvSocket_loop_L15(out_volume, out_status_6, in_variableType, in_socket_3, in_value, in_prevValue);
    return;
}



procedure {:LoopProcedure} flSetEnvSocket_loop_L15(in_volume: int, in_status_6: int, in_variableType: int, in_socket_3: int, in_value: int, in_prevValue: int) returns (out_volume: int, out_status_6: int);
  modifies alloc, initDone, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} out_status_6 == 51 || out_status_6 == 106 || out_status_6 == 0 || out_status_6 == in_status_6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation socketIntervalRoutine_sdv_static_function_24_loop_L8(in_Tmp_672: int, in_sdv_319: int, in_Tmp_673: int, in_pVol_35: int, in_Tmp_676: int, in_volNo_4: int, in_Tmp_677: int) returns (out_Tmp_672: int, out_sdv_319: int, out_Tmp_673: int, out_Tmp_676: int, out_volNo_4: int, out_Tmp_677: int)
{
  var vslice_dummy_var_1481: int;

  entry:
    out_Tmp_672, out_sdv_319, out_Tmp_673, out_Tmp_676, out_volNo_4, out_Tmp_677 := in_Tmp_672, in_sdv_319, in_Tmp_673, in_Tmp_676, in_volNo_4, in_Tmp_677;
    goto L8, exit;

  exit:
    return;

  L8:
    goto anon5_Else;

  anon5_Else:
    out_Tmp_673 := out_volNo_4;
    havoc out_Tmp_676;
    call {:si_unique_call 2315} out_sdv_319 := flTakeMutex(out_Tmp_676);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} out_sdv_319 != 0;
    assume {:nonnull} in_pVol_35 != 0;
    assume in_pVol_35 > 0;
    havoc vslice_dummy_var_1481;
    call {:si_unique_call 2313} flIntervalRoutine(vslice_dummy_var_1481);
    out_Tmp_672 := out_volNo_4;
    havoc out_Tmp_677;
    call {:si_unique_call 2314} flFreeMutex(out_Tmp_677);
    goto L14;

  L14:
    out_volNo_4 := out_volNo_4 + 1;
    goto L14_dummy;

  L14_dummy:
    call {:si_unique_call 2316} {:si_old_unique_call 1} out_Tmp_672, out_sdv_319, out_Tmp_673, out_Tmp_676, out_volNo_4, out_Tmp_677 := socketIntervalRoutine_sdv_static_function_24_loop_L8(out_Tmp_672, out_sdv_319, out_Tmp_673, in_pVol_35, out_Tmp_676, out_volNo_4, out_Tmp_677);
    return;

  anon6_Then:
    assume {:partition} out_sdv_319 == 0;
    goto L14;
}



procedure {:LoopProcedure} socketIntervalRoutine_sdv_static_function_24_loop_L8(in_Tmp_672: int, in_sdv_319: int, in_Tmp_673: int, in_pVol_35: int, in_Tmp_676: int, in_volNo_4: int, in_Tmp_677: int) returns (out_Tmp_672: int, out_sdv_319: int, out_Tmp_673: int, out_Tmp_676: int, out_volNo_4: int, out_Tmp_677: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} out_sdv_319 == 1 || out_sdv_319 == 0 || out_sdv_319 == in_sdv_319;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flBuildGeometry_loop_L20(in_temp: int, in_capacity: int, in_cylinders: int, in_heads: int, in_sectors: int) returns (out_temp: int)
{

  entry:
    out_temp := in_temp;
    goto L20, exit;

  exit:
    return;

  L20:
    assume {:nonnull} in_sectors != 0;
    assume in_sectors > 0;
    goto anon13_Else;

  anon13_Else:
    assume {:nonnull} in_heads != 0;
    assume in_heads > 0;
    assume {:nonnull} in_cylinders != 0;
    assume in_cylinders > 0;
    assume {:nonnull} in_heads != 0;
    assume in_heads > 0;
    havoc out_temp;
    assume {:nonnull} in_sectors != 0;
    assume in_sectors > 0;
    goto anon13_Else_dummy;

  anon13_Else_dummy:
    call {:si_unique_call 2317} {:si_old_unique_call 1} out_temp := flBuildGeometry_loop_L20(out_temp, in_capacity, in_cylinders, in_heads, in_sectors);
    return;
}



procedure {:LoopProcedure} flBuildGeometry_loop_L20(in_temp: int, in_capacity: int, in_cylinders: int, in_heads: int, in_sectors: int) returns (out_temp: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation findFreeVolume_sdv_static_function_24_loop_L5(in_Tmp_715: int, in_volNo_5: int) returns (out_Tmp_715: int, out_volNo_5: int)
{

  entry:
    out_Tmp_715, out_volNo_5 := in_Tmp_715, in_volNo_5;
    goto L5, exit;

  exit:
    return;

  L5:
    goto anon7_Else;

  anon7_Else:
    assume {:partition} 20 > out_volNo_5;
    out_Tmp_715 := out_volNo_5;
    goto anon9_Else;

  anon9_Else:
    out_volNo_5 := out_volNo_5 + 1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    havoc out_volNo_5;
    return;
}



procedure {:LoopProcedure} findFreeVolume_sdv_static_function_24_loop_L5(in_Tmp_715: int, in_volNo_5: int) returns (out_Tmp_715: int, out_volNo_5: int);
  free ensures {:va_keep} out_Tmp_715 == in_volNo_5 || out_Tmp_715 == in_Tmp_715;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation mountVolume_sdv_static_function_24_loop_L47(in_ptCount: int, in_partitionTable_1: int, in_ptSector: int, in_extendedPtFound: int, in_Tmp_736: int, in_ptEntry: int, in_primaryPtFound: int, in_Tmp_737: int, in_pVol_39: int, in_bootSectors: int, in_boogieTmp: int) returns (out_ptCount: int, out_ptSector: int, out_extendedPtFound: int, out_Tmp_736: int, out_primaryPtFound: int, out_Tmp_737: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1482: int;
  var vslice_dummy_var_1483: int;

  entry:
    out_ptCount, out_ptSector, out_extendedPtFound, out_Tmp_736, out_primaryPtFound, out_Tmp_737, out_boogieTmp := in_ptCount, in_ptSector, in_extendedPtFound, in_Tmp_736, in_primaryPtFound, in_Tmp_737, in_boogieTmp;
    goto L47, exit;

  exit:
    return;

  L47:
    assume {:CounterLoop 4} {:Counter "ptCount"} true;
    goto anon51_Else;

  anon51_Else:
    assume {:partition} 4 > out_ptCount;
    goto anon52_Else;

  anon52_Else:
    assume {:partition} out_primaryPtFound == 0;
    goto anon53_Else;

  anon53_Else:
    assume {:partition} out_extendedPtFound == 0;
    out_Tmp_737 := out_ptCount;
    assume {:nonnull} in_partitionTable_1 != 0;
    assume in_partitionTable_1 > 0;
    havoc out_Tmp_736;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L61;

  L61:
    out_ptCount := out_ptCount + 1;
    goto L61_dummy;

  L61_dummy:
    call {:si_unique_call 2320} {:si_old_unique_call 1} out_ptCount, out_ptSector, out_extendedPtFound, out_Tmp_736, out_primaryPtFound, out_Tmp_737, out_boogieTmp := mountVolume_sdv_static_function_24_loop_L47(out_ptCount, in_partitionTable_1, out_ptSector, out_extendedPtFound, out_Tmp_736, in_ptEntry, out_primaryPtFound, out_Tmp_737, in_pVol_39, in_bootSectors, out_boogieTmp);
    return;

  anon56_Then:
    goto L54;

  L54:
    out_primaryPtFound := 1;
    assume {:nonnull} in_pVol_39 != 0;
    assume in_pVol_39 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    havoc vslice_dummy_var_1482;
    call {:si_unique_call 2318} out_boogieTmp := fromUNALLONG(vslice_dummy_var_1482);
    assume {:nonnull} in_bootSectors != 0;
    assume in_bootSectors > 0;
    assume {:nonnull} in_pVol_39 != 0;
    assume in_pVol_39 > 0;
    goto L61;

  anon57_Then:
    out_extendedPtFound := 1;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    havoc vslice_dummy_var_1483;
    call {:si_unique_call 2319} out_ptSector := fromUNALLONG(vslice_dummy_var_1483);
    goto L61;

  anon58_Then:
    goto L54;

  anon66_Then:
    goto L54;
}



procedure {:LoopProcedure} mountVolume_sdv_static_function_24_loop_L47(in_ptCount: int, in_partitionTable_1: int, in_ptSector: int, in_extendedPtFound: int, in_Tmp_736: int, in_ptEntry: int, in_primaryPtFound: int, in_Tmp_737: int, in_pVol_39: int, in_bootSectors: int, in_boogieTmp: int) returns (out_ptCount: int, out_ptSector: int, out_extendedPtFound: int, out_Tmp_736: int, out_primaryPtFound: int, out_Tmp_737: int, out_boogieTmp: int);
  free ensures {:va_keep} out_extendedPtFound == 1 || out_extendedPtFound == in_extendedPtFound;
  free ensures {:va_keep} out_primaryPtFound == 1 || out_primaryPtFound == in_primaryPtFound;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation mountVolume_sdv_static_function_24_loop_L24(in_ptCount: int, in_partitionTable_1: int, in_ptSector: int, in_extended: int, in_extendedPtFound: int, in_Tmp_736: int, in_sdv_327: int, in_ptEntry: int, in_primaryPtFound: int, in_Tmp_737: int, in_pVol_39: int, in_bootSectors: int, in_boogieTmp: int) returns (out_ptCount: int, out_partitionTable_1: int, out_ptSector: int, out_extended: int, out_extendedPtFound: int, out_Tmp_736: int, out_sdv_327: int, out_primaryPtFound: int, out_Tmp_737: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1484: int;
  var vslice_dummy_var_1485: int;

  entry:
    out_ptCount, out_partitionTable_1, out_ptSector, out_extended, out_extendedPtFound, out_Tmp_736, out_sdv_327, out_primaryPtFound, out_Tmp_737, out_boogieTmp := in_ptCount, in_partitionTable_1, in_ptSector, in_extended, in_extendedPtFound, in_Tmp_736, in_sdv_327, in_primaryPtFound, in_Tmp_737, in_boogieTmp;
    goto L24, exit;

  exit:
    return;

  L24:
    assume {:CounterLoop 8} {:Counter "extended"} true;
    goto anon46_Else;

  anon46_Else:
    assume {:partition} 8 > out_extended;
    goto anon47_Else;

  anon47_Else:
    assume {:partition} out_primaryPtFound == 0;
    goto anon48_Else;

  anon48_Else:
    assume {:partition} out_extendedPtFound == 1;
    out_extendedPtFound := 0;
    call {:si_unique_call 2324} out_sdv_327 := findSector(in_pVol_39, out_ptSector);
    out_partitionTable_1 := out_sdv_327;
    goto anon65_Else;

  anon65_Else:
    assume {:partition} out_partitionTable_1 != 0;
    goto anon49_Then;

  anon49_Then:
    assume {:partition} out_partitionTable_1 != dataErrorObject;
    assume {:nonnull} out_partitionTable_1 != 0;
    assume out_partitionTable_1 > 0;
    goto anon50_Else;

  anon50_Else:
    out_ptCount := 0;
    goto L47;

  L47:
    call {:si_unique_call 2321} out_ptCount, out_ptSector, out_extendedPtFound, out_Tmp_736, out_primaryPtFound, out_Tmp_737, out_boogieTmp := mountVolume_sdv_static_function_24_loop_L47(out_ptCount, out_partitionTable_1, out_ptSector, out_extendedPtFound, out_Tmp_736, in_ptEntry, out_primaryPtFound, out_Tmp_737, in_pVol_39, in_bootSectors, out_boogieTmp);
    goto L47_last;

  L47_last:
    assume {:CounterLoop 4} {:Counter "ptCount"} true;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} 4 > out_ptCount;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} out_primaryPtFound == 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} out_extendedPtFound == 0;
    out_Tmp_737 := out_ptCount;
    assume {:nonnull} out_partitionTable_1 != 0;
    assume out_partitionTable_1 > 0;
    havoc out_Tmp_736;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} out_Tmp_736 != 0;
    assume out_Tmp_736 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L61;

  L61:
    out_ptCount := out_ptCount + 1;
    assume false;
    return;

  anon56_Then:
    goto L54;

  L54:
    out_primaryPtFound := 1;
    assume {:nonnull} in_pVol_39 != 0;
    assume in_pVol_39 > 0;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    havoc vslice_dummy_var_1484;
    call {:si_unique_call 2322} out_boogieTmp := fromUNALLONG(vslice_dummy_var_1484);
    assume {:nonnull} in_bootSectors != 0;
    assume in_bootSectors > 0;
    assume {:nonnull} in_pVol_39 != 0;
    assume in_pVol_39 > 0;
    goto L61;

  anon57_Then:
    out_extendedPtFound := 1;
    assume {:nonnull} in_ptEntry != 0;
    assume in_ptEntry > 0;
    havoc vslice_dummy_var_1485;
    call {:si_unique_call 2323} out_ptSector := fromUNALLONG(vslice_dummy_var_1485);
    goto L61;

  anon58_Then:
    goto L54;

  anon66_Then:
    goto L54;

  anon53_Then:
    assume {:partition} out_extendedPtFound != 0;
    goto L48;

  L48:
    out_extended := out_extended + 1;
    goto L48_dummy;

  L48_dummy:
    call {:si_unique_call 2325} {:si_old_unique_call 1} out_ptCount, out_partitionTable_1, out_ptSector, out_extended, out_extendedPtFound, out_Tmp_736, out_sdv_327, out_primaryPtFound, out_Tmp_737, out_boogieTmp := mountVolume_sdv_static_function_24_loop_L24(out_ptCount, out_partitionTable_1, out_ptSector, out_extended, out_extendedPtFound, out_Tmp_736, out_sdv_327, in_ptEntry, out_primaryPtFound, out_Tmp_737, in_pVol_39, in_bootSectors, out_boogieTmp);
    return;

  anon52_Then:
    assume {:partition} out_primaryPtFound != 0;
    goto L48;

  anon51_Then:
    assume {:partition} out_ptCount >= 4;
    goto L48;
}



procedure {:LoopProcedure} mountVolume_sdv_static_function_24_loop_L24(in_ptCount: int, in_partitionTable_1: int, in_ptSector: int, in_extended: int, in_extendedPtFound: int, in_Tmp_736: int, in_sdv_327: int, in_ptEntry: int, in_primaryPtFound: int, in_Tmp_737: int, in_pVol_39: int, in_bootSectors: int, in_boogieTmp: int) returns (out_ptCount: int, out_partitionTable_1: int, out_ptSector: int, out_extended: int, out_extendedPtFound: int, out_Tmp_736: int, out_sdv_327: int, out_primaryPtFound: int, out_Tmp_737: int, out_boogieTmp: int);
  free ensures {:va_keep} out_extendedPtFound == 1 || out_extendedPtFound == 0 || out_extendedPtFound == in_extendedPtFound;
  free ensures {:va_keep} out_primaryPtFound == 1 || out_primaryPtFound == in_primaryPtFound;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 3} dismountPhysicalDrive_sdv_static_function_24_loop_L14(in_Tmp_740: int, in_Tmp_741: int, in_Tmp_742: int, in_Tmp_743: int, in_Tmp_744: int, in_Tmp_746: int, in_fl_36: int, in_Tmp_748: int, in_Tmp_749: int, in_volNo_6: int, in_Tmp_751: int, in_partition_2: int, in_socketNo_3: int) returns (out_Tmp_740: int, out_Tmp_741: int, out_Tmp_742: int, out_Tmp_743: int, out_Tmp_744: int, out_Tmp_746: int, out_fl_36: int, out_Tmp_748: int, out_Tmp_749: int, out_volNo_6: int, out_Tmp_751: int, out_partition_2: int)
{

  entry:
    out_Tmp_740, out_Tmp_741, out_Tmp_742, out_Tmp_743, out_Tmp_744, out_Tmp_746, out_fl_36, out_Tmp_748, out_Tmp_749, out_volNo_6, out_Tmp_751, out_partition_2 := in_Tmp_740, in_Tmp_741, in_Tmp_742, in_Tmp_743, in_Tmp_744, in_Tmp_746, in_fl_36, in_Tmp_748, in_Tmp_749, in_volNo_6, in_Tmp_751, in_partition_2;
    goto L14, exit;

  exit:
    return;

  L14:
    assume {:CounterLoop 3} {:Counter "partition_2"} true;
    goto anon10_Else;

  anon10_Else:
    assume {:partition} 4 > out_partition_2;
    out_Tmp_741 := out_partition_2;
    out_Tmp_744 := in_socketNo_3;
    havoc out_Tmp_749;
    assume {:nonnull} out_Tmp_749 != 0;
    assume out_Tmp_749 > 0;
    havoc out_volNo_6;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} out_volNo_6 != 255;
    out_Tmp_746 := out_volNo_6;
    havoc out_Tmp_748;
    call {:si_unique_call 2326} out_fl_36 := dismountVolume(out_Tmp_748);
    goto anon11_Then;

  anon11_Then:
    assume {:partition} out_fl_36 == 0;
    out_Tmp_740 := out_partition_2;
    out_Tmp_743 := in_socketNo_3;
    havoc out_Tmp_751;
    assume {:nonnull} out_Tmp_751 != 0;
    assume out_Tmp_751 > 0;
    out_Tmp_742 := out_volNo_6;
    goto L18;

  L18:
    out_partition_2 := out_partition_2 + 1;
    goto L18_dummy;

  L18_dummy:
    call {:si_unique_call 2327} {:si_old_unique_call 1} out_Tmp_740, out_Tmp_741, out_Tmp_742, out_Tmp_743, out_Tmp_744, out_Tmp_746, out_fl_36, out_Tmp_748, out_Tmp_749, out_volNo_6, out_Tmp_751, out_partition_2 := dismountPhysicalDrive_sdv_static_function_24_loop_L14(out_Tmp_740, out_Tmp_741, out_Tmp_742, out_Tmp_743, out_Tmp_744, out_Tmp_746, out_fl_36, out_Tmp_748, out_Tmp_749, out_volNo_6, out_Tmp_751, out_partition_2, in_socketNo_3);
    return;

  anon12_Then:
    assume {:partition} out_volNo_6 == 255;
    goto L18;
}



procedure {:LoopProcedure} dismountPhysicalDrive_sdv_static_function_24_loop_L14(in_Tmp_740: int, in_Tmp_741: int, in_Tmp_742: int, in_Tmp_743: int, in_Tmp_744: int, in_Tmp_746: int, in_fl_36: int, in_Tmp_748: int, in_Tmp_749: int, in_volNo_6: int, in_Tmp_751: int, in_partition_2: int, in_socketNo_3: int) returns (out_Tmp_740: int, out_Tmp_741: int, out_Tmp_742: int, out_Tmp_743: int, out_Tmp_744: int, out_Tmp_746: int, out_fl_36: int, out_Tmp_748: int, out_Tmp_749: int, out_volNo_6: int, out_Tmp_751: int, out_partition_2: int);
  free ensures {:va_keep} out_Tmp_743 == in_Tmp_743 || out_Tmp_743 == in_socketNo_3;
  free ensures {:va_keep} out_Tmp_744 == in_Tmp_744 || out_Tmp_744 == in_socketNo_3;
  free ensures {:va_keep} out_fl_36 == 0 || out_fl_36 == in_fl_36;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flInitGlobalVars_loop_L17(in_i_12: int, in_j_1: int, in_Tmp_757: int, in_Tmp_758: int, in_Tmp_760: int) returns (out_j_1: int, out_Tmp_757: int, out_Tmp_758: int, out_Tmp_760: int)
{

  entry:
    out_j_1, out_Tmp_757, out_Tmp_758, out_Tmp_760 := in_j_1, in_Tmp_757, in_Tmp_758, in_Tmp_760;
    goto L17, exit;

  exit:
    return;

  L17:
    assume {:CounterLoop 8} {:Counter "j_1"} true;
    goto anon12_Else;

  anon12_Else:
    assume {:partition} 8 > out_j_1;
    out_Tmp_758 := out_j_1;
    out_Tmp_760 := in_i_12;
    havoc out_Tmp_757;
    assume {:nonnull} out_Tmp_757 != 0;
    assume out_Tmp_757 > 0;
    out_j_1 := out_j_1 + 1;
    goto anon12_Else_dummy;

  anon12_Else_dummy:
    call {:si_unique_call 2328} {:si_old_unique_call 1} out_j_1, out_Tmp_757, out_Tmp_758, out_Tmp_760 := flInitGlobalVars_loop_L17(in_i_12, out_j_1, out_Tmp_757, out_Tmp_758, out_Tmp_760);
    return;
}



procedure {:LoopProcedure} flInitGlobalVars_loop_L17(in_i_12: int, in_j_1: int, in_Tmp_757: int, in_Tmp_758: int, in_Tmp_760: int) returns (out_j_1: int, out_Tmp_757: int, out_Tmp_758: int, out_Tmp_760: int);
  free ensures {:va_keep} out_Tmp_760 == in_Tmp_760 || out_Tmp_760 == in_i_12;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flInitGlobalVars_loop_L13(in_i_12: int, in_Tmp_755: int, in_j_1: int, in_Tmp_759: int, in_Tmp_762: int) returns (out_Tmp_755: int, out_j_1: int, out_Tmp_759: int, out_Tmp_762: int)
{

  entry:
    out_Tmp_755, out_j_1, out_Tmp_759, out_Tmp_762 := in_Tmp_755, in_j_1, in_Tmp_759, in_Tmp_762;
    goto L13, exit;

  exit:
    return;

  L13:
    assume {:CounterLoop 4} {:Counter "j_1"} true;
    goto anon11_Else;

  anon11_Else:
    assume {:partition} 4 > out_j_1;
    out_Tmp_759 := out_j_1;
    out_Tmp_755 := in_i_12;
    havoc out_Tmp_762;
    assume {:nonnull} out_Tmp_762 != 0;
    assume out_Tmp_762 > 0;
    out_j_1 := out_j_1 + 1;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    call {:si_unique_call 2329} {:si_old_unique_call 1} out_Tmp_755, out_j_1, out_Tmp_759, out_Tmp_762 := flInitGlobalVars_loop_L13(in_i_12, out_Tmp_755, out_j_1, out_Tmp_759, out_Tmp_762);
    return;
}



procedure {:LoopProcedure} flInitGlobalVars_loop_L13(in_i_12: int, in_Tmp_755: int, in_j_1: int, in_Tmp_759: int, in_Tmp_762: int) returns (out_Tmp_755: int, out_j_1: int, out_Tmp_759: int, out_Tmp_762: int);
  free ensures {:va_keep} out_Tmp_755 == in_Tmp_755 || out_Tmp_755 == in_i_12;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 9} flInitGlobalVars_loop_L9(in_i_12: int, in_Tmp_755: int, in_Tmp_756: int, in_j_1: int, in_Tmp_757: int, in_Tmp_758: int, in_Tmp_759: int, in_Tmp_760: int, in_Tmp_762: int) returns (out_i_12: int, out_Tmp_755: int, out_Tmp_756: int, out_j_1: int, out_Tmp_757: int, out_Tmp_758: int, out_Tmp_759: int, out_Tmp_760: int, out_Tmp_762: int)
{

  entry:
    out_i_12, out_Tmp_755, out_Tmp_756, out_j_1, out_Tmp_757, out_Tmp_758, out_Tmp_759, out_Tmp_760, out_Tmp_762 := in_i_12, in_Tmp_755, in_Tmp_756, in_j_1, in_Tmp_757, in_Tmp_758, in_Tmp_759, in_Tmp_760, in_Tmp_762;
    goto L9, exit;

  exit:
    return;

  L9:
    assume {:CounterLoop 8} {:Counter "i_12"} true;
    goto anon10_Else;

  anon10_Else:
    assume {:partition} 8 > out_i_12;
    out_Tmp_756 := out_i_12;
    out_j_1 := 0;
    goto L13;

  L13:
    call {:si_unique_call 2331} out_Tmp_755, out_j_1, out_Tmp_759, out_Tmp_762 := flInitGlobalVars_loop_L13(out_i_12, out_Tmp_755, out_j_1, out_Tmp_759, out_Tmp_762);
    goto L13_last;

  L13_last:
    assume {:CounterLoop 4} {:Counter "j_1"} true;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} 4 > out_j_1;
    out_Tmp_759 := out_j_1;
    out_Tmp_755 := out_i_12;
    havoc out_Tmp_762;
    assume {:nonnull} out_Tmp_762 != 0;
    assume out_Tmp_762 > 0;
    out_j_1 := out_j_1 + 1;
    assume false;
    return;

  anon11_Then:
    assume {:partition} out_j_1 >= 4;
    out_j_1 := 0;
    goto L17;

  L17:
    call {:si_unique_call 2330} out_j_1, out_Tmp_757, out_Tmp_758, out_Tmp_760 := flInitGlobalVars_loop_L17(out_i_12, out_j_1, out_Tmp_757, out_Tmp_758, out_Tmp_760);
    goto L17_last;

  L17_last:
    assume {:CounterLoop 8} {:Counter "j_1"} true;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 8 > out_j_1;
    out_Tmp_758 := out_j_1;
    out_Tmp_760 := out_i_12;
    havoc out_Tmp_757;
    assume {:nonnull} out_Tmp_757 != 0;
    assume out_Tmp_757 > 0;
    out_j_1 := out_j_1 + 1;
    assume false;
    return;

  anon12_Then:
    assume {:partition} out_j_1 >= 8;
    out_i_12 := out_i_12 + 1;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    call {:si_unique_call 2332} {:si_old_unique_call 1} out_i_12, out_Tmp_755, out_Tmp_756, out_j_1, out_Tmp_757, out_Tmp_758, out_Tmp_759, out_Tmp_760, out_Tmp_762 := flInitGlobalVars_loop_L9(out_i_12, out_Tmp_755, out_Tmp_756, out_j_1, out_Tmp_757, out_Tmp_758, out_Tmp_759, out_Tmp_760, out_Tmp_762);
    return;
}



procedure {:LoopProcedure} flInitGlobalVars_loop_L9(in_i_12: int, in_Tmp_755: int, in_Tmp_756: int, in_j_1: int, in_Tmp_757: int, in_Tmp_758: int, in_Tmp_759: int, in_Tmp_760: int, in_Tmp_762: int) returns (out_i_12: int, out_Tmp_755: int, out_Tmp_756: int, out_j_1: int, out_Tmp_757: int, out_Tmp_758: int, out_Tmp_759: int, out_Tmp_760: int, out_Tmp_762: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdFormatPhysicalDrive_sdv_static_function_24_loop_L59(in_fl_39: int, in_userFp_1: int, in_bdtl: int, in_Tmp_767: int, in_fl_41: int, in_Tmp_770: int, in_volNo_7: int, in_Tmp_773: int, in_fl_43: int, in_partition_3: int, in_fl_46: int, in_fl_47: int, in_Tmp_774: int, in_socket_7: int, in_pVol_41: int) returns (out_fl_39: int, out_Tmp_767: int, out_fl_41: int, out_Tmp_770: int, out_volNo_7: int, out_Tmp_773: int, out_partition_3: int, out_fl_46: int, out_fl_47: int, out_Tmp_774: int, out_pVol_41: int)
{

  entry:
    out_fl_39, out_Tmp_767, out_fl_41, out_Tmp_770, out_volNo_7, out_Tmp_773, out_partition_3, out_fl_46, out_fl_47, out_Tmp_774, out_pVol_41 := in_fl_39, in_Tmp_767, in_fl_41, in_Tmp_770, in_volNo_7, in_Tmp_773, in_partition_3, in_fl_46, in_fl_47, in_Tmp_774, in_pVol_41;
    goto L59, exit;

  exit:
    return;

  L59:
    assume {:nonnull} in_userFp_1 != 0;
    assume in_userFp_1 > 0;
    goto anon46_Else;

  anon46_Else:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} out_partition_3 > 0;
    call {:si_unique_call 2336} out_fl_46 := findFreeVolume_sdv_static_function_24(in_socket_7, out_partition_3);
    goto anon49_Then;

  anon49_Then:
    assume {:partition} out_fl_46 == 0;
    goto L62;

  L62:
    out_Tmp_773 := out_partition_3;
    out_Tmp_774 := in_socket_7;
    havoc out_Tmp_767;
    assume {:nonnull} out_Tmp_767 != 0;
    assume out_Tmp_767 > 0;
    havoc out_volNo_7;
    out_Tmp_770 := out_volNo_7;
    havoc out_pVol_41;
    call {:si_unique_call 2335} out_fl_39 := absMountVolume(out_pVol_41);
    goto anon50_Then;

  anon50_Then:
    assume {:partition} out_fl_39 == 0;
    assume {:nonnull} out_pVol_41 != 0;
    assume out_pVol_41 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} out_pVol_41 != 0;
    assume out_pVol_41 > 0;
    goto anon53_Then;

  anon53_Then:
    assume {:partition} in_fl_43 == 0;
    goto L79;

  L79:
    assume {:nonnull} in_bdtl != 0;
    assume in_bdtl > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L95;

  L95:
    call {:si_unique_call 2333} out_fl_47 := dismountVolume(out_pVol_41);
    goto anon55_Then;

  anon55_Then:
    assume {:partition} out_fl_47 == 0;
    out_partition_3 := out_partition_3 + 1;
    goto anon55_Then_dummy;

  anon55_Then_dummy:
    call {:si_unique_call 2337} {:si_old_unique_call 1} out_fl_39, out_Tmp_767, out_fl_41, out_Tmp_770, out_volNo_7, out_Tmp_773, out_partition_3, out_fl_46, out_fl_47, out_Tmp_774, out_pVol_41 := bdFormatPhysicalDrive_sdv_static_function_24_loop_L59(out_fl_39, in_userFp_1, in_bdtl, out_Tmp_767, out_fl_41, out_Tmp_770, out_volNo_7, out_Tmp_773, in_fl_43, out_partition_3, out_fl_46, out_fl_47, out_Tmp_774, in_socket_7, out_pVol_41);
    return;

  anon52_Then:
    assume {:nonnull} out_pVol_41 != 0;
    assume out_pVol_41 > 0;
    call {:si_unique_call 2334} out_fl_41 := flDosFormat(tl_Volume(out_pVol_41), in_bdtl);
    goto anon54_Else;

  anon54_Else:
    assume {:partition} out_fl_41 == 0;
    goto L95;

  anon51_Then:
    goto L79;

  anon48_Then:
    assume {:partition} 0 >= out_partition_3;
    goto L62;
}



procedure {:LoopProcedure} bdFormatPhysicalDrive_sdv_static_function_24_loop_L59(in_fl_39: int, in_userFp_1: int, in_bdtl: int, in_Tmp_767: int, in_fl_41: int, in_Tmp_770: int, in_volNo_7: int, in_Tmp_773: int, in_fl_43: int, in_partition_3: int, in_fl_46: int, in_fl_47: int, in_Tmp_774: int, in_socket_7: int, in_pVol_41: int) returns (out_fl_39: int, out_Tmp_767: int, out_fl_41: int, out_Tmp_770: int, out_volNo_7: int, out_Tmp_773: int, out_partition_3: int, out_fl_46: int, out_fl_47: int, out_Tmp_774: int, out_pVol_41: int);
  modifies alloc;
  free ensures {:va_keep} out_fl_39 == 34 || out_fl_39 == 0 || out_fl_39 == 21 || out_fl_39 == 26 || out_fl_39 == 111 || out_fl_39 == in_fl_39;
  free ensures {:va_keep} out_fl_46 == 31 || out_fl_46 == 0 || out_fl_46 == in_fl_46;
  free ensures {:va_keep} out_fl_47 == 0 || out_fl_47 == in_fl_47;
  free ensures {:va_keep} out_Tmp_774 == in_Tmp_774 || out_Tmp_774 == in_socket_7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation replaceFATsector_loop_L25(in_Tmp_776: int, in_halfByteOffset: int, in_newFATentry: int, in_oldFATentry: int, in_Tmp_778: int, in_sdv_351: int, in_fl_48: int, in_firstSector: int, in_FAThalfBytes: int, in_oldFATsector: int, in_Tmp_781: int, in_Tmp_782: int, in_pVol_42: int, in_sectorNo_1: int, in_newFATsector: int) returns (out_Tmp_776: int, out_halfByteOffset: int, out_newFATentry: int, out_oldFATentry: int, out_Tmp_778: int, out_sdv_351: int, out_firstSector: int, out_oldFATsector: int, out_Tmp_781: int, out_Tmp_782: int)
{

  entry:
    out_Tmp_776, out_halfByteOffset, out_newFATentry, out_oldFATentry, out_Tmp_778, out_sdv_351, out_firstSector, out_oldFATsector, out_Tmp_781, out_Tmp_782 := in_Tmp_776, in_halfByteOffset, in_newFATentry, in_oldFATentry, in_Tmp_778, in_sdv_351, in_firstSector, in_oldFATsector, in_Tmp_781, in_Tmp_782;
    goto L25, exit;

  exit:
    return;

  L25:
    goto anon23_Else;

  anon23_Else:
    assume {:partition} 1022 > out_halfByteOffset;
    out_Tmp_776 := out_oldFATsector;
    assume {:nonnull} out_Tmp_776 != 0;
    assume out_Tmp_776 > 0;
    havoc out_Tmp_781;
    call {:si_unique_call 2341} out_oldFATentry := fromUNAL(out_Tmp_781);
    out_Tmp_782 := in_newFATsector;
    assume {:nonnull} out_Tmp_782 != 0;
    assume out_Tmp_782 > 0;
    havoc out_Tmp_778;
    call {:si_unique_call 2342} out_newFATentry := fromUNAL(out_Tmp_778);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(out_halfByteOffset, 1) != 0;
    call {:si_unique_call 2339} out_oldFATentry := corral_nondet();
    call {:si_unique_call 2340} out_newFATentry := corral_nondet();
    goto L43;

  L43:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} out_oldFATentry != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} out_newFATentry == 0;
    assume {:nonnull} in_pVol_42 != 0;
    assume in_pVol_42 > 0;
    goto anon28_Then;

  anon28_Then:
    assume {:partition} in_fl_48 == 0;
    goto L44;

  L44:
    call {:si_unique_call 2338} out_sdv_351 := findSector(in_pVol_42, in_sectorNo_1);
    out_oldFATsector := out_sdv_351;
    assume {:nonnull} in_pVol_42 != 0;
    assume in_pVol_42 > 0;
    havoc out_firstSector;
    out_halfByteOffset := out_halfByteOffset + in_FAThalfBytes;
    goto L44_dummy;

  L44_dummy:
    call {:si_unique_call 2343} {:si_old_unique_call 1} out_Tmp_776, out_halfByteOffset, out_newFATentry, out_oldFATentry, out_Tmp_778, out_sdv_351, out_firstSector, out_oldFATsector, out_Tmp_781, out_Tmp_782 := replaceFATsector_loop_L25(out_Tmp_776, out_halfByteOffset, out_newFATentry, out_oldFATentry, out_Tmp_778, out_sdv_351, in_fl_48, out_firstSector, in_FAThalfBytes, out_oldFATsector, out_Tmp_781, out_Tmp_782, in_pVol_42, in_sectorNo_1, in_newFATsector);
    return;

  anon27_Then:
    assume {:partition} out_newFATentry != 0;
    goto L44;

  anon26_Then:
    assume {:partition} out_oldFATentry == 0;
    goto L44;

  anon24_Then:
    assume {:partition} BAND(out_halfByteOffset, 1) == 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} in_FAThalfBytes == 3;
    out_oldFATentry := BAND(out_oldFATentry, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048));
    out_newFATentry := BAND(out_newFATentry, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048));
    goto L43;

  anon25_Then:
    assume {:partition} in_FAThalfBytes != 3;
    goto L43;
}



procedure {:LoopProcedure} replaceFATsector_loop_L25(in_Tmp_776: int, in_halfByteOffset: int, in_newFATentry: int, in_oldFATentry: int, in_Tmp_778: int, in_sdv_351: int, in_fl_48: int, in_firstSector: int, in_FAThalfBytes: int, in_oldFATsector: int, in_Tmp_781: int, in_Tmp_782: int, in_pVol_42: int, in_sectorNo_1: int, in_newFATsector: int) returns (out_Tmp_776: int, out_halfByteOffset: int, out_newFATentry: int, out_oldFATentry: int, out_Tmp_778: int, out_sdv_351: int, out_firstSector: int, out_oldFATsector: int, out_Tmp_781: int, out_Tmp_782: int);
  free ensures {:va_keep} out_Tmp_782 == in_Tmp_782 || out_Tmp_782 == in_newFATsector;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flExit_loop_L30(in_mutexTaken: int, in_pVol_48: int, in_volNo_9: int, in_sdv_376: int, in_Tmp_820: int) returns (out_mutexTaken: int, out_volNo_9: int, out_sdv_376: int, out_Tmp_820: int)
{
  var vslice_dummy_var_1486: int;
  var vslice_dummy_var_1487: int;
  var vslice_dummy_var_1488: int;
  var vslice_dummy_var_1489: int;

  entry:
    out_mutexTaken, out_volNo_9, out_sdv_376, out_Tmp_820 := in_mutexTaken, in_volNo_9, in_sdv_376, in_Tmp_820;
    goto L30, exit;

  exit:
    return;

  L30:
    goto anon18_Else;

  anon18_Else:
    assume {:nonnull} in_pVol_48 != 0;
    assume in_pVol_48 > 0;
    havoc vslice_dummy_var_1489;
    call {:si_unique_call 2347} out_sdv_376 := setBusy(in_pVol_48, 1, vslice_dummy_var_1489);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} out_sdv_376 != 0;
    out_Tmp_820 := 0;
    goto L40;

  L40:
    out_mutexTaken := out_Tmp_820;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} out_mutexTaken == 1;
    assume {:nonnull} in_pVol_48 != 0;
    assume in_pVol_48 > 0;
    havoc vslice_dummy_var_1487;
    call {:si_unique_call 2345} flFreeMutex(vslice_dummy_var_1487);
    assume {:nonnull} in_pVol_48 != 0;
    assume in_pVol_48 > 0;
    havoc vslice_dummy_var_1488;
    call {:si_unique_call 2346} flDeleteMutex(vslice_dummy_var_1488);
    out_mutexTaken := 0;
    goto L42;

  L42:
    assume {:nonnull} in_pVol_48 != 0;
    assume in_pVol_48 > 0;
    havoc vslice_dummy_var_1486;
    call {:si_unique_call 2344} flExitSocket(vslice_dummy_var_1486);
    out_volNo_9 := out_volNo_9 + 1;
    goto L42_dummy;

  L42_dummy:
    call {:si_unique_call 2348} {:si_old_unique_call 1} out_mutexTaken, out_volNo_9, out_sdv_376, out_Tmp_820 := flExit_loop_L30(out_mutexTaken, in_pVol_48, out_volNo_9, out_sdv_376, out_Tmp_820);
    return;

  anon21_Then:
    assume {:partition} out_mutexTaken != 1;
    goto L42;

  anon19_Then:
    assume {:partition} out_sdv_376 == 0;
    out_Tmp_820 := 1;
    goto L40;
}



procedure {:LoopProcedure} flExit_loop_L30(in_mutexTaken: int, in_pVol_48: int, in_volNo_9: int, in_sdv_376: int, in_Tmp_820: int) returns (out_mutexTaken: int, out_volNo_9: int, out_sdv_376: int, out_Tmp_820: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} out_mutexTaken == 0 || out_mutexTaken == 1 || out_mutexTaken == in_mutexTaken;
  free ensures {:va_keep} out_sdv_376 == 9 || out_sdv_376 == 0 || out_sdv_376 == in_sdv_376;
  free ensures {:va_keep} out_Tmp_820 == 0 || out_Tmp_820 == 1 || out_Tmp_820 == in_Tmp_820;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flExit_loop_L11(in_sdv_373: int, in_pVol_48: int, in_volNo_9: int, in_vslice_dummy_var_111: int, in_vslice_dummy_var_112: int) returns (out_sdv_373: int, out_volNo_9: int, out_vslice_dummy_var_111: int, out_vslice_dummy_var_112: int)
{
  var vslice_dummy_var_1490: int;
  var vslice_dummy_var_1491: int;

  entry:
    out_sdv_373, out_volNo_9, out_vslice_dummy_var_111, out_vslice_dummy_var_112 := in_sdv_373, in_volNo_9, in_vslice_dummy_var_111, in_vslice_dummy_var_112;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:CounterLoop 20} {:Counter "volNo_9"} true;
    goto anon15_Else;

  anon15_Else:
    assume {:partition} 20 > out_volNo_9;
    assume {:nonnull} in_pVol_48 != 0;
    assume in_pVol_48 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} in_pVol_48 != 0;
    assume in_pVol_48 > 0;
    havoc vslice_dummy_var_1491;
    call {:si_unique_call 2352} out_sdv_373 := setBusy(in_pVol_48, 1, vslice_dummy_var_1491);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} out_sdv_373 == 0;
    call {:si_unique_call 2349} out_vslice_dummy_var_111 := dismountVolume(in_pVol_48);
    call {:si_unique_call 2350} dismountLowLevel_sdv_static_function_24(in_pVol_48);
    assume {:nonnull} in_pVol_48 != 0;
    assume in_pVol_48 > 0;
    havoc vslice_dummy_var_1490;
    call {:si_unique_call 2351} out_vslice_dummy_var_112 := setBusy(in_pVol_48, 0, vslice_dummy_var_1490);
    goto L14;

  L14:
    out_volNo_9 := out_volNo_9 + 1;
    goto L14_dummy;

  L14_dummy:
    havoc out_volNo_9;
    return;

  anon17_Then:
    assume {:partition} out_sdv_373 != 0;
    goto L14;

  anon16_Then:
    goto L14;
}



procedure {:LoopProcedure} flExit_loop_L11(in_sdv_373: int, in_pVol_48: int, in_volNo_9: int, in_vslice_dummy_var_111: int, in_vslice_dummy_var_112: int) returns (out_sdv_373: int, out_volNo_9: int, out_vslice_dummy_var_111: int, out_vslice_dummy_var_112: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} out_sdv_373 == 9 || out_sdv_373 == 0 || out_sdv_373 == in_sdv_373;
  free ensures {:va_keep} out_vslice_dummy_var_111 == 0 || out_vslice_dummy_var_111 == in_vslice_dummy_var_111;
  free ensures {:va_keep} out_vslice_dummy_var_112 == 9 || out_vslice_dummy_var_112 == 0 || out_vslice_dummy_var_112 == in_vslice_dummy_var_112;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flInit_loop_L116(in_req: int, in_Tmp_824: int, in_pVol_49: int, in_Tmp_828: int, in_volNo_10: int, in_Tmp_831: int, in_Tmp_833: int, in_Tmp_834: int, in_Tmp_836: int, in_Tmp_838: int, in_Tmp_839: int) returns (out_Tmp_824: int, out_Tmp_828: int, out_volNo_10: int, out_Tmp_831: int, out_Tmp_833: int, out_Tmp_834: int, out_Tmp_836: int, out_Tmp_838: int, out_Tmp_839: int)
{

  entry:
    out_Tmp_824, out_Tmp_828, out_volNo_10, out_Tmp_831, out_Tmp_833, out_Tmp_834, out_Tmp_836, out_Tmp_838, out_Tmp_839 := in_Tmp_824, in_Tmp_828, in_volNo_10, in_Tmp_831, in_Tmp_833, in_Tmp_834, in_Tmp_836, in_Tmp_838, in_Tmp_839;
    goto L116, exit;

  exit:
    return;

  L116:
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    goto anon41_Else;

  anon41_Else:
    goto anon42_Else;

  anon42_Else:
    out_Tmp_839 := out_volNo_10;
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    havoc out_Tmp_828;
    havoc out_Tmp_834;
    assume {:nonnull} out_Tmp_834 != 0;
    assume out_Tmp_834 > 0;
    havoc out_Tmp_833;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    havoc out_Tmp_831;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    havoc out_Tmp_824;
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    havoc out_Tmp_836;
    havoc out_Tmp_838;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    out_volNo_10 := out_volNo_10 + 1;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    call {:si_unique_call 2353} {:si_old_unique_call 1} out_Tmp_824, out_Tmp_828, out_volNo_10, out_Tmp_831, out_Tmp_833, out_Tmp_834, out_Tmp_836, out_Tmp_838, out_Tmp_839 := flInit_loop_L116(in_req, out_Tmp_824, in_pVol_49, out_Tmp_828, out_volNo_10, out_Tmp_831, out_Tmp_833, out_Tmp_834, out_Tmp_836, out_Tmp_838, out_Tmp_839);
    return;
}



procedure {:LoopProcedure} flInit_loop_L116(in_req: int, in_Tmp_824: int, in_pVol_49: int, in_Tmp_828: int, in_volNo_10: int, in_Tmp_831: int, in_Tmp_833: int, in_Tmp_834: int, in_Tmp_836: int, in_Tmp_838: int, in_Tmp_839: int) returns (out_Tmp_824: int, out_Tmp_828: int, out_volNo_10: int, out_Tmp_831: int, out_Tmp_833: int, out_Tmp_834: int, out_Tmp_836: int, out_Tmp_838: int, out_Tmp_839: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flInit_loop_L102(in_Tmp_822: int, in_req: int, in_Tmp_824: int, in_pVol_49: int, in_Tmp_828: int, in_volNo_10: int, in_Tmp_830: int, in_Tmp_831: int, in_Tmp_833: int, in_Tmp_834: int, in_Tmp_835: int, in_Tmp_836: int, in_status_12: int, in_Tmp_838: int, in_Tmp_839: int) returns (out_Tmp_822: int, out_Tmp_824: int, out_Tmp_828: int, out_volNo_10: int, out_Tmp_830: int, out_Tmp_831: int, out_Tmp_833: int, out_Tmp_834: int, out_Tmp_835: int, out_Tmp_836: int, out_status_12: int, out_Tmp_838: int, out_Tmp_839: int)
{
  var vslice_dummy_var_1492: int;

  entry:
    out_Tmp_822, out_Tmp_824, out_Tmp_828, out_volNo_10, out_Tmp_830, out_Tmp_831, out_Tmp_833, out_Tmp_834, out_Tmp_835, out_Tmp_836, out_status_12, out_Tmp_838, out_Tmp_839 := in_Tmp_822, in_Tmp_824, in_Tmp_828, in_volNo_10, in_Tmp_830, in_Tmp_831, in_Tmp_833, in_Tmp_834, in_Tmp_835, in_Tmp_836, in_status_12, in_Tmp_838, in_Tmp_839;
    goto L102, exit;

  exit:
    return;

  L102:
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    goto anon39_Else;

  anon39_Else:
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    havoc out_Tmp_822;
    havoc out_Tmp_835;
    assume {:nonnull} out_Tmp_835 != 0;
    assume out_Tmp_835 > 0;
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    havoc vslice_dummy_var_1492;
    call {:si_unique_call 2355} out_status_12 := flPreMount(807, in_req, vslice_dummy_var_1492);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} out_status_12 != 0;
    goto L113;

  L113:
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    goto L113_dummy;

  L113_dummy:
    call {:si_unique_call 2356} {:si_old_unique_call 1} out_Tmp_822, out_Tmp_824, out_Tmp_828, out_volNo_10, out_Tmp_830, out_Tmp_831, out_Tmp_833, out_Tmp_834, out_Tmp_835, out_Tmp_836, out_status_12, out_Tmp_838, out_Tmp_839 := flInit_loop_L102(out_Tmp_822, in_req, out_Tmp_824, in_pVol_49, out_Tmp_828, out_volNo_10, out_Tmp_830, out_Tmp_831, out_Tmp_833, out_Tmp_834, out_Tmp_835, out_Tmp_836, out_status_12, out_Tmp_838, out_Tmp_839);
    return;

  anon40_Then:
    assume {:partition} out_status_12 == 0;
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    havoc out_Tmp_830;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    out_volNo_10 := 1;
    goto L116;

  L116:
    call {:si_unique_call 2354} out_Tmp_824, out_Tmp_828, out_volNo_10, out_Tmp_831, out_Tmp_833, out_Tmp_834, out_Tmp_836, out_Tmp_838, out_Tmp_839 := flInit_loop_L116(in_req, out_Tmp_824, in_pVol_49, out_Tmp_828, out_volNo_10, out_Tmp_831, out_Tmp_833, out_Tmp_834, out_Tmp_836, out_Tmp_838, out_Tmp_839);
    goto L116_last;

  L116_last:
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    out_Tmp_839 := out_volNo_10;
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    havoc out_Tmp_828;
    havoc out_Tmp_834;
    assume {:nonnull} out_Tmp_834 != 0;
    assume out_Tmp_834 > 0;
    havoc out_Tmp_833;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    havoc out_Tmp_831;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    havoc out_Tmp_824;
    assume {:nonnull} in_req != 0;
    assume in_req > 0;
    havoc out_Tmp_836;
    havoc out_Tmp_838;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    out_volNo_10 := out_volNo_10 + 1;
    assume false;
    return;

  anon42_Then:
    goto L113;

  anon41_Then:
    goto L113;
}



procedure {:LoopProcedure} flInit_loop_L102(in_Tmp_822: int, in_req: int, in_Tmp_824: int, in_pVol_49: int, in_Tmp_828: int, in_volNo_10: int, in_Tmp_830: int, in_Tmp_831: int, in_Tmp_833: int, in_Tmp_834: int, in_Tmp_835: int, in_Tmp_836: int, in_status_12: int, in_Tmp_838: int, in_Tmp_839: int) returns (out_Tmp_822: int, out_Tmp_824: int, out_Tmp_828: int, out_volNo_10: int, out_Tmp_830: int, out_Tmp_831: int, out_Tmp_833: int, out_Tmp_834: int, out_Tmp_835: int, out_Tmp_836: int, out_status_12: int, out_Tmp_838: int, out_Tmp_839: int);
  modifies alloc;
  free ensures {:va_keep} out_status_12 == 0 || out_status_12 == 34 || out_status_12 == 21 || out_status_12 == 26 || out_status_12 == 111 || out_status_12 == 106 || out_status_12 == in_status_12;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flInit_loop_L87(in_Tmp_823: int, in_Tmp_825: int, in_Tmp_827: int, in_volNo_10: int, in_Tmp_832: int, in_sdv_387: int) returns (out_Tmp_823: int, out_Tmp_825: int, out_Tmp_827: int, out_volNo_10: int, out_Tmp_832: int, out_sdv_387: int)
{

  entry:
    out_Tmp_823, out_Tmp_825, out_Tmp_827, out_volNo_10, out_Tmp_832, out_sdv_387 := in_Tmp_823, in_Tmp_825, in_Tmp_827, in_volNo_10, in_Tmp_832, in_sdv_387;
    goto L87, exit;

  exit:
    return;

  L87:
    goto anon37_Then;

  anon37_Then:
    out_Tmp_832 := out_volNo_10;
    havoc out_Tmp_823;
    call {:si_unique_call 2357} out_sdv_387 := flCreateMutex(out_Tmp_823);
    goto anon38_Then;

  anon38_Then:
    assume {:partition} out_sdv_387 == 0;
    out_Tmp_827 := out_volNo_10;
    out_Tmp_825 := out_volNo_10;
    out_volNo_10 := out_volNo_10 + 1;
    goto anon38_Then_dummy;

  anon38_Then_dummy:
    call {:si_unique_call 2358} {:si_old_unique_call 1} out_Tmp_823, out_Tmp_825, out_Tmp_827, out_volNo_10, out_Tmp_832, out_sdv_387 := flInit_loop_L87(out_Tmp_823, out_Tmp_825, out_Tmp_827, out_volNo_10, out_Tmp_832, out_sdv_387);
    return;
}



procedure {:LoopProcedure} flInit_loop_L87(in_Tmp_823: int, in_Tmp_825: int, in_Tmp_827: int, in_volNo_10: int, in_Tmp_832: int, in_sdv_387: int) returns (out_Tmp_823: int, out_Tmp_825: int, out_Tmp_827: int, out_volNo_10: int, out_Tmp_832: int, out_sdv_387: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_387 == 0 || out_sdv_387 == 31 || out_sdv_387 == in_sdv_387;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flInit_loop_L52(in_Tmp_826: int, in_Tmp_837: int, in_Tmp_841: int) returns (out_Tmp_826: int, out_Tmp_837: int, out_Tmp_841: int)
{

  entry:
    out_Tmp_826, out_Tmp_837, out_Tmp_841 := in_Tmp_826, in_Tmp_837, in_Tmp_841;
    goto L52, exit;

  exit:
    return;

  L52:
    assume {:CounterLoop 3} {:Counter "noOfTLs"} true;
    goto anon33_Else;

  anon33_Else:
    havoc out_Tmp_826;
    havoc out_Tmp_837;
    havoc out_Tmp_841;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    call {:si_unique_call 2359} {:si_old_unique_call 1} out_Tmp_826, out_Tmp_837, out_Tmp_841 := flInit_loop_L52(out_Tmp_826, out_Tmp_837, out_Tmp_841);
    return;
}



procedure {:LoopProcedure} flInit_loop_L52(in_Tmp_826: int, in_Tmp_837: int, in_Tmp_841: int) returns (out_Tmp_826: int, out_Tmp_837: int, out_Tmp_841: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flInit_loop_L26(in_pVol_49: int, in_volNo_10: int, in_Tmp_840: int, in_boogieTmp: int, in_vslice_dummy_var_114: int, in_vslice_dummy_var_115: int) returns (out_volNo_10: int, out_Tmp_840: int, out_boogieTmp: int, out_vslice_dummy_var_114: int, out_vslice_dummy_var_115: int)
{
  var vslice_dummy_var_1493: int;
  var vslice_dummy_var_1494: int;

  entry:
    out_volNo_10, out_Tmp_840, out_boogieTmp, out_vslice_dummy_var_114, out_vslice_dummy_var_115 := in_volNo_10, in_Tmp_840, in_boogieTmp, in_vslice_dummy_var_114, in_vslice_dummy_var_115;
    goto L26, exit;

  exit:
    return;

  L26:
    assume {:CounterLoop 20} {:Counter "volNo_10"} true;
    goto anon31_Else;

  anon31_Else:
    assume {:partition} 20 > out_volNo_10;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} 8 > out_volNo_10;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    call {:si_unique_call 2360} out_boogieTmp := flSocketOf(out_volNo_10);
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    call {:si_unique_call 2361} out_boogieTmp := flFlashOf(out_volNo_10);
    assume {:IndirectCall} true;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    havoc vslice_dummy_var_1493;
    call {:si_unique_call 2362} out_vslice_dummy_var_114 := flmemset(vslice_dummy_var_1493, 0, 116);
    assume {:IndirectCall} true;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    havoc vslice_dummy_var_1494;
    call {:si_unique_call 2363} out_vslice_dummy_var_115 := flmemset(vslice_dummy_var_1494, 0, 176);
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    havoc out_Tmp_840;
    assume {:nonnull} out_Tmp_840 != 0;
    assume out_Tmp_840 > 0;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    goto L48;

  L48:
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    out_volNo_10 := out_volNo_10 + 1;
    goto L48_dummy;

  L48_dummy:
    call {:si_unique_call 2364} {:si_old_unique_call 1} out_volNo_10, out_Tmp_840, out_boogieTmp, out_vslice_dummy_var_114, out_vslice_dummy_var_115 := flInit_loop_L26(in_pVol_49, out_volNo_10, out_Tmp_840, out_boogieTmp, out_vslice_dummy_var_114, out_vslice_dummy_var_115);
    return;

  anon32_Then:
    assume {:partition} out_volNo_10 >= 8;
    assume {:nonnull} in_pVol_49 != 0;
    assume in_pVol_49 > 0;
    goto L48;
}



procedure {:LoopProcedure} flInit_loop_L26(in_pVol_49: int, in_volNo_10: int, in_Tmp_840: int, in_boogieTmp: int, in_vslice_dummy_var_114: int, in_vslice_dummy_var_115: int) returns (out_volNo_10: int, out_Tmp_840: int, out_boogieTmp: int, out_vslice_dummy_var_114: int, out_vslice_dummy_var_115: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation absRead_sdv_static_function_24_loop_L25(in_currSector_1: int, in_mappedSector: int, in_sdv_395: int, in_sdv_396: int, in_userBuffer_1: int, in_sectorCount_1: int, in_pVol_52: int, in_ioreq_20: int, in_vslice_dummy_var_118: int, in_vslice_dummy_var_119: int) returns (out_currSector_1: int, out_mappedSector: int, out_sdv_395: int, out_vslice_dummy_var_118: int, out_vslice_dummy_var_119: int)
{

  entry:
    out_currSector_1, out_mappedSector, out_sdv_395, out_vslice_dummy_var_118, out_vslice_dummy_var_119 := in_currSector_1, in_mappedSector, in_sdv_395, in_vslice_dummy_var_118, in_vslice_dummy_var_119;
    goto L25, exit;

  exit:
    return;

  L25:
    assume {:nonnull} in_ioreq_20 != 0;
    assume in_ioreq_20 > 0;
    goto anon17_Else;

  anon17_Else:
    call {:si_unique_call 2367} out_sdv_395 := findSector(in_pVol_52, out_currSector_1);
    out_mappedSector := out_sdv_395;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} out_mappedSector != 0;
    goto anon18_Else;

  anon18_Else:
    assume {:partition} out_mappedSector != dataErrorObject;
    assume {:IndirectCall} true;
    call {:si_unique_call 2365} out_vslice_dummy_var_118 := flmemcpy(in_userBuffer_1, out_mappedSector, 512);
    goto L40;

  L40:
    assume {:nonnull} in_ioreq_20 != 0;
    assume in_ioreq_20 > 0;
    out_currSector_1 := out_currSector_1 + 1;
    goto L40_dummy;

  L40_dummy:
    call {:si_unique_call 2368} {:si_old_unique_call 1} out_currSector_1, out_mappedSector, out_sdv_395, out_vslice_dummy_var_118, out_vslice_dummy_var_119 := absRead_sdv_static_function_24_loop_L25(out_currSector_1, out_mappedSector, out_sdv_395, in_sdv_396, in_userBuffer_1, in_sectorCount_1, in_pVol_52, in_ioreq_20, out_vslice_dummy_var_118, out_vslice_dummy_var_119);
    return;

  anon21_Then:
    assume {:partition} out_mappedSector == 0;
    assume {:nonnull} in_pVol_52 != 0;
    assume in_pVol_52 > 0;
    goto anon19_Else;

  anon19_Else:
    assume {:partition} out_currSector_1 < in_sdv_396;
    assume {:IndirectCall} true;
    call {:si_unique_call 2366} out_vslice_dummy_var_119 := flmemset(in_userBuffer_1, 0, 512);
    goto L40;
}



procedure {:LoopProcedure} absRead_sdv_static_function_24_loop_L25(in_currSector_1: int, in_mappedSector: int, in_sdv_395: int, in_sdv_396: int, in_userBuffer_1: int, in_sectorCount_1: int, in_pVol_52: int, in_ioreq_20: int, in_vslice_dummy_var_118: int, in_vslice_dummy_var_119: int) returns (out_currSector_1: int, out_mappedSector: int, out_sdv_395: int, out_vslice_dummy_var_118: int, out_vslice_dummy_var_119: int);
  free ensures {:va_keep} out_vslice_dummy_var_118 == in_vslice_dummy_var_118 || out_vslice_dummy_var_118 == in_userBuffer_1;
  free ensures {:va_keep} out_vslice_dummy_var_119 == in_vslice_dummy_var_119 || out_vslice_dummy_var_119 == in_userBuffer_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flIntelIdentify_loop_L19(in_Tmp_882: int, in_Tmp_884: int, in_Tmp_885: int, in_flashPtr_8: int, in_vendorId_2: int, in_Tmp_890: int, in_Tmp_891: int, in_inlv_2: int, in_resetCmd: int, in_firstByte: int, in_Tmp_892: int, in_pVol_54: int, in_amdCmdRoutine: int, in_idOffset_1: int) returns (out_Tmp_882: int, out_Tmp_884: int, out_Tmp_885: int, out_vendorId_2: int, out_Tmp_890: int, out_Tmp_891: int, out_inlv_2: int, out_firstByte: int, out_Tmp_892: int)
{

  entry:
    out_Tmp_882, out_Tmp_884, out_Tmp_885, out_vendorId_2, out_Tmp_890, out_Tmp_891, out_inlv_2, out_firstByte, out_Tmp_892 := in_Tmp_882, in_Tmp_884, in_Tmp_885, in_vendorId_2, in_Tmp_890, in_Tmp_891, in_inlv_2, in_firstByte, in_Tmp_892;
    goto L19, exit;

  exit:
    return;

  L19:
    assume {:CounterLoop 15} {:Counter "inlv_2"} true;
    goto anon17_Else;

  anon17_Else:
    assume {:partition} 15 > out_inlv_2;
    out_Tmp_890 := out_inlv_2;
    assume {:nonnull} in_flashPtr_8 != 0;
    assume in_flashPtr_8 > 0;
    out_Tmp_882 := out_inlv_2;
    assume {:nonnull} in_flashPtr_8 != 0;
    assume in_flashPtr_8 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} out_inlv_2 != 0;
    goto L25;

  L25:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} in_amdCmdRoutine != 0;
    out_Tmp_891 := in_idOffset_1 + out_inlv_2;
    assume {:IndirectCall} true;
    assume in_amdCmdRoutine == li2bplFunctionConstant558;
    call {:si_unique_call 2369} amdCommand(in_pVol_54, out_Tmp_891, 144, in_flashPtr_8);
    goto L31;

  L31:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} out_inlv_2 != 0;
    out_Tmp_885 := out_inlv_2;
    assume {:nonnull} in_flashPtr_8 != 0;
    assume in_flashPtr_8 > 0;
    goto anon24_Then;

  anon24_Then:
    assume {:nonnull} in_flashPtr_8 != 0;
    assume in_flashPtr_8 > 0;
    goto anon21_Else;

  anon21_Else:
    goto L38;

  L38:
    out_Tmp_884 := out_inlv_2;
    assume {:nonnull} in_flashPtr_8 != 0;
    assume in_flashPtr_8 > 0;
    out_inlv_2 := out_inlv_2 + 1;
    goto L38_dummy;

  L38_dummy:
    havoc out_inlv_2;
    return;

  anon20_Then:
    assume {:partition} out_inlv_2 == 0;
    assume {:nonnull} in_flashPtr_8 != 0;
    assume in_flashPtr_8 > 0;
    havoc out_vendorId_2;
    goto L38;

  anon19_Then:
    assume {:partition} in_amdCmdRoutine == 0;
    out_Tmp_892 := out_inlv_2;
    assume {:nonnull} in_flashPtr_8 != 0;
    assume in_flashPtr_8 > 0;
    goto L31;

  anon23_Then:
    assume {:partition} out_inlv_2 == 0;
    assume {:nonnull} in_flashPtr_8 != 0;
    assume in_flashPtr_8 > 0;
    havoc out_firstByte;
    goto L25;
}



procedure {:LoopProcedure} flIntelIdentify_loop_L19(in_Tmp_882: int, in_Tmp_884: int, in_Tmp_885: int, in_flashPtr_8: int, in_vendorId_2: int, in_Tmp_890: int, in_Tmp_891: int, in_inlv_2: int, in_resetCmd: int, in_firstByte: int, in_Tmp_892: int, in_pVol_54: int, in_amdCmdRoutine: int, in_idOffset_1: int) returns (out_Tmp_882: int, out_Tmp_884: int, out_Tmp_885: int, out_vendorId_2: int, out_Tmp_890: int, out_Tmp_891: int, out_inlv_2: int, out_firstByte: int, out_Tmp_892: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_882 == in_inlv_2 || out_Tmp_882 == in_Tmp_882;
  free ensures {:va_keep} out_Tmp_884 == in_inlv_2 || out_Tmp_884 == in_Tmp_884;
  free ensures {:va_keep} out_Tmp_885 == in_inlv_2 || out_Tmp_885 == in_Tmp_885;
  free ensures {:va_keep} out_Tmp_890 == in_inlv_2 || out_Tmp_890 == in_Tmp_890;
  free ensures {:va_keep} out_Tmp_891 == in_Tmp_891 || out_Tmp_891 == in_idOffset_1 + in_inlv_2;
  free ensures {:va_keep} out_Tmp_892 == in_Tmp_892 || out_Tmp_892 == in_inlv_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flIdentifyFlash_loop_L86(in_blockSize_1: int, in_pVol_55: int) returns (out_blockSize_1: int)
{

  entry:
    out_blockSize_1 := in_blockSize_1;
    goto L86, exit;

  exit:
    return;

  L86:
    goto anon79_Else;

  anon79_Else:
    assume {:partition} out_blockSize_1 > 0;
    assume {:nonnull} in_pVol_55 != 0;
    assume in_pVol_55 > 0;
    call {:si_unique_call 2370} out_blockSize_1 := corral_nondet();
    goto anon79_Else_dummy;

  anon79_Else_dummy:
    call {:si_unique_call 2371} {:si_old_unique_call 1} out_blockSize_1 := flIdentifyFlash_loop_L86(out_blockSize_1, in_pVol_55);
    return;
}



procedure {:LoopProcedure} flIdentifyFlash_loop_L86(in_blockSize_1: int, in_pVol_55: int) returns (out_blockSize_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flIdentifyFlash_loop_L72(in_Tmp_895: int, in_iMTD: int, in_status_16: int, in_pVol_55: int) returns (out_Tmp_895: int, out_iMTD: int, out_status_16: int)
{

  entry:
    out_Tmp_895, out_iMTD, out_status_16 := in_Tmp_895, in_iMTD, in_status_16;
    goto L72, exit;

  exit:
    return;

  L72:
    goto anon74_Else;

  anon74_Else:
    goto anon76_Else;

  anon76_Else:
    assume {:partition} out_status_16 != 0;
    goto anon77_Else;

  anon77_Else:
    assume {:partition} out_status_16 != 111;
    out_Tmp_895 := out_iMTD;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume out_Tmp_895 != 9;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume out_Tmp_895 != 8;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume out_Tmp_895 != 7;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume out_Tmp_895 != 6;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume out_Tmp_895 != 5;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume out_Tmp_895 != 4;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume out_Tmp_895 != 3;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume out_Tmp_895 != 2;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume out_Tmp_895 != 1;
    goto anon104_Then;

  anon104_Then:
    assume out_Tmp_895 == 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 2372} out_status_16 := amdMTDIdentify(in_pVol_55);
    goto L80;

  L80:
    out_iMTD := out_iMTD + 1;
    goto L80_dummy;

  L80_dummy:
    call {:si_unique_call 2390} {:si_old_unique_call 1} out_Tmp_895, out_iMTD, out_status_16 := flIdentifyFlash_loop_L72(out_Tmp_895, out_iMTD, out_status_16, in_pVol_55);
    return;

  anon91_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2373} out_status_16 := cfiscsIdentify(in_pVol_55);
    goto L80;

  anon90_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2374} out_status_16 := doc2000Identify_sdv_static_function_15(in_pVol_55);
    goto L80;

  anon89_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2375} out_status_16 := docPlusIdentify(in_pVol_55);
    goto L80;

  anon88_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2376} out_status_16 := i28f008Identify(in_pVol_55);
    goto L80;

  anon105_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2377} out_status_16 := i28f016Identify(in_pVol_55);
    goto L80;

  anon102_Then:
    assume out_Tmp_895 == 1;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 2378} out_status_16 := amdMTDIdentify(in_pVol_55);
    goto L80;

  anon87_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2379} out_status_16 := cfiscsIdentify(in_pVol_55);
    goto L80;

  anon86_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2380} out_status_16 := doc2000Identify_sdv_static_function_15(in_pVol_55);
    goto L80;

  anon85_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2381} out_status_16 := docPlusIdentify(in_pVol_55);
    goto L80;

  anon84_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2382} out_status_16 := i28f008Identify(in_pVol_55);
    goto L80;

  anon103_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2383} out_status_16 := i28f016Identify(in_pVol_55);
    goto L80;

  anon100_Then:
    assume out_Tmp_895 == 2;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 2384} out_status_16 := amdMTDIdentify(in_pVol_55);
    goto L80;

  anon83_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2385} out_status_16 := cfiscsIdentify(in_pVol_55);
    goto L80;

  anon82_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2386} out_status_16 := doc2000Identify_sdv_static_function_15(in_pVol_55);
    goto L80;

  anon81_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2387} out_status_16 := docPlusIdentify(in_pVol_55);
    goto L80;

  anon80_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2388} out_status_16 := i28f008Identify(in_pVol_55);
    goto L80;

  anon101_Then:
    assume {:IndirectCall} true;
    call {:si_unique_call 2389} out_status_16 := i28f016Identify(in_pVol_55);
    goto L80;

  anon99_Then:
    assume out_Tmp_895 == 3;
    goto L80;

  anon98_Then:
    assume out_Tmp_895 == 4;
    goto L80;

  anon97_Then:
    assume out_Tmp_895 == 5;
    goto L80;

  anon96_Then:
    assume out_Tmp_895 == 6;
    goto L80;

  anon95_Then:
    assume out_Tmp_895 == 7;
    goto L80;

  anon94_Then:
    assume out_Tmp_895 == 8;
    goto L80;

  anon93_Then:
    assume out_Tmp_895 == 9;
    goto L80;
}



procedure {:LoopProcedure} flIdentifyFlash_loop_L72(in_Tmp_895: int, in_iMTD: int, in_status_16: int, in_pVol_55: int) returns (out_Tmp_895: int, out_iMTD: int, out_status_16: int);
  modifies alloc;
  free ensures {:va_keep} out_status_16 == 26 || out_status_16 == 0 || out_status_16 == 115 || out_status_16 == 111 || out_status_16 == in_status_16;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flIntelSize_loop_L36(in_i_13: int, in_Tmp_907: int, in_Tmp_911: int, in_flashPtr_10: int, in_Tmp_914: int, in_resetCmd_1: int, in_pVol_58: int, in_amdCmdRoutine_1: int, in_idOffset_2: int) returns (out_i_13: int, out_Tmp_907: int, out_Tmp_911: int, out_Tmp_914: int)
{

  entry:
    out_i_13, out_Tmp_907, out_Tmp_911, out_Tmp_914 := in_i_13, in_Tmp_907, in_Tmp_911, in_Tmp_914;
    goto L36, exit;

  exit:
    return;

  L36:
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    goto anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} in_amdCmdRoutine_1 != 0;
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    havoc out_Tmp_911;
    assume {:IndirectCall} true;
    assume in_amdCmdRoutine_1 == li2bplFunctionConstant558;
    call {:si_unique_call 2391} amdCommand(in_pVol_58, out_Tmp_911, 144, in_flashPtr_10);
    goto L44;

  L44:
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    goto anon30_Else;

  anon30_Else:
    out_Tmp_914 := out_i_13;
    assume {:nonnull} in_flashPtr_10 != 0;
    assume in_flashPtr_10 > 0;
    out_i_13 := out_i_13 + 1;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    call {:si_unique_call 2392} {:si_old_unique_call 1} out_i_13, out_Tmp_907, out_Tmp_911, out_Tmp_914 := flIntelSize_loop_L36(out_i_13, out_Tmp_907, out_Tmp_911, in_flashPtr_10, out_Tmp_914, in_resetCmd_1, in_pVol_58, in_amdCmdRoutine_1, in_idOffset_2);
    return;

  anon25_Then:
    assume {:partition} in_amdCmdRoutine_1 == 0;
    out_Tmp_907 := out_i_13;
    assume {:nonnull} in_flashPtr_10 != 0;
    assume in_flashPtr_10 > 0;
    goto L44;
}



procedure {:LoopProcedure} flIntelSize_loop_L36(in_i_13: int, in_Tmp_907: int, in_Tmp_911: int, in_flashPtr_10: int, in_Tmp_914: int, in_resetCmd_1: int, in_pVol_58: int, in_amdCmdRoutine_1: int, in_idOffset_2: int) returns (out_i_13: int, out_Tmp_907: int, out_Tmp_911: int, out_Tmp_914: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flIntelSize_loop_L19(in_i_13: int, in_Tmp_907: int, in_Tmp_908: int, in_Tmp_911: int, in_flashPtr_10: int, in_sdv_421: int, in_Tmp_914: int, in_resetCmd_1: int, in_pVol_58: int, in_amdCmdRoutine_1: int, in_idOffset_2: int) returns (out_i_13: int, out_Tmp_907: int, out_Tmp_908: int, out_Tmp_911: int, out_flashPtr_10: int, out_Tmp_914: int)
{

  entry:
    out_i_13, out_Tmp_907, out_Tmp_908, out_Tmp_911, out_flashPtr_10, out_Tmp_914 := in_i_13, in_Tmp_907, in_Tmp_908, in_Tmp_911, in_flashPtr_10, in_Tmp_914;
    goto L19, exit;

  exit:
    return;

  L19:
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    goto anon22_Else;

  anon22_Else:
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    out_flashPtr_10 := in_sdv_421;
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    goto anon28_Else;

  anon28_Else:
    goto L30;

  L30:
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    out_Tmp_908 := 0;
    goto L35;

  L35:
    out_i_13 := out_Tmp_908;
    goto L36;

  L36:
    call {:si_unique_call 2393} out_i_13, out_Tmp_907, out_Tmp_911, out_Tmp_914 := flIntelSize_loop_L36(out_i_13, out_Tmp_907, out_Tmp_911, out_flashPtr_10, out_Tmp_914, in_resetCmd_1, in_pVol_58, in_amdCmdRoutine_1, in_idOffset_2);
    goto L36_last;

  L36_last:
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} in_amdCmdRoutine_1 != 0;
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    havoc out_Tmp_911;
    assume {:IndirectCall} true;
    assume in_amdCmdRoutine_1 == li2bplFunctionConstant558;
    call {:si_unique_call 2394} amdCommand(in_pVol_58, out_Tmp_911, 144, out_flashPtr_10);
    goto L44;

  L44:
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    goto anon30_Else;

  anon30_Else:
    out_Tmp_914 := out_i_13;
    assume {:nonnull} out_flashPtr_10 != 0;
    assume out_flashPtr_10 > 0;
    out_i_13 := out_i_13 + 1;
    assume false;
    return;

  anon25_Then:
    assume {:partition} in_amdCmdRoutine_1 == 0;
    out_Tmp_907 := out_i_13;
    assume {:nonnull} out_flashPtr_10 != 0;
    assume out_flashPtr_10 > 0;
    goto L44;

  anon24_Then:
    assume {:nonnull} in_pVol_58 != 0;
    assume in_pVol_58 > 0;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    call {:si_unique_call 2395} {:si_old_unique_call 1} out_i_13, out_Tmp_907, out_Tmp_908, out_Tmp_911, out_flashPtr_10, out_Tmp_914 := flIntelSize_loop_L19(out_i_13, out_Tmp_907, out_Tmp_908, out_Tmp_911, out_flashPtr_10, in_sdv_421, out_Tmp_914, in_resetCmd_1, in_pVol_58, in_amdCmdRoutine_1, in_idOffset_2);
    return;

  anon23_Then:
    out_Tmp_908 := 1;
    goto L35;

  anon27_Then:
    goto L30;
}



procedure {:LoopProcedure} flIntelSize_loop_L19(in_i_13: int, in_Tmp_907: int, in_Tmp_908: int, in_Tmp_911: int, in_flashPtr_10: int, in_sdv_421: int, in_Tmp_914: int, in_resetCmd_1: int, in_pVol_58: int, in_amdCmdRoutine_1: int, in_idOffset_2: int) returns (out_i_13: int, out_Tmp_907: int, out_Tmp_908: int, out_Tmp_911: int, out_flashPtr_10: int, out_Tmp_914: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_908 == 0 || out_Tmp_908 == 1 || out_Tmp_908 == in_Tmp_908;
  free ensures {:va_keep} out_flashPtr_10 == in_flashPtr_10 || out_flashPtr_10 == in_sdv_421;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flInitSockets_loop_L7(in_Tmp_968: int, in_Tmp_969: int, in_Tmp_970: int, in_sdv_430: int, in_pVol_71: int, in_Tmp_972: int, in_sdv_431: int, in_volNo_14: int, in_fl_69: int) returns (out_Tmp_968: int, out_Tmp_969: int, out_Tmp_970: int, out_sdv_430: int, out_Tmp_972: int, out_sdv_431: int, out_volNo_14: int, out_fl_69: int)
{

  entry:
    out_Tmp_968, out_Tmp_969, out_Tmp_970, out_sdv_430, out_Tmp_972, out_sdv_431, out_volNo_14, out_fl_69 := in_Tmp_968, in_Tmp_969, in_Tmp_970, in_sdv_430, in_Tmp_972, in_sdv_431, in_volNo_14, in_fl_69;
    goto L7, exit;

  exit:
    return;

  L7:
    goto anon15_Else;

  anon15_Else:
    call {:si_unique_call 2403} flSetWindowSpeed(in_pVol_71, 250);
    call {:si_unique_call 2404} flSetWindowBusWidth(in_pVol_71, 16);
    call {:si_unique_call 2405} flSetWindowSize(in_pVol_71, 2);
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    call {:si_unique_call 2406} out_sdv_430 := myMalloc(528);
    out_Tmp_970 := out_volNo_14;
    out_Tmp_972 := out_volNo_14;
    goto anon19_Else;

  anon19_Else:
    call {:si_unique_call 2402} out_sdv_431 := myMalloc(1024);
    out_Tmp_968 := out_volNo_14;
    out_Tmp_969 := out_volNo_14;
    goto anon20_Else;

  anon20_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    call {:si_unique_call 2400} out_fl_69 := initSocket_sdv_static_function_11(in_pVol_71);
    goto L36;

  L36:
    goto anon17_Then;

  anon17_Then:
    assume {:partition} out_fl_69 == 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    call {:si_unique_call 2398} VppOff_sdv_static_function_11(in_pVol_71);
    goto L41;

  L41:
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    call {:si_unique_call 2396} VccOff_sdv_static_function_11(in_pVol_71);
    goto L46;

  L46:
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    out_volNo_14 := out_volNo_14 + 1;
    goto L46_dummy;

  L46_dummy:
    call {:si_unique_call 2407} {:si_old_unique_call 1} out_Tmp_968, out_Tmp_969, out_Tmp_970, out_sdv_430, out_Tmp_972, out_sdv_431, out_volNo_14, out_fl_69 := flInitSockets_loop_L7(out_Tmp_968, out_Tmp_969, out_Tmp_970, out_sdv_430, in_pVol_71, out_Tmp_972, out_sdv_431, out_volNo_14, out_fl_69);
    return;

  anon21_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    call {:si_unique_call 2397} VccOff_socketnt(in_pVol_71);
    goto L46;

  anon18_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    call {:si_unique_call 2399} VppOff_socketnt(in_pVol_71);
    goto L41;

  anon16_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} in_pVol_71 != 0;
    assume in_pVol_71 > 0;
    call {:si_unique_call 2401} out_fl_69 := initSocket_socketnt(in_pVol_71);
    goto L36;
}



procedure {:LoopProcedure} flInitSockets_loop_L7(in_Tmp_968: int, in_Tmp_969: int, in_Tmp_970: int, in_sdv_430: int, in_pVol_71: int, in_Tmp_972: int, in_sdv_431: int, in_volNo_14: int, in_fl_69: int) returns (out_Tmp_968: int, out_Tmp_969: int, out_Tmp_970: int, out_sdv_430: int, out_Tmp_972: int, out_sdv_431: int, out_volNo_14: int, out_fl_69: int);
  modifies alloc;
  free ensures {:va_keep} out_fl_69 == 0 || out_fl_69 == in_fl_69;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation createRootDirectory_sdv_static_function_4_loop_L7(in_Tmp_993: int, in_Tmp_994: int, in_sdv_440: int, in_rootDirectorySector: int, in_Tmp_995: int, in_fl_70: int, in_sectorNo_2: int, in_iEntry: int, in_pVol_79: int, in_bpb_1: int, in_volumeLabel_1: int, in_vslice_dummy_var_151: int, in_vslice_dummy_var_152: int, in_vslice_dummy_var_153: int) returns (out_Tmp_993: int, out_Tmp_994: int, out_sdv_440: int, out_Tmp_995: int, out_sectorNo_2: int, out_iEntry: int, out_vslice_dummy_var_151: int, out_vslice_dummy_var_152: int, out_vslice_dummy_var_153: int)
{
  var vslice_dummy_var_1495: int;

  entry:
    out_Tmp_993, out_Tmp_994, out_sdv_440, out_Tmp_995, out_sectorNo_2, out_iEntry, out_vslice_dummy_var_151, out_vslice_dummy_var_152, out_vslice_dummy_var_153 := in_Tmp_993, in_Tmp_994, in_sdv_440, in_Tmp_995, in_sectorNo_2, in_iEntry, in_vslice_dummy_var_151, in_vslice_dummy_var_152, in_vslice_dummy_var_153;
    goto L7, exit;

  exit:
    return;

  L7:
    assume {:nonnull} in_bpb_1 != 0;
    assume in_bpb_1 > 0;
    havoc vslice_dummy_var_1495;
    call {:si_unique_call 2408} out_sdv_440 := fromUNAL(vslice_dummy_var_1495);
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_sdv_440 > out_iEntry;
    assume {:IndirectCall} true;
    call {:si_unique_call 2411} out_vslice_dummy_var_151 := flmemset(in_rootDirectorySector, 0, 512);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} out_iEntry != 0;
    goto L19;

  L19:
    out_Tmp_993 := out_sectorNo_2;
    out_sectorNo_2 := out_sectorNo_2 + 1;
    assume {:nonnull} in_pVol_79 != 0;
    assume in_pVol_79 > 0;
    goto anon12_Then;

  anon12_Then:
    assume {:partition} in_fl_70 == 0;
    out_iEntry := out_iEntry + 16;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    call {:si_unique_call 2412} {:si_old_unique_call 1} out_Tmp_993, out_Tmp_994, out_sdv_440, out_Tmp_995, out_sectorNo_2, out_iEntry, out_vslice_dummy_var_151, out_vslice_dummy_var_152, out_vslice_dummy_var_153 := createRootDirectory_sdv_static_function_4_loop_L7(out_Tmp_993, out_Tmp_994, out_sdv_440, in_rootDirectorySector, out_Tmp_995, in_fl_70, out_sectorNo_2, out_iEntry, in_pVol_79, in_bpb_1, in_volumeLabel_1, out_vslice_dummy_var_151, out_vslice_dummy_var_152, out_vslice_dummy_var_153);
    return;

  anon10_Then:
    assume {:partition} out_iEntry == 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} in_volumeLabel_1 != 0;
    assume {:nonnull} in_rootDirectorySector != 0;
    assume in_rootDirectorySector > 0;
    havoc out_Tmp_995;
    assume {:IndirectCall} true;
    call {:si_unique_call 2409} out_vslice_dummy_var_152 := flmemset(out_Tmp_995, 32, 11);
    assume {:nonnull} in_rootDirectorySector != 0;
    assume in_rootDirectorySector > 0;
    havoc out_Tmp_994;
    assume {:IndirectCall} true;
    call {:si_unique_call 2410} out_vslice_dummy_var_153 := flmemcpy(out_Tmp_994, in_volumeLabel_1, 11);
    assume {:nonnull} in_rootDirectorySector != 0;
    assume in_rootDirectorySector > 0;
    assume {:nonnull} in_rootDirectorySector != 0;
    assume in_rootDirectorySector > 0;
    assume {:nonnull} in_rootDirectorySector != 0;
    assume in_rootDirectorySector > 0;
    goto L19;

  anon11_Then:
    assume {:partition} in_volumeLabel_1 == 0;
    goto L19;
}



procedure {:LoopProcedure} createRootDirectory_sdv_static_function_4_loop_L7(in_Tmp_993: int, in_Tmp_994: int, in_sdv_440: int, in_rootDirectorySector: int, in_Tmp_995: int, in_fl_70: int, in_sectorNo_2: int, in_iEntry: int, in_pVol_79: int, in_bpb_1: int, in_volumeLabel_1: int, in_vslice_dummy_var_151: int, in_vslice_dummy_var_152: int, in_vslice_dummy_var_153: int) returns (out_Tmp_993: int, out_Tmp_994: int, out_sdv_440: int, out_Tmp_995: int, out_sectorNo_2: int, out_iEntry: int, out_vslice_dummy_var_151: int, out_vslice_dummy_var_152: int, out_vslice_dummy_var_153: int);
  free ensures {:va_keep} out_vslice_dummy_var_151 == in_vslice_dummy_var_151 || out_vslice_dummy_var_151 == in_rootDirectorySector;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation getDriveGeometry_sdv_static_function_4_loop_L46(in_noOfClusters: int, in_Tmp_1002: int, in_bpb_2: int, in_oldFormat_1: int, in_boogieTmp: int) returns (out_noOfClusters: int, out_Tmp_1002: int, out_boogieTmp: int)
{

  entry:
    out_noOfClusters, out_Tmp_1002, out_boogieTmp := in_noOfClusters, in_Tmp_1002, in_boogieTmp;
    goto L46, exit;

  exit:
    return;

  L46:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} in_oldFormat_1 != 0;
    goto L48;

  L48:
    out_Tmp_1002 := 65534;
    goto L49;

  L49:
    goto anon27_Else;

  anon27_Else:
    assume {:partition} out_noOfClusters > out_Tmp_1002;
    assume {:nonnull} in_bpb_2 != 0;
    assume in_bpb_2 > 0;
    call {:si_unique_call 2413} out_boogieTmp := corral_nondet();
    call {:si_unique_call 2414} out_noOfClusters := corral_nondet();
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    call {:si_unique_call 2415} {:si_old_unique_call 1} out_noOfClusters, out_Tmp_1002, out_boogieTmp := getDriveGeometry_sdv_static_function_4_loop_L46(out_noOfClusters, out_Tmp_1002, in_bpb_2, in_oldFormat_1, out_boogieTmp);
    return;

  anon25_Then:
    assume {:partition} in_oldFormat_1 == 0;
    assume {:nonnull} in_bpb_2 != 0;
    assume in_bpb_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    out_Tmp_1002 := 32766;
    goto L49;

  anon26_Then:
    goto L48;
}



procedure {:LoopProcedure} getDriveGeometry_sdv_static_function_4_loop_L46(in_noOfClusters: int, in_Tmp_1002: int, in_bpb_2: int, in_oldFormat_1: int, in_boogieTmp: int) returns (out_noOfClusters: int, out_Tmp_1002: int, out_boogieTmp: int);
  free ensures {:va_keep} out_Tmp_1002 == 32766 || out_Tmp_1002 == 65534 || out_Tmp_1002 == in_Tmp_1002;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation createFATs_sdv_static_function_4_loop_L12(in_FATEntry: int, in_iSector_1: int, in_fl_75: int, in_sectorNo_3: int, in_Tmp_1014: int, in_pVol_82: int, in_bpb_4: int, in_vslice_dummy_var_156: int) returns (out_iSector_1: int, out_sectorNo_3: int, out_Tmp_1014: int, out_vslice_dummy_var_156: int)
{

  entry:
    out_iSector_1, out_sectorNo_3, out_Tmp_1014, out_vslice_dummy_var_156 := in_iSector_1, in_sectorNo_3, in_Tmp_1014, in_vslice_dummy_var_156;
    goto L12, exit;

  exit:
    return;

  L12:
    assume {:nonnull} in_bpb_4 != 0;
    assume in_bpb_4 > 0;
    goto anon12_Else;

  anon12_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 2416} out_vslice_dummy_var_156 := flmemset(in_FATEntry, 0, 512);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} out_iSector_1 != 0;
    goto L20;

  L20:
    out_Tmp_1014 := out_sectorNo_3;
    out_sectorNo_3 := out_sectorNo_3 + 1;
    assume {:nonnull} in_pVol_82 != 0;
    assume in_pVol_82 > 0;
    goto anon14_Then;

  anon14_Then:
    assume {:partition} in_fl_75 == 0;
    out_iSector_1 := out_iSector_1 + 1;
    goto anon14_Then_dummy;

  anon14_Then_dummy:
    call {:si_unique_call 2417} {:si_old_unique_call 1} out_iSector_1, out_sectorNo_3, out_Tmp_1014, out_vslice_dummy_var_156 := createFATs_sdv_static_function_4_loop_L12(in_FATEntry, out_iSector_1, in_fl_75, out_sectorNo_3, out_Tmp_1014, in_pVol_82, in_bpb_4, out_vslice_dummy_var_156);
    return;

  anon13_Then:
    assume {:partition} out_iSector_1 == 0;
    assume {:nonnull} in_FATEntry != 0;
    assume in_FATEntry > 0;
    assume {:nonnull} in_bpb_4 != 0;
    assume in_bpb_4 > 0;
    assume {:nonnull} in_FATEntry != 0;
    assume in_FATEntry > 0;
    assume {:nonnull} in_FATEntry != 0;
    assume in_FATEntry > 0;
    assume {:nonnull} in_bpb_4 != 0;
    assume in_bpb_4 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} in_FATEntry != 0;
    assume in_FATEntry > 0;
    goto L20;

  anon15_Then:
    goto L20;
}



procedure {:LoopProcedure} createFATs_sdv_static_function_4_loop_L12(in_FATEntry: int, in_iSector_1: int, in_fl_75: int, in_sectorNo_3: int, in_Tmp_1014: int, in_pVol_82: int, in_bpb_4: int, in_vslice_dummy_var_156: int) returns (out_iSector_1: int, out_sectorNo_3: int, out_Tmp_1014: int, out_vslice_dummy_var_156: int);
  free ensures {:va_keep} out_vslice_dummy_var_156 == in_vslice_dummy_var_156 || out_vslice_dummy_var_156 == in_FATEntry;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation createFATs_sdv_static_function_4_loop_L7(in_iFAT: int, in_FATEntry: int, in_iSector_1: int, in_fl_75: int, in_sectorNo_3: int, in_Tmp_1014: int, in_pVol_82: int, in_bpb_4: int, in_vslice_dummy_var_156: int) returns (out_iFAT: int, out_iSector_1: int, out_sectorNo_3: int, out_Tmp_1014: int, out_vslice_dummy_var_156: int)
{

  entry:
    out_iFAT, out_iSector_1, out_sectorNo_3, out_Tmp_1014, out_vslice_dummy_var_156 := in_iFAT, in_iSector_1, in_sectorNo_3, in_Tmp_1014, in_vslice_dummy_var_156;
    goto L7, exit;

  exit:
    return;

  L7:
    assume {:nonnull} in_bpb_4 != 0;
    assume in_bpb_4 > 0;
    goto anon11_Else;

  anon11_Else:
    out_iSector_1 := 0;
    goto L12;

  L12:
    call {:si_unique_call 2418} out_iSector_1, out_sectorNo_3, out_Tmp_1014, out_vslice_dummy_var_156 := createFATs_sdv_static_function_4_loop_L12(in_FATEntry, out_iSector_1, in_fl_75, out_sectorNo_3, out_Tmp_1014, in_pVol_82, in_bpb_4, out_vslice_dummy_var_156);
    goto L12_last;

  L12_last:
    assume {:nonnull} in_bpb_4 != 0;
    assume in_bpb_4 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:IndirectCall} true;
    call {:si_unique_call 2419} out_vslice_dummy_var_156 := flmemset(in_FATEntry, 0, 512);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} out_iSector_1 != 0;
    goto L20;

  L20:
    out_Tmp_1014 := out_sectorNo_3;
    out_sectorNo_3 := out_sectorNo_3 + 1;
    assume {:nonnull} in_pVol_82 != 0;
    assume in_pVol_82 > 0;
    goto anon14_Then;

  anon14_Then:
    assume {:partition} in_fl_75 == 0;
    out_iSector_1 := out_iSector_1 + 1;
    assume false;
    return;

  anon13_Then:
    assume {:partition} out_iSector_1 == 0;
    assume {:nonnull} in_FATEntry != 0;
    assume in_FATEntry > 0;
    assume {:nonnull} in_bpb_4 != 0;
    assume in_bpb_4 > 0;
    assume {:nonnull} in_FATEntry != 0;
    assume in_FATEntry > 0;
    assume {:nonnull} in_FATEntry != 0;
    assume in_FATEntry > 0;
    assume {:nonnull} in_bpb_4 != 0;
    assume in_bpb_4 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} in_FATEntry != 0;
    assume in_FATEntry > 0;
    goto L20;

  anon15_Then:
    goto L20;

  anon12_Then:
    out_iFAT := out_iFAT + 1;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    call {:si_unique_call 2420} {:si_old_unique_call 1} out_iFAT, out_iSector_1, out_sectorNo_3, out_Tmp_1014, out_vslice_dummy_var_156 := createFATs_sdv_static_function_4_loop_L7(out_iFAT, in_FATEntry, out_iSector_1, in_fl_75, out_sectorNo_3, out_Tmp_1014, in_pVol_82, in_bpb_4, out_vslice_dummy_var_156);
    return;
}



procedure {:LoopProcedure} createFATs_sdv_static_function_4_loop_L7(in_iFAT: int, in_FATEntry: int, in_iSector_1: int, in_fl_75: int, in_sectorNo_3: int, in_Tmp_1014: int, in_pVol_82: int, in_bpb_4: int, in_vslice_dummy_var_156: int) returns (out_iFAT: int, out_iSector_1: int, out_sectorNo_3: int, out_Tmp_1014: int, out_vslice_dummy_var_156: int);
  free ensures {:va_keep} out_vslice_dummy_var_156 == in_vslice_dummy_var_156 || out_vslice_dummy_var_156 == in_FATEntry;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkRetrieveHeader_loop_L27(in_sdv_458: int, in_index: int, in_flash_29: int, in_status_17: int, in_vslice_dummy_var_159: int) returns (out_index: int, out_vslice_dummy_var_159: int)
{

  entry:
    out_index, out_vslice_dummy_var_159 := in_index, in_vslice_dummy_var_159;
    goto L27, exit;

  exit:
    return;

  L27:
    goto anon21_Else;

  anon21_Else:
    assume {:partition} 2 > out_index;
    call {:si_unique_call 2421} out_vslice_dummy_var_159 := corral_nondet();
    assume {:nonnull} in_flash_29 != 0;
    assume in_flash_29 > 0;
    goto anon22_Then;

  anon22_Then:
    assume {:partition} in_status_17 == 0;
    goto anon23_Else;

  anon23_Else:
    assume {:partition} in_sdv_458 != 0;
    out_index := out_index + 1;
    goto anon23_Else_dummy;

  anon23_Else_dummy:
    havoc out_index;
    return;
}



procedure {:LoopProcedure} bdkRetrieveHeader_loop_L27(in_sdv_458: int, in_index: int, in_flash_29: int, in_status_17: int, in_vslice_dummy_var_159: int) returns (out_index: int, out_vslice_dummy_var_159: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkRetrieveHeader_loop_L45(in_Tmp_1025: int, in_index: int, in_Tmp_1029: int, in_bbt: int, in_Tmp_1030: int, in_headerBuffer: int) returns (out_Tmp_1025: int, out_index: int, out_Tmp_1029: int, out_Tmp_1030: int)
{

  entry:
    out_Tmp_1025, out_index, out_Tmp_1029, out_Tmp_1030 := in_Tmp_1025, in_index, in_Tmp_1029, in_Tmp_1030;
    goto L45, exit;

  exit:
    return;

  L45:
    assume {:CounterLoop 35} {:Counter "index"} true;
    goto anon24_Else;

  anon24_Else:
    assume {:partition} 35 > out_index;
    out_Tmp_1025 := out_index;
    out_Tmp_1029 := out_index;
    out_Tmp_1030 := out_index;
    assume {:nonnull} in_bbt != 0;
    assume in_bbt > 0;
    assume {:nonnull} in_headerBuffer != 0;
    assume in_headerBuffer > 0;
    out_index := out_index + 1;
    goto anon24_Else_dummy;

  anon24_Else_dummy:
    havoc out_index;
    return;
}



procedure {:LoopProcedure} bdkRetrieveHeader_loop_L45(in_Tmp_1025: int, in_index: int, in_Tmp_1029: int, in_bbt: int, in_Tmp_1030: int, in_headerBuffer: int) returns (out_Tmp_1025: int, out_index: int, out_Tmp_1029: int, out_Tmp_1030: int);
  free ensures {:va_keep} out_Tmp_1025 == in_index || out_Tmp_1025 == in_Tmp_1025;
  free ensures {:va_keep} out_Tmp_1029 == in_index || out_Tmp_1029 == in_Tmp_1029;
  free ensures {:va_keep} out_Tmp_1030 == in_index || out_Tmp_1030 == in_Tmp_1030;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkRetrieveHeader_loop_L23(in_iUnit_1: int, in_sdv_458: int, in_index: int, in_endUnit_1: int, in_flash_29: int, in_flag: int, in_status_17: int, in_vslice_dummy_var_159: int) returns (out_iUnit_1: int, out_index: int, out_flag: int, out_vslice_dummy_var_159: int)
{

  entry:
    out_iUnit_1, out_index, out_flag, out_vslice_dummy_var_159 := in_iUnit_1, in_index, in_flag, in_vslice_dummy_var_159;
    goto L23, exit;

  exit:
    return;

  L23:
    goto anon18_Else;

  anon18_Else:
    assume {:partition} in_endUnit_1 > out_iUnit_1;
    goto anon20_Else;

  anon20_Else:
    assume {:partition} out_flag == 0;
    out_index := 0;
    goto L27;

  L27:
    call {:si_unique_call 2422} out_index, out_vslice_dummy_var_159 := bdkRetrieveHeader_loop_L27(in_sdv_458, out_index, in_flash_29, in_status_17, out_vslice_dummy_var_159);
    goto L27_last;

  L27_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} 2 > out_index;
    call {:si_unique_call 2423} out_vslice_dummy_var_159 := corral_nondet();
    assume {:nonnull} in_flash_29 != 0;
    assume in_flash_29 > 0;
    goto anon22_Then;

  anon22_Then:
    assume {:partition} in_status_17 == 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} in_sdv_458 != 0;
    out_index := out_index + 1;
    assume false;
    return;

  anon23_Then:
    assume {:partition} in_sdv_458 == 0;
    out_flag := 1;
    goto L28;

  L28:
    out_iUnit_1 := out_iUnit_1 + 1;
    goto L28_dummy;

  L28_dummy:
    call {:si_unique_call 2424} {:si_old_unique_call 1} out_iUnit_1, out_index, out_flag, out_vslice_dummy_var_159 := bdkRetrieveHeader_loop_L23(out_iUnit_1, in_sdv_458, out_index, in_endUnit_1, in_flash_29, out_flag, in_status_17, out_vslice_dummy_var_159);
    return;

  anon21_Then:
    assume {:partition} out_index >= 2;
    goto L28;
}



procedure {:LoopProcedure} bdkRetrieveHeader_loop_L23(in_iUnit_1: int, in_sdv_458: int, in_index: int, in_endUnit_1: int, in_flash_29: int, in_flag: int, in_status_17: int, in_vslice_dummy_var_159: int) returns (out_iUnit_1: int, out_index: int, out_flag: int, out_vslice_dummy_var_159: int);
  free ensures {:va_keep} out_flag == 1 || out_flag == in_flag;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkRetrieveHeader_loop_L18(in_Tmp_1025: int, in_iUnit_1: int, in_floorNo_1: int, in_sdv_458: int, in_index: int, in_endUnit_1: int, in_flash_29: int, in_Tmp_1029: int, in_flag: int, in_status_17: int, in_bbt: int, in_Tmp_1030: int, in_headerBuffer: int, in_vslice_dummy_var_159: int) returns (out_Tmp_1025: int, out_iUnit_1: int, out_floorNo_1: int, out_index: int, out_endUnit_1: int, out_Tmp_1029: int, out_flag: int, out_Tmp_1030: int, out_vslice_dummy_var_159: int)
{

  entry:
    out_Tmp_1025, out_iUnit_1, out_floorNo_1, out_index, out_endUnit_1, out_Tmp_1029, out_flag, out_Tmp_1030, out_vslice_dummy_var_159 := in_Tmp_1025, in_iUnit_1, in_floorNo_1, in_index, in_endUnit_1, in_Tmp_1029, in_flag, in_Tmp_1030, in_vslice_dummy_var_159;
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} in_flash_29 != 0;
    assume in_flash_29 > 0;
    goto anon17_Else;

  anon17_Else:
    assume {:nonnull} in_flash_29 != 0;
    assume in_flash_29 > 0;
    havoc out_iUnit_1;
    havoc out_endUnit_1;
    out_flag := 0;
    goto L23;

  L23:
    call {:si_unique_call 2426} out_iUnit_1, out_index, out_flag, out_vslice_dummy_var_159 := bdkRetrieveHeader_loop_L23(out_iUnit_1, in_sdv_458, out_index, out_endUnit_1, in_flash_29, out_flag, in_status_17, out_vslice_dummy_var_159);
    goto L23_last;

  L23_last:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} out_endUnit_1 > out_iUnit_1;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} out_flag == 0;
    out_index := 0;
    goto L27;

  L27:
    call {:si_unique_call 2427} out_index, out_vslice_dummy_var_159 := bdkRetrieveHeader_loop_L27(in_sdv_458, out_index, in_flash_29, in_status_17, out_vslice_dummy_var_159);
    goto L27_last;

  L27_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} 2 > out_index;
    call {:si_unique_call 2428} out_vslice_dummy_var_159 := corral_nondet();
    assume {:nonnull} in_flash_29 != 0;
    assume in_flash_29 > 0;
    goto anon22_Then;

  anon22_Then:
    assume {:partition} in_status_17 == 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} in_sdv_458 != 0;
    out_index := out_index + 1;
    assume false;
    return;

  anon23_Then:
    assume {:partition} in_sdv_458 == 0;
    out_flag := 1;
    goto L28;

  L28:
    out_iUnit_1 := out_iUnit_1 + 1;
    assume false;
    return;

  anon21_Then:
    assume {:partition} out_index >= 2;
    goto L28;

  anon20_Then:
    assume {:partition} out_flag != 0;
    goto L24;

  L24:
    goto anon19_Else;

  anon19_Else:
    assume {:partition} out_flag != 0;
    out_index := 0;
    goto L45;

  L45:
    call {:si_unique_call 2425} out_Tmp_1025, out_index, out_Tmp_1029, out_Tmp_1030 := bdkRetrieveHeader_loop_L45(out_Tmp_1025, out_index, out_Tmp_1029, in_bbt, out_Tmp_1030, in_headerBuffer);
    goto L45_last;

  L45_last:
    assume {:CounterLoop 35} {:Counter "index"} true;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} 35 > out_index;
    out_Tmp_1025 := out_index;
    out_Tmp_1029 := out_index;
    out_Tmp_1030 := out_index;
    assume {:nonnull} in_bbt != 0;
    assume in_bbt > 0;
    assume {:nonnull} in_headerBuffer != 0;
    assume in_headerBuffer > 0;
    out_index := out_index + 1;
    assume false;
    return;

  anon24_Then:
    assume {:partition} out_index >= 35;
    out_floorNo_1 := out_floorNo_1 + 1;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    call {:si_unique_call 2429} {:si_old_unique_call 1} out_Tmp_1025, out_iUnit_1, out_floorNo_1, out_index, out_endUnit_1, out_Tmp_1029, out_flag, out_Tmp_1030, out_vslice_dummy_var_159 := bdkRetrieveHeader_loop_L18(out_Tmp_1025, out_iUnit_1, out_floorNo_1, in_sdv_458, out_index, out_endUnit_1, in_flash_29, out_Tmp_1029, out_flag, in_status_17, in_bbt, out_Tmp_1030, in_headerBuffer, out_vslice_dummy_var_159);
    return;

  anon18_Then:
    assume {:partition} out_iUnit_1 >= out_endUnit_1;
    goto L24;
}



procedure {:LoopProcedure} bdkRetrieveHeader_loop_L18(in_Tmp_1025: int, in_iUnit_1: int, in_floorNo_1: int, in_sdv_458: int, in_index: int, in_endUnit_1: int, in_flash_29: int, in_Tmp_1029: int, in_flag: int, in_status_17: int, in_bbt: int, in_Tmp_1030: int, in_headerBuffer: int, in_vslice_dummy_var_159: int) returns (out_Tmp_1025: int, out_iUnit_1: int, out_floorNo_1: int, out_index: int, out_endUnit_1: int, out_Tmp_1029: int, out_flag: int, out_Tmp_1030: int, out_vslice_dummy_var_159: int);
  free ensures {:va_keep} out_Tmp_1025 == 0 || out_Tmp_1025 == in_Tmp_1025;
  free ensures {:va_keep} out_Tmp_1029 == 0 || out_Tmp_1029 == in_Tmp_1029;
  free ensures {:va_keep} out_flag == 1 || out_flag == 0 || out_flag == in_flag;
  free ensures {:va_keep} out_Tmp_1030 == 0 || out_Tmp_1030 == in_Tmp_1030;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkEraseBootArea_loop_L28(in_Tmp_1035: int, in_Tmp_1038: int, in_Tmp_1040: int, in_Tmp_1041: int, in_sdv_464: int, in_flash_30: int, in_status_18: int, in_iBlock: int, in_signature_1: int, in_vslice_dummy_var_162: int) returns (out_Tmp_1035: int, out_Tmp_1038: int, out_Tmp_1040: int, out_Tmp_1041: int, out_sdv_464: int, out_iBlock: int, out_vslice_dummy_var_162: int)
{
  var vslice_dummy_var_1496: int;

  entry:
    out_Tmp_1035, out_Tmp_1038, out_Tmp_1040, out_Tmp_1041, out_sdv_464, out_iBlock, out_vslice_dummy_var_162 := in_Tmp_1035, in_Tmp_1038, in_Tmp_1040, in_Tmp_1041, in_sdv_464, in_iBlock, in_vslice_dummy_var_162;
    goto L28, exit;

  exit:
    return;

  L28:
    havoc out_Tmp_1040;
    havoc out_Tmp_1041;
    assume {:nonnull} out_Tmp_1041 != 0;
    assume out_Tmp_1041 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc out_Tmp_1035;
    assume {:nonnull} out_Tmp_1035 != 0;
    assume out_Tmp_1035 > 0;
    havoc out_iBlock;
    goto anon26_Then;

  anon26_Then:
    goto L30;

  L30:
    call {:si_unique_call 2431} out_vslice_dummy_var_162 := corral_nondet();
    assume {:nonnull} in_flash_30 != 0;
    assume in_flash_30 > 0;
    goto anon21_Then;

  anon21_Then:
    assume {:partition} in_status_18 == 0;
    out_Tmp_1038 := in_signature_1;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1496;
    call {:si_unique_call 2430} out_sdv_464 := flmemcmp(vslice_dummy_var_1496, out_Tmp_1038, 4);
    goto anon22_Then;

  anon22_Then:
    assume {:partition} out_sdv_464 != 0;
    out_iBlock := out_iBlock + 1;
    goto anon27_Then;

  anon27_Then:
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    call {:si_unique_call 2432} {:si_old_unique_call 1} out_Tmp_1035, out_Tmp_1038, out_Tmp_1040, out_Tmp_1041, out_sdv_464, out_iBlock, out_vslice_dummy_var_162 := bdkEraseBootArea_loop_L28(out_Tmp_1035, out_Tmp_1038, out_Tmp_1040, out_Tmp_1041, out_sdv_464, in_flash_30, in_status_18, out_iBlock, in_signature_1, out_vslice_dummy_var_162);
    return;

  anon25_Then:
    goto L30;
}



procedure {:LoopProcedure} bdkEraseBootArea_loop_L28(in_Tmp_1035: int, in_Tmp_1038: int, in_Tmp_1040: int, in_Tmp_1041: int, in_sdv_464: int, in_flash_30: int, in_status_18: int, in_iBlock: int, in_signature_1: int, in_vslice_dummy_var_162: int) returns (out_Tmp_1035: int, out_Tmp_1038: int, out_Tmp_1040: int, out_Tmp_1041: int, out_sdv_464: int, out_iBlock: int, out_vslice_dummy_var_162: int);
  free ensures {:va_keep} out_Tmp_1038 == in_Tmp_1038 || out_Tmp_1038 == in_signature_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkEraseBootArea_loop_L26(in_Tmp_1035: int, in_fl_77: int, in_Tmp_1038: int, in_Tmp_1040: int, in_Tmp_1041: int, in_index_1: int, in_sdv_464: int, in_flash_30: int, in_fl_79: int, in_status_18: int, in_iBlock: int, in_noOfBlocks_1: int, in_signature_1: int, in_vslice_dummy_var_162: int, in_vslice_dummy_var_163: int) returns (out_Tmp_1035: int, out_Tmp_1038: int, out_Tmp_1040: int, out_Tmp_1041: int, out_index_1: int, out_sdv_464: int, out_iBlock: int, out_vslice_dummy_var_162: int, out_vslice_dummy_var_163: int)
{
  var vslice_dummy_var_1497: int;

  entry:
    out_Tmp_1035, out_Tmp_1038, out_Tmp_1040, out_Tmp_1041, out_index_1, out_sdv_464, out_iBlock, out_vslice_dummy_var_162, out_vslice_dummy_var_163 := in_Tmp_1035, in_Tmp_1038, in_Tmp_1040, in_Tmp_1041, in_index_1, in_sdv_464, in_iBlock, in_vslice_dummy_var_162, in_vslice_dummy_var_163;
    goto L26, exit;

  exit:
    return;

  L26:
    goto anon20_Else;

  anon20_Else:
    assume {:partition} in_noOfBlocks_1 > out_index_1;
    goto L28;

  L28:
    call {:si_unique_call 2436} out_Tmp_1035, out_Tmp_1038, out_Tmp_1040, out_Tmp_1041, out_sdv_464, out_iBlock, out_vslice_dummy_var_162 := bdkEraseBootArea_loop_L28(out_Tmp_1035, out_Tmp_1038, out_Tmp_1040, out_Tmp_1041, out_sdv_464, in_flash_30, in_status_18, out_iBlock, in_signature_1, out_vslice_dummy_var_162);
    goto L28_last;

  L28_last:
    havoc out_Tmp_1040;
    havoc out_Tmp_1041;
    assume {:nonnull} out_Tmp_1041 != 0;
    assume out_Tmp_1041 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc out_Tmp_1035;
    assume {:nonnull} out_Tmp_1035 != 0;
    assume out_Tmp_1035 > 0;
    havoc out_iBlock;
    goto anon26_Then;

  anon26_Then:
    goto L30;

  L30:
    call {:si_unique_call 2435} out_vslice_dummy_var_162 := corral_nondet();
    assume {:nonnull} in_flash_30 != 0;
    assume in_flash_30 > 0;
    goto anon21_Then;

  anon21_Then:
    assume {:partition} in_status_18 == 0;
    out_Tmp_1038 := in_signature_1;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1497;
    call {:si_unique_call 2434} out_sdv_464 := flmemcmp(vslice_dummy_var_1497, out_Tmp_1038, 4);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} out_sdv_464 == 0;
    assume {:nonnull} in_flash_30 != 0;
    assume in_flash_30 > 0;
    goto anon23_Else;

  anon23_Else:
    assume {:partition} in_fl_77 == 0;
    call {:si_unique_call 2433} out_vslice_dummy_var_163 := corral_nondet();
    assume {:nonnull} in_flash_30 != 0;
    assume in_flash_30 > 0;
    goto anon24_Then;

  anon24_Then:
    assume {:partition} in_fl_79 == 0;
    out_index_1 := out_index_1 + 1;
    out_iBlock := out_iBlock + 1;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    call {:si_unique_call 2437} {:si_old_unique_call 1} out_Tmp_1035, out_Tmp_1038, out_Tmp_1040, out_Tmp_1041, out_index_1, out_sdv_464, out_iBlock, out_vslice_dummy_var_162, out_vslice_dummy_var_163 := bdkEraseBootArea_loop_L26(out_Tmp_1035, in_fl_77, out_Tmp_1038, out_Tmp_1040, out_Tmp_1041, out_index_1, out_sdv_464, in_flash_30, in_fl_79, in_status_18, out_iBlock, in_noOfBlocks_1, in_signature_1, out_vslice_dummy_var_162, out_vslice_dummy_var_163);
    return;

  anon22_Then:
    assume {:partition} out_sdv_464 != 0;
    out_iBlock := out_iBlock + 1;
    goto anon27_Then;

  anon27_Then:
    assume false;
    return;

  anon25_Then:
    goto L30;
}



procedure {:LoopProcedure} bdkEraseBootArea_loop_L26(in_Tmp_1035: int, in_fl_77: int, in_Tmp_1038: int, in_Tmp_1040: int, in_Tmp_1041: int, in_index_1: int, in_sdv_464: int, in_flash_30: int, in_fl_79: int, in_status_18: int, in_iBlock: int, in_noOfBlocks_1: int, in_signature_1: int, in_vslice_dummy_var_162: int, in_vslice_dummy_var_163: int) returns (out_Tmp_1035: int, out_Tmp_1038: int, out_Tmp_1040: int, out_Tmp_1041: int, out_index_1: int, out_sdv_464: int, out_iBlock: int, out_vslice_dummy_var_162: int, out_vslice_dummy_var_163: int);
  free ensures {:va_keep} out_Tmp_1038 == in_Tmp_1038 || out_Tmp_1038 == in_signature_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkCopyBootAreaBlock_loop_L34(in_Tmp_1048: int, in_signRead: int, in_Tmp_1050: int, in_sdv_469: int, in_flash_31: int, in_Tmp_1052: int, in_status_19: int, in_iBlock_1: int, in_vslice_dummy_var_166: int) returns (out_Tmp_1048: int, out_Tmp_1050: int, out_sdv_469: int, out_Tmp_1052: int, out_iBlock_1: int, out_vslice_dummy_var_166: int)
{
  var vslice_dummy_var_1498: int;

  entry:
    out_Tmp_1048, out_Tmp_1050, out_sdv_469, out_Tmp_1052, out_iBlock_1, out_vslice_dummy_var_166 := in_Tmp_1048, in_Tmp_1050, in_sdv_469, in_Tmp_1052, in_iBlock_1, in_vslice_dummy_var_166;
    goto L34, exit;

  exit:
    return;

  L34:
    goto anon32_Else;

  anon32_Else:
    havoc out_Tmp_1048;
    havoc out_Tmp_1052;
    assume {:nonnull} out_Tmp_1052 != 0;
    assume out_Tmp_1052 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc out_Tmp_1050;
    assume {:nonnull} out_Tmp_1050 != 0;
    assume out_Tmp_1050 > 0;
    havoc out_iBlock_1;
    goto anon39_Else;

  anon39_Else:
    goto L38;

  L38:
    call {:si_unique_call 2439} out_vslice_dummy_var_166 := corral_nondet();
    assume {:nonnull} in_flash_31 != 0;
    assume in_flash_31 > 0;
    goto anon34_Else;

  anon34_Else:
    assume {:partition} in_status_19 == 0;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1498;
    call {:si_unique_call 2438} out_sdv_469 := flmemcmp(in_signRead, vslice_dummy_var_1498, 4);
    goto anon35_Else;

  anon35_Else:
    assume {:partition} out_sdv_469 != 0;
    out_iBlock_1 := out_iBlock_1 + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    call {:si_unique_call 2440} {:si_old_unique_call 1} out_Tmp_1048, out_Tmp_1050, out_sdv_469, out_Tmp_1052, out_iBlock_1, out_vslice_dummy_var_166 := bdkCopyBootAreaBlock_loop_L34(out_Tmp_1048, in_signRead, out_Tmp_1050, out_sdv_469, in_flash_31, out_Tmp_1052, in_status_19, out_iBlock_1, out_vslice_dummy_var_166);
    return;

  anon38_Then:
    goto L38;
}



procedure {:LoopProcedure} bdkCopyBootAreaBlock_loop_L34(in_Tmp_1048: int, in_signRead: int, in_Tmp_1050: int, in_sdv_469: int, in_flash_31: int, in_Tmp_1052: int, in_status_19: int, in_iBlock_1: int, in_vslice_dummy_var_166: int) returns (out_Tmp_1048: int, out_Tmp_1050: int, out_sdv_469: int, out_Tmp_1052: int, out_iBlock_1: int, out_vslice_dummy_var_166: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkSetProtectionType_loop_L20(in_Tmp_1057: int, in_Tmp_1058: int, in_fl_80: int, in_Tmp_1060: int, in_floorNo_2: int, in_high: int, in_Tmp_1062: int, in_fl_82: int, in_Tmp_1063: int, in_Tmp_1064: int, in_newType: int) returns (out_Tmp_1057: int, out_Tmp_1058: int, out_Tmp_1060: int, out_floorNo_2: int, out_Tmp_1062: int, out_Tmp_1063: int, out_Tmp_1064: int)
{

  entry:
    out_Tmp_1057, out_Tmp_1058, out_Tmp_1060, out_floorNo_2, out_Tmp_1062, out_Tmp_1063, out_Tmp_1064 := in_Tmp_1057, in_Tmp_1058, in_Tmp_1060, in_floorNo_2, in_Tmp_1062, in_Tmp_1063, in_Tmp_1064;
    goto L20, exit;

  exit:
    return;

  L20:
    havoc out_Tmp_1063;
    assume {:nonnull} out_Tmp_1063 != 0;
    assume out_Tmp_1063 > 0;
    goto anon22_Else;

  anon22_Else:
    havoc out_Tmp_1057;
    assume {:nonnull} out_Tmp_1057 != 0;
    assume out_Tmp_1057 > 0;
    goto anon19_Else;

  anon19_Else:
    assume {:partition} in_fl_80 == 0;
    havoc out_Tmp_1064;
    assume {:nonnull} out_Tmp_1064 != 0;
    assume out_Tmp_1064 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    out_Tmp_1060 := 1;
    goto L33;

  L33:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} in_high != 0;
    out_Tmp_1062 := in_newType;
    goto L37;

  L37:
    havoc out_Tmp_1058;
    assume {:nonnull} out_Tmp_1058 != 0;
    assume out_Tmp_1058 > 0;
    goto anon20_Then;

  anon20_Then:
    assume {:partition} in_fl_82 == 0;
    out_floorNo_2 := out_floorNo_2 + 1;
    goto anon20_Then_dummy;

  anon20_Then_dummy:
    havoc out_floorNo_2;
    return;

  anon24_Then:
    assume {:partition} in_high == 0;
    out_Tmp_1062 := 1;
    goto L37;

  anon23_Then:
    out_Tmp_1060 := 0;
    goto L33;
}



procedure {:LoopProcedure} bdkSetProtectionType_loop_L20(in_Tmp_1057: int, in_Tmp_1058: int, in_fl_80: int, in_Tmp_1060: int, in_floorNo_2: int, in_high: int, in_Tmp_1062: int, in_fl_82: int, in_Tmp_1063: int, in_Tmp_1064: int, in_newType: int) returns (out_Tmp_1057: int, out_Tmp_1058: int, out_Tmp_1060: int, out_floorNo_2: int, out_Tmp_1062: int, out_Tmp_1063: int, out_Tmp_1064: int);
  free ensures {:va_keep} out_Tmp_1060 == 1 || out_Tmp_1060 == 0 || out_Tmp_1060 == in_Tmp_1060;
  free ensures {:va_keep} out_Tmp_1062 == 1 || out_Tmp_1062 == in_newType || out_Tmp_1062 == in_Tmp_1062;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkMount_sdv_static_function_25_loop_L74(in_Tmp_1078: int, in_Tmp_1080: int, in_Tmp_1090: int, in_volume_2: int, in_maxPartition: int, in_boogieTmp: int) returns (out_Tmp_1078: int, out_Tmp_1080: int, out_Tmp_1090: int, out_maxPartition: int, out_boogieTmp: int)
{

  entry:
    out_Tmp_1078, out_Tmp_1080, out_Tmp_1090, out_maxPartition, out_boogieTmp := in_Tmp_1078, in_Tmp_1080, in_Tmp_1090, in_maxPartition, in_boogieTmp;
    goto L74, exit;

  exit:
    return;

  L74:
    goto anon50_Else;

  anon50_Else:
    assume {:nonnull} in_volume_2 != 0;
    assume in_volume_2 > 0;
    goto anon51_Else;

  anon51_Else:
    out_maxPartition := out_maxPartition + 1;
    call {:si_unique_call 2441} out_boogieTmp := corral_nondet();
    call {:si_unique_call 2442} out_boogieTmp := corral_nondet();
    havoc out_Tmp_1090;
    assume {:nonnull} in_volume_2 != 0;
    assume in_volume_2 > 0;
    assume {:nonnull} in_volume_2 != 0;
    assume in_volume_2 > 0;
    havoc out_Tmp_1078;
    havoc out_Tmp_1080;
    goto anon51_Else_dummy;

  anon51_Else_dummy:
    havoc out_maxPartition;
    return;
}



procedure {:LoopProcedure} bdkMount_sdv_static_function_25_loop_L74(in_Tmp_1078: int, in_Tmp_1080: int, in_Tmp_1090: int, in_volume_2: int, in_maxPartition: int, in_boogieTmp: int) returns (out_Tmp_1078: int, out_Tmp_1080: int, out_Tmp_1090: int, out_maxPartition: int, out_boogieTmp: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkMount_sdv_static_function_25_loop_L87(in_Tmp_1077: int, in_Tmp_1082: int, in_Tmp_1086: int, in_Tmp_1088: int, in_Tmp_1091: int, in_blockMultiplierBits: int, in_maxPartition: int) returns (out_Tmp_1077: int, out_Tmp_1082: int, out_Tmp_1086: int, out_Tmp_1088: int, out_Tmp_1091: int, out_blockMultiplierBits: int)
{

  entry:
    out_Tmp_1077, out_Tmp_1082, out_Tmp_1086, out_Tmp_1088, out_Tmp_1091, out_blockMultiplierBits := in_Tmp_1077, in_Tmp_1082, in_Tmp_1086, in_Tmp_1088, in_Tmp_1091, in_blockMultiplierBits;
    goto L87, exit;

  exit:
    return;

  L87:
    goto anon52_Else;

  anon52_Else:
    assume {:partition} in_maxPartition > out_blockMultiplierBits;
    havoc out_Tmp_1077;
    out_Tmp_1091 := out_blockMultiplierBits;
    havoc out_Tmp_1086;
    havoc out_Tmp_1088;
    havoc out_Tmp_1082;
    assume {:nonnull} out_Tmp_1088 != 0;
    assume out_Tmp_1088 > 0;
    out_blockMultiplierBits := out_blockMultiplierBits + 1;
    goto anon52_Else_dummy;

  anon52_Else_dummy:
    call {:si_unique_call 2443} {:si_old_unique_call 1} out_Tmp_1077, out_Tmp_1082, out_Tmp_1086, out_Tmp_1088, out_Tmp_1091, out_blockMultiplierBits := bdkMount_sdv_static_function_25_loop_L87(out_Tmp_1077, out_Tmp_1082, out_Tmp_1086, out_Tmp_1088, out_Tmp_1091, out_blockMultiplierBits, in_maxPartition);
    return;
}



procedure {:LoopProcedure} bdkMount_sdv_static_function_25_loop_L87(in_Tmp_1077: int, in_Tmp_1082: int, in_Tmp_1086: int, in_Tmp_1088: int, in_Tmp_1091: int, in_blockMultiplierBits: int, in_maxPartition: int) returns (out_Tmp_1077: int, out_Tmp_1082: int, out_Tmp_1086: int, out_Tmp_1088: int, out_Tmp_1091: int, out_blockMultiplierBits: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkMount_sdv_static_function_25_loop_L35(in_buf1: int, in_noOfBlocks_2: int, in_sdv_479: int, in_buf2: int, in_flash_32: int, in_fl_86: int, in_iBlock_2: int, in_vslice_dummy_var_168: int) returns (out_sdv_479: int, out_iBlock_2: int, out_vslice_dummy_var_168: int)
{

  entry:
    out_sdv_479, out_iBlock_2, out_vslice_dummy_var_168 := in_sdv_479, in_iBlock_2, in_vslice_dummy_var_168;
    goto L35, exit;

  exit:
    return;

  L35:
    goto anon42_Else;

  anon42_Else:
    assume {:partition} in_noOfBlocks_2 > out_iBlock_2;
    call {:si_unique_call 2445} out_vslice_dummy_var_168 := corral_nondet();
    assume {:nonnull} in_flash_32 != 0;
    assume in_flash_32 > 0;
    goto anon44_Else;

  anon44_Else:
    assume {:partition} in_fl_86 == 0;
    assume {:IndirectCall} true;
    call {:si_unique_call 2444} out_sdv_479 := flmemcmp(in_buf2, in_buf1, 6);
    goto anon45_Else;

  anon45_Else:
    assume {:partition} out_sdv_479 != 0;
    out_iBlock_2 := out_iBlock_2 + 1;
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    call {:si_unique_call 2446} {:si_old_unique_call 1} out_sdv_479, out_iBlock_2, out_vslice_dummy_var_168 := bdkMount_sdv_static_function_25_loop_L35(in_buf1, in_noOfBlocks_2, out_sdv_479, in_buf2, in_flash_32, in_fl_86, out_iBlock_2, out_vslice_dummy_var_168);
    return;
}



procedure {:LoopProcedure} bdkMount_sdv_static_function_25_loop_L35(in_buf1: int, in_noOfBlocks_2: int, in_sdv_479: int, in_buf2: int, in_flash_32: int, in_fl_86: int, in_iBlock_2: int, in_vslice_dummy_var_168: int) returns (out_sdv_479: int, out_iBlock_2: int, out_vslice_dummy_var_168: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation getBootAreaInfo_sdv_static_function_25_loop_L36(in_Tmp_1101: int, in_Tmp_1102: int, in_Tmp_1103: int, in_Tmp_1104: int, in_Tmp_1105: int, in_fl_87: int, in_sdv_482: int, in_Tmp_1109: int, in_sdv_486: int, in_flash_33: int, in_Tmp_1110: int, in_numBlock: int, in_iBlock_3: int, in_startUnit_2: int, in_signature_2: int, in_boogieTmp: int, in_vslice_dummy_var_171: int) returns (out_Tmp_1101: int, out_Tmp_1102: int, out_Tmp_1103: int, out_Tmp_1104: int, out_Tmp_1105: int, out_sdv_482: int, out_Tmp_1109: int, out_sdv_486: int, out_Tmp_1110: int, out_numBlock: int, out_iBlock_3: int, out_boogieTmp: int, out_vslice_dummy_var_171: int)
{
  var vslice_dummy_var_1499: int;

  entry:
    out_Tmp_1101, out_Tmp_1102, out_Tmp_1103, out_Tmp_1104, out_Tmp_1105, out_sdv_482, out_Tmp_1109, out_sdv_486, out_Tmp_1110, out_numBlock, out_iBlock_3, out_boogieTmp, out_vslice_dummy_var_171 := in_Tmp_1101, in_Tmp_1102, in_Tmp_1103, in_Tmp_1104, in_Tmp_1105, in_sdv_482, in_Tmp_1109, in_sdv_486, in_Tmp_1110, in_numBlock, in_iBlock_3, in_boogieTmp, in_vslice_dummy_var_171;
    goto L36, exit;

  exit:
    return;

  L36:
    goto anon41_Else;

  anon41_Else:
    havoc out_Tmp_1103;
    havoc out_Tmp_1109;
    assume {:nonnull} out_Tmp_1109 != 0;
    assume out_Tmp_1109 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto L44;

  L44:
    call {:si_unique_call 2449} out_vslice_dummy_var_171 := corral_nondet();
    assume {:nonnull} in_flash_33 != 0;
    assume in_flash_33 > 0;
    goto anon43_Then;

  anon43_Then:
    assume {:partition} in_fl_87 == 0;
    out_Tmp_1104 := in_signature_2;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1499;
    call {:si_unique_call 2448} out_sdv_486 := flmemcmp(out_Tmp_1104, vslice_dummy_var_1499, 4);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} out_sdv_486 != 0;
    goto L57;

  L57:
    out_iBlock_3 := out_iBlock_3 + 1;
    goto L57_dummy;

  L57_dummy:
    call {:si_unique_call 2451} {:si_old_unique_call 1} out_Tmp_1101, out_Tmp_1102, out_Tmp_1103, out_Tmp_1104, out_Tmp_1105, out_sdv_482, out_Tmp_1109, out_sdv_486, out_Tmp_1110, out_numBlock, out_iBlock_3, out_boogieTmp, out_vslice_dummy_var_171 := getBootAreaInfo_sdv_static_function_25_loop_L36(out_Tmp_1101, out_Tmp_1102, out_Tmp_1103, out_Tmp_1104, out_Tmp_1105, in_fl_87, out_sdv_482, out_Tmp_1109, out_sdv_486, in_flash_33, out_Tmp_1110, out_numBlock, out_iBlock_3, in_startUnit_2, in_signature_2, out_boogieTmp, out_vslice_dummy_var_171);
    return;

  anon44_Then:
    assume {:partition} out_sdv_486 == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} out_numBlock != 0;
    goto L59;

  L59:
    out_numBlock := out_numBlock + 1;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} out_numBlock > in_startUnit_2;
    havoc out_Tmp_1110;
    out_Tmp_1101 := out_Tmp_1110 + 4 * 4;
    out_Tmp_1102 := strConst__li2bpl19;
    assume {:IndirectCall} true;
    call {:si_unique_call 2450} out_sdv_482 := flmemcmp(out_Tmp_1101, out_Tmp_1102, 4);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} out_sdv_482 == 0;
    call {:si_unique_call 2447} out_boogieTmp := corral_nondet();
    goto L57;

  anon47_Then:
    assume {:partition} out_sdv_482 != 0;
    goto L57;

  anon46_Then:
    assume {:partition} in_startUnit_2 >= out_numBlock;
    goto L57;

  anon51_Then:
    goto L57;

  anon45_Then:
    assume {:partition} out_numBlock == 0;
    goto L59;

  anon48_Then:
    havoc out_Tmp_1105;
    assume {:nonnull} out_Tmp_1105 != 0;
    assume out_Tmp_1105 > 0;
    havoc out_iBlock_3;
    goto anon49_Else;

  anon49_Else:
    goto L44;
}



procedure {:LoopProcedure} getBootAreaInfo_sdv_static_function_25_loop_L36(in_Tmp_1101: int, in_Tmp_1102: int, in_Tmp_1103: int, in_Tmp_1104: int, in_Tmp_1105: int, in_fl_87: int, in_sdv_482: int, in_Tmp_1109: int, in_sdv_486: int, in_flash_33: int, in_Tmp_1110: int, in_numBlock: int, in_iBlock_3: int, in_startUnit_2: int, in_signature_2: int, in_boogieTmp: int, in_vslice_dummy_var_171: int) returns (out_Tmp_1101: int, out_Tmp_1102: int, out_Tmp_1103: int, out_Tmp_1104: int, out_Tmp_1105: int, out_sdv_482: int, out_Tmp_1109: int, out_sdv_486: int, out_Tmp_1110: int, out_numBlock: int, out_iBlock_3: int, out_boogieTmp: int, out_vslice_dummy_var_171: int);
  free ensures {:va_keep} out_Tmp_1104 == in_Tmp_1104 || out_Tmp_1104 == in_signature_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 4} bdkUpdateBootAreaBlock_loop_L106(in_Tmp_1115: int, in_j_2: int, in_Tmp_1123: int, in_i0: int, in_Tmp_1125: int) returns (out_Tmp_1115: int, out_j_2: int, out_Tmp_1123: int, out_i0: int, out_Tmp_1125: int)
{

  entry:
    out_Tmp_1115, out_j_2, out_Tmp_1123, out_i0, out_Tmp_1125 := in_Tmp_1115, in_j_2, in_Tmp_1123, in_i0, in_Tmp_1125;
    goto L106, exit;

  exit:
    return;

  L106:
    assume {:CounterLoop 4} {:Counter "j_2"} true;
    goto anon62_Else;

  anon62_Else:
    assume {:partition} out_j_2 > 4;
    out_Tmp_1123 := INTMOD(out_i0, 10);
    out_Tmp_1115 := out_j_2 - 1;
    havoc out_Tmp_1125;
    assume {:nonnull} out_Tmp_1125 != 0;
    assume out_Tmp_1125 > 0;
    out_i0 := INTDIV(out_i0, 10);
    out_j_2 := out_j_2 - 1;
    goto anon62_Else_dummy;

  anon62_Else_dummy:
    call {:si_unique_call 2452} {:si_old_unique_call 1} out_Tmp_1115, out_j_2, out_Tmp_1123, out_i0, out_Tmp_1125 := bdkUpdateBootAreaBlock_loop_L106(out_Tmp_1115, out_j_2, out_Tmp_1123, out_i0, out_Tmp_1125);
    return;
}



procedure {:LoopProcedure} bdkUpdateBootAreaBlock_loop_L106(in_Tmp_1115: int, in_j_2: int, in_Tmp_1123: int, in_i0: int, in_Tmp_1125: int) returns (out_Tmp_1115: int, out_j_2: int, out_Tmp_1123: int, out_i0: int, out_Tmp_1125: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkUpdateBootAreaBlock_loop_L37(in_Tmp_1116: int, in_Tmp_1117: int, in_signRead_1: int, in_Tmp_1121: int, in_sdv_493: int, in_flash_34: int, in_status_20: int, in_iBlock_4: int, in_vslice_dummy_var_174: int) returns (out_Tmp_1116: int, out_Tmp_1117: int, out_Tmp_1121: int, out_sdv_493: int, out_iBlock_4: int, out_vslice_dummy_var_174: int)
{
  var vslice_dummy_var_1500: int;

  entry:
    out_Tmp_1116, out_Tmp_1117, out_Tmp_1121, out_sdv_493, out_iBlock_4, out_vslice_dummy_var_174 := in_Tmp_1116, in_Tmp_1117, in_Tmp_1121, in_sdv_493, in_iBlock_4, in_vslice_dummy_var_174;
    goto L37, exit;

  exit:
    return;

  L37:
    goto anon50_Else;

  anon50_Else:
    havoc out_Tmp_1117;
    havoc out_Tmp_1116;
    assume {:nonnull} out_Tmp_1116 != 0;
    assume out_Tmp_1116 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc out_Tmp_1121;
    assume {:nonnull} out_Tmp_1121 != 0;
    assume out_Tmp_1121 > 0;
    havoc out_iBlock_4;
    goto anon66_Else;

  anon66_Else:
    goto L41;

  L41:
    call {:si_unique_call 2454} out_vslice_dummy_var_174 := corral_nondet();
    assume {:nonnull} in_flash_34 != 0;
    assume in_flash_34 > 0;
    goto anon52_Else;

  anon52_Else:
    assume {:partition} in_status_20 == 0;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1500;
    call {:si_unique_call 2453} out_sdv_493 := flmemcmp(in_signRead_1, vslice_dummy_var_1500, 4);
    goto anon53_Else;

  anon53_Else:
    assume {:partition} out_sdv_493 != 0;
    out_iBlock_4 := out_iBlock_4 + 1;
    goto anon53_Else_dummy;

  anon53_Else_dummy:
    call {:si_unique_call 2455} {:si_old_unique_call 1} out_Tmp_1116, out_Tmp_1117, out_Tmp_1121, out_sdv_493, out_iBlock_4, out_vslice_dummy_var_174 := bdkUpdateBootAreaBlock_loop_L37(out_Tmp_1116, out_Tmp_1117, in_signRead_1, out_Tmp_1121, out_sdv_493, in_flash_34, in_status_20, out_iBlock_4, out_vslice_dummy_var_174);
    return;

  anon65_Then:
    goto L41;
}



procedure {:LoopProcedure} bdkUpdateBootAreaBlock_loop_L37(in_Tmp_1116: int, in_Tmp_1117: int, in_signRead_1: int, in_Tmp_1121: int, in_sdv_493: int, in_flash_34: int, in_status_20: int, in_iBlock_4: int, in_vslice_dummy_var_174: int) returns (out_Tmp_1116: int, out_Tmp_1117: int, out_Tmp_1121: int, out_sdv_493: int, out_iBlock_4: int, out_vslice_dummy_var_174: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkChangeKey_loop_L15(in_Tmp_1133: int, in_Tmp_1134: int, in_Tmp_1135: int, in_fl_92: int, in_Tmp_1137: int, in_floorNo_3: int, in_type_3: int, in_high_1: int, in_fl_94: int, in_Tmp_1140: int, in_Tmp_1141: int) returns (out_Tmp_1133: int, out_Tmp_1134: int, out_Tmp_1135: int, out_Tmp_1137: int, out_floorNo_3: int, out_Tmp_1140: int, out_Tmp_1141: int)
{

  entry:
    out_Tmp_1133, out_Tmp_1134, out_Tmp_1135, out_Tmp_1137, out_floorNo_3, out_Tmp_1140, out_Tmp_1141 := in_Tmp_1133, in_Tmp_1134, in_Tmp_1135, in_Tmp_1137, in_floorNo_3, in_Tmp_1140, in_Tmp_1141;
    goto L15, exit;

  exit:
    return;

  L15:
    havoc out_Tmp_1140;
    assume {:nonnull} out_Tmp_1140 != 0;
    assume out_Tmp_1140 > 0;
    goto anon16_Else;

  anon16_Else:
    havoc out_Tmp_1135;
    assume {:nonnull} out_Tmp_1135 != 0;
    assume out_Tmp_1135 > 0;
    goto anon14_Else;

  anon14_Else:
    assume {:partition} in_fl_92 == 0;
    havoc out_Tmp_1137;
    assume {:nonnull} out_Tmp_1137 != 0;
    assume out_Tmp_1137 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    out_Tmp_1134 := 1;
    goto L28;

  L28:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} in_high_1 != 0;
    assume {:nonnull} in_type_3 != 0;
    assume in_type_3 > 0;
    havoc out_Tmp_1141;
    goto L32;

  L32:
    havoc out_Tmp_1133;
    assume {:nonnull} out_Tmp_1133 != 0;
    assume out_Tmp_1133 > 0;
    goto anon15_Then;

  anon15_Then:
    assume {:partition} in_fl_94 == 0;
    out_floorNo_3 := out_floorNo_3 + 1;
    goto anon15_Then_dummy;

  anon15_Then_dummy:
    havoc out_floorNo_3;
    return;

  anon18_Then:
    assume {:partition} in_high_1 == 0;
    out_Tmp_1141 := 1;
    goto L32;

  anon17_Then:
    out_Tmp_1134 := 0;
    goto L28;
}



procedure {:LoopProcedure} bdkChangeKey_loop_L15(in_Tmp_1133: int, in_Tmp_1134: int, in_Tmp_1135: int, in_fl_92: int, in_Tmp_1137: int, in_floorNo_3: int, in_type_3: int, in_high_1: int, in_fl_94: int, in_Tmp_1140: int, in_Tmp_1141: int) returns (out_Tmp_1133: int, out_Tmp_1134: int, out_Tmp_1135: int, out_Tmp_1137: int, out_floorNo_3: int, out_Tmp_1140: int, out_Tmp_1141: int);
  free ensures {:va_keep} out_Tmp_1134 == 1 || out_Tmp_1134 == 0 || out_Tmp_1134 == in_Tmp_1134;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation getPhysAddressOfUnit_sdv_static_function_25_loop_L9(in_Tmp_1143: int, in_signRead_2: int, in_sdv_502: int, in_Tmp_1146: int, in_flash_35: int, in_Tmp_1147: int, in_status_21: int, in_iBlock_5: int, in_startUnit_3: int, in_vslice_dummy_var_177: int) returns (out_Tmp_1143: int, out_sdv_502: int, out_Tmp_1146: int, out_Tmp_1147: int, out_iBlock_5: int, out_startUnit_3: int, out_vslice_dummy_var_177: int)
{
  var vslice_dummy_var_1501: int;

  entry:
    out_Tmp_1143, out_sdv_502, out_Tmp_1146, out_Tmp_1147, out_iBlock_5, out_startUnit_3, out_vslice_dummy_var_177 := in_Tmp_1143, in_sdv_502, in_Tmp_1146, in_Tmp_1147, in_iBlock_5, in_startUnit_3, in_vslice_dummy_var_177;
    goto L9, exit;

  exit:
    return;

  L9:
    goto anon13_Else;

  anon13_Else:
    assume {:partition} out_startUnit_3 > 0;
    goto anon14_Else;

  anon14_Else:
    havoc out_Tmp_1147;
    havoc out_Tmp_1143;
    assume {:nonnull} out_Tmp_1143 != 0;
    assume out_Tmp_1143 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    havoc out_Tmp_1146;
    assume {:nonnull} out_Tmp_1146 != 0;
    assume out_Tmp_1146 > 0;
    havoc out_iBlock_5;
    goto anon18_Else;

  anon18_Else:
    goto L14;

  L14:
    call {:si_unique_call 2457} out_vslice_dummy_var_177 := corral_nondet();
    assume {:nonnull} in_flash_35 != 0;
    assume in_flash_35 > 0;
    goto anon15_Else;

  anon15_Else:
    assume {:partition} in_status_21 == 0;
    assume {:IndirectCall} true;
    havoc vslice_dummy_var_1501;
    call {:si_unique_call 2456} out_sdv_502 := flmemcmp(in_signRead_2, vslice_dummy_var_1501, 4);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} out_sdv_502 != 0;
    goto L29;

  L29:
    out_iBlock_5 := out_iBlock_5 + 1;
    goto L29_dummy;

  L29_dummy:
    call {:si_unique_call 2458} {:si_old_unique_call 1} out_Tmp_1143, out_sdv_502, out_Tmp_1146, out_Tmp_1147, out_iBlock_5, out_startUnit_3, out_vslice_dummy_var_177 := getPhysAddressOfUnit_sdv_static_function_25_loop_L9(out_Tmp_1143, in_signRead_2, out_sdv_502, out_Tmp_1146, in_flash_35, out_Tmp_1147, in_status_21, out_iBlock_5, out_startUnit_3, out_vslice_dummy_var_177);
    return;

  anon16_Then:
    assume {:partition} out_sdv_502 == 0;
    out_startUnit_3 := out_startUnit_3 - 1;
    goto L29;

  anon17_Then:
    goto L14;
}



procedure {:LoopProcedure} getPhysAddressOfUnit_sdv_static_function_25_loop_L9(in_Tmp_1143: int, in_signRead_2: int, in_sdv_502: int, in_Tmp_1146: int, in_flash_35: int, in_Tmp_1147: int, in_status_21: int, in_iBlock_5: int, in_startUnit_3: int, in_vslice_dummy_var_177: int) returns (out_Tmp_1143: int, out_sdv_502: int, out_Tmp_1146: int, out_Tmp_1147: int, out_iBlock_5: int, out_startUnit_3: int, out_vslice_dummy_var_177: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkInit_loop_L12(in_index_2: int) returns (out_index_2: int)
{

  entry:
    out_index_2 := in_index_2;
    goto L12, exit;

  exit:
    return;

  L12:
    assume {:CounterLoop 3} {:Counter "index_2"} true;
    goto anon3_Else;

  anon3_Else:
    assume {:partition} 3 > out_index_2;
    out_index_2 := out_index_2 + 1;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    havoc out_index_2;
    return;
}



procedure {:LoopProcedure} bdkInit_loop_L12(in_index_2: int) returns (out_index_2: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 3} bdkCall_loop_L60(in_bdkParam: int, in_Tmp_1160: int, in_nIndex: int, in_Tmp_1163: int, in_Tmp_1165: int) returns (out_Tmp_1160: int, out_nIndex: int, out_Tmp_1163: int, out_Tmp_1165: int)
{

  entry:
    out_Tmp_1160, out_nIndex, out_Tmp_1163, out_Tmp_1165 := in_Tmp_1160, in_nIndex, in_Tmp_1163, in_Tmp_1165;
    goto L60, exit;

  exit:
    return;

  L60:
    assume {:CounterLoop 3} {:Counter "nIndex"} true;
    goto anon44_Else;

  anon44_Else:
    assume {:partition} 3 > out_nIndex;
    out_Tmp_1165 := out_nIndex;
    havoc out_Tmp_1163;
    havoc out_Tmp_1160;
    assume {:nonnull} out_Tmp_1160 != 0;
    assume out_Tmp_1160 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} in_bdkParam != 0;
    assume in_bdkParam > 0;
    goto L63;

  L63:
    out_nIndex := out_nIndex + 1;
    goto L63_dummy;

  L63_dummy:
    call {:si_unique_call 2459} {:si_old_unique_call 1} out_Tmp_1160, out_nIndex, out_Tmp_1163, out_Tmp_1165 := bdkCall_loop_L60(in_bdkParam, out_Tmp_1160, out_nIndex, out_Tmp_1163, out_Tmp_1165);
    return;

  anon60_Then:
    goto L63;
}



procedure {:LoopProcedure} bdkCall_loop_L60(in_bdkParam: int, in_Tmp_1160: int, in_nIndex: int, in_Tmp_1163: int, in_Tmp_1165: int) returns (out_Tmp_1160: int, out_nIndex: int, out_Tmp_1163: int, out_Tmp_1165: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkLockEnable_loop_L18(in_fl_98: int, in_Tmp_1185: int, in_Tmp_1188: int, in_floorNo_4: int, in_Tmp_1189: int, in_type_4: int, in_high_2: int, in_Tmp_1191: int, in_fl_100: int, in_Tmp_1192: int, in_Tmp_1193: int) returns (out_Tmp_1185: int, out_Tmp_1188: int, out_floorNo_4: int, out_Tmp_1189: int, out_Tmp_1191: int, out_Tmp_1192: int, out_Tmp_1193: int)
{

  entry:
    out_Tmp_1185, out_Tmp_1188, out_floorNo_4, out_Tmp_1189, out_Tmp_1191, out_Tmp_1192, out_Tmp_1193 := in_Tmp_1185, in_Tmp_1188, in_floorNo_4, in_Tmp_1189, in_Tmp_1191, in_Tmp_1192, in_Tmp_1193;
    goto L18, exit;

  exit:
    return;

  L18:
    havoc out_Tmp_1189;
    assume {:nonnull} out_Tmp_1189 != 0;
    assume out_Tmp_1189 > 0;
    goto anon19_Else;

  anon19_Else:
    havoc out_Tmp_1193;
    assume {:nonnull} out_Tmp_1193 != 0;
    assume out_Tmp_1193 > 0;
    goto anon17_Else;

  anon17_Else:
    assume {:partition} in_fl_98 == 0;
    havoc out_Tmp_1192;
    assume {:nonnull} out_Tmp_1192 != 0;
    assume out_Tmp_1192 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    out_Tmp_1185 := 1;
    goto L31;

  L31:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} in_high_2 != 0;
    assume {:nonnull} in_type_4 != 0;
    assume in_type_4 > 0;
    havoc out_Tmp_1188;
    goto L35;

  L35:
    havoc out_Tmp_1191;
    assume {:nonnull} out_Tmp_1191 != 0;
    assume out_Tmp_1191 > 0;
    goto anon18_Then;

  anon18_Then:
    assume {:partition} in_fl_100 == 0;
    out_floorNo_4 := out_floorNo_4 + 1;
    goto anon18_Then_dummy;

  anon18_Then_dummy:
    havoc out_floorNo_4;
    return;

  anon21_Then:
    assume {:partition} in_high_2 == 0;
    out_Tmp_1188 := 1;
    goto L35;

  anon20_Then:
    out_Tmp_1185 := 0;
    goto L31;
}



procedure {:LoopProcedure} bdkLockEnable_loop_L18(in_fl_98: int, in_Tmp_1185: int, in_Tmp_1188: int, in_floorNo_4: int, in_Tmp_1189: int, in_type_4: int, in_high_2: int, in_Tmp_1191: int, in_fl_100: int, in_Tmp_1192: int, in_Tmp_1193: int) returns (out_Tmp_1185: int, out_Tmp_1188: int, out_floorNo_4: int, out_Tmp_1189: int, out_Tmp_1191: int, out_Tmp_1192: int, out_Tmp_1193: int);
  free ensures {:va_keep} out_Tmp_1185 == 1 || out_Tmp_1185 == 0 || out_Tmp_1185 == in_Tmp_1185;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkCreateBootArea_loop_L31(in_Tmp_1198: int, in_Tmp_1199: int, in_signRead_3: int, in_Tmp_1200: int, in_Tmp_1202: int, in_sdv_530: int, in_flash_37: int, in_status_23: int, in_iBlock_6: int, in_oldSign: int, in_vslice_dummy_var_182: int) returns (out_Tmp_1198: int, out_Tmp_1199: int, out_Tmp_1200: int, out_Tmp_1202: int, out_sdv_530: int, out_iBlock_6: int, out_vslice_dummy_var_182: int)
{

  entry:
    out_Tmp_1198, out_Tmp_1199, out_Tmp_1200, out_Tmp_1202, out_sdv_530, out_iBlock_6, out_vslice_dummy_var_182 := in_Tmp_1198, in_Tmp_1199, in_Tmp_1200, in_Tmp_1202, in_sdv_530, in_iBlock_6, in_vslice_dummy_var_182;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon25_Else;

  anon25_Else:
    havoc out_Tmp_1198;
    havoc out_Tmp_1199;
    assume {:nonnull} out_Tmp_1199 != 0;
    assume out_Tmp_1199 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc out_Tmp_1202;
    assume {:nonnull} out_Tmp_1202 != 0;
    assume out_Tmp_1202 > 0;
    havoc out_iBlock_6;
    goto anon33_Else;

  anon33_Else:
    goto L35;

  L35:
    call {:si_unique_call 2461} out_vslice_dummy_var_182 := corral_nondet();
    assume {:nonnull} in_flash_37 != 0;
    assume in_flash_37 > 0;
    goto anon27_Then;

  anon27_Then:
    assume {:partition} in_status_23 == 0;
    out_Tmp_1200 := in_oldSign;
    assume {:IndirectCall} true;
    call {:si_unique_call 2460} out_sdv_530 := flmemcmp(out_Tmp_1200, in_signRead_3, 4);
    goto anon28_Else;

  anon28_Else:
    assume {:partition} out_sdv_530 != 0;
    out_iBlock_6 := out_iBlock_6 + 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    call {:si_unique_call 2462} {:si_old_unique_call 1} out_Tmp_1198, out_Tmp_1199, out_Tmp_1200, out_Tmp_1202, out_sdv_530, out_iBlock_6, out_vslice_dummy_var_182 := bdkCreateBootArea_loop_L31(out_Tmp_1198, out_Tmp_1199, in_signRead_3, out_Tmp_1200, out_Tmp_1202, out_sdv_530, in_flash_37, in_status_23, out_iBlock_6, in_oldSign, out_vslice_dummy_var_182);
    return;

  anon32_Then:
    goto L35;
}



procedure {:LoopProcedure} bdkCreateBootArea_loop_L31(in_Tmp_1198: int, in_Tmp_1199: int, in_signRead_3: int, in_Tmp_1200: int, in_Tmp_1202: int, in_sdv_530: int, in_flash_37: int, in_status_23: int, in_iBlock_6: int, in_oldSign: int, in_vslice_dummy_var_182: int) returns (out_Tmp_1198: int, out_Tmp_1199: int, out_Tmp_1200: int, out_Tmp_1202: int, out_sdv_530: int, out_iBlock_6: int, out_vslice_dummy_var_182: int);
  free ensures {:va_keep} out_Tmp_1200 == in_Tmp_1200 || out_Tmp_1200 == in_oldSign;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation bdkCreateBootArea_loop_L29(in_fl_101: int, in_Tmp_1198: int, in_Tmp_1199: int, in_signRead_3: int, in_Tmp_1200: int, in_Tmp_1202: int, in_index_3: int, in_sdv_530: int, in_flash_37: int, in_fl_103: int, in_status_23: int, in_iBlock_6: int, in_noOfBlocks_3: int, in_oldSign: int, in_vslice_dummy_var_182: int, in_vslice_dummy_var_183: int) returns (out_Tmp_1198: int, out_Tmp_1199: int, out_Tmp_1200: int, out_Tmp_1202: int, out_index_3: int, out_sdv_530: int, out_iBlock_6: int, out_vslice_dummy_var_182: int, out_vslice_dummy_var_183: int)
{

  entry:
    out_Tmp_1198, out_Tmp_1199, out_Tmp_1200, out_Tmp_1202, out_index_3, out_sdv_530, out_iBlock_6, out_vslice_dummy_var_182, out_vslice_dummy_var_183 := in_Tmp_1198, in_Tmp_1199, in_Tmp_1200, in_Tmp_1202, in_index_3, in_sdv_530, in_iBlock_6, in_vslice_dummy_var_182, in_vslice_dummy_var_183;
    goto L29, exit;

  exit:
    return;

  L29:
    goto anon24_Else;

  anon24_Else:
    assume {:partition} in_noOfBlocks_3 > out_index_3;
    goto L31;

  L31:
    call {:si_unique_call 2464} out_Tmp_1198, out_Tmp_1199, out_Tmp_1200, out_Tmp_1202, out_sdv_530, out_iBlock_6, out_vslice_dummy_var_182 := bdkCreateBootArea_loop_L31(out_Tmp_1198, out_Tmp_1199, in_signRead_3, out_Tmp_1200, out_Tmp_1202, out_sdv_530, in_flash_37, in_status_23, out_iBlock_6, in_oldSign, out_vslice_dummy_var_182);
    goto L31_last;

  L31_last:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc out_Tmp_1198;
    havoc out_Tmp_1199;
    assume {:nonnull} out_Tmp_1199 != 0;
    assume out_Tmp_1199 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc out_Tmp_1202;
    assume {:nonnull} out_Tmp_1202 != 0;
    assume out_Tmp_1202 > 0;
    havoc out_iBlock_6;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L35;

  L35:
    call {:si_unique_call 2466} out_vslice_dummy_var_182 := corral_nondet();
    assume {:nonnull} in_flash_37 != 0;
    assume in_flash_37 > 0;
    goto anon27_Then;

  anon27_Then:
    assume {:partition} in_status_23 == 0;
    out_Tmp_1200 := in_oldSign;
    assume {:IndirectCall} true;
    call {:si_unique_call 2465} out_sdv_530 := flmemcmp(out_Tmp_1200, in_signRead_3, 4);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} out_sdv_530 != 0;
    out_iBlock_6 := out_iBlock_6 + 1;
    assume false;
    return;

  anon28_Then:
    assume {:partition} out_sdv_530 == 0;
    goto L32;

  L32:
    goto anon26_Else;

  anon26_Else:
    assume {:nonnull} in_flash_37 != 0;
    assume in_flash_37 > 0;
    goto anon29_Else;

  anon29_Else:
    assume {:partition} in_fl_101 == 0;
    call {:si_unique_call 2463} out_vslice_dummy_var_183 := corral_nondet();
    assume {:nonnull} in_flash_37 != 0;
    assume in_flash_37 > 0;
    goto anon30_Then;

  anon30_Then:
    assume {:partition} in_fl_103 == 0;
    out_index_3 := out_index_3 + 1;
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    call {:si_unique_call 2467} {:si_old_unique_call 1} out_Tmp_1198, out_Tmp_1199, out_Tmp_1200, out_Tmp_1202, out_index_3, out_sdv_530, out_iBlock_6, out_vslice_dummy_var_182, out_vslice_dummy_var_183 := bdkCreateBootArea_loop_L29(in_fl_101, out_Tmp_1198, out_Tmp_1199, in_signRead_3, out_Tmp_1200, out_Tmp_1202, out_index_3, out_sdv_530, in_flash_37, in_fl_103, in_status_23, out_iBlock_6, in_noOfBlocks_3, in_oldSign, out_vslice_dummy_var_182, out_vslice_dummy_var_183);
    return;

  anon33_Then:
    goto L32;

  anon32_Then:
    goto L35;

  anon25_Then:
    goto L32;
}



procedure {:LoopProcedure} bdkCreateBootArea_loop_L29(in_fl_101: int, in_Tmp_1198: int, in_Tmp_1199: int, in_signRead_3: int, in_Tmp_1200: int, in_Tmp_1202: int, in_index_3: int, in_sdv_530: int, in_flash_37: int, in_fl_103: int, in_status_23: int, in_iBlock_6: int, in_noOfBlocks_3: int, in_oldSign: int, in_vslice_dummy_var_182: int, in_vslice_dummy_var_183: int) returns (out_Tmp_1198: int, out_Tmp_1199: int, out_Tmp_1200: int, out_Tmp_1202: int, out_index_3: int, out_sdv_530: int, out_iBlock_6: int, out_vslice_dummy_var_182: int, out_vslice_dummy_var_183: int);
  free ensures {:va_keep} out_Tmp_1200 == in_Tmp_1200 || out_Tmp_1200 == in_oldSign;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flRegisterNT5PCIC_loop_L5(in_serialNo: int, in_pVol_86: int, in_Tmp_1234: int, in_Tmp_1235: int) returns (out_pVol_86: int, out_Tmp_1234: int, out_Tmp_1235: int)
{

  entry:
    out_pVol_86, out_Tmp_1234, out_Tmp_1235 := in_pVol_86, in_Tmp_1234, in_Tmp_1235;
    goto L5, exit;

  exit:
    return;

  L5:
    goto anon5_Else;

  anon5_Else:
    havoc out_Tmp_1234;
    call {:si_unique_call 2468} out_pVol_86 := flSocketOf(out_Tmp_1234);
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    assume {:nonnull} out_pVol_86 != 0;
    assume out_pVol_86 > 0;
    out_Tmp_1235 := strConst__li2bpl21;
    call {:si_unique_call 2469} PRINTF(out_Tmp_1235);
    goto anon5_Else_dummy;

  anon5_Else_dummy:
    call {:si_unique_call 2470} {:si_old_unique_call 1} out_pVol_86, out_Tmp_1234, out_Tmp_1235 := flRegisterNT5PCIC_loop_L5(in_serialNo, out_pVol_86, out_Tmp_1234, out_Tmp_1235);
    return;
}



procedure {:LoopProcedure} flRegisterNT5PCIC_loop_L5(in_serialNo: int, in_pVol_86: int, in_Tmp_1234: int, in_Tmp_1235: int) returns (out_pVol_86: int, out_Tmp_1234: int, out_Tmp_1235: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsPnpDeviceControl_loop_L56(in_vslice_dummy_var_265: int) returns (out_vslice_dummy_var_265: int)
{

  entry:
    out_vslice_dummy_var_265 := in_vslice_dummy_var_265;
    goto L56, exit;

  exit:
    return;

  L56:
    call {:si_unique_call 2471} out_vslice_dummy_var_265 := sdv_ExInterlockedRemoveHeadList(0, 0);
    goto anon188_Then;

  anon188_Then:
    goto anon188_Then_dummy;

  anon188_Then_dummy:
    call {:si_unique_call 2472} {:si_old_unique_call 1} out_vslice_dummy_var_265 := TrueffsPnpDeviceControl_loop_L56(out_vslice_dummy_var_265);
    return;
}



procedure {:LoopProcedure} TrueffsPnpDeviceControl_loop_L56(in_vslice_dummy_var_265: int) returns (out_vslice_dummy_var_265: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsPnpDeviceControl_loop_L386(in_vslice_dummy_var_281: int) returns (out_vslice_dummy_var_281: int)
{

  entry:
    out_vslice_dummy_var_281 := in_vslice_dummy_var_281;
    goto L386, exit;

  exit:
    return;

  L386:
    call {:si_unique_call 2473} out_vslice_dummy_var_281 := sdv_ExInterlockedRemoveHeadList(0, 0);
    goto anon211_Then;

  anon211_Then:
    goto anon211_Then_dummy;

  anon211_Then_dummy:
    call {:si_unique_call 2474} {:si_old_unique_call 1} out_vslice_dummy_var_281 := TrueffsPnpDeviceControl_loop_L386(out_vslice_dummy_var_281);
    return;
}



procedure {:LoopProcedure} TrueffsPnpDeviceControl_loop_L386(in_vslice_dummy_var_281: int) returns (out_vslice_dummy_var_281: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsPnpDeviceControl_loop_L429(in_vslice_dummy_var_286: int) returns (out_vslice_dummy_var_286: int)
{

  entry:
    out_vslice_dummy_var_286 := in_vslice_dummy_var_286;
    goto L429, exit;

  exit:
    return;

  L429:
    call {:si_unique_call 2475} out_vslice_dummy_var_286 := sdv_ExInterlockedRemoveHeadList(0, 0);
    goto anon214_Then;

  anon214_Then:
    goto anon214_Then_dummy;

  anon214_Then_dummy:
    call {:si_unique_call 2476} {:si_old_unique_call 1} out_vslice_dummy_var_286 := TrueffsPnpDeviceControl_loop_L429(out_vslice_dummy_var_286);
    return;
}



procedure {:LoopProcedure} TrueffsPnpDeviceControl_loop_L429(in_vslice_dummy_var_286: int) returns (out_vslice_dummy_var_286: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsGetInfoNumber_loop_L6(in_i_14: int, in_Tmp_1574: int, in_deviceExtension_6: int) returns (out_i_14: int, out_Tmp_1574: int)
{

  entry:
    out_i_14, out_Tmp_1574 := in_i_14, in_Tmp_1574;
    goto L6, exit;

  exit:
    return;

  L6:
    assume {:CounterLoop 4} {:Counter "i_14"} true;
    goto anon5_Else;

  anon5_Else:
    assume {:partition} 4 > out_i_14;
    out_Tmp_1574 := out_i_14;
    assume {:nonnull} in_deviceExtension_6 != 0;
    assume in_deviceExtension_6 > 0;
    goto anon6_Else;

  anon6_Else:
    out_i_14 := out_i_14 + 1;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    havoc out_i_14;
    return;
}



procedure {:LoopProcedure} TrueffsGetInfoNumber_loop_L6(in_i_14: int, in_Tmp_1574: int, in_deviceExtension_6: int) returns (out_i_14: int, out_Tmp_1574: int);
  free ensures {:va_keep} out_Tmp_1574 == in_i_14 || out_Tmp_1574 == in_Tmp_1574;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CopyField_loop_L8(in_i_15: int, in_Tmp_1597: int, in_Tmp_1598: int, in_pastEnd: int, in_Tmp_1599: int, in_Tmp_1601: int, in_Tmp_1603: int, in_Tmp_1605: int, in_Tmp_1606: int, in_Destination_3: int, in_Source_2: int, in_Count_1: int, in_Change: int) returns (out_i_15: int, out_Tmp_1597: int, out_Tmp_1598: int, out_pastEnd: int, out_Tmp_1599: int, out_Tmp_1601: int, out_Tmp_1603: int, out_Tmp_1605: int, out_Tmp_1606: int)
{

  entry:
    out_i_15, out_Tmp_1597, out_Tmp_1598, out_pastEnd, out_Tmp_1599, out_Tmp_1601, out_Tmp_1603, out_Tmp_1605, out_Tmp_1606 := in_i_15, in_Tmp_1597, in_Tmp_1598, in_pastEnd, in_Tmp_1599, in_Tmp_1601, in_Tmp_1603, in_Tmp_1605, in_Tmp_1606;
    goto L8, exit;

  exit:
    return;

  L8:
    goto anon9_Else;

  anon9_Else:
    assume {:partition} in_Count_1 > out_i_15;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} out_pastEnd != 0;
    out_Tmp_1605 := out_i_15;
    assume {:nonnull} in_Destination_3 != 0;
    assume in_Destination_3 > 0;
    goto L13;

  L13:
    out_i_15 := out_i_15 + 1;
    goto L13_dummy;

  L13_dummy:
    call {:si_unique_call 2477} {:si_old_unique_call 1} out_i_15, out_Tmp_1597, out_Tmp_1598, out_pastEnd, out_Tmp_1599, out_Tmp_1601, out_Tmp_1603, out_Tmp_1605, out_Tmp_1606 := CopyField_loop_L8(out_i_15, out_Tmp_1597, out_Tmp_1598, out_pastEnd, out_Tmp_1599, out_Tmp_1601, out_Tmp_1603, out_Tmp_1605, out_Tmp_1606, in_Destination_3, in_Source_2, in_Count_1, in_Change);
    return;

  anon10_Then:
    assume {:partition} out_pastEnd == 0;
    out_Tmp_1599 := out_i_15;
    assume {:nonnull} in_Source_2 != 0;
    assume in_Source_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    out_Tmp_1598 := out_i_15;
    assume {:nonnull} in_Source_2 != 0;
    assume in_Source_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    out_Tmp_1597 := out_i_15;
    assume {:nonnull} in_Destination_3 != 0;
    assume in_Destination_3 > 0;
    goto L13;

  anon12_Then:
    out_Tmp_1606 := out_i_15;
    out_Tmp_1603 := out_i_15;
    assume {:nonnull} in_Destination_3 != 0;
    assume in_Destination_3 > 0;
    assume {:nonnull} in_Source_2 != 0;
    assume in_Source_2 > 0;
    goto L13;

  anon11_Then:
    out_pastEnd := 1;
    out_Tmp_1601 := out_i_15;
    assume {:nonnull} in_Destination_3 != 0;
    assume in_Destination_3 > 0;
    goto L13;
}



procedure {:LoopProcedure} CopyField_loop_L8(in_i_15: int, in_Tmp_1597: int, in_Tmp_1598: int, in_pastEnd: int, in_Tmp_1599: int, in_Tmp_1601: int, in_Tmp_1603: int, in_Tmp_1605: int, in_Tmp_1606: int, in_Destination_3: int, in_Source_2: int, in_Count_1: int, in_Change: int) returns (out_i_15: int, out_Tmp_1597: int, out_Tmp_1598: int, out_pastEnd: int, out_Tmp_1599: int, out_Tmp_1601: int, out_Tmp_1603: int, out_Tmp_1605: int, out_Tmp_1606: int);
  free ensures {:va_keep} out_pastEnd == 1 || out_pastEnd == in_pastEnd;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 6} DeviceBuildHardwareId_loop_L52(in_i_16: int, in_Tmp_1610: int, in_Tmp_1611: int, in_idString_1: int, in_unicodeIdString_1: int, in_Tmp_1614: int, in_Tmp_1615: int, in_Tmp_1616: int, in_Tmp_1617: int, in_Tmp_1618: int, in_Tmp_1619: int, in_Tmp_1620: int, in_Tmp_1621: int, in_Tmp_1624: int, in_Tmp_1625: int, in_Tmp_1626: int, in_Tmp_1628: int, in_Tmp_1631: int, in_ansiCompatibleIdString: int, in_Tmp_1633: int, in_Tmp_1634: int, in_Tmp_1636: int, in_Tmp_1637: int, in_Tmp_1639: int, in_scratch: int, in_Tmp_1640: int, in_vslice_dummy_var_341: int, in_vslice_dummy_var_342: int, in_vslice_dummy_var_343: int, in_vslice_dummy_var_344: int, in_vslice_dummy_var_345: int) returns (out_i_16: int, out_Tmp_1610: int, out_Tmp_1611: int, out_Tmp_1614: int, out_Tmp_1615: int, out_Tmp_1616: int, out_Tmp_1617: int, out_Tmp_1618: int, out_Tmp_1619: int, out_Tmp_1620: int, out_Tmp_1621: int, out_Tmp_1624: int, out_Tmp_1625: int, out_Tmp_1626: int, out_Tmp_1628: int, out_Tmp_1631: int, out_Tmp_1633: int, out_Tmp_1634: int, out_Tmp_1636: int, out_Tmp_1637: int, out_Tmp_1639: int, out_Tmp_1640: int, out_vslice_dummy_var_341: int, out_vslice_dummy_var_342: int, out_vslice_dummy_var_343: int, out_vslice_dummy_var_344: int, out_vslice_dummy_var_345: int)
{

  entry:
    out_i_16, out_Tmp_1610, out_Tmp_1611, out_Tmp_1614, out_Tmp_1615, out_Tmp_1616, out_Tmp_1617, out_Tmp_1618, out_Tmp_1619, out_Tmp_1620, out_Tmp_1621, out_Tmp_1624, out_Tmp_1625, out_Tmp_1626, out_Tmp_1628, out_Tmp_1631, out_Tmp_1633, out_Tmp_1634, out_Tmp_1636, out_Tmp_1637, out_Tmp_1639, out_Tmp_1640, out_vslice_dummy_var_341, out_vslice_dummy_var_342, out_vslice_dummy_var_343, out_vslice_dummy_var_344, out_vslice_dummy_var_345 := in_i_16, in_Tmp_1610, in_Tmp_1611, in_Tmp_1614, in_Tmp_1615, in_Tmp_1616, in_Tmp_1617, in_Tmp_1618, in_Tmp_1619, in_Tmp_1620, in_Tmp_1621, in_Tmp_1624, in_Tmp_1625, in_Tmp_1626, in_Tmp_1628, in_Tmp_1631, in_Tmp_1633, in_Tmp_1634, in_Tmp_1636, in_Tmp_1637, in_Tmp_1639, in_Tmp_1640, in_vslice_dummy_var_341, in_vslice_dummy_var_342, in_vslice_dummy_var_343, in_vslice_dummy_var_344, in_vslice_dummy_var_345;
    goto L52, exit;

  exit:
    return;

  L52:
    assume {:CounterLoop 5} {:Counter "i_16"} true;
    goto anon31_Else;

  anon31_Else:
    assume {:partition} 5 > out_i_16;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} out_i_16 != 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} out_i_16 != 1;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} out_i_16 != 2;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} out_i_16 != 3;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} out_i_16 != 4;
    goto L72;

  L72:
    call {:si_unique_call 2480} RtlInitAnsiString(0, 0);
    assume {:nonnull} in_unicodeIdString_1 != 0;
    assume in_unicodeIdString_1 > 0;
    assume {:nonnull} NlsMbCodePageTag != 0;
    assume NlsMbCodePageTag > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    call {:si_unique_call 2479} out_Tmp_1626 := corral_nondet();
    goto L82;

  L82:
    assume {:nonnull} in_unicodeIdString_1 != 0;
    assume in_unicodeIdString_1 > 0;
    assume {:nonnull} in_unicodeIdString_1 != 0;
    assume in_unicodeIdString_1 > 0;
    call {:si_unique_call 2478} out_vslice_dummy_var_342 := RtlAnsiStringToUnicodeString(0, 0, 0);
    assume {:nonnull} in_unicodeIdString_1 != 0;
    assume in_unicodeIdString_1 > 0;
    havoc out_Tmp_1611;
    assume {:nonnull} in_idString_1 != 0;
    assume in_idString_1 > 0;
    out_i_16 := out_i_16 + 1;
    goto L82_dummy;

  L82_dummy:
    call {:si_unique_call 2495} {:si_old_unique_call 1} out_i_16, out_Tmp_1610, out_Tmp_1611, out_Tmp_1614, out_Tmp_1615, out_Tmp_1616, out_Tmp_1617, out_Tmp_1618, out_Tmp_1619, out_Tmp_1620, out_Tmp_1621, out_Tmp_1624, out_Tmp_1625, out_Tmp_1626, out_Tmp_1628, out_Tmp_1631, out_Tmp_1633, out_Tmp_1634, out_Tmp_1636, out_Tmp_1637, out_Tmp_1639, out_Tmp_1640, out_vslice_dummy_var_341, out_vslice_dummy_var_342, out_vslice_dummy_var_343, out_vslice_dummy_var_344, out_vslice_dummy_var_345 := DeviceBuildHardwareId_loop_L52(out_i_16, out_Tmp_1610, out_Tmp_1611, in_idString_1, in_unicodeIdString_1, out_Tmp_1614, out_Tmp_1615, out_Tmp_1616, out_Tmp_1617, out_Tmp_1618, out_Tmp_1619, out_Tmp_1620, out_Tmp_1621, out_Tmp_1624, out_Tmp_1625, out_Tmp_1626, out_Tmp_1628, out_Tmp_1631, in_ansiCompatibleIdString, out_Tmp_1633, out_Tmp_1634, out_Tmp_1636, out_Tmp_1637, out_Tmp_1639, in_scratch, out_Tmp_1640, out_vslice_dummy_var_341, out_vslice_dummy_var_342, out_vslice_dummy_var_343, out_vslice_dummy_var_344, out_vslice_dummy_var_345);
    return;

  anon39_Then:
    assume {:nonnull} in_ansiCompatibleIdString != 0;
    assume in_ansiCompatibleIdString > 0;
    havoc out_Tmp_1626;
    goto L82;

  anon34_Then:
    assume {:partition} out_i_16 == 4;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L72;

  anon33_Then:
    call {:si_unique_call 2481} out_vslice_dummy_var_345 := __HAVOC_malloc(1);
    goto L72;

  anon35_Then:
    assume {:partition} out_i_16 == 3;
    out_Tmp_1640 := strConst__li2bpl17;
    call {:si_unique_call 2482} CopyField(in_scratch, out_Tmp_1640, 8, 95);
    out_Tmp_1624 := in_scratch;
    out_Tmp_1619 := strConst__li2bpl26;
    call {:si_unique_call 2483} CopyField(out_Tmp_1624, out_Tmp_1619, 16, 95);
    out_Tmp_1628 := in_scratch;
    out_Tmp_1639 := strConst__li2bpl27;
    call {:si_unique_call 2484} CopyField(out_Tmp_1628, out_Tmp_1639, 4, 95);
    goto L72;

  anon36_Then:
    assume {:partition} out_i_16 == 2;
    call {:si_unique_call 2485} out_vslice_dummy_var_344 := corral_nondet();
    out_Tmp_1621 := in_scratch;
    out_Tmp_1637 := strConst__li2bpl17;
    call {:si_unique_call 2486} CopyField(out_Tmp_1621, out_Tmp_1637, 8, 95);
    goto L72;

  anon37_Then:
    assume {:partition} out_i_16 == 1;
    call {:si_unique_call 2487} out_vslice_dummy_var_343 := corral_nondet();
    out_Tmp_1610 := in_scratch;
    out_Tmp_1618 := strConst__li2bpl17;
    call {:si_unique_call 2488} CopyField(out_Tmp_1610, out_Tmp_1618, 8, 95);
    out_Tmp_1631 := in_scratch;
    out_Tmp_1615 := strConst__li2bpl26;
    call {:si_unique_call 2489} CopyField(out_Tmp_1631, out_Tmp_1615, 16, 95);
    out_Tmp_1625 := in_scratch;
    out_Tmp_1620 := strConst__li2bpl27;
    call {:si_unique_call 2490} CopyField(out_Tmp_1625, out_Tmp_1620, 4, 95);
    goto L72;

  anon32_Then:
    assume {:partition} out_i_16 == 0;
    call {:si_unique_call 2491} out_vslice_dummy_var_341 := corral_nondet();
    out_Tmp_1617 := in_scratch;
    out_Tmp_1616 := strConst__li2bpl17;
    call {:si_unique_call 2492} CopyField(out_Tmp_1617, out_Tmp_1616, 8, 95);
    out_Tmp_1634 := in_scratch;
    out_Tmp_1633 := strConst__li2bpl26;
    call {:si_unique_call 2493} CopyField(out_Tmp_1634, out_Tmp_1633, 16, 95);
    out_Tmp_1636 := in_scratch;
    out_Tmp_1614 := strConst__li2bpl27;
    call {:si_unique_call 2494} CopyField(out_Tmp_1636, out_Tmp_1614, 4, 95);
    goto L72;
}



procedure {:LoopProcedure} DeviceBuildHardwareId_loop_L52(in_i_16: int, in_Tmp_1610: int, in_Tmp_1611: int, in_idString_1: int, in_unicodeIdString_1: int, in_Tmp_1614: int, in_Tmp_1615: int, in_Tmp_1616: int, in_Tmp_1617: int, in_Tmp_1618: int, in_Tmp_1619: int, in_Tmp_1620: int, in_Tmp_1621: int, in_Tmp_1624: int, in_Tmp_1625: int, in_Tmp_1626: int, in_Tmp_1628: int, in_Tmp_1631: int, in_ansiCompatibleIdString: int, in_Tmp_1633: int, in_Tmp_1634: int, in_Tmp_1636: int, in_Tmp_1637: int, in_Tmp_1639: int, in_scratch: int, in_Tmp_1640: int, in_vslice_dummy_var_341: int, in_vslice_dummy_var_342: int, in_vslice_dummy_var_343: int, in_vslice_dummy_var_344: int, in_vslice_dummy_var_345: int) returns (out_i_16: int, out_Tmp_1610: int, out_Tmp_1611: int, out_Tmp_1614: int, out_Tmp_1615: int, out_Tmp_1616: int, out_Tmp_1617: int, out_Tmp_1618: int, out_Tmp_1619: int, out_Tmp_1620: int, out_Tmp_1621: int, out_Tmp_1624: int, out_Tmp_1625: int, out_Tmp_1626: int, out_Tmp_1628: int, out_Tmp_1631: int, out_Tmp_1633: int, out_Tmp_1634: int, out_Tmp_1636: int, out_Tmp_1637: int, out_Tmp_1639: int, out_Tmp_1640: int, out_vslice_dummy_var_341: int, out_vslice_dummy_var_342: int, out_vslice_dummy_var_343: int, out_vslice_dummy_var_344: int, out_vslice_dummy_var_345: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_1610 == in_Tmp_1610 || out_Tmp_1610 == in_scratch;
  free ensures {:va_keep} out_Tmp_1617 == in_Tmp_1617 || out_Tmp_1617 == in_scratch;
  free ensures {:va_keep} out_Tmp_1621 == in_Tmp_1621 || out_Tmp_1621 == in_scratch;
  free ensures {:va_keep} out_Tmp_1624 == in_Tmp_1624 || out_Tmp_1624 == in_scratch;
  free ensures {:va_keep} out_Tmp_1625 == in_Tmp_1625 || out_Tmp_1625 == in_scratch;
  free ensures {:va_keep} out_Tmp_1628 == in_Tmp_1628 || out_Tmp_1628 == in_scratch;
  free ensures {:va_keep} out_Tmp_1631 == in_Tmp_1631 || out_Tmp_1631 == in_scratch;
  free ensures {:va_keep} out_Tmp_1634 == in_Tmp_1634 || out_Tmp_1634 == in_scratch;
  free ensures {:va_keep} out_Tmp_1636 == in_Tmp_1636 || out_Tmp_1636 == in_scratch;
  free ensures {:va_keep} out_vslice_dummy_var_342 == 0 || out_vslice_dummy_var_342 == -1073741823 || out_vslice_dummy_var_342 == in_vslice_dummy_var_342;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsCreateSymblicLinks_loop_L32(in_i_17: int, in_scsiportNumber: int, in_status_44: int, in_vslice_dummy_var_357: int) returns (out_i_17: int, out_status_44: int, out_vslice_dummy_var_357: int)
{

  entry:
    out_i_17, out_status_44, out_vslice_dummy_var_357 := in_i_17, in_status_44, in_vslice_dummy_var_357;
    goto L32, exit;

  exit:
    return;

  L32:
    assume {:nonnull} in_scsiportNumber != 0;
    assume in_scsiportNumber > 0;
    goto anon14_Else;

  anon14_Else:
    call {:si_unique_call 2497} out_vslice_dummy_var_357 := corral_nondet();
    call {:si_unique_call 2498} RtlInitString(0, 0);
    call {:si_unique_call 2499} out_status_44 := RtlAnsiStringToUnicodeString(0, 0, 0);
    goto anon16_Else;

  anon16_Else:
    assume {:partition} out_status_44 >= 0;
    call {:si_unique_call 2496} out_status_44 := IoCreateSymbolicLink(0, 0);
    goto anon17_Then;

  anon17_Then:
    assume {:partition} 0 > out_status_44;
    out_i_17 := out_i_17 + 1;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    havoc out_i_17;
    return;
}



procedure {:LoopProcedure} TrueffsCreateSymblicLinks_loop_L32(in_i_17: int, in_scsiportNumber: int, in_status_44: int, in_vslice_dummy_var_357: int) returns (out_i_17: int, out_status_44: int, out_vslice_dummy_var_357: int);
  modifies alloc;
  free ensures {:va_keep} out_status_44 == 0 || out_status_44 == -1073741823 || out_status_44 == in_status_44;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsStartDevice_loop_L84(in_Tmp_1670: int, in_AddressMemoryBase: int, in_mappedWindowBase: int, in_Tmp_1674: int, in_fullResourceList: int, in_partialResourceList: int, in_Tmp_1679: int, in_partialDescriptors: int, in_j_3: int, in_PcmciaAddressSpace: int, in_Tmp_1680: int, in_Tmp_1691: int, in_status_50: int, in_deviceExtension_11: int, in_boogieTmp: int) returns (out_Tmp_1670: int, out_Tmp_1674: int, out_Tmp_1679: int, out_j_3: int, out_Tmp_1680: int, out_Tmp_1691: int, out_status_50: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1502: int;
  var vslice_dummy_var_1503: int;
  var vslice_dummy_var_1504: int;
  var vslice_dummy_var_1505: int;

  entry:
    out_Tmp_1670, out_Tmp_1674, out_Tmp_1679, out_j_3, out_Tmp_1680, out_Tmp_1691, out_status_50, out_boogieTmp := in_Tmp_1670, in_Tmp_1674, in_Tmp_1679, in_j_3, in_Tmp_1680, in_Tmp_1691, in_status_50, in_boogieTmp;
    goto L84, exit;

  exit:
    return;

  L84:
    assume {:nonnull} in_partialResourceList != 0;
    assume in_partialResourceList > 0;
    goto anon64_Else;

  anon64_Else:
    out_Tmp_1670 := out_j_3;
    assume {:nonnull} in_partialDescriptors != 0;
    assume in_partialDescriptors > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} in_PcmciaAddressSpace != 0;
    assume in_PcmciaAddressSpace > 0;
    out_Tmp_1691 := out_j_3;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    assume {:nonnull} in_partialDescriptors != 0;
    assume in_partialDescriptors > 0;
    out_Tmp_1679 := out_j_3;
    assume {:nonnull} in_partialDescriptors != 0;
    assume in_partialDescriptors > 0;
    havoc out_Tmp_1680;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    call {:si_unique_call 2501} out_boogieTmp := RtlConvertLongToLargeInteger(out_Tmp_1680);
    out_Tmp_1674 := out_j_3;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    assume {:nonnull} in_partialDescriptors != 0;
    assume in_partialDescriptors > 0;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    assume {:nonnull} in_fullResourceList != 0;
    assume in_fullResourceList > 0;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    assume {:nonnull} in_fullResourceList != 0;
    assume in_fullResourceList > 0;
    assume {:nonnull} in_mappedWindowBase != 0;
    assume in_mappedWindowBase > 0;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    havoc vslice_dummy_var_1502;
    havoc vslice_dummy_var_1503;
    havoc vslice_dummy_var_1504;
    havoc vslice_dummy_var_1505;
    call {:si_unique_call 2502} out_status_50 := TrueffsTranslateAddress(vslice_dummy_var_1502, vslice_dummy_var_1503, vslice_dummy_var_1504, vslice_dummy_var_1505, in_PcmciaAddressSpace, in_mappedWindowBase, in_AddressMemoryBase);
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    assume {:nonnull} in_mappedWindowBase != 0;
    assume in_mappedWindowBase > 0;
    assume {:nonnull} in_PcmciaAddressSpace != 0;
    assume in_PcmciaAddressSpace > 0;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    goto anon72_Then;

  anon72_Then:
    assume {:partition} 0 <= out_status_50;
    call {:si_unique_call 2500} out_status_50 := updatePcmciaSocketParams(in_deviceExtension_11);
    goto anon65_Else;

  anon65_Else:
    assume {:partition} out_status_50 < 0;
    goto L87;

  L87:
    out_j_3 := out_j_3 + 1;
    goto L87_dummy;

  L87_dummy:
    call {:si_unique_call 2503} {:si_old_unique_call 1} out_Tmp_1670, out_Tmp_1674, out_Tmp_1679, out_j_3, out_Tmp_1680, out_Tmp_1691, out_status_50, out_boogieTmp := TrueffsStartDevice_loop_L84(out_Tmp_1670, in_AddressMemoryBase, in_mappedWindowBase, out_Tmp_1674, in_fullResourceList, in_partialResourceList, out_Tmp_1679, in_partialDescriptors, out_j_3, in_PcmciaAddressSpace, out_Tmp_1680, out_Tmp_1691, out_status_50, in_deviceExtension_11, out_boogieTmp);
    return;

  anon71_Then:
    goto L87;
}



procedure {:LoopProcedure} TrueffsStartDevice_loop_L84(in_Tmp_1670: int, in_AddressMemoryBase: int, in_mappedWindowBase: int, in_Tmp_1674: int, in_fullResourceList: int, in_partialResourceList: int, in_Tmp_1679: int, in_partialDescriptors: int, in_j_3: int, in_PcmciaAddressSpace: int, in_Tmp_1680: int, in_Tmp_1691: int, in_status_50: int, in_deviceExtension_11: int, in_boogieTmp: int) returns (out_Tmp_1670: int, out_Tmp_1674: int, out_Tmp_1679: int, out_j_3: int, out_Tmp_1680: int, out_Tmp_1691: int, out_status_50: int, out_boogieTmp: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsStartDevice_loop_L79(in_i_18: int, in_Tmp_1670: int, in_AddressMemoryBase: int, in_mappedWindowBase: int, in_Tmp_1674: int, in_fullResourceList: int, in_partialResourceList: int, in_Tmp_1679: int, in_partialDescriptors: int, in_j_3: int, in_PcmciaAddressSpace: int, in_Tmp_1680: int, in_Tmp_1691: int, in_status_50: int, in_deviceExtension_11: int, in_ResourceList: int, in_boogieTmp: int) returns (out_i_18: int, out_Tmp_1670: int, out_Tmp_1674: int, out_fullResourceList: int, out_partialResourceList: int, out_Tmp_1679: int, out_partialDescriptors: int, out_j_3: int, out_Tmp_1680: int, out_Tmp_1691: int, out_status_50: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1506: int;
  var vslice_dummy_var_1507: int;
  var vslice_dummy_var_1508: int;
  var vslice_dummy_var_1509: int;

  entry:
    out_i_18, out_Tmp_1670, out_Tmp_1674, out_fullResourceList, out_partialResourceList, out_Tmp_1679, out_partialDescriptors, out_j_3, out_Tmp_1680, out_Tmp_1691, out_status_50, out_boogieTmp := in_i_18, in_Tmp_1670, in_Tmp_1674, in_fullResourceList, in_partialResourceList, in_Tmp_1679, in_partialDescriptors, in_j_3, in_Tmp_1680, in_Tmp_1691, in_status_50, in_boogieTmp;
    goto L79, exit;

  exit:
    return;

  L79:
    assume {:nonnull} in_ResourceList != 0;
    assume in_ResourceList > 0;
    goto anon63_Else;

  anon63_Else:
    assume {:nonnull} out_fullResourceList != 0;
    assume out_fullResourceList > 0;
    out_partialResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(out_fullResourceList);
    assume {:nonnull} out_fullResourceList != 0;
    assume out_fullResourceList > 0;
    havoc out_partialDescriptors;
    out_j_3 := 0;
    goto L84;

  L84:
    call {:si_unique_call 2504} out_Tmp_1670, out_Tmp_1674, out_Tmp_1679, out_j_3, out_Tmp_1680, out_Tmp_1691, out_status_50, out_boogieTmp := TrueffsStartDevice_loop_L84(out_Tmp_1670, in_AddressMemoryBase, in_mappedWindowBase, out_Tmp_1674, out_fullResourceList, out_partialResourceList, out_Tmp_1679, out_partialDescriptors, out_j_3, in_PcmciaAddressSpace, out_Tmp_1680, out_Tmp_1691, out_status_50, in_deviceExtension_11, out_boogieTmp);
    goto L84_last;

  L84_last:
    assume {:nonnull} out_partialResourceList != 0;
    assume out_partialResourceList > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_Tmp_1670 := out_j_3;
    assume {:nonnull} out_partialDescriptors != 0;
    assume out_partialDescriptors > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} in_PcmciaAddressSpace != 0;
    assume in_PcmciaAddressSpace > 0;
    out_Tmp_1691 := out_j_3;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    assume {:nonnull} out_partialDescriptors != 0;
    assume out_partialDescriptors > 0;
    out_Tmp_1679 := out_j_3;
    assume {:nonnull} out_partialDescriptors != 0;
    assume out_partialDescriptors > 0;
    havoc out_Tmp_1680;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    call {:si_unique_call 2506} out_boogieTmp := RtlConvertLongToLargeInteger(out_Tmp_1680);
    out_Tmp_1674 := out_j_3;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    assume {:nonnull} out_partialDescriptors != 0;
    assume out_partialDescriptors > 0;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    assume {:nonnull} out_fullResourceList != 0;
    assume out_fullResourceList > 0;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    assume {:nonnull} out_fullResourceList != 0;
    assume out_fullResourceList > 0;
    assume {:nonnull} in_mappedWindowBase != 0;
    assume in_mappedWindowBase > 0;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    havoc vslice_dummy_var_1506;
    havoc vslice_dummy_var_1507;
    havoc vslice_dummy_var_1508;
    havoc vslice_dummy_var_1509;
    call {:si_unique_call 2507} out_status_50 := TrueffsTranslateAddress(vslice_dummy_var_1506, vslice_dummy_var_1507, vslice_dummy_var_1508, vslice_dummy_var_1509, in_PcmciaAddressSpace, in_mappedWindowBase, in_AddressMemoryBase);
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    assume {:nonnull} in_mappedWindowBase != 0;
    assume in_mappedWindowBase > 0;
    assume {:nonnull} in_PcmciaAddressSpace != 0;
    assume in_PcmciaAddressSpace > 0;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    goto anon72_Then;

  anon72_Then:
    assume {:partition} 0 <= out_status_50;
    call {:si_unique_call 2505} out_status_50 := updatePcmciaSocketParams(in_deviceExtension_11);
    goto anon65_Else;

  anon65_Else:
    assume {:partition} out_status_50 < 0;
    goto L87;

  L87:
    out_j_3 := out_j_3 + 1;
    assume false;
    return;

  anon71_Then:
    goto L87;

  anon64_Then:
    out_fullResourceList := out_partialDescriptors;
    out_i_18 := out_i_18 + 1;
    goto anon64_Then_dummy;

  anon64_Then_dummy:
    call {:si_unique_call 2508} {:si_old_unique_call 1} out_i_18, out_Tmp_1670, out_Tmp_1674, out_fullResourceList, out_partialResourceList, out_Tmp_1679, out_partialDescriptors, out_j_3, out_Tmp_1680, out_Tmp_1691, out_status_50, out_boogieTmp := TrueffsStartDevice_loop_L79(out_i_18, out_Tmp_1670, in_AddressMemoryBase, in_mappedWindowBase, out_Tmp_1674, out_fullResourceList, out_partialResourceList, out_Tmp_1679, out_partialDescriptors, out_j_3, in_PcmciaAddressSpace, out_Tmp_1680, out_Tmp_1691, out_status_50, in_deviceExtension_11, in_ResourceList, out_boogieTmp);
    return;
}



procedure {:LoopProcedure} TrueffsStartDevice_loop_L79(in_i_18: int, in_Tmp_1670: int, in_AddressMemoryBase: int, in_mappedWindowBase: int, in_Tmp_1674: int, in_fullResourceList: int, in_partialResourceList: int, in_Tmp_1679: int, in_partialDescriptors: int, in_j_3: int, in_PcmciaAddressSpace: int, in_Tmp_1680: int, in_Tmp_1691: int, in_status_50: int, in_deviceExtension_11: int, in_ResourceList: int, in_boogieTmp: int) returns (out_i_18: int, out_Tmp_1670: int, out_Tmp_1674: int, out_fullResourceList: int, out_partialResourceList: int, out_Tmp_1679: int, out_partialDescriptors: int, out_j_3: int, out_Tmp_1680: int, out_Tmp_1691: int, out_status_50: int, out_boogieTmp: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsStartDevice_loop_L128(in_i_18: int, in_Tmp_1682: int) returns (out_i_18: int, out_Tmp_1682: int)
{

  entry:
    out_i_18, out_Tmp_1682 := in_i_18, in_Tmp_1682;
    goto L128, exit;

  exit:
    return;

  L128:
    assume {:CounterLoop 4} {:Counter "i_18"} true;
    goto anon67_Else;

  anon67_Else:
    assume {:partition} 8 > out_i_18;
    out_Tmp_1682 := out_i_18;
    goto anon73_Else;

  anon73_Else:
    out_i_18 := out_i_18 + 1;
    goto anon73_Else_dummy;

  anon73_Else_dummy:
    havoc out_i_18;
    return;
}



procedure {:LoopProcedure} TrueffsStartDevice_loop_L128(in_i_18: int, in_Tmp_1682: int) returns (out_i_18: int, out_Tmp_1682: int);
  free ensures {:va_keep} out_Tmp_1682 == in_i_18 || out_Tmp_1682 == in_Tmp_1682;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsStartDevice_loop_L45(in_deviceIndex_1: int, in_baseAddress_2: int, in_Tmp_1675: int, in_Tmp_1688: int) returns (out_deviceIndex_1: int, out_Tmp_1675: int, out_Tmp_1688: int)
{

  entry:
    out_deviceIndex_1, out_Tmp_1675, out_Tmp_1688 := in_deviceIndex_1, in_Tmp_1675, in_Tmp_1688;
    goto L45, exit;

  exit:
    return;

  L45:
    assume {:CounterLoop 4} {:Counter "deviceIndex_1"} true;
    goto anon60_Else;

  anon60_Else:
    assume {:partition} 4 > out_deviceIndex_1;
    out_Tmp_1675 := out_deviceIndex_1;
    goto anon70_Then;

  anon70_Then:
    out_Tmp_1688 := out_deviceIndex_1;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L53;

  L53:
    out_deviceIndex_1 := out_deviceIndex_1 + 1;
    goto L53_dummy;

  L53_dummy:
    call {:si_unique_call 2509} {:si_old_unique_call 1} out_deviceIndex_1, out_Tmp_1675, out_Tmp_1688 := TrueffsStartDevice_loop_L45(out_deviceIndex_1, in_baseAddress_2, out_Tmp_1675, out_Tmp_1688);
    return;

  anon75_Then:
    goto anon62_Then;

  anon62_Then:
    assume {:partition} in_baseAddress_2 == 0;
    goto L53;
}



procedure {:LoopProcedure} TrueffsStartDevice_loop_L45(in_deviceIndex_1: int, in_baseAddress_2: int, in_Tmp_1675: int, in_Tmp_1688: int) returns (out_deviceIndex_1: int, out_Tmp_1675: int, out_Tmp_1688: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsStartDevice_loop_L28(in_deviceIndex_1: int, in_Tmp_1672: int, in_mappedWindowBase: int, in_Tmp_1673: int, in_baseAddress_2: int, in_Tmp_1675: int, in_fullResourceList: int, in_partialResourceList: int, in_Tmp_1676: int, in_Tmp_1678: int, in_partialDescriptors: int, in_j_3: int, in_Tmp_1681: int, in_Tmp_1684: int, in_Tmp_1685: int, in_Tmp_1688: int, in_status_50: int, in_Tmp_1692: int, in_addressSpace: int, in_Tmp_1693: int, in_Tmp_1694: int, in_Tmp_1695: int, in_deviceExtension_11: int, in_boogieTmp: int) returns (out_deviceIndex_1: int, out_Tmp_1672: int, out_Tmp_1673: int, out_baseAddress_2: int, out_Tmp_1675: int, out_Tmp_1676: int, out_Tmp_1678: int, out_j_3: int, out_Tmp_1681: int, out_Tmp_1684: int, out_Tmp_1685: int, out_Tmp_1688: int, out_status_50: int, out_Tmp_1692: int, out_Tmp_1693: int, out_Tmp_1694: int, out_Tmp_1695: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1510: int;
  var vslice_dummy_var_1511: int;

  entry:
    out_deviceIndex_1, out_Tmp_1672, out_Tmp_1673, out_baseAddress_2, out_Tmp_1675, out_Tmp_1676, out_Tmp_1678, out_j_3, out_Tmp_1681, out_Tmp_1684, out_Tmp_1685, out_Tmp_1688, out_status_50, out_Tmp_1692, out_Tmp_1693, out_Tmp_1694, out_Tmp_1695, out_boogieTmp := in_deviceIndex_1, in_Tmp_1672, in_Tmp_1673, in_baseAddress_2, in_Tmp_1675, in_Tmp_1676, in_Tmp_1678, in_j_3, in_Tmp_1681, in_Tmp_1684, in_Tmp_1685, in_Tmp_1688, in_status_50, in_Tmp_1692, in_Tmp_1693, in_Tmp_1694, in_Tmp_1695, in_boogieTmp;
    goto L28, exit;

  exit:
    return;

  L28:
    assume {:nonnull} in_partialResourceList != 0;
    assume in_partialResourceList > 0;
    goto anon57_Else;

  anon57_Else:
    out_Tmp_1673 := out_j_3;
    assume {:nonnull} in_partialDescriptors != 0;
    assume in_partialDescriptors > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    out_deviceIndex_1 := 0;
    out_Tmp_1692 := out_j_3;
    assume {:nonnull} in_partialDescriptors != 0;
    assume in_partialDescriptors > 0;
    havoc out_baseAddress_2;
    out_Tmp_1678 := out_j_3;
    assume {:nonnull} in_partialDescriptors != 0;
    assume in_partialDescriptors > 0;
    havoc out_Tmp_1693;
    out_Tmp_1672 := out_j_3;
    assume {:nonnull} in_partialDescriptors != 0;
    assume in_partialDescriptors > 0;
    havoc out_Tmp_1695;
    assume {:nonnull} in_fullResourceList != 0;
    assume in_fullResourceList > 0;
    havoc vslice_dummy_var_1510;
    havoc vslice_dummy_var_1511;
    call {:si_unique_call 2510} out_status_50 := TrueffsCheckDiskOnChip(vslice_dummy_var_1510, vslice_dummy_var_1511, out_Tmp_1695, out_Tmp_1693, in_mappedWindowBase, in_addressSpace);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} out_status_50 >= 0;
    out_deviceIndex_1 := 0;
    goto L45;

  L45:
    call {:si_unique_call 2512} out_deviceIndex_1, out_Tmp_1675, out_Tmp_1688 := TrueffsStartDevice_loop_L45(out_deviceIndex_1, out_baseAddress_2, out_Tmp_1675, out_Tmp_1688);
    goto L45_last;

  L45_last:
    assume {:CounterLoop 4} {:Counter "deviceIndex_1"} true;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} 4 > out_deviceIndex_1;
    out_Tmp_1675 := out_deviceIndex_1;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    call {:si_unique_call 2511} out_boogieTmp := corral_nondet();
    out_Tmp_1681 := out_deviceIndex_1;
    out_Tmp_1676 := out_deviceIndex_1;
    goto L46;

  L46:
    goto anon61_Else;

  anon61_Else:
    assume {:partition} out_deviceIndex_1 != 4;
    goto L43;

  L43:
    goto anon59_Then;

  anon59_Then:
    assume {:partition} 0 > out_status_50;
    goto L31;

  L31:
    out_j_3 := out_j_3 + 1;
    goto L31_dummy;

  L31_dummy:
    call {:si_unique_call 2513} {:si_old_unique_call 1} out_deviceIndex_1, out_Tmp_1672, out_Tmp_1673, out_baseAddress_2, out_Tmp_1675, out_Tmp_1676, out_Tmp_1678, out_j_3, out_Tmp_1681, out_Tmp_1684, out_Tmp_1685, out_Tmp_1688, out_status_50, out_Tmp_1692, out_Tmp_1693, out_Tmp_1694, out_Tmp_1695, out_boogieTmp := TrueffsStartDevice_loop_L28(out_deviceIndex_1, out_Tmp_1672, in_mappedWindowBase, out_Tmp_1673, out_baseAddress_2, out_Tmp_1675, in_fullResourceList, in_partialResourceList, out_Tmp_1676, out_Tmp_1678, in_partialDescriptors, out_j_3, out_Tmp_1681, out_Tmp_1684, out_Tmp_1685, out_Tmp_1688, out_status_50, out_Tmp_1692, in_addressSpace, out_Tmp_1693, out_Tmp_1694, out_Tmp_1695, in_deviceExtension_11, out_boogieTmp);
    return;

  anon70_Then:
    out_Tmp_1688 := out_deviceIndex_1;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L53;

  L53:
    out_deviceIndex_1 := out_deviceIndex_1 + 1;
    assume false;
    return;

  anon75_Then:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} out_baseAddress_2 != 0;
    out_Tmp_1684 := out_deviceIndex_1;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    out_Tmp_1694 := out_deviceIndex_1;
    out_Tmp_1685 := out_deviceIndex_1;
    goto L46;

  anon62_Then:
    assume {:partition} out_baseAddress_2 == 0;
    goto L53;

  anon60_Then:
    assume {:partition} out_deviceIndex_1 >= 4;
    goto L46;

  anon58_Then:
    assume {:partition} 0 > out_status_50;
    goto L43;

  anon69_Then:
    goto L31;
}



procedure {:LoopProcedure} TrueffsStartDevice_loop_L28(in_deviceIndex_1: int, in_Tmp_1672: int, in_mappedWindowBase: int, in_Tmp_1673: int, in_baseAddress_2: int, in_Tmp_1675: int, in_fullResourceList: int, in_partialResourceList: int, in_Tmp_1676: int, in_Tmp_1678: int, in_partialDescriptors: int, in_j_3: int, in_Tmp_1681: int, in_Tmp_1684: int, in_Tmp_1685: int, in_Tmp_1688: int, in_status_50: int, in_Tmp_1692: int, in_addressSpace: int, in_Tmp_1693: int, in_Tmp_1694: int, in_Tmp_1695: int, in_deviceExtension_11: int, in_boogieTmp: int) returns (out_deviceIndex_1: int, out_Tmp_1672: int, out_Tmp_1673: int, out_baseAddress_2: int, out_Tmp_1675: int, out_Tmp_1676: int, out_Tmp_1678: int, out_j_3: int, out_Tmp_1681: int, out_Tmp_1684: int, out_Tmp_1685: int, out_Tmp_1688: int, out_status_50: int, out_Tmp_1692: int, out_Tmp_1693: int, out_Tmp_1694: int, out_Tmp_1695: int, out_boogieTmp: int);
  modifies alloc;
  free ensures {:va_keep} out_status_50 == 0 || out_status_50 == -1073741823 || out_status_50 == -1073741811 || out_status_50 == in_status_50;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsStartDevice_loop_L23(in_i_18: int, in_deviceIndex_1: int, in_Tmp_1672: int, in_mappedWindowBase: int, in_Tmp_1673: int, in_baseAddress_2: int, in_Tmp_1675: int, in_fullResourceList: int, in_partialResourceList: int, in_Tmp_1676: int, in_Tmp_1678: int, in_partialDescriptors: int, in_j_3: int, in_Tmp_1681: int, in_Tmp_1684: int, in_Tmp_1685: int, in_Tmp_1688: int, in_status_50: int, in_Tmp_1692: int, in_addressSpace: int, in_Tmp_1693: int, in_Tmp_1694: int, in_Tmp_1695: int, in_deviceExtension_11: int, in_ResourceList: int, in_boogieTmp: int) returns (out_i_18: int, out_deviceIndex_1: int, out_Tmp_1672: int, out_Tmp_1673: int, out_baseAddress_2: int, out_Tmp_1675: int, out_fullResourceList: int, out_partialResourceList: int, out_Tmp_1676: int, out_Tmp_1678: int, out_partialDescriptors: int, out_j_3: int, out_Tmp_1681: int, out_Tmp_1684: int, out_Tmp_1685: int, out_Tmp_1688: int, out_status_50: int, out_Tmp_1692: int, out_Tmp_1693: int, out_Tmp_1694: int, out_Tmp_1695: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1512: int;
  var vslice_dummy_var_1513: int;

  entry:
    out_i_18, out_deviceIndex_1, out_Tmp_1672, out_Tmp_1673, out_baseAddress_2, out_Tmp_1675, out_fullResourceList, out_partialResourceList, out_Tmp_1676, out_Tmp_1678, out_partialDescriptors, out_j_3, out_Tmp_1681, out_Tmp_1684, out_Tmp_1685, out_Tmp_1688, out_status_50, out_Tmp_1692, out_Tmp_1693, out_Tmp_1694, out_Tmp_1695, out_boogieTmp := in_i_18, in_deviceIndex_1, in_Tmp_1672, in_Tmp_1673, in_baseAddress_2, in_Tmp_1675, in_fullResourceList, in_partialResourceList, in_Tmp_1676, in_Tmp_1678, in_partialDescriptors, in_j_3, in_Tmp_1681, in_Tmp_1684, in_Tmp_1685, in_Tmp_1688, in_status_50, in_Tmp_1692, in_Tmp_1693, in_Tmp_1694, in_Tmp_1695, in_boogieTmp;
    goto L23, exit;

  exit:
    return;

  L23:
    assume {:nonnull} in_ResourceList != 0;
    assume in_ResourceList > 0;
    goto anon55_Else;

  anon55_Else:
    assume {:nonnull} out_fullResourceList != 0;
    assume out_fullResourceList > 0;
    out_partialResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(out_fullResourceList);
    assume {:nonnull} out_fullResourceList != 0;
    assume out_fullResourceList > 0;
    havoc out_partialDescriptors;
    out_j_3 := 0;
    goto L28;

  L28:
    call {:si_unique_call 2514} out_deviceIndex_1, out_Tmp_1672, out_Tmp_1673, out_baseAddress_2, out_Tmp_1675, out_Tmp_1676, out_Tmp_1678, out_j_3, out_Tmp_1681, out_Tmp_1684, out_Tmp_1685, out_Tmp_1688, out_status_50, out_Tmp_1692, out_Tmp_1693, out_Tmp_1694, out_Tmp_1695, out_boogieTmp := TrueffsStartDevice_loop_L28(out_deviceIndex_1, out_Tmp_1672, in_mappedWindowBase, out_Tmp_1673, out_baseAddress_2, out_Tmp_1675, out_fullResourceList, out_partialResourceList, out_Tmp_1676, out_Tmp_1678, out_partialDescriptors, out_j_3, out_Tmp_1681, out_Tmp_1684, out_Tmp_1685, out_Tmp_1688, out_status_50, out_Tmp_1692, in_addressSpace, out_Tmp_1693, out_Tmp_1694, out_Tmp_1695, in_deviceExtension_11, out_boogieTmp);
    goto L28_last;

  L28_last:
    assume {:nonnull} out_partialResourceList != 0;
    assume out_partialResourceList > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    out_Tmp_1673 := out_j_3;
    assume {:nonnull} out_partialDescriptors != 0;
    assume out_partialDescriptors > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    out_deviceIndex_1 := 0;
    out_Tmp_1692 := out_j_3;
    assume {:nonnull} out_partialDescriptors != 0;
    assume out_partialDescriptors > 0;
    havoc out_baseAddress_2;
    out_Tmp_1678 := out_j_3;
    assume {:nonnull} out_partialDescriptors != 0;
    assume out_partialDescriptors > 0;
    havoc out_Tmp_1693;
    out_Tmp_1672 := out_j_3;
    assume {:nonnull} out_partialDescriptors != 0;
    assume out_partialDescriptors > 0;
    havoc out_Tmp_1695;
    assume {:nonnull} out_fullResourceList != 0;
    assume out_fullResourceList > 0;
    havoc vslice_dummy_var_1512;
    havoc vslice_dummy_var_1513;
    call {:si_unique_call 2515} out_status_50 := TrueffsCheckDiskOnChip(vslice_dummy_var_1512, vslice_dummy_var_1513, out_Tmp_1695, out_Tmp_1693, in_mappedWindowBase, in_addressSpace);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} out_status_50 >= 0;
    out_deviceIndex_1 := 0;
    goto L45;

  L45:
    call {:si_unique_call 2517} out_deviceIndex_1, out_Tmp_1675, out_Tmp_1688 := TrueffsStartDevice_loop_L45(out_deviceIndex_1, out_baseAddress_2, out_Tmp_1675, out_Tmp_1688);
    goto L45_last;

  L45_last:
    assume {:CounterLoop 4} {:Counter "deviceIndex_1"} true;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} 4 > out_deviceIndex_1;
    out_Tmp_1675 := out_deviceIndex_1;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    call {:si_unique_call 2516} out_boogieTmp := corral_nondet();
    out_Tmp_1681 := out_deviceIndex_1;
    out_Tmp_1676 := out_deviceIndex_1;
    goto L46;

  L46:
    goto anon61_Else;

  anon61_Else:
    assume {:partition} out_deviceIndex_1 != 4;
    goto L43;

  L43:
    goto anon59_Then;

  anon59_Then:
    assume {:partition} 0 > out_status_50;
    goto L31;

  L31:
    out_j_3 := out_j_3 + 1;
    assume false;
    return;

  anon70_Then:
    out_Tmp_1688 := out_deviceIndex_1;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L53;

  L53:
    out_deviceIndex_1 := out_deviceIndex_1 + 1;
    assume false;
    return;

  anon75_Then:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} out_baseAddress_2 != 0;
    out_Tmp_1684 := out_deviceIndex_1;
    assume {:nonnull} in_deviceExtension_11 != 0;
    assume in_deviceExtension_11 > 0;
    out_Tmp_1694 := out_deviceIndex_1;
    out_Tmp_1685 := out_deviceIndex_1;
    goto L46;

  anon62_Then:
    assume {:partition} out_baseAddress_2 == 0;
    goto L53;

  anon60_Then:
    assume {:partition} out_deviceIndex_1 >= 4;
    goto L46;

  anon58_Then:
    assume {:partition} 0 > out_status_50;
    goto L43;

  anon69_Then:
    goto L31;

  anon57_Then:
    out_fullResourceList := out_partialDescriptors;
    out_i_18 := out_i_18 + 1;
    goto anon57_Then_dummy;

  anon57_Then_dummy:
    call {:si_unique_call 2518} {:si_old_unique_call 1} out_i_18, out_deviceIndex_1, out_Tmp_1672, out_Tmp_1673, out_baseAddress_2, out_Tmp_1675, out_fullResourceList, out_partialResourceList, out_Tmp_1676, out_Tmp_1678, out_partialDescriptors, out_j_3, out_Tmp_1681, out_Tmp_1684, out_Tmp_1685, out_Tmp_1688, out_status_50, out_Tmp_1692, out_Tmp_1693, out_Tmp_1694, out_Tmp_1695, out_boogieTmp := TrueffsStartDevice_loop_L23(out_i_18, out_deviceIndex_1, out_Tmp_1672, in_mappedWindowBase, out_Tmp_1673, out_baseAddress_2, out_Tmp_1675, out_fullResourceList, out_partialResourceList, out_Tmp_1676, out_Tmp_1678, out_partialDescriptors, out_j_3, out_Tmp_1681, out_Tmp_1684, out_Tmp_1685, out_Tmp_1688, out_status_50, out_Tmp_1692, in_addressSpace, out_Tmp_1693, out_Tmp_1694, out_Tmp_1695, in_deviceExtension_11, in_ResourceList, out_boogieTmp);
    return;
}



procedure {:LoopProcedure} TrueffsStartDevice_loop_L23(in_i_18: int, in_deviceIndex_1: int, in_Tmp_1672: int, in_mappedWindowBase: int, in_Tmp_1673: int, in_baseAddress_2: int, in_Tmp_1675: int, in_fullResourceList: int, in_partialResourceList: int, in_Tmp_1676: int, in_Tmp_1678: int, in_partialDescriptors: int, in_j_3: int, in_Tmp_1681: int, in_Tmp_1684: int, in_Tmp_1685: int, in_Tmp_1688: int, in_status_50: int, in_Tmp_1692: int, in_addressSpace: int, in_Tmp_1693: int, in_Tmp_1694: int, in_Tmp_1695: int, in_deviceExtension_11: int, in_ResourceList: int, in_boogieTmp: int) returns (out_i_18: int, out_deviceIndex_1: int, out_Tmp_1672: int, out_Tmp_1673: int, out_baseAddress_2: int, out_Tmp_1675: int, out_fullResourceList: int, out_partialResourceList: int, out_Tmp_1676: int, out_Tmp_1678: int, out_partialDescriptors: int, out_j_3: int, out_Tmp_1681: int, out_Tmp_1684: int, out_Tmp_1685: int, out_Tmp_1688: int, out_status_50: int, out_Tmp_1692: int, out_Tmp_1693: int, out_Tmp_1694: int, out_Tmp_1695: int, out_boogieTmp: int);
  modifies alloc;
  free ensures {:va_keep} out_status_50 == 0 || out_status_50 == -1073741823 || out_status_50 == -1073741811 || out_status_50 == in_status_50;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 9} TrueffsMountMedia_loop_L61(in_prevValue_2: int, in_Tmp_1721: int, in_Tmp_1723: int, in_currSockets: int, in_status_53: int, in_Tmp_1724: int) returns (out_Tmp_1721: int, out_Tmp_1723: int, out_currSockets: int, out_status_53: int, out_Tmp_1724: int)
{

  entry:
    out_Tmp_1721, out_Tmp_1723, out_currSockets, out_status_53, out_Tmp_1724 := in_Tmp_1721, in_Tmp_1723, in_currSockets, in_status_53, in_Tmp_1724;
    goto L61, exit;

  exit:
    return;

  L61:
    assume {:CounterLoop 8} {:Counter "currSockets"} true;
    goto anon25_Else;

  anon25_Else:
    assume {:partition} 8 > out_currSockets;
    out_Tmp_1724 := out_currSockets;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    out_Tmp_1723 := out_currSockets;
    havoc out_Tmp_1721;
    call {:si_unique_call 2519} out_status_53 := flSetEnvSocket(202, out_currSockets, out_Tmp_1721, in_prevValue_2);
    goto L64;

  L64:
    out_currSockets := out_currSockets + 1;
    goto L64_dummy;

  L64_dummy:
    call {:si_unique_call 2520} {:si_old_unique_call 1} out_Tmp_1721, out_Tmp_1723, out_currSockets, out_status_53, out_Tmp_1724 := TrueffsMountMedia_loop_L61(in_prevValue_2, out_Tmp_1721, out_Tmp_1723, out_currSockets, out_status_53, out_Tmp_1724);
    return;

  anon29_Then:
    goto L64;
}



procedure {:LoopProcedure} TrueffsMountMedia_loop_L61(in_prevValue_2: int, in_Tmp_1721: int, in_Tmp_1723: int, in_currSockets: int, in_status_53: int, in_Tmp_1724: int) returns (out_Tmp_1721: int, out_Tmp_1723: int, out_currSockets: int, out_status_53: int, out_Tmp_1724: int);
  modifies alloc, initDone, LockDepth;
  free ensures {:va_keep} out_status_53 == 51 || out_status_53 == 106 || out_status_53 == 0 || out_status_53 == in_status_53;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsThread_loop_L822(in_Tmp_1743: int, in_Tmp_1753: int, in_revisionString: int, in_i_19: int, in_inquiryData: int, in_Tmp_1834: int) returns (out_Tmp_1743: int, out_Tmp_1753: int, out_Tmp_1834: int)
{

  entry:
    out_Tmp_1743, out_Tmp_1753, out_Tmp_1834 := in_Tmp_1743, in_Tmp_1753, in_Tmp_1834;
    goto L822, exit;

  exit:
    return;

  L822:
    assume {:CounterLoop 4} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon427_Else;

  anon427_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1834;
    assume {:nonnull} in_inquiryData != 0;
    assume in_inquiryData > 0;
    havoc out_Tmp_1753;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1743;
    assume {:nonnull} out_Tmp_1753 != 0;
    assume out_Tmp_1753 > 0;
    assume {:nonnull} in_revisionString != 0;
    assume in_revisionString > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon427_Else_dummy;

  anon427_Else_dummy:
    call {:si_unique_call 2521} {:si_old_unique_call 1} out_Tmp_1743, out_Tmp_1753, out_Tmp_1834 := TrueffsThread_loop_L822(out_Tmp_1743, out_Tmp_1753, in_revisionString, in_i_19, in_inquiryData, out_Tmp_1834);
    return;
}



procedure {:LoopProcedure} TrueffsThread_loop_L822(in_Tmp_1743: int, in_Tmp_1753: int, in_revisionString: int, in_i_19: int, in_inquiryData: int, in_Tmp_1834: int) returns (out_Tmp_1743: int, out_Tmp_1753: int, out_Tmp_1834: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsThread_loop_L818(in_Tmp_1762: int, in_Tmp_1771: int, in_i_19: int, in_productString: int, in_inquiryData: int, in_Tmp_1841: int) returns (out_Tmp_1762: int, out_Tmp_1771: int, out_Tmp_1841: int)
{

  entry:
    out_Tmp_1762, out_Tmp_1771, out_Tmp_1841 := in_Tmp_1762, in_Tmp_1771, in_Tmp_1841;
    goto L818, exit;

  exit:
    return;

  L818:
    assume {:CounterLoop 16} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon426_Else;

  anon426_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1841;
    assume {:nonnull} in_inquiryData != 0;
    assume in_inquiryData > 0;
    havoc out_Tmp_1771;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1762;
    assume {:nonnull} out_Tmp_1771 != 0;
    assume out_Tmp_1771 > 0;
    assume {:nonnull} in_productString != 0;
    assume in_productString > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon426_Else_dummy;

  anon426_Else_dummy:
    call {:si_unique_call 2522} {:si_old_unique_call 1} out_Tmp_1762, out_Tmp_1771, out_Tmp_1841 := TrueffsThread_loop_L818(out_Tmp_1762, out_Tmp_1771, in_i_19, in_productString, in_inquiryData, out_Tmp_1841);
    return;
}



procedure {:LoopProcedure} TrueffsThread_loop_L818(in_Tmp_1762: int, in_Tmp_1771: int, in_i_19: int, in_productString: int, in_inquiryData: int, in_Tmp_1841: int) returns (out_Tmp_1762: int, out_Tmp_1771: int, out_Tmp_1841: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsThread_loop_L814(in_Tmp_1740: int, in_i_19: int, in_Tmp_1804: int, in_Tmp_1807: int, in_inquiryData: int, in_vendorString: int) returns (out_Tmp_1740: int, out_Tmp_1804: int, out_Tmp_1807: int)
{

  entry:
    out_Tmp_1740, out_Tmp_1804, out_Tmp_1807 := in_Tmp_1740, in_Tmp_1804, in_Tmp_1807;
    goto L814, exit;

  exit:
    return;

  L814:
    assume {:CounterLoop 8} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon425_Else;

  anon425_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1807;
    assume {:nonnull} in_inquiryData != 0;
    assume in_inquiryData > 0;
    havoc out_Tmp_1740;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1804;
    assume {:nonnull} out_Tmp_1740 != 0;
    assume out_Tmp_1740 > 0;
    assume {:nonnull} in_vendorString != 0;
    assume in_vendorString > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon425_Else_dummy;

  anon425_Else_dummy:
    call {:si_unique_call 2523} {:si_old_unique_call 1} out_Tmp_1740, out_Tmp_1804, out_Tmp_1807 := TrueffsThread_loop_L814(out_Tmp_1740, in_i_19, out_Tmp_1804, out_Tmp_1807, in_inquiryData, in_vendorString);
    return;
}



procedure {:LoopProcedure} TrueffsThread_loop_L814(in_Tmp_1740: int, in_i_19: int, in_Tmp_1804: int, in_Tmp_1807: int, in_inquiryData: int, in_vendorString: int) returns (out_Tmp_1740: int, out_Tmp_1804: int, out_Tmp_1807: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsThread_loop_L807(in_Tmp_1757: int, in_Tmp_1774: int, in_i_19: int, in_Srb: int) returns (out_Tmp_1757: int, out_Tmp_1774: int)
{

  entry:
    out_Tmp_1757, out_Tmp_1774 := in_Tmp_1757, in_Tmp_1774;
    goto L807, exit;

  exit:
    return;

  L807:
    assume {:nonnull} in_Srb != 0;
    assume in_Srb > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon424_Else;

  anon424_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1774;
    assume {:nonnull} in_Srb != 0;
    assume in_Srb > 0;
    havoc out_Tmp_1757;
    assume {:nonnull} out_Tmp_1757 != 0;
    assume out_Tmp_1757 > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon424_Else_dummy;

  anon424_Else_dummy:
    call {:si_unique_call 2524} {:si_old_unique_call 1} out_Tmp_1757, out_Tmp_1774 := TrueffsThread_loop_L807(out_Tmp_1757, out_Tmp_1774, in_i_19, in_Srb);
    return;
}



procedure {:LoopProcedure} TrueffsThread_loop_L807(in_Tmp_1757: int, in_Tmp_1774: int, in_i_19: int, in_Srb: int) returns (out_Tmp_1757: int, out_Tmp_1774: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsThread_loop_L502(in_Tmp_1739: int, in_Tmp_1768: int, in_Tmp_1770: int, in_i_19: int, in_bdkOperationInput: int, in_userInput: int, in_Tmp_1818: int, in_Tmp_1825: int, in_Tmp_1832: int, in_Tmp_1835: int, in_Tmp_1840: int) returns (out_Tmp_1739: int, out_Tmp_1768: int, out_Tmp_1770: int, out_Tmp_1818: int, out_Tmp_1825: int, out_Tmp_1832: int, out_Tmp_1835: int, out_Tmp_1840: int)
{

  entry:
    out_Tmp_1739, out_Tmp_1768, out_Tmp_1770, out_Tmp_1818, out_Tmp_1825, out_Tmp_1832, out_Tmp_1835, out_Tmp_1840 := in_Tmp_1739, in_Tmp_1768, in_Tmp_1770, in_Tmp_1818, in_Tmp_1825, in_Tmp_1832, in_Tmp_1835, in_Tmp_1840;
    goto L502, exit;

  exit:
    return;

  L502:
    assume {:CounterLoop 4} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon388_Else;

  anon388_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1770;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1739;
    out_Tmp_1818 := in_userInput;
    assume {:nonnull} out_Tmp_1818 != 0;
    assume out_Tmp_1818 > 0;
    havoc out_Tmp_1832;
    assume {:nonnull} out_Tmp_1832 != 0;
    assume out_Tmp_1832 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1825;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1835;
    out_Tmp_1768 := in_userInput;
    assume {:nonnull} out_Tmp_1768 != 0;
    assume out_Tmp_1768 > 0;
    havoc out_Tmp_1840;
    assume {:nonnull} out_Tmp_1840 != 0;
    assume out_Tmp_1840 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon388_Else_dummy;

  anon388_Else_dummy:
    call {:si_unique_call 2525} {:si_old_unique_call 1} out_Tmp_1739, out_Tmp_1768, out_Tmp_1770, out_Tmp_1818, out_Tmp_1825, out_Tmp_1832, out_Tmp_1835, out_Tmp_1840 := TrueffsThread_loop_L502(out_Tmp_1739, out_Tmp_1768, out_Tmp_1770, in_i_19, in_bdkOperationInput, in_userInput, out_Tmp_1818, out_Tmp_1825, out_Tmp_1832, out_Tmp_1835, out_Tmp_1840);
    return;
}



procedure {:LoopProcedure} TrueffsThread_loop_L502(in_Tmp_1739: int, in_Tmp_1768: int, in_Tmp_1770: int, in_i_19: int, in_bdkOperationInput: int, in_userInput: int, in_Tmp_1818: int, in_Tmp_1825: int, in_Tmp_1832: int, in_Tmp_1835: int, in_Tmp_1840: int) returns (out_Tmp_1739: int, out_Tmp_1768: int, out_Tmp_1770: int, out_Tmp_1818: int, out_Tmp_1825: int, out_Tmp_1832: int, out_Tmp_1835: int, out_Tmp_1840: int);
  free ensures {:va_keep} out_Tmp_1768 == in_Tmp_1768 || out_Tmp_1768 == in_userInput;
  free ensures {:va_keep} out_Tmp_1818 == in_Tmp_1818 || out_Tmp_1818 == in_userInput;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsThread_loop_L61(in_ioreq_24: int, in_flStatusProt_1: int, in_Tmp_1727: int, in_Tmp_1728: int, in_Tmp_1729: int, in_userOutput: int, in_Tmp_1731: int, in_cdb: int, in_Tmp_1732: int, in_Tmp_1733: int, in_Tmp_1734: int, in_tmpDataBuffer: int, in_Tmp_1735: int, in_irpSp_3: int, in_iplInput: int, in_Tmp_1738: int, in_Tmp_1739: int, in_Tmp_1740: int, in_Tmp_1741: int, in_Tmp_1742: int, in_Tmp_1743: int, in_Tmp_1744: int, in_Tmp_1746: int, in_ioreqProt_1: int, in_sdv_873: int, in_Tmp_1747: int, in_Tmp_1748: int, in_Tmp_1750: int, in_Tmp_1751: int, in_placeExbInput: int, in_Tmp_1752: int, in_Tmp_1753: int, in_Tmp_1754: int, in_Tmp_1756: int, in_Tmp_1757: int, in_flFp: int, in_Tmp_1759: int, in_Tmp_1761: int, in_Tmp_1762: int, in_Tmp_1763: int, in_Tmp_1764: int, in_Tmp_1765: int, in_Tmp_1766: int, in_Tmp_1767: int, in_sdv_877: int, in_Tmp_1768: int, in_tffsStatus: int, in_irp_2: int, in_Tmp_1769: int, in_Tmp_1770: int, in_Tmp_1771: int, in_protectionInput: int, in_Tmp_1773: int, in_Tmp_1774: int, in_Tmp_1775: int, in_Tmp_1776: int, in_Tmp_1777: int, in_Tmp_1779: int, in_revisionString: int, in_Tmp_1781: int, in_Tmp_1782: int, in_Tmp_1783: int, in_deviceExtension_15: int, in_Tmp_1784: int, in_Tmp_1785: int, in_Tmp_1786: int, in_Tmp_1787: int, in_dataOffset: int, in_request: int, in_Tmp_1788: int, in_Tmp_1789: int, in_transferForbidden: int, in_Tmp_1790: int, in_Tmp_1791: int, in_Tmp_1792: int, in_i_19: int, in_Tmp_1795: int, in_Tmp_1796: int, in_Tmp_1797: int, in_Tmp_1798: int, in_Tmp_1799: int, in_Tmp_1800: int, in_Tmp_1801: int, in_Tmp_1802: int, in_Tmp_1803: int, in_Tmp_1804: int, in_Tmp_1805: int, in_Tmp_1806: int, in_Tmp_1807: int, in_Tmp_1808: int, in_bdkOperationInput: int, in_otpInput: int, in_productString: int, in_tffsPriority: int, in_inquiryData: int, in_userInput: int, in_Tmp_1810: int, in_Tmp_1811: int, in_Tmp_1812: int, in_Srb: int, in_Tmp_1813: int, in_Tmp_1814: int, in_Tmp_1815: int, in_Tmp_1816: int, in_Tmp_1817: int, in_Tmp_1818: int, in_Tmp_1819: int, in_startingSector: int, in_Tmp_1821: int, in_Tmp_1823: int, in_Tmp_1824: int, in_Tmp_1825: int, in_storedSrbDataBuffer: int, in_vendorString: int, in_Tmp_1827: int, in_flIoctlRec: int, in_Tmp_1829: int, in_Tmp_1830: int, in_Tmp_1831: int, in_status_54: int, in_Tmp_1832: int, in_Tmp_1833: int, in_Tmp_1834: int, in_pageData: int, in_Tmp_1835: int, in_Tmp_1836: int, in_Tmp_1838: int, in_Tmp_1839: int, in_Tmp_1840: int, in_iDefrag: int, in_Tmp_1841: int, in_boogieTmp: int, in_vslice_dummy_var_391: int, in_vslice_dummy_var_394: int, in_vslice_dummy_var_395: int, in_vslice_dummy_var_396: int, in_vslice_dummy_var_397: int) returns (out_flStatusProt_1: int, out_Tmp_1727: int, out_Tmp_1728: int, out_Tmp_1729: int, out_userOutput: int, out_Tmp_1731: int, out_cdb: int, out_Tmp_1732: int, out_Tmp_1733: int, out_Tmp_1734: int, out_tmpDataBuffer: int, out_Tmp_1735: int, out_irpSp_3: int, out_Tmp_1738: int, out_Tmp_1739: int, out_Tmp_1740: int, out_Tmp_1741: int, out_Tmp_1742: int, out_Tmp_1743: int, out_Tmp_1744: int, out_Tmp_1746: int, out_sdv_873: int, out_Tmp_1747: int, out_Tmp_1748: int, out_Tmp_1750: int, out_Tmp_1751: int, out_Tmp_1752: int, out_Tmp_1753: int, out_Tmp_1754: int, out_Tmp_1756: int, out_Tmp_1757: int, out_Tmp_1759: int, out_Tmp_1761: int, out_Tmp_1762: int, out_Tmp_1763: int, out_Tmp_1764: int, out_Tmp_1765: int, out_Tmp_1766: int, out_Tmp_1767: int, out_sdv_877: int, out_Tmp_1768: int, out_tffsStatus: int, out_irp_2: int, out_Tmp_1769: int, out_Tmp_1770: int, out_Tmp_1771: int, out_Tmp_1773: int, out_Tmp_1774: int, out_Tmp_1775: int, out_Tmp_1776: int, out_Tmp_1777: int, out_Tmp_1779: int, out_Tmp_1781: int, out_Tmp_1782: int, out_Tmp_1783: int, out_Tmp_1784: int, out_Tmp_1785: int, out_Tmp_1786: int, out_Tmp_1787: int, out_dataOffset: int, out_request: int, out_Tmp_1788: int, out_Tmp_1789: int, out_transferForbidden: int, out_Tmp_1790: int, out_Tmp_1791: int, out_Tmp_1792: int, out_Tmp_1795: int, out_Tmp_1796: int, out_Tmp_1797: int, out_Tmp_1798: int, out_Tmp_1799: int, out_Tmp_1800: int, out_Tmp_1801: int, out_Tmp_1802: int, out_Tmp_1803: int, out_Tmp_1804: int, out_Tmp_1805: int, out_Tmp_1806: int, out_Tmp_1807: int, out_Tmp_1808: int, out_tffsPriority: int, out_inquiryData: int, out_userInput: int, out_Tmp_1810: int, out_Tmp_1811: int, out_Tmp_1812: int, out_Srb: int, out_Tmp_1813: int, out_Tmp_1814: int, out_Tmp_1815: int, out_Tmp_1816: int, out_Tmp_1817: int, out_Tmp_1818: int, out_Tmp_1819: int, out_startingSector: int, out_Tmp_1821: int, out_Tmp_1823: int, out_Tmp_1824: int, out_Tmp_1825: int, out_storedSrbDataBuffer: int, out_Tmp_1827: int, out_Tmp_1829: int, out_Tmp_1830: int, out_Tmp_1831: int, out_status_54: int, out_Tmp_1832: int, out_Tmp_1833: int, out_Tmp_1834: int, out_pageData: int, out_Tmp_1835: int, out_Tmp_1836: int, out_Tmp_1838: int, out_Tmp_1839: int, out_Tmp_1840: int, out_Tmp_1841: int, out_boogieTmp: int, out_vslice_dummy_var_391: int, out_vslice_dummy_var_394: int, out_vslice_dummy_var_395: int, out_vslice_dummy_var_396: int, out_vslice_dummy_var_397: int)
{
  var vslice_dummy_var_1514: int;
  var vslice_dummy_var_1515: int;
  var vslice_dummy_var_1516: int;

  entry:
    out_flStatusProt_1, out_Tmp_1727, out_Tmp_1728, out_Tmp_1729, out_userOutput, out_Tmp_1731, out_cdb, out_Tmp_1732, out_Tmp_1733, out_Tmp_1734, out_tmpDataBuffer, out_Tmp_1735, out_irpSp_3, out_Tmp_1738, out_Tmp_1739, out_Tmp_1740, out_Tmp_1741, out_Tmp_1742, out_Tmp_1743, out_Tmp_1744, out_Tmp_1746, out_sdv_873, out_Tmp_1747, out_Tmp_1748, out_Tmp_1750, out_Tmp_1751, out_Tmp_1752, out_Tmp_1753, out_Tmp_1754, out_Tmp_1756, out_Tmp_1757, out_Tmp_1759, out_Tmp_1761, out_Tmp_1762, out_Tmp_1763, out_Tmp_1764, out_Tmp_1765, out_Tmp_1766, out_Tmp_1767, out_sdv_877, out_Tmp_1768, out_tffsStatus, out_irp_2, out_Tmp_1769, out_Tmp_1770, out_Tmp_1771, out_Tmp_1773, out_Tmp_1774, out_Tmp_1775, out_Tmp_1776, out_Tmp_1777, out_Tmp_1779, out_Tmp_1781, out_Tmp_1782, out_Tmp_1783, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, out_Tmp_1787, out_dataOffset, out_request, out_Tmp_1788, out_Tmp_1789, out_transferForbidden, out_Tmp_1790, out_Tmp_1791, out_Tmp_1792, out_Tmp_1795, out_Tmp_1796, out_Tmp_1797, out_Tmp_1798, out_Tmp_1799, out_Tmp_1800, out_Tmp_1801, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1806, out_Tmp_1807, out_Tmp_1808, out_tffsPriority, out_inquiryData, out_userInput, out_Tmp_1810, out_Tmp_1811, out_Tmp_1812, out_Srb, out_Tmp_1813, out_Tmp_1814, out_Tmp_1815, out_Tmp_1816, out_Tmp_1817, out_Tmp_1818, out_Tmp_1819, out_startingSector, out_Tmp_1821, out_Tmp_1823, out_Tmp_1824, out_Tmp_1825, out_storedSrbDataBuffer, out_Tmp_1827, out_Tmp_1829, out_Tmp_1830, out_Tmp_1831, out_status_54, out_Tmp_1832, out_Tmp_1833, out_Tmp_1834, out_pageData, out_Tmp_1835, out_Tmp_1836, out_Tmp_1838, out_Tmp_1839, out_Tmp_1840, out_Tmp_1841, out_boogieTmp, out_vslice_dummy_var_391, out_vslice_dummy_var_394, out_vslice_dummy_var_395, out_vslice_dummy_var_396, out_vslice_dummy_var_397 := in_flStatusProt_1, in_Tmp_1727, in_Tmp_1728, in_Tmp_1729, in_userOutput, in_Tmp_1731, in_cdb, in_Tmp_1732, in_Tmp_1733, in_Tmp_1734, in_tmpDataBuffer, in_Tmp_1735, in_irpSp_3, in_Tmp_1738, in_Tmp_1739, in_Tmp_1740, in_Tmp_1741, in_Tmp_1742, in_Tmp_1743, in_Tmp_1744, in_Tmp_1746, in_sdv_873, in_Tmp_1747, in_Tmp_1748, in_Tmp_1750, in_Tmp_1751, in_Tmp_1752, in_Tmp_1753, in_Tmp_1754, in_Tmp_1756, in_Tmp_1757, in_Tmp_1759, in_Tmp_1761, in_Tmp_1762, in_Tmp_1763, in_Tmp_1764, in_Tmp_1765, in_Tmp_1766, in_Tmp_1767, in_sdv_877, in_Tmp_1768, in_tffsStatus, in_irp_2, in_Tmp_1769, in_Tmp_1770, in_Tmp_1771, in_Tmp_1773, in_Tmp_1774, in_Tmp_1775, in_Tmp_1776, in_Tmp_1777, in_Tmp_1779, in_Tmp_1781, in_Tmp_1782, in_Tmp_1783, in_Tmp_1784, in_Tmp_1785, in_Tmp_1786, in_Tmp_1787, in_dataOffset, in_request, in_Tmp_1788, in_Tmp_1789, in_transferForbidden, in_Tmp_1790, in_Tmp_1791, in_Tmp_1792, in_Tmp_1795, in_Tmp_1796, in_Tmp_1797, in_Tmp_1798, in_Tmp_1799, in_Tmp_1800, in_Tmp_1801, in_Tmp_1802, in_Tmp_1803, in_Tmp_1804, in_Tmp_1805, in_Tmp_1806, in_Tmp_1807, in_Tmp_1808, in_tffsPriority, in_inquiryData, in_userInput, in_Tmp_1810, in_Tmp_1811, in_Tmp_1812, in_Srb, in_Tmp_1813, in_Tmp_1814, in_Tmp_1815, in_Tmp_1816, in_Tmp_1817, in_Tmp_1818, in_Tmp_1819, in_startingSector, in_Tmp_1821, in_Tmp_1823, in_Tmp_1824, in_Tmp_1825, in_storedSrbDataBuffer, in_Tmp_1827, in_Tmp_1829, in_Tmp_1830, in_Tmp_1831, in_status_54, in_Tmp_1832, in_Tmp_1833, in_Tmp_1834, in_pageData, in_Tmp_1835, in_Tmp_1836, in_Tmp_1838, in_Tmp_1839, in_Tmp_1840, in_Tmp_1841, in_boogieTmp, in_vslice_dummy_var_391, in_vslice_dummy_var_394, in_vslice_dummy_var_395, in_vslice_dummy_var_396, in_vslice_dummy_var_397;
    goto L61, exit;

  exit:
    return;

  L61:
    call {:si_unique_call 2526} out_request := sdv_ExInterlockedRemoveHeadList(0, 0);
    goto anon337_Else;

  anon337_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    call {:si_unique_call 2530} KeClearEvent(PendingIRPEvent__DEVICE_EXTENSION(in_deviceExtension_15));
    call {:si_unique_call 2531} out_sdv_877 := sdv_containing_record(out_request, 88);
    out_irp_2 := out_sdv_877;
    call {:si_unique_call 2532} out_irpSp_3 := sdv_IoGetCurrentIrpStackLocation(out_irp_2);
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    havoc out_Srb;
    out_transferForbidden := 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto anon457_Then, anon457_Else;

  anon457_Else:
    out_tmpDataBuffer := 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon458_Then, anon458_Else;

  anon458_Else:
    goto L86;

  L86:
    out_Tmp_1751 := 32;
    goto L87;

  L87:
    out_tffsPriority := out_Tmp_1751;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_storedSrbDataBuffer;
    call {:si_unique_call 2533} out_sdv_873 := sdv_MmGetSystemAddressForMdlSafe(0, out_tffsPriority);
    out_dataOffset := out_sdv_873;
    goto anon459_Then, anon459_Else;

  anon459_Else:
    assume {:partition} out_dataOffset != 0;
    call {:si_unique_call 2529} out_vslice_dummy_var_391 := sdv_MmGetMdlVirtualAddress(0);
    out_tmpDataBuffer := out_dataOffset;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto L80;

  L80:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon446_Then, anon446_Else;

  anon446_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon445_Then, anon445_Else;

  anon445_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    goto L123;

  L123:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L125;

  L125:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2527} sdv_IoCompleteRequest(0, 1);
    goto anon487_Else;

  anon487_Else:
    assume {:partition} yogi_error != 1;
    goto anon487_Else_dummy;

  anon487_Else_dummy:
    goto L_BAF_2;

  L_BAF_2:
    call {:si_unique_call 2591} {:si_old_unique_call 1} out_flStatusProt_1, out_Tmp_1727, out_Tmp_1728, out_Tmp_1729, out_userOutput, out_Tmp_1731, out_cdb, out_Tmp_1732, out_Tmp_1733, out_Tmp_1734, out_tmpDataBuffer, out_Tmp_1735, out_irpSp_3, out_Tmp_1738, out_Tmp_1739, out_Tmp_1740, out_Tmp_1741, out_Tmp_1742, out_Tmp_1743, out_Tmp_1744, out_Tmp_1746, out_sdv_873, out_Tmp_1747, out_Tmp_1748, out_Tmp_1750, out_Tmp_1751, out_Tmp_1752, out_Tmp_1753, out_Tmp_1754, out_Tmp_1756, out_Tmp_1757, out_Tmp_1759, out_Tmp_1761, out_Tmp_1762, out_Tmp_1763, out_Tmp_1764, out_Tmp_1765, out_Tmp_1766, out_Tmp_1767, out_sdv_877, out_Tmp_1768, out_tffsStatus, out_irp_2, out_Tmp_1769, out_Tmp_1770, out_Tmp_1771, out_Tmp_1773, out_Tmp_1774, out_Tmp_1775, out_Tmp_1776, out_Tmp_1777, out_Tmp_1779, out_Tmp_1781, out_Tmp_1782, out_Tmp_1783, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, out_Tmp_1787, out_dataOffset, out_request, out_Tmp_1788, out_Tmp_1789, out_transferForbidden, out_Tmp_1790, out_Tmp_1791, out_Tmp_1792, out_Tmp_1795, out_Tmp_1796, out_Tmp_1797, out_Tmp_1798, out_Tmp_1799, out_Tmp_1800, out_Tmp_1801, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1806, out_Tmp_1807, out_Tmp_1808, out_tffsPriority, out_inquiryData, out_userInput, out_Tmp_1810, out_Tmp_1811, out_Tmp_1812, out_Srb, out_Tmp_1813, out_Tmp_1814, out_Tmp_1815, out_Tmp_1816, out_Tmp_1817, out_Tmp_1818, out_Tmp_1819, out_startingSector, out_Tmp_1821, out_Tmp_1823, out_Tmp_1824, out_Tmp_1825, out_storedSrbDataBuffer, out_Tmp_1827, out_Tmp_1829, out_Tmp_1830, out_Tmp_1831, out_status_54, out_Tmp_1832, out_Tmp_1833, out_Tmp_1834, out_pageData, out_Tmp_1835, out_Tmp_1836, out_Tmp_1838, out_Tmp_1839, out_Tmp_1840, out_Tmp_1841, out_boogieTmp, out_vslice_dummy_var_391, out_vslice_dummy_var_394, out_vslice_dummy_var_395, out_vslice_dummy_var_396, out_vslice_dummy_var_397 := TrueffsThread_loop_L61(in_ioreq_24, out_flStatusProt_1, out_Tmp_1727, out_Tmp_1728, out_Tmp_1729, out_userOutput, out_Tmp_1731, out_cdb, out_Tmp_1732, out_Tmp_1733, out_Tmp_1734, out_tmpDataBuffer, out_Tmp_1735, out_irpSp_3, in_iplInput, out_Tmp_1738, out_Tmp_1739, out_Tmp_1740, out_Tmp_1741, out_Tmp_1742, out_Tmp_1743, out_Tmp_1744, out_Tmp_1746, in_ioreqProt_1, out_sdv_873, out_Tmp_1747, out_Tmp_1748, out_Tmp_1750, out_Tmp_1751, in_placeExbInput, out_Tmp_1752, out_Tmp_1753, out_Tmp_1754, out_Tmp_1756, out_Tmp_1757, in_flFp, out_Tmp_1759, out_Tmp_1761, out_Tmp_1762, out_Tmp_1763, out_Tmp_1764, out_Tmp_1765, out_Tmp_1766, out_Tmp_1767, out_sdv_877, out_Tmp_1768, out_tffsStatus, out_irp_2, out_Tmp_1769, out_Tmp_1770, out_Tmp_1771, in_protectionInput, out_Tmp_1773, out_Tmp_1774, out_Tmp_1775, out_Tmp_1776, out_Tmp_1777, out_Tmp_1779, in_revisionString, out_Tmp_1781, out_Tmp_1782, out_Tmp_1783, in_deviceExtension_15, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, out_Tmp_1787, out_dataOffset, out_request, out_Tmp_1788, out_Tmp_1789, out_transferForbidden, out_Tmp_1790, out_Tmp_1791, out_Tmp_1792, in_i_19, out_Tmp_1795, out_Tmp_1796, out_Tmp_1797, out_Tmp_1798, out_Tmp_1799, out_Tmp_1800, out_Tmp_1801, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1806, out_Tmp_1807, out_Tmp_1808, in_bdkOperationInput, in_otpInput, in_productString, out_tffsPriority, out_inquiryData, out_userInput, out_Tmp_1810, out_Tmp_1811, out_Tmp_1812, out_Srb, out_Tmp_1813, out_Tmp_1814, out_Tmp_1815, out_Tmp_1816, out_Tmp_1817, out_Tmp_1818, out_Tmp_1819, out_startingSector, out_Tmp_1821, out_Tmp_1823, out_Tmp_1824, out_Tmp_1825, out_storedSrbDataBuffer, in_vendorString, out_Tmp_1827, in_flIoctlRec, out_Tmp_1829, out_Tmp_1830, out_Tmp_1831, out_status_54, out_Tmp_1832, out_Tmp_1833, out_Tmp_1834, out_pageData, out_Tmp_1835, out_Tmp_1836, out_Tmp_1838, out_Tmp_1839, out_Tmp_1840, in_iDefrag, out_Tmp_1841, out_boogieTmp, out_vslice_dummy_var_391, out_vslice_dummy_var_394, out_vslice_dummy_var_395, out_vslice_dummy_var_396, out_vslice_dummy_var_397);
    return;

  anon359_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2528} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L125;

  anon361_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L125;

  anon360_Then:
    goto L123;

  anon428_Then:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon448_Then, anon448_Else;

  anon448_Else:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon447_Then, anon447_Else;

  anon447_Else:
    goto L652;

  L652:
    out_status_54 := 1;
    goto L654;

  L654:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon490_Then, anon490_Else;

  anon490_Else:
    assume {:partition} out_status_54 == 1;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L659;

  L659:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto L660;

  L660:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2534} out_boogieTmp := TrueffsTranslateSRBStatus(out_status_54);
    call {:si_unique_call 2535} sdv_IoCompleteRequest(0, 1);
    goto anon491_Else;

  anon491_Else:
    assume {:partition} yogi_error != 1;
    goto anon491_Else_dummy;

  anon491_Else_dummy:
    goto L_BAF_2;

  anon402_Then:
    goto L660;

  anon490_Then:
    assume {:partition} out_status_54 != 1;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L659;

  anon447_Then:
    out_status_54 := 6;
    goto L654;

  anon448_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    out_status_54 := 3;
    goto L654;

  anon401_Then:
    goto L652;

  anon340_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon400_Then;

  anon400_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_Tmp_1802;
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon489_Then, anon489_Else;

  anon489_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon456_Then, anon456_Else;

  anon456_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon455_Then, anon455_Else;

  anon455_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon454_Then, anon454_Else;

  anon454_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon453_Then, anon453_Else;

  anon453_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon452_Then, anon452_Else;

  anon452_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon451_Then, anon451_Else;

  anon451_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon450_Then, anon450_Else;

  anon450_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon449_Then, anon449_Else;

  anon449_Else:
    out_status_54 := 1;
    goto L654;

  anon449_Then:
    out_status_54 := 6;
    goto L654;

  anon450_Then:
    goto L688;

  L688:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    call {:si_unique_call 2542} out_startingSector := corral_nondet();
    goto anon495_Then, anon495_Else;

  anon495_Else:
    assume {:partition} out_transferForbidden != 0;
    out_status_54 := 4;
    goto L654;

  anon495_Then:
    assume {:partition} out_transferForbidden == 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    call {:si_unique_call 2541} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon496_Then, anon496_Else;

  anon496_Else:
    out_tffsStatus := 27;
    goto L654;

  anon496_Then:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    havoc vslice_dummy_var_1516;
    call {:si_unique_call 2547} out_vslice_dummy_var_395 := flmemcpy(vslice_dummy_var_1516, PartitonTable__DEVICE_EXTENSION(in_deviceExtension_15), 512);
    out_tffsStatus := 0;
    goto anon497_Then, anon497_Else;

  anon497_Else:
    assume {:partition} out_tffsStatus == 0;
    out_Tmp_1767 := 1;
    goto L718;

  L718:
    out_status_54 := out_Tmp_1767;
    goto L654;

  anon497_Then:
    assume {:partition} out_tffsStatus != 0;
    out_Tmp_1767 := 4;
    goto L718;

  anon410_Then:
    goto L706;

  L706:
    call {:si_unique_call 2546} out_tffsStatus := bdCall(818, in_ioreq_24);
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    call {:si_unique_call 2545} sdv_KeFlushIoBuffers(0, 1, 0);
    goto L721;

  L721:
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:partition} out_tffsStatus == 0;
    out_Tmp_1734 := 1;
    goto L727;

  L727:
    out_status_54 := out_Tmp_1734;
    goto L654;

  anon412_Then:
    assume {:partition} out_tffsStatus != 0;
    out_Tmp_1734 := 4;
    goto L727;

  anon411_Then:
    goto L721;

  anon409_Then:
    goto L706;

  anon408_Then:
    goto L706;

  anon406_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    goto L729;

  L729:
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    goto L731;

  L731:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    goto L733;

  L733:
    out_tffsStatus := -1073741662;
    out_status_54 := out_tffsStatus;
    goto L654;

  anon416_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    call {:si_unique_call 2543} out_tffsStatus := bdCall(816, in_ioreq_24);
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:partition} out_tffsStatus == 19;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    goto anon498_Then, anon498_Else;

  anon498_Else:
    goto L744;

  L744:
    out_tffsStatus := -1073741662;
    out_status_54 := out_tffsStatus;
    goto L654;

  anon498_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    havoc vslice_dummy_var_1515;
    call {:si_unique_call 2544} out_vslice_dummy_var_396 := flmemcpy(PartitonTable__DEVICE_EXTENSION(in_deviceExtension_15), vslice_dummy_var_1515, 512);
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L744;

  anon420_Then:
    goto L744;

  anon418_Then:
    assume {:partition} out_tffsStatus != 19;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} out_tffsStatus != 0;
    out_status_54 := 4;
    goto L654;

  anon419_Then:
    assume {:partition} out_tffsStatus == 0;
    out_status_54 := 1;
    goto L654;

  anon417_Then:
    goto L733;

  anon414_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    havoc vslice_dummy_var_1514;
    call {:si_unique_call 2536} out_vslice_dummy_var_397 := flmemcpy(PartitonTable__DEVICE_EXTENSION(in_deviceExtension_15), vslice_dummy_var_1514, 512);
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_tffsStatus := -1073741662;
    out_status_54 := out_tffsStatus;
    goto L654;

  anon415_Then:
    goto L731;

  anon407_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    goto L731;

  anon413_Then:
    goto L729;

  anon451_Then:
    goto L688;

  anon452_Then:
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:partition} out_transferForbidden != 0;
    out_status_54 := 4;
    goto L654;

  anon405_Then:
    assume {:partition} out_transferForbidden == 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_Tmp_1744;
    assume {:nonnull} out_Tmp_1744 != 0;
    assume out_Tmp_1744 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_Tmp_1796 := in_i_19;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_Tmp_1782 := in_i_19;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_Tmp_1817 := in_i_19;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_Tmp_1752 := in_i_19;
    out_status_54 := 1;
    goto L654;

  anon453_Then:
    out_status_54 := 1;
    goto L654;

  anon454_Then:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_cdb := Cdb__SCSI_REQUEST_BLOCK(out_Srb);
    assume {:nonnull} out_cdb != 0;
    assume out_cdb > 0;
    goto anon494_Then, anon494_Else;

  anon494_Else:
    goto L771;

  L771:
    out_status_54 := 6;
    goto L654;

  anon494_Then:
    assume {:nonnull} out_cdb != 0;
    assume out_cdb > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:partition} out_transferForbidden != 0;
    out_status_54 := 4;
    goto L654;

  anon422_Then:
    assume {:partition} out_transferForbidden == 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_pageData;
    out_Tmp_1769 := out_pageData;
    assume {:nonnull} out_Tmp_1769 != 0;
    assume out_Tmp_1769 > 0;
    out_Tmp_1747 := out_pageData;
    assume {:nonnull} out_Tmp_1747 != 0;
    assume out_Tmp_1747 > 0;
    assume {:nonnull} out_Tmp_1747 != 0;
    assume out_Tmp_1747 > 0;
    out_Tmp_1795 := out_pageData;
    assume {:nonnull} out_Tmp_1795 != 0;
    assume out_Tmp_1795 > 0;
    out_Tmp_1784 := out_pageData;
    assume {:nonnull} out_Tmp_1784 != 0;
    assume out_Tmp_1784 > 0;
    out_Tmp_1746 := out_pageData;
    assume {:nonnull} out_Tmp_1746 != 0;
    assume out_Tmp_1746 > 0;
    out_Tmp_1792 := out_pageData;
    assume {:nonnull} out_Tmp_1792 != 0;
    assume out_Tmp_1792 > 0;
    out_Tmp_1764 := out_pageData;
    assume {:nonnull} out_Tmp_1764 != 0;
    assume out_Tmp_1764 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_Tmp_1836 := SectorsPerTrack__DEVICE_EXTENSION(in_deviceExtension_15);
    out_Tmp_1810 := out_pageData;
    assume {:nonnull} out_Tmp_1810 != 0;
    assume out_Tmp_1810 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_Tmp_1798 := SectorsPerTrack__DEVICE_EXTENSION(in_deviceExtension_15);
    out_Tmp_1823 := out_pageData;
    assume {:nonnull} out_Tmp_1823 != 0;
    assume out_Tmp_1823 > 0;
    out_Tmp_1761 := out_pageData;
    assume {:nonnull} out_Tmp_1761 != 0;
    assume out_Tmp_1761 > 0;
    out_Tmp_1779 := out_pageData;
    assume {:nonnull} out_Tmp_1779 != 0;
    assume out_Tmp_1779 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_Tmp_1729 := Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_Tmp_1766 := Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_Tmp_1833 := Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_status_54 := 1;
    goto L654;

  anon421_Then:
    goto L771;

  anon455_Then:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    goto L799;

  L799:
    out_status_54 := 10;
    goto L654;

  anon404_Then:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_inquiryData;
    goto anon492_Then, anon492_Else;

  anon492_Else:
    assume {:partition} out_transferForbidden != 0;
    out_status_54 := 4;
    goto L654;

  anon492_Then:
    assume {:partition} out_transferForbidden == 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto L807;

  L807:
    call {:si_unique_call 2540} out_Tmp_1757, out_Tmp_1774 := TrueffsThread_loop_L807(out_Tmp_1757, out_Tmp_1774, in_i_19, out_Srb);
    goto L807_last;

  L807_last:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1774;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_Tmp_1757;
    assume {:nonnull} out_Tmp_1757 != 0;
    assume out_Tmp_1757 > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume false;
    return;

  anon424_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} out_inquiryData != 0;
    assume out_inquiryData > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon493_Then, anon493_Else;

  anon493_Else:
    assume {:nonnull} out_inquiryData != 0;
    assume out_inquiryData > 0;
    goto L812;

  L812:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto L814;

  L814:
    call {:si_unique_call 2539} out_Tmp_1740, out_Tmp_1804, out_Tmp_1807 := TrueffsThread_loop_L814(out_Tmp_1740, in_i_19, out_Tmp_1804, out_Tmp_1807, out_inquiryData, in_vendorString);
    goto L814_last;

  L814_last:
    assume {:CounterLoop 8} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1807;
    assume {:nonnull} out_inquiryData != 0;
    assume out_inquiryData > 0;
    havoc out_Tmp_1740;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1804;
    assume {:nonnull} out_Tmp_1740 != 0;
    assume out_Tmp_1740 > 0;
    assume {:nonnull} in_vendorString != 0;
    assume in_vendorString > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume false;
    return;

  anon425_Then:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto L818;

  L818:
    call {:si_unique_call 2538} out_Tmp_1762, out_Tmp_1771, out_Tmp_1841 := TrueffsThread_loop_L818(out_Tmp_1762, out_Tmp_1771, in_i_19, in_productString, out_inquiryData, out_Tmp_1841);
    goto L818_last;

  L818_last:
    assume {:CounterLoop 16} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1841;
    assume {:nonnull} out_inquiryData != 0;
    assume out_inquiryData > 0;
    havoc out_Tmp_1771;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1762;
    assume {:nonnull} out_Tmp_1771 != 0;
    assume out_Tmp_1771 > 0;
    assume {:nonnull} in_productString != 0;
    assume in_productString > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume false;
    return;

  anon426_Then:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto L822;

  L822:
    call {:si_unique_call 2537} out_Tmp_1743, out_Tmp_1753, out_Tmp_1834 := TrueffsThread_loop_L822(out_Tmp_1743, out_Tmp_1753, in_revisionString, in_i_19, out_inquiryData, out_Tmp_1834);
    goto L822_last;

  L822_last:
    assume {:CounterLoop 4} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1834;
    assume {:nonnull} out_inquiryData != 0;
    assume out_inquiryData > 0;
    havoc out_Tmp_1753;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1743;
    assume {:nonnull} out_Tmp_1753 != 0;
    assume out_Tmp_1753 > 0;
    assume {:nonnull} in_revisionString != 0;
    assume in_revisionString > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume false;
    return;

  anon427_Then:
    out_status_54 := 1;
    goto L654;

  anon493_Then:
    goto L812;

  anon423_Then:
    goto L799;

  anon456_Then:
    goto L654;

  anon489_Then:
    out_status_54 := 1;
    goto L654;

  anon429_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    goto L145;

  L145:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L147;

  L147:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2548} sdv_IoCompleteRequest(0, 1);
    goto anon486_Else;

  anon486_Else:
    assume {:partition} yogi_error != 1;
    goto anon486_Else_dummy;

  anon486_Else_dummy:
    goto L_BAF_2;

  anon358_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2549} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L147;

  anon363_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L147;

  anon362_Then:
    goto L145;

  anon430_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L169;

  L169:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2550} sdv_IoCompleteRequest(0, 1);
    goto anon485_Else;

  anon485_Else:
    assume {:partition} yogi_error != 1;
    goto anon485_Else_dummy;

  anon485_Else_dummy:
    goto L_BAF_2;

  anon357_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L169;

  anon364_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2551} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L169;

  anon365_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L169;

  anon431_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L193;

  L193:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2552} sdv_IoCompleteRequest(0, 1);
    goto anon484_Else;

  anon484_Else:
    assume {:partition} yogi_error != 1;
    goto anon484_Else_dummy;

  anon484_Else_dummy:
    goto L_BAF_2;

  anon356_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L193;

  anon366_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1773;
    assume {:nonnull} out_Tmp_1773 != 0;
    assume out_Tmp_1773 > 0;
    assume {:nonnull} in_iplInput != 0;
    assume in_iplInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1824;
    assume {:nonnull} out_Tmp_1824 != 0;
    assume out_Tmp_1824 > 0;
    assume {:nonnull} in_iplInput != 0;
    assume in_iplInput > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2553} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L193;

  anon367_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L193;

  anon432_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L217;

  L217:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L219;

  L219:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2554} sdv_IoCompleteRequest(0, 1);
    goto anon483_Else;

  anon483_Else:
    assume {:partition} yogi_error != 1;
    goto anon483_Else_dummy;

  anon483_Else_dummy:
    goto L_BAF_2;

  anon355_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1838;
    assume {:nonnull} out_Tmp_1838 != 0;
    assume out_Tmp_1838 > 0;
    assume {:nonnull} in_placeExbInput != 0;
    assume in_placeExbInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1731;
    assume {:nonnull} out_Tmp_1731 != 0;
    assume out_Tmp_1731 > 0;
    assume {:nonnull} in_placeExbInput != 0;
    assume in_placeExbInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1831;
    assume {:nonnull} out_Tmp_1831 != 0;
    assume out_Tmp_1831 > 0;
    assume {:nonnull} in_placeExbInput != 0;
    assume in_placeExbInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1797;
    assume {:nonnull} out_Tmp_1797 != 0;
    assume out_Tmp_1797 > 0;
    assume {:nonnull} in_placeExbInput != 0;
    assume in_placeExbInput > 0;
    call {:si_unique_call 2555} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L219;

  anon369_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L219;

  anon368_Then:
    goto L217;

  anon433_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L244;

  L244:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L246;

  L246:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2556} sdv_IoCompleteRequest(0, 1);
    goto anon482_Else;

  anon482_Else:
    assume {:partition} yogi_error != 1;
    goto anon482_Else_dummy;

  anon482_Else_dummy:
    goto L_BAF_2;

  anon354_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2557} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L246;

  anon371_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L246;

  anon370_Then:
    goto L244;

  anon434_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L268;

  L268:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2558} sdv_IoCompleteRequest(0, 1);
    goto anon481_Else;

  anon481_Else:
    assume {:partition} yogi_error != 1;
    goto anon481_Else_dummy;

  anon481_Else_dummy:
    goto L_BAF_2;

  anon353_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2559} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L268;

  anon372_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L268;

  anon435_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L288;

  L288:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2560} sdv_IoCompleteRequest(0, 1);
    goto anon480_Else;

  anon480_Else:
    assume {:partition} yogi_error != 1;
    goto anon480_Else_dummy;

  anon480_Else_dummy:
    goto L_BAF_2;

  anon352_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2561} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L288;

  anon373_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L288;

  anon436_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L308;

  L308:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2562} sdv_IoCompleteRequest(0, 1);
    goto anon479_Else;

  anon479_Else:
    assume {:partition} yogi_error != 1;
    goto anon479_Else_dummy;

  anon479_Else_dummy:
    goto L_BAF_2;

  anon351_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2563} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L308;

  anon374_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L308;

  anon437_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    goto L326;

  L326:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L328;

  L328:
    out_userInput := 0;
    out_userOutput := 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2564} sdv_IoCompleteRequest(0, 1);
    goto anon475_Else;

  anon475_Else:
    assume {:partition} yogi_error != 1;
    goto anon475_Else_dummy;

  anon475_Else_dummy:
    goto L_BAF_2;

  anon350_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_userInput;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_userOutput;
    out_Tmp_1788 := out_userInput;
    assume {:nonnull} out_Tmp_1788 != 0;
    assume out_Tmp_1788 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto anon476_Then, anon476_Else;

  anon476_Else:
    out_Tmp_1803 := out_userInput;
    assume {:nonnull} out_Tmp_1803 != 0;
    assume out_Tmp_1803 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto anon477_Then, anon477_Else;

  anon477_Else:
    out_Tmp_1742 := out_userInput;
    assume {:nonnull} out_Tmp_1742 != 0;
    assume out_Tmp_1742 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto L339;

  L339:
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    out_Tmp_1735 := out_userInput;
    assume {:nonnull} out_Tmp_1735 != 0;
    assume out_Tmp_1735 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto L345;

  L345:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    out_Tmp_1781 := out_userOutput;
    assume {:nonnull} out_Tmp_1781 != 0;
    assume out_Tmp_1781 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    call {:si_unique_call 2565} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L328;

  anon377_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto anon478_Then, anon478_Else;

  anon478_Else:
    out_Tmp_1805 := out_userOutput;
    assume {:nonnull} out_Tmp_1805 != 0;
    assume out_Tmp_1805 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    out_Tmp_1816 := out_userOutput;
    assume {:nonnull} out_Tmp_1816 != 0;
    assume out_Tmp_1816 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    out_Tmp_1787 := out_userOutput;
    assume {:nonnull} out_Tmp_1787 != 0;
    assume out_Tmp_1787 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    out_Tmp_1775 := out_userOutput;
    assume {:nonnull} out_Tmp_1775 != 0;
    assume out_Tmp_1775 > 0;
    goto L328;

  anon478_Then:
    goto L328;

  anon376_Then:
    out_Tmp_1799 := out_userOutput;
    assume {:nonnull} out_Tmp_1799 != 0;
    assume out_Tmp_1799 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto L345;

  anon477_Then:
    goto L339;

  anon476_Then:
    goto L339;

  anon375_Then:
    goto L326;

  anon438_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    goto L365;

  L365:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L367;

  L367:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2566} sdv_IoCompleteRequest(0, 1);
    goto anon474_Else;

  anon474_Else:
    assume {:partition} yogi_error != 1;
    goto anon474_Else_dummy;

  anon474_Else_dummy:
    goto L_BAF_2;

  anon349_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1814;
    assume {:nonnull} out_Tmp_1814 != 0;
    assume out_Tmp_1814 > 0;
    assume {:nonnull} in_protectionInput != 0;
    assume in_protectionInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1790;
    assume {:nonnull} out_Tmp_1790 != 0;
    assume out_Tmp_1790 > 0;
    assume {:nonnull} in_protectionInput != 0;
    assume in_protectionInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1777;
    assume {:nonnull} out_Tmp_1777 != 0;
    assume out_Tmp_1777 > 0;
    out_Tmp_1786 := key_flBDKProtectionInput(out_Tmp_1777);
    assume {:IndirectCall} true;
    assume {:nonnull} in_protectionInput != 0;
    assume in_protectionInput > 0;
    call {:si_unique_call 2567} out_vslice_dummy_var_394 := flmemcpy(key_flProtectionInput(in_protectionInput), out_Tmp_1786, 8);
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    call {:si_unique_call 2568} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2569} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L367;

  anon379_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L367;

  anon378_Then:
    goto L365;

  anon439_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    goto L394;

  L394:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L396;

  L396:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2570} sdv_IoCompleteRequest(0, 1);
    goto anon473_Else;

  anon473_Else:
    assume {:partition} yogi_error != 1;
    goto anon473_Else_dummy;

  anon473_Else_dummy:
    goto L_BAF_2;

  anon348_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2572} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L396;

  anon381_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    out_flStatusProt_1 := 0;
    assume {:nonnull} in_ioreqProt_1 != 0;
    assume in_ioreqProt_1 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreqProt_1 != 0;
    assume in_ioreqProt_1 > 0;
    call {:si_unique_call 2571} out_flStatusProt_1 := bdCall(801, in_ioreqProt_1);
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} out_flStatusProt_1 != 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L396;

  anon382_Then:
    assume {:partition} out_flStatusProt_1 == 0;
    assume {:nonnull} in_ioreqProt_1 != 0;
    assume in_ioreqProt_1 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} in_ioreqProt_1 != 0;
    assume in_ioreqProt_1 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L396;

  anon384_Then:
    goto L425;

  L425:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L396;

  anon383_Then:
    goto L425;

  anon380_Then:
    goto L394;

  anon440_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    goto L429;

  L429:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L431;

  L431:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2573} sdv_IoCompleteRequest(0, 1);
    goto anon471_Else;

  anon471_Else:
    assume {:partition} yogi_error != 1;
    goto anon471_Else_dummy;

  anon471_Else_dummy:
    goto L_BAF_2;

  anon347_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_userInput;
    out_Tmp_1789 := out_userInput;
    assume {:nonnull} out_Tmp_1789 != 0;
    assume out_Tmp_1789 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1819 := out_userInput;
    assume {:nonnull} out_Tmp_1819 != 0;
    assume out_Tmp_1819 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1776 := out_userInput;
    assume {:nonnull} out_Tmp_1776 != 0;
    assume out_Tmp_1776 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1754 := out_userInput;
    assume {:nonnull} out_Tmp_1754 != 0;
    assume out_Tmp_1754 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1765 := out_userInput;
    assume {:nonnull} out_Tmp_1765 != 0;
    assume out_Tmp_1765 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1783 := out_userInput;
    assume {:nonnull} out_Tmp_1783 != 0;
    assume out_Tmp_1783 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1741 := out_userInput;
    assume {:nonnull} out_Tmp_1741 != 0;
    assume out_Tmp_1741 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1812 := out_userInput;
    assume {:nonnull} out_Tmp_1812 != 0;
    assume out_Tmp_1812 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1808 := out_userInput;
    assume {:nonnull} out_Tmp_1808 != 0;
    assume out_Tmp_1808 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1759 := out_userInput;
    assume {:nonnull} out_Tmp_1759 != 0;
    assume out_Tmp_1759 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1806 := out_userInput;
    assume {:nonnull} out_Tmp_1806 != 0;
    assume out_Tmp_1806 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1815 := out_userInput;
    assume {:nonnull} out_Tmp_1815 != 0;
    assume out_Tmp_1815 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1829 := out_userInput;
    assume {:nonnull} out_Tmp_1829 != 0;
    assume out_Tmp_1829 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1801 := out_userInput;
    assume {:nonnull} out_Tmp_1801 != 0;
    assume out_Tmp_1801 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1756 := out_userInput;
    assume {:nonnull} out_Tmp_1756 != 0;
    assume out_Tmp_1756 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1748 := out_userInput;
    assume {:nonnull} out_Tmp_1748 != 0;
    assume out_Tmp_1748 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2574} out_tffsStatus := flIOctl(in_ioreq_24);
    out_userInput := 0;
    goto anon472_Then, anon472_Else;

  anon472_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L431;

  anon472_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L431;

  anon385_Then:
    goto L429;

  anon441_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon346_Then, anon346_Else;

  anon346_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L472;

  L472:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2575} sdv_IoCompleteRequest(0, 1);
    goto anon470_Else;

  anon470_Else:
    assume {:partition} yogi_error != 1;
    goto anon470_Else_dummy;

  anon470_Else_dummy:
    goto L_BAF_2;

  anon346_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2576} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L472;

  anon386_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L472;

  anon442_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    goto L491;

  L491:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L493;

  L493:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2577} sdv_IoCompleteRequest(0, 1);
    goto anon468_Else;

  anon468_Else:
    assume {:partition} yogi_error != 1;
    goto anon468_Else_dummy;

  anon468_Else_dummy:
    goto L_BAF_2;

  anon345_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_userInput;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_userOutput;
    out_Tmp_1830 := out_userInput;
    assume {:nonnull} out_Tmp_1830 != 0;
    assume out_Tmp_1830 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto L502;

  L502:
    call {:si_unique_call 2580} out_Tmp_1739, out_Tmp_1768, out_Tmp_1770, out_Tmp_1818, out_Tmp_1825, out_Tmp_1832, out_Tmp_1835, out_Tmp_1840 := TrueffsThread_loop_L502(out_Tmp_1739, out_Tmp_1768, out_Tmp_1770, in_i_19, in_bdkOperationInput, out_userInput, out_Tmp_1818, out_Tmp_1825, out_Tmp_1832, out_Tmp_1835, out_Tmp_1840);
    goto L502_last;

  L502_last:
    assume {:CounterLoop 4} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1770;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1739;
    out_Tmp_1818 := out_userInput;
    assume {:nonnull} out_Tmp_1818 != 0;
    assume out_Tmp_1818 > 0;
    havoc out_Tmp_1832;
    assume {:nonnull} out_Tmp_1832 != 0;
    assume out_Tmp_1832 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1825;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1835;
    out_Tmp_1768 := out_userInput;
    assume {:nonnull} out_Tmp_1768 != 0;
    assume out_Tmp_1768 > 0;
    havoc out_Tmp_1840;
    assume {:nonnull} out_Tmp_1840 != 0;
    assume out_Tmp_1840 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume false;
    return;

  anon388_Then:
    out_Tmp_1732 := out_userInput;
    assume {:nonnull} out_Tmp_1732 != 0;
    assume out_Tmp_1732 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1763 := out_userInput;
    assume {:nonnull} out_Tmp_1763 != 0;
    assume out_Tmp_1763 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1813 := out_userInput;
    assume {:nonnull} out_Tmp_1813 != 0;
    assume out_Tmp_1813 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1738 := out_userInput;
    assume {:nonnull} out_Tmp_1738 != 0;
    assume out_Tmp_1738 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    goto anon469_Then, anon469_Else;

  anon469_Else:
    out_Tmp_1750 := out_userInput;
    assume {:nonnull} out_Tmp_1750 != 0;
    assume out_Tmp_1750 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    goto L513;

  L513:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    call {:si_unique_call 2578} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    out_Tmp_1727 := out_userOutput;
    assume {:nonnull} out_Tmp_1727 != 0;
    assume out_Tmp_1727 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    call {:si_unique_call 2579} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L493;

  anon389_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    out_Tmp_1839 := out_userOutput;
    assume {:nonnull} out_Tmp_1839 != 0;
    assume out_Tmp_1839 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1733 := out_userOutput;
    assume {:nonnull} out_Tmp_1733 != 0;
    assume out_Tmp_1733 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1785 := out_userOutput;
    assume {:nonnull} out_Tmp_1785 != 0;
    assume out_Tmp_1785 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1728 := out_userOutput;
    assume {:nonnull} out_Tmp_1728 != 0;
    assume out_Tmp_1728 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    goto L527;

  L527:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L493;

  anon390_Then:
    goto L527;

  anon469_Then:
    out_Tmp_1800 := out_userOutput;
    assume {:nonnull} out_Tmp_1800 != 0;
    assume out_Tmp_1800 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    goto L513;

  anon387_Then:
    goto L491;

  anon443_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    goto L534;

  L534:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L536;

  L536:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2581} sdv_IoCompleteRequest(0, 1);
    goto anon467_Else;

  anon467_Else:
    assume {:partition} yogi_error != 1;
    goto anon467_Else_dummy;

  anon467_Else_dummy:
    goto L_BAF_2;

  anon344_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2582} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L536;

  anon392_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L536;

  anon391_Then:
    goto L534;

  anon444_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    goto L556;

  L556:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L558;

  L558:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2583} sdv_IoCompleteRequest(0, 1);
    goto anon466_Else;

  anon466_Else:
    assume {:partition} yogi_error != 1;
    goto anon466_Else_dummy;

  anon466_Else_dummy:
    goto L_BAF_2;

  anon343_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2584} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L558;

  anon394_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L558;

  anon393_Then:
    goto L556;

  anon445_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L580;

  L580:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2585} sdv_IoCompleteRequest(0, 1);
    goto anon462_Else;

  anon462_Else:
    assume {:partition} yogi_error != 1;
    goto anon462_Else_dummy;

  anon462_Else_dummy:
    goto L_BAF_2;

  anon342_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2586} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L580;

  anon395_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    havoc out_Tmp_1791;
    assume {:nonnull} out_Tmp_1791 != 0;
    assume out_Tmp_1791 > 0;
    goto anon463_Then, anon463_Else;

  anon463_Else:
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    havoc out_Tmp_1821;
    assume {:nonnull} out_Tmp_1821 != 0;
    assume out_Tmp_1821 > 0;
    goto anon464_Then, anon464_Else;

  anon464_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L580;

  anon464_Then:
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    havoc out_Tmp_1811;
    assume {:nonnull} out_Tmp_1811 != 0;
    assume out_Tmp_1811 > 0;
    goto anon465_Then, anon465_Else;

  anon465_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L580;

  anon465_Then:
    goto L580;

  anon463_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L580;

  anon446_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L608;

  L608:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2587} sdv_IoCompleteRequest(0, 1);
    goto anon461_Else;

  anon461_Else:
    assume {:partition} yogi_error != 1;
    goto anon461_Else_dummy;

  anon461_Else_dummy:
    goto L_BAF_2;

  anon396_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1827;
    assume {:nonnull} out_Tmp_1827 != 0;
    assume out_Tmp_1827 > 0;
    assume {:nonnull} in_iDefrag != 0;
    assume in_iDefrag > 0;
    goto L615;

  L615:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2588} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L608;

  anon398_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L608;

  anon397_Then:
    assume {:nonnull} in_iDefrag != 0;
    assume in_iDefrag > 0;
    goto L615;

  anon338_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L632;

  L632:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2589} sdv_IoCompleteRequest(0, 1);
    goto anon460_Else;

  anon460_Else:
    assume {:partition} yogi_error != 1;
    goto anon460_Else_dummy;

  anon460_Else_dummy:
    goto L_BAF_2;

  anon341_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2590} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L632;

  anon399_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L632;

  anon459_Then:
    assume {:partition} out_dataOffset == 0;
    out_transferForbidden := 1;
    goto L80;

  anon458_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    out_Tmp_1751 := 16;
    goto L87;

  anon339_Then:
    goto L86;

  anon457_Then:
    goto L80;
}



procedure {:LoopProcedure} TrueffsThread_loop_L61(in_ioreq_24: int, in_flStatusProt_1: int, in_Tmp_1727: int, in_Tmp_1728: int, in_Tmp_1729: int, in_userOutput: int, in_Tmp_1731: int, in_cdb: int, in_Tmp_1732: int, in_Tmp_1733: int, in_Tmp_1734: int, in_tmpDataBuffer: int, in_Tmp_1735: int, in_irpSp_3: int, in_iplInput: int, in_Tmp_1738: int, in_Tmp_1739: int, in_Tmp_1740: int, in_Tmp_1741: int, in_Tmp_1742: int, in_Tmp_1743: int, in_Tmp_1744: int, in_Tmp_1746: int, in_ioreqProt_1: int, in_sdv_873: int, in_Tmp_1747: int, in_Tmp_1748: int, in_Tmp_1750: int, in_Tmp_1751: int, in_placeExbInput: int, in_Tmp_1752: int, in_Tmp_1753: int, in_Tmp_1754: int, in_Tmp_1756: int, in_Tmp_1757: int, in_flFp: int, in_Tmp_1759: int, in_Tmp_1761: int, in_Tmp_1762: int, in_Tmp_1763: int, in_Tmp_1764: int, in_Tmp_1765: int, in_Tmp_1766: int, in_Tmp_1767: int, in_sdv_877: int, in_Tmp_1768: int, in_tffsStatus: int, in_irp_2: int, in_Tmp_1769: int, in_Tmp_1770: int, in_Tmp_1771: int, in_protectionInput: int, in_Tmp_1773: int, in_Tmp_1774: int, in_Tmp_1775: int, in_Tmp_1776: int, in_Tmp_1777: int, in_Tmp_1779: int, in_revisionString: int, in_Tmp_1781: int, in_Tmp_1782: int, in_Tmp_1783: int, in_deviceExtension_15: int, in_Tmp_1784: int, in_Tmp_1785: int, in_Tmp_1786: int, in_Tmp_1787: int, in_dataOffset: int, in_request: int, in_Tmp_1788: int, in_Tmp_1789: int, in_transferForbidden: int, in_Tmp_1790: int, in_Tmp_1791: int, in_Tmp_1792: int, in_i_19: int, in_Tmp_1795: int, in_Tmp_1796: int, in_Tmp_1797: int, in_Tmp_1798: int, in_Tmp_1799: int, in_Tmp_1800: int, in_Tmp_1801: int, in_Tmp_1802: int, in_Tmp_1803: int, in_Tmp_1804: int, in_Tmp_1805: int, in_Tmp_1806: int, in_Tmp_1807: int, in_Tmp_1808: int, in_bdkOperationInput: int, in_otpInput: int, in_productString: int, in_tffsPriority: int, in_inquiryData: int, in_userInput: int, in_Tmp_1810: int, in_Tmp_1811: int, in_Tmp_1812: int, in_Srb: int, in_Tmp_1813: int, in_Tmp_1814: int, in_Tmp_1815: int, in_Tmp_1816: int, in_Tmp_1817: int, in_Tmp_1818: int, in_Tmp_1819: int, in_startingSector: int, in_Tmp_1821: int, in_Tmp_1823: int, in_Tmp_1824: int, in_Tmp_1825: int, in_storedSrbDataBuffer: int, in_vendorString: int, in_Tmp_1827: int, in_flIoctlRec: int, in_Tmp_1829: int, in_Tmp_1830: int, in_Tmp_1831: int, in_status_54: int, in_Tmp_1832: int, in_Tmp_1833: int, in_Tmp_1834: int, in_pageData: int, in_Tmp_1835: int, in_Tmp_1836: int, in_Tmp_1838: int, in_Tmp_1839: int, in_Tmp_1840: int, in_iDefrag: int, in_Tmp_1841: int, in_boogieTmp: int, in_vslice_dummy_var_391: int, in_vslice_dummy_var_394: int, in_vslice_dummy_var_395: int, in_vslice_dummy_var_396: int, in_vslice_dummy_var_397: int) returns (out_flStatusProt_1: int, out_Tmp_1727: int, out_Tmp_1728: int, out_Tmp_1729: int, out_userOutput: int, out_Tmp_1731: int, out_cdb: int, out_Tmp_1732: int, out_Tmp_1733: int, out_Tmp_1734: int, out_tmpDataBuffer: int, out_Tmp_1735: int, out_irpSp_3: int, out_Tmp_1738: int, out_Tmp_1739: int, out_Tmp_1740: int, out_Tmp_1741: int, out_Tmp_1742: int, out_Tmp_1743: int, out_Tmp_1744: int, out_Tmp_1746: int, out_sdv_873: int, out_Tmp_1747: int, out_Tmp_1748: int, out_Tmp_1750: int, out_Tmp_1751: int, out_Tmp_1752: int, out_Tmp_1753: int, out_Tmp_1754: int, out_Tmp_1756: int, out_Tmp_1757: int, out_Tmp_1759: int, out_Tmp_1761: int, out_Tmp_1762: int, out_Tmp_1763: int, out_Tmp_1764: int, out_Tmp_1765: int, out_Tmp_1766: int, out_Tmp_1767: int, out_sdv_877: int, out_Tmp_1768: int, out_tffsStatus: int, out_irp_2: int, out_Tmp_1769: int, out_Tmp_1770: int, out_Tmp_1771: int, out_Tmp_1773: int, out_Tmp_1774: int, out_Tmp_1775: int, out_Tmp_1776: int, out_Tmp_1777: int, out_Tmp_1779: int, out_Tmp_1781: int, out_Tmp_1782: int, out_Tmp_1783: int, out_Tmp_1784: int, out_Tmp_1785: int, out_Tmp_1786: int, out_Tmp_1787: int, out_dataOffset: int, out_request: int, out_Tmp_1788: int, out_Tmp_1789: int, out_transferForbidden: int, out_Tmp_1790: int, out_Tmp_1791: int, out_Tmp_1792: int, out_Tmp_1795: int, out_Tmp_1796: int, out_Tmp_1797: int, out_Tmp_1798: int, out_Tmp_1799: int, out_Tmp_1800: int, out_Tmp_1801: int, out_Tmp_1802: int, out_Tmp_1803: int, out_Tmp_1804: int, out_Tmp_1805: int, out_Tmp_1806: int, out_Tmp_1807: int, out_Tmp_1808: int, out_tffsPriority: int, out_inquiryData: int, out_userInput: int, out_Tmp_1810: int, out_Tmp_1811: int, out_Tmp_1812: int, out_Srb: int, out_Tmp_1813: int, out_Tmp_1814: int, out_Tmp_1815: int, out_Tmp_1816: int, out_Tmp_1817: int, out_Tmp_1818: int, out_Tmp_1819: int, out_startingSector: int, out_Tmp_1821: int, out_Tmp_1823: int, out_Tmp_1824: int, out_Tmp_1825: int, out_storedSrbDataBuffer: int, out_Tmp_1827: int, out_Tmp_1829: int, out_Tmp_1830: int, out_Tmp_1831: int, out_status_54: int, out_Tmp_1832: int, out_Tmp_1833: int, out_Tmp_1834: int, out_pageData: int, out_Tmp_1835: int, out_Tmp_1836: int, out_Tmp_1838: int, out_Tmp_1839: int, out_Tmp_1840: int, out_Tmp_1841: int, out_boogieTmp: int, out_vslice_dummy_var_391: int, out_vslice_dummy_var_394: int, out_vslice_dummy_var_395: int, out_vslice_dummy_var_396: int, out_vslice_dummy_var_397: int);
  modifies alloc, initDone, yogi_error, LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_1729 == in_Tmp_1729 || out_Tmp_1729 == Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_Tmp_1734 == 1 || out_Tmp_1734 == 4 || out_Tmp_1734 == in_Tmp_1734;
  free ensures {:va_keep} out_Tmp_1751 == 16 || out_Tmp_1751 == 32 || out_Tmp_1751 == in_Tmp_1751;
  free ensures {:va_keep} out_Tmp_1752 == in_Tmp_1752 || out_Tmp_1752 == in_i_19;
  free ensures {:va_keep} out_Tmp_1766 == in_Tmp_1766 || out_Tmp_1766 == Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_Tmp_1767 == 1 || out_Tmp_1767 == 4 || out_Tmp_1767 == in_Tmp_1767;
  free ensures {:va_keep} out_Tmp_1782 == in_Tmp_1782 || out_Tmp_1782 == in_i_19;
  free ensures {:va_keep} out_transferForbidden == 0 || out_transferForbidden == 1 || out_transferForbidden == in_transferForbidden;
  free ensures {:va_keep} out_Tmp_1796 == in_Tmp_1796 || out_Tmp_1796 == in_i_19;
  free ensures {:va_keep} out_Tmp_1798 == in_Tmp_1798 || out_Tmp_1798 == SectorsPerTrack__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_tffsPriority == 16 || out_tffsPriority == 32 || out_tffsPriority == in_tffsPriority;
  free ensures {:va_keep} out_Tmp_1817 == in_Tmp_1817 || out_Tmp_1817 == in_i_19;
  free ensures {:va_keep} out_status_54 == -1073741823 || out_status_54 == 0 || out_status_54 == -1073741811 || out_status_54 == 6 || out_status_54 == 3 || out_status_54 == 1 || out_status_54 == 4 || out_status_54 == -1073741662 || out_status_54 == 10 || out_status_54 == in_status_54;
  free ensures {:va_keep} out_Tmp_1833 == in_Tmp_1833 || out_Tmp_1833 == Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_Tmp_1836 == in_Tmp_1836 || out_Tmp_1836 == SectorsPerTrack__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_vslice_dummy_var_394 == in_vslice_dummy_var_394 || out_vslice_dummy_var_394 == key_flProtectionInput(in_protectionInput);
  free ensures {:va_keep} out_vslice_dummy_var_396 == in_vslice_dummy_var_396 || out_vslice_dummy_var_396 == PartitonTable__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_vslice_dummy_var_397 == in_vslice_dummy_var_397 || out_vslice_dummy_var_397 == PartitonTable__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation TrueffsThread_loop_L47(in_ioreq_24: int, in_flStatusProt_1: int, in_Tmp_1727: int, in_Tmp_1728: int, in_Tmp_1729: int, in_userOutput: int, in_Tmp_1731: int, in_cdb: int, in_Tmp_1732: int, in_Tmp_1733: int, in_Tmp_1734: int, in_tmpDataBuffer: int, in_Tmp_1735: int, in_irpSp_3: int, in_iplInput: int, in_Tmp_1738: int, in_Tmp_1739: int, in_Tmp_1740: int, in_Tmp_1741: int, in_Tmp_1742: int, in_Tmp_1743: int, in_Tmp_1744: int, in_Tmp_1746: int, in_ioreqProt_1: int, in_sdv_873: int, in_Tmp_1747: int, in_Tmp_1748: int, in_Tmp_1750: int, in_Tmp_1751: int, in_placeExbInput: int, in_Tmp_1752: int, in_Tmp_1753: int, in_Tmp_1754: int, in_Tmp_1756: int, in_Tmp_1757: int, in_flFp: int, in_queueWait: int, in_Tmp_1759: int, in_Tmp_1761: int, in_Tmp_1762: int, in_Tmp_1763: int, in_Tmp_1764: int, in_Tmp_1765: int, in_Tmp_1766: int, in_Tmp_1767: int, in_sdv_877: int, in_Tmp_1768: int, in_tffsStatus: int, in_irp_2: int, in_waitStatus: int, in_Tmp_1769: int, in_Tmp_1770: int, in_Tmp_1771: int, in_protectionInput: int, in_Tmp_1773: int, in_Tmp_1774: int, in_Tmp_1775: int, in_Tmp_1776: int, in_Tmp_1777: int, in_Tmp_1779: int, in_revisionString: int, in_Tmp_1781: int, in_Tmp_1782: int, in_Tmp_1783: int, in_deviceExtension_15: int, in_Tmp_1784: int, in_Tmp_1785: int, in_Tmp_1786: int, in_Tmp_1787: int, in_dataOffset: int, in_request: int, in_Tmp_1788: int, in_Tmp_1789: int, in_transferForbidden: int, in_Tmp_1790: int, in_Tmp_1791: int, in_Tmp_1792: int, in_i_19: int, in_Tmp_1795: int, in_Tmp_1796: int, in_Tmp_1797: int, in_Tmp_1798: int, in_Tmp_1799: int, in_Tmp_1800: int, in_Tmp_1801: int, in_Tmp_1802: int, in_Tmp_1803: int, in_Tmp_1804: int, in_Tmp_1805: int, in_Tmp_1806: int, in_Tmp_1807: int, in_Tmp_1808: int, in_bdkOperationInput: int, in_otpInput: int, in_productString: int, in_tffsPriority: int, in_inquiryData: int, in_userInput: int, in_Tmp_1810: int, in_Tmp_1811: int, in_Tmp_1812: int, in_Srb: int, in_Tmp_1813: int, in_Tmp_1814: int, in_Tmp_1815: int, in_Tmp_1816: int, in_Tmp_1817: int, in_Tmp_1818: int, in_Tmp_1819: int, in_startingSector: int, in_Tmp_1821: int, in_Tmp_1823: int, in_Tmp_1824: int, in_Tmp_1825: int, in_storedSrbDataBuffer: int, in_vendorString: int, in_Tmp_1827: int, in_flIoctlRec: int, in_Tmp_1829: int, in_Tmp_1830: int, in_Tmp_1831: int, in_status_54: int, in_Tmp_1832: int, in_Tmp_1833: int, in_Tmp_1834: int, in_pageData: int, in_Tmp_1835: int, in_Tmp_1836: int, in_Tmp_1838: int, in_Tmp_1839: int, in_Tmp_1840: int, in_iDefrag: int, in_Tmp_1841: int, in_boogieTmp: int, in_vslice_dummy_var_390: int, in_vslice_dummy_var_391: int, in_vslice_dummy_var_394: int, in_vslice_dummy_var_395: int, in_vslice_dummy_var_396: int, in_vslice_dummy_var_397: int, in_vslice_dummy_var_398: int) returns (out_flStatusProt_1: int, out_Tmp_1727: int, out_Tmp_1728: int, out_Tmp_1729: int, out_userOutput: int, out_Tmp_1731: int, out_cdb: int, out_Tmp_1732: int, out_Tmp_1733: int, out_Tmp_1734: int, out_tmpDataBuffer: int, out_Tmp_1735: int, out_irpSp_3: int, out_Tmp_1738: int, out_Tmp_1739: int, out_Tmp_1740: int, out_Tmp_1741: int, out_Tmp_1742: int, out_Tmp_1743: int, out_Tmp_1744: int, out_Tmp_1746: int, out_sdv_873: int, out_Tmp_1747: int, out_Tmp_1748: int, out_Tmp_1750: int, out_Tmp_1751: int, out_Tmp_1752: int, out_Tmp_1753: int, out_Tmp_1754: int, out_Tmp_1756: int, out_Tmp_1757: int, out_Tmp_1759: int, out_Tmp_1761: int, out_Tmp_1762: int, out_Tmp_1763: int, out_Tmp_1764: int, out_Tmp_1765: int, out_Tmp_1766: int, out_Tmp_1767: int, out_sdv_877: int, out_Tmp_1768: int, out_tffsStatus: int, out_irp_2: int, out_waitStatus: int, out_Tmp_1769: int, out_Tmp_1770: int, out_Tmp_1771: int, out_Tmp_1773: int, out_Tmp_1774: int, out_Tmp_1775: int, out_Tmp_1776: int, out_Tmp_1777: int, out_Tmp_1779: int, out_Tmp_1781: int, out_Tmp_1782: int, out_Tmp_1783: int, out_Tmp_1784: int, out_Tmp_1785: int, out_Tmp_1786: int, out_Tmp_1787: int, out_dataOffset: int, out_request: int, out_Tmp_1788: int, out_Tmp_1789: int, out_transferForbidden: int, out_Tmp_1790: int, out_Tmp_1791: int, out_Tmp_1792: int, out_Tmp_1795: int, out_Tmp_1796: int, out_Tmp_1797: int, out_Tmp_1798: int, out_Tmp_1799: int, out_Tmp_1800: int, out_Tmp_1801: int, out_Tmp_1802: int, out_Tmp_1803: int, out_Tmp_1804: int, out_Tmp_1805: int, out_Tmp_1806: int, out_Tmp_1807: int, out_Tmp_1808: int, out_tffsPriority: int, out_inquiryData: int, out_userInput: int, out_Tmp_1810: int, out_Tmp_1811: int, out_Tmp_1812: int, out_Srb: int, out_Tmp_1813: int, out_Tmp_1814: int, out_Tmp_1815: int, out_Tmp_1816: int, out_Tmp_1817: int, out_Tmp_1818: int, out_Tmp_1819: int, out_startingSector: int, out_Tmp_1821: int, out_Tmp_1823: int, out_Tmp_1824: int, out_Tmp_1825: int, out_storedSrbDataBuffer: int, out_Tmp_1827: int, out_Tmp_1829: int, out_Tmp_1830: int, out_Tmp_1831: int, out_status_54: int, out_Tmp_1832: int, out_Tmp_1833: int, out_Tmp_1834: int, out_pageData: int, out_Tmp_1835: int, out_Tmp_1836: int, out_Tmp_1838: int, out_Tmp_1839: int, out_Tmp_1840: int, out_Tmp_1841: int, out_boogieTmp: int, out_vslice_dummy_var_390: int, out_vslice_dummy_var_391: int, out_vslice_dummy_var_394: int, out_vslice_dummy_var_395: int, out_vslice_dummy_var_396: int, out_vslice_dummy_var_397: int, out_vslice_dummy_var_398: int)
{
  var vslice_dummy_var_1517: int;
  var vslice_dummy_var_1518: int;
  var vslice_dummy_var_1519: int;

  entry:
    out_flStatusProt_1, out_Tmp_1727, out_Tmp_1728, out_Tmp_1729, out_userOutput, out_Tmp_1731, out_cdb, out_Tmp_1732, out_Tmp_1733, out_Tmp_1734, out_tmpDataBuffer, out_Tmp_1735, out_irpSp_3, out_Tmp_1738, out_Tmp_1739, out_Tmp_1740, out_Tmp_1741, out_Tmp_1742, out_Tmp_1743, out_Tmp_1744, out_Tmp_1746, out_sdv_873, out_Tmp_1747, out_Tmp_1748, out_Tmp_1750, out_Tmp_1751, out_Tmp_1752, out_Tmp_1753, out_Tmp_1754, out_Tmp_1756, out_Tmp_1757, out_Tmp_1759, out_Tmp_1761, out_Tmp_1762, out_Tmp_1763, out_Tmp_1764, out_Tmp_1765, out_Tmp_1766, out_Tmp_1767, out_sdv_877, out_Tmp_1768, out_tffsStatus, out_irp_2, out_waitStatus, out_Tmp_1769, out_Tmp_1770, out_Tmp_1771, out_Tmp_1773, out_Tmp_1774, out_Tmp_1775, out_Tmp_1776, out_Tmp_1777, out_Tmp_1779, out_Tmp_1781, out_Tmp_1782, out_Tmp_1783, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, out_Tmp_1787, out_dataOffset, out_request, out_Tmp_1788, out_Tmp_1789, out_transferForbidden, out_Tmp_1790, out_Tmp_1791, out_Tmp_1792, out_Tmp_1795, out_Tmp_1796, out_Tmp_1797, out_Tmp_1798, out_Tmp_1799, out_Tmp_1800, out_Tmp_1801, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1806, out_Tmp_1807, out_Tmp_1808, out_tffsPriority, out_inquiryData, out_userInput, out_Tmp_1810, out_Tmp_1811, out_Tmp_1812, out_Srb, out_Tmp_1813, out_Tmp_1814, out_Tmp_1815, out_Tmp_1816, out_Tmp_1817, out_Tmp_1818, out_Tmp_1819, out_startingSector, out_Tmp_1821, out_Tmp_1823, out_Tmp_1824, out_Tmp_1825, out_storedSrbDataBuffer, out_Tmp_1827, out_Tmp_1829, out_Tmp_1830, out_Tmp_1831, out_status_54, out_Tmp_1832, out_Tmp_1833, out_Tmp_1834, out_pageData, out_Tmp_1835, out_Tmp_1836, out_Tmp_1838, out_Tmp_1839, out_Tmp_1840, out_Tmp_1841, out_boogieTmp, out_vslice_dummy_var_390, out_vslice_dummy_var_391, out_vslice_dummy_var_394, out_vslice_dummy_var_395, out_vslice_dummy_var_396, out_vslice_dummy_var_397, out_vslice_dummy_var_398 := in_flStatusProt_1, in_Tmp_1727, in_Tmp_1728, in_Tmp_1729, in_userOutput, in_Tmp_1731, in_cdb, in_Tmp_1732, in_Tmp_1733, in_Tmp_1734, in_tmpDataBuffer, in_Tmp_1735, in_irpSp_3, in_Tmp_1738, in_Tmp_1739, in_Tmp_1740, in_Tmp_1741, in_Tmp_1742, in_Tmp_1743, in_Tmp_1744, in_Tmp_1746, in_sdv_873, in_Tmp_1747, in_Tmp_1748, in_Tmp_1750, in_Tmp_1751, in_Tmp_1752, in_Tmp_1753, in_Tmp_1754, in_Tmp_1756, in_Tmp_1757, in_Tmp_1759, in_Tmp_1761, in_Tmp_1762, in_Tmp_1763, in_Tmp_1764, in_Tmp_1765, in_Tmp_1766, in_Tmp_1767, in_sdv_877, in_Tmp_1768, in_tffsStatus, in_irp_2, in_waitStatus, in_Tmp_1769, in_Tmp_1770, in_Tmp_1771, in_Tmp_1773, in_Tmp_1774, in_Tmp_1775, in_Tmp_1776, in_Tmp_1777, in_Tmp_1779, in_Tmp_1781, in_Tmp_1782, in_Tmp_1783, in_Tmp_1784, in_Tmp_1785, in_Tmp_1786, in_Tmp_1787, in_dataOffset, in_request, in_Tmp_1788, in_Tmp_1789, in_transferForbidden, in_Tmp_1790, in_Tmp_1791, in_Tmp_1792, in_Tmp_1795, in_Tmp_1796, in_Tmp_1797, in_Tmp_1798, in_Tmp_1799, in_Tmp_1800, in_Tmp_1801, in_Tmp_1802, in_Tmp_1803, in_Tmp_1804, in_Tmp_1805, in_Tmp_1806, in_Tmp_1807, in_Tmp_1808, in_tffsPriority, in_inquiryData, in_userInput, in_Tmp_1810, in_Tmp_1811, in_Tmp_1812, in_Srb, in_Tmp_1813, in_Tmp_1814, in_Tmp_1815, in_Tmp_1816, in_Tmp_1817, in_Tmp_1818, in_Tmp_1819, in_startingSector, in_Tmp_1821, in_Tmp_1823, in_Tmp_1824, in_Tmp_1825, in_storedSrbDataBuffer, in_Tmp_1827, in_Tmp_1829, in_Tmp_1830, in_Tmp_1831, in_status_54, in_Tmp_1832, in_Tmp_1833, in_Tmp_1834, in_pageData, in_Tmp_1835, in_Tmp_1836, in_Tmp_1838, in_Tmp_1839, in_Tmp_1840, in_Tmp_1841, in_boogieTmp, in_vslice_dummy_var_390, in_vslice_dummy_var_391, in_vslice_dummy_var_394, in_vslice_dummy_var_395, in_vslice_dummy_var_396, in_vslice_dummy_var_397, in_vslice_dummy_var_398;
    goto L47, exit;

  exit:
    return;

  L47:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    call {:si_unique_call 2592} out_vslice_dummy_var_390 := KeSetEvent(PendingIRPEvent__DEVICE_EXTENSION(in_deviceExtension_15), 0, 0);
    call {:si_unique_call 2593} out_waitStatus := KeWaitForSingleObject(0, 0, 0, 0, in_queueWait);
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume {:partition} out_waitStatus == 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    goto L61;

  L61:
    call {:si_unique_call 2594} out_flStatusProt_1, out_Tmp_1727, out_Tmp_1728, out_Tmp_1729, out_userOutput, out_Tmp_1731, out_cdb, out_Tmp_1732, out_Tmp_1733, out_Tmp_1734, out_tmpDataBuffer, out_Tmp_1735, out_irpSp_3, out_Tmp_1738, out_Tmp_1739, out_Tmp_1740, out_Tmp_1741, out_Tmp_1742, out_Tmp_1743, out_Tmp_1744, out_Tmp_1746, out_sdv_873, out_Tmp_1747, out_Tmp_1748, out_Tmp_1750, out_Tmp_1751, out_Tmp_1752, out_Tmp_1753, out_Tmp_1754, out_Tmp_1756, out_Tmp_1757, out_Tmp_1759, out_Tmp_1761, out_Tmp_1762, out_Tmp_1763, out_Tmp_1764, out_Tmp_1765, out_Tmp_1766, out_Tmp_1767, out_sdv_877, out_Tmp_1768, out_tffsStatus, out_irp_2, out_Tmp_1769, out_Tmp_1770, out_Tmp_1771, out_Tmp_1773, out_Tmp_1774, out_Tmp_1775, out_Tmp_1776, out_Tmp_1777, out_Tmp_1779, out_Tmp_1781, out_Tmp_1782, out_Tmp_1783, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, out_Tmp_1787, out_dataOffset, out_request, out_Tmp_1788, out_Tmp_1789, out_transferForbidden, out_Tmp_1790, out_Tmp_1791, out_Tmp_1792, out_Tmp_1795, out_Tmp_1796, out_Tmp_1797, out_Tmp_1798, out_Tmp_1799, out_Tmp_1800, out_Tmp_1801, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1806, out_Tmp_1807, out_Tmp_1808, out_tffsPriority, out_inquiryData, out_userInput, out_Tmp_1810, out_Tmp_1811, out_Tmp_1812, out_Srb, out_Tmp_1813, out_Tmp_1814, out_Tmp_1815, out_Tmp_1816, out_Tmp_1817, out_Tmp_1818, out_Tmp_1819, out_startingSector, out_Tmp_1821, out_Tmp_1823, out_Tmp_1824, out_Tmp_1825, out_storedSrbDataBuffer, out_Tmp_1827, out_Tmp_1829, out_Tmp_1830, out_Tmp_1831, out_status_54, out_Tmp_1832, out_Tmp_1833, out_Tmp_1834, out_pageData, out_Tmp_1835, out_Tmp_1836, out_Tmp_1838, out_Tmp_1839, out_Tmp_1840, out_Tmp_1841, out_boogieTmp, out_vslice_dummy_var_391, out_vslice_dummy_var_394, out_vslice_dummy_var_395, out_vslice_dummy_var_396, out_vslice_dummy_var_397 := TrueffsThread_loop_L61(in_ioreq_24, out_flStatusProt_1, out_Tmp_1727, out_Tmp_1728, out_Tmp_1729, out_userOutput, out_Tmp_1731, out_cdb, out_Tmp_1732, out_Tmp_1733, out_Tmp_1734, out_tmpDataBuffer, out_Tmp_1735, out_irpSp_3, in_iplInput, out_Tmp_1738, out_Tmp_1739, out_Tmp_1740, out_Tmp_1741, out_Tmp_1742, out_Tmp_1743, out_Tmp_1744, out_Tmp_1746, in_ioreqProt_1, out_sdv_873, out_Tmp_1747, out_Tmp_1748, out_Tmp_1750, out_Tmp_1751, in_placeExbInput, out_Tmp_1752, out_Tmp_1753, out_Tmp_1754, out_Tmp_1756, out_Tmp_1757, in_flFp, out_Tmp_1759, out_Tmp_1761, out_Tmp_1762, out_Tmp_1763, out_Tmp_1764, out_Tmp_1765, out_Tmp_1766, out_Tmp_1767, out_sdv_877, out_Tmp_1768, out_tffsStatus, out_irp_2, out_Tmp_1769, out_Tmp_1770, out_Tmp_1771, in_protectionInput, out_Tmp_1773, out_Tmp_1774, out_Tmp_1775, out_Tmp_1776, out_Tmp_1777, out_Tmp_1779, in_revisionString, out_Tmp_1781, out_Tmp_1782, out_Tmp_1783, in_deviceExtension_15, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, out_Tmp_1787, out_dataOffset, out_request, out_Tmp_1788, out_Tmp_1789, out_transferForbidden, out_Tmp_1790, out_Tmp_1791, out_Tmp_1792, in_i_19, out_Tmp_1795, out_Tmp_1796, out_Tmp_1797, out_Tmp_1798, out_Tmp_1799, out_Tmp_1800, out_Tmp_1801, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1806, out_Tmp_1807, out_Tmp_1808, in_bdkOperationInput, in_otpInput, in_productString, out_tffsPriority, out_inquiryData, out_userInput, out_Tmp_1810, out_Tmp_1811, out_Tmp_1812, out_Srb, out_Tmp_1813, out_Tmp_1814, out_Tmp_1815, out_Tmp_1816, out_Tmp_1817, out_Tmp_1818, out_Tmp_1819, out_startingSector, out_Tmp_1821, out_Tmp_1823, out_Tmp_1824, out_Tmp_1825, out_storedSrbDataBuffer, in_vendorString, out_Tmp_1827, in_flIoctlRec, out_Tmp_1829, out_Tmp_1830, out_Tmp_1831, out_status_54, out_Tmp_1832, out_Tmp_1833, out_Tmp_1834, out_pageData, out_Tmp_1835, out_Tmp_1836, out_Tmp_1838, out_Tmp_1839, out_Tmp_1840, in_iDefrag, out_Tmp_1841, out_boogieTmp, out_vslice_dummy_var_391, out_vslice_dummy_var_394, out_vslice_dummy_var_395, out_vslice_dummy_var_396, out_vslice_dummy_var_397);
    goto L61_last;

  L61_last:
    call {:si_unique_call 2595} out_request := sdv_ExInterlockedRemoveHeadList(0, 0);
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    call {:si_unique_call 2600} KeClearEvent(PendingIRPEvent__DEVICE_EXTENSION(in_deviceExtension_15));
    call {:si_unique_call 2601} out_sdv_877 := sdv_containing_record(out_request, 88);
    out_irp_2 := out_sdv_877;
    call {:si_unique_call 2602} out_irpSp_3 := sdv_IoGetCurrentIrpStackLocation(out_irp_2);
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    havoc out_Srb;
    out_transferForbidden := 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto anon457_Then, anon457_Else;

  anon457_Else:
    out_tmpDataBuffer := 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon458_Then, anon458_Else;

  anon458_Else:
    goto L86;

  L86:
    out_Tmp_1751 := 32;
    goto L87;

  L87:
    out_tffsPriority := out_Tmp_1751;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_storedSrbDataBuffer;
    call {:si_unique_call 2603} out_sdv_873 := sdv_MmGetSystemAddressForMdlSafe(0, out_tffsPriority);
    out_dataOffset := out_sdv_873;
    goto anon459_Then, anon459_Else;

  anon459_Else:
    assume {:partition} out_dataOffset != 0;
    call {:si_unique_call 2599} out_vslice_dummy_var_391 := sdv_MmGetMdlVirtualAddress(0);
    out_tmpDataBuffer := out_dataOffset;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto L80;

  L80:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon446_Then, anon446_Else;

  anon446_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon445_Then, anon445_Else;

  anon445_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    goto L123;

  L123:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L125;

  L125:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2659} sdv_IoCompleteRequest(0, 1);
    goto anon487_Else;

  anon487_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon359_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2660} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L125;

  anon361_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L125;

  anon360_Then:
    goto L123;

  anon428_Then:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon448_Then, anon448_Else;

  anon448_Else:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon447_Then, anon447_Else;

  anon447_Else:
    goto L652;

  L652:
    out_status_54 := 1;
    goto L654;

  L654:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon490_Then, anon490_Else;

  anon490_Else:
    assume {:partition} out_status_54 == 1;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L659;

  L659:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto L660;

  L660:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2645} out_boogieTmp := TrueffsTranslateSRBStatus(out_status_54);
    call {:si_unique_call 2646} sdv_IoCompleteRequest(0, 1);
    goto anon491_Else;

  anon491_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon402_Then:
    goto L660;

  anon490_Then:
    assume {:partition} out_status_54 != 1;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L659;

  anon447_Then:
    out_status_54 := 6;
    goto L654;

  anon448_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    out_status_54 := 3;
    goto L654;

  anon401_Then:
    goto L652;

  anon340_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon400_Then;

  anon400_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_Tmp_1802;
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon489_Then, anon489_Else;

  anon489_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon456_Then, anon456_Else;

  anon456_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon455_Then, anon455_Else;

  anon455_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon454_Then, anon454_Else;

  anon454_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon453_Then, anon453_Else;

  anon453_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon452_Then, anon452_Else;

  anon452_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon451_Then, anon451_Else;

  anon451_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon450_Then, anon450_Else;

  anon450_Else:
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon449_Then, anon449_Else;

  anon449_Else:
    out_status_54 := 1;
    goto L654;

  anon449_Then:
    out_status_54 := 6;
    goto L654;

  anon450_Then:
    goto L688;

  L688:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    call {:si_unique_call 2653} out_startingSector := corral_nondet();
    goto anon495_Then, anon495_Else;

  anon495_Else:
    assume {:partition} out_transferForbidden != 0;
    out_status_54 := 4;
    goto L654;

  anon495_Then:
    assume {:partition} out_transferForbidden == 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    call {:si_unique_call 2652} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon496_Then, anon496_Else;

  anon496_Else:
    out_tffsStatus := 27;
    goto L654;

  anon496_Then:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    havoc vslice_dummy_var_1519;
    call {:si_unique_call 2658} out_vslice_dummy_var_395 := flmemcpy(vslice_dummy_var_1519, PartitonTable__DEVICE_EXTENSION(in_deviceExtension_15), 512);
    out_tffsStatus := 0;
    goto anon497_Then, anon497_Else;

  anon497_Else:
    assume {:partition} out_tffsStatus == 0;
    out_Tmp_1767 := 1;
    goto L718;

  L718:
    out_status_54 := out_Tmp_1767;
    goto L654;

  anon497_Then:
    assume {:partition} out_tffsStatus != 0;
    out_Tmp_1767 := 4;
    goto L718;

  anon410_Then:
    goto L706;

  L706:
    call {:si_unique_call 2657} out_tffsStatus := bdCall(818, in_ioreq_24);
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    call {:si_unique_call 2656} sdv_KeFlushIoBuffers(0, 1, 0);
    goto L721;

  L721:
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:partition} out_tffsStatus == 0;
    out_Tmp_1734 := 1;
    goto L727;

  L727:
    out_status_54 := out_Tmp_1734;
    goto L654;

  anon412_Then:
    assume {:partition} out_tffsStatus != 0;
    out_Tmp_1734 := 4;
    goto L727;

  anon411_Then:
    goto L721;

  anon409_Then:
    goto L706;

  anon408_Then:
    goto L706;

  anon406_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    goto L729;

  L729:
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    goto L731;

  L731:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    goto L733;

  L733:
    out_tffsStatus := -1073741662;
    out_status_54 := out_tffsStatus;
    goto L654;

  anon416_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    call {:si_unique_call 2654} out_tffsStatus := bdCall(816, in_ioreq_24);
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:partition} out_tffsStatus == 19;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    goto anon498_Then, anon498_Else;

  anon498_Else:
    goto L744;

  L744:
    out_tffsStatus := -1073741662;
    out_status_54 := out_tffsStatus;
    goto L654;

  anon498_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    havoc vslice_dummy_var_1518;
    call {:si_unique_call 2655} out_vslice_dummy_var_396 := flmemcpy(PartitonTable__DEVICE_EXTENSION(in_deviceExtension_15), vslice_dummy_var_1518, 512);
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L744;

  anon420_Then:
    goto L744;

  anon418_Then:
    assume {:partition} out_tffsStatus != 19;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} out_tffsStatus != 0;
    out_status_54 := 4;
    goto L654;

  anon419_Then:
    assume {:partition} out_tffsStatus == 0;
    out_status_54 := 1;
    goto L654;

  anon417_Then:
    goto L733;

  anon414_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    havoc vslice_dummy_var_1517;
    call {:si_unique_call 2647} out_vslice_dummy_var_397 := flmemcpy(PartitonTable__DEVICE_EXTENSION(in_deviceExtension_15), vslice_dummy_var_1517, 512);
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_tffsStatus := -1073741662;
    out_status_54 := out_tffsStatus;
    goto L654;

  anon415_Then:
    goto L731;

  anon407_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    goto L731;

  anon413_Then:
    goto L729;

  anon451_Then:
    goto L688;

  anon452_Then:
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:partition} out_transferForbidden != 0;
    out_status_54 := 4;
    goto L654;

  anon405_Then:
    assume {:partition} out_transferForbidden == 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_Tmp_1744;
    assume {:nonnull} out_Tmp_1744 != 0;
    assume out_Tmp_1744 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_Tmp_1796 := in_i_19;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_Tmp_1782 := in_i_19;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_Tmp_1817 := in_i_19;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_Tmp_1752 := in_i_19;
    out_status_54 := 1;
    goto L654;

  anon453_Then:
    out_status_54 := 1;
    goto L654;

  anon454_Then:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_cdb := Cdb__SCSI_REQUEST_BLOCK(out_Srb);
    assume {:nonnull} out_cdb != 0;
    assume out_cdb > 0;
    goto anon494_Then, anon494_Else;

  anon494_Else:
    goto L771;

  L771:
    out_status_54 := 6;
    goto L654;

  anon494_Then:
    assume {:nonnull} out_cdb != 0;
    assume out_cdb > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:partition} out_transferForbidden != 0;
    out_status_54 := 4;
    goto L654;

  anon422_Then:
    assume {:partition} out_transferForbidden == 0;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_pageData;
    out_Tmp_1769 := out_pageData;
    assume {:nonnull} out_Tmp_1769 != 0;
    assume out_Tmp_1769 > 0;
    out_Tmp_1747 := out_pageData;
    assume {:nonnull} out_Tmp_1747 != 0;
    assume out_Tmp_1747 > 0;
    assume {:nonnull} out_Tmp_1747 != 0;
    assume out_Tmp_1747 > 0;
    out_Tmp_1795 := out_pageData;
    assume {:nonnull} out_Tmp_1795 != 0;
    assume out_Tmp_1795 > 0;
    out_Tmp_1784 := out_pageData;
    assume {:nonnull} out_Tmp_1784 != 0;
    assume out_Tmp_1784 > 0;
    out_Tmp_1746 := out_pageData;
    assume {:nonnull} out_Tmp_1746 != 0;
    assume out_Tmp_1746 > 0;
    out_Tmp_1792 := out_pageData;
    assume {:nonnull} out_Tmp_1792 != 0;
    assume out_Tmp_1792 > 0;
    out_Tmp_1764 := out_pageData;
    assume {:nonnull} out_Tmp_1764 != 0;
    assume out_Tmp_1764 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_Tmp_1836 := SectorsPerTrack__DEVICE_EXTENSION(in_deviceExtension_15);
    out_Tmp_1810 := out_pageData;
    assume {:nonnull} out_Tmp_1810 != 0;
    assume out_Tmp_1810 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_Tmp_1798 := SectorsPerTrack__DEVICE_EXTENSION(in_deviceExtension_15);
    out_Tmp_1823 := out_pageData;
    assume {:nonnull} out_Tmp_1823 != 0;
    assume out_Tmp_1823 > 0;
    out_Tmp_1761 := out_pageData;
    assume {:nonnull} out_Tmp_1761 != 0;
    assume out_Tmp_1761 > 0;
    out_Tmp_1779 := out_pageData;
    assume {:nonnull} out_Tmp_1779 != 0;
    assume out_Tmp_1779 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_Tmp_1729 := Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_Tmp_1766 := Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    out_Tmp_1833 := Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    out_status_54 := 1;
    goto L654;

  anon421_Then:
    goto L771;

  anon455_Then:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    goto L799;

  L799:
    out_status_54 := 10;
    goto L654;

  anon404_Then:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_inquiryData;
    goto anon492_Then, anon492_Else;

  anon492_Else:
    assume {:partition} out_transferForbidden != 0;
    out_status_54 := 4;
    goto L654;

  anon492_Then:
    assume {:partition} out_transferForbidden == 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto L807;

  L807:
    call {:si_unique_call 2651} out_Tmp_1757, out_Tmp_1774 := TrueffsThread_loop_L807(out_Tmp_1757, out_Tmp_1774, in_i_19, out_Srb);
    goto L807_last;

  L807_last:
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1774;
    assume {:nonnull} out_Srb != 0;
    assume out_Srb > 0;
    havoc out_Tmp_1757;
    assume {:nonnull} out_Tmp_1757 != 0;
    assume out_Tmp_1757 > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume false;
    return;

  anon424_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} out_inquiryData != 0;
    assume out_inquiryData > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon493_Then, anon493_Else;

  anon493_Else:
    assume {:nonnull} out_inquiryData != 0;
    assume out_inquiryData > 0;
    goto L812;

  L812:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto L814;

  L814:
    call {:si_unique_call 2650} out_Tmp_1740, out_Tmp_1804, out_Tmp_1807 := TrueffsThread_loop_L814(out_Tmp_1740, in_i_19, out_Tmp_1804, out_Tmp_1807, out_inquiryData, in_vendorString);
    goto L814_last;

  L814_last:
    assume {:CounterLoop 8} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1807;
    assume {:nonnull} out_inquiryData != 0;
    assume out_inquiryData > 0;
    havoc out_Tmp_1740;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1804;
    assume {:nonnull} out_Tmp_1740 != 0;
    assume out_Tmp_1740 > 0;
    assume {:nonnull} in_vendorString != 0;
    assume in_vendorString > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume false;
    return;

  anon425_Then:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto L818;

  L818:
    call {:si_unique_call 2649} out_Tmp_1762, out_Tmp_1771, out_Tmp_1841 := TrueffsThread_loop_L818(out_Tmp_1762, out_Tmp_1771, in_i_19, in_productString, out_inquiryData, out_Tmp_1841);
    goto L818_last;

  L818_last:
    assume {:CounterLoop 16} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1841;
    assume {:nonnull} out_inquiryData != 0;
    assume out_inquiryData > 0;
    havoc out_Tmp_1771;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1762;
    assume {:nonnull} out_Tmp_1771 != 0;
    assume out_Tmp_1771 > 0;
    assume {:nonnull} in_productString != 0;
    assume in_productString > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume false;
    return;

  anon426_Then:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto L822;

  L822:
    call {:si_unique_call 2648} out_Tmp_1743, out_Tmp_1753, out_Tmp_1834 := TrueffsThread_loop_L822(out_Tmp_1743, out_Tmp_1753, in_revisionString, in_i_19, out_inquiryData, out_Tmp_1834);
    goto L822_last;

  L822_last:
    assume {:CounterLoop 4} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1834;
    assume {:nonnull} out_inquiryData != 0;
    assume out_inquiryData > 0;
    havoc out_Tmp_1753;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1743;
    assume {:nonnull} out_Tmp_1753 != 0;
    assume out_Tmp_1753 > 0;
    assume {:nonnull} in_revisionString != 0;
    assume in_revisionString > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume false;
    return;

  anon427_Then:
    out_status_54 := 1;
    goto L654;

  anon493_Then:
    goto L812;

  anon423_Then:
    goto L799;

  anon456_Then:
    goto L654;

  anon489_Then:
    out_status_54 := 1;
    goto L654;

  anon429_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    goto L145;

  L145:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L147;

  L147:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2643} sdv_IoCompleteRequest(0, 1);
    goto anon486_Else;

  anon486_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon358_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2644} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L147;

  anon363_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L147;

  anon362_Then:
    goto L145;

  anon430_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L169;

  L169:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2641} sdv_IoCompleteRequest(0, 1);
    goto anon485_Else;

  anon485_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon357_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L169;

  anon364_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2642} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L169;

  anon365_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L169;

  anon431_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L193;

  L193:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2639} sdv_IoCompleteRequest(0, 1);
    goto anon484_Else;

  anon484_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon356_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L193;

  anon366_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1773;
    assume {:nonnull} out_Tmp_1773 != 0;
    assume out_Tmp_1773 > 0;
    assume {:nonnull} in_iplInput != 0;
    assume in_iplInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1824;
    assume {:nonnull} out_Tmp_1824 != 0;
    assume out_Tmp_1824 > 0;
    assume {:nonnull} in_iplInput != 0;
    assume in_iplInput > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2640} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L193;

  anon367_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L193;

  anon432_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L217;

  L217:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L219;

  L219:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2637} sdv_IoCompleteRequest(0, 1);
    goto anon483_Else;

  anon483_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon355_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1838;
    assume {:nonnull} out_Tmp_1838 != 0;
    assume out_Tmp_1838 > 0;
    assume {:nonnull} in_placeExbInput != 0;
    assume in_placeExbInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1731;
    assume {:nonnull} out_Tmp_1731 != 0;
    assume out_Tmp_1731 > 0;
    assume {:nonnull} in_placeExbInput != 0;
    assume in_placeExbInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1831;
    assume {:nonnull} out_Tmp_1831 != 0;
    assume out_Tmp_1831 > 0;
    assume {:nonnull} in_placeExbInput != 0;
    assume in_placeExbInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1797;
    assume {:nonnull} out_Tmp_1797 != 0;
    assume out_Tmp_1797 > 0;
    assume {:nonnull} in_placeExbInput != 0;
    assume in_placeExbInput > 0;
    call {:si_unique_call 2638} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L219;

  anon369_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L219;

  anon368_Then:
    goto L217;

  anon433_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L244;

  L244:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L246;

  L246:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2635} sdv_IoCompleteRequest(0, 1);
    goto anon482_Else;

  anon482_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon354_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2636} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L246;

  anon371_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L246;

  anon370_Then:
    goto L244;

  anon434_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L268;

  L268:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2633} sdv_IoCompleteRequest(0, 1);
    goto anon481_Else;

  anon481_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon353_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2634} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L268;

  anon372_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L268;

  anon435_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L288;

  L288:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2631} sdv_IoCompleteRequest(0, 1);
    goto anon480_Else;

  anon480_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon352_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2632} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L288;

  anon373_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L288;

  anon436_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L308;

  L308:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2629} sdv_IoCompleteRequest(0, 1);
    goto anon479_Else;

  anon479_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon351_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2630} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L308;

  anon374_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L308;

  anon437_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    goto L326;

  L326:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L328;

  L328:
    out_userInput := 0;
    out_userOutput := 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2627} sdv_IoCompleteRequest(0, 1);
    goto anon475_Else;

  anon475_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon350_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_userInput;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_userOutput;
    out_Tmp_1788 := out_userInput;
    assume {:nonnull} out_Tmp_1788 != 0;
    assume out_Tmp_1788 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto anon476_Then, anon476_Else;

  anon476_Else:
    out_Tmp_1803 := out_userInput;
    assume {:nonnull} out_Tmp_1803 != 0;
    assume out_Tmp_1803 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto anon477_Then, anon477_Else;

  anon477_Else:
    out_Tmp_1742 := out_userInput;
    assume {:nonnull} out_Tmp_1742 != 0;
    assume out_Tmp_1742 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto L339;

  L339:
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    out_Tmp_1735 := out_userInput;
    assume {:nonnull} out_Tmp_1735 != 0;
    assume out_Tmp_1735 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto L345;

  L345:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    out_Tmp_1781 := out_userOutput;
    assume {:nonnull} out_Tmp_1781 != 0;
    assume out_Tmp_1781 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    call {:si_unique_call 2628} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L328;

  anon377_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto anon478_Then, anon478_Else;

  anon478_Else:
    out_Tmp_1805 := out_userOutput;
    assume {:nonnull} out_Tmp_1805 != 0;
    assume out_Tmp_1805 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    out_Tmp_1816 := out_userOutput;
    assume {:nonnull} out_Tmp_1816 != 0;
    assume out_Tmp_1816 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    out_Tmp_1787 := out_userOutput;
    assume {:nonnull} out_Tmp_1787 != 0;
    assume out_Tmp_1787 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    out_Tmp_1775 := out_userOutput;
    assume {:nonnull} out_Tmp_1775 != 0;
    assume out_Tmp_1775 > 0;
    goto L328;

  anon478_Then:
    goto L328;

  anon376_Then:
    out_Tmp_1799 := out_userOutput;
    assume {:nonnull} out_Tmp_1799 != 0;
    assume out_Tmp_1799 > 0;
    assume {:nonnull} in_otpInput != 0;
    assume in_otpInput > 0;
    goto L345;

  anon477_Then:
    goto L339;

  anon476_Then:
    goto L339;

  anon375_Then:
    goto L326;

  anon438_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    goto L365;

  L365:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L367;

  L367:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2623} sdv_IoCompleteRequest(0, 1);
    goto anon474_Else;

  anon474_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon349_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1814;
    assume {:nonnull} out_Tmp_1814 != 0;
    assume out_Tmp_1814 > 0;
    assume {:nonnull} in_protectionInput != 0;
    assume in_protectionInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1790;
    assume {:nonnull} out_Tmp_1790 != 0;
    assume out_Tmp_1790 > 0;
    assume {:nonnull} in_protectionInput != 0;
    assume in_protectionInput > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1777;
    assume {:nonnull} out_Tmp_1777 != 0;
    assume out_Tmp_1777 > 0;
    out_Tmp_1786 := key_flBDKProtectionInput(out_Tmp_1777);
    assume {:IndirectCall} true;
    assume {:nonnull} in_protectionInput != 0;
    assume in_protectionInput > 0;
    call {:si_unique_call 2624} out_vslice_dummy_var_394 := flmemcpy(key_flProtectionInput(in_protectionInput), out_Tmp_1786, 8);
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    call {:si_unique_call 2625} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2626} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L367;

  anon379_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L367;

  anon378_Then:
    goto L365;

  anon439_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    goto L394;

  L394:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L396;

  L396:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2620} sdv_IoCompleteRequest(0, 1);
    goto anon473_Else;

  anon473_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon348_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2622} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L396;

  anon381_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    out_flStatusProt_1 := 0;
    assume {:nonnull} in_ioreqProt_1 != 0;
    assume in_ioreqProt_1 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreqProt_1 != 0;
    assume in_ioreqProt_1 > 0;
    call {:si_unique_call 2621} out_flStatusProt_1 := bdCall(801, in_ioreqProt_1);
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} out_flStatusProt_1 != 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L396;

  anon382_Then:
    assume {:partition} out_flStatusProt_1 == 0;
    assume {:nonnull} in_ioreqProt_1 != 0;
    assume in_ioreqProt_1 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} in_ioreqProt_1 != 0;
    assume in_ioreqProt_1 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L396;

  anon384_Then:
    goto L425;

  L425:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L396;

  anon383_Then:
    goto L425;

  anon380_Then:
    goto L394;

  anon440_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    goto L429;

  L429:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L431;

  L431:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2618} sdv_IoCompleteRequest(0, 1);
    goto anon471_Else;

  anon471_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon347_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_userInput;
    out_Tmp_1789 := out_userInput;
    assume {:nonnull} out_Tmp_1789 != 0;
    assume out_Tmp_1789 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1819 := out_userInput;
    assume {:nonnull} out_Tmp_1819 != 0;
    assume out_Tmp_1819 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1776 := out_userInput;
    assume {:nonnull} out_Tmp_1776 != 0;
    assume out_Tmp_1776 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1754 := out_userInput;
    assume {:nonnull} out_Tmp_1754 != 0;
    assume out_Tmp_1754 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1765 := out_userInput;
    assume {:nonnull} out_Tmp_1765 != 0;
    assume out_Tmp_1765 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1783 := out_userInput;
    assume {:nonnull} out_Tmp_1783 != 0;
    assume out_Tmp_1783 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1741 := out_userInput;
    assume {:nonnull} out_Tmp_1741 != 0;
    assume out_Tmp_1741 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1812 := out_userInput;
    assume {:nonnull} out_Tmp_1812 != 0;
    assume out_Tmp_1812 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1808 := out_userInput;
    assume {:nonnull} out_Tmp_1808 != 0;
    assume out_Tmp_1808 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1759 := out_userInput;
    assume {:nonnull} out_Tmp_1759 != 0;
    assume out_Tmp_1759 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1806 := out_userInput;
    assume {:nonnull} out_Tmp_1806 != 0;
    assume out_Tmp_1806 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1815 := out_userInput;
    assume {:nonnull} out_Tmp_1815 != 0;
    assume out_Tmp_1815 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1829 := out_userInput;
    assume {:nonnull} out_Tmp_1829 != 0;
    assume out_Tmp_1829 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1801 := out_userInput;
    assume {:nonnull} out_Tmp_1801 != 0;
    assume out_Tmp_1801 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1756 := out_userInput;
    assume {:nonnull} out_Tmp_1756 != 0;
    assume out_Tmp_1756 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    out_Tmp_1748 := out_userInput;
    assume {:nonnull} out_Tmp_1748 != 0;
    assume out_Tmp_1748 > 0;
    assume {:nonnull} in_flFp != 0;
    assume in_flFp > 0;
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2619} out_tffsStatus := flIOctl(in_ioreq_24);
    out_userInput := 0;
    goto anon472_Then, anon472_Else;

  anon472_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L431;

  anon472_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L431;

  anon385_Then:
    goto L429;

  anon441_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon346_Then, anon346_Else;

  anon346_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L472;

  L472:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2616} sdv_IoCompleteRequest(0, 1);
    goto anon470_Else;

  anon470_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon346_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2617} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L472;

  anon386_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L472;

  anon442_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    goto L491;

  L491:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L493;

  L493:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2612} sdv_IoCompleteRequest(0, 1);
    goto anon468_Else;

  anon468_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon345_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_userInput;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_userOutput;
    out_Tmp_1830 := out_userInput;
    assume {:nonnull} out_Tmp_1830 != 0;
    assume out_Tmp_1830 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto L502;

  L502:
    call {:si_unique_call 2615} out_Tmp_1739, out_Tmp_1768, out_Tmp_1770, out_Tmp_1818, out_Tmp_1825, out_Tmp_1832, out_Tmp_1835, out_Tmp_1840 := TrueffsThread_loop_L502(out_Tmp_1739, out_Tmp_1768, out_Tmp_1770, in_i_19, in_bdkOperationInput, out_userInput, out_Tmp_1818, out_Tmp_1825, out_Tmp_1832, out_Tmp_1835, out_Tmp_1840);
    goto L502_last;

  L502_last:
    assume {:CounterLoop 4} {:Counter "i_19"} true;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1770;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1739;
    out_Tmp_1818 := out_userInput;
    assume {:nonnull} out_Tmp_1818 != 0;
    assume out_Tmp_1818 > 0;
    havoc out_Tmp_1832;
    assume {:nonnull} out_Tmp_1832 != 0;
    assume out_Tmp_1832 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1825;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    havoc out_Tmp_1835;
    out_Tmp_1768 := out_userInput;
    assume {:nonnull} out_Tmp_1768 != 0;
    assume out_Tmp_1768 > 0;
    havoc out_Tmp_1840;
    assume {:nonnull} out_Tmp_1840 != 0;
    assume out_Tmp_1840 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    assume {:nonnull} in_i_19 != 0;
    assume in_i_19 > 0;
    assume false;
    return;

  anon388_Then:
    out_Tmp_1732 := out_userInput;
    assume {:nonnull} out_Tmp_1732 != 0;
    assume out_Tmp_1732 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1763 := out_userInput;
    assume {:nonnull} out_Tmp_1763 != 0;
    assume out_Tmp_1763 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1813 := out_userInput;
    assume {:nonnull} out_Tmp_1813 != 0;
    assume out_Tmp_1813 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1738 := out_userInput;
    assume {:nonnull} out_Tmp_1738 != 0;
    assume out_Tmp_1738 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    goto anon469_Then, anon469_Else;

  anon469_Else:
    out_Tmp_1750 := out_userInput;
    assume {:nonnull} out_Tmp_1750 != 0;
    assume out_Tmp_1750 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    goto L513;

  L513:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    call {:si_unique_call 2613} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    out_Tmp_1727 := out_userOutput;
    assume {:nonnull} out_Tmp_1727 != 0;
    assume out_Tmp_1727 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    call {:si_unique_call 2614} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L493;

  anon389_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    out_Tmp_1839 := out_userOutput;
    assume {:nonnull} out_Tmp_1839 != 0;
    assume out_Tmp_1839 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1733 := out_userOutput;
    assume {:nonnull} out_Tmp_1733 != 0;
    assume out_Tmp_1733 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1785 := out_userOutput;
    assume {:nonnull} out_Tmp_1785 != 0;
    assume out_Tmp_1785 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    out_Tmp_1728 := out_userOutput;
    assume {:nonnull} out_Tmp_1728 != 0;
    assume out_Tmp_1728 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    goto L527;

  L527:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L493;

  anon390_Then:
    goto L527;

  anon469_Then:
    out_Tmp_1800 := out_userOutput;
    assume {:nonnull} out_Tmp_1800 != 0;
    assume out_Tmp_1800 > 0;
    assume {:nonnull} in_bdkOperationInput != 0;
    assume in_bdkOperationInput > 0;
    goto L513;

  anon387_Then:
    goto L491;

  anon443_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    goto L534;

  L534:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L536;

  L536:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2610} sdv_IoCompleteRequest(0, 1);
    goto anon467_Else;

  anon467_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon344_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2611} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L536;

  anon392_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L536;

  anon391_Then:
    goto L534;

  anon444_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    goto L556;

  L556:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L558;

  L558:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2608} sdv_IoCompleteRequest(0, 1);
    goto anon466_Else;

  anon466_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon343_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2609} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L558;

  anon394_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L558;

  anon393_Then:
    goto L556;

  anon445_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L580;

  L580:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2606} sdv_IoCompleteRequest(0, 1);
    goto anon462_Else;

  anon462_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon342_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2607} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L580;

  anon395_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    havoc out_Tmp_1791;
    assume {:nonnull} out_Tmp_1791 != 0;
    assume out_Tmp_1791 > 0;
    goto anon463_Then, anon463_Else;

  anon463_Else:
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    havoc out_Tmp_1821;
    assume {:nonnull} out_Tmp_1821 != 0;
    assume out_Tmp_1821 > 0;
    goto anon464_Then, anon464_Else;

  anon464_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L580;

  anon464_Then:
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    havoc out_Tmp_1811;
    assume {:nonnull} out_Tmp_1811 != 0;
    assume out_Tmp_1811 > 0;
    goto anon465_Then, anon465_Else;

  anon465_Else:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L580;

  anon465_Then:
    goto L580;

  anon463_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto L580;

  anon446_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L608;

  L608:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2604} sdv_IoCompleteRequest(0, 1);
    goto anon461_Else;

  anon461_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon396_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    havoc out_Tmp_1827;
    assume {:nonnull} out_Tmp_1827 != 0;
    assume out_Tmp_1827 > 0;
    assume {:nonnull} in_iDefrag != 0;
    assume in_iDefrag > 0;
    goto L615;

  L615:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2605} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L608;

  anon398_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L608;

  anon397_Then:
    assume {:nonnull} in_iDefrag != 0;
    assume in_iDefrag > 0;
    goto L615;

  anon338_Then:
    assume {:nonnull} out_irpSp_3 != 0;
    assume out_irpSp_3 > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    out_status_54 := -1073741811;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    goto L632;

  L632:
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2597} sdv_IoCompleteRequest(0, 1);
    goto anon460_Else;

  anon460_Else:
    assume {:partition} yogi_error != 1;
    assume false;
    return;

  anon341_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_ioreq_24 != 0;
    assume in_ioreq_24 > 0;
    assume {:nonnull} in_flIoctlRec != 0;
    assume in_flIoctlRec > 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    call {:si_unique_call 2598} out_tffsStatus := flIOctl(in_ioreq_24);
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:partition} out_tffsStatus != 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := -1073741823;
    goto L632;

  anon399_Then:
    assume {:partition} out_tffsStatus == 0;
    assume {:nonnull} out_irp_2 != 0;
    assume out_irp_2 > 0;
    out_status_54 := 0;
    goto L632;

  anon459_Then:
    assume {:partition} out_dataOffset == 0;
    out_transferForbidden := 1;
    goto L80;

  anon458_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    out_Tmp_1751 := 16;
    goto L87;

  anon339_Then:
    goto L86;

  anon457_Then:
    goto L80;

  anon337_Then:
    goto anon337_Then_dummy;

  anon337_Then_dummy:
    goto L_BAF_3;

  L_BAF_3:
    call {:si_unique_call 2661} {:si_old_unique_call 1} out_flStatusProt_1, out_Tmp_1727, out_Tmp_1728, out_Tmp_1729, out_userOutput, out_Tmp_1731, out_cdb, out_Tmp_1732, out_Tmp_1733, out_Tmp_1734, out_tmpDataBuffer, out_Tmp_1735, out_irpSp_3, out_Tmp_1738, out_Tmp_1739, out_Tmp_1740, out_Tmp_1741, out_Tmp_1742, out_Tmp_1743, out_Tmp_1744, out_Tmp_1746, out_sdv_873, out_Tmp_1747, out_Tmp_1748, out_Tmp_1750, out_Tmp_1751, out_Tmp_1752, out_Tmp_1753, out_Tmp_1754, out_Tmp_1756, out_Tmp_1757, out_Tmp_1759, out_Tmp_1761, out_Tmp_1762, out_Tmp_1763, out_Tmp_1764, out_Tmp_1765, out_Tmp_1766, out_Tmp_1767, out_sdv_877, out_Tmp_1768, out_tffsStatus, out_irp_2, out_waitStatus, out_Tmp_1769, out_Tmp_1770, out_Tmp_1771, out_Tmp_1773, out_Tmp_1774, out_Tmp_1775, out_Tmp_1776, out_Tmp_1777, out_Tmp_1779, out_Tmp_1781, out_Tmp_1782, out_Tmp_1783, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, out_Tmp_1787, out_dataOffset, out_request, out_Tmp_1788, out_Tmp_1789, out_transferForbidden, out_Tmp_1790, out_Tmp_1791, out_Tmp_1792, out_Tmp_1795, out_Tmp_1796, out_Tmp_1797, out_Tmp_1798, out_Tmp_1799, out_Tmp_1800, out_Tmp_1801, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1806, out_Tmp_1807, out_Tmp_1808, out_tffsPriority, out_inquiryData, out_userInput, out_Tmp_1810, out_Tmp_1811, out_Tmp_1812, out_Srb, out_Tmp_1813, out_Tmp_1814, out_Tmp_1815, out_Tmp_1816, out_Tmp_1817, out_Tmp_1818, out_Tmp_1819, out_startingSector, out_Tmp_1821, out_Tmp_1823, out_Tmp_1824, out_Tmp_1825, out_storedSrbDataBuffer, out_Tmp_1827, out_Tmp_1829, out_Tmp_1830, out_Tmp_1831, out_status_54, out_Tmp_1832, out_Tmp_1833, out_Tmp_1834, out_pageData, out_Tmp_1835, out_Tmp_1836, out_Tmp_1838, out_Tmp_1839, out_Tmp_1840, out_Tmp_1841, out_boogieTmp, out_vslice_dummy_var_390, out_vslice_dummy_var_391, out_vslice_dummy_var_394, out_vslice_dummy_var_395, out_vslice_dummy_var_396, out_vslice_dummy_var_397, out_vslice_dummy_var_398 := TrueffsThread_loop_L47(in_ioreq_24, out_flStatusProt_1, out_Tmp_1727, out_Tmp_1728, out_Tmp_1729, out_userOutput, out_Tmp_1731, out_cdb, out_Tmp_1732, out_Tmp_1733, out_Tmp_1734, out_tmpDataBuffer, out_Tmp_1735, out_irpSp_3, in_iplInput, out_Tmp_1738, out_Tmp_1739, out_Tmp_1740, out_Tmp_1741, out_Tmp_1742, out_Tmp_1743, out_Tmp_1744, out_Tmp_1746, in_ioreqProt_1, out_sdv_873, out_Tmp_1747, out_Tmp_1748, out_Tmp_1750, out_Tmp_1751, in_placeExbInput, out_Tmp_1752, out_Tmp_1753, out_Tmp_1754, out_Tmp_1756, out_Tmp_1757, in_flFp, in_queueWait, out_Tmp_1759, out_Tmp_1761, out_Tmp_1762, out_Tmp_1763, out_Tmp_1764, out_Tmp_1765, out_Tmp_1766, out_Tmp_1767, out_sdv_877, out_Tmp_1768, out_tffsStatus, out_irp_2, out_waitStatus, out_Tmp_1769, out_Tmp_1770, out_Tmp_1771, in_protectionInput, out_Tmp_1773, out_Tmp_1774, out_Tmp_1775, out_Tmp_1776, out_Tmp_1777, out_Tmp_1779, in_revisionString, out_Tmp_1781, out_Tmp_1782, out_Tmp_1783, in_deviceExtension_15, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, out_Tmp_1787, out_dataOffset, out_request, out_Tmp_1788, out_Tmp_1789, out_transferForbidden, out_Tmp_1790, out_Tmp_1791, out_Tmp_1792, in_i_19, out_Tmp_1795, out_Tmp_1796, out_Tmp_1797, out_Tmp_1798, out_Tmp_1799, out_Tmp_1800, out_Tmp_1801, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1806, out_Tmp_1807, out_Tmp_1808, in_bdkOperationInput, in_otpInput, in_productString, out_tffsPriority, out_inquiryData, out_userInput, out_Tmp_1810, out_Tmp_1811, out_Tmp_1812, out_Srb, out_Tmp_1813, out_Tmp_1814, out_Tmp_1815, out_Tmp_1816, out_Tmp_1817, out_Tmp_1818, out_Tmp_1819, out_startingSector, out_Tmp_1821, out_Tmp_1823, out_Tmp_1824, out_Tmp_1825, out_storedSrbDataBuffer, in_vendorString, out_Tmp_1827, in_flIoctlRec, out_Tmp_1829, out_Tmp_1830, out_Tmp_1831, out_status_54, out_Tmp_1832, out_Tmp_1833, out_Tmp_1834, out_pageData, out_Tmp_1835, out_Tmp_1836, out_Tmp_1838, out_Tmp_1839, out_Tmp_1840, in_iDefrag, out_Tmp_1841, out_boogieTmp, out_vslice_dummy_var_390, out_vslice_dummy_var_391, out_vslice_dummy_var_394, out_vslice_dummy_var_395, out_vslice_dummy_var_396, out_vslice_dummy_var_397, out_vslice_dummy_var_398);
    return;

  anon336_Then:
    assume {:nonnull} in_deviceExtension_15 != 0;
    assume in_deviceExtension_15 > 0;
    call {:si_unique_call 2596} out_vslice_dummy_var_398 := PsTerminateSystemThread(0);
    goto L61;

  anon335_Then:
    goto anon335_Then_dummy;

  anon335_Then_dummy:
    goto L_BAF_3;

  anon334_Then:
    goto anon334_Then_dummy;

  anon334_Then_dummy:
    goto L_BAF_3;

  anon333_Then:
    assume {:partition} out_waitStatus != 0;
    goto anon333_Then_dummy;

  anon333_Then_dummy:
    goto L_BAF_3;
}



procedure {:LoopProcedure} TrueffsThread_loop_L47(in_ioreq_24: int, in_flStatusProt_1: int, in_Tmp_1727: int, in_Tmp_1728: int, in_Tmp_1729: int, in_userOutput: int, in_Tmp_1731: int, in_cdb: int, in_Tmp_1732: int, in_Tmp_1733: int, in_Tmp_1734: int, in_tmpDataBuffer: int, in_Tmp_1735: int, in_irpSp_3: int, in_iplInput: int, in_Tmp_1738: int, in_Tmp_1739: int, in_Tmp_1740: int, in_Tmp_1741: int, in_Tmp_1742: int, in_Tmp_1743: int, in_Tmp_1744: int, in_Tmp_1746: int, in_ioreqProt_1: int, in_sdv_873: int, in_Tmp_1747: int, in_Tmp_1748: int, in_Tmp_1750: int, in_Tmp_1751: int, in_placeExbInput: int, in_Tmp_1752: int, in_Tmp_1753: int, in_Tmp_1754: int, in_Tmp_1756: int, in_Tmp_1757: int, in_flFp: int, in_queueWait: int, in_Tmp_1759: int, in_Tmp_1761: int, in_Tmp_1762: int, in_Tmp_1763: int, in_Tmp_1764: int, in_Tmp_1765: int, in_Tmp_1766: int, in_Tmp_1767: int, in_sdv_877: int, in_Tmp_1768: int, in_tffsStatus: int, in_irp_2: int, in_waitStatus: int, in_Tmp_1769: int, in_Tmp_1770: int, in_Tmp_1771: int, in_protectionInput: int, in_Tmp_1773: int, in_Tmp_1774: int, in_Tmp_1775: int, in_Tmp_1776: int, in_Tmp_1777: int, in_Tmp_1779: int, in_revisionString: int, in_Tmp_1781: int, in_Tmp_1782: int, in_Tmp_1783: int, in_deviceExtension_15: int, in_Tmp_1784: int, in_Tmp_1785: int, in_Tmp_1786: int, in_Tmp_1787: int, in_dataOffset: int, in_request: int, in_Tmp_1788: int, in_Tmp_1789: int, in_transferForbidden: int, in_Tmp_1790: int, in_Tmp_1791: int, in_Tmp_1792: int, in_i_19: int, in_Tmp_1795: int, in_Tmp_1796: int, in_Tmp_1797: int, in_Tmp_1798: int, in_Tmp_1799: int, in_Tmp_1800: int, in_Tmp_1801: int, in_Tmp_1802: int, in_Tmp_1803: int, in_Tmp_1804: int, in_Tmp_1805: int, in_Tmp_1806: int, in_Tmp_1807: int, in_Tmp_1808: int, in_bdkOperationInput: int, in_otpInput: int, in_productString: int, in_tffsPriority: int, in_inquiryData: int, in_userInput: int, in_Tmp_1810: int, in_Tmp_1811: int, in_Tmp_1812: int, in_Srb: int, in_Tmp_1813: int, in_Tmp_1814: int, in_Tmp_1815: int, in_Tmp_1816: int, in_Tmp_1817: int, in_Tmp_1818: int, in_Tmp_1819: int, in_startingSector: int, in_Tmp_1821: int, in_Tmp_1823: int, in_Tmp_1824: int, in_Tmp_1825: int, in_storedSrbDataBuffer: int, in_vendorString: int, in_Tmp_1827: int, in_flIoctlRec: int, in_Tmp_1829: int, in_Tmp_1830: int, in_Tmp_1831: int, in_status_54: int, in_Tmp_1832: int, in_Tmp_1833: int, in_Tmp_1834: int, in_pageData: int, in_Tmp_1835: int, in_Tmp_1836: int, in_Tmp_1838: int, in_Tmp_1839: int, in_Tmp_1840: int, in_iDefrag: int, in_Tmp_1841: int, in_boogieTmp: int, in_vslice_dummy_var_390: int, in_vslice_dummy_var_391: int, in_vslice_dummy_var_394: int, in_vslice_dummy_var_395: int, in_vslice_dummy_var_396: int, in_vslice_dummy_var_397: int, in_vslice_dummy_var_398: int) returns (out_flStatusProt_1: int, out_Tmp_1727: int, out_Tmp_1728: int, out_Tmp_1729: int, out_userOutput: int, out_Tmp_1731: int, out_cdb: int, out_Tmp_1732: int, out_Tmp_1733: int, out_Tmp_1734: int, out_tmpDataBuffer: int, out_Tmp_1735: int, out_irpSp_3: int, out_Tmp_1738: int, out_Tmp_1739: int, out_Tmp_1740: int, out_Tmp_1741: int, out_Tmp_1742: int, out_Tmp_1743: int, out_Tmp_1744: int, out_Tmp_1746: int, out_sdv_873: int, out_Tmp_1747: int, out_Tmp_1748: int, out_Tmp_1750: int, out_Tmp_1751: int, out_Tmp_1752: int, out_Tmp_1753: int, out_Tmp_1754: int, out_Tmp_1756: int, out_Tmp_1757: int, out_Tmp_1759: int, out_Tmp_1761: int, out_Tmp_1762: int, out_Tmp_1763: int, out_Tmp_1764: int, out_Tmp_1765: int, out_Tmp_1766: int, out_Tmp_1767: int, out_sdv_877: int, out_Tmp_1768: int, out_tffsStatus: int, out_irp_2: int, out_waitStatus: int, out_Tmp_1769: int, out_Tmp_1770: int, out_Tmp_1771: int, out_Tmp_1773: int, out_Tmp_1774: int, out_Tmp_1775: int, out_Tmp_1776: int, out_Tmp_1777: int, out_Tmp_1779: int, out_Tmp_1781: int, out_Tmp_1782: int, out_Tmp_1783: int, out_Tmp_1784: int, out_Tmp_1785: int, out_Tmp_1786: int, out_Tmp_1787: int, out_dataOffset: int, out_request: int, out_Tmp_1788: int, out_Tmp_1789: int, out_transferForbidden: int, out_Tmp_1790: int, out_Tmp_1791: int, out_Tmp_1792: int, out_Tmp_1795: int, out_Tmp_1796: int, out_Tmp_1797: int, out_Tmp_1798: int, out_Tmp_1799: int, out_Tmp_1800: int, out_Tmp_1801: int, out_Tmp_1802: int, out_Tmp_1803: int, out_Tmp_1804: int, out_Tmp_1805: int, out_Tmp_1806: int, out_Tmp_1807: int, out_Tmp_1808: int, out_tffsPriority: int, out_inquiryData: int, out_userInput: int, out_Tmp_1810: int, out_Tmp_1811: int, out_Tmp_1812: int, out_Srb: int, out_Tmp_1813: int, out_Tmp_1814: int, out_Tmp_1815: int, out_Tmp_1816: int, out_Tmp_1817: int, out_Tmp_1818: int, out_Tmp_1819: int, out_startingSector: int, out_Tmp_1821: int, out_Tmp_1823: int, out_Tmp_1824: int, out_Tmp_1825: int, out_storedSrbDataBuffer: int, out_Tmp_1827: int, out_Tmp_1829: int, out_Tmp_1830: int, out_Tmp_1831: int, out_status_54: int, out_Tmp_1832: int, out_Tmp_1833: int, out_Tmp_1834: int, out_pageData: int, out_Tmp_1835: int, out_Tmp_1836: int, out_Tmp_1838: int, out_Tmp_1839: int, out_Tmp_1840: int, out_Tmp_1841: int, out_boogieTmp: int, out_vslice_dummy_var_390: int, out_vslice_dummy_var_391: int, out_vslice_dummy_var_394: int, out_vslice_dummy_var_395: int, out_vslice_dummy_var_396: int, out_vslice_dummy_var_397: int, out_vslice_dummy_var_398: int);
  modifies alloc, initDone, yogi_error, LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_1729 == in_Tmp_1729 || out_Tmp_1729 == Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_Tmp_1734 == 1 || out_Tmp_1734 == 4 || out_Tmp_1734 == in_Tmp_1734;
  free ensures {:va_keep} out_Tmp_1751 == 16 || out_Tmp_1751 == 32 || out_Tmp_1751 == in_Tmp_1751;
  free ensures {:va_keep} out_Tmp_1752 == in_Tmp_1752 || out_Tmp_1752 == in_i_19;
  free ensures {:va_keep} out_Tmp_1766 == in_Tmp_1766 || out_Tmp_1766 == Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_Tmp_1767 == 1 || out_Tmp_1767 == 4 || out_Tmp_1767 == in_Tmp_1767;
  free ensures {:va_keep} out_waitStatus == 258 || out_waitStatus == 0 || out_waitStatus == in_waitStatus;
  free ensures {:va_keep} out_Tmp_1782 == in_Tmp_1782 || out_Tmp_1782 == in_i_19;
  free ensures {:va_keep} out_transferForbidden == 0 || out_transferForbidden == 1 || out_transferForbidden == in_transferForbidden;
  free ensures {:va_keep} out_Tmp_1796 == in_Tmp_1796 || out_Tmp_1796 == in_i_19;
  free ensures {:va_keep} out_Tmp_1798 == in_Tmp_1798 || out_Tmp_1798 == SectorsPerTrack__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_tffsPriority == 16 || out_tffsPriority == 32 || out_tffsPriority == in_tffsPriority;
  free ensures {:va_keep} out_Tmp_1817 == in_Tmp_1817 || out_Tmp_1817 == in_i_19;
  free ensures {:va_keep} out_status_54 == -1073741823 || out_status_54 == 0 || out_status_54 == -1073741811 || out_status_54 == 6 || out_status_54 == 3 || out_status_54 == 1 || out_status_54 == 4 || out_status_54 == -1073741662 || out_status_54 == 10 || out_status_54 == in_status_54;
  free ensures {:va_keep} out_Tmp_1833 == in_Tmp_1833 || out_Tmp_1833 == Cylinders__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_Tmp_1836 == in_Tmp_1836 || out_Tmp_1836 == SectorsPerTrack__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_vslice_dummy_var_394 == in_vslice_dummy_var_394 || out_vslice_dummy_var_394 == key_flProtectionInput(in_protectionInput);
  free ensures {:va_keep} out_vslice_dummy_var_396 == in_vslice_dummy_var_396 || out_vslice_dummy_var_396 == PartitonTable__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_vslice_dummy_var_397 == in_vslice_dummy_var_397 || out_vslice_dummy_var_397 == PartitonTable__DEVICE_EXTENSION(in_deviceExtension_15);
  free ensures {:va_keep} out_vslice_dummy_var_398 == -1073741823 || out_vslice_dummy_var_398 == in_vslice_dummy_var_398;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flDelayMsecs_loop_L10(in_j_4: int, in_innerLoop: int) returns (out_j_4: int)
{

  entry:
    out_j_4 := in_j_4;
    goto L10, exit;

  exit:
    return;

  L10:
    goto anon6_Else;

  anon6_Else:
    assume {:partition} in_innerLoop > out_j_4;
    out_j_4 := out_j_4 + 1;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    havoc out_j_4;
    return;
}



procedure {:LoopProcedure} flDelayMsecs_loop_L10(in_j_4: int, in_innerLoop: int) returns (out_j_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flDelayMsecs_loop_L8(in_i_20: int, in_j_4: int, in_innerLoop: int, in_milliseconds: int) returns (out_i_20: int, out_j_4: int)
{

  entry:
    out_i_20, out_j_4 := in_i_20, in_j_4;
    goto L8, exit;

  exit:
    return;

  L8:
    goto anon5_Else;

  anon5_Else:
    assume {:partition} in_milliseconds > out_i_20;
    out_j_4 := 0;
    goto L10;

  L10:
    call {:si_unique_call 2662} out_j_4 := flDelayMsecs_loop_L10(out_j_4, in_innerLoop);
    goto L10_last;

  L10_last:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} in_innerLoop > out_j_4;
    out_j_4 := out_j_4 + 1;
    assume false;
    return;

  anon6_Then:
    assume {:partition} out_j_4 >= in_innerLoop;
    out_i_20 := out_i_20 + 1;
    goto anon6_Then_dummy;

  anon6_Then_dummy:
    call {:si_unique_call 2663} {:si_old_unique_call 1} out_i_20, out_j_4 := flDelayMsecs_loop_L8(out_i_20, out_j_4, in_innerLoop, in_milliseconds);
    return;
}



procedure {:LoopProcedure} flDelayMsecs_loop_L8(in_i_20: int, in_j_4: int, in_innerLoop: int, in_milliseconds: int) returns (out_i_20: int, out_j_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flmemcpy_loop_L9(in_i_21: int, in_ldest: int, in_lsrc: int, in_count: int) returns (out_i_21: int)
{

  entry:
    out_i_21 := in_i_21;
    goto L9, exit;

  exit:
    return;

  L9:
    goto anon3_Else;

  anon3_Else:
    assume {:partition} in_count > out_i_21;
    assume {:nonnull} in_ldest != 0;
    assume in_ldest > 0;
    assume {:nonnull} in_lsrc != 0;
    assume in_lsrc > 0;
    out_i_21 := out_i_21 + 1;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    havoc out_i_21;
    return;
}



procedure {:LoopProcedure} flmemcpy_loop_L9(in_i_21: int, in_ldest: int, in_lsrc: int, in_count: int) returns (out_i_21: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flmemcmp_loop_L9(in_i_22: int, in_ldest_1: int, in_lsrc_1: int, in_count_1: int) returns (out_i_22: int)
{

  entry:
    out_i_22 := in_i_22;
    goto L9, exit;

  exit:
    return;

  L9:
    goto anon5_Else;

  anon5_Else:
    assume {:partition} in_count_1 > out_i_22;
    assume {:nonnull} in_ldest_1 != 0;
    assume in_ldest_1 > 0;
    assume {:nonnull} in_lsrc_1 != 0;
    assume in_lsrc_1 > 0;
    goto anon6_Then;

  anon6_Then:
    out_i_22 := out_i_22 + 1;
    goto anon6_Then_dummy;

  anon6_Then_dummy:
    havoc out_i_22;
    return;
}



procedure {:LoopProcedure} flmemcmp_loop_L9(in_i_22: int, in_ldest_1: int, in_lsrc_1: int, in_count_1: int) returns (out_i_22: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flmemset_loop_L7(in_i_23: int, in_ldest_2: int, in_c: int, in_count_2: int) returns (out_i_23: int)
{

  entry:
    out_i_23 := in_i_23;
    goto L7, exit;

  exit:
    return;

  L7:
    goto anon3_Else;

  anon3_Else:
    assume {:partition} in_count_2 > out_i_23;
    assume {:nonnull} in_ldest_2 != 0;
    assume in_ldest_2 > 0;
    out_i_23 := out_i_23 + 1;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    havoc out_i_23;
    return;
}



procedure {:LoopProcedure} flmemset_loop_L7(in_i_23: int, in_ldest_2: int, in_c: int, in_count_2: int) returns (out_i_23: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation flRandByte_loop_L7(in_s_p_e_c_i_a_l_1: int, in_tickCount: int)
{

  entry:
    goto L7, exit;

  exit:
    return;

  L7:
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_tickCount != 0;
    assume in_tickCount > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_tickCount != 0;
    assume in_tickCount > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_tickCount != 0;
    assume in_tickCount > 0;
    goto anon3_Then;

  anon3_Then:
    goto anon3_Then_dummy;

  anon3_Then_dummy:
    call {:si_unique_call 2664} {:si_old_unique_call 1} flRandByte_loop_L7(in_s_p_e_c_i_a_l_1, in_tickCount);
    return;
}



procedure {:LoopProcedure} flRandByte_loop_L7(in_s_p_e_c_i_a_l_1: int, in_tickCount: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation i28f016WordSize_loop_L21(in_Tmp_1938: int, in_sdv_985: int, in_flashPtr_12: int, in_id0: int, in_sdv_987: int, in_sdv_988: int, in_sdv_989: int, in_sdv_990: int, in_id1: int, in_pVol_95: int) returns (out_Tmp_1938: int, out_sdv_985: int, out_flashPtr_12: int, out_sdv_987: int, out_sdv_988: int, out_sdv_989: int, out_sdv_990: int)
{
  var vslice_dummy_var_1520: int;

  entry:
    out_Tmp_1938, out_sdv_985, out_flashPtr_12, out_sdv_987, out_sdv_988, out_sdv_989, out_sdv_990 := in_Tmp_1938, in_sdv_985, in_flashPtr_12, in_sdv_987, in_sdv_988, in_sdv_989, in_sdv_990;
    goto L21, exit;

  exit:
    return;

  L21:
    assume {:CounterLoop 1999} true;
    assume {:nonnull} in_pVol_95 != 0;
    assume in_pVol_95 > 0;
    goto anon17_Else;

  anon17_Else:
    assume {:nonnull} in_pVol_95 != 0;
    assume in_pVol_95 > 0;
    havoc out_Tmp_1938;
    assume {:nonnull} in_pVol_95 != 0;
    assume in_pVol_95 > 0;
    havoc vslice_dummy_var_1520;
    call {:si_unique_call 2667} out_sdv_987 := flMap(vslice_dummy_var_1520, out_Tmp_1938);
    out_flashPtr_12 := out_sdv_987;
    call {:si_unique_call 2668} out_sdv_989 := corral_nondet();
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} out_sdv_989 == in_id0;
    call {:si_unique_call 2669} out_sdv_988 := corral_nondet();
    goto anon19_Else;

  anon19_Else:
    assume {:partition} out_sdv_988 != in_id1;
    goto L34;

  L34:
    call {:si_unique_call 2666} out_sdv_985 := corral_nondet();
    goto anon20_Else;

  anon20_Else:
    assume {:partition} out_sdv_985 == in_id0;
    call {:si_unique_call 2665} out_sdv_990 := corral_nondet();
    goto anon21_Else;

  anon21_Else:
    assume {:partition} out_sdv_990 == in_id1;
    assume {:nonnull} in_pVol_95 != 0;
    assume in_pVol_95 > 0;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 2670} {:si_old_unique_call 1} out_Tmp_1938, out_sdv_985, out_flashPtr_12, out_sdv_987, out_sdv_988, out_sdv_989, out_sdv_990 := i28f016WordSize_loop_L21(out_Tmp_1938, out_sdv_985, out_flashPtr_12, in_id0, out_sdv_987, out_sdv_988, out_sdv_989, out_sdv_990, in_id1, in_pVol_95);
    return;

  anon18_Then:
    assume {:partition} out_sdv_989 != in_id0;
    goto L34;
}



procedure {:LoopProcedure} i28f016WordSize_loop_L21(in_Tmp_1938: int, in_sdv_985: int, in_flashPtr_12: int, in_id0: int, in_sdv_987: int, in_sdv_988: int, in_sdv_989: int, in_sdv_990: int, in_id1: int, in_pVol_95: int) returns (out_Tmp_1938: int, out_sdv_985: int, out_flashPtr_12: int, out_sdv_987: int, out_sdv_988: int, out_sdv_989: int, out_sdv_990: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



procedure fakeMain() returns (Tmp_1386: int, dup_assertVar: bool);
  modifies alloc, LockDepth, yogi_error, initDone, Mem_T.CurrentStackLocation_unnamed_tag_7, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:entrypoint} fakeMain() returns (Tmp_1386: int, dup_assertVar: bool)
{

  start:
    call Tmp_1386, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


