var {:scalar} alloc: int;

var {:pointer} sdv_context: int;

var {:scalar} sdv_compFset: int;

var {:scalar} sdv_invoke_on_error: int;

var {:scalar} sdv_invoke_on_cancel: int;

var {:scalar} sdv_invoke_on_success: int;

var {:scalar} return_state: int;

var {:scalar} thread_status: int;

var {:scalar} lowerDriverFailed: int;

var {:scalar} yogi_error: int;

var {:scalar} irp_status: int;

var {:pointer} SLAM_guard_S_0: int;

var {:scalar} irp_copy_next: int;

var {:scalar} Mem_T.CompletionRoutine__IO_STACK_LOCATION: [int]int;

var {:scalar} Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION: [int]int;

var {:scalar} Mem_T.DeviceState__POWER_STATE: [int]int;

var {:scalar} Mem_T.PendingReturned__IRP: [int]int;

var {:scalar} Mem_T.Status__IO_STATUS_BLOCK: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const BUS1394_CLASS_GUID: int;

const GUID_61883_CLASS: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const p_sdv_fx_dev_object: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const KdDebuggerNotPresent: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const KdDebuggerEnabled: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_harnessStackLocation: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_fx_dev_object: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const sdv_cancelFptr: int;

const SLAM_guard_S_0_init: int;

const irpstatus: int;

const GUID_POWERBUTTON_ACTION: int;

const GUID_LIDOPEN_POWERSTATE: int;

const GUID_PROCESSOR_PARKING_CORE_OVERRIDE: int;

const GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY: int;

const GUID_PCIEXPRESS_SETTINGS_SUBGROUP: int;

const GUID_PROCESSOR_PERF_INCREASE_TIME: int;

const GUID_DISK_COALESCING_POWERDOWN_TIMEOUT: int;

const GUID_AUDIO_PLAYBACK: int;

const GUID_USERINTERFACEBUTTON_ACTION: int;

const GUID_PROCESSOR_THROTTLE_POLICY: int;

const GUID_PCIEXPRESS_ASPM_POLICY: int;

const GUID_BATTERY_PERCENTAGE_REMAINING: int;

const GUID_NON_ADAPTIVE_INPUT_TIMEOUT: int;

const GUID_ALLOW_RTC_WAKE: int;

const GUID_GLOBAL_USER_PRESENCE: int;

const GUID_BATTERY_DISCHARGE_ACTION_2: int;

const GUID_BATTERY_DISCHARGE_LEVEL_2: int;

const GUID_APPLAUNCH_BUTTON: int;

const GUID_BATTERY_DISCHARGE_FLAGS_1: int;

const GUID_PROCESSOR_ALLOW_THROTTLING: int;

const GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD: int;

const GUID_MONITOR_POWER_ON: int;

const GUID_IDLE_RESILIENCY_PERIOD: int;

const GUID_PROCESSOR_DISTRIBUTE_UTILITY: int;

const GUID_PROCESSOR_PERF_INCREASE_HISTORY: int;

const GUID_INTSTEER_SUBGROUP: int;

const GUID_DISK_BURST_IGNORE_THRESHOLD: int;

const GUID_SLEEPBUTTON_ACTION: int;

const GUID_PROCESSOR_PERF_LATENCY_HINT_PERF: int;

const GUID_PROCESSOR_IDLE_DISABLE: int;

const GUID_DISK_POWERDOWN_TIMEOUT: int;

const GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD: int;

const GUID_DISK_IDLE_TIMEOUT: int;

const GUID_CONSOLE_DISPLAY_STATE: int;

const GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP: int;

const GUID_BATTERY_DISCHARGE_FLAGS_0: int;

const GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD: int;

const GUID_ACDC_POWER_SOURCE: int;

const GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS: int;

const GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD: int;

const GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME: int;

const GUID_PROCESSOR_THROTTLE_MINIMUM: int;

const GUID_ALLOW_AWAYMODE: int;

const NO_SUBGROUP_GUID: int;

const GUID_DISK_ADAPTIVE_POWERDOWN: int;

const GUID_VIDEO_FULLSCREEN_PLAYBACK: int;

const GUID_SYSTEM_BUTTON_SUBGROUP: int;

const GUID_INTSTEER_TIME_UNPARK_TRIGGER: int;

const GUID_SYSTEM_COOLING_POLICY: int;

const GUID_PROCESSOR_PERF_BOOST_MODE: int;

const ALL_POWERSCHEMES_GUID: int;

const GUID_LIDSWITCH_STATE_CHANGE: int;

const GUID_BATTERY_DISCHARGE_LEVEL_3: int;

const GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY: int;

const GUID_ALLOW_SYSTEM_REQUIRED: int;

const GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS: int;

const GUID_PROCESSOR_IDLE_ALLOW_SCALING: int;

const GUID_LOCK_CONSOLE_ON_WAKE: int;

const GUID_VIDEO_POWERDOWN_TIMEOUT: int;

const GUID_SESSION_DISPLAY_STATUS: int;

const GUID_PROCESSOR_IDLESTATE_POLICY: int;

const GUID_PROCESSOR_IDLE_TIME_CHECK: int;

const GUID_ALLOW_DISPLAY_REQUIRED: int;

const GUID_UNATTEND_SLEEP_TIMEOUT: int;

const GUID_INTSTEER_MODE: int;

const GUID_IDLE_RESILIENCY_PLATFORM_STATE: int;

const GUID_CRITICAL_POWER_TRANSITION: int;

const GUID_PROCESSOR_PERF_INCREASE_THRESHOLD: int;

const GUID_BACKGROUND_TASK_NOTIFICATION: int;

const GUID_SLEEP_IDLE_THRESHOLD: int;

const GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY: int;

const GUID_PROCESSOR_PERF_HISTORY: int;

const GUID_PROCESSOR_IDLE_STATE_MAXIMUM: int;

const GUID_VIDEO_ANNOYANCE_TIMEOUT: int;

const GUID_BATTERY_DISCHARGE_FLAGS_3: int;

const GUID_PROCESSOR_THROTTLE_MAXIMUM: int;

const GUID_PROCESSOR_CORE_PARKING_MAX_CORES: int;

const GUID_PROCESSOR_PARKING_PERF_STATE: int;

const GUID_PROCESSOR_PERF_DECREASE_POLICY: int;

const GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE: int;

const GUID_VIDEO_ADAPTIVE_POWERDOWN: int;

const GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD: int;

const GUID_MIN_POWER_SAVINGS: int;

const GUID_VIDEO_CONSOLE_LOCK_TIMEOUT: int;

const GUID_ALLOW_STANDBY_STATES: int;

const GUID_PROCESSOR_PERF_LATENCY_HINT: int;

const GUID_STANDBY_TIMEOUT: int;

const GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD: int;

const GUID_DEVICE_IDLE_POLICY: int;

const GUID_PROCESSOR_PERFSTATE_POLICY: int;

const GUID_PROCESSOR_PERF_BOOST_POLICY: int;

const GUID_SESSION_USER_PRESENCE: int;

const GUID_LIDCLOSE_ACTION: int;

const GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS: int;

const GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT: int;

const GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD: int;

const GUID_SLEEP_SUBGROUP: int;

const GUID_BATTERY_DISCHARGE_ACTION_1: int;

const GUID_PROCESSOR_PERF_INCREASE_POLICY: int;

const GUID_VIDEO_SUBGROUP: int;

const GUID_PROCESSOR_PERF_DECREASE_TIME: int;

const GUID_MAX_POWER_SAVINGS: int;

const GUID_TYPICAL_POWER_SAVINGS: int;

const GUID_HIBERNATE_FASTS4_POLICY: int;

const GUID_BATTERY_SUBGROUP: int;

const GUID_PROCESSOR_PERF_DECREASE_HISTORY: int;

const GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR: int;

const GUID_PROCESSOR_SETTINGS_SUBGROUP: int;

const GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS: int;

const GUID_IDLE_BACKGROUND_TASK: int;

const GUID_BATTERY_DISCHARGE_FLAGS_2: int;

const GUID_DISK_SUBGROUP: int;

const GUID_HIBERNATE_TIMEOUT: int;

const GUID_POWERSCHEME_PERSONALITY: int;

const GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME: int;

const GUID_BATTERY_DISCHARGE_LEVEL_1: int;

const GUID_BATTERY_DISCHARGE_ACTION_0: int;

const GUID_IDLE_RESILIENCY_SUBGROUP: int;

const GUID_ENABLE_SWITCH_FORCED_SHUTDOWN: int;

const GUID_BATTERY_DISCHARGE_ACTION_3: int;

const GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING: int;

const GUID_INTSTEER_LOAD_PER_PROC_TRIGGER: int;

const GUID_PROCESSOR_PERF_DECREASE_THRESHOLD: int;

const GUID_BATTERY_DISCHARGE_LEVEL_0: int;

const GUID_PROCESSOR_CORE_PARKING_MIN_CORES: int;

const GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD: int;

const GUID_VIDEO_DIM_TIMEOUT: int;

const GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD: int;

const GUID_ACTIVE_POWERSCHEME: int;

const GUID_SYSTEM_AWAYMODE: int;

const GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR: int;

const GUID_PROCESSOR_PERF_TIME_CHECK: int;

const GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING: int;

procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Av_SynchCompletionRoutine"} Av_SynchCompletionRoutine(actual_DeviceObject: int, actual_Irp: int, actual_EventIn: int) returns (Tmp_3: int);
  free ensures {:va_keep} Tmp_3 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_SynchCompletionRoutine"} Av_SynchCompletionRoutine(actual_DeviceObject: int, actual_Irp: int, actual_EventIn: int) returns (Tmp_3: int)
{
  var {:pointer} Event: int;
  var {:pointer} EventIn: int;
  var vslice_dummy_var_1: int;

  anon0:
    EventIn := actual_EventIn;
    Event := EventIn;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Event != 0;
    call {:si_unique_call 1} vslice_dummy_var_1 := KeSetEvent(Event, 0, 0);
    goto L6;

  L6:
    Tmp_3 := -1073741802;
    return;

  anon3_Then:
    assume {:partition} Event == 0;
    goto L6;
}



procedure {:origName "Av_SysControl"} Av_SysControl(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_5: int);
  modifies irp_copy_next, alloc, thread_status, return_state, lowerDriverFailed, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_SysControl"} Av_SysControl(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_5: int)
{
  var {:pointer} DeviceExtension: int;
  var {:scalar} ntStatus: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} Irp_1: int;
  var vslice_dummy_var_2013: int;

  anon0:
    DeviceObject_1 := actual_DeviceObject_1;
    Irp_1 := actual_Irp_1;
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc DeviceExtension;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L8;

  L8:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume Irp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2} SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry(0);
    goto L23;

  L23:
    call {:si_unique_call 3} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_1);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume Irp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 4} SLIC_sdv_IoCallDriver_entry(0);
    goto L26;

  L26:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc vslice_dummy_var_2013;
    call {:si_unique_call 5} Tmp_5 := sdv_IoCallDriver#1(vslice_dummy_var_2013, Irp_1);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume Irp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 6} SLIC_sdv_IoCallDriver_exit(0, Irp_1);
    goto L1;

  L1:
    return;

  anon14_Then:
    assume !(Irp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L1;

  anon13_Then:
    assume !(Irp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L26;

  anon12_Then:
    assume !(Irp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L23;

  anon15_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    ntStatus := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_1))];
    call {:si_unique_call 7} sdv_IoCompleteRequest(0, 0);
    Tmp_5 := ntStatus;
    goto L1;

  anon11_Then:
    goto L8;
}



procedure {:origName "Av_IoControl"} Av_IoControl(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_7: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_IoControl"} Av_IoControl(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_7: int)
{
  var {:scalar} Tmp_8: int;
  var {:pointer} Tmp_9: int;
  var {:scalar} Tmp_10: int;
  var {:pointer} NotifyData: int;
  var {:pointer} Tmp_11: int;
  var {:pointer} IrpStack: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} PdoExtension: int;
  var {:pointer} CommonExtension: int;
  var {:scalar} IoControlCode: int;
  var {:pointer} Request: int;
  var {:scalar} Irql: int;
  var {:pointer} BusExtension: int;
  var {:pointer} AvAdapterData: int;
  var {:pointer} DeviceObject_2: int;
  var {:pointer} Irp_2: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_2014: int;

  anon0:
    DeviceObject_2 := actual_DeviceObject_2;
    Irp_2 := actual_Irp_2;
    ntStatus_1 := 0;
    call {:si_unique_call 8} IrpStack := sdv_IoGetCurrentIrpStackLocation(Irp_2);
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    havoc CommonExtension;
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L16;

  L16:
    ntStatus_1 := -1073741810;
    goto L18;

  L18:
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} ntStatus_1 != 259;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_2))] := ntStatus_1;
    call {:si_unique_call 9} sdv_IoCompleteRequest(0, 0);
    goto L19;

  L19:
    Tmp_7 := ntStatus_1;
    goto L1;

  L1:
    return;

  anon158_Then:
    assume {:partition} ntStatus_1 == 259;
    goto L19;

  anon183_Then:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto L26;

  L26:
    BusExtension := CommonExtension;
    goto L27;

  L27:
    assume {:nonnull} IrpStack != 0;
    assume IrpStack > 0;
    havoc IoControlCode;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} IoControlCode != 2228765;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} IoControlCode != 2228805;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} IoControlCode == 2228820;
    ntStatus_1 := -1073741637;
    goto L18;

  anon173_Then:
    assume {:partition} IoControlCode != 2228820;
    ntStatus_1 := -1073741808;
    goto L18;

  anon174_Then:
    assume {:partition} IoControlCode == 2228805;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} IrpStack != 0;
    assume IrpStack > 0;
    havoc Request;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    ntStatus_1 := -1073741811;
    goto L18;

  anon185_Then:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    ntStatus_1 := -1073741637;
    goto L18;

  anon163_Then:
    assume {:nonnull} BusExtension != 0;
    assume BusExtension > 0;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    goto L49;

  L49:
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} CommonExtension == BusExtension;
    ntStatus_1 := -1073741811;
    goto L18;

  anon165_Then:
    assume {:partition} CommonExtension != BusExtension;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    havoc Tmp_8;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume Tmp_8 != 23;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume Tmp_8 != 22;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume Tmp_8 != 21;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume Tmp_8 != 20;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume Tmp_8 != 19;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume Tmp_8 != 18;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume Tmp_8 != 17;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume Tmp_8 != 16;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume Tmp_8 != 15;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume Tmp_8 != 14;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume Tmp_8 != 13;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume Tmp_8 != 12;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume Tmp_8 != 11;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume Tmp_8 != 10;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume Tmp_8 != 9;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume Tmp_8 != 8;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume Tmp_8 != 7;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume Tmp_8 != 6;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume Tmp_8 != 5;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume Tmp_8 != 4;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume Tmp_8 != 3;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume Tmp_8 != 2;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume Tmp_8 != 1;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume false;
    return;

  anon210_Then:
    assume Tmp_8 == 0;
    assume {:IndirectCall} true;
    call {:si_unique_call 10} ntStatus_1 := AvCmp_GetUnitCapabilities(CommonExtension, Irp_2, Request);
    goto L18;

  anon209_Then:
    assume Tmp_8 == 1;
    assume {:IndirectCall} true;
    call {:si_unique_call 11} ntStatus_1 := AvCmp_SetUnitCapabilities(CommonExtension, Irp_2, Request);
    goto L18;

  anon208_Then:
    assume Tmp_8 == 2;
    assume {:IndirectCall} true;
    call {:si_unique_call 12} ntStatus_1 := AvCmp_SetPlug(CommonExtension, Irp_2, Request);
    goto L18;

  anon207_Then:
    assume Tmp_8 == 3;
    assume {:IndirectCall} true;
    call {:si_unique_call 13} ntStatus_1 := AvCmp_GetPlugHandle(CommonExtension, Irp_2, Request);
    goto L18;

  anon206_Then:
    assume Tmp_8 == 4;
    assume {:IndirectCall} true;
    call {:si_unique_call 14} ntStatus_1 := AvCmp_GetPlugState(CommonExtension, Irp_2, Request);
    goto L18;

  anon205_Then:
    assume Tmp_8 == 5;
    assume {:IndirectCall} true;
    call {:si_unique_call 15} ntStatus_1 := AvCmp_Connect(CommonExtension, Irp_2, Request);
    goto L18;

  anon204_Then:
    assume Tmp_8 == 6;
    assume {:IndirectCall} true;
    call {:si_unique_call 16} ntStatus_1 := AvCmp_Disconnect(CommonExtension, Irp_2, Request);
    goto L18;

  anon203_Then:
    assume Tmp_8 == 7;
    assume {:IndirectCall} true;
    call {:si_unique_call 17} ntStatus_1 := AvCip_AttachFrames(CommonExtension, Irp_2, Request);
    goto L18;

  anon202_Then:
    assume Tmp_8 == 8;
    assume {:IndirectCall} true;
    call {:si_unique_call 18} ntStatus_1 := AvCip_CancelFrames(CommonExtension, Irp_2, Request);
    goto L18;

  anon201_Then:
    assume Tmp_8 == 9;
    assume {:IndirectCall} true;
    call {:si_unique_call 19} ntStatus_1 := AvCip_Talk(CommonExtension, Irp_2, Request);
    goto L18;

  anon200_Then:
    assume Tmp_8 == 10;
    assume {:IndirectCall} true;
    call {:si_unique_call 20} ntStatus_1 := AvCip_Listen(CommonExtension, Irp_2, Request);
    goto L18;

  anon199_Then:
    assume Tmp_8 == 11;
    assume {:IndirectCall} true;
    call {:si_unique_call 21} ntStatus_1 := AvCip_Stop(CommonExtension, Irp_2, Request);
    goto L18;

  anon198_Then:
    assume Tmp_8 == 12;
    assume {:IndirectCall} true;
    call {:si_unique_call 22} ntStatus_1 := AvFcp_SendFcpRequest(CommonExtension, Irp_2, Request);
    goto L18;

  anon197_Then:
    assume Tmp_8 == 13;
    assume {:IndirectCall} true;
    call {:si_unique_call 23} ntStatus_1 := AvFcp_GetFcpResponse(CommonExtension, Irp_2, Request);
    goto L18;

  anon196_Then:
    assume Tmp_8 == 14;
    assume {:IndirectCall} true;
    call {:si_unique_call 24} ntStatus_1 := AvFcp_GetFcpRequest(CommonExtension, Irp_2, Request);
    goto L18;

  anon195_Then:
    assume Tmp_8 == 15;
    assume {:IndirectCall} true;
    call {:si_unique_call 25} ntStatus_1 := AvFcp_SendFcpResponse(CommonExtension, Irp_2, Request);
    goto L18;

  anon194_Then:
    assume Tmp_8 == 16;
    assume {:IndirectCall} true;
    call {:si_unique_call 26} ntStatus_1 := AvFcp_SetFcpNotify(CommonExtension, Irp_2, Request);
    goto L18;

  anon193_Then:
    assume Tmp_8 == 17;
    assume {:IndirectCall} true;
    call {:si_unique_call 27} ntStatus_1 := AvCmp_CreatePlug(CommonExtension, Irp_2, Request);
    goto L18;

  anon192_Then:
    assume Tmp_8 == 18;
    assume {:IndirectCall} true;
    call {:si_unique_call 28} ntStatus_1 := AvCmp_DeletePlug(CommonExtension, Irp_2, Request);
    goto L18;

  anon191_Then:
    assume Tmp_8 == 19;
    assume {:IndirectCall} true;
    call {:si_unique_call 29} ntStatus_1 := Av1394_BusResetNotify(CommonExtension, Irp_2, Request);
    goto L18;

  anon190_Then:
    assume Tmp_8 == 20;
    assume {:IndirectCall} true;
    call {:si_unique_call 30} ntStatus_1 := Av1394_BusReset(CommonExtension, Irp_2, Request);
    goto L18;

  anon189_Then:
    assume Tmp_8 == 21;
    assume {:IndirectCall} true;
    call {:si_unique_call 31} ntStatus_1 := Av1394_SetUnitDirectory(CommonExtension, Irp_2, Request);
    goto L18;

  anon188_Then:
    assume Tmp_8 == 22;
    assume {:IndirectCall} true;
    call {:si_unique_call 32} ntStatus_1 := AvCmp_MonitorPlugs(CommonExtension, Irp_2, Request);
    goto L18;

  anon187_Then:
    assume Tmp_8 == 23;
    goto L18;

  anon175_Then:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    goto L64;

  L64:
    PdoExtension := CommonExtension;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    NotifyData := FcpNotifyData__PDO_DEVICE_EXTENSION(PdoExtension);
    assume {:nonnull} BusExtension != 0;
    assume BusExtension > 0;
    havoc AvAdapterData;
    call {:si_unique_call 33} Tmp_9 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    call {:si_unique_call 34} sdv_KeAcquireSpinLock(0, Tmp_9);
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    havoc Irql;
    assume {:nonnull} NotifyData != 0;
    assume NotifyData > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    goto L77;

  L77:
    call {:si_unique_call 35} sdv_KeReleaseSpinLock(0, Irql);
    goto L57;

  L57:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    havoc Tmp_10;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume Tmp_10 != 23;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume Tmp_10 != 22;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume Tmp_10 != 21;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume Tmp_10 != 20;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume Tmp_10 != 19;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume Tmp_10 != 18;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume Tmp_10 != 17;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume Tmp_10 != 16;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume Tmp_10 != 15;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume Tmp_10 != 14;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume Tmp_10 != 13;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume Tmp_10 != 12;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume Tmp_10 != 11;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume Tmp_10 != 10;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume Tmp_10 != 9;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume Tmp_10 != 8;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume Tmp_10 != 7;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume Tmp_10 != 6;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume Tmp_10 != 5;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume Tmp_10 != 4;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume Tmp_10 != 3;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume Tmp_10 != 2;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume Tmp_10 != 1;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume false;
    return;

  anon234_Then:
    assume Tmp_10 == 0;
    assume {:IndirectCall} true;
    call {:si_unique_call 36} ntStatus_1 := AvCmp_GetUnitCapabilities(BusExtension, Irp_2, Request);
    goto L18;

  anon233_Then:
    assume Tmp_10 == 1;
    assume {:IndirectCall} true;
    call {:si_unique_call 37} ntStatus_1 := AvCmp_SetUnitCapabilities(BusExtension, Irp_2, Request);
    goto L18;

  anon232_Then:
    assume Tmp_10 == 2;
    assume {:IndirectCall} true;
    call {:si_unique_call 38} ntStatus_1 := AvCmp_SetPlug(BusExtension, Irp_2, Request);
    goto L18;

  anon231_Then:
    assume Tmp_10 == 3;
    assume {:IndirectCall} true;
    call {:si_unique_call 39} ntStatus_1 := AvCmp_GetPlugHandle(BusExtension, Irp_2, Request);
    goto L18;

  anon230_Then:
    assume Tmp_10 == 4;
    assume {:IndirectCall} true;
    call {:si_unique_call 40} ntStatus_1 := AvCmp_GetPlugState(BusExtension, Irp_2, Request);
    goto L18;

  anon229_Then:
    assume Tmp_10 == 5;
    assume {:IndirectCall} true;
    call {:si_unique_call 41} ntStatus_1 := AvCmp_Connect(BusExtension, Irp_2, Request);
    goto L18;

  anon228_Then:
    assume Tmp_10 == 6;
    assume {:IndirectCall} true;
    call {:si_unique_call 42} ntStatus_1 := AvCmp_Disconnect(BusExtension, Irp_2, Request);
    goto L18;

  anon227_Then:
    assume Tmp_10 == 7;
    assume {:IndirectCall} true;
    call {:si_unique_call 43} ntStatus_1 := AvCip_AttachFrames(BusExtension, Irp_2, Request);
    goto L18;

  anon226_Then:
    assume Tmp_10 == 8;
    assume {:IndirectCall} true;
    call {:si_unique_call 44} ntStatus_1 := AvCip_CancelFrames(BusExtension, Irp_2, Request);
    goto L18;

  anon225_Then:
    assume Tmp_10 == 9;
    assume {:IndirectCall} true;
    call {:si_unique_call 45} ntStatus_1 := AvCip_Talk(BusExtension, Irp_2, Request);
    goto L18;

  anon224_Then:
    assume Tmp_10 == 10;
    assume {:IndirectCall} true;
    call {:si_unique_call 46} ntStatus_1 := AvCip_Listen(BusExtension, Irp_2, Request);
    goto L18;

  anon223_Then:
    assume Tmp_10 == 11;
    assume {:IndirectCall} true;
    call {:si_unique_call 47} ntStatus_1 := AvCip_Stop(BusExtension, Irp_2, Request);
    goto L18;

  anon222_Then:
    assume Tmp_10 == 12;
    assume {:IndirectCall} true;
    call {:si_unique_call 48} ntStatus_1 := AvFcp_SendFcpRequest(BusExtension, Irp_2, Request);
    goto L18;

  anon221_Then:
    assume Tmp_10 == 13;
    assume {:IndirectCall} true;
    call {:si_unique_call 49} ntStatus_1 := AvFcp_GetFcpResponse(BusExtension, Irp_2, Request);
    goto L18;

  anon220_Then:
    assume Tmp_10 == 14;
    assume {:IndirectCall} true;
    call {:si_unique_call 50} ntStatus_1 := AvFcp_GetFcpRequest(BusExtension, Irp_2, Request);
    goto L18;

  anon219_Then:
    assume Tmp_10 == 15;
    assume {:IndirectCall} true;
    call {:si_unique_call 51} ntStatus_1 := AvFcp_SendFcpResponse(BusExtension, Irp_2, Request);
    goto L18;

  anon218_Then:
    assume Tmp_10 == 16;
    assume {:IndirectCall} true;
    call {:si_unique_call 52} ntStatus_1 := AvFcp_SetFcpNotify(BusExtension, Irp_2, Request);
    goto L18;

  anon217_Then:
    assume Tmp_10 == 17;
    assume {:IndirectCall} true;
    call {:si_unique_call 53} ntStatus_1 := AvCmp_CreatePlug(BusExtension, Irp_2, Request);
    goto L18;

  anon216_Then:
    assume Tmp_10 == 18;
    assume {:IndirectCall} true;
    call {:si_unique_call 54} ntStatus_1 := AvCmp_DeletePlug(BusExtension, Irp_2, Request);
    goto L18;

  anon215_Then:
    assume Tmp_10 == 19;
    assume {:IndirectCall} true;
    call {:si_unique_call 55} ntStatus_1 := Av1394_BusResetNotify(BusExtension, Irp_2, Request);
    goto L18;

  anon214_Then:
    assume Tmp_10 == 20;
    assume {:IndirectCall} true;
    call {:si_unique_call 56} ntStatus_1 := Av1394_BusReset(BusExtension, Irp_2, Request);
    goto L18;

  anon213_Then:
    assume Tmp_10 == 21;
    assume {:IndirectCall} true;
    call {:si_unique_call 57} ntStatus_1 := Av1394_SetUnitDirectory(BusExtension, Irp_2, Request);
    goto L18;

  anon212_Then:
    assume Tmp_10 == 22;
    assume {:IndirectCall} true;
    call {:si_unique_call 58} ntStatus_1 := AvCmp_MonitorPlugs(BusExtension, Irp_2, Request);
    goto L18;

  anon211_Then:
    assume Tmp_10 == 23;
    goto L18;

  anon169_Then:
    call {:si_unique_call 59} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 528, -260872878, 0);
    assume {:nonnull} NotifyData != 0;
    assume NotifyData > 0;
    assume {:nonnull} NotifyData != 0;
    assume NotifyData > 0;
    assume {:nonnull} AvAdapterData != 0;
    assume AvAdapterData > 0;
    assume {:nonnull} NotifyData != 0;
    assume NotifyData > 0;
    call {:si_unique_call 60} vslice_dummy_var_2 := sdv_InsertTailList(FcpList__AV_ADAPTER_DATA(AvAdapterData), Entry__FCP_NOTIFY_DATA(NotifyData));
    goto L77;

  anon167_Then:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    goto L64;

  anon168_Then:
    goto L57;

  anon166_Then:
    goto L57;

  anon164_Then:
    goto L57;

  anon176_Then:
    goto L49;

  anon177_Then:
    goto L49;

  anon178_Then:
    goto L49;

  anon179_Then:
    goto L49;

  anon180_Then:
    goto L49;

  anon181_Then:
    goto L49;

  anon186_Then:
    goto L49;

  anon162_Then:
    ntStatus_1 := -1073741637;
    goto L18;

  anon184_Then:
    assume {:partition} IoControlCode == 2228765;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume Irp_2 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 61} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L323;

  L323:
    call {:si_unique_call 62} sdv_IoSkipCurrentIrpStackLocation(Irp_2);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume Irp_2 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 63} SLIC_sdv_IoCallDriver_entry(0);
    goto L326;

  L326:
    assume {:nonnull} BusExtension != 0;
    assume BusExtension > 0;
    havoc vslice_dummy_var_2014;
    call {:si_unique_call 64} ntStatus_1 := sdv_IoCallDriver#1(vslice_dummy_var_2014, Irp_2);
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume Irp_2 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 65} SLIC_sdv_IoCallDriver_exit(0, Irp_2);
    goto L91;

  L91:
    Tmp_7 := ntStatus_1;
    goto L1;

  anon182_Then:
    assume !(Irp_2 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L91;

  anon170_Then:
    assume !(Irp_2 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L326;

  anon161_Then:
    assume !(Irp_2 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L323;

  anon159_Then:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    goto L95;

  L95:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    havoc Tmp_11;
    assume {:nonnull} Tmp_11 != 0;
    assume Tmp_11 > 0;
    havoc BusExtension;
    goto L27;

  anon171_Then:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    ntStatus_1 := -1073741811;
    goto L18;

  anon172_Then:
    goto L95;

  anon160_Then:
    goto L26;

  anon157_Then:
    goto L16;
}



procedure {:origName "Av_Create"} Av_Create(actual_DeviceObject_3: int, actual_Irp_3: int) returns (Tmp_12: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc;
  free ensures {:va_keep} Tmp_12 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_Create"} Av_Create(actual_DeviceObject_3: int, actual_Irp_3: int) returns (Tmp_12: int)
{
  var {:pointer} Irp_3: int;

  anon0:
    Irp_3 := actual_Irp_3;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_3))] := 0;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    call {:si_unique_call 66} sdv_IoCompleteRequest(0, 0);
    Tmp_12 := 0;
    return;
}



procedure {:origName "Av_Unload"} Av_Unload(actual_DriverObject: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_Unload"} Av_Unload(actual_DriverObject: int)
{
  var vslice_dummy_var_3: int;

  anon0:
    call {:si_unique_call 67} vslice_dummy_var_3 := __HAVOC_malloc(4);
    call {:si_unique_call 68} sdv_do_paged_code_check();
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 69} sdv_ExFreePool(0);
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "DriverEntry"} DriverEntry(actual_DriverObject_1: int, actual_RegistryPath: int) returns (Tmp_16: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_16 == 0 || Tmp_16 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "DriverEntry"} DriverEntry(actual_DriverObject_1: int, actual_RegistryPath: int) returns (Tmp_16: int)
{
  var {:pointer} Tmp_17: int;
  var {:pointer} Tmp_18: int;
  var {:pointer} sdv_10: int;
  var {:pointer} Tmp_19: int;
  var {:pointer} Tmp_20: int;
  var {:pointer} Tmp_21: int;
  var {:pointer} Tmp_22: int;
  var {:pointer} Tmp_23: int;
  var {:pointer} Tmp_24: int;
  var {:pointer} Tmp_25: int;
  var {:pointer} DriverObject_1: int;
  var vslice_dummy_var_2015: int;

  anon0:
    DriverObject_1 := actual_DriverObject_1;
    call {:si_unique_call 70} Tmp_18 := __HAVOC_malloc(112);
    call {:si_unique_call 71} Tmp_19 := __HAVOC_malloc(112);
    call {:si_unique_call 72} Tmp_21 := __HAVOC_malloc(112);
    call {:si_unique_call 73} Tmp_22 := __HAVOC_malloc(112);
    call {:si_unique_call 74} Tmp_23 := __HAVOC_malloc(112);
    call {:si_unique_call 75} Tmp_24 := __HAVOC_malloc(112);
    call {:si_unique_call 76} Tmp_25 := __HAVOC_malloc(112);
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_21;
    assume {:nonnull} Tmp_21 != 0;
    assume Tmp_21 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_24;
    assume {:nonnull} Tmp_24 != 0;
    assume Tmp_24 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_19;
    assume {:nonnull} Tmp_19 != 0;
    assume Tmp_19 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_22;
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_25;
    assume {:nonnull} Tmp_25 != 0;
    assume Tmp_25 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_18;
    assume {:nonnull} Tmp_18 != 0;
    assume Tmp_18 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_23;
    assume {:nonnull} Tmp_23 != 0;
    assume Tmp_23 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_20;
    assume {:nonnull} Tmp_20 != 0;
    assume Tmp_20 > 0;
    call {:si_unique_call 77} sdv_10 := ExAllocatePoolWithTag(512, 12, 943206710);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 78} sdv_RtlZeroMemory(0, 12);
    call {:si_unique_call 79} Tmp_17 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_17 != 0;
    assume Tmp_17 > 0;
    call {:si_unique_call 80} sdv_KeInitializeSpinLock(Tmp_17);
    assume {:nonnull} Tmp_17 != 0;
    assume Tmp_17 > 0;
    havoc vslice_dummy_var_2015;
    call {:si_unique_call 81} InitializeListHead(vslice_dummy_var_2015);
    Tmp_16 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_16 := -1073741670;
    goto L1;
}



procedure {:origName "Av_SubmitIrpSynch"} Av_SubmitIrpSynch(actual_DeviceObject_4: int, actual_Irp_4: int, actual_Irb: int) returns (Tmp_26: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_SubmitIrpSynch"} Av_SubmitIrpSynch(actual_DeviceObject_4: int, actual_Irp_4: int, actual_Irb: int) returns (Tmp_26: int)
{
  var {:scalar} bFreeIrp: int;
  var {:scalar} Status: int;
  var {:scalar} Event_1: int;
  var {:scalar} StackSize: int;
  var {:pointer} NextIrpStack: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_4: int;
  var {:pointer} Irb: int;
  var vslice_dummy_var_4: int;

  anon0:
    call {:si_unique_call 82} Event_1 := __HAVOC_malloc(156);
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_4 := actual_Irp_4;
    Irb := actual_Irb;
    Status := 0;
    bFreeIrp := 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Irp_4 != 0;
    goto L12;

  L12:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Irb != 0;
    call {:si_unique_call 83} NextIrpStack := sdv_IoGetNextIrpStackLocation(Irp_4);
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    goto L23;

  L23:
    call {:si_unique_call 84} KeInitializeEvent(Event_1, 1, 0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume Irp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 85} SLIC_sdv_IoSetCompletionRoutine_entry(0);
    goto L54;

  L54:
    call {:si_unique_call 86} sdv_IoSetCompletionRoutine(Irp_4, li2bplFunctionConstant416, Event_1, 1, 1, 1);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume Irp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 87} SLIC_sdv_IoCallDriver_entry(0);
    goto L57;

  L57:
    call {:si_unique_call 88} Status := sdv_IoCallDriver#1(DeviceObject_4, Irp_4);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume Irp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 89} SLIC_sdv_IoCallDriver_exit(0, Irp_4);
    goto L33;

  L33:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Status == 259;
    call {:si_unique_call 90} vslice_dummy_var_4 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    Status := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_4))];
    goto L34;

  L34:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} bFreeIrp != 0;
    call {:si_unique_call 91} IoFreeIrp(0);
    goto L39;

  L39:
    Tmp_26 := Status;
    goto L1;

  L1:
    return;

  anon24_Then:
    assume {:partition} bFreeIrp == 0;
    goto L39;

  anon23_Then:
    assume {:partition} Status != 259;
    goto L34;

  anon26_Then:
    assume !(Irp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L33;

  anon22_Then:
    assume !(Irp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L57;

  anon21_Then:
    assume !(Irp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L54;

  anon19_Then:
    assume {:partition} Irb == 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume Irp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 92} SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry(0);
    goto L63;

  L63:
    call {:si_unique_call 93} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_4);
    goto L23;

  anon20_Then:
    assume !(Irp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L63;

  anon27_Then:
    assume {:partition} Irp_4 == 0;
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc StackSize;
    call {:si_unique_call 94} Irp_4 := IoAllocateIrp(StackSize, 0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Irp_4 != 0;
    bFreeIrp := 1;
    goto L12;

  anon25_Then:
    assume {:partition} Irp_4 == 0;
    Tmp_26 := -1073741670;
    goto L1;
}



procedure {:origName "Av_Close"} Av_Close(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_28: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc;
  free ensures {:va_keep} Tmp_28 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_Close"} Av_Close(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_28: int)
{
  var {:pointer} Irp_5: int;

  anon0:
    Irp_5 := actual_Irp_5;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_5))] := 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 95} sdv_IoCompleteRequest(0, 0);
    Tmp_28 := 0;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_18: int, actual_sdv_19: int) returns (Tmp_32: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_18: int, actual_sdv_19: int) returns (Tmp_32: int)
{
  var {:scalar} sdv_20: int;

  anon0:
    call {:si_unique_call 96} Tmp_32 := __HAVOC_malloc(4);
    call {:si_unique_call 97} sdv_20 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_32 != 0;
    assume Tmp_32 > 0;
    assume {:nonnull} sdv_20 != 0;
    assume sdv_20 > 0;
    return;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_29: int, actual_sdv_30: int) returns (Tmp_40: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_29: int, actual_sdv_30: int) returns (Tmp_40: int)
{
  var {:scalar} sdv_31: int;

  anon0:
    call {:si_unique_call 98} Tmp_40 := __HAVOC_malloc(4);
    call {:si_unique_call 99} sdv_31 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_40 != 0;
    assume Tmp_40 > 0;
    assume {:nonnull} sdv_31 != 0;
    assume sdv_31 > 0;
    return;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_5: int;

  anon0:
    call {:si_unique_call 100} vslice_dummy_var_5 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_6: int;

  anon0:
    call {:si_unique_call 101} vslice_dummy_var_6 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_50: int);
  free ensures {:va_keep} Tmp_50 == actual_Address;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_50: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    record := Address;
    Tmp_50 := record;
    return;
}



procedure {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int)
{
  var vslice_dummy_var_7: int;

  anon0:
    call {:si_unique_call 102} vslice_dummy_var_7 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 103} vslice_dummy_var_8 := __HAVOC_malloc(4);
    p := actual_p;
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_56: int);
  modifies alloc, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} Tmp_56 == -1073741824 || Tmp_56 == -1073741771 || Tmp_56 == -1073741670 || Tmp_56 == -1073741823 || Tmp_56 == 0 || Tmp_56 == -1073741584 || Tmp_56 == -1073741808 || Tmp_56 == -1073741789 || Tmp_56 == -1073741810;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_56: int)
{
  var {:scalar} status: int;
  var {:pointer} p1: int;
  var {:pointer} p2: int;

  anon0:
    p1 := actual_p1;
    p2 := actual_p2;
    status := 0;
    call {:si_unique_call 104} sdv_stub_add_begin();
    call {:si_unique_call 105} status := Av_PnpAddDevice(p1, p2);
    call {:si_unique_call 106} sdv_stub_add_end();
    Tmp_56 := status;
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_58: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_58 == 1 || Tmp_58 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_58: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 107} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_58 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_58 := 0;
    goto L1;
}



procedure {:origName "IoGetDeviceProperty"} {:osmodel} IoGetDeviceProperty(actual_DeviceObject_6: int, actual_DeviceProperty: int, actual_BufferLength: int, actual_PropertyBuffer: int, actual_ResultLength: int) returns (Tmp_60: int);
  free ensures {:va_keep} Tmp_60 == -1073741584 || Tmp_60 == -1073741808 || Tmp_60 == -1073741823 || Tmp_60 == 0 || Tmp_60 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoGetDeviceProperty"} {:osmodel} IoGetDeviceProperty(actual_DeviceObject_6: int, actual_DeviceProperty: int, actual_BufferLength: int, actual_PropertyBuffer: int, actual_ResultLength: int) returns (Tmp_60: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_40: int;
  var {:scalar} BufferLength: int;
  var {:pointer} ResultLength: int;

  anon0:
    BufferLength := actual_BufferLength;
    ResultLength := actual_ResultLength;
    L := sdv_40;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 0 >= L;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} L != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == -1;
    Tmp_60 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} L != -1;
    Tmp_60 := -1073741808;
    goto L1;

  anon10_Then:
    assume {:partition} L == 0;
    Tmp_60 := -1073741823;
    goto L1;

  anon12_Then:
    assume {:partition} L > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BufferLength >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_60 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} L > BufferLength;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_60 := -1073741789;
    goto L1;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_62: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_62: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_62 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_62 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_62 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_1: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 108} vslice_dummy_var_9 := __HAVOC_malloc(4);
    Dpc_1 := actual_Dpc_1;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_1 != 0;
    assume Dpc_1 > 0;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag: int)
{
  var vslice_dummy_var_10: int;

  anon0:
    call {:si_unique_call 109} vslice_dummy_var_10 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject_2: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_7: int) returns (Tmp_68: int);
  free ensures {:va_keep} Tmp_68 == -1073741824 || Tmp_68 == -1073741771 || Tmp_68 == -1073741670 || Tmp_68 == -1073741823 || Tmp_68 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject_2: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_7: int) returns (Tmp_68: int)
{
  var {:pointer} DeviceObject_7: int;

  anon0:
    DeviceObject_7 := actual_DeviceObject_7;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    Tmp_68 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    Tmp_68 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    Tmp_68 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    Tmp_68 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    goto L21;

  L21:
    Tmp_68 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    goto L21;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 110} vslice_dummy_var_11 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag_1: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag_1: int, actual_Depth: int)
{
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 111} vslice_dummy_var_12 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_74: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_74: int)
{
  var {:scalar} r: int;
  var {:pointer} pirp_2: int;
  var {:scalar} CancelRoutine: int;

  anon0:
    pirp_2 := actual_pirp_2;
    CancelRoutine := actual_CancelRoutine;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    Tmp_74 := r;
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int)
{
  var {:pointer} r_1: int;
  var {:pointer} pirp_3: int;
  var vslice_dummy_var_13: int;

  anon0:
    call {:si_unique_call 112} vslice_dummy_var_13 := __HAVOC_malloc(4);
    pirp_3 := actual_pirp_3;
    assume {:nonnull} pirp_3 != 0;
    assume pirp_3 > 0;
    havoc r_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int)
{
  var vslice_dummy_var_14: int;

  anon0:
    call {:si_unique_call 113} vslice_dummy_var_14 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context: int, actual_Environment: int) returns (Tmp_80: int);
  free ensures {:va_keep} Tmp_80 == 0 || Tmp_80 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context: int, actual_Environment: int) returns (Tmp_80: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_80 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_80 := -1073741823;
    goto L1;
}



procedure {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int)
{
  var vslice_dummy_var_15: int;

  anon0:
    call {:si_unique_call 114} vslice_dummy_var_15 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int)
{
  var {:pointer} pirp_5: int;
  var vslice_dummy_var_16: int;

  anon0:
    call {:si_unique_call 115} vslice_dummy_var_16 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(pirp_5))] := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(pirp_5))] := -1073741637;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, SLAM_guard_S_0, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.PendingReturned__IRP, irp_copy_next, thread_status, return_state, lowerDriverFailed, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, yogi_error, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} u: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;

  anon0:
    call {:si_unique_call 116} u := __HAVOC_malloc(12);
    call {:si_unique_call 117} vslice_dummy_var_17 := __HAVOC_malloc(4);
    SLAM_guard_S_0 := sdv_irp;
    assume SLAM_guard_S_0 != 0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    assume {:nonnull} KdDebuggerEnabled != 0;
    assume KdDebuggerEnabled > 0;
    assume {:nonnull} KdDebuggerNotPresent != 0;
    assume KdDebuggerNotPresent > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 118} sdv_RunUnload(sdv_driver_object);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    goto L1;

  anon17_Then:
    call {:si_unique_call 119} sdv_stub_driver_init();
    call {:si_unique_call 120} vslice_dummy_var_19 := sdv_RunStartDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    call {:si_unique_call 121} vslice_dummy_var_18 := sdv_RunAddDevice(sdv_driver_object, sdv_p_devobj_pdo);
    goto L1;

  anon19_Then:
    call {:si_unique_call 122} vslice_dummy_var_21 := DriverEntry(sdv_driver_object, u);
    goto L1;

  anon15_Then:
    call {:si_unique_call 123} sdv_stub_driver_init();
    call {:si_unique_call 124} vslice_dummy_var_20 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_8: int, actual_Irp_6: int) returns (Tmp_88: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} Tmp_88 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_8: int, actual_Irp_6: int) returns (Tmp_88: int)
{
  var {:dopa} {:scalar} completion: int;
  var {:scalar} status_2: int;
  var {:pointer} Irp_6: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;

  anon0:
    call {:si_unique_call 125} completion := __HAVOC_malloc(4);
    Irp_6 := actual_Irp_6;
    assume {:nonnull} completion != 0;
    assume completion > 0;
    status_2 := 259;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_6))] := 259;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_6)] := 1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 259;
    goto L19;

  L19:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L21;

  L21:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L23;

  L23:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  L29:
    Tmp_88 := status_2;
    return;

  anon48_Then:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 126} vslice_dummy_var_22 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_6, sdv_context, completion);
    goto L29;

  anon47_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L23;

  anon46_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L21;

  anon65_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L19;

  anon61_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_6))] := -1073741823;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_6)] := 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741823;
    goto L58;

  L58:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L60;

  L60:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L62;

  L62:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_invoke_on_error != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 127} vslice_dummy_var_25 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_6, sdv_context, completion);
    goto L29;

  anon60_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon59_Then:
    assume {:partition} sdv_invoke_on_error == 0;
    goto L29;

  anon58_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L62;

  anon57_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L60;

  anon66_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L58;

  anon62_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_6))] := -1073741536;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_6)] := 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741536;
    goto L32;

  L32:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L34;

  L34:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L36;

  L36:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_invoke_on_cancel != 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 128} vslice_dummy_var_23 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_6, sdv_context, completion);
    goto L29;

  anon52_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon51_Then:
    assume {:partition} sdv_invoke_on_cancel == 0;
    goto L29;

  anon50_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L36;

  anon49_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L34;

  anon64_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L32;

  anon45_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_6))] := 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_6)] := 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 0;
    goto L45;

  L45:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L47;

  L47:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L49;

  L49:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_invoke_on_success != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 129} vslice_dummy_var_24 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_6, sdv_context, completion);
    goto L29;

  anon56_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon55_Then:
    assume {:partition} sdv_invoke_on_success == 0;
    goto L29;

  anon54_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L49;

  anon53_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L47;

  anon63_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L45;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_9: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_9: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_2: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 130} State := __HAVOC_malloc(8);
    call {:si_unique_call 131} r_2 := __HAVOC_malloc(8);
    call {:si_unique_call 132} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(structPtr888State)];
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(Tmp)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(r_2)];
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_91: int);
  free ensures {:va_keep} Tmp_91 == 1 || Tmp_91 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_91: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_91 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_91 := 0;
    goto L1;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_1: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_1: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_6: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_1: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_26: int;

  anon0:
    call {:si_unique_call 133} vslice_dummy_var_26 := __HAVOC_malloc(4);
    pirp_6 := actual_pirp_6;
    CompletionRoutine := actual_CompletionRoutine;
    Context_1 := actual_Context_1;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 134} irpSp := sdv_IoGetNextIrpStackLocation(pirp_6);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpSp)] := CompletionRoutine;
    sdv_compFset := 1;
    sdv_context := Context_1;
    sdv_invoke_on_success := InvokeOnSuccess;
    sdv_invoke_on_error := InvokeOnError;
    sdv_invoke_on_cancel := InvokeOnCancel;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_27: int;

  anon0:
    call {:si_unique_call 135} vslice_dummy_var_27 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin()
{
  var vslice_dummy_var_28: int;

  anon0:
    call {:si_unique_call 136} vslice_dummy_var_28 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_99: int);
  free ensures {:va_keep} Tmp_99 == 1 || Tmp_99 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_99: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_99 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_99 := 0;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_7: int)
{
  var vslice_dummy_var_29: int;

  anon0:
    call {:si_unique_call 137} vslice_dummy_var_29 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_103: int);
  modifies thread_status;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} thread_status == 1;
  free ensures {:va_keep} Tmp_103 == 258 || Tmp_103 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_103: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_103 := 258;
    goto L1;

  L1:
    call {:si_unique_call 138} SLIC_KeWaitForSingleObject_exit(0, Tmp_103);
    return;

  anon6_Then:
    Tmp_103 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_103 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_10: int)
{
  var vslice_dummy_var_30: int;

  anon0:
    call {:si_unique_call 139} vslice_dummy_var_30 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event_2: int, actual_Increment: int, actual_Wait: int) returns (Tmp_107: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event_2: int, actual_Increment: int, actual_Wait: int) returns (Tmp_107: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event_2: int;

  anon0:
    Event_2 := actual_Event_2;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    havoc OldState;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    Tmp_107 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_111: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_111: int)
{
  var {:pointer} pirp_7: int;

  anon0:
    pirp_7 := actual_pirp_7;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    havoc Tmp_111;
    return;
}



procedure {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_1: int, actual_n: int, actual_a: int, actual_r_3: int, actual_s_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_1: int, actual_n: int, actual_a: int, actual_r_3: int, actual_s_1: int)
{
  var vslice_dummy_var_31: int;

  anon0:
    call {:si_unique_call 140} vslice_dummy_var_31 := __HAVOC_malloc(4);
    return;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_115: int, dup_assertVar: bool);
  modifies alloc, sdv_context, SLAM_guard_S_0, irp_copy_next, thread_status, irp_status, return_state, lowerDriverFailed, yogi_error, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, sdv_compFset, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} thread_status == 0 || thread_status == 1;
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_115: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_116: int;
  var {:scalar} Tmp_118: int;
  var boogieTmp: int;
  var BUS1394_CLASS_GUID__Loc: int;
  var GUID_61883_CLASS__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_fx_dev_object__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var SLAM_guard_S_0_init__Loc: int;
  var GUID_POWERBUTTON_ACTION__Loc: int;
  var GUID_LIDOPEN_POWERSTATE__Loc: int;
  var GUID_PROCESSOR_PARKING_CORE_OVERRIDE__Loc: int;
  var GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY__Loc: int;
  var GUID_PCIEXPRESS_SETTINGS_SUBGROUP__Loc: int;
  var GUID_PROCESSOR_PERF_INCREASE_TIME__Loc: int;
  var GUID_DISK_COALESCING_POWERDOWN_TIMEOUT__Loc: int;
  var GUID_AUDIO_PLAYBACK__Loc: int;
  var GUID_USERINTERFACEBUTTON_ACTION__Loc: int;
  var GUID_PROCESSOR_THROTTLE_POLICY__Loc: int;
  var GUID_PCIEXPRESS_ASPM_POLICY__Loc: int;
  var GUID_BATTERY_PERCENTAGE_REMAINING__Loc: int;
  var GUID_NON_ADAPTIVE_INPUT_TIMEOUT__Loc: int;
  var GUID_ALLOW_RTC_WAKE__Loc: int;
  var GUID_GLOBAL_USER_PRESENCE__Loc: int;
  var GUID_BATTERY_DISCHARGE_ACTION_2__Loc: int;
  var GUID_BATTERY_DISCHARGE_LEVEL_2__Loc: int;
  var GUID_APPLAUNCH_BUTTON__Loc: int;
  var GUID_BATTERY_DISCHARGE_FLAGS_1__Loc: int;
  var GUID_PROCESSOR_ALLOW_THROTTLING__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD__Loc: int;
  var GUID_MONITOR_POWER_ON__Loc: int;
  var GUID_IDLE_RESILIENCY_PERIOD__Loc: int;
  var GUID_PROCESSOR_DISTRIBUTE_UTILITY__Loc: int;
  var GUID_PROCESSOR_PERF_INCREASE_HISTORY__Loc: int;
  var GUID_INTSTEER_SUBGROUP__Loc: int;
  var GUID_DISK_BURST_IGNORE_THRESHOLD__Loc: int;
  var GUID_SLEEPBUTTON_ACTION__Loc: int;
  var GUID_PROCESSOR_PERF_LATENCY_HINT_PERF__Loc: int;
  var GUID_PROCESSOR_IDLE_DISABLE__Loc: int;
  var GUID_DISK_POWERDOWN_TIMEOUT__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD__Loc: int;
  var GUID_DISK_IDLE_TIMEOUT__Loc: int;
  var GUID_CONSOLE_DISPLAY_STATE__Loc: int;
  var GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP__Loc: int;
  var GUID_BATTERY_DISCHARGE_FLAGS_0__Loc: int;
  var GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD__Loc: int;
  var GUID_ACDC_POWER_SOURCE__Loc: int;
  var GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS__Loc: int;
  var GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME__Loc: int;
  var GUID_PROCESSOR_THROTTLE_MINIMUM__Loc: int;
  var GUID_ALLOW_AWAYMODE__Loc: int;
  var NO_SUBGROUP_GUID__Loc: int;
  var GUID_DISK_ADAPTIVE_POWERDOWN__Loc: int;
  var GUID_VIDEO_FULLSCREEN_PLAYBACK__Loc: int;
  var GUID_SYSTEM_BUTTON_SUBGROUP__Loc: int;
  var GUID_INTSTEER_TIME_UNPARK_TRIGGER__Loc: int;
  var GUID_SYSTEM_COOLING_POLICY__Loc: int;
  var GUID_PROCESSOR_PERF_BOOST_MODE__Loc: int;
  var ALL_POWERSCHEMES_GUID__Loc: int;
  var GUID_LIDSWITCH_STATE_CHANGE__Loc: int;
  var GUID_BATTERY_DISCHARGE_LEVEL_3__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY__Loc: int;
  var GUID_ALLOW_SYSTEM_REQUIRED__Loc: int;
  var GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS__Loc: int;
  var GUID_PROCESSOR_IDLE_ALLOW_SCALING__Loc: int;
  var GUID_LOCK_CONSOLE_ON_WAKE__Loc: int;
  var GUID_VIDEO_POWERDOWN_TIMEOUT__Loc: int;
  var GUID_SESSION_DISPLAY_STATUS__Loc: int;
  var GUID_PROCESSOR_IDLESTATE_POLICY__Loc: int;
  var GUID_PROCESSOR_IDLE_TIME_CHECK__Loc: int;
  var GUID_ALLOW_DISPLAY_REQUIRED__Loc: int;
  var GUID_UNATTEND_SLEEP_TIMEOUT__Loc: int;
  var GUID_INTSTEER_MODE__Loc: int;
  var GUID_IDLE_RESILIENCY_PLATFORM_STATE__Loc: int;
  var GUID_CRITICAL_POWER_TRANSITION__Loc: int;
  var GUID_PROCESSOR_PERF_INCREASE_THRESHOLD__Loc: int;
  var GUID_BACKGROUND_TASK_NOTIFICATION__Loc: int;
  var GUID_SLEEP_IDLE_THRESHOLD__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY__Loc: int;
  var GUID_PROCESSOR_PERF_HISTORY__Loc: int;
  var GUID_PROCESSOR_IDLE_STATE_MAXIMUM__Loc: int;
  var GUID_VIDEO_ANNOYANCE_TIMEOUT__Loc: int;
  var GUID_BATTERY_DISCHARGE_FLAGS_3__Loc: int;
  var GUID_PROCESSOR_THROTTLE_MAXIMUM__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_MAX_CORES__Loc: int;
  var GUID_PROCESSOR_PARKING_PERF_STATE__Loc: int;
  var GUID_PROCESSOR_PERF_DECREASE_POLICY__Loc: int;
  var GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE__Loc: int;
  var GUID_VIDEO_ADAPTIVE_POWERDOWN__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD__Loc: int;
  var GUID_MIN_POWER_SAVINGS__Loc: int;
  var GUID_VIDEO_CONSOLE_LOCK_TIMEOUT__Loc: int;
  var GUID_ALLOW_STANDBY_STATES__Loc: int;
  var GUID_PROCESSOR_PERF_LATENCY_HINT__Loc: int;
  var GUID_STANDBY_TIMEOUT__Loc: int;
  var GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD__Loc: int;
  var GUID_DEVICE_IDLE_POLICY__Loc: int;
  var GUID_PROCESSOR_PERFSTATE_POLICY__Loc: int;
  var GUID_PROCESSOR_PERF_BOOST_POLICY__Loc: int;
  var GUID_SESSION_USER_PRESENCE__Loc: int;
  var GUID_LIDCLOSE_ACTION__Loc: int;
  var GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS__Loc: int;
  var GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD__Loc: int;
  var GUID_SLEEP_SUBGROUP__Loc: int;
  var GUID_BATTERY_DISCHARGE_ACTION_1__Loc: int;
  var GUID_PROCESSOR_PERF_INCREASE_POLICY__Loc: int;
  var GUID_VIDEO_SUBGROUP__Loc: int;
  var GUID_PROCESSOR_PERF_DECREASE_TIME__Loc: int;
  var GUID_MAX_POWER_SAVINGS__Loc: int;
  var GUID_TYPICAL_POWER_SAVINGS__Loc: int;
  var GUID_HIBERNATE_FASTS4_POLICY__Loc: int;
  var GUID_BATTERY_SUBGROUP__Loc: int;
  var GUID_PROCESSOR_PERF_DECREASE_HISTORY__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR__Loc: int;
  var GUID_PROCESSOR_SETTINGS_SUBGROUP__Loc: int;
  var GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS__Loc: int;
  var GUID_IDLE_BACKGROUND_TASK__Loc: int;
  var GUID_BATTERY_DISCHARGE_FLAGS_2__Loc: int;
  var GUID_DISK_SUBGROUP__Loc: int;
  var GUID_HIBERNATE_TIMEOUT__Loc: int;
  var GUID_POWERSCHEME_PERSONALITY__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME__Loc: int;
  var GUID_BATTERY_DISCHARGE_LEVEL_1__Loc: int;
  var GUID_BATTERY_DISCHARGE_ACTION_0__Loc: int;
  var GUID_IDLE_RESILIENCY_SUBGROUP__Loc: int;
  var GUID_ENABLE_SWITCH_FORCED_SHUTDOWN__Loc: int;
  var GUID_BATTERY_DISCHARGE_ACTION_3__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING__Loc: int;
  var GUID_INTSTEER_LOAD_PER_PROC_TRIGGER__Loc: int;
  var GUID_PROCESSOR_PERF_DECREASE_THRESHOLD__Loc: int;
  var GUID_BATTERY_DISCHARGE_LEVEL_0__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_MIN_CORES__Loc: int;
  var GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD__Loc: int;
  var GUID_VIDEO_DIM_TIMEOUT__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD__Loc: int;
  var GUID_ACTIVE_POWERSCHEME__Loc: int;
  var GUID_SYSTEM_AWAYMODE__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR__Loc: int;
  var GUID_PROCESSOR_PERF_TIME_CHECK__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING__Loc: int;
  var vslice_dummy_var_2016: int;
  var vslice_dummy_var_2017: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 141} BUS1394_CLASS_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume BUS1394_CLASS_GUID__Loc == BUS1394_CLASS_GUID;
    assume BUS1394_CLASS_GUID != 0;
    call {:si_unique_call 142} GUID_61883_CLASS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_61883_CLASS__Loc == GUID_61883_CLASS;
    assume GUID_61883_CLASS != 0;
    call {:si_unique_call 143} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 144} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 145} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 146} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 147} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 148} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 149} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 150} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 151} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 152} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 153} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 154} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 155} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 156} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 157} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 158} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 159} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 160} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 161} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(44);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 162} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 163} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 164} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 165} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 166} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 167} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 168} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 169} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 170} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 171} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 172} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 173} sdv_fx_dev_object__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_fx_dev_object__Loc == sdv_fx_dev_object;
    assume sdv_fx_dev_object != 0;
    call {:si_unique_call 174} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 175} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 176} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 177} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 178} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 179} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 180} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 181} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 182} SLAM_guard_S_0_init__Loc := __HAVOC_malloc_or_null(240);
    assume SLAM_guard_S_0_init__Loc == SLAM_guard_S_0_init;
    assume SLAM_guard_S_0_init != 0;
    call {:si_unique_call 183} GUID_POWERBUTTON_ACTION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWERBUTTON_ACTION__Loc == GUID_POWERBUTTON_ACTION;
    assume GUID_POWERBUTTON_ACTION != 0;
    call {:si_unique_call 184} GUID_LIDOPEN_POWERSTATE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LIDOPEN_POWERSTATE__Loc == GUID_LIDOPEN_POWERSTATE;
    assume GUID_LIDOPEN_POWERSTATE != 0;
    call {:si_unique_call 185} GUID_PROCESSOR_PARKING_CORE_OVERRIDE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PARKING_CORE_OVERRIDE__Loc == GUID_PROCESSOR_PARKING_CORE_OVERRIDE;
    assume GUID_PROCESSOR_PARKING_CORE_OVERRIDE != 0;
    call {:si_unique_call 186} GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY__Loc == GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY;
    assume GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY != 0;
    call {:si_unique_call 187} GUID_PCIEXPRESS_SETTINGS_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCIEXPRESS_SETTINGS_SUBGROUP__Loc == GUID_PCIEXPRESS_SETTINGS_SUBGROUP;
    assume GUID_PCIEXPRESS_SETTINGS_SUBGROUP != 0;
    call {:si_unique_call 188} GUID_PROCESSOR_PERF_INCREASE_TIME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_INCREASE_TIME__Loc == GUID_PROCESSOR_PERF_INCREASE_TIME;
    assume GUID_PROCESSOR_PERF_INCREASE_TIME != 0;
    call {:si_unique_call 189} GUID_DISK_COALESCING_POWERDOWN_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DISK_COALESCING_POWERDOWN_TIMEOUT__Loc == GUID_DISK_COALESCING_POWERDOWN_TIMEOUT;
    assume GUID_DISK_COALESCING_POWERDOWN_TIMEOUT != 0;
    call {:si_unique_call 190} GUID_AUDIO_PLAYBACK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_AUDIO_PLAYBACK__Loc == GUID_AUDIO_PLAYBACK;
    assume GUID_AUDIO_PLAYBACK != 0;
    call {:si_unique_call 191} GUID_USERINTERFACEBUTTON_ACTION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_USERINTERFACEBUTTON_ACTION__Loc == GUID_USERINTERFACEBUTTON_ACTION;
    assume GUID_USERINTERFACEBUTTON_ACTION != 0;
    call {:si_unique_call 192} GUID_PROCESSOR_THROTTLE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_THROTTLE_POLICY__Loc == GUID_PROCESSOR_THROTTLE_POLICY;
    assume GUID_PROCESSOR_THROTTLE_POLICY != 0;
    call {:si_unique_call 193} GUID_PCIEXPRESS_ASPM_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCIEXPRESS_ASPM_POLICY__Loc == GUID_PCIEXPRESS_ASPM_POLICY;
    assume GUID_PCIEXPRESS_ASPM_POLICY != 0;
    call {:si_unique_call 194} GUID_BATTERY_PERCENTAGE_REMAINING__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_PERCENTAGE_REMAINING__Loc == GUID_BATTERY_PERCENTAGE_REMAINING;
    assume GUID_BATTERY_PERCENTAGE_REMAINING != 0;
    call {:si_unique_call 195} GUID_NON_ADAPTIVE_INPUT_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_NON_ADAPTIVE_INPUT_TIMEOUT__Loc == GUID_NON_ADAPTIVE_INPUT_TIMEOUT;
    assume GUID_NON_ADAPTIVE_INPUT_TIMEOUT != 0;
    call {:si_unique_call 196} GUID_ALLOW_RTC_WAKE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ALLOW_RTC_WAKE__Loc == GUID_ALLOW_RTC_WAKE;
    assume GUID_ALLOW_RTC_WAKE != 0;
    call {:si_unique_call 197} GUID_GLOBAL_USER_PRESENCE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_GLOBAL_USER_PRESENCE__Loc == GUID_GLOBAL_USER_PRESENCE;
    assume GUID_GLOBAL_USER_PRESENCE != 0;
    call {:si_unique_call 198} GUID_BATTERY_DISCHARGE_ACTION_2__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_ACTION_2__Loc == GUID_BATTERY_DISCHARGE_ACTION_2;
    assume GUID_BATTERY_DISCHARGE_ACTION_2 != 0;
    call {:si_unique_call 199} GUID_BATTERY_DISCHARGE_LEVEL_2__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_LEVEL_2__Loc == GUID_BATTERY_DISCHARGE_LEVEL_2;
    assume GUID_BATTERY_DISCHARGE_LEVEL_2 != 0;
    call {:si_unique_call 200} GUID_APPLAUNCH_BUTTON__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_APPLAUNCH_BUTTON__Loc == GUID_APPLAUNCH_BUTTON;
    assume GUID_APPLAUNCH_BUTTON != 0;
    call {:si_unique_call 201} GUID_BATTERY_DISCHARGE_FLAGS_1__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_FLAGS_1__Loc == GUID_BATTERY_DISCHARGE_FLAGS_1;
    assume GUID_BATTERY_DISCHARGE_FLAGS_1 != 0;
    call {:si_unique_call 202} GUID_PROCESSOR_ALLOW_THROTTLING__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_ALLOW_THROTTLING__Loc == GUID_PROCESSOR_ALLOW_THROTTLING;
    assume GUID_PROCESSOR_ALLOW_THROTTLING != 0;
    call {:si_unique_call 203} GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD__Loc == GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD;
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD != 0;
    call {:si_unique_call 204} GUID_MONITOR_POWER_ON__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_MONITOR_POWER_ON__Loc == GUID_MONITOR_POWER_ON;
    assume GUID_MONITOR_POWER_ON != 0;
    call {:si_unique_call 205} GUID_IDLE_RESILIENCY_PERIOD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_IDLE_RESILIENCY_PERIOD__Loc == GUID_IDLE_RESILIENCY_PERIOD;
    assume GUID_IDLE_RESILIENCY_PERIOD != 0;
    call {:si_unique_call 206} GUID_PROCESSOR_DISTRIBUTE_UTILITY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_DISTRIBUTE_UTILITY__Loc == GUID_PROCESSOR_DISTRIBUTE_UTILITY;
    assume GUID_PROCESSOR_DISTRIBUTE_UTILITY != 0;
    call {:si_unique_call 207} GUID_PROCESSOR_PERF_INCREASE_HISTORY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_INCREASE_HISTORY__Loc == GUID_PROCESSOR_PERF_INCREASE_HISTORY;
    assume GUID_PROCESSOR_PERF_INCREASE_HISTORY != 0;
    call {:si_unique_call 208} GUID_INTSTEER_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_INTSTEER_SUBGROUP__Loc == GUID_INTSTEER_SUBGROUP;
    assume GUID_INTSTEER_SUBGROUP != 0;
    call {:si_unique_call 209} GUID_DISK_BURST_IGNORE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DISK_BURST_IGNORE_THRESHOLD__Loc == GUID_DISK_BURST_IGNORE_THRESHOLD;
    assume GUID_DISK_BURST_IGNORE_THRESHOLD != 0;
    call {:si_unique_call 210} GUID_SLEEPBUTTON_ACTION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SLEEPBUTTON_ACTION__Loc == GUID_SLEEPBUTTON_ACTION;
    assume GUID_SLEEPBUTTON_ACTION != 0;
    call {:si_unique_call 211} GUID_PROCESSOR_PERF_LATENCY_HINT_PERF__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_LATENCY_HINT_PERF__Loc == GUID_PROCESSOR_PERF_LATENCY_HINT_PERF;
    assume GUID_PROCESSOR_PERF_LATENCY_HINT_PERF != 0;
    call {:si_unique_call 212} GUID_PROCESSOR_IDLE_DISABLE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_DISABLE__Loc == GUID_PROCESSOR_IDLE_DISABLE;
    assume GUID_PROCESSOR_IDLE_DISABLE != 0;
    call {:si_unique_call 213} GUID_DISK_POWERDOWN_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DISK_POWERDOWN_TIMEOUT__Loc == GUID_DISK_POWERDOWN_TIMEOUT;
    assume GUID_DISK_POWERDOWN_TIMEOUT != 0;
    call {:si_unique_call 214} GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD__Loc == GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD;
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD != 0;
    call {:si_unique_call 215} GUID_DISK_IDLE_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DISK_IDLE_TIMEOUT__Loc == GUID_DISK_IDLE_TIMEOUT;
    assume GUID_DISK_IDLE_TIMEOUT != 0;
    call {:si_unique_call 216} GUID_CONSOLE_DISPLAY_STATE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_CONSOLE_DISPLAY_STATE__Loc == GUID_CONSOLE_DISPLAY_STATE;
    assume GUID_CONSOLE_DISPLAY_STATE != 0;
    call {:si_unique_call 217} GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP__Loc == GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP;
    assume GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP != 0;
    call {:si_unique_call 218} GUID_BATTERY_DISCHARGE_FLAGS_0__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_FLAGS_0__Loc == GUID_BATTERY_DISCHARGE_FLAGS_0;
    assume GUID_BATTERY_DISCHARGE_FLAGS_0 != 0;
    call {:si_unique_call 219} GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD__Loc == GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD;
    assume GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD != 0;
    call {:si_unique_call 220} GUID_ACDC_POWER_SOURCE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACDC_POWER_SOURCE__Loc == GUID_ACDC_POWER_SOURCE;
    assume GUID_ACDC_POWER_SOURCE != 0;
    call {:si_unique_call 221} GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS__Loc == GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS;
    assume GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS != 0;
    call {:si_unique_call 222} GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD__Loc == GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD;
    assume GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD != 0;
    call {:si_unique_call 223} GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME__Loc == GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME;
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME != 0;
    call {:si_unique_call 224} GUID_PROCESSOR_THROTTLE_MINIMUM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_THROTTLE_MINIMUM__Loc == GUID_PROCESSOR_THROTTLE_MINIMUM;
    assume GUID_PROCESSOR_THROTTLE_MINIMUM != 0;
    call {:si_unique_call 225} GUID_ALLOW_AWAYMODE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ALLOW_AWAYMODE__Loc == GUID_ALLOW_AWAYMODE;
    assume GUID_ALLOW_AWAYMODE != 0;
    call {:si_unique_call 226} NO_SUBGROUP_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume NO_SUBGROUP_GUID__Loc == NO_SUBGROUP_GUID;
    assume NO_SUBGROUP_GUID != 0;
    call {:si_unique_call 227} GUID_DISK_ADAPTIVE_POWERDOWN__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DISK_ADAPTIVE_POWERDOWN__Loc == GUID_DISK_ADAPTIVE_POWERDOWN;
    assume GUID_DISK_ADAPTIVE_POWERDOWN != 0;
    call {:si_unique_call 228} GUID_VIDEO_FULLSCREEN_PLAYBACK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_FULLSCREEN_PLAYBACK__Loc == GUID_VIDEO_FULLSCREEN_PLAYBACK;
    assume GUID_VIDEO_FULLSCREEN_PLAYBACK != 0;
    call {:si_unique_call 229} GUID_SYSTEM_BUTTON_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SYSTEM_BUTTON_SUBGROUP__Loc == GUID_SYSTEM_BUTTON_SUBGROUP;
    assume GUID_SYSTEM_BUTTON_SUBGROUP != 0;
    call {:si_unique_call 230} GUID_INTSTEER_TIME_UNPARK_TRIGGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_INTSTEER_TIME_UNPARK_TRIGGER__Loc == GUID_INTSTEER_TIME_UNPARK_TRIGGER;
    assume GUID_INTSTEER_TIME_UNPARK_TRIGGER != 0;
    call {:si_unique_call 231} GUID_SYSTEM_COOLING_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SYSTEM_COOLING_POLICY__Loc == GUID_SYSTEM_COOLING_POLICY;
    assume GUID_SYSTEM_COOLING_POLICY != 0;
    call {:si_unique_call 232} GUID_PROCESSOR_PERF_BOOST_MODE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_BOOST_MODE__Loc == GUID_PROCESSOR_PERF_BOOST_MODE;
    assume GUID_PROCESSOR_PERF_BOOST_MODE != 0;
    call {:si_unique_call 233} ALL_POWERSCHEMES_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume ALL_POWERSCHEMES_GUID__Loc == ALL_POWERSCHEMES_GUID;
    assume ALL_POWERSCHEMES_GUID != 0;
    call {:si_unique_call 234} GUID_LIDSWITCH_STATE_CHANGE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LIDSWITCH_STATE_CHANGE__Loc == GUID_LIDSWITCH_STATE_CHANGE;
    assume GUID_LIDSWITCH_STATE_CHANGE != 0;
    call {:si_unique_call 235} GUID_BATTERY_DISCHARGE_LEVEL_3__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_LEVEL_3__Loc == GUID_BATTERY_DISCHARGE_LEVEL_3;
    assume GUID_BATTERY_DISCHARGE_LEVEL_3 != 0;
    call {:si_unique_call 236} GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY__Loc == GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY;
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY != 0;
    call {:si_unique_call 237} GUID_ALLOW_SYSTEM_REQUIRED__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ALLOW_SYSTEM_REQUIRED__Loc == GUID_ALLOW_SYSTEM_REQUIRED;
    assume GUID_ALLOW_SYSTEM_REQUIRED != 0;
    call {:si_unique_call 238} GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS__Loc == GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS;
    assume GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS != 0;
    call {:si_unique_call 239} GUID_PROCESSOR_IDLE_ALLOW_SCALING__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_ALLOW_SCALING__Loc == GUID_PROCESSOR_IDLE_ALLOW_SCALING;
    assume GUID_PROCESSOR_IDLE_ALLOW_SCALING != 0;
    call {:si_unique_call 240} GUID_LOCK_CONSOLE_ON_WAKE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LOCK_CONSOLE_ON_WAKE__Loc == GUID_LOCK_CONSOLE_ON_WAKE;
    assume GUID_LOCK_CONSOLE_ON_WAKE != 0;
    call {:si_unique_call 241} GUID_VIDEO_POWERDOWN_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_POWERDOWN_TIMEOUT__Loc == GUID_VIDEO_POWERDOWN_TIMEOUT;
    assume GUID_VIDEO_POWERDOWN_TIMEOUT != 0;
    call {:si_unique_call 242} GUID_SESSION_DISPLAY_STATUS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SESSION_DISPLAY_STATUS__Loc == GUID_SESSION_DISPLAY_STATUS;
    assume GUID_SESSION_DISPLAY_STATUS != 0;
    call {:si_unique_call 243} GUID_PROCESSOR_IDLESTATE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLESTATE_POLICY__Loc == GUID_PROCESSOR_IDLESTATE_POLICY;
    assume GUID_PROCESSOR_IDLESTATE_POLICY != 0;
    call {:si_unique_call 244} GUID_PROCESSOR_IDLE_TIME_CHECK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_TIME_CHECK__Loc == GUID_PROCESSOR_IDLE_TIME_CHECK;
    assume GUID_PROCESSOR_IDLE_TIME_CHECK != 0;
    call {:si_unique_call 245} GUID_ALLOW_DISPLAY_REQUIRED__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ALLOW_DISPLAY_REQUIRED__Loc == GUID_ALLOW_DISPLAY_REQUIRED;
    assume GUID_ALLOW_DISPLAY_REQUIRED != 0;
    call {:si_unique_call 246} GUID_UNATTEND_SLEEP_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_UNATTEND_SLEEP_TIMEOUT__Loc == GUID_UNATTEND_SLEEP_TIMEOUT;
    assume GUID_UNATTEND_SLEEP_TIMEOUT != 0;
    call {:si_unique_call 247} GUID_INTSTEER_MODE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_INTSTEER_MODE__Loc == GUID_INTSTEER_MODE;
    assume GUID_INTSTEER_MODE != 0;
    call {:si_unique_call 248} GUID_IDLE_RESILIENCY_PLATFORM_STATE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_IDLE_RESILIENCY_PLATFORM_STATE__Loc == GUID_IDLE_RESILIENCY_PLATFORM_STATE;
    assume GUID_IDLE_RESILIENCY_PLATFORM_STATE != 0;
    call {:si_unique_call 249} GUID_CRITICAL_POWER_TRANSITION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_CRITICAL_POWER_TRANSITION__Loc == GUID_CRITICAL_POWER_TRANSITION;
    assume GUID_CRITICAL_POWER_TRANSITION != 0;
    call {:si_unique_call 250} GUID_PROCESSOR_PERF_INCREASE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_INCREASE_THRESHOLD__Loc == GUID_PROCESSOR_PERF_INCREASE_THRESHOLD;
    assume GUID_PROCESSOR_PERF_INCREASE_THRESHOLD != 0;
    call {:si_unique_call 251} GUID_BACKGROUND_TASK_NOTIFICATION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BACKGROUND_TASK_NOTIFICATION__Loc == GUID_BACKGROUND_TASK_NOTIFICATION;
    assume GUID_BACKGROUND_TASK_NOTIFICATION != 0;
    call {:si_unique_call 252} GUID_SLEEP_IDLE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SLEEP_IDLE_THRESHOLD__Loc == GUID_SLEEP_IDLE_THRESHOLD;
    assume GUID_SLEEP_IDLE_THRESHOLD != 0;
    call {:si_unique_call 253} GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY__Loc == GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY;
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY != 0;
    call {:si_unique_call 254} GUID_PROCESSOR_PERF_HISTORY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_HISTORY__Loc == GUID_PROCESSOR_PERF_HISTORY;
    assume GUID_PROCESSOR_PERF_HISTORY != 0;
    call {:si_unique_call 255} GUID_PROCESSOR_IDLE_STATE_MAXIMUM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_STATE_MAXIMUM__Loc == GUID_PROCESSOR_IDLE_STATE_MAXIMUM;
    assume GUID_PROCESSOR_IDLE_STATE_MAXIMUM != 0;
    call {:si_unique_call 256} GUID_VIDEO_ANNOYANCE_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_ANNOYANCE_TIMEOUT__Loc == GUID_VIDEO_ANNOYANCE_TIMEOUT;
    assume GUID_VIDEO_ANNOYANCE_TIMEOUT != 0;
    call {:si_unique_call 257} GUID_BATTERY_DISCHARGE_FLAGS_3__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_FLAGS_3__Loc == GUID_BATTERY_DISCHARGE_FLAGS_3;
    assume GUID_BATTERY_DISCHARGE_FLAGS_3 != 0;
    call {:si_unique_call 258} GUID_PROCESSOR_THROTTLE_MAXIMUM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_THROTTLE_MAXIMUM__Loc == GUID_PROCESSOR_THROTTLE_MAXIMUM;
    assume GUID_PROCESSOR_THROTTLE_MAXIMUM != 0;
    call {:si_unique_call 259} GUID_PROCESSOR_CORE_PARKING_MAX_CORES__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_MAX_CORES__Loc == GUID_PROCESSOR_CORE_PARKING_MAX_CORES;
    assume GUID_PROCESSOR_CORE_PARKING_MAX_CORES != 0;
    call {:si_unique_call 260} GUID_PROCESSOR_PARKING_PERF_STATE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PARKING_PERF_STATE__Loc == GUID_PROCESSOR_PARKING_PERF_STATE;
    assume GUID_PROCESSOR_PARKING_PERF_STATE != 0;
    call {:si_unique_call 261} GUID_PROCESSOR_PERF_DECREASE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_DECREASE_POLICY__Loc == GUID_PROCESSOR_PERF_DECREASE_POLICY;
    assume GUID_PROCESSOR_PERF_DECREASE_POLICY != 0;
    call {:si_unique_call 262} GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE__Loc == GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE;
    assume GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE != 0;
    call {:si_unique_call 263} GUID_VIDEO_ADAPTIVE_POWERDOWN__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_ADAPTIVE_POWERDOWN__Loc == GUID_VIDEO_ADAPTIVE_POWERDOWN;
    assume GUID_VIDEO_ADAPTIVE_POWERDOWN != 0;
    call {:si_unique_call 264} GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD__Loc == GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD;
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD != 0;
    call {:si_unique_call 265} GUID_MIN_POWER_SAVINGS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_MIN_POWER_SAVINGS__Loc == GUID_MIN_POWER_SAVINGS;
    assume GUID_MIN_POWER_SAVINGS != 0;
    call {:si_unique_call 266} GUID_VIDEO_CONSOLE_LOCK_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_CONSOLE_LOCK_TIMEOUT__Loc == GUID_VIDEO_CONSOLE_LOCK_TIMEOUT;
    assume GUID_VIDEO_CONSOLE_LOCK_TIMEOUT != 0;
    call {:si_unique_call 267} GUID_ALLOW_STANDBY_STATES__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ALLOW_STANDBY_STATES__Loc == GUID_ALLOW_STANDBY_STATES;
    assume GUID_ALLOW_STANDBY_STATES != 0;
    call {:si_unique_call 268} GUID_PROCESSOR_PERF_LATENCY_HINT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_LATENCY_HINT__Loc == GUID_PROCESSOR_PERF_LATENCY_HINT;
    assume GUID_PROCESSOR_PERF_LATENCY_HINT != 0;
    call {:si_unique_call 269} GUID_STANDBY_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_STANDBY_TIMEOUT__Loc == GUID_STANDBY_TIMEOUT;
    assume GUID_STANDBY_TIMEOUT != 0;
    call {:si_unique_call 270} GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD__Loc == GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD;
    assume GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD != 0;
    call {:si_unique_call 271} GUID_DEVICE_IDLE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICE_IDLE_POLICY__Loc == GUID_DEVICE_IDLE_POLICY;
    assume GUID_DEVICE_IDLE_POLICY != 0;
    call {:si_unique_call 272} GUID_PROCESSOR_PERFSTATE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERFSTATE_POLICY__Loc == GUID_PROCESSOR_PERFSTATE_POLICY;
    assume GUID_PROCESSOR_PERFSTATE_POLICY != 0;
    call {:si_unique_call 273} GUID_PROCESSOR_PERF_BOOST_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_BOOST_POLICY__Loc == GUID_PROCESSOR_PERF_BOOST_POLICY;
    assume GUID_PROCESSOR_PERF_BOOST_POLICY != 0;
    call {:si_unique_call 274} GUID_SESSION_USER_PRESENCE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SESSION_USER_PRESENCE__Loc == GUID_SESSION_USER_PRESENCE;
    assume GUID_SESSION_USER_PRESENCE != 0;
    call {:si_unique_call 275} GUID_LIDCLOSE_ACTION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LIDCLOSE_ACTION__Loc == GUID_LIDCLOSE_ACTION;
    assume GUID_LIDCLOSE_ACTION != 0;
    call {:si_unique_call 276} GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS__Loc == GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS;
    assume GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS != 0;
    call {:si_unique_call 277} GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT__Loc == GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT;
    assume GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT != 0;
    call {:si_unique_call 278} GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD__Loc == GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD;
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD != 0;
    call {:si_unique_call 279} GUID_SLEEP_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SLEEP_SUBGROUP__Loc == GUID_SLEEP_SUBGROUP;
    assume GUID_SLEEP_SUBGROUP != 0;
    call {:si_unique_call 280} GUID_BATTERY_DISCHARGE_ACTION_1__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_ACTION_1__Loc == GUID_BATTERY_DISCHARGE_ACTION_1;
    assume GUID_BATTERY_DISCHARGE_ACTION_1 != 0;
    call {:si_unique_call 281} GUID_PROCESSOR_PERF_INCREASE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_INCREASE_POLICY__Loc == GUID_PROCESSOR_PERF_INCREASE_POLICY;
    assume GUID_PROCESSOR_PERF_INCREASE_POLICY != 0;
    call {:si_unique_call 282} GUID_VIDEO_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_SUBGROUP__Loc == GUID_VIDEO_SUBGROUP;
    assume GUID_VIDEO_SUBGROUP != 0;
    call {:si_unique_call 283} GUID_PROCESSOR_PERF_DECREASE_TIME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_DECREASE_TIME__Loc == GUID_PROCESSOR_PERF_DECREASE_TIME;
    assume GUID_PROCESSOR_PERF_DECREASE_TIME != 0;
    call {:si_unique_call 284} GUID_MAX_POWER_SAVINGS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_MAX_POWER_SAVINGS__Loc == GUID_MAX_POWER_SAVINGS;
    assume GUID_MAX_POWER_SAVINGS != 0;
    call {:si_unique_call 285} GUID_TYPICAL_POWER_SAVINGS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TYPICAL_POWER_SAVINGS__Loc == GUID_TYPICAL_POWER_SAVINGS;
    assume GUID_TYPICAL_POWER_SAVINGS != 0;
    call {:si_unique_call 286} GUID_HIBERNATE_FASTS4_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_HIBERNATE_FASTS4_POLICY__Loc == GUID_HIBERNATE_FASTS4_POLICY;
    assume GUID_HIBERNATE_FASTS4_POLICY != 0;
    call {:si_unique_call 287} GUID_BATTERY_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_SUBGROUP__Loc == GUID_BATTERY_SUBGROUP;
    assume GUID_BATTERY_SUBGROUP != 0;
    call {:si_unique_call 288} GUID_PROCESSOR_PERF_DECREASE_HISTORY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_DECREASE_HISTORY__Loc == GUID_PROCESSOR_PERF_DECREASE_HISTORY;
    assume GUID_PROCESSOR_PERF_DECREASE_HISTORY != 0;
    call {:si_unique_call 289} GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR__Loc == GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR;
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR != 0;
    call {:si_unique_call 290} GUID_PROCESSOR_SETTINGS_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_SETTINGS_SUBGROUP__Loc == GUID_PROCESSOR_SETTINGS_SUBGROUP;
    assume GUID_PROCESSOR_SETTINGS_SUBGROUP != 0;
    call {:si_unique_call 291} GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS__Loc == GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS;
    assume GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS != 0;
    call {:si_unique_call 292} GUID_IDLE_BACKGROUND_TASK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_IDLE_BACKGROUND_TASK__Loc == GUID_IDLE_BACKGROUND_TASK;
    assume GUID_IDLE_BACKGROUND_TASK != 0;
    call {:si_unique_call 293} GUID_BATTERY_DISCHARGE_FLAGS_2__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_FLAGS_2__Loc == GUID_BATTERY_DISCHARGE_FLAGS_2;
    assume GUID_BATTERY_DISCHARGE_FLAGS_2 != 0;
    call {:si_unique_call 294} GUID_DISK_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DISK_SUBGROUP__Loc == GUID_DISK_SUBGROUP;
    assume GUID_DISK_SUBGROUP != 0;
    call {:si_unique_call 295} GUID_HIBERNATE_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_HIBERNATE_TIMEOUT__Loc == GUID_HIBERNATE_TIMEOUT;
    assume GUID_HIBERNATE_TIMEOUT != 0;
    call {:si_unique_call 296} GUID_POWERSCHEME_PERSONALITY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWERSCHEME_PERSONALITY__Loc == GUID_POWERSCHEME_PERSONALITY;
    assume GUID_POWERSCHEME_PERSONALITY != 0;
    call {:si_unique_call 297} GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME__Loc == GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME;
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME != 0;
    call {:si_unique_call 298} GUID_BATTERY_DISCHARGE_LEVEL_1__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_LEVEL_1__Loc == GUID_BATTERY_DISCHARGE_LEVEL_1;
    assume GUID_BATTERY_DISCHARGE_LEVEL_1 != 0;
    call {:si_unique_call 299} GUID_BATTERY_DISCHARGE_ACTION_0__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_ACTION_0__Loc == GUID_BATTERY_DISCHARGE_ACTION_0;
    assume GUID_BATTERY_DISCHARGE_ACTION_0 != 0;
    call {:si_unique_call 300} GUID_IDLE_RESILIENCY_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_IDLE_RESILIENCY_SUBGROUP__Loc == GUID_IDLE_RESILIENCY_SUBGROUP;
    assume GUID_IDLE_RESILIENCY_SUBGROUP != 0;
    call {:si_unique_call 301} GUID_ENABLE_SWITCH_FORCED_SHUTDOWN__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ENABLE_SWITCH_FORCED_SHUTDOWN__Loc == GUID_ENABLE_SWITCH_FORCED_SHUTDOWN;
    assume GUID_ENABLE_SWITCH_FORCED_SHUTDOWN != 0;
    call {:si_unique_call 302} GUID_BATTERY_DISCHARGE_ACTION_3__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_ACTION_3__Loc == GUID_BATTERY_DISCHARGE_ACTION_3;
    assume GUID_BATTERY_DISCHARGE_ACTION_3 != 0;
    call {:si_unique_call 303} GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING__Loc == GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING;
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING != 0;
    call {:si_unique_call 304} GUID_INTSTEER_LOAD_PER_PROC_TRIGGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_INTSTEER_LOAD_PER_PROC_TRIGGER__Loc == GUID_INTSTEER_LOAD_PER_PROC_TRIGGER;
    assume GUID_INTSTEER_LOAD_PER_PROC_TRIGGER != 0;
    call {:si_unique_call 305} GUID_PROCESSOR_PERF_DECREASE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_DECREASE_THRESHOLD__Loc == GUID_PROCESSOR_PERF_DECREASE_THRESHOLD;
    assume GUID_PROCESSOR_PERF_DECREASE_THRESHOLD != 0;
    call {:si_unique_call 306} GUID_BATTERY_DISCHARGE_LEVEL_0__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_LEVEL_0__Loc == GUID_BATTERY_DISCHARGE_LEVEL_0;
    assume GUID_BATTERY_DISCHARGE_LEVEL_0 != 0;
    call {:si_unique_call 307} GUID_PROCESSOR_CORE_PARKING_MIN_CORES__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_MIN_CORES__Loc == GUID_PROCESSOR_CORE_PARKING_MIN_CORES;
    assume GUID_PROCESSOR_CORE_PARKING_MIN_CORES != 0;
    call {:si_unique_call 308} GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD__Loc == GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD;
    assume GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD != 0;
    call {:si_unique_call 309} GUID_VIDEO_DIM_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_DIM_TIMEOUT__Loc == GUID_VIDEO_DIM_TIMEOUT;
    assume GUID_VIDEO_DIM_TIMEOUT != 0;
    call {:si_unique_call 310} GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD__Loc == GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD;
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD != 0;
    call {:si_unique_call 311} GUID_ACTIVE_POWERSCHEME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACTIVE_POWERSCHEME__Loc == GUID_ACTIVE_POWERSCHEME;
    assume GUID_ACTIVE_POWERSCHEME != 0;
    call {:si_unique_call 312} GUID_SYSTEM_AWAYMODE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SYSTEM_AWAYMODE__Loc == GUID_SYSTEM_AWAYMODE;
    assume GUID_SYSTEM_AWAYMODE != 0;
    call {:si_unique_call 313} GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR__Loc == GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR;
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR != 0;
    call {:si_unique_call 314} GUID_PROCESSOR_PERF_TIME_CHECK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_TIME_CHECK__Loc == GUID_PROCESSOR_PERF_TIME_CHECK;
    assume GUID_PROCESSOR_PERF_TIME_CHECK != 0;
    call {:si_unique_call 315} GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING__Loc == GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING;
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING != 0;
    call {:si_unique_call 316} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 317} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 318} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 319} boogieTmp := __HAVOC_malloc_or_null(4);
    sdv_context := boogieTmp;
    call {:si_unique_call 320} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 321} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerNotPresent == boogieTmp;
    call {:si_unique_call 322} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerEnabled == boogieTmp;
    call {:si_unique_call 323} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 324} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 325} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 326} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 327} boogieTmp := __HAVOC_malloc_or_null(240);
    assume sicrni == boogieTmp;
    call {:si_unique_call 328} vslice_dummy_var_2016 := __HAVOC_malloc(96);
    call {:si_unique_call 329} vslice_dummy_var_2017 := __HAVOC_malloc(96);
    assume {:mainInitDone} true;
    call {:si_unique_call 330} corralExtraInit();
    call {:si_unique_call 331} corralExplainErrorInit();
    call {:si_unique_call 332} _sdv_init9();
    call {:si_unique_call 333} _sdv_init1();
    call {:si_unique_call 334} _sdv_init4();
    call {:si_unique_call 335} _sdv_init5();
    call {:si_unique_call 336} _sdv_init3();
    call {:si_unique_call 337} _sdv_init6();
    call {:si_unique_call 338} _sdv_init7();
    call {:si_unique_call 339} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_116 := 0;
    goto L32;

  L32:
    assume Tmp_116 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_118 := 0;
    goto L36;

  L36:
    assume Tmp_118 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 340} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L30;

  L30:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L30;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_118 := 1;
    goto L36;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_116 := 1;
    goto L32;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int)
{
  var {:pointer} pirp_8: int;
  var vslice_dummy_var_32: int;

  anon0:
    call {:si_unique_call 341} vslice_dummy_var_32 := __HAVOC_malloc(4);
    pirp_8 := actual_pirp_8;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_8 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_8 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_8 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_8 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end()
{
  var vslice_dummy_var_33: int;

  anon0:
    call {:si_unique_call 342} vslice_dummy_var_33 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_8: int) returns (Tmp_123: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_8: int) returns (Tmp_123: int)
{
  var {:pointer} sdv_61: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 343} sdv_61 := __HAVOC_malloc(1);
    Tmp_123 := sdv_61;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_123 := 0;
    goto L1;
}



procedure {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_125: int);
  free ensures {:va_keep} Tmp_125 == 0 || Tmp_125 == actual_TargetDevice_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_125: int)
{
  var {:pointer} TargetDevice_1: int;

  anon0:
    TargetDevice_1 := actual_TargetDevice_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} TargetDevice_1 == sdv_p_devobj_pdo;
    Tmp_125 := TargetDevice_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} TargetDevice_1 != sdv_p_devobj_pdo;
    Tmp_125 := 0;
    goto L1;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_1: int)
{
  var vslice_dummy_var_34: int;

  anon0:
    call {:si_unique_call 344} vslice_dummy_var_34 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_9: int) returns (Tmp_129: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, thread_status, return_state, lowerDriverFailed, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, yogi_error, Mem_T.PendingReturned__IRP, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, irp_copy_next, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_9: int) returns (Tmp_129: int)
{
  var {:pointer} ps: int;
  var {:scalar} status_3: int;
  var {:pointer} po: int;
  var {:pointer} pirp_9: int;

  anon0:
    po := actual_po;
    pirp_9 := actual_pirp_9;
    status_3 := 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    havoc ps;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(pirp_9))] := 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    call {:si_unique_call 345} sdv_SetStatus(pirp_9);
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(ps)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_harnessStackLocation)] := 0;
    call {:si_unique_call 346} sdv_stub_dispatch_begin();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume pirp_9 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 347} SLIC_Av_Pnp_entry(0, pirp_9);
    goto L32;

  L32:
    call {:si_unique_call 348} status_3 := Av_Pnp(po, pirp_9);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume pirp_9 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 349} SLIC_sdv_stub_dispatch_end_entry(strConst__li2bpl1, status_3, pirp_9);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L35;

  L35:
    call {:si_unique_call 350} sdv_stub_dispatch_end(status_3, 0);
    Tmp_129 := status_3;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume !(pirp_9 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L35;

  anon7_Then:
    assume !(pirp_9 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L32;
}



procedure {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl: int)
{
  var vslice_dummy_var_35: int;

  anon0:
    call {:si_unique_call 351} vslice_dummy_var_35 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_133: int);
  free ensures {:va_keep} Tmp_133 == 0 || Tmp_133 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_133: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_133 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_133 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_36: int;

  anon0:
    call {:si_unique_call 352} vslice_dummy_var_36 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init7"} {:osmodel} _sdv_init7();
  modifies alloc, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init7"} {:osmodel} _sdv_init7()
{
  var vslice_dummy_var_37: int;

  anon0:
    call {:si_unique_call 353} vslice_dummy_var_37 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    sdv_invoke_on_success := 0;
    sdv_invoke_on_error := 0;
    sdv_invoke_on_cancel := 0;
    assume p_sdv_fx_dev_object == sdv_fx_dev_object;
    sdv_compFset := 0;
    assume sdv_isr_routine == li2bplFunctionConstant723;
    assume sdv_ke_dpc == li2bplFunctionConstant725;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant728;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "ZwCreateKey"} {:osmodel} ZwCreateKey(actual_KeyHandle: int, actual_DesiredAccess: int, actual_ObjectAttributes: int, actual_TitleIndex: int, actual_Class: int, actual_CreateOptions: int, actual_Disposition: int) returns (Tmp_139: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_139 == 0 || Tmp_139 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ZwCreateKey"} {:osmodel} ZwCreateKey(actual_KeyHandle: int, actual_DesiredAccess: int, actual_ObjectAttributes: int, actual_TitleIndex: int, actual_Class: int, actual_CreateOptions: int, actual_Disposition: int) returns (Tmp_139: int)
{
  var {:pointer} sdv_65: int;
  var {:pointer} KeyHandle: int;

  anon0:
    KeyHandle := actual_KeyHandle;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 354} sdv_65 := __HAVOC_malloc(4);
    assume {:nonnull} KeyHandle != 0;
    assume KeyHandle > 0;
    Tmp_139 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} KeyHandle != 0;
    assume KeyHandle > 0;
    Tmp_139 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_10: int)
{
  var vslice_dummy_var_38: int;

  anon0:
    call {:si_unique_call 355} vslice_dummy_var_38 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInterlockedInsertTailList"} {:osmodel} sdv_ExInterlockedInsertTailList(actual_ListHead: int, actual_ListEntry: int, actual_Lock_1: int) returns (Tmp_143: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ExInterlockedInsertTailList"} {:osmodel} sdv_ExInterlockedInsertTailList(actual_ListHead: int, actual_ListEntry: int, actual_Lock_1: int) returns (Tmp_143: int)
{
  var {:pointer} sdv_67: int;
  var {:pointer} p_2: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 356} sdv_67 := __HAVOC_malloc(1);
    p_2 := sdv_67;
    Tmp_143 := p_2;
    goto L1;

  L1:
    return;

  anon3_Then:
    p_2 := 0;
    Tmp_143 := p_2;
    goto L1;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_11: int) returns (Tmp_145: int);
  modifies Mem_T.PendingReturned__IRP, alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, irp_copy_next, thread_status, return_state, lowerDriverFailed, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, yogi_error, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_11: int) returns (Tmp_145: int)
{
  var {:pointer} ps_1: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_146: int;
  var {:scalar} sdv_76: int;
  var {:scalar} Tmp_148: int;
  var {:scalar} status_4: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_11: int;

  anon0:
    po_1 := actual_po_1;
    pirp_11 := actual_pirp_11;
    status_4 := 0;
    minor := sdv_76;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    havoc ps_1;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(pirp_11)] := 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    call {:si_unique_call 357} sdv_SetStatus(pirp_11);
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(ps_1)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_harnessStackLocation)] := 0;
    call {:si_unique_call 358} sdv_stub_dispatch_begin();
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto L60;

  L60:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    Tmp_146 := 0;
    goto L215;

  L215:
    assume Tmp_146 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L66;

  L66:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 359} SLIC_Av_Pnp_entry(0, pirp_11);
    goto L179;

  L179:
    call {:si_unique_call 360} status_4 := Av_Pnp(po_1, pirp_11);
    goto L72;

  L72:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 361} SLIC_sdv_stub_dispatch_end_entry(strConst__li2bpl1, status_4, pirp_11);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto L176;

  L176:
    call {:si_unique_call 362} sdv_stub_dispatch_end(status_4, 0);
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    Tmp_145 := status_4;
    goto LM2;

  LM2:
    return;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L176;

  anon54_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L179;

  anon52_Then:
    goto L66;

  anon53_Then:
    Tmp_146 := 1;
    goto L215;

  anon51_Then:
    goto L61;

  anon72_Then:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    Tmp_148 := 0;
    goto L220;

  L220:
    assume Tmp_148 != 0;
    goto L60;

  anon50_Then:
    Tmp_148 := 1;
    goto L220;

  anon56_Then:
    call {:si_unique_call 363} status_4 := sdv_DoNothing();
    goto L72;

  anon57_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 364} status_4 := Av_SysControl(po_1, pirp_11);
    goto L72;

  anon58_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 365} sdv_SetPowerIrpMinorFunction(pirp_11);
    call {:si_unique_call 366} status_4 := Av_Power(po_1, pirp_11);
    goto L72;

  anon59_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 367} status_4 := sdv_DoNothing();
    goto L72;

  anon60_Then:
    call {:si_unique_call 368} status_4 := sdv_DoNothing();
    goto L72;

  anon61_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 369} status_4 := sdv_DoNothing();
    goto L72;

  anon62_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 370} status_4 := Av_IoControl(po_1, pirp_11);
    goto L72;

  anon63_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 371} status_4 := Av_IoControl(po_1, pirp_11);
    goto L72;

  anon64_Then:
    call {:si_unique_call 372} status_4 := sdv_DoNothing();
    goto L72;

  anon65_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 373} status_4 := sdv_DoNothing();
    goto L72;

  anon66_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 374} status_4 := sdv_DoNothing();
    goto L72;

  anon67_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 375} status_4 := sdv_DoNothing();
    goto L72;

  anon68_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 376} status_4 := sdv_DoNothing();
    goto L72;

  anon69_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 377} status_4 := sdv_DoNothing();
    goto L72;

  anon70_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 378} status_4 := Av_Close(po_1, pirp_11);
    goto L72;

  anon49_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 379} status_4 := Av_Create(po_1, pirp_11);
    goto L72;
}



procedure {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int)
{
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 380} vslice_dummy_var_39 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName: int) returns (Tmp_151: int);
  free ensures {:va_keep} Tmp_151 == -1073741823 || Tmp_151 == -1073741808 || Tmp_151 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName: int) returns (Tmp_151: int)
{
  var {:scalar} Tmp_152: int;
  var {:pointer} SymbolicLinkName: int;

  anon0:
    SymbolicLinkName := actual_SymbolicLinkName;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_151 := -1073741823;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_151 := -1073741808;
    goto L1;

  anon7_Then:
    assume {:nonnull} SymbolicLinkName != 0;
    assume SymbolicLinkName > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_152 := 0;
    goto L22;

  L22:
    assume Tmp_152 != 0;
    Tmp_151 := 0;
    goto L1;

  anon8_Then:
    Tmp_152 := 1;
    goto L22;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_40: int;

  anon0:
    call {:si_unique_call 381} vslice_dummy_var_40 := __HAVOC_malloc(4);
    new := actual_new;
    return;
}



procedure {:origName "IoReuseIrp"} {:osmodel} IoReuseIrp(actual_Irp_9: int, actual_Status_1: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoReuseIrp"} {:osmodel} IoReuseIrp(actual_Irp_9: int, actual_Status_1: int)
{
  var {:pointer} Irp_9: int;
  var {:scalar} Status_1: int;
  var vslice_dummy_var_41: int;

  anon0:
    call {:si_unique_call 382} vslice_dummy_var_41 := __HAVOC_malloc(4);
    Irp_9 := actual_Irp_9;
    Status_1 := actual_Status_1;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_9))] := Status_1;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_12: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_12: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_42: int;

  anon0:
    call {:si_unique_call 383} vslice_dummy_var_42 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int, actual_AllocateDestinationString: int) returns (Tmp_160: int);
  free ensures {:va_keep} Tmp_160 == 0 || Tmp_160 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int, actual_AllocateDestinationString: int) returns (Tmp_160: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_160 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_160 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_2: int)
{
  var vslice_dummy_var_43: int;

  anon0:
    call {:si_unique_call 384} vslice_dummy_var_43 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle_1: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength_1: int) returns (Tmp_164: int);
  free ensures {:va_keep} Tmp_164 == -1073741811 || Tmp_164 == -1073741823 || Tmp_164 == 0 || Tmp_164 == 5 || Tmp_164 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle_1: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength_1: int) returns (Tmp_164: int)
{
  var {:scalar} L_1: int;
  var {:scalar} sdv_89: int;
  var {:scalar} Length_3: int;
  var {:pointer} ResultLength_1: int;

  anon0:
    Length_3 := actual_Length_3;
    ResultLength_1 := actual_ResultLength_1;
    L_1 := sdv_89;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L_1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L_1 == 0;
    Tmp_164 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L_1 != 0;
    Tmp_164 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L_1 == Length_3;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_3 != 0;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Tmp_164 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_3 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L_1 > Length_3;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Tmp_164 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_3 >= L_1;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Tmp_164 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L_1 != Length_3;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_44: int;

  anon0:
    call {:si_unique_call 385} vslice_dummy_var_44 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_2: int) returns (Tmp_170: int);
  free ensures {:va_keep} Tmp_170 == -1073741823 || Tmp_170 == -1073741738 || Tmp_170 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_2: int) returns (Tmp_170: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_170 := -1073741823;
    goto L1;

  L1:
    return;

  anon5_Then:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_170 := -1073741738;
    goto L1;

  anon6_Then:
    Tmp_170 := 0;
    goto L1;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_45: int;

  anon0:
    call {:si_unique_call 386} vslice_dummy_var_45 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int)
{
  var vslice_dummy_var_46: int;

  anon0:
    call {:si_unique_call 387} vslice_dummy_var_46 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_1: int) returns (Tmp_176: int);
  free ensures {:va_keep} Tmp_176 == 1 || Tmp_176 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_1: int) returns (Tmp_176: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_176 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_176 := 0;
    goto L1;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize_1: int, actual_ChargeQuota_1: int) returns (Tmp_178: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize_1: int, actual_ChargeQuota_1: int) returns (Tmp_178: int)
{
  var {:pointer} irpSp_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(sdv_other_irp)] := 0;
    call {:si_unique_call 388} irpSp_1 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpSp_1)] := 0;
    sdv_compFset := 0;
    Tmp_178 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_178 := 0;
    goto L1;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_182: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_182: int)
{
  var {:scalar} p_4: int;

  anon0:
    Tmp_182 := p_4;
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_3: int, actual_Type_1: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_3: int, actual_Type_1: int, actual_State_1: int)
{
  var {:pointer} Event_3: int;
  var {:scalar} Type_1: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_47: int;

  anon0:
    call {:si_unique_call 389} vslice_dummy_var_47 := __HAVOC_malloc(4);
    Event_3 := actual_Event_3;
    Type_1 := actual_Type_1;
    State_1 := actual_State_1;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_48: int;

  anon0:
    call {:si_unique_call 390} vslice_dummy_var_48 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_13: int)
{
  var vslice_dummy_var_49: int;

  anon0:
    call {:si_unique_call 391} vslice_dummy_var_49 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int)
{
  var {:pointer} SpinLock_2: int;
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 392} vslice_dummy_var_50 := __HAVOC_malloc(4);
    SpinLock_2 := actual_SpinLock_2;
    assume {:nonnull} SpinLock_2 != 0;
    assume SpinLock_2 > 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_3: int) returns (Tmp_196: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_3: int) returns (Tmp_196: int)
{
  var {:pointer} sdv_109: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 393} sdv_109 := __HAVOC_malloc(NumberOfBytes);
    Tmp_196 := sdv_109;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_196 := 0;
    goto L1;
}



procedure {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int)
{
  var {:pointer} pdrivo: int;
  var vslice_dummy_var_51: int;

  anon0:
    call {:si_unique_call 394} vslice_dummy_var_51 := __HAVOC_malloc(4);
    pdrivo := actual_pdrivo;
    call {:si_unique_call 395} Av_Unload(pdrivo);
    return;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_52: int;

  anon0:
    call {:si_unique_call 396} vslice_dummy_var_52 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 397} vslice_dummy_var_53 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_14: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_204: int);
  free ensures {:va_keep} Tmp_204 == -1073741811 || Tmp_204 == -1073741808 || Tmp_204 == -1073741823 || Tmp_204 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_14: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_204: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_204 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_204 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_204 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_204 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_206: int);
  free ensures {:va_keep} Tmp_206 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_206: int)
{

  anon0:
    Tmp_206 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_208: int);
  free ensures {:va_keep} Tmp_208 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_208: int)
{

  anon0:
    Tmp_208 := -1073741823;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_210: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_210: int)
{
  var {:pointer} sdv_112: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 398} sdv_112 := __HAVOC_malloc(1);
    Tmp_210 := sdv_112;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_210 := 0;
    goto L1;
}



procedure {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller: int);
  modifies thread_status;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 1;
  free ensures {:va_keep} thread_status == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller: int)
{

  anon0:
    thread_status := 0;
    return;
}



procedure {:origName "SLIC_sdv_IoSetCompletionRoutine_entry"} {:osmodel} SLIC_sdv_IoSetCompletionRoutine_entry(actual_caller_1: int);
  modifies irp_status;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 0;
  free ensures {:va_keep} irp_status == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoSetCompletionRoutine_entry"} {:osmodel} SLIC_sdv_IoSetCompletionRoutine_entry(actual_caller_1: int)
{

  anon0:
    irp_status := 1;
    return;
}



procedure {:origName "SLIC_PoCallDriver_entry"} {:osmodel} SLIC_PoCallDriver_entry(actual_caller_2: int);
  modifies thread_status;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 1;
  free ensures {:va_keep} thread_status == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_PoCallDriver_entry"} {:osmodel} SLIC_PoCallDriver_entry(actual_caller_2: int)
{

  anon0:
    thread_status := 0;
    return;
}



procedure {:origName "SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry"} {:osmodel} SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry(actual_caller_4: int);
  modifies irp_copy_next;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 1;
  free ensures {:va_keep} irp_copy_next == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry"} {:osmodel} SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry(actual_caller_4: int)
{

  anon0:
    irp_copy_next := 0;
    return;
}



procedure {:origName "SLIC_ABORT_14_0"} SLIC_ABORT_14_0(actual_caller_5: int, actual_sdv_113: int, actual_sdv_114: int);
  modifies yogi_error;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 2 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_ABORT_14_0"} SLIC_ABORT_14_0(actual_caller_5: int, actual_sdv_113: int, actual_sdv_114: int)
{
  var {:pointer} caller_5: int;
  var {:scalar} sdv_113: int;
  var {:pointer} sdv_114: int;

  anon0:
    caller_5 := actual_caller_5;
    sdv_113 := actual_sdv_113;
    sdv_114 := actual_sdv_114;
    call {:si_unique_call 399} SLIC_ERROR_ROUTINE(strConst__li2bpl2);
    return;
}



procedure {:origName "SLIC_ABORT_14_2"} SLIC_ABORT_14_2(actual_caller_6: int, actual_sdv_115: int, actual_sdv_116: int);
  modifies yogi_error;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 2 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_ABORT_14_2"} SLIC_ABORT_14_2(actual_caller_6: int, actual_sdv_115: int, actual_sdv_116: int)
{
  var {:pointer} caller_6: int;
  var {:scalar} sdv_115: int;
  var {:pointer} sdv_116: int;

  anon0:
    caller_6 := actual_caller_6;
    sdv_115 := actual_sdv_115;
    sdv_116 := actual_sdv_116;
    call {:si_unique_call 400} SLIC_ERROR_ROUTINE(strConst__li2bpl3);
    return;
}



procedure {:origName "SLIC_Av_Pnp_entry"} {:osmodel} SLIC_Av_Pnp_entry(actual_caller_7: int, actual_Av: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_Av_Pnp_entry"} {:osmodel} SLIC_Av_Pnp_entry(actual_caller_7: int, actual_Av: int)
{
  var {:pointer} Tmp_212: int;
  var {:pointer} Tmp_213: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} Av: int;

  anon0:
    Av := actual_Av;
    assume {:nonnull} Av != 0;
    assume Av > 0;
    havoc Tmp_212;
    assume {:nonnull} Av != 0;
    assume Av > 0;
    havoc Tmp_213;
    assume {:nonnull} Av != 0;
    assume Av > 0;
    havoc Tmp_214;
    assume {:nonnull} Tmp_214 != 0;
    assume Tmp_214 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Tmp_213 != 0;
    assume Tmp_213 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L4;

  L4:
    call {:si_unique_call 401} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    goto L2;

  L2:
    return;

  anon8_Then:
    goto L2;

  anon7_Then:
    goto L4;

  anon9_Then:
    goto L2;
}



procedure {:origName "SLIC_sdv_stub_dispatch_end_entry"} {:osmodel} SLIC_sdv_stub_dispatch_end_entry(actual_caller_8: int, actual_sdv_117: int, actual_sdv_118: int);
  modifies yogi_error;
  free ensures {:va_keep} old(return_state) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 2 ==> yogi_error == 0;
  free ensures {:va_keep} old(return_state) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_stub_dispatch_end_entry"} {:osmodel} SLIC_sdv_stub_dispatch_end_entry(actual_caller_8: int, actual_sdv_117: int, actual_sdv_118: int)
{
  var {:pointer} caller_8: int;
  var {:scalar} sdv_117: int;
  var {:pointer} sdv_118: int;

  anon0:
    caller_8 := actual_caller_8;
    sdv_117 := actual_sdv_117;
    sdv_118 := actual_sdv_118;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} return_state == 1;
    assume {:nonnull} sdv_118 != 0;
    assume sdv_118 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_118))] != 259;
    assume {:nonnull} sdv_118 != 0;
    assume sdv_118 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_118))] == 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} lowerDriverFailed != 1;
    goto L14;

  L14:
    assume {:nonnull} sdv_118 != 0;
    assume sdv_118 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_117 != Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_118))];
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} thread_status != 1;
    goto L13;

  L13:
    call {:si_unique_call 402} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} thread_status == 1;
    call {:si_unique_call 403} SLIC_ABORT_14_2(caller_8, sdv_117, sdv_118);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon19_Then:
    assume {:partition} sdv_117 == Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_118))];
    goto L13;

  anon23_Then:
    assume {:partition} lowerDriverFailed == 1;
    call {:si_unique_call 404} SLIC_ABORT_14_1(caller_8, sdv_117, sdv_118);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon26_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_118))] != 0;
    goto L14;

  anon21_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_118))] == 259;
    call {:si_unique_call 405} SLIC_ABORT_14_0(caller_8, sdv_117, sdv_118);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} return_state != 1;
    goto L2;
}



procedure {:origName "SLIC_PoCallDriver_exit"} {:osmodel} SLIC_PoCallDriver_exit(actual_caller_9: int, actual_PoCallDriver_1: int);
  modifies return_state, lowerDriverFailed;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 0;
  free ensures {:va_keep} return_state == 1 || return_state == 2;
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_PoCallDriver_exit"} {:osmodel} SLIC_PoCallDriver_exit(actual_caller_9: int, actual_PoCallDriver_1: int)
{
  var {:pointer} PoCallDriver_1: int;

  anon0:
    PoCallDriver_1 := actual_PoCallDriver_1;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} irp_status != 1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} irp_copy_next != 0;
    return_state := 1;
    goto L2;

  L2:
    return;

  anon13_Then:
    assume {:partition} irp_copy_next == 0;
    call {:si_unique_call 406} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    goto L2;

  anon14_Then:
    assume {:partition} irp_status == 1;
    assume {:nonnull} PoCallDriver_1 != 0;
    assume PoCallDriver_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 0 > Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(PoCallDriver_1))];
    assume {:nonnull} PoCallDriver_1 != 0;
    assume PoCallDriver_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(PoCallDriver_1)] != 0;
    goto L9;

  L9:
    assume {:nonnull} PoCallDriver_1 != 0;
    assume PoCallDriver_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(PoCallDriver_1)] == 0;
    call {:si_unique_call 407} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    goto L2;

  anon11_Then:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(PoCallDriver_1)] != 0;
    return_state := 2;
    goto L2;

  anon15_Then:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(PoCallDriver_1)] == 0;
    return_state := 1;
    lowerDriverFailed := 1;
    goto L2;

  anon12_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(PoCallDriver_1))] >= 0;
    goto L9;
}



procedure {:origName "SLIC_ABORT_14_1"} SLIC_ABORT_14_1(actual_caller_11: int, actual_sdv_119: int, actual_sdv_120: int);
  modifies yogi_error;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 2 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_ABORT_14_1"} SLIC_ABORT_14_1(actual_caller_11: int, actual_sdv_119: int, actual_sdv_120: int)
{
  var {:pointer} caller_11: int;
  var {:scalar} sdv_119: int;
  var {:pointer} sdv_120: int;

  anon0:
    caller_11 := actual_caller_11;
    sdv_119 := actual_sdv_119;
    sdv_120 := actual_sdv_120;
    call {:si_unique_call 408} SLIC_ERROR_ROUTINE(strConst__li2bpl5);
    return;
}



procedure {:origName "SLIC_sdv_IoMarkIrpPending_entry"} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_12: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoMarkIrpPending_entry"} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_12: int)
{

  anon0:
    call {:si_unique_call 409} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_sdv_IoCallDriver_exit"} {:osmodel} SLIC_sdv_IoCallDriver_exit(actual_caller_13: int, actual_sdv_121: int);
  modifies return_state, lowerDriverFailed;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 0;
  free ensures {:va_keep} return_state == 1 || return_state == 2;
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoCallDriver_exit"} {:osmodel} SLIC_sdv_IoCallDriver_exit(actual_caller_13: int, actual_sdv_121: int)
{
  var {:pointer} sdv_121: int;

  anon0:
    sdv_121 := actual_sdv_121;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} irp_status != 1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} irp_copy_next != 0;
    return_state := 1;
    goto L2;

  L2:
    return;

  anon13_Then:
    assume {:partition} irp_copy_next == 0;
    call {:si_unique_call 410} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    goto L2;

  anon14_Then:
    assume {:partition} irp_status == 1;
    assume {:nonnull} sdv_121 != 0;
    assume sdv_121 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 0 > Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_121))];
    assume {:nonnull} sdv_121 != 0;
    assume sdv_121 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(sdv_121)] != 0;
    goto L9;

  L9:
    assume {:nonnull} sdv_121 != 0;
    assume sdv_121 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(sdv_121)] == 0;
    call {:si_unique_call 411} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    goto L2;

  anon11_Then:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(sdv_121)] != 0;
    return_state := 2;
    goto L2;

  anon15_Then:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(sdv_121)] == 0;
    return_state := 1;
    lowerDriverFailed := 1;
    goto L2;

  anon12_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_121))] >= 0;
    goto L9;
}



procedure {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_14: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_14: int)
{

  anon0:
    call {:si_unique_call 412} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "_sdv_init9"} {:osmodel} _sdv_init9();
  modifies SLAM_guard_S_0, irp_copy_next, thread_status, irp_status, return_state, lowerDriverFailed, yogi_error;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} return_state == 0;
  free ensures {:va_keep} thread_status == 0;
  free ensures {:va_keep} lowerDriverFailed == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} irp_status == 0;
  free ensures {:va_keep} irp_copy_next == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init9"} {:osmodel} _sdv_init9()
{

  anon0:
    SLAM_guard_S_0 := SLAM_guard_S_0_init;
    irp_copy_next := 1;
    thread_status := 0;
    irp_status := 0;
    return_state := 0;
    lowerDriverFailed := 0;
    assume irpstatus == 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_KeWaitForSingleObject_exit"} {:osmodel} SLIC_KeWaitForSingleObject_exit(actual_caller_15: int, actual_KeWaitForSingleObject_1: int);
  modifies thread_status;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} thread_status == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_KeWaitForSingleObject_exit"} {:osmodel} SLIC_KeWaitForSingleObject_exit(actual_caller_15: int, actual_KeWaitForSingleObject_1: int)
{
  var {:scalar} KeWaitForSingleObject_1: int;

  anon0:
    KeWaitForSingleObject_1 := actual_KeWaitForSingleObject_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} KeWaitForSingleObject_1 == 0;
    thread_status := 1;
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} KeWaitForSingleObject_1 != 0;
    call {:si_unique_call 413} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    goto L2;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 2 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:origName "Av_FDO_StartDevice"} Av_FDO_StartDevice(actual_BusExtension_1: int, actual_Irp_13: int) returns (Tmp_215: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_FDO_StartDevice"} Av_FDO_StartDevice(actual_BusExtension_1: int, actual_Irp_13: int) returns (Tmp_215: int)
{
  var {:pointer} sdv_122: int;
  var {:pointer} sdv_131: int;
  var {:scalar} ntStatus_2: int;
  var {:scalar} Irql_1: int;
  var {:scalar} AdapterId: int;
  var {:pointer} AvAdapterData_1: int;
  var {:scalar} bFound: int;
  var {:pointer} AvOwner: int;
  var {:scalar} sdv_139: int;
  var {:pointer} Tmp_216: int;
  var {:pointer} BusExtension_1: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_2018: int;
  var vslice_dummy_var_2019: int;

  anon0:
    call {:si_unique_call 414} AdapterId := __HAVOC_malloc(20);
    BusExtension_1 := actual_BusExtension_1;
    Irp_13 := actual_Irp_13;
    ntStatus_2 := 0;
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    havoc vslice_dummy_var_2018;
    call {:si_unique_call 415} ntStatus_2 := Av_SubmitIrpSynch(vslice_dummy_var_2018, Irp_13, 0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} ntStatus_2 < 0;
    goto L18;

  L18:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} ntStatus_2 >= 0;
    goto L22;

  L22:
    Tmp_215 := ntStatus_2;
    return;

  anon53_Then:
    assume {:partition} 0 > ntStatus_2;
    call {:si_unique_call 416} vslice_dummy_var_54 := AvCmp_DestroyPlugs(BusExtension_1);
    goto L22;

  anon51_Then:
    assume {:partition} 0 <= ntStatus_2;
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    ntStatus_2 := 0;
    goto L18;

  anon52_Then:
    call {:si_unique_call 417} ntStatus_2 := Av1394_GetHostDDIVersion(BusExtension_1);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} ntStatus_2 >= 0;
    goto L26;

  L26:
    call {:si_unique_call 418} ntStatus_2 := Av1394_GetGenerationCount(BusExtension_1);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 419} ntStatus_2 := Av1394_GetHostCapabilities(BusExtension_1);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 420} ntStatus_2 := Av1394_GetDeviceSpeed(BusExtension_1);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 421} ntStatus_2 := Av1394_GetNodeID(BusExtension_1);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 422} ntStatus_2 := Av1394_GetLocalHostUniqueId(BusExtension_1, AdapterId);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} ntStatus_2 >= 0;
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L65;

  L65:
    AvAdapterData_1 := 0;
    bFound := 0;
    call {:si_unique_call 423} Tmp_216 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    call {:si_unique_call 424} sdv_KeAcquireSpinLock(0, Tmp_216);
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    havoc Irql_1;
    call {:si_unique_call 425} sdv_139 := sdv_IsListEmpty(0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_139 != 0;
    goto L77;

  L77:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} bFound != 0;
    goto L81;

  L81:
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 426} sdv_KeReleaseSpinLock(0, Irql_1);
    call {:si_unique_call 427} sdv_122 := ExAllocatePoolWithTag(512, 12, 943206710);
    AvOwner := sdv_122;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} AvOwner != 0;
    call {:si_unique_call 428} Tmp_216 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    call {:si_unique_call 429} sdv_KeAcquireSpinLock(0, Tmp_216);
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    havoc Irql_1;
    assume {:nonnull} AvOwner != 0;
    assume AvOwner > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AvOwner != 0;
    assume AvOwner > 0;
    call {:si_unique_call 430} vslice_dummy_var_59 := sdv_InsertTailList(OwnerList__AV_ADAPTER_DATA(AvAdapterData_1), Entry__AV_DATA_OWNERS(AvOwner));
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    call {:si_unique_call 431} sdv_KeReleaseSpinLock(0, Irql_1);
    goto L104;

  L104:
    call {:si_unique_call 432} ntStatus_2 := Av1394_SetBusResetNotify(BusExtension_1, 1);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 433} ntStatus_2 := Av1394_GetDeviceSpeed(BusExtension_1);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} ntStatus_2 >= 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} ntStatus_2 >= 0;
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto L18;

  anon67_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L18;

  anon66_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L18;

  anon65_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L18;

  anon72_Then:
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 434} sdv_KeReleaseSpinLock(0, Irql_1);
    call {:si_unique_call 435} ntStatus_2 := Av_CreateAvAdapterData(BusExtension_1, AvAdapterData_1);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} ntStatus_2 < 0;
    call {:si_unique_call 436} Tmp_216 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    call {:si_unique_call 437} sdv_KeAcquireSpinLock(0, Tmp_216);
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    havoc Irql_1;
    call {:si_unique_call 438} vslice_dummy_var_55 := sdv_RemoveEntryList(0);
    call {:si_unique_call 439} sdv_ExFreePool(0);
    call {:si_unique_call 440} sdv_KeReleaseSpinLock(0, Irql_1);
    call {:si_unique_call 441} Tmp_216 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    call {:si_unique_call 442} sdv_KeAcquireSpinLock(0, Tmp_216);
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    havoc Irql_1;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} bFound != 0;
    goto L146;

  L146:
    call {:si_unique_call 443} sdv_KeReleaseSpinLock(0, Irql_1);
    goto L18;

  anon73_Then:
    assume {:partition} bFound == 0;
    call {:si_unique_call 444} vslice_dummy_var_56 := sdv_RemoveEntryList(0);
    call {:si_unique_call 445} sdv_ExFreePool(0);
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto L146;

  anon68_Then:
    assume {:partition} 0 <= ntStatus_2;
    goto L104;

  anon71_Then:
    assume {:partition} AvOwner == 0;
    ntStatus_2 := -1073741670;
    call {:si_unique_call 446} Tmp_216 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    call {:si_unique_call 447} sdv_KeAcquireSpinLock(0, Tmp_216);
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    havoc Irql_1;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} bFound != 0;
    goto L162;

  L162:
    call {:si_unique_call 448} sdv_KeReleaseSpinLock(0, Irql_1);
    goto L18;

  anon74_Then:
    assume {:partition} bFound == 0;
    call {:si_unique_call 449} vslice_dummy_var_57 := sdv_RemoveEntryList(0);
    call {:si_unique_call 450} sdv_ExFreePool(0);
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto L162;

  anon64_Then:
    assume {:partition} bFound == 0;
    call {:si_unique_call 451} sdv_131 := ExAllocatePoolWithTag(512, 80, 943206710);
    AvAdapterData_1 := sdv_131;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} AvAdapterData_1 != 0;
    call {:si_unique_call 452} sdv_RtlZeroMemory(0, 80);
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 453} InitializeListHead(OwnerList__AV_ADAPTER_DATA(AvAdapterData_1));
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 454} InitializeListHead(FcpList__AV_ADAPTER_DATA(AvAdapterData_1));
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 455} InitializeListHead(CromList__AV_ADAPTER_DATA(AvAdapterData_1));
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 456} InitializeListHead(MonitorList__AV_ADAPTER_DATA(AvAdapterData_1));
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    havoc vslice_dummy_var_2019;
    call {:si_unique_call 457} vslice_dummy_var_58 := sdv_InsertTailList(vslice_dummy_var_2019, Entry__AV_ADAPTER_DATA(AvAdapterData_1));
    goto L81;

  anon75_Then:
    assume {:partition} AvAdapterData_1 == 0;
    call {:si_unique_call 458} sdv_KeReleaseSpinLock(0, Irql_1);
    ntStatus_2 := -1073741670;
    goto L18;

  anon62_Then:
    assume {:partition} sdv_139 == 0;
    goto L76;

  L76:
    call {:si_unique_call 459} AvAdapterData_1 := Av_FDO_StartDevice_loop_L76(AdapterId, AvAdapterData_1);
    goto L76_last;

  L76_last:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} AvAdapterData_1 != 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    havoc AvAdapterData_1;
    goto L198;

  L198:
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    bFound := 1;
    goto L77;

  anon69_Then:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto L77;

  anon70_Then:
    goto anon70_Then_dummy;

  anon70_Then_dummy:
    assume false;
    return;

  anon63_Then:
    assume {:partition} AvAdapterData_1 == 0;
    havoc AvAdapterData_1;
    goto L198;

  anon60_Then:
    call {:si_unique_call 460} ntStatus_2 := AvCmp_CreatePlugs(BusExtension_1);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} ntStatus_2 >= 0;
    goto L65;

  anon61_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L18;

  anon59_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L18;

  anon58_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L18;

  anon57_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L18;

  anon56_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L18;

  anon55_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L18;

  anon54_Then:
    assume {:partition} 0 > ntStatus_2;
    ntStatus_2 := 0;
    goto L26;
}



procedure {:origName "Av_CreatePDO"} Av_CreatePDO(actual_BusExtension_2: int, actual_PdoData: int, actual_DeviceType_1: int, actual_ppPdoDeviceObject: int) returns (Tmp_217: int);
  modifies alloc, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} Tmp_217 == -1073741824 || Tmp_217 == -1073741771 || Tmp_217 == -1073741670 || Tmp_217 == -1073741823 || Tmp_217 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_CreatePDO"} Av_CreatePDO(actual_BusExtension_2: int, actual_PdoData: int, actual_DeviceType_1: int, actual_ppPdoDeviceObject: int) returns (Tmp_217: int)
{
  var {:pointer} Tmp_218: int;
  var {:pointer} Tmp_219: int;
  var {:pointer} Tmp_220: int;
  var {:pointer} Tmp_221: int;
  var {:pointer} Tmp_222: int;
  var {:pointer} sdv_141: int;
  var {:pointer} PdoExtension_1: int;
  var {:scalar} ntStatus_3: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} PdoDeviceObject: int;
  var {:pointer} Tmp_226: int;
  var {:pointer} BusExtension_2: int;
  var {:pointer} PdoData: int;
  var {:scalar} DeviceType_1: int;
  var {:pointer} ppPdoDeviceObject: int;
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 461} PdoDeviceObject := __HAVOC_malloc(4);
    BusExtension_2 := actual_BusExtension_2;
    PdoData := actual_PdoData;
    DeviceType_1 := actual_DeviceType_1;
    ppPdoDeviceObject := actual_ppPdoDeviceObject;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    call {:si_unique_call 462} ntStatus_3 := IoCreateDevice(0, 312, 0, 42, 128, 0, PdoDeviceObject);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_3 >= 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    havoc PdoExtension_1;
    call {:si_unique_call 463} sdv_RtlZeroMemory(0, 312);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION[DevicePowerState__COMMON_DEVICE_EXTENSION(PdoExtension_1)] := 1;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L28;

  L28:
    call {:si_unique_call 464} Tmp_222 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    call {:si_unique_call 465} sdv_KeInitializeSpinLock(Tmp_222);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 466} Tmp_222 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    call {:si_unique_call 467} sdv_KeInitializeSpinLock(Tmp_222);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 468} InitializeListHead(FcpRspPktList__PDO_DEVICE_EXTENSION(PdoExtension_1));
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 469} InitializeListHead(FcpRspIrpList__PDO_DEVICE_EXTENSION(PdoExtension_1));
    call {:si_unique_call 470} Tmp_222 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    call {:si_unique_call 471} sdv_KeInitializeSpinLock(Tmp_222);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 472} InitializeListHead(FcpReqPktList__PDO_DEVICE_EXTENSION(PdoExtension_1));
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 473} InitializeListHead(FcpReqIrpList__PDO_DEVICE_EXTENSION(PdoExtension_1));
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 474} InitializeListHead(PdoCromList__PDO_DEVICE_EXTENSION(PdoExtension_1));
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} PdoData != 0;
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    havoc Tmp_218;
    assume {:nonnull} Tmp_218 != 0;
    assume Tmp_218 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    goto L64;

  L64:
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    havoc Tmp_226;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} Tmp_226 != 0;
    assume Tmp_226 > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} ppPdoDeviceObject != 0;
    assume ppPdoDeviceObject > 0;
    Tmp_217 := ntStatus_3;
    goto L1;

  L1:
    return;

  anon16_Then:
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    goto L64;

  anon17_Then:
    goto L64;

  anon14_Then:
    assume {:partition} PdoData == 0;
    call {:si_unique_call 475} sdv_141 := ExAllocatePoolWithTag(512, 48, 943206710);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 476} sdv_RtlZeroMemory(0, 48);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_220;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_225;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_221;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} Tmp_221 != 0;
    assume Tmp_221 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_219;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    assume {:nonnull} Tmp_219 != 0;
    assume Tmp_219 > 0;
    call {:si_unique_call 477} vslice_dummy_var_60 := sdv_InsertTailList(PdoList__BUS_DEVICE_EXTENSION(BusExtension_2), PdoList__PDO_DATA(Tmp_219));
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    goto L61;

  anon18_Then:
    ntStatus_3 := -1073741670;
    Tmp_217 := ntStatus_3;
    goto L1;

  anon15_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L28;

  anon13_Then:
    assume {:partition} 0 > ntStatus_3;
    Tmp_217 := ntStatus_3;
    goto L1;
}



procedure {:origName "Av_PnpAddDevice"} Av_PnpAddDevice(actual_DriverObject_3: int, actual_PhysicalDeviceObject_1: int) returns (Tmp_227: int);
  modifies alloc, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} Tmp_227 == -1073741824 || Tmp_227 == -1073741771 || Tmp_227 == -1073741670 || Tmp_227 == -1073741823 || Tmp_227 == 0 || Tmp_227 == -1073741584 || Tmp_227 == -1073741808 || Tmp_227 == -1073741789 || Tmp_227 == -1073741810;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_PnpAddDevice"} Av_PnpAddDevice(actual_DriverObject_3: int, actual_PhysicalDeviceObject_1: int) returns (Tmp_227: int)
{
  var {:pointer} Tmp_228: int;
  var {:dopa} {:scalar} bVirtualDevice: int;
  var {:pointer} DeviceObject_15: int;
  var {:scalar} ntStatus_4: int;
  var {:pointer} BusExtension_3: int;
  var {:pointer} Tmp_229: int;
  var {:pointer} Tmp_231: int;
  var {:pointer} DriverObject_3: int;
  var {:pointer} PhysicalDeviceObject_1: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 478} bVirtualDevice := __HAVOC_malloc(4);
    call {:si_unique_call 479} DeviceObject_15 := __HAVOC_malloc(4);
    DriverObject_3 := actual_DriverObject_3;
    PhysicalDeviceObject_1 := actual_PhysicalDeviceObject_1;
    ntStatus_4 := 0;
    assume {:nonnull} PhysicalDeviceObject_1 != 0;
    assume PhysicalDeviceObject_1 > 0;
    assume {:nonnull} bVirtualDevice != 0;
    assume bVirtualDevice > 0;
    call {:si_unique_call 480} ntStatus_4 := IoCreateDevice(0, 312, 0, 42, 0, 0, DeviceObject_15);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_4 < 0;
    goto L79;

  L79:
    Tmp_227 := ntStatus_4;
    return;

  anon13_Then:
    assume {:partition} 0 <= ntStatus_4;
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc BusExtension_3;
    call {:si_unique_call 481} sdv_RtlZeroMemory(0, 312);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 482} boogieTmp := IoAttachDeviceToDeviceStack(0, PhysicalDeviceObject_1);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 483} ntStatus_4 := IsDeviceVirtual(PhysicalDeviceObject_1, bVirtualDevice);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} ntStatus_4 < 0;
    goto L79;

  anon15_Then:
    assume {:partition} 0 <= ntStatus_4;
    assume {:nonnull} bVirtualDevice != 0;
    assume bVirtualDevice > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    goto L41;

  L41:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION[DevicePowerState__COMMON_DEVICE_EXTENSION(BusExtension_3)] := 1;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 484} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 344, 543322697, 0);
    call {:si_unique_call 485} Tmp_229 := __HAVOC_malloc(4);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    call {:si_unique_call 486} sdv_KeInitializeSpinLock(Tmp_229);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 487} InitializeListHead(ConnectList__BUS_DEVICE_EXTENSION(BusExtension_3));
    call {:si_unique_call 488} sdv_ExInitializeFastMutex(0);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 489} InitializeListHead(PdoList__BUS_DEVICE_EXTENSION(BusExtension_3));
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    havoc Tmp_228;
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    goto L73;

  L73:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 490} ntStatus_4 := IoRegisterDeviceInterface(0, 0, 0, SymbolicLinkName__BUS_DEVICE_EXTENSION(BusExtension_3));
    goto L79;

  anon17_Then:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    havoc Tmp_231;
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    goto L73;

  anon18_Then:
    goto L73;

  anon16_Then:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    goto L41;

  anon14_Then:
    call {:si_unique_call 491} IoDeleteDevice(0);
    ntStatus_4 := -1073741810;
    goto L79;
}



procedure {:origName "IsDeviceVirtual"} IsDeviceVirtual(actual_PhysicalDeviceObject_2: int, actual_bVirtualDevice_1: int) returns (Tmp_232: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_232 == -1073741584 || Tmp_232 == -1073741808 || Tmp_232 == -1073741823 || Tmp_232 == 0 || Tmp_232 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IsDeviceVirtual"} IsDeviceVirtual(actual_PhysicalDeviceObject_2: int, actual_bVirtualDevice_1: int) returns (Tmp_232: int)
{
  var {:pointer} Tmp_233: int;
  var {:scalar} VirtualEnumeratorName: int;
  var {:pointer} EnumeratorName: int;
  var {:scalar} ResultLength_2: int;
  var {:scalar} Status_3: int;
  var {:pointer} sdv_147: int;
  var {:scalar} Tmp_234: int;
  var {:pointer} VirtualEnumeratorName_1: int;
  var {:scalar} EnumeratorName_1: int;
  var {:pointer} bVirtualDevice_1: int;

  anon0:
    call {:si_unique_call 492} VirtualEnumeratorName := __HAVOC_malloc(12);
    call {:si_unique_call 493} EnumeratorName_1 := __HAVOC_malloc(12);
    bVirtualDevice_1 := actual_bVirtualDevice_1;
    call {:si_unique_call 494} EnumeratorName := __HAVOC_malloc(24);
    call {:si_unique_call 495} VirtualEnumeratorName_1 := __HAVOC_malloc(24);
    assume {:nonnull} EnumeratorName_1 != 0;
    assume EnumeratorName_1 > 0;
    assume {:nonnull} EnumeratorName_1 != 0;
    assume EnumeratorName_1 > 0;
    assume {:nonnull} EnumeratorName_1 != 0;
    assume EnumeratorName_1 > 0;
    VirtualEnumeratorName_1 := strConst__li2bpl6;
    assume {:nonnull} VirtualEnumeratorName != 0;
    assume VirtualEnumeratorName > 0;
    assume {:nonnull} VirtualEnumeratorName != 0;
    assume VirtualEnumeratorName > 0;
    assume {:nonnull} VirtualEnumeratorName != 0;
    assume VirtualEnumeratorName > 0;
    assume {:nonnull} EnumeratorName_1 != 0;
    assume EnumeratorName_1 > 0;
    havoc Tmp_234;
    call {:si_unique_call 496} Tmp_233 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_233 != 0;
    assume Tmp_233 > 0;
    call {:si_unique_call 497} Status_3 := IoGetDeviceProperty(0, 4111, Tmp_234, 0, Tmp_233);
    assume {:nonnull} Tmp_233 != 0;
    assume Tmp_233 > 0;
    havoc ResultLength_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Status_3 >= 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    sdv_147 := 0;
    goto L26;

  L26:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_147 != 0;
    assume {:nonnull} bVirtualDevice_1 != 0;
    assume bVirtualDevice_1 > 0;
    goto L29;

  L29:
    Tmp_232 := Status_3;
    return;

  anon9_Then:
    assume {:partition} sdv_147 == 0;
    assume {:nonnull} bVirtualDevice_1 != 0;
    assume bVirtualDevice_1 > 0;
    goto L29;

  anon8_Then:
    call {:si_unique_call 498} sdv_147 := __HAVOC_malloc(1);
    goto L26;

  anon7_Then:
    assume {:partition} 0 > Status_3;
    assume {:nonnull} bVirtualDevice_1 != 0;
    assume bVirtualDevice_1 > 0;
    Status_3 := 0;
    goto L29;
}



procedure {:origName "Av_GetDiagFlags"} Av_GetDiagFlags(actual_BusExtension_4: int) returns (Tmp_235: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} Tmp_235 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_GetDiagFlags"} Av_GetDiagFlags(actual_BusExtension_4: int) returns (Tmp_235: int)
{
  var {:pointer} QueryTable_1: int;
  var {:pointer} Tmp_237: int;
  var {:pointer} sdv_152: int;
  var {:scalar} Irql_2: int;
  var {:pointer} AvAdapterData_2: int;
  var {:pointer} BusExtension_4: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;

  anon0:
    BusExtension_4 := actual_BusExtension_4;
    call {:si_unique_call 499} vslice_dummy_var_64 := __HAVOC_malloc(24);
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    havoc AvAdapterData_2;
    QueryTable_1 := 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    call {:si_unique_call 500} Tmp_237 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_237 != 0;
    assume Tmp_237 > 0;
    call {:si_unique_call 501} sdv_KeAcquireSpinLock(0, Tmp_237);
    assume {:nonnull} Tmp_237 != 0;
    assume Tmp_237 > 0;
    havoc Irql_2;
    assume {:nonnull} AvAdapterData_2 != 0;
    assume AvAdapterData_2 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} AvAdapterData_2 != 0;
    assume AvAdapterData_2 > 0;
    call {:si_unique_call 502} sdv_KeReleaseSpinLock(0, Irql_2);
    goto L8;

  L8:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto L36;

  L36:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto L42;

  L42:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto L48;

  L48:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto L54;

  L54:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    call {:si_unique_call 503} sdv_152 := ExAllocatePoolWithTag(1, 56, 943206710);
    QueryTable_1 := sdv_152;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} QueryTable_1 != 0;
    call {:si_unique_call 504} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    call {:si_unique_call 505} vslice_dummy_var_65 := sdv_RtlQueryRegistryValues(1, 0, 0, 0, 0);
    call {:si_unique_call 506} sdv_ExFreePool(0);
    goto L63;

  L63:
    Tmp_235 := 0;
    return;

  anon60_Then:
    assume {:partition} QueryTable_1 == 0;
    goto L63;

  anon58_Then:
    goto L54;

  anon54_Then:
    goto L54;

  anon57_Then:
    goto L48;

  anon56_Then:
    goto L48;

  anon55_Then:
    goto L48;

  anon50_Then:
    goto L48;

  anon53_Then:
    goto L42;

  anon52_Then:
    goto L42;

  anon51_Then:
    goto L42;

  anon46_Then:
    goto L42;

  anon49_Then:
    goto L36;

  anon48_Then:
    goto L36;

  anon47_Then:
    goto L36;

  anon41_Then:
    goto L36;

  anon45_Then:
    assume {:nonnull} AvAdapterData_2 != 0;
    assume AvAdapterData_2 > 0;
    call {:si_unique_call 507} sdv_KeReleaseSpinLock(0, Irql_2);
    call {:si_unique_call 508} vslice_dummy_var_61 := Av1394_SetPacketSize(BusExtension_4, 1024);
    call {:si_unique_call 509} vslice_dummy_var_62 := Av1394_BusReset(BusExtension_4, 0, 0);
    call {:si_unique_call 510} vslice_dummy_var_63 := Av1394_GetGenerationCount(BusExtension_4);
    goto L8;

  anon44_Then:
    goto L8;

  anon43_Then:
    goto L8;

  anon42_Then:
    goto L8;

  anon59_Then:
    goto L8;
}



procedure {:origName "Av_FDO_StopDevice"} Av_FDO_StopDevice(actual_BusExtension_5: int) returns (Tmp_238: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_FDO_StopDevice"} Av_FDO_StopDevice(actual_BusExtension_5: int) returns (Tmp_238: int)
{
  var {:pointer} MyOwner: int;
  var {:pointer} CurrCrom: int;
  var {:pointer} CmpData: int;
  var {:scalar} ntStatus_5: int;
  var {:pointer} FcpData: int;
  var {:scalar} sdv_163: int;
  var {:scalar} sdv_164: int;
  var {:pointer} NewOwner: int;
  var {:scalar} Irql_3: int;
  var {:pointer} AvAdapterData_3: int;
  var {:pointer} Tmp_239: int;
  var {:pointer} BusExtension_5: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_2020: int;
  var vslice_dummy_var_2021: int;
  var vslice_dummy_var_2022: int;
  var vslice_dummy_var_2023: int;
  var vslice_dummy_var_2024: int;
  var vslice_dummy_var_2025: int;
  var vslice_dummy_var_2026: int;
  var vslice_dummy_var_2027: int;
  var vslice_dummy_var_2028: int;

  anon0:
    BusExtension_5 := actual_BusExtension_5;
    ntStatus_5 := 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 511} vslice_dummy_var_72 := Av1394_SetBusResetNotify(BusExtension_5, 0);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    havoc vslice_dummy_var_2020;
    call {:si_unique_call 512} vslice_dummy_var_66 := AvCmp_DestroyCmpData(BusExtension_5, vslice_dummy_var_2020);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto L12;

  L12:
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L23;

  L23:
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    havoc AvAdapterData_3;
    call {:si_unique_call 513} Tmp_239 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    call {:si_unique_call 514} sdv_KeAcquireSpinLock(0, Tmp_239);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    havoc Irql_3;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc MyOwner;
    goto L28;

  L28:
    call {:si_unique_call 515} MyOwner := Av_FDO_StopDevice_loop_L28(MyOwner, BusExtension_5);
    goto L28_last;

  L28_last:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} MyOwner != 0;
    assume MyOwner > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} MyOwner != 0;
    assume MyOwner > 0;
    havoc MyOwner;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    assume false;
    return;

  anon30_Then:
    goto L29;

  L29:
    call {:si_unique_call 516} vslice_dummy_var_68 := sdv_RemoveEntryList(0);
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    assume {:nonnull} MyOwner != 0;
    assume MyOwner > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 517} sdv_163 := sdv_IsListEmpty(0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_163 == 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc NewOwner;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    assume {:nonnull} NewOwner != 0;
    assume NewOwner > 0;
    call {:si_unique_call 518} sdv_KeReleaseSpinLock(0, Irql_3);
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc vslice_dummy_var_2021;
    havoc vslice_dummy_var_2022;
    call {:si_unique_call 519} ntStatus_5 := AvCmp_CreateCMPAddressRange(vslice_dummy_var_2021, vslice_dummy_var_2022, 0);
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc vslice_dummy_var_2023;
    havoc vslice_dummy_var_2024;
    call {:si_unique_call 520} ntStatus_5 := AvCmp_CreateCMPAddressRange(vslice_dummy_var_2023, vslice_dummy_var_2024, 1);
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc vslice_dummy_var_2025;
    havoc vslice_dummy_var_2026;
    call {:si_unique_call 521} ntStatus_5 := AvFcp_CreateRequestAddressRange(vslice_dummy_var_2025, vslice_dummy_var_2026);
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc vslice_dummy_var_2027;
    havoc vslice_dummy_var_2028;
    call {:si_unique_call 522} ntStatus_5 := AvFcp_CreateResponseAddressRange(vslice_dummy_var_2027, vslice_dummy_var_2028);
    call {:si_unique_call 523} Tmp_239 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    call {:si_unique_call 524} sdv_KeAcquireSpinLock(0, Tmp_239);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    havoc Irql_3;
    call {:si_unique_call 525} sdv_164 := sdv_IsListEmpty(0);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_164 == 0;
    CurrCrom := 0;
    goto L128;

  L128:
    call {:si_unique_call 526} CurrCrom, ntStatus_5, Irql_3, Tmp_239 := Av_FDO_StopDevice_loop_L128(CurrCrom, ntStatus_5, Irql_3, AvAdapterData_3, Tmp_239);
    goto L128_last;

  L128_last:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} CurrCrom != 0;
    assume {:nonnull} CurrCrom != 0;
    assume CurrCrom > 0;
    havoc CurrCrom;
    goto L131;

  L131:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} CurrCrom != 0;
    call {:si_unique_call 527} sdv_KeReleaseSpinLock(0, Irql_3);
    call {:si_unique_call 528} ntStatus_5 := Av1394_AddConfigRomEntry(CurrCrom);
    call {:si_unique_call 529} Tmp_239 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    call {:si_unique_call 530} sdv_KeAcquireSpinLock(0, Tmp_239);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    havoc Irql_3;
    goto L132;

  L132:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon37_Else_dummy;

  anon37_Else_dummy:
    assume false;
    return;

  anon37_Then:
    goto L117;

  L117:
    call {:si_unique_call 531} sdv_KeReleaseSpinLock(0, Irql_3);
    call {:si_unique_call 532} Tmp_239 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    call {:si_unique_call 533} sdv_KeAcquireSpinLock(0, Tmp_239);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    havoc Irql_3;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    call {:si_unique_call 534} sdv_KeReleaseSpinLock(0, Irql_3);
    goto L76;

  L76:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} MyOwner != 0;
    call {:si_unique_call 535} sdv_ExFreePool(0);
    goto L6;

  L6:
    Tmp_238 := ntStatus_5;
    return;

  anon33_Then:
    assume {:partition} MyOwner == 0;
    goto L6;

  anon36_Then:
    assume {:partition} CurrCrom == 0;
    goto L132;

  anon35_Then:
    assume {:partition} CurrCrom == 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc CurrCrom;
    goto L131;

  anon34_Then:
    assume {:partition} sdv_164 != 0;
    goto L117;

  anon32_Then:
    assume {:partition} sdv_163 != 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc CmpData;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc FcpData;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    call {:si_unique_call 536} vslice_dummy_var_73 := sdv_IsListEmpty(0);
    call {:si_unique_call 537} sdv_KeReleaseSpinLock(0, Irql_3);
    call {:si_unique_call 538} vslice_dummy_var_69 := AvCmp_DestroyCmpData(BusExtension_5, CmpData);
    call {:si_unique_call 539} vslice_dummy_var_70 := AvFcp_DestroyFcpData(BusExtension_5, FcpData);
    call {:si_unique_call 540} Tmp_239 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    call {:si_unique_call 541} sdv_KeAcquireSpinLock(0, Tmp_239);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    havoc Irql_3;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L73;

  L73:
    call {:si_unique_call 542} sdv_KeReleaseSpinLock(0, Irql_3);
    goto L76;

  anon39_Then:
    call {:si_unique_call 543} vslice_dummy_var_71 := sdv_RemoveEntryList(0);
    call {:si_unique_call 544} sdv_ExFreePool(0);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto L73;

  anon31_Then:
    call {:si_unique_call 545} sdv_KeReleaseSpinLock(0, Irql_3);
    call {:si_unique_call 546} Tmp_239 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    call {:si_unique_call 547} sdv_KeAcquireSpinLock(0, Tmp_239);
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    havoc Irql_3;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    call {:si_unique_call 548} sdv_KeReleaseSpinLock(0, Irql_3);
    goto L76;

  anon29_Then:
    goto L29;

  anon28_Then:
    call {:si_unique_call 549} vslice_dummy_var_67 := AvCmp_DestroyPlugs(BusExtension_5);
    goto L23;

  anon27_Then:
    goto L12;

  anon38_Then:
    goto L6;
}



procedure {:origName "Av_Power"} Av_Power(actual_DeviceObject_16: int, actual_Irp_14: int) returns (Tmp_240: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc, Mem_T.DeviceState__POWER_STATE, thread_status, Mem_T.PendingReturned__IRP, return_state, lowerDriverFailed, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, irp_copy_next, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} Tmp_240 == 0 || Tmp_240 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_Power"} Av_Power(actual_DeviceObject_16: int, actual_Irp_14: int) returns (Tmp_240: int)
{
  var {:scalar} Status_4: int;
  var {:pointer} CommonExtension_1: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_14: int;

  anon0:
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_14 := actual_Irp_14;
    Status_4 := 0;
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc CommonExtension_1;
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L9;

  L9:
    call {:si_unique_call 550} Status_4 := Av_PDO_Power(DeviceObject_16, Irp_14);
    goto L13;

  L13:
    Tmp_240 := Status_4;
    return;

  anon12_Then:
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L16;

  L16:
    call {:si_unique_call 551} Status_4 := Av_FDO_Power(DeviceObject_16, Irp_14);
    goto L13;

  anon10_Then:
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_14))] := Status_4;
    call {:si_unique_call 552} sdv_IoCompleteRequest(0, 0);
    goto L13;

  anon11_Then:
    goto L16;

  anon9_Then:
    goto L9;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_74: int;

  anon0:
    call {:si_unique_call 553} vslice_dummy_var_74 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Av_Pnp"} Av_Pnp(actual_DeviceObject_17: int, actual_Irp_15: int) returns (Tmp_244: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc, thread_status, return_state, lowerDriverFailed, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, irp_copy_next, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_Pnp"} Av_Pnp(actual_DeviceObject_17: int, actual_Irp_15: int) returns (Tmp_244: int)
{
  var {:scalar} Status_5: int;
  var {:pointer} CommonExtension_2: int;
  var {:pointer} DeviceObject_17: int;
  var {:pointer} Irp_15: int;

  anon0:
    DeviceObject_17 := actual_DeviceObject_17;
    Irp_15 := actual_Irp_15;
    Status_5 := 0;
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    havoc CommonExtension_2;
    assume {:nonnull} CommonExtension_2 != 0;
    assume CommonExtension_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L9;

  L9:
    call {:si_unique_call 554} Status_5 := Av_PDO_Pnp(DeviceObject_17, Irp_15);
    goto L13;

  L13:
    Tmp_244 := Status_5;
    return;

  anon12_Then:
    assume {:nonnull} CommonExtension_2 != 0;
    assume CommonExtension_2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} CommonExtension_2 != 0;
    assume CommonExtension_2 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L16;

  L16:
    call {:si_unique_call 555} Status_5 := Av_FDO_Pnp(DeviceObject_17, Irp_15);
    goto L13;

  anon10_Then:
    assume {:nonnull} CommonExtension_2 != 0;
    assume CommonExtension_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_15))] := -1073741810;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    Status_5 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_15))];
    call {:si_unique_call 556} sdv_IoCompleteRequest(0, 0);
    goto L13;

  anon11_Then:
    goto L16;

  anon9_Then:
    goto L9;
}



procedure {:origName "Av_PDO_Power"} Av_PDO_Power(actual_DeviceObject_18: int, actual_Irp_16: int) returns (Tmp_246: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, return_state, lowerDriverFailed, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} Tmp_246 == 259 || Tmp_246 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_PDO_Power"} Av_PDO_Power(actual_DeviceObject_18: int, actual_Irp_16: int) returns (Tmp_246: int)
{
  var {:pointer} SD3: int;
  var {:scalar} State_2: int;
  var {:pointer} IrpStack_1: int;
  var {:scalar} sdv_3: int;
  var {:pointer} PdoExtension_2: int;
  var {:scalar} ntStatus_6: int;
  var {:pointer} DeviceObject_18: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_2029: int;
  var vslice_dummy_var_2030: int;

  anon0:
    call {:si_unique_call 557} State_2 := __HAVOC_malloc(8);
    call {:si_unique_call 558} sdv_3 := __HAVOC_malloc(8);
    DeviceObject_18 := actual_DeviceObject_18;
    Irp_16 := actual_Irp_16;
    ntStatus_6 := 0;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc PdoExtension_2;
    call {:si_unique_call 559} IrpStack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_unnamed_tag_39(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(IrpStack_1))))];
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_6 := 0;
    goto L23;

  L23:
    call {:si_unique_call 560} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := ntStatus_6;
    call {:si_unique_call 561} sdv_IoCompleteRequest(0, 0);
    goto L30;

  L30:
    Tmp_246 := ntStatus_6;
    return;

  anon19_Then:
    call {:si_unique_call 562} PoStartNextPowerIrp(0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 563} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L50;

  L50:
    call {:si_unique_call 564} sdv_IoSkipCurrentIrpStackLocation(Irp_16);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 565} SLIC_PoCallDriver_entry(0);
    goto L53;

  L53:
    call {:si_unique_call 566} ntStatus_6 := PoCallDriver(0, Irp_16);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 567} SLIC_PoCallDriver_exit(0, Irp_16);
    goto L30;

  anon20_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L30;

  anon18_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L53;

  anon17_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L50;

  anon21_Then:
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    havoc vslice_dummy_var_2029;
    havoc vslice_dummy_var_2030;
    call {:si_unique_call 568} SD3 := PoSetPowerState(0, vslice_dummy_var_2029, vslice_dummy_var_2030);
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(sdv_3)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(SD3)];
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION[DevicePowerState__COMMON_DEVICE_EXTENSION(PdoExtension_2)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)];
    goto L23;

  anon15_Then:
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto L23;

  anon16_Then:
    goto L23;
}



procedure {:origName "Av_BuildIDs"} Av_BuildIDs(actual_BusExtension_6: int, actual_PdoExtension_3: int) returns (Tmp_248: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_248 == 0 || Tmp_248 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_BuildIDs"} Av_BuildIDs(actual_BusExtension_6: int, actual_PdoExtension_3: int) returns (Tmp_248: int)
{
  var {:pointer} PdoData_1: int;
  var {:scalar} uniVendorName: int;
  var {:scalar} Tmp_254: int;
  var {:scalar} Tmp_255: int;
  var {:scalar} Tmp_257: int;
  var {:pointer} sdv_183: int;
  var {:scalar} Tmp_258: int;
  var {:scalar} Tmp_259: int;
  var {:pointer} sdv_184: int;
  var {:scalar} Tmp_263: int;
  var {:pointer} sdv_185: int;
  var {:scalar} Tmp_264: int;
  var {:scalar} uniUniqueId: int;
  var {:scalar} Tmp_266: int;
  var {:pointer} sdv_190: int;
  var {:scalar} ntStatus_7: int;
  var {:pointer} uniModelId: int;
  var {:scalar} uniSwVersion: int;
  var {:scalar} Tmp_270: int;
  var {:pointer} sdv_197: int;
  var {:scalar} Tmp_271: int;
  var {:scalar} Tmp_274: int;
  var {:scalar} Tmp_275: int;
  var {:pointer} UnitData: int;
  var {:pointer} uniVendorId: int;
  var {:scalar} Tmp_279: int;
  var {:pointer} sdv_207: int;
  var {:pointer} sdv_208: int;
  var {:scalar} uniModelName: int;
  var {:pointer} BusExtension_6: int;
  var {:pointer} PdoExtension_3: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_2031: int;
  var vslice_dummy_var_2032: int;
  var vslice_dummy_var_2033: int;
  var vslice_dummy_var_2034: int;
  var vslice_dummy_var_2035: int;
  var vslice_dummy_var_2036: int;

  anon0:
    call {:si_unique_call 569} uniVendorName := __HAVOC_malloc(12);
    call {:si_unique_call 570} uniUniqueId := __HAVOC_malloc(12);
    call {:si_unique_call 571} uniSwVersion := __HAVOC_malloc(12);
    call {:si_unique_call 572} uniModelName := __HAVOC_malloc(12);
    BusExtension_6 := actual_BusExtension_6;
    PdoExtension_3 := actual_PdoExtension_3;
    call {:si_unique_call 573} vslice_dummy_var_90 := __HAVOC_malloc(32);
    call {:si_unique_call 574} vslice_dummy_var_91 := __HAVOC_malloc(8);
    call {:si_unique_call 575} vslice_dummy_var_92 := __HAVOC_malloc(28);
    call {:si_unique_call 576} vslice_dummy_var_93 := __HAVOC_malloc(8);
    call {:si_unique_call 577} vslice_dummy_var_94 := __HAVOC_malloc(32);
    call {:si_unique_call 578} vslice_dummy_var_95 := __HAVOC_malloc(32);
    call {:si_unique_call 579} vslice_dummy_var_96 := __HAVOC_malloc(32);
    call {:si_unique_call 580} vslice_dummy_var_97 := __HAVOC_malloc(28);
    call {:si_unique_call 581} vslice_dummy_var_98 := __HAVOC_malloc(8);
    call {:si_unique_call 582} vslice_dummy_var_99 := __HAVOC_malloc(28);
    call {:si_unique_call 583} vslice_dummy_var_100 := __HAVOC_malloc(28);
    call {:si_unique_call 584} vslice_dummy_var_101 := __HAVOC_malloc(8);
    call {:si_unique_call 585} vslice_dummy_var_102 := __HAVOC_malloc(32);
    ntStatus_7 := 0;
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    UnitData := UnitData__BUS_DEVICE_EXTENSION(BusExtension_6);
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    uniVendorId := uniVendorId__UNIT_DATA(UnitData);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc PdoData_1;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    uniModelId := uniModelId__UNIT_DATA(UnitData);
    goto L23;

  L23:
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    havoc Tmp_263;
    call {:si_unique_call 586} sdv_184 := ExAllocatePoolWithTag(512, Tmp_263, 943206710);
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    havoc Tmp_270;
    call {:si_unique_call 587} sdv_RtlZeroMemory(0, Tmp_270);
    assume {:nonnull} uniVendorId != 0;
    assume uniVendorId > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 588} vslice_dummy_var_76 := corral_nondet();
    call {:si_unique_call 589} vslice_dummy_var_103 := corral_nondet();
    goto L46;

  L46:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    havoc Tmp_271;
    call {:si_unique_call 590} sdv_197 := ExAllocatePoolWithTag(512, Tmp_271, 943206710);
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    havoc Tmp_259;
    call {:si_unique_call 591} sdv_RtlZeroMemory(0, Tmp_259);
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 592} vslice_dummy_var_77 := corral_nondet();
    call {:si_unique_call 593} vslice_dummy_var_104 := corral_nondet();
    goto L67;

  L67:
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    havoc Tmp_274;
    call {:si_unique_call 594} sdv_190 := ExAllocatePoolWithTag(512, Tmp_274, 943206710);
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    havoc Tmp_266;
    call {:si_unique_call 595} sdv_RtlZeroMemory(0, Tmp_266);
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_2031;
    call {:si_unique_call 596} vslice_dummy_var_78 := RtlIntegerToUnicodeString(vslice_dummy_var_2031, 16, 0);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_264;
    call {:si_unique_call 597} sdv_207 := ExAllocatePoolWithTag(512, Tmp_264, 943206710);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_275;
    call {:si_unique_call 598} sdv_RtlZeroMemory(0, Tmp_275);
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    call {:si_unique_call 599} vslice_dummy_var_105 := corral_nondet();
    goto L101;

  L101:
    call {:si_unique_call 600} vslice_dummy_var_79 := corral_nondet();
    call {:si_unique_call 601} vslice_dummy_var_80 := corral_nondet();
    call {:si_unique_call 602} vslice_dummy_var_81 := corral_nondet();
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    call {:si_unique_call 603} vslice_dummy_var_106 := corral_nondet();
    goto L116;

  L116:
    call {:si_unique_call 604} vslice_dummy_var_82 := corral_nondet();
    call {:si_unique_call 605} vslice_dummy_var_83 := corral_nondet();
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_258;
    call {:si_unique_call 606} sdv_185 := ExAllocatePoolWithTag(512, Tmp_258, 943206710);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_279;
    call {:si_unique_call 607} sdv_RtlZeroMemory(0, Tmp_279);
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 608} vslice_dummy_var_107 := corral_nondet();
    goto L141;

  L141:
    call {:si_unique_call 609} vslice_dummy_var_84 := corral_nondet();
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 610} vslice_dummy_var_108 := corral_nondet();
    goto L150;

  L150:
    call {:si_unique_call 611} vslice_dummy_var_109 := corral_nondet();
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_254;
    call {:si_unique_call 612} sdv_183 := ExAllocatePoolWithTag(512, Tmp_254, 943206710);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_255;
    call {:si_unique_call 613} sdv_RtlZeroMemory(0, Tmp_255);
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    call {:si_unique_call 614} sdv_208 := ExAllocatePoolWithTag(512, 100, 943206710);
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    havoc Tmp_257;
    call {:si_unique_call 615} sdv_RtlZeroMemory(0, Tmp_257);
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_2032;
    call {:si_unique_call 616} vslice_dummy_var_85 := RtlIntegerToUnicodeString(vslice_dummy_var_2032, 16, 0);
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_2033;
    call {:si_unique_call 617} vslice_dummy_var_86 := RtlIntegerToUnicodeString(vslice_dummy_var_2033, 16, 0);
    call {:si_unique_call 618} vslice_dummy_var_87 := corral_nondet();
    goto L187;

  L187:
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    call {:si_unique_call 619} sdv_ExFreePool(0);
    goto L188;

  L188:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    call {:si_unique_call 620} sdv_ExFreePool(0);
    goto L192;

  L192:
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    call {:si_unique_call 621} sdv_ExFreePool(0);
    goto L196;

  L196:
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    call {:si_unique_call 622} sdv_ExFreePool(0);
    goto L200;

  L200:
    Tmp_248 := ntStatus_7;
    return;

  anon74_Then:
    goto L200;

  anon73_Then:
    goto L196;

  anon72_Then:
    goto L192;

  anon71_Then:
    goto L188;

  anon87_Then:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 623} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto L204;

  L204:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 624} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto L209;

  L209:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 625} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto L214;

  L214:
    ntStatus_7 := -1073741670;
    goto L187;

  anon76_Then:
    goto L214;

  anon75_Then:
    goto L209;

  anon70_Then:
    goto L204;

  anon86_Then:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 626} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto L220;

  L220:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 627} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto L225;

  L225:
    ntStatus_7 := -1073741670;
    goto L187;

  anon77_Then:
    goto L225;

  anon69_Then:
    goto L220;

  anon85_Then:
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 628} vslice_dummy_var_110 := corral_nondet();
    goto L150;

  anon68_Then:
    goto L150;

  anon66_Then:
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    call {:si_unique_call 629} vslice_dummy_var_111 := corral_nondet();
    goto L141;

  anon67_Then:
    goto L141;

  anon84_Then:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 630} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto L237;

  L237:
    ntStatus_7 := -1073741670;
    goto L187;

  anon65_Then:
    goto L237;

  anon83_Then:
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 631} vslice_dummy_var_112 := corral_nondet();
    goto L116;

  anon64_Then:
    goto L116;

  anon62_Then:
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    call {:si_unique_call 632} vslice_dummy_var_113 := corral_nondet();
    goto L101;

  anon63_Then:
    goto L101;

  anon82_Then:
    ntStatus_7 := -1073741670;
    goto L187;

  anon81_Then:
    ntStatus_7 := -1073741670;
    goto L187;

  anon60_Then:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_2034;
    call {:si_unique_call 633} vslice_dummy_var_89 := RtlIntegerToUnicodeString(vslice_dummy_var_2034, 16, 0);
    goto L257;

  L257:
    call {:si_unique_call 634} vslice_dummy_var_114 := corral_nondet();
    goto L67;

  anon61_Then:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_2035;
    call {:si_unique_call 635} vslice_dummy_var_88 := RtlIntegerToUnicodeString(vslice_dummy_var_2035, 16, 0);
    goto L257;

  anon80_Then:
    ntStatus_7 := -1073741670;
    goto L187;

  anon59_Then:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_2036;
    call {:si_unique_call 636} vslice_dummy_var_75 := RtlIntegerToUnicodeString(vslice_dummy_var_2036, 16, 0);
    call {:si_unique_call 637} vslice_dummy_var_115 := corral_nondet();
    goto L46;

  anon79_Then:
    ntStatus_7 := -1073741670;
    goto L187;

  anon78_Then:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    uniModelId := uniUnitModelId__UNIT_DATA(UnitData);
    goto L23;
}



procedure {:origName "Av_PDO_StartDevice"} Av_PDO_StartDevice(actual_PdoExtension_4: int) returns (Tmp_282: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_PDO_StartDevice"} Av_PDO_StartDevice(actual_PdoExtension_4: int) returns (Tmp_282: int)
{
  var {:scalar} ntStatus_8: int;
  var {:pointer} PdoExtension_4: int;

  anon0:
    PdoExtension_4 := actual_PdoExtension_4;
    ntStatus_8 := 0;
    call {:si_unique_call 638} ntStatus_8 := Av1394_GetDeviceNodeId(PdoExtension_4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ntStatus_8 >= 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto L12;

  L12:
    Tmp_282 := ntStatus_8;
    return;

  anon3_Then:
    assume {:partition} 0 > ntStatus_8;
    goto L12;
}



procedure {:origName "Av_FDO_PowerComplete"} Av_FDO_PowerComplete(actual_DeviceObject_19: int, actual_Irp_17: int, actual_Context_3: int) returns (Tmp_284: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_FDO_PowerComplete"} Av_FDO_PowerComplete(actual_DeviceObject_19: int, actual_Irp_17: int, actual_Context_3: int) returns (Tmp_284: int)
{
  var {:pointer} SD2: int;
  var {:pointer} IrpStack_2: int;
  var {:scalar} sdv_2: int;
  var {:scalar} ntStatus_9: int;
  var {:pointer} BusExtension_7: int;
  var {:pointer} Irp_17: int;
  var {:pointer} Context_3: int;
  var vslice_dummy_var_2037: int;

  anon0:
    call {:si_unique_call 639} sdv_2 := __HAVOC_malloc(8);
    Irp_17 := actual_Irp_17;
    Context_3 := actual_Context_3;
    BusExtension_7 := Context_3;
    call {:si_unique_call 640} IrpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_17);
    assume {:nonnull} IrpStack_2 != 0;
    assume IrpStack_2 > 0;
    havoc vslice_dummy_var_2037;
    call {:si_unique_call 641} SD2 := PoSetPowerState(0, 1, vslice_dummy_var_2037);
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(sdv_2)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(SD2)];
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} IrpStack_2 != 0;
    assume IrpStack_2 > 0;
    Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION[DevicePowerState__COMMON_DEVICE_EXTENSION(BusExtension_7)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_unnamed_tag_39(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(IrpStack_2))))];
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    ntStatus_9 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_17))];
    Tmp_284 := ntStatus_9;
    return;
}



procedure {:origName "Av_FDO_Power"} Av_FDO_Power(actual_DeviceObject_20: int, actual_Irp_18: int) returns (Tmp_286: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, thread_status, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, return_state, lowerDriverFailed, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, irp_copy_next, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} Tmp_286 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_FDO_Power"} Av_FDO_Power(actual_DeviceObject_20: int, actual_Irp_18: int) returns (Tmp_286: int)
{
  var {:pointer} SD1: int;
  var {:pointer} structPtr888sdv: int;
  var {:scalar} State_3: int;
  var {:pointer} IrpStack_3: int;
  var {:scalar} Type_2: int;
  var {:scalar} ntStatus_10: int;
  var {:scalar} sdv: int;
  var {:scalar} sdv_1: int;
  var {:pointer} BusExtension_8: int;
  var {:pointer} DeviceObject_20: int;
  var {:pointer} Irp_18: int;

  anon0:
    call {:si_unique_call 642} State_3 := __HAVOC_malloc(8);
    call {:si_unique_call 643} sdv := __HAVOC_malloc(8);
    call {:si_unique_call 644} sdv_1 := __HAVOC_malloc(8);
    DeviceObject_20 := actual_DeviceObject_20;
    Irp_18 := actual_Irp_18;
    ntStatus_10 := 0;
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc BusExtension_8;
    call {:si_unique_call 645} IrpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_3)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_unnamed_tag_39(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(IrpStack_3))))];
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    havoc Type_2;
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    ntStatus_10 := 0;
    goto L21;

  L21:
    call {:si_unique_call 646} PoStartNextPowerIrp(0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume Irp_18 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 647} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L72;

  L72:
    call {:si_unique_call 648} sdv_IoSkipCurrentIrpStackLocation(Irp_18);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume Irp_18 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 649} SLIC_PoCallDriver_entry(0);
    goto L75;

  L75:
    call {:si_unique_call 650} ntStatus_10 := PoCallDriver(0, Irp_18);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume Irp_18 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 651} SLIC_PoCallDriver_exit(0, Irp_18);
    goto L31;

  L31:
    Tmp_286 := ntStatus_10;
    return;

  anon42_Then:
    assume !(Irp_18 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L31;

  anon33_Then:
    assume !(Irp_18 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L75;

  anon32_Then:
    assume !(Irp_18 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;

  anon41_Then:
    ntStatus_10 := -1073741822;
    goto L21;

  anon44_Then:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Type_2 == 1;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION[DevicePowerState__COMMON_DEVICE_EXTENSION(BusExtension_8)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_3)];
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_3)] != 1;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION[DevicePowerState__COMMON_DEVICE_EXTENSION(BusExtension_8)] == 1;
    call {:si_unique_call 652} structPtr888sdv := PoSetPowerState(0, Type_2, State_3);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(sdv)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(structPtr888sdv)];
    goto L21;

  anon36_Then:
    assume {:partition} Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION[DevicePowerState__COMMON_DEVICE_EXTENSION(BusExtension_8)] != 1;
    goto L35;

  L35:
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_3)] == 1;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION[DevicePowerState__COMMON_DEVICE_EXTENSION(BusExtension_8)] != 1;
    call {:si_unique_call 653} PoStartNextPowerIrp(0);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume Irp_18 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 654} SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry(0);
    goto L81;

  L81:
    call {:si_unique_call 655} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_18);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume Irp_18 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 656} SLIC_sdv_IoSetCompletionRoutine_entry(0);
    goto L84;

  L84:
    call {:si_unique_call 657} sdv_IoSetCompletionRoutine(Irp_18, li2bplFunctionConstant654, BusExtension_8, 1, 1, 1);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume Irp_18 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 658} SLIC_PoCallDriver_entry(0);
    goto L87;

  L87:
    call {:si_unique_call 659} ntStatus_10 := PoCallDriver(0, Irp_18);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume Irp_18 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 660} SLIC_PoCallDriver_exit(0, Irp_18);
    goto L31;

  anon43_Then:
    assume !(Irp_18 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L31;

  anon40_Then:
    assume !(Irp_18 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L87;

  anon39_Then:
    assume !(Irp_18 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L84;

  anon38_Then:
    assume !(Irp_18 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L81;

  anon37_Then:
    assume {:partition} Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION[DevicePowerState__COMMON_DEVICE_EXTENSION(BusExtension_8)] == 1;
    goto L41;

  L41:
    call {:si_unique_call 661} SD1 := PoSetPowerState(0, Type_2, State_3);
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(sdv_1)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(SD1)];
    goto L21;

  anon35_Then:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_3)] != 1;
    goto L41;

  anon45_Then:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_3)] == 1;
    goto L35;

  anon31_Then:
    assume {:partition} Type_2 != 1;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Type_2 == 0;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    goto L21;

  anon34_Then:
    assume {:partition} Type_2 != 0;
    goto L21;
}



procedure {:origName "Av_PDO_StopDevice"} Av_PDO_StopDevice(actual_PdoExtension_5: int) returns (Tmp_288: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} Tmp_288 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_PDO_StopDevice"} Av_PDO_StopDevice(actual_PdoExtension_5: int) returns (Tmp_288: int)
{
  var {:scalar} Notify: int;
  var {:pointer} NotifyData_1: int;
  var {:pointer} CromData: int;
  var {:scalar} ntStatus_11: int;
  var {:scalar} sdv_218: int;
  var {:pointer} sdv_220: int;
  var {:pointer} PdoCromData: int;
  var {:scalar} Irql_4: int;
  var {:pointer} BusExtension_9: int;
  var {:pointer} MonitorData: int;
  var {:pointer} Tmp_289: int;
  var {:pointer} Tmp_290: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;

  anon0:
    PdoExtension_5 := actual_PdoExtension_5;
    ntStatus_11 := 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    NotifyData_1 := FcpNotifyData__PDO_DEVICE_EXTENSION(PdoExtension_5);
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    MonitorData := MonitorData__PDO_DEVICE_EXTENSION(PdoExtension_5);
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    havoc Tmp_289;
    assume {:nonnull} Tmp_289 != 0;
    assume Tmp_289 > 0;
    havoc BusExtension_9;
    assume {:nonnull} BusExtension_9 != 0;
    assume BusExtension_9 > 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 662} Tmp_290 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    call {:si_unique_call 663} sdv_KeAcquireSpinLock(0, Tmp_290);
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    havoc Irql_4;
    assume {:nonnull} NotifyData_1 != 0;
    assume NotifyData_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} NotifyData_1 != 0;
    assume NotifyData_1 > 0;
    havoc Notify;
    assume {:nonnull} NotifyData_1 != 0;
    assume NotifyData_1 > 0;
    call {:si_unique_call 664} vslice_dummy_var_121 := sdv_RemoveEntryList(0);
    call {:si_unique_call 665} sdv_KeReleaseSpinLock(0, Irql_4);
    call {:si_unique_call 666} vslice_dummy_var_116 := AvFcp_CompleteQueuedFcp(PdoExtension_5, Notify);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} BAND(Notify, 2) != 0;
    call {:si_unique_call 667} ExDeleteNPagedLookasideList(0);
    goto L35;

  L35:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} BAND(Notify, 1) != 0;
    call {:si_unique_call 668} ExDeleteNPagedLookasideList(0);
    goto L39;

  L39:
    call {:si_unique_call 669} Tmp_290 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    call {:si_unique_call 670} sdv_KeAcquireSpinLock(0, Tmp_290);
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    havoc Irql_4;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 671} sdv_KeReleaseSpinLock(0, Irql_4);
    call {:si_unique_call 672} Tmp_290 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    call {:si_unique_call 673} sdv_KeAcquireSpinLock(0, Tmp_290);
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    havoc Irql_4;
    goto L53;

  L53:
    call {:si_unique_call 674} CromData, sdv_218, sdv_220, PdoCromData, Irql_4, Tmp_290, vslice_dummy_var_118, vslice_dummy_var_119, vslice_dummy_var_120 := Av_PDO_StopDevice_loop_L53(CromData, sdv_218, sdv_220, PdoCromData, Irql_4, BusExtension_9, Tmp_290, PdoExtension_5, vslice_dummy_var_118, vslice_dummy_var_119, vslice_dummy_var_120);
    goto L53_last;

  L53_last:
    call {:si_unique_call 687} sdv_218 := sdv_IsListEmpty(0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} sdv_218 == 0;
    PdoCromData := 0;
    CromData := 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 675} sdv_220 := RemoveHeadList(PdoCromList__PDO_DEVICE_EXTENSION(PdoExtension_5));
    PdoCromData := sdv_220;
    assume {:nonnull} PdoCromData != 0;
    assume PdoCromData > 0;
    havoc CromData;
    assume {:nonnull} CromData != 0;
    assume CromData > 0;
    assume {:nonnull} CromData != 0;
    assume CromData > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L82;

  L82:
    call {:si_unique_call 676} sdv_ExFreePool(0);
    goto L82_dummy;

  L82_dummy:
    assume false;
    return;

  anon18_Then:
    call {:si_unique_call 677} vslice_dummy_var_118 := sdv_RemoveEntryList(0);
    call {:si_unique_call 678} sdv_KeReleaseSpinLock(0, Irql_4);
    call {:si_unique_call 679} vslice_dummy_var_119 := Av1394_RemoveConfigRomEntry(CromData);
    call {:si_unique_call 680} sdv_ExFreePool(0);
    call {:si_unique_call 681} vslice_dummy_var_120 := Av1394_BusReset(BusExtension_9, 0, 0);
    call {:si_unique_call 682} Tmp_290 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    call {:si_unique_call 683} sdv_KeAcquireSpinLock(0, Tmp_290);
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    havoc Irql_4;
    goto L82;

  anon16_Then:
    assume {:partition} sdv_218 != 0;
    assume {:nonnull} MonitorData != 0;
    assume MonitorData > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 684} vslice_dummy_var_117 := sdv_RemoveEntryList(0);
    assume {:nonnull} MonitorData != 0;
    assume MonitorData > 0;
    assume {:nonnull} MonitorData != 0;
    assume MonitorData > 0;
    assume {:nonnull} MonitorData != 0;
    assume MonitorData > 0;
    goto L59;

  L59:
    call {:si_unique_call 685} sdv_KeReleaseSpinLock(0, Irql_4);
    Tmp_288 := ntStatus_11;
    return;

  anon17_Then:
    goto L59;

  anon15_Then:
    assume {:partition} BAND(Notify, 1) == 0;
    goto L39;

  anon14_Then:
    assume {:partition} BAND(Notify, 2) == 0;
    goto L35;

  anon13_Then:
    call {:si_unique_call 686} sdv_KeReleaseSpinLock(0, Irql_4);
    goto L39;
}



procedure {:origName "Av_EnumerateChildren"} Av_EnumerateChildren(actual_BusExtension_10: int) returns (Tmp_291: int);
  modifies alloc, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_EnumerateChildren"} Av_EnumerateChildren(actual_BusExtension_10: int) returns (Tmp_291: int)
{
  var {:scalar} sdv_222: int;
  var {:scalar} ntStatus_12: int;
  var {:pointer} PdoDeviceObject_1: int;
  var {:pointer} CurrPdoData: int;
  var {:pointer} BusExtension_10: int;
  var vslice_dummy_var_2038: int;
  var vslice_dummy_var_2039: int;

  anon0:
    call {:si_unique_call 688} PdoDeviceObject_1 := __HAVOC_malloc(4);
    BusExtension_10 := actual_BusExtension_10;
    ntStatus_12 := 0;
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    call {:si_unique_call 689} sdv_222 := sdv_IsListEmpty(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_222 == 0;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    havoc CurrPdoData;
    goto L51;

  L51:
    call {:si_unique_call 690} ntStatus_12, CurrPdoData := Av_EnumerateChildren_loop_L51(ntStatus_12, PdoDeviceObject_1, CurrPdoData, BusExtension_10);
    goto L51_last;

  L51_last:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} CurrPdoData != 0;
    assume CurrPdoData > 0;
    assume {:nonnull} CurrPdoData != 0;
    assume CurrPdoData > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} CurrPdoData != 0;
    assume CurrPdoData > 0;
    goto L58;

  L58:
    assume {:nonnull} CurrPdoData != 0;
    assume CurrPdoData > 0;
    havoc CurrPdoData;
    goto L58_dummy;

  L58_dummy:
    assume false;
    return;

  anon33_Then:
    assume {:nonnull} CurrPdoData != 0;
    assume CurrPdoData > 0;
    havoc vslice_dummy_var_2038;
    call {:si_unique_call 691} ntStatus_12 := Av_CreatePDO(BusExtension_10, CurrPdoData, vslice_dummy_var_2038, PdoDeviceObject_1);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} ntStatus_12 < 0;
    Tmp_291 := ntStatus_12;
    goto L1;

  L1:
    return;

  anon32_Then:
    assume {:partition} 0 <= ntStatus_12;
    goto L58;

  anon31_Then:
    goto L36;

  L36:
    Tmp_291 := ntStatus_12;
    goto L1;

  anon23_Then:
    assume {:partition} sdv_222 != 0;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 692} ntStatus_12 := Av1394_GetUnitInfo(BusExtension_10, UnitData__BUS_DEVICE_EXTENSION(BusExtension_10));
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} ntStatus_12 >= 0;
    call {:si_unique_call 693} ntStatus_12 := Av_GetDiagFlags(BusExtension_10);
    call {:si_unique_call 694} ntStatus_12 := Av_CreatePDO(BusExtension_10, 0, -858989091, PdoDeviceObject_1);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} ntStatus_12 >= 0;
    goto L30;

  L30:
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    havoc vslice_dummy_var_2039;
    call {:si_unique_call 695} ntStatus_12 := Av_BuildIDs(BusExtension_10, vslice_dummy_var_2039);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_12 >= 0;
    goto L36;

  anon28_Then:
    assume {:partition} 0 > ntStatus_12;
    Tmp_291 := ntStatus_12;
    goto L1;

  anon27_Then:
    assume {:partition} 0 > ntStatus_12;
    Tmp_291 := ntStatus_12;
    goto L1;

  anon26_Then:
    assume {:partition} 0 > ntStatus_12;
    Tmp_291 := ntStatus_12;
    goto L1;

  anon24_Then:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 696} ntStatus_12 := Av1394_GetVirtualUnitInfo(BusExtension_10, UnitData__BUS_DEVICE_EXTENSION(BusExtension_10));
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} ntStatus_12 >= 0;
    call {:si_unique_call 697} ntStatus_12 := Av_CreatePDO(BusExtension_10, 0, -572666676, PdoDeviceObject_1);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ntStatus_12 < 0;
    Tmp_291 := ntStatus_12;
    goto L1;

  anon30_Then:
    assume {:partition} 0 <= ntStatus_12;
    goto L30;

  anon29_Then:
    assume {:partition} 0 > ntStatus_12;
    Tmp_291 := ntStatus_12;
    goto L1;

  anon25_Then:
    Tmp_291 := -1073741823;
    goto L1;
}



procedure {:origName "Av_CreateAvAdapterData"} Av_CreateAvAdapterData(actual_BusExtension_11: int, actual_AvAdapterData_5: int) returns (Tmp_293: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_CreateAvAdapterData"} Av_CreateAvAdapterData(actual_BusExtension_11: int, actual_AvAdapterData_5: int) returns (Tmp_293: int)
{
  var {:scalar} Status_6: int;
  var {:pointer} BusExtension_11: int;
  var {:pointer} AvAdapterData_5: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_2040: int;

  anon0:
    BusExtension_11 := actual_BusExtension_11;
    AvAdapterData_5 := actual_AvAdapterData_5;
    Status_6 := 0;
    assume {:nonnull} AvAdapterData_5 != 0;
    assume AvAdapterData_5 > 0;
    call {:si_unique_call 698} Status_6 := AvCmp_CreateCmpData(BusExtension_11, 1, CmpData__AV_ADAPTER_DATA(AvAdapterData_5));
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Status_6 < 0;
    goto L19;

  L19:
    Tmp_293 := Status_6;
    return;

  anon5_Then:
    assume {:partition} 0 <= Status_6;
    assume {:nonnull} AvAdapterData_5 != 0;
    assume AvAdapterData_5 > 0;
    call {:si_unique_call 699} Status_6 := AvFcp_CreateFcpData(BusExtension_11, FcpData__AV_ADAPTER_DATA(AvAdapterData_5));
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Status_6 >= 0;
    goto L19;

  anon6_Then:
    assume {:partition} 0 > Status_6;
    assume {:nonnull} AvAdapterData_5 != 0;
    assume AvAdapterData_5 > 0;
    havoc vslice_dummy_var_2040;
    call {:si_unique_call 700} vslice_dummy_var_122 := AvCmp_DestroyCmpData(BusExtension_11, vslice_dummy_var_2040);
    assume {:nonnull} BusExtension_11 != 0;
    assume BusExtension_11 > 0;
    goto L19;
}



procedure {:origName "Av_PDO_Pnp"} Av_PDO_Pnp(actual_DeviceObject_21: int, actual_Irp_19: int) returns (Tmp_295: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, thread_status, return_state, lowerDriverFailed, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, irp_copy_next, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_PDO_Pnp"} Av_PDO_Pnp(actual_DeviceObject_21: int, actual_Irp_19: int) returns (Tmp_295: int)
{
  var {:pointer} PdoData_2: int;
  var {:scalar} Tmp_296: int;
  var {:scalar} uniRetString: int;
  var {:pointer} Tmp_297: int;
  var {:pointer} Tmp_299: int;
  var {:scalar} uniRetString_1: int;
  var {:scalar} Tmp_301: int;
  var {:pointer} Tmp_302: int;
  var {:pointer} IrpStack_4: int;
  var {:pointer} Tmp_303: int;
  var {:pointer} sdv_237: int;
  var {:pointer} sdv_238: int;
  var {:pointer} DeviceCapabilities: int;
  var {:pointer} Tmp_304: int;
  var {:scalar} Tmp_305: int;
  var {:scalar} Tmp_306: int;
  var {:scalar} ntStatus_13: int;
  var {:pointer} uniModelId_1: int;
  var {:pointer} PdoExtension_6: int;
  var {:pointer} Tmp_307: int;
  var {:pointer} Tmp_308: int;
  var {:scalar} Tmp_309: int;
  var {:pointer} ReturnBuffer: int;
  var {:pointer} sdv_242: int;
  var {:pointer} sdv_243: int;
  var {:pointer} sdv_244: int;
  var {:pointer} Tmp_310: int;
  var {:pointer} BusInfo: int;
  var {:pointer} sdv_246: int;
  var {:pointer} BusExtension_12: int;
  var {:pointer} Tmp_311: int;
  var {:scalar} Tmp_312: int;
  var {:scalar} Tmp_313: int;
  var {:pointer} uniVendorId_1: int;
  var {:scalar} Tmp_314: int;
  var {:pointer} Tmp_315: int;
  var {:pointer} DeviceRelations: int;
  var {:scalar} Tmp_317: int;
  var {:pointer} DeviceObject_21: int;
  var {:pointer} Irp_19: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_2041: int;

  anon0:
    call {:si_unique_call 701} uniRetString := __HAVOC_malloc(12);
    call {:si_unique_call 702} uniRetString_1 := __HAVOC_malloc(12);
    DeviceObject_21 := actual_DeviceObject_21;
    Irp_19 := actual_Irp_19;
    call {:si_unique_call 703} Tmp_297 := __HAVOC_malloc(28);
    call {:si_unique_call 704} vslice_dummy_var_125 := __HAVOC_malloc(8);
    call {:si_unique_call 705} Tmp_299 := __HAVOC_malloc(28);
    call {:si_unique_call 706} vslice_dummy_var_126 := __HAVOC_malloc(76);
    call {:si_unique_call 707} Tmp_302 := __HAVOC_malloc(28);
    call {:si_unique_call 708} Tmp_308 := __HAVOC_malloc(28);
    call {:si_unique_call 709} Tmp_310 := __HAVOC_malloc(28);
    call {:si_unique_call 710} Tmp_311 := __HAVOC_malloc(28);
    call {:si_unique_call 711} Tmp_315 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    havoc PdoExtension_6;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc Tmp_303;
    assume {:nonnull} Tmp_303 != 0;
    assume Tmp_303 > 0;
    havoc BusExtension_12;
    call {:si_unique_call 712} IrpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    ntStatus_13 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_19))];
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    goto L42;

  L42:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_19))] := ntStatus_13;
    call {:si_unique_call 713} sdv_IoCompleteRequest(0, 0);
    Tmp_295 := ntStatus_13;
    goto L1;

  L1:
    return;

  anon83_Then:
    goto L20;

  L20:
    ntStatus_13 := 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    call {:si_unique_call 714} ntStatus_13 := Av_PDO_StopDevice(PdoExtension_6);
    goto L205;

  L205:
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc Tmp_307;
    assume {:nonnull} Tmp_307 != 0;
    assume Tmp_307 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc Tmp_304;
    assume {:nonnull} Tmp_304 != 0;
    assume Tmp_304 > 0;
    call {:si_unique_call 715} IoDeleteDevice(0);
    goto L42;

  anon82_Then:
    goto L42;

  anon99_Then:
    goto L42;

  anon98_Then:
    goto L205;

  anon84_Then:
    call {:si_unique_call 716} sdv_242 := ExAllocatePoolWithTag(1, 24, 943206710);
    BusInfo := sdv_242;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} BusInfo != 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    ntStatus_13 := 0;
    goto L42;

  anon108_Then:
    assume {:partition} BusInfo == 0;
    ntStatus_13 := -1073741670;
    goto L42;

  anon85_Then:
    ntStatus_13 := 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc PdoData_2;
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc Tmp_317;
    call {:si_unique_call 717} sdv_243 := ExAllocatePoolWithTag(1, Tmp_317, 943206710);
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc Tmp_306;
    call {:si_unique_call 718} sdv_RtlZeroMemory(0, Tmp_306);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L42;

  anon107_Then:
    ntStatus_13 := -1073741670;
    goto L42;

  anon77_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L42;

  anon75_Then:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume Irp_19 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 719} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L248;

  L248:
    call {:si_unique_call 720} sdv_IoSkipCurrentIrpStackLocation(Irp_19);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume Irp_19 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 721} SLIC_sdv_IoCallDriver_entry(0);
    goto L251;

  L251:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc vslice_dummy_var_2041;
    call {:si_unique_call 722} ntStatus_13 := sdv_IoCallDriver#1(vslice_dummy_var_2041, Irp_19);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume Irp_19 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 723} SLIC_sdv_IoCallDriver_exit(0, Irp_19);
    goto L85;

  L85:
    Tmp_295 := ntStatus_13;
    goto L1;

  anon96_Then:
    assume !(Irp_19 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L85;

  anon78_Then:
    assume !(Irp_19 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L251;

  anon76_Then:
    assume !(Irp_19 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L248;

  anon93_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    ntStatus_13 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_19))];
    goto L42;

  anon94_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    havoc Tmp_305;
    call {:si_unique_call 724} sdv_246 := ExAllocatePoolWithTag(1, Tmp_305, 943206710);
    ReturnBuffer := sdv_246;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} ReturnBuffer != 0;
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    havoc Tmp_296;
    call {:si_unique_call 725} sdv_RtlZeroMemory(0, Tmp_296);
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    havoc Tmp_314;
    call {:si_unique_call 726} sdv_RtlCopyMemory(0, 0, Tmp_314);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L42;

  anon106_Then:
    assume {:partition} ReturnBuffer == 0;
    ntStatus_13 := -1073741670;
    goto L42;

  anon105_Then:
    goto L42;

  anon95_Then:
    goto L53;

  L53:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc Tmp_312;
    call {:si_unique_call 727} sdv_238 := ExAllocatePoolWithTag(1, Tmp_312, 943206710);
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc Tmp_313;
    call {:si_unique_call 728} sdv_RtlZeroMemory(0, Tmp_313);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L42;

  anon104_Then:
    ntStatus_13 := -1073741670;
    goto L42;

  anon74_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L42;

  anon103_Then:
    goto L53;

  anon86_Then:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    uniVendorId_1 := uniVendorId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_12));
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    uniModelId_1 := uniModelId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_12));
    goto L137;

  L137:
    ntStatus_13 := 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    havoc Tmp_301;
    call {:si_unique_call 729} sdv_237 := ExAllocatePoolWithTag(1, Tmp_301, 943206710);
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    havoc Tmp_309;
    call {:si_unique_call 730} sdv_RtlZeroMemory(0, Tmp_309);
    assume {:nonnull} uniVendorId_1 != 0;
    assume uniVendorId_1 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} uniModelId_1 != 0;
    assume uniModelId_1 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 731} vslice_dummy_var_123 := corral_nondet();
    call {:si_unique_call 732} vslice_dummy_var_128 := corral_nondet();
    call {:si_unique_call 733} vslice_dummy_var_124 := corral_nondet();
    goto L166;

  L166:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    goto L42;

  anon80_Then:
    goto L153;

  L153:
    call {:si_unique_call 734} vslice_dummy_var_129 := corral_nondet();
    goto L166;

  anon79_Then:
    goto L153;

  anon102_Then:
    ntStatus_13 := -1073741670;
    goto L42;

  anon101_Then:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    uniModelId_1 := uniUnitModelId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_12));
    goto L137;

  anon73_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    ntStatus_13 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_19))];
    goto L42;

  anon87_Then:
    ntStatus_13 := 0;
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    havoc DeviceCapabilities;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_311;
    assume {:nonnull} Tmp_311 != 0;
    assume Tmp_311 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_297;
    assume {:nonnull} Tmp_297 != 0;
    assume Tmp_297 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_310;
    assume {:nonnull} Tmp_310 != 0;
    assume Tmp_310 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_302;
    assume {:nonnull} Tmp_302 != 0;
    assume Tmp_302 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_308;
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_299;
    assume {:nonnull} Tmp_299 != 0;
    assume Tmp_299 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    goto L42;

  anon88_Then:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    call {:si_unique_call 735} sdv_244 := ExAllocatePoolWithTag(1, 8, 943206710);
    DeviceRelations := sdv_244;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} DeviceRelations != 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_315;
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    call {:si_unique_call 736} vslice_dummy_var_127 := sdv_ObReferenceObject(0);
    ntStatus_13 := 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L42;

  anon100_Then:
    assume {:partition} DeviceRelations == 0;
    ntStatus_13 := -1073741670;
    goto L42;

  anon81_Then:
    goto L42;

  anon89_Then:
    ntStatus_13 := 0;
    goto L42;

  anon90_Then:
    call {:si_unique_call 737} ntStatus_13 := Av_PDO_StopDevice(PdoExtension_6);
    goto L42;

  anon91_Then:
    goto L20;

  anon92_Then:
    ntStatus_13 := 0;
    goto L42;

  anon97_Then:
    call {:si_unique_call 738} ntStatus_13 := Av_PDO_StartDevice(PdoExtension_6);
    goto L42;
}



procedure {:origName "Av_FDO_Pnp"} Av_FDO_Pnp(actual_DeviceObject_22: int, actual_Irp_20: int) returns (Tmp_318: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, thread_status, return_state, lowerDriverFailed, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, irp_copy_next, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av_FDO_Pnp"} Av_FDO_Pnp(actual_DeviceObject_22: int, actual_Irp_20: int) returns (Tmp_318: int)
{
  var {:scalar} i: int;
  var {:pointer} Relations: int;
  var {:pointer} PdoData_4: int;
  var {:pointer} sdv_251: int;
  var {:scalar} numPDO: int;
  var {:pointer} Tmp_322: int;
  var {:scalar} Tmp_324: int;
  var {:pointer} IrpStack_5: int;
  var {:dopa} {:scalar} ulLength: int;
  var {:pointer} Tmp_325: int;
  var {:scalar} sdv_260: int;
  var {:pointer} DeviceCapabilities_1: int;
  var {:scalar} ntStatus_14: int;
  var {:pointer} Tmp_327: int;
  var {:scalar} Irql_5: int;
  var {:pointer} CurrPdoData_1: int;
  var {:pointer} BusExtension_13: int;
  var {:pointer} PdoData_5: int;
  var {:scalar} Tmp_328: int;
  var {:pointer} AvAdapterData_6: int;
  var {:pointer} sdv_275: int;
  var {:scalar} Tmp_331: int;
  var {:pointer} Tmp_332: int;
  var {:pointer} ParentDeviceObject: int;
  var {:pointer} DeviceObject_22: int;
  var {:pointer} Irp_20: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_2042: int;
  var vslice_dummy_var_2043: int;
  var vslice_dummy_var_2044: int;
  var vslice_dummy_var_2045: int;
  var vslice_dummy_var_2046: int;

  anon0:
    call {:si_unique_call 739} ulLength := __HAVOC_malloc(4);
    DeviceObject_22 := actual_DeviceObject_22;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 740} Tmp_332 := __HAVOC_malloc(4);
    ntStatus_14 := 0;
    assume {:nonnull} DeviceObject_22 != 0;
    assume DeviceObject_22 > 0;
    havoc BusExtension_13;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc ParentDeviceObject;
    call {:si_unique_call 741} IrpStack_5 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    goto L199;

  L199:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    call {:si_unique_call 742} vslice_dummy_var_131 := Av_FDO_StopDevice(BusExtension_13);
    goto L200;

  L200:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    goto L205;

  L205:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto L207;

  L207:
    call {:si_unique_call 743} PdoData_4, sdv_260, sdv_275 := Av_FDO_Pnp_loop_L207(PdoData_4, sdv_260, BusExtension_13, sdv_275);
    goto L207_last;

  L207_last:
    call {:si_unique_call 848} sdv_260 := sdv_IsListEmpty(0);
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} sdv_260 == 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 744} sdv_275 := RemoveHeadList(PdoList__BUS_DEVICE_EXTENSION(BusExtension_13));
    PdoData_4 := sdv_275;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    call {:si_unique_call 745} IoDeleteDevice(0);
    goto L232;

  L232:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 746} sdv_ExFreePool(0);
    goto L236;

  L236:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 747} sdv_ExFreePool(0);
    goto L240;

  L240:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 748} sdv_ExFreePool(0);
    goto L244;

  L244:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} PdoData_4 != 0;
    call {:si_unique_call 749} sdv_ExFreePool(0);
    goto anon193_Else_dummy;

  anon193_Else_dummy:
    assume false;
    return;

  anon193_Then:
    assume {:partition} PdoData_4 == 0;
    goto anon193_Then_dummy;

  anon193_Then_dummy:
    assume false;
    return;

  anon192_Then:
    goto L244;

  anon191_Then:
    goto L240;

  anon190_Then:
    goto L236;

  anon230_Then:
    goto L232;

  anon188_Then:
    assume {:partition} sdv_260 != 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 750} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L379;

  L379:
    call {:si_unique_call 751} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 752} SLIC_sdv_IoCallDriver_entry(0);
    goto L382;

  L382:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc vslice_dummy_var_2042;
    call {:si_unique_call 753} ntStatus_14 := sdv_IoCallDriver#1(vslice_dummy_var_2042, Irp_20);
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 754} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L220;

  L220:
    call {:si_unique_call 755} IoDetachDevice(0);
    call {:si_unique_call 756} IoDeleteDevice(0);
    goto L226;

  L226:
    Tmp_318 := ntStatus_14;
    goto L1;

  L1:
    return;

  anon216_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L220;

  anon189_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L382;

  anon229_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L379;

  anon187_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 757} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L388;

  L388:
    call {:si_unique_call 758} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 759} SLIC_sdv_IoCallDriver_entry(0);
    goto L391;

  L391:
    call {:si_unique_call 760} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 761} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L226;

  anon217_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L226;

  anon194_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L391;

  anon231_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L388;

  anon186_Then:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc AvAdapterData_6;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} AvAdapterData_6 != 0;
    call {:si_unique_call 762} Tmp_327 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_327 != 0;
    assume Tmp_327 > 0;
    call {:si_unique_call 763} sdv_KeAcquireSpinLock(0, Tmp_327);
    assume {:nonnull} Tmp_327 != 0;
    assume Tmp_327 > 0;
    havoc Irql_5;
    assume {:nonnull} AvAdapterData_6 != 0;
    assume AvAdapterData_6 > 0;
    assume {:nonnull} AvAdapterData_6 != 0;
    assume AvAdapterData_6 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    call {:si_unique_call 764} sdv_KeReleaseSpinLock(0, Irql_5);
    goto L259;

  L259:
    call {:si_unique_call 765} RtlFreeUnicodeString(0);
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 766} sdv_ExFreePool(0);
    goto L291;

  L291:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 767} sdv_ExFreePool(0);
    goto L295;

  L295:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 768} sdv_ExFreePool(0);
    goto L299;

  L299:
    call {:si_unique_call 769} ExDeleteNPagedLookasideList(0);
    PdoData_5 := 0;
    goto L307;

  L307:
    call {:si_unique_call 770} PdoData_5 := Av_FDO_Pnp_loop_L307(BusExtension_13, PdoData_5);
    goto L307_last;

  L307_last:
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} PdoData_5 != 0;
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    havoc PdoData_5;
    goto L310;

  L310:
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    goto anon233_Else_dummy;

  anon233_Else_dummy:
    assume false;
    return;

  anon233_Then:
    goto L205;

  anon201_Then:
    assume {:partition} PdoData_5 == 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc PdoData_5;
    goto L310;

  anon200_Then:
    goto L299;

  anon199_Then:
    goto L295;

  anon198_Then:
    goto L291;

  anon235_Then:
    call {:si_unique_call 771} sdv_KeReleaseSpinLock(0, Irql_5);
    call {:si_unique_call 772} vslice_dummy_var_133 := Av1394_SetPacketSize(BusExtension_13, 0);
    call {:si_unique_call 773} vslice_dummy_var_134 := Av1394_BusReset(BusExtension_13, 0, 0);
    goto L259;

  anon234_Then:
    assume {:partition} AvAdapterData_6 == 0;
    call {:si_unique_call 774} vslice_dummy_var_132 := Av1394_SetPacketSize(BusExtension_13, 0);
    call {:si_unique_call 775} vslice_dummy_var_135 := Av1394_BusReset(BusExtension_13, 0, 0);
    goto L259;

  anon197_Then:
    goto L259;

  anon196_Then:
    goto L259;

  anon195_Then:
    goto L259;

  anon232_Then:
    goto L259;

  anon185_Then:
    goto L200;

  anon204_Then:
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 776} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L478;

  L478:
    call {:si_unique_call 777} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 778} SLIC_sdv_IoCallDriver_entry(0);
    goto L481;

  L481:
    call {:si_unique_call 779} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 780} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L331;

  L331:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon227_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L331;

  anon203_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L481;

  anon166_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L478;

  anon205_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 781} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L469;

  L469:
    call {:si_unique_call 782} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 783} SLIC_sdv_IoCallDriver_entry(0);
    goto L472;

  L472:
    call {:si_unique_call 784} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 785} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L43;

  L43:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon226_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L43;

  anon168_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L472;

  anon246_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L469;

  anon206_Then:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 786} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L460;

  L460:
    call {:si_unique_call 787} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 788} SLIC_sdv_IoCallDriver_entry(0);
    goto L463;

  L463:
    call {:si_unique_call 789} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 790} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L48;

  L48:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon225_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L48;

  anon169_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L463;

  anon167_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L460;

  anon207_Then:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    havoc DeviceCapabilities_1;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 791} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L451;

  L451:
    call {:si_unique_call 792} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 793} SLIC_sdv_IoCallDriver_entry(0);
    goto L454;

  L454:
    call {:si_unique_call 794} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 795} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L59;

  L59:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon224_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L59;

  anon170_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L454;

  anon245_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L451;

  anon208_Then:
    Relations := 0;
    assume {:nonnull} ulLength != 0;
    assume ulLength > 0;
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 796} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L433;

  L433:
    call {:si_unique_call 797} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 798} SLIC_sdv_IoCallDriver_entry(0);
    goto L436;

  L436:
    call {:si_unique_call 799} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 800} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L75;

  L75:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon222_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L75;

  anon172_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L436;

  anon171_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L433;

  anon240_Then:
    call {:si_unique_call 801} ntStatus_14 := Av_EnumerateChildren(BusExtension_13);
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} ntStatus_14 >= 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    havoc Tmp_322;
    assume {:nonnull} Tmp_322 != 0;
    assume Tmp_322 > 0;
    havoc Tmp_324;
    goto L82;

  L82:
    i := Tmp_324;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc vslice_dummy_var_2043;
    call {:si_unique_call 802} ntStatus_14 := RtlULongAdd(vslice_dummy_var_2043, i, ulLength);
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} ntStatus_14 >= 0;
    assume {:nonnull} ulLength != 0;
    assume ulLength > 0;
    havoc vslice_dummy_var_2044;
    call {:si_unique_call 803} ntStatus_14 := RtlULongMult(vslice_dummy_var_2044, 4, ulLength);
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} ntStatus_14 >= 0;
    assume {:nonnull} ulLength != 0;
    assume ulLength > 0;
    havoc vslice_dummy_var_2045;
    call {:si_unique_call 804} ntStatus_14 := RtlULongAdd(vslice_dummy_var_2045, 8, ulLength);
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} ntStatus_14 >= 0;
    assume {:nonnull} ulLength != 0;
    assume ulLength > 0;
    havoc vslice_dummy_var_2046;
    call {:si_unique_call 805} sdv_251 := ExAllocatePoolWithTag(512, vslice_dummy_var_2046, 943206710);
    Relations := sdv_251;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} Relations != 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} i != 0;
    Tmp_328 := i * 4;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    havoc Tmp_325;
    assume {:nonnull} Tmp_325 != 0;
    assume Tmp_325 > 0;
    call {:si_unique_call 806} sdv_RtlCopyMemory(0, 0, Tmp_328);
    goto L108;

  L108:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    numPDO := 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc CurrPdoData_1;
    goto L120;

  L120:
    call {:si_unique_call 807} numPDO, CurrPdoData_1, Tmp_331, Tmp_332, vslice_dummy_var_136 := Av_FDO_Pnp_loop_L120(i, Relations, numPDO, CurrPdoData_1, Tmp_331, Tmp_332, vslice_dummy_var_136);
    goto L120_last;

  L120_last:
    goto anon179_Then, anon179_Else;

  anon179_Else:
    Tmp_331 := i + numPDO;
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    havoc Tmp_332;
    assume {:nonnull} CurrPdoData_1 != 0;
    assume CurrPdoData_1 > 0;
    assume {:nonnull} Tmp_332 != 0;
    assume Tmp_332 > 0;
    call {:si_unique_call 808} vslice_dummy_var_136 := sdv_ObReferenceObject(0);
    assume {:nonnull} CurrPdoData_1 != 0;
    assume CurrPdoData_1 > 0;
    havoc CurrPdoData_1;
    numPDO := numPDO + 1;
    goto anon179_Else_dummy;

  anon179_Else_dummy:
    assume false;
    return;

  anon179_Then:
    goto L115;

  L115:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    call {:si_unique_call 809} sdv_ExFreePool(0);
    goto L128;

  L128:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 810} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L442;

  L442:
    call {:si_unique_call 811} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 812} SLIC_sdv_IoCallDriver_entry(0);
    goto L445;

  L445:
    call {:si_unique_call 813} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 814} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L139;

  L139:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon223_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L139;

  anon180_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L445;

  anon244_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L442;

  anon243_Then:
    goto L128;

  anon242_Then:
    goto L115;

  anon178_Then:
    assume {:partition} i == 0;
    goto L108;

  anon241_Then:
    assume {:partition} Relations == 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := -1073741670;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 815} sdv_IoCompleteRequest(0, 0);
    Tmp_318 := -1073741670;
    goto L1;

  anon177_Then:
    assume {:partition} 0 > ntStatus_14;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := -1073741670;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 816} sdv_IoCompleteRequest(0, 0);
    Tmp_318 := -1073741670;
    goto L1;

  anon176_Then:
    assume {:partition} 0 > ntStatus_14;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := -1073741670;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 817} sdv_IoCompleteRequest(0, 0);
    Tmp_318 := -1073741670;
    goto L1;

  anon175_Then:
    assume {:partition} 0 > ntStatus_14;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := -1073741670;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 818} sdv_IoCompleteRequest(0, 0);
    Tmp_318 := -1073741670;
    goto L1;

  anon174_Then:
    Tmp_324 := 0;
    goto L82;

  anon173_Then:
    assume {:partition} 0 > ntStatus_14;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := ntStatus_14;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 819} sdv_IoCompleteRequest(0, 0);
    Tmp_318 := ntStatus_14;
    goto L1;

  anon209_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 820} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L424;

  L424:
    call {:si_unique_call 821} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 822} SLIC_sdv_IoCallDriver_entry(0);
    goto L427;

  L427:
    call {:si_unique_call 823} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 824} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L172;

  L172:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon221_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L172;

  anon181_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L427;

  anon239_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L424;

  anon210_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 825} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L415;

  L415:
    call {:si_unique_call 826} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 827} SLIC_sdv_IoCallDriver_entry(0);
    goto L418;

  L418:
    call {:si_unique_call 828} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 829} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L180;

  L180:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon220_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L180;

  anon182_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L418;

  anon238_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L415;

  anon211_Then:
    call {:si_unique_call 830} vslice_dummy_var_130 := Av_FDO_StopDevice(BusExtension_13);
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 831} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L406;

  L406:
    call {:si_unique_call 832} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 833} SLIC_sdv_IoCallDriver_entry(0);
    goto L409;

  L409:
    call {:si_unique_call 834} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 835} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L189;

  L189:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon219_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L189;

  anon183_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L409;

  anon237_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L406;

  anon212_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 836} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L397;

  L397:
    call {:si_unique_call 837} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 838} SLIC_sdv_IoCallDriver_entry(0);
    goto L400;

  L400:
    call {:si_unique_call 839} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 840} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L197;

  L197:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon218_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L197;

  anon184_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L400;

  anon236_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L397;

  anon213_Then:
    goto L199;

  anon214_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 841} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl1);
    goto L370;

  L370:
    call {:si_unique_call 842} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 843} SLIC_sdv_IoCallDriver_entry(0);
    goto L373;

  L373:
    call {:si_unique_call 844} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 845} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L319;

  L319:
    Tmp_318 := ntStatus_14;
    goto L1;

  anon215_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L319;

  anon202_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L373;

  anon228_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L370;

  anon165_Then:
    call {:si_unique_call 846} ntStatus_14 := Av_FDO_StartDevice(BusExtension_13, Irp_20);
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] := ntStatus_14;
    call {:si_unique_call 847} sdv_IoCompleteRequest(0, 0);
    Tmp_318 := ntStatus_14;
    goto L1;
}



procedure {:origName "Av1394_Talk"} Av1394_Talk(actual_CipData: int) returns (Tmp_333: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_Talk"} Av1394_Talk(actual_CipData: int) returns (Tmp_333: int)
{
  var {:pointer} Irb_1: int;
  var {:pointer} sdv_278: int;
  var {:scalar} Status_7: int;
  var {:pointer} CipData: int;
  var vslice_dummy_var_2047: int;
  var vslice_dummy_var_2048: int;

  anon0:
    CipData := actual_CipData;
    Status_7 := 0;
    Irb_1 := 0;
    call {:si_unique_call 849} sdv_278 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_1 := sdv_278;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Irb_1 != 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} CipData != 0;
    assume CipData > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} CipData != 0;
    assume CipData > 0;
    havoc vslice_dummy_var_2047;
    call {:si_unique_call 850} Status_7 := Av_SubmitIrpSynch(vslice_dummy_var_2047, 0, Irb_1);
    assume {:nonnull} CipData != 0;
    assume CipData > 0;
    havoc vslice_dummy_var_2048;
    call {:si_unique_call 851} ExFreeToNPagedLookasideList(vslice_dummy_var_2048, Irb_1);
    goto L27;

  L27:
    Tmp_333 := Status_7;
    return;

  anon3_Then:
    assume {:partition} Irb_1 == 0;
    Status_7 := -1073741670;
    goto L27;
}



procedure {:origName "Av1394_UpdateCycleTime"} Av1394_UpdateCycleTime(actual_CycleTime: int, actual_Count: int) returns (Tmp_335: int);
  free ensures {:va_keep} Tmp_335 == 1 || Tmp_335 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_UpdateCycleTime"} Av1394_UpdateCycleTime(actual_CycleTime: int, actual_Count: int) returns (Tmp_335: int)
{
  var {:scalar} bCountFlipped: int;
  var {:pointer} CycleTime: int;
  var {:scalar} Count: int;

  anon0:
    CycleTime := actual_CycleTime;
    Count := actual_Count;
    bCountFlipped := 0;
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    havoc Count;
    goto L6;

  L6:
    call {:si_unique_call 852} bCountFlipped, Count := Av1394_UpdateCycleTime_loop_L6(bCountFlipped, CycleTime, Count);
    goto L6_last;

  L6_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Count >= 3072;
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    Count := Count - 3072;
    goto L10;

  L10:
    call {:si_unique_call 853} bCountFlipped := Av1394_UpdateCycleTime_loop_L10(bCountFlipped, CycleTime);
    goto L10_last;

  L10_last:
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    bCountFlipped := 1;
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    goto L14;

  L14:
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    goto L14_dummy;

  L14_dummy:
    assume false;
    return;

  anon9_Then:
    goto L14;

  anon8_Then:
    goto anon8_Then_dummy;

  anon8_Then_dummy:
    assume false;
    return;

  anon7_Then:
    assume {:partition} 3072 > Count;
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    Tmp_335 := bCountFlipped;
    return;
}



procedure {:origName "AvCip_ConvertCipDataFormat"} AvCip_ConvertCipDataFormat(actual_Format: int) returns (Tmp_337: int);
  free ensures {:va_keep} Tmp_337 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_ConvertCipDataFormat"} AvCip_ConvertCipDataFormat(actual_Format: int) returns (Tmp_337: int)
{
  var {:pointer} Format: int;

  anon0:
    Format := actual_Format;
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L5;

  L5:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto L7;

  L7:
    Tmp_337 := 0;
    return;

  anon13_Then:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L10;

  L10:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto L7;

  anon15_Then:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto L7;

  anon17_Then:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto L7;

  anon18_Then:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto L7;

  anon16_Then:
    goto L10;

  anon14_Then:
    goto L5;
}



procedure {:origName "Av1394_AttachBuffer"} Av1394_AttachBuffer(actual_CipData_1: int, actual_DescriptorData: int) returns (Tmp_339: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_AttachBuffer"} Av1394_AttachBuffer(actual_CipData_1: int, actual_DescriptorData: int) returns (Tmp_339: int)
{
  var {:pointer} Irb_2: int;
  var {:pointer} sdv_280: int;
  var {:scalar} Status_8: int;
  var {:pointer} Tmp_341: int;
  var {:pointer} CipData_1: int;
  var {:pointer} DescriptorData: int;
  var vslice_dummy_var_2049: int;
  var vslice_dummy_var_2050: int;

  anon0:
    CipData_1 := actual_CipData_1;
    DescriptorData := actual_DescriptorData;
    call {:si_unique_call 854} Tmp_341 := __HAVOC_malloc(360);
    Status_8 := 0;
    Irb_2 := 0;
    call {:si_unique_call 855} sdv_280 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_2 := sdv_280;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Irb_2 != 0;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} CipData_1 != 0;
    assume CipData_1 > 0;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} DescriptorData != 0;
    assume DescriptorData > 0;
    havoc Tmp_341;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} CipData_1 != 0;
    assume CipData_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    goto L20;

  L20:
    assume {:nonnull} CipData_1 != 0;
    assume CipData_1 > 0;
    havoc vslice_dummy_var_2049;
    call {:si_unique_call 856} Status_8 := Av_SubmitIrpSynch(vslice_dummy_var_2049, 0, Irb_2);
    assume {:nonnull} CipData_1 != 0;
    assume CipData_1 > 0;
    havoc vslice_dummy_var_2050;
    call {:si_unique_call 857} ExFreeToNPagedLookasideList(vslice_dummy_var_2050, Irb_2);
    goto L28;

  L28:
    Tmp_339 := Status_8;
    return;

  anon6_Then:
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    goto L20;

  anon5_Then:
    assume {:partition} Irb_2 == 0;
    Status_8 := -1073741670;
    goto L28;
}



procedure {:origName "AvCip_Stop"} AvCip_Stop(actual_BusExtension_14: int, actual_Irp_21: int, actual_Request_1: int) returns (Tmp_342: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_Stop"} AvCip_Stop(actual_BusExtension_14: int, actual_Irp_21: int, actual_Request_1: int) returns (Tmp_342: int)
{
  var {:scalar} Status_9: int;
  var {:pointer} CipData_2: int;
  var {:pointer} Connect: int;
  var {:scalar} sdv_284: int;
  var {:scalar} Irql_6: int;
  var {:pointer} Tmp_343: int;
  var {:pointer} FrameContext: int;
  var {:pointer} BusExtension_14: int;
  var {:pointer} Request_1: int;

  anon0:
    BusExtension_14 := actual_BusExtension_14;
    Request_1 := actual_Request_1;
    Status_9 := 0;
    assume {:nonnull} Request_1 != 0;
    assume Request_1 > 0;
    havoc Connect;
    assume {:nonnull} Connect != 0;
    assume Connect > 0;
    havoc CipData_2;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} BusExtension_14 != 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Connect != 0;
    assume {:nonnull} Connect != 0;
    assume Connect > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L15;

  L15:
    Status_9 := -1073741811;
    goto L18;

  L18:
    Tmp_342 := Status_9;
    return;

  anon21_Then:
    goto L10;

  L10:
    call {:si_unique_call 858} Status_9 := Av1394_Stop(CipData_2);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status_9 >= 0;
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    call {:si_unique_call 859} Status_9 := AvCip_FreeResources(CipData_2);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Status_9 >= 0;
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 860} Tmp_343 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    call {:si_unique_call 861} sdv_KeAcquireSpinLock(0, Tmp_343);
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    havoc Irql_6;
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    call {:si_unique_call 862} sdv_284 := sdv_IsListEmpty(0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_284 != 0;
    goto L42;

  L42:
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    call {:si_unique_call 863} sdv_KeReleaseSpinLock(0, Irql_6);
    goto L18;

  anon26_Then:
    assume {:partition} sdv_284 == 0;
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    havoc FrameContext;
    assume {:nonnull} FrameContext != 0;
    assume FrameContext > 0;
    goto L42;

  anon25_Then:
    goto L18;

  anon24_Then:
    goto L18;

  anon23_Then:
    assume {:partition} 0 > Status_9;
    goto L18;

  anon22_Then:
    assume {:partition} 0 > Status_9;
    goto L18;

  anon20_Then:
    goto L15;

  anon19_Then:
    assume {:partition} Connect == 0;
    goto L10;

  anon27_Then:
    assume {:partition} BusExtension_14 == 0;
    goto L10;
}



procedure {:origName "AvCip_Listen"} AvCip_Listen(actual_BusExtension_15: int, actual_Irp_22: int, actual_Request_2: int) returns (Tmp_344: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_Listen"} AvCip_Listen(actual_BusExtension_15: int, actual_Irp_22: int, actual_Request_2: int) returns (Tmp_344: int)
{
  var {:scalar} Status_10: int;
  var {:pointer} CipData_3: int;
  var {:pointer} Connect_1: int;
  var {:pointer} BusExtension_15: int;
  var {:pointer} Request_2: int;
  var vslice_dummy_var_137: int;

  anon0:
    BusExtension_15 := actual_BusExtension_15;
    Request_2 := actual_Request_2;
    Status_10 := 0;
    assume {:nonnull} Request_2 != 0;
    assume Request_2 > 0;
    havoc Connect_1;
    assume {:nonnull} Connect_1 != 0;
    assume Connect_1 > 0;
    havoc CipData_3;
    assume {:nonnull} CipData_3 != 0;
    assume CipData_3 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    Status_10 := -1073741811;
    goto L14;

  L14:
    Tmp_344 := Status_10;
    return;

  anon18_Then:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} BusExtension_15 != 0;
    assume {:nonnull} Connect_1 != 0;
    assume Connect_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} CipData_3 != 0;
    assume CipData_3 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L19;

  L19:
    Status_10 := -1073741811;
    goto L14;

  anon15_Then:
    goto L15;

  L15:
    call {:si_unique_call 864} Status_10 := AvCip_AllocateResources(CipData_3);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Status_10 >= 0;
    assume {:nonnull} CipData_3 != 0;
    assume CipData_3 > 0;
    assume {:nonnull} CipData_3 != 0;
    assume CipData_3 > 0;
    call {:si_unique_call 865} Status_10 := Av1394_Listen(CipData_3);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Status_10 < 0;
    assume {:nonnull} CipData_3 != 0;
    assume CipData_3 > 0;
    call {:si_unique_call 866} vslice_dummy_var_137 := AvCip_FreeResources(CipData_3);
    goto L14;

  anon17_Then:
    assume {:partition} 0 <= Status_10;
    goto L14;

  anon16_Then:
    assume {:partition} 0 > Status_10;
    goto L14;

  anon14_Then:
    goto L19;

  anon13_Then:
    assume {:partition} BusExtension_15 == 0;
    goto L15;
}



procedure {:origName "AvCip_ProcessAttachBuffer_CR"} AvCip_ProcessAttachBuffer_CR(actual_DeviceObject_24: int, actual_Irp_24: int, actual_DescriptorDataIn_1: int) returns (Tmp_368: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_368 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_ProcessAttachBuffer_CR"} AvCip_ProcessAttachBuffer_CR(actual_DeviceObject_24: int, actual_Irp_24: int, actual_DescriptorDataIn_1: int) returns (Tmp_368: int)
{
  var {:pointer} CipData_5: int;
  var {:pointer} DescriptorData_2: int;
  var {:pointer} Irp_24: int;
  var {:pointer} DescriptorDataIn_1: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;

  anon0:
    Irp_24 := actual_Irp_24;
    DescriptorDataIn_1 := actual_DescriptorDataIn_1;
    DescriptorData_2 := DescriptorDataIn_1;
    assume {:nonnull} DescriptorData_2 != 0;
    assume DescriptorData_2 > 0;
    havoc CipData_5;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_24))] >= 0;
    goto L9;

  L9:
    assume {:nonnull} DescriptorData_2 != 0;
    assume DescriptorData_2 > 0;
    call {:si_unique_call 867} vslice_dummy_var_138 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_2), 0);
    Tmp_368 := -1073741802;
    return;

  anon6_Then:
    assume {:partition} 0 > Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_24))];
    assume {:nonnull} CipData_5 != 0;
    assume CipData_5 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 868} vslice_dummy_var_139 := KeCancelTimer(0);
    goto L9;

  anon5_Then:
    goto L9;
}



procedure {:origName "Av1394_AllocateResources"} Av1394_AllocateResources(actual_CipData_6: int) returns (Tmp_370: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_AllocateResources"} Av1394_AllocateResources(actual_CipData_6: int) returns (Tmp_370: int)
{
  var {:pointer} Irb_3: int;
  var {:pointer} sdv_296: int;
  var {:scalar} Status_12: int;
  var {:pointer} CipData_6: int;
  var vslice_dummy_var_2051: int;
  var vslice_dummy_var_2052: int;

  anon0:
    CipData_6 := actual_CipData_6;
    Status_12 := 0;
    Irb_3 := 0;
    call {:si_unique_call 869} sdv_296 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_3 := sdv_296;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Irb_3 != 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    goto L22;

  L22:
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    havoc vslice_dummy_var_2051;
    call {:si_unique_call 870} Status_12 := Av_SubmitIrpSynch(vslice_dummy_var_2051, 0, Irb_3);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Status_12 >= 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    goto L30;

  L30:
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    havoc vslice_dummy_var_2052;
    call {:si_unique_call 871} ExFreeToNPagedLookasideList(vslice_dummy_var_2052, Irb_3);
    goto L34;

  L34:
    Tmp_370 := Status_12;
    return;

  anon7_Then:
    assume {:partition} 0 > Status_12;
    goto L30;

  anon9_Then:
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    goto L22;

  anon8_Then:
    assume {:partition} Irb_3 == 0;
    Status_12 := -1073741670;
    goto L34;
}



procedure {:origName "AvCip_HandleFrameNotification"} AvCip_HandleFrameNotification(actual_CipData_7: int, actual_DescriptorData_3: int) returns (Tmp_372: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_372 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_HandleFrameNotification"} AvCip_HandleFrameNotification(actual_CipData_7: int, actual_DescriptorData_3: int) returns (Tmp_372: int)
{
  var {:pointer} NotifyFrameContext: int;
  var {:scalar} sdv_298: int;
  var {:pointer} sdv_299: int;
  var {:pointer} NotifyFrame: int;
  var {:scalar} NotifyInfo: int;
  var {:pointer} CipData_7: int;
  var {:pointer} DescriptorData_3: int;

  anon0:
    call {:si_unique_call 872} NotifyInfo := __HAVOC_malloc(12);
    CipData_7 := actual_CipData_7;
    DescriptorData_3 := actual_DescriptorData_3;
    goto L6;

  L6:
    call {:si_unique_call 873} NotifyFrameContext, sdv_298, sdv_299, NotifyFrame := AvCip_HandleFrameNotification_loop_L6(NotifyFrameContext, sdv_298, sdv_299, NotifyFrame, NotifyInfo, CipData_7, DescriptorData_3);
    goto L6_last;

  L6_last:
    call {:si_unique_call 876} sdv_298 := sdv_IsListEmpty(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_298 != 0;
    Tmp_372 := 0;
    return;

  anon3_Then:
    assume {:partition} sdv_298 == 0;
    assume {:nonnull} DescriptorData_3 != 0;
    assume DescriptorData_3 > 0;
    call {:si_unique_call 874} sdv_299 := RemoveHeadList(NotifyFrameList__CIP_DESCRIPTOR_DATA(DescriptorData_3));
    NotifyFrameContext := sdv_299;
    assume {:nonnull} NotifyFrameContext != 0;
    assume NotifyFrameContext > 0;
    havoc NotifyFrame;
    assume {:nonnull} NotifyFrame != 0;
    assume NotifyFrame > 0;
    assume {:nonnull} CipData_7 != 0;
    assume CipData_7 > 0;
    assume {:nonnull} CipData_7 != 0;
    assume CipData_7 > 0;
    assume {:nonnull} NotifyInfo != 0;
    assume NotifyInfo > 0;
    assume {:nonnull} NotifyFrame != 0;
    assume NotifyFrame > 0;
    assume {:nonnull} NotifyInfo != 0;
    assume NotifyInfo > 0;
    assume {:nonnull} NotifyInfo != 0;
    assume NotifyInfo > 0;
    assume {:nonnull} NotifyFrame != 0;
    assume NotifyFrame > 0;
    call {:si_unique_call 875} sdv_ExFreePool(0);
    goto anon3_Then_dummy;

  anon3_Then_dummy:
    assume false;
    return;
}



procedure {:origName "AvCip_Talk"} AvCip_Talk(actual_BusExtension_16: int, actual_Irp_25: int, actual_Request_3: int) returns (Tmp_374: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_Talk"} AvCip_Talk(actual_BusExtension_16: int, actual_Irp_25: int, actual_Request_3: int) returns (Tmp_374: int)
{
  var {:scalar} Tmp_375: int;
  var {:scalar} ResultLength_3: int;
  var {:scalar} Tmp_376: int;
  var {:scalar} Status_13: int;
  var {:pointer} Tmp_377: int;
  var {:pointer} CipData_8: int;
  var {:pointer} Connect_2: int;
  var {:pointer} sdv_305: int;
  var {:pointer} sdv_308: int;
  var {:scalar} KeyLength: int;
  var {:scalar} uniTempName: int;
  var {:pointer} Tmp_378: int;
  var {:pointer} KeyInfo: int;
  var {:pointer} BusExtension_16: int;
  var {:pointer} Request_3: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;

  anon0:
    call {:si_unique_call 877} uniTempName := __HAVOC_malloc(12);
    BusExtension_16 := actual_BusExtension_16;
    Request_3 := actual_Request_3;
    call {:si_unique_call 878} vslice_dummy_var_141 := __HAVOC_malloc(36);
    Status_13 := 0;
    assume {:nonnull} Request_3 != 0;
    assume Request_3 > 0;
    havoc Connect_2;
    assume {:nonnull} Connect_2 != 0;
    assume Connect_2 > 0;
    havoc CipData_8;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BusExtension_16 != 0;
    assume {:nonnull} Connect_2 != 0;
    assume Connect_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L14;

  L14:
    Status_13 := -1073741811;
    goto L17;

  L17:
    Tmp_374 := Status_13;
    return;

  anon33_Then:
    goto L12;

  L12:
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    Status_13 := -1073741811;
    goto L17;

  anon31_Then:
    assume {:nonnull} Request_3 != 0;
    assume Request_3 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} Request_3 != 0;
    assume Request_3 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Status_13 := -1073741811;
    goto L17;

  anon36_Then:
    goto L21;

  L21:
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    assume {:nonnull} Request_3 != 0;
    assume Request_3 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BusExtension_16 != 0;
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    call {:si_unique_call 879} Status_13 := IoOpenDeviceRegistryKey(0, 2, 1, 0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Status_13 >= 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_375;
    call {:si_unique_call 880} sdv_305 := ExAllocatePoolWithTag(512, Tmp_375, 943206710);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    KeyLength := 20;
    call {:si_unique_call 881} sdv_308 := ExAllocatePoolWithTag(512, KeyLength, 943206710);
    KeyInfo := sdv_308;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} KeyInfo != 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_376;
    call {:si_unique_call 882} sdv_RtlZeroMemory(0, Tmp_376);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 883} vslice_dummy_var_142 := corral_nondet();
    call {:si_unique_call 884} Tmp_378 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_378 != 0;
    assume Tmp_378 > 0;
    call {:si_unique_call 885} Status_13 := ZwQueryValueKey(0, 0, 2, 0, KeyLength, Tmp_378);
    assume {:nonnull} Tmp_378 != 0;
    assume Tmp_378 > 0;
    havoc ResultLength_3;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Status_13 >= 0;
    assume {:nonnull} KeyInfo != 0;
    assume KeyInfo > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} KeyInfo != 0;
    assume KeyInfo > 0;
    Tmp_377 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo);
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    goto L73;

  L73:
    call {:si_unique_call 886} sdv_ExFreePool(0);
    goto L57;

  L57:
    call {:si_unique_call 887} sdv_ExFreePool(0);
    goto L45;

  L45:
    call {:si_unique_call 888} vslice_dummy_var_140 := ZwClose(0);
    goto L27;

  L27:
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    call {:si_unique_call 889} Status_13 := AvCip_AllocateResources(CipData_8);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Status_13 >= 0;
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    call {:si_unique_call 890} Status_13 := Av1394_Talk(CipData_8);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Status_13 < 0;
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    call {:si_unique_call 891} vslice_dummy_var_143 := AvCip_FreeResources(CipData_8);
    goto L17;

  anon41_Then:
    assume {:partition} 0 <= Status_13;
    goto L17;

  anon40_Then:
    assume {:partition} 0 > Status_13;
    goto L17;

  anon39_Then:
    goto L73;

  anon38_Then:
    assume {:partition} 0 > Status_13;
    goto L73;

  anon45_Then:
    assume {:partition} KeyInfo == 0;
    goto L57;

  anon44_Then:
    goto L45;

  anon37_Then:
    assume {:partition} 0 > Status_13;
    goto L27;

  anon43_Then:
    assume {:partition} BusExtension_16 == 0;
    goto L27;

  anon35_Then:
    goto L21;

  anon34_Then:
    goto L21;

  anon32_Then:
    goto L14;

  anon42_Then:
    assume {:partition} BusExtension_16 == 0;
    goto L12;
}



procedure {:origName "Av1394_Stop"} Av1394_Stop(actual_CipData_9: int) returns (Tmp_380: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_Stop"} Av1394_Stop(actual_CipData_9: int) returns (Tmp_380: int)
{
  var {:pointer} Irb_4: int;
  var {:pointer} sdv_310: int;
  var {:scalar} Status_14: int;
  var {:pointer} CipData_9: int;
  var vslice_dummy_var_2053: int;
  var vslice_dummy_var_2054: int;

  anon0:
    CipData_9 := actual_CipData_9;
    Status_14 := 0;
    Irb_4 := 0;
    call {:si_unique_call 892} sdv_310 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_4 := sdv_310;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Irb_4 != 0;
    assume {:nonnull} Irb_4 != 0;
    assume Irb_4 > 0;
    assume {:nonnull} Irb_4 != 0;
    assume Irb_4 > 0;
    assume {:nonnull} CipData_9 != 0;
    assume CipData_9 > 0;
    assume {:nonnull} Irb_4 != 0;
    assume Irb_4 > 0;
    assume {:nonnull} Irb_4 != 0;
    assume Irb_4 > 0;
    assume {:nonnull} CipData_9 != 0;
    assume CipData_9 > 0;
    havoc vslice_dummy_var_2053;
    call {:si_unique_call 893} Status_14 := Av_SubmitIrpSynch(vslice_dummy_var_2053, 0, Irb_4);
    assume {:nonnull} CipData_9 != 0;
    assume CipData_9 > 0;
    havoc vslice_dummy_var_2054;
    call {:si_unique_call 894} ExFreeToNPagedLookasideList(vslice_dummy_var_2054, Irb_4);
    goto L25;

  L25:
    Tmp_380 := Status_14;
    return;

  anon3_Then:
    assume {:partition} Irb_4 == 0;
    Status_14 := -1073741670;
    goto L25;
}



procedure {:origName "AvCip_SetChannel"} AvCip_SetChannel(actual_CipData_10: int, actual_Channel: int) returns (Tmp_382: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_SetChannel"} AvCip_SetChannel(actual_CipData_10: int, actual_Channel: int) returns (Tmp_382: int)
{
  var {:scalar} Status_15: int;
  var {:scalar} AvRequest: int;
  var {:pointer} CipData_10: int;
  var {:scalar} Channel: int;

  anon0:
    call {:si_unique_call 895} AvRequest := __HAVOC_malloc(460);
    CipData_10 := actual_CipData_10;
    Channel := actual_Channel;
    Status_15 := 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 896} sdv_RtlZeroMemory(0, 48);
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    call {:si_unique_call 897} Status_15 := AvCip_Stop(0, 0, AvRequest);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Status_15 >= 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    call {:si_unique_call 898} sdv_RtlZeroMemory(0, 48);
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    call {:si_unique_call 899} Status_15 := AvCip_Listen(0, 0, AvRequest);
    goto L9;

  L9:
    Tmp_382 := Status_15;
    return;

  anon11_Then:
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    call {:si_unique_call 900} Status_15 := AvCip_Talk(0, 0, AvRequest);
    goto L9;

  anon10_Then:
    assume {:partition} 0 > Status_15;
    goto L9;

  anon9_Then:
    goto L9;

  anon12_Then:
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    goto L9;
}



procedure {:origName "AvCip_Destroy"} AvCip_Destroy(actual_CipData_11: int) returns (Tmp_384: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_Destroy"} AvCip_Destroy(actual_CipData_11: int) returns (Tmp_384: int)
{
  var {:scalar} sdv_315: int;
  var {:scalar} Status_16: int;
  var {:pointer} sdv_317: int;
  var {:scalar} AvRequest_1: int;
  var {:pointer} FrameContext_2: int;
  var {:pointer} CipData_11: int;

  anon0:
    call {:si_unique_call 901} AvRequest_1 := __HAVOC_malloc(460);
    CipData_11 := actual_CipData_11;
    Status_16 := 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} CipData_11 != 0;
    assume {:nonnull} CipData_11 != 0;
    assume CipData_11 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 902} sdv_RtlZeroMemory(0, 48);
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    assume {:nonnull} CipData_11 != 0;
    assume CipData_11 > 0;
    call {:si_unique_call 903} Status_16 := AvCip_Stop(0, 0, AvRequest_1);
    goto L10;

  L10:
    call {:si_unique_call 904} sdv_315, sdv_317, FrameContext_2 := AvCip_Destroy_loop_L10(sdv_315, sdv_317, FrameContext_2, CipData_11);
    goto L10_last;

  L10_last:
    call {:si_unique_call 908} sdv_315 := sdv_IsListEmpty(0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_315 != 0;
    call {:si_unique_call 905} sdv_ExFreePool(0);
    goto L8;

  L8:
    Tmp_384 := Status_16;
    return;

  anon10_Then:
    assume {:partition} sdv_315 == 0;
    assume {:nonnull} CipData_11 != 0;
    assume CipData_11 > 0;
    call {:si_unique_call 906} sdv_317 := RemoveHeadList(FrameList__CIP_DATA(CipData_11));
    FrameContext_2 := sdv_317;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} FrameContext_2 != 0;
    call {:si_unique_call 907} sdv_ExFreePool(0);
    goto anon12_Else_dummy;

  anon12_Else_dummy:
    assume false;
    return;

  anon12_Then:
    assume {:partition} FrameContext_2 == 0;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    assume false;
    return;

  anon9_Then:
    goto L10;

  anon11_Then:
    assume {:partition} CipData_11 == 0;
    goto L8;
}



procedure {:origName "AvCip_SetSpeed"} AvCip_SetSpeed(actual_CipData_12: int, actual_Speed: int) returns (Tmp_386: int);
  free ensures {:va_keep} Tmp_386 == -1073741790 || Tmp_386 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_SetSpeed"} AvCip_SetSpeed(actual_CipData_12: int, actual_Speed: int) returns (Tmp_386: int)
{
  var {:scalar} Status_17: int;
  var {:pointer} CipData_12: int;
  var {:scalar} Speed: int;

  anon0:
    CipData_12 := actual_CipData_12;
    Speed := actual_Speed;
    Status_17 := 0;
    assume {:nonnull} CipData_12 != 0;
    assume CipData_12 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Status_17 := -1073741790;
    goto L8;

  L8:
    Tmp_386 := Status_17;
    return;

  anon3_Then:
    assume {:nonnull} CipData_12 != 0;
    assume CipData_12 > 0;
    goto L8;
}



procedure {:origName "AvCip_CancelFrames"} AvCip_CancelFrames(actual_BusExtension_17: int, actual_Irp_26: int, actual_Request_4: int) returns (Tmp_388: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_388 == 0 || Tmp_388 == -1073741275 || Tmp_388 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_CancelFrames"} AvCip_CancelFrames(actual_BusExtension_17: int, actual_Irp_26: int, actual_Request_4: int) returns (Tmp_388: int)
{
  var {:pointer} Frame: int;
  var {:pointer} CancelFrame: int;
  var {:pointer} Tmp_389: int;
  var {:scalar} Status_18: int;
  var {:pointer} CipData_13: int;
  var {:pointer} Connect_3: int;
  var {:scalar} Irql_8: int;
  var {:pointer} FrameContext_3: int;
  var {:pointer} Request_4: int;
  var vslice_dummy_var_144: int;

  anon0:
    Request_4 := actual_Request_4;
    Status_18 := 0;
    assume {:nonnull} Request_4 != 0;
    assume Request_4 > 0;
    CancelFrame := CancelFrame__AV_61883_REQUEST(Request_4);
    assume {:nonnull} CancelFrame != 0;
    assume CancelFrame > 0;
    havoc Connect_3;
    assume {:nonnull} Connect_3 != 0;
    assume Connect_3 > 0;
    havoc CipData_13;
    assume {:nonnull} CancelFrame != 0;
    assume CancelFrame > 0;
    havoc Frame;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Connect_3 != 0;
    assume {:nonnull} Connect_3 != 0;
    assume Connect_3 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Frame != 0;
    assume {:nonnull} Frame != 0;
    assume Frame > 0;
    havoc FrameContext_3;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} FrameContext_3 != 0;
    call {:si_unique_call 909} Tmp_389 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    call {:si_unique_call 910} sdv_KeAcquireSpinLock(0, Tmp_389);
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    havoc Irql_8;
    assume {:nonnull} CipData_13 != 0;
    assume CipData_13 > 0;
    call {:si_unique_call 911} vslice_dummy_var_144 := sdv_RemoveEntryList(0);
    call {:si_unique_call 912} sdv_ExFreePool(0);
    assume {:nonnull} Frame != 0;
    assume Frame > 0;
    assume {:nonnull} CipData_13 != 0;
    assume CipData_13 > 0;
    assume {:nonnull} CipData_13 != 0;
    assume CipData_13 > 0;
    call {:si_unique_call 913} sdv_KeReleaseSpinLock(0, Irql_8);
    goto L40;

  L40:
    Tmp_388 := Status_18;
    return;

  anon12_Then:
    assume {:partition} FrameContext_3 == 0;
    Status_18 := -1073741275;
    goto L40;

  anon10_Then:
    assume {:partition} Frame == 0;
    Status_18 := -1073741811;
    goto L40;

  anon9_Then:
    Status_18 := -1073741811;
    goto L40;

  anon11_Then:
    assume {:partition} Connect_3 == 0;
    Status_18 := -1073741811;
    goto L40;
}



procedure {:origName "Av1394_Listen"} Av1394_Listen(actual_CipData_14: int) returns (Tmp_390: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_Listen"} Av1394_Listen(actual_CipData_14: int) returns (Tmp_390: int)
{
  var {:pointer} Irb_5: int;
  var {:pointer} sdv_319: int;
  var {:scalar} Status_19: int;
  var {:pointer} CipData_14: int;
  var vslice_dummy_var_2055: int;
  var vslice_dummy_var_2056: int;

  anon0:
    CipData_14 := actual_CipData_14;
    Status_19 := 0;
    Irb_5 := 0;
    call {:si_unique_call 914} sdv_319 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_5 := sdv_319;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Irb_5 != 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} CipData_14 != 0;
    assume CipData_14 > 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} CipData_14 != 0;
    assume CipData_14 > 0;
    havoc vslice_dummy_var_2055;
    call {:si_unique_call 915} Status_19 := Av_SubmitIrpSynch(vslice_dummy_var_2055, 0, Irb_5);
    assume {:nonnull} CipData_14 != 0;
    assume CipData_14 > 0;
    havoc vslice_dummy_var_2056;
    call {:si_unique_call 916} ExFreeToNPagedLookasideList(vslice_dummy_var_2056, Irb_5);
    goto L27;

  L27:
    Tmp_390 := Status_19;
    return;

  anon3_Then:
    assume {:partition} Irb_5 == 0;
    Status_19 := -1073741670;
    goto L27;
}



procedure {:origName "AvCip_CopyBlock"} AvCip_CopyBlock(actual_CipData_15: int) returns (Tmp_392: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_392 == 1 || Tmp_392 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_CopyBlock"} AvCip_CopyBlock(actual_CipData_15: int) returns (Tmp_392: int)
{
  var {:scalar} Tmp_393: int;
  var {:scalar} TransmitTime: int;
  var {:pointer} CipData_15: int;
  var vslice_dummy_var_145: int;

  anon0:
    call {:si_unique_call 917} TransmitTime := __HAVOC_malloc(40);
    CipData_15 := actual_CipData_15;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    Tmp_392 := 1;
    goto L1;

  L1:
    return;

  anon13_Then:
    goto L6;

  L6:
    Tmp_392 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    havoc Tmp_393;
    call {:si_unique_call 918} vslice_dummy_var_145 := Av1394_UpdateCycleTime(TransmitTime, Tmp_393);
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Tmp_392 := 1;
    goto L1;

  anon15_Then:
    goto L6;

  anon12_Then:
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    Tmp_392 := 1;
    goto L1;

  anon14_Then:
    goto L6;
}



procedure {:origName "AvCip_SetCipIsochParameters"} AvCip_SetCipIsochParameters(actual_CipData_17: int, actual_RX: int, actual_RX_1: int, actual_TX: int, actual_TX_1: int) returns (Tmp_397: int);
  free ensures {:va_keep} Tmp_397 == -1073741790 || Tmp_397 == -1073741811 || Tmp_397 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_SetCipIsochParameters"} AvCip_SetCipIsochParameters(actual_CipData_17: int, actual_RX: int, actual_RX_1: int, actual_TX: int, actual_TX_1: int) returns (Tmp_397: int)
{
  var {:scalar} Status_21: int;
  var {:pointer} CipData_17: int;
  var {:scalar} RX: int;
  var {:scalar} RX_1: int;
  var {:scalar} TX: int;
  var {:scalar} TX_1: int;

  anon0:
    CipData_17 := actual_CipData_17;
    RX := actual_RX;
    RX_1 := actual_RX_1;
    TX := actual_TX;
    TX_1 := actual_TX_1;
    Status_21 := 0;
    assume {:nonnull} CipData_17 != 0;
    assume CipData_17 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Status_21 := -1073741790;
    goto L8;

  L8:
    Tmp_397 := Status_21;
    return;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} RX > 10;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} TX > 10;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} RX_1 > 5000;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} TX_1 > 5000;
    Status_21 := -1073741811;
    goto L8;

  anon14_Then:
    assume {:partition} 5000 >= TX_1;
    goto L9;

  L9:
    assume {:nonnull} CipData_17 != 0;
    assume CipData_17 > 0;
    assume {:nonnull} CipData_17 != 0;
    assume CipData_17 > 0;
    assume {:nonnull} CipData_17 != 0;
    assume CipData_17 > 0;
    assume {:nonnull} CipData_17 != 0;
    assume CipData_17 > 0;
    goto L8;

  anon13_Then:
    assume {:partition} 5000 >= RX_1;
    goto L9;

  anon12_Then:
    assume {:partition} 10 >= TX;
    goto L9;

  anon11_Then:
    assume {:partition} 10 >= RX;
    goto L9;
}



procedure {:origName "AvCip_FreeResources"} AvCip_FreeResources(actual_CipData_18: int) returns (Tmp_399: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_FreeResources"} AvCip_FreeResources(actual_CipData_18: int) returns (Tmp_399: int)
{
  var {:pointer} Tmp_400: int;
  var {:pointer} Tmp_402: int;
  var {:scalar} sdv_325: int;
  var {:scalar} Status_22: int;
  var {:pointer} Tmp_403: int;
  var {:scalar} sdv_326: int;
  var {:pointer} DescriptorData_5: int;
  var {:pointer} sdv_329: int;
  var {:scalar} sdv_332: int;
  var {:pointer} Tmp_404: int;
  var {:scalar} PriorState: int;
  var {:scalar} Irql_10: int;
  var {:pointer} Tmp_405: int;
  var {:pointer} CipData_18: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_2057: int;
  var vslice_dummy_var_2058: int;
  var vslice_dummy_var_2059: int;
  var vslice_dummy_var_2060: int;

  anon0:
    CipData_18 := actual_CipData_18;
    call {:si_unique_call 919} Tmp_400 := __HAVOC_malloc(360);
    call {:si_unique_call 920} Tmp_403 := __HAVOC_malloc(360);
    call {:si_unique_call 921} Tmp_404 := __HAVOC_malloc(360);
    call {:si_unique_call 922} Tmp_405 := __HAVOC_malloc(360);
    Status_22 := 0;
    call {:si_unique_call 923} Tmp_402 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    call {:si_unique_call 924} sdv_KeAcquireSpinLock(0, Tmp_402);
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    havoc Irql_10;
    goto L11;

  L11:
    call {:si_unique_call 925} Tmp_400, Tmp_402, sdv_325, Status_22, Tmp_403, DescriptorData_5, sdv_329, sdv_332, Tmp_404, PriorState, Irql_10, Tmp_405, vslice_dummy_var_146, vslice_dummy_var_147, vslice_dummy_var_148 := AvCip_FreeResources_loop_L11(Tmp_400, Tmp_402, sdv_325, Status_22, Tmp_403, sdv_326, DescriptorData_5, sdv_329, sdv_332, Tmp_404, PriorState, Irql_10, Tmp_405, CipData_18, vslice_dummy_var_146, vslice_dummy_var_147, vslice_dummy_var_148);
    goto L11_last;

  L11_last:
    call {:si_unique_call 950} sdv_325 := sdv_IsListEmpty(0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_325 != 0;
    call {:si_unique_call 926} sdv_KeReleaseSpinLock(0, Irql_10);
    call {:si_unique_call 927} Status_22 := Av1394_FreeResources(CipData_18);
    goto L27;

  L27:
    Tmp_399 := Status_22;
    return;

  anon31_Then:
    assume {:partition} sdv_325 == 0;
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    call {:si_unique_call 928} sdv_329 := RemoveHeadList(DescriptorList__CIP_DATA(CipData_18));
    DescriptorData_5 := sdv_329;
    call {:si_unique_call 929} sdv_KeReleaseSpinLock(0, Irql_10);
    call {:si_unique_call 930} vslice_dummy_var_146 := sdv_IoAcquireRemoveLock(0, 0);
    call {:si_unique_call 931} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 932} Tmp_402 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    call {:si_unique_call 933} sdv_KeAcquireSpinLock(0, Tmp_402);
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    havoc Irql_10;
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L45;

  L45:
    call {:si_unique_call 934} sdv_KeReleaseSpinLock(0, Irql_10);
    PriorState := sdv_326;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} PriorState == 1;
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L58;

  L58:
    call {:si_unique_call 935} Status_22 := Av1394_DetachBuffer(CipData_18, DescriptorData_5);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Status_22 >= 0;
    goto L53;

  L53:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} DescriptorData_5 != 0;
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 936} IoFreeIrp(0);
    goto L68;

  L68:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc vslice_dummy_var_2057;
    havoc vslice_dummy_var_2058;
    call {:si_unique_call 937} ExFreeToNPagedLookasideList(vslice_dummy_var_2057, vslice_dummy_var_2058);
    goto L72;

  L72:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 938} IoFreeIrp(0);
    goto L76;

  L76:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc vslice_dummy_var_2059;
    havoc vslice_dummy_var_2060;
    call {:si_unique_call 939} ExFreeToNPagedLookasideList(vslice_dummy_var_2059, vslice_dummy_var_2060);
    goto L80;

  L80:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc Tmp_404;
    assume {:nonnull} Tmp_404 != 0;
    assume Tmp_404 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc Tmp_400;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    call {:si_unique_call 940} IoFreeMdl(0);
    goto L84;

  L84:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc Tmp_405;
    assume {:nonnull} Tmp_405 != 0;
    assume Tmp_405 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc Tmp_403;
    assume {:nonnull} Tmp_403 != 0;
    assume Tmp_403 > 0;
    call {:si_unique_call 941} IoFreeMdl(0);
    goto L89;

  L89:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 942} sdv_ExFreePool(0);
    goto L94;

  L94:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 943} sdv_ExFreePool(0);
    goto L98;

  L98:
    call {:si_unique_call 944} sdv_ExFreePool(0);
    goto L64;

  L64:
    call {:si_unique_call 945} Tmp_402 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    call {:si_unique_call 946} sdv_KeAcquireSpinLock(0, Tmp_402);
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    havoc Irql_10;
    goto L64_dummy;

  L64_dummy:
    assume false;
    return;

  anon41_Then:
    goto L98;

  anon40_Then:
    goto L94;

  anon45_Then:
    goto L89;

  anon44_Then:
    goto L84;

  anon39_Then:
    goto L80;

  anon38_Then:
    goto L76;

  anon37_Then:
    goto L72;

  anon36_Then:
    goto L68;

  anon33_Then:
    assume {:partition} DescriptorData_5 == 0;
    goto L64;

  anon35_Then:
    assume {:partition} 0 > Status_22;
    goto L27;

  anon34_Then:
    call {:si_unique_call 947} vslice_dummy_var_147 := KeCancelTimer(0);
    goto L58;

  anon43_Then:
    assume {:partition} PriorState != 1;
    goto L53;

  anon32_Then:
    call {:si_unique_call 948} sdv_332 := sdv_IsListEmpty(0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_332 != 0;
    goto L108;

  L108:
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto L45;

  anon42_Then:
    assume {:partition} sdv_332 == 0;
    call {:si_unique_call 949} vslice_dummy_var_148 := AvCip_HandleFrameNotification(CipData_18, DescriptorData_5);
    goto L108;
}



procedure {:origName "Av1394_DetachBuffer"} Av1394_DetachBuffer(actual_CipData_19: int, actual_DescriptorData_6: int) returns (Tmp_407: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_DetachBuffer"} Av1394_DetachBuffer(actual_CipData_19: int, actual_DescriptorData_6: int) returns (Tmp_407: int)
{
  var {:pointer} Irb_6: int;
  var {:pointer} sdv_334: int;
  var {:scalar} Status_23: int;
  var {:pointer} Tmp_409: int;
  var {:pointer} CipData_19: int;
  var {:pointer} DescriptorData_6: int;
  var vslice_dummy_var_2061: int;
  var vslice_dummy_var_2062: int;

  anon0:
    CipData_19 := actual_CipData_19;
    DescriptorData_6 := actual_DescriptorData_6;
    call {:si_unique_call 951} Tmp_409 := __HAVOC_malloc(360);
    Status_23 := 0;
    Irb_6 := 0;
    call {:si_unique_call 952} sdv_334 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_6 := sdv_334;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Irb_6 != 0;
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    assume {:nonnull} CipData_19 != 0;
    assume CipData_19 > 0;
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    assume {:nonnull} DescriptorData_6 != 0;
    assume DescriptorData_6 > 0;
    havoc Tmp_409;
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    assume {:nonnull} CipData_19 != 0;
    assume CipData_19 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    goto L20;

  L20:
    assume {:nonnull} CipData_19 != 0;
    assume CipData_19 > 0;
    havoc vslice_dummy_var_2061;
    call {:si_unique_call 953} Status_23 := Av_SubmitIrpSynch(vslice_dummy_var_2061, 0, Irb_6);
    assume {:nonnull} CipData_19 != 0;
    assume CipData_19 > 0;
    havoc vslice_dummy_var_2062;
    call {:si_unique_call 954} ExFreeToNPagedLookasideList(vslice_dummy_var_2062, Irb_6);
    goto L28;

  L28:
    Tmp_407 := Status_23;
    return;

  anon6_Then:
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    goto L20;

  anon5_Then:
    assume {:partition} Irb_6 == 0;
    Status_23 := -1073741670;
    goto L28;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_149: int;

  anon0:
    call {:si_unique_call 955} vslice_dummy_var_149 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Av1394_FreeResources"} Av1394_FreeResources(actual_CipData_20: int) returns (Tmp_412: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_FreeResources"} Av1394_FreeResources(actual_CipData_20: int) returns (Tmp_412: int)
{
  var {:pointer} Irb_7: int;
  var {:pointer} sdv_336: int;
  var {:scalar} Status_24: int;
  var {:pointer} CipData_20: int;
  var vslice_dummy_var_2063: int;
  var vslice_dummy_var_2064: int;

  anon0:
    CipData_20 := actual_CipData_20;
    Status_24 := 0;
    Irb_7 := 0;
    call {:si_unique_call 956} sdv_336 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_7 := sdv_336;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Irb_7 != 0;
    assume {:nonnull} Irb_7 != 0;
    assume Irb_7 > 0;
    assume {:nonnull} Irb_7 != 0;
    assume Irb_7 > 0;
    assume {:nonnull} CipData_20 != 0;
    assume CipData_20 > 0;
    assume {:nonnull} Irb_7 != 0;
    assume Irb_7 > 0;
    assume {:nonnull} CipData_20 != 0;
    assume CipData_20 > 0;
    havoc vslice_dummy_var_2063;
    call {:si_unique_call 957} Status_24 := Av_SubmitIrpSynch(vslice_dummy_var_2063, 0, Irb_7);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Status_24 >= 0;
    assume {:nonnull} CipData_20 != 0;
    assume CipData_20 > 0;
    goto L21;

  L21:
    assume {:nonnull} CipData_20 != 0;
    assume CipData_20 > 0;
    havoc vslice_dummy_var_2064;
    call {:si_unique_call 958} ExFreeToNPagedLookasideList(vslice_dummy_var_2064, Irb_7);
    goto L25;

  L25:
    Tmp_412 := Status_24;
    return;

  anon5_Then:
    assume {:partition} 0 > Status_24;
    goto L21;

  anon6_Then:
    assume {:partition} Irb_7 == 0;
    Status_24 := -1073741670;
    goto L25;
}



procedure {:origName "AvCip_SetCipPacketSize"} AvCip_SetCipPacketSize(actual_CipData_21: int, actual_CipPacketSize: int) returns (Tmp_414: int);
  free ensures {:va_keep} Tmp_414 == -1073741790 || Tmp_414 == 0 || Tmp_414 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_SetCipPacketSize"} AvCip_SetCipPacketSize(actual_CipData_21: int, actual_CipPacketSize: int) returns (Tmp_414: int)
{
  var {:scalar} Status_25: int;
  var {:pointer} CipData_21: int;
  var {:scalar} CipPacketSize: int;

  anon0:
    CipData_21 := actual_CipData_21;
    CipPacketSize := actual_CipPacketSize;
    Status_25 := 0;
    assume {:nonnull} CipData_21 != 0;
    assume CipData_21 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Status_25 := -1073741790;
    goto L8;

  L8:
    Tmp_414 := Status_25;
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} 4096 >= CipPacketSize;
    assume {:nonnull} CipData_21 != 0;
    assume CipData_21 > 0;
    goto L8;

  anon5_Then:
    assume {:partition} CipPacketSize > 4096;
    Status_25 := -1073741811;
    goto L8;
}



procedure {:origName "AvCip_AllocateResources"} AvCip_AllocateResources(actual_CipData_22: int) returns (Tmp_416: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_AllocateResources"} AvCip_AllocateResources(actual_CipData_22: int) returns (Tmp_416: int)
{
  var {:pointer} Tmp_417: int;
  var {:pointer} Tmp_418: int;
  var {:pointer} Tmp_419: int;
  var {:pointer} sdv_338: int;
  var {:pointer} Tmp_420: int;
  var {:scalar} iPacket: int;
  var {:pointer} Tmp_421: int;
  var {:pointer} Tmp_422: int;
  var {:pointer} Tmp_423: int;
  var {:scalar} NumDescriptors: int;
  var {:scalar} Status_26: int;
  var {:pointer} sdv_340: int;
  var {:pointer} Tmp_424: int;
  var {:pointer} DescriptorData_7: int;
  var {:pointer} sdv_342: int;
  var {:pointer} Tmp_426: int;
  var {:pointer} sdv_343: int;
  var {:pointer} sdv_344: int;
  var {:pointer} Tmp_429: int;
  var {:pointer} Tmp_430: int;
  var {:scalar} NumPackets: int;
  var {:scalar} Tmp_431: int;
  var {:scalar} iAttach: int;
  var {:pointer} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:pointer} Tmp_434: int;
  var {:pointer} sdv_346: int;
  var {:pointer} Tmp_435: int;
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:pointer} Tmp_439: int;
  var {:scalar} Tmp_440: int;
  var {:scalar} Tmp_441: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:scalar} Tmp_444: int;
  var {:scalar} Irql_11: int;
  var {:pointer} sdv_348: int;
  var {:pointer} Tmp_445: int;
  var {:scalar} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} Tmp_448: int;
  var {:scalar} Tmp_449: int;
  var {:pointer} Tmp_450: int;
  var {:pointer} Tmp_451: int;
  var {:pointer} Tmp_452: int;
  var {:pointer} Tmp_453: int;
  var {:pointer} Tmp_454: int;
  var {:pointer} CipData_22: int;
  var boogieTmp: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_2065: int;
  var vslice_dummy_var_2066: int;
  var vslice_dummy_var_2067: int;
  var vslice_dummy_var_2068: int;
  var vslice_dummy_var_2069: int;

  anon0:
    CipData_22 := actual_CipData_22;
    call {:si_unique_call 959} Tmp_417 := __HAVOC_malloc(360);
    call {:si_unique_call 960} Tmp_419 := __HAVOC_malloc(360);
    call {:si_unique_call 961} Tmp_420 := __HAVOC_malloc(360);
    call {:si_unique_call 962} Tmp_421 := __HAVOC_malloc(360);
    call {:si_unique_call 963} Tmp_422 := __HAVOC_malloc(360);
    call {:si_unique_call 964} Tmp_423 := __HAVOC_malloc(360);
    call {:si_unique_call 965} Tmp_424 := __HAVOC_malloc(360);
    call {:si_unique_call 966} Tmp_426 := __HAVOC_malloc(360);
    call {:si_unique_call 967} Tmp_429 := __HAVOC_malloc(360);
    call {:si_unique_call 968} Tmp_430 := __HAVOC_malloc(360);
    call {:si_unique_call 969} Tmp_432 := __HAVOC_malloc(360);
    call {:si_unique_call 970} Tmp_433 := __HAVOC_malloc(360);
    call {:si_unique_call 971} Tmp_434 := __HAVOC_malloc(360);
    call {:si_unique_call 972} Tmp_435 := __HAVOC_malloc(360);
    call {:si_unique_call 973} Tmp_437 := __HAVOC_malloc(360);
    call {:si_unique_call 974} Tmp_438 := __HAVOC_malloc(360);
    call {:si_unique_call 975} Tmp_439 := __HAVOC_malloc(360);
    call {:si_unique_call 976} Tmp_442 := __HAVOC_malloc(360);
    call {:si_unique_call 977} Tmp_447 := __HAVOC_malloc(360);
    call {:si_unique_call 978} Tmp_448 := __HAVOC_malloc(360);
    call {:si_unique_call 979} Tmp_450 := __HAVOC_malloc(360);
    call {:si_unique_call 980} Tmp_451 := __HAVOC_malloc(360);
    call {:si_unique_call 981} Tmp_452 := __HAVOC_malloc(360);
    call {:si_unique_call 982} Tmp_453 := __HAVOC_malloc(360);
    call {:si_unique_call 983} Tmp_454 := __HAVOC_malloc(360);
    Status_26 := 0;
    DescriptorData_7 := 0;
    call {:si_unique_call 984} Status_26 := Av1394_AllocateResources(CipData_22);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Status_26 < 0;
    goto L113;

  L113:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} DescriptorData_7 != 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 985} IoFreeIrp(0);
    goto L118;

  L118:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc vslice_dummy_var_2065;
    havoc vslice_dummy_var_2066;
    call {:si_unique_call 986} ExFreeToNPagedLookasideList(vslice_dummy_var_2065, vslice_dummy_var_2066);
    goto L122;

  L122:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 987} IoFreeIrp(0);
    goto L126;

  L126:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc vslice_dummy_var_2067;
    havoc vslice_dummy_var_2068;
    call {:si_unique_call 988} ExFreeToNPagedLookasideList(vslice_dummy_var_2067, vslice_dummy_var_2068);
    goto L130;

  L130:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_420;
    assume {:nonnull} Tmp_420 != 0;
    assume Tmp_420 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_451;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    call {:si_unique_call 989} IoFreeMdl(0);
    goto L134;

  L134:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 990} sdv_ExFreePool(0);
    goto L139;

  L139:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    call {:si_unique_call 991} sdv_ExFreePool(0);
    goto L143;

  L143:
    call {:si_unique_call 992} sdv_ExFreePool(0);
    goto L114;

  L114:
    call {:si_unique_call 993} vslice_dummy_var_151 := AvCip_FreeResources(CipData_22);
    Tmp_416 := Status_26;
    goto L1;

  L1:
    return;

  anon69_Then:
    goto L143;

  anon68_Then:
    goto L139;

  anon76_Then:
    goto L134;

  anon67_Then:
    goto L130;

  anon66_Then:
    goto L126;

  anon65_Then:
    goto L122;

  anon64_Then:
    goto L118;

  anon63_Then:
    assume {:partition} DescriptorData_7 == 0;
    goto L114;

  anon53_Then:
    assume {:partition} 0 <= Status_26;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc NumDescriptors;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc NumPackets;
    goto L22;

  L22:
    iAttach := 0;
    goto L23;

  L23:
    call {:si_unique_call 994} Tmp_417, Tmp_418, Tmp_419, sdv_338, iPacket, Tmp_421, Tmp_422, Tmp_423, Status_26, sdv_340, Tmp_424, DescriptorData_7, sdv_342, Tmp_426, sdv_343, sdv_344, Tmp_429, Tmp_430, Tmp_431, iAttach, Tmp_432, Tmp_433, Tmp_434, sdv_346, Tmp_435, Tmp_437, Tmp_438, Tmp_439, Tmp_440, Tmp_441, Tmp_442, Tmp_443, Tmp_444, Irql_11, sdv_348, Tmp_445, Tmp_446, Tmp_447, Tmp_448, Tmp_449, Tmp_450, Tmp_452, Tmp_453, Tmp_454, boogieTmp, vslice_dummy_var_150 := AvCip_AllocateResources_loop_L23(Tmp_417, Tmp_418, Tmp_419, sdv_338, iPacket, Tmp_421, Tmp_422, Tmp_423, NumDescriptors, Status_26, sdv_340, Tmp_424, DescriptorData_7, sdv_342, Tmp_426, sdv_343, sdv_344, Tmp_429, Tmp_430, NumPackets, Tmp_431, iAttach, Tmp_432, Tmp_433, Tmp_434, sdv_346, Tmp_435, Tmp_437, Tmp_438, Tmp_439, Tmp_440, Tmp_441, Tmp_442, Tmp_443, Tmp_444, Irql_11, sdv_348, Tmp_445, Tmp_446, Tmp_447, Tmp_448, Tmp_449, Tmp_450, Tmp_452, Tmp_453, Tmp_454, CipData_22, boogieTmp, vslice_dummy_var_150);
    goto L23_last;

  L23_last:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} NumDescriptors > iAttach;
    call {:si_unique_call 995} sdv_343 := ExAllocatePoolWithTag(512, 496, 943206710);
    DescriptorData_7 := sdv_343;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} DescriptorData_7 != 0;
    call {:si_unique_call 996} sdv_RtlZeroMemory(0, 496);
    call {:si_unique_call 997} sdv_IoInitializeRemoveLock(0, -462395037, 1, 50);
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc Tmp_418;
    assume {:nonnull} Tmp_418 != 0;
    assume Tmp_418 > 0;
    havoc Tmp_444;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 998} boogieTmp := IoAllocateIrp(Tmp_444, 0);
    call {:si_unique_call 999} sdv_346 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc Tmp_443;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    havoc Tmp_449;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 1000} boogieTmp := IoAllocateIrp(Tmp_449, 0);
    call {:si_unique_call 1001} sdv_340 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L63;

  L63:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto L65;

  L65:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc vslice_dummy_var_2069;
    call {:si_unique_call 1002} __AssumeBoundInt(vslice_dummy_var_2069);
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc Tmp_446;
    call {:si_unique_call 1003} sdv_348 := ExAllocatePoolWithTag(512, Tmp_446, 943206710);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto L75;

  L75:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc Tmp_441;
    call {:si_unique_call 1004} sdv_342 := IoAllocateMdl(0, Tmp_441, 0, 0, 0);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_450;
    assume {:nonnull} Tmp_450 != 0;
    assume Tmp_450 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_433;
    assume {:nonnull} Tmp_433 != 0;
    assume Tmp_433 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_422;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_430;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_424;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_437;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_452;
    assume {:nonnull} Tmp_452 != 0;
    assume Tmp_452 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_439;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_448;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_423;
    assume {:nonnull} Tmp_423 != 0;
    assume Tmp_423 > 0;
    goto L95;

  L95:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 1005} Status_26 := Av1394_AttachBuffer(CipData_22, DescriptorData_7);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Status_26 < 0;
    goto L113;

  anon62_Then:
    assume {:partition} 0 <= Status_26;
    call {:si_unique_call 1006} Tmp_445 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_445 != 0;
    assume Tmp_445 > 0;
    call {:si_unique_call 1007} sdv_KeAcquireSpinLock(0, Tmp_445);
    assume {:nonnull} Tmp_445 != 0;
    assume Tmp_445 > 0;
    havoc Irql_11;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 1008} vslice_dummy_var_150 := sdv_InsertTailList(DescriptorList__CIP_DATA(CipData_22), ListEntry__CIP_DESCRIPTOR_DATA(DescriptorData_7));
    call {:si_unique_call 1009} sdv_KeReleaseSpinLock(0, Irql_11);
    iAttach := iAttach + 1;
    goto anon62_Then_dummy;

  anon62_Then_dummy:
    assume false;
    return;

  anon75_Then:
    Status_26 := -1073741670;
    goto L113;

  anon61_Then:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_454;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_438;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_447;
    assume {:nonnull} Tmp_447 != 0;
    assume Tmp_447 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_421;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_429;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_432;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_419;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_442;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_417;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_434;
    assume {:nonnull} Tmp_434 != 0;
    assume Tmp_434 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 1010} InitializeListHead(NotifyFrameList__CIP_DESCRIPTOR_DATA(DescriptorData_7));
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 1011} KeInitializeDpc(TimerDpc__CIP_DESCRIPTOR_DATA(DescriptorData_7), li2bplFunctionConstant435, 0);
    call {:si_unique_call 1012} KeInitializeTimer(0);
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto L95;

  anon74_Then:
    Status_26 := -1073741670;
    goto L113;

  anon59_Then:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L75;

  anon60_Then:
    goto L65;

  anon58_Then:
    Tmp_431 := NumPackets * 12;
    call {:si_unique_call 1013} sdv_344 := ExAllocatePoolWithTag(512, Tmp_431, 943206710);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    iPacket := 0;
    goto L179;

  L179:
    call {:si_unique_call 1014} iPacket := AvCip_AllocateResources_loop_L179(iPacket, DescriptorData_7, NumPackets);
    goto L179_last;

  L179_last:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} NumPackets > iPacket;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 1015} sdv_RtlCopyMemory(0, 0, 12);
    iPacket := iPacket + 1;
    goto anon70_Else_dummy;

  anon70_Else_dummy:
    assume false;
    return;

  anon70_Then:
    assume {:partition} iPacket >= NumPackets;
    Tmp_440 := 12 * NumPackets;
    call {:si_unique_call 1016} sdv_338 := IoAllocateMdl(0, Tmp_440, 0, 0, 0);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_453;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_426;
    assume {:nonnull} Tmp_426 != 0;
    assume Tmp_426 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_435;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    goto L63;

  anon78_Then:
    Status_26 := -1073741670;
    goto L113;

  anon77_Then:
    Status_26 := -1073741670;
    goto L113;

  anon57_Then:
    goto L59;

  L59:
    Status_26 := -1073741670;
    goto L113;

  anon73_Then:
    goto L59;

  anon56_Then:
    goto L47;

  L47:
    Status_26 := -1073741670;
    goto L113;

  anon72_Then:
    goto L47;

  anon71_Then:
    assume {:partition} DescriptorData_7 == 0;
    Status_26 := -1073741670;
    goto L113;

  anon55_Then:
    assume {:partition} iAttach >= NumDescriptors;
    Tmp_416 := Status_26;
    goto L1;

  anon54_Then:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc NumDescriptors;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc NumPackets;
    goto L22;
}



procedure {:origName "AvCip_ValidateSourcePacket"} AvCip_ValidateSourcePacket(actual_CipData_24: int, actual_FrameContext_4: int) returns (Tmp_464: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_464 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_ValidateSourcePacket"} AvCip_ValidateSourcePacket(actual_CipData_24: int, actual_FrameContext_4: int) returns (Tmp_464: int)
{
  var {:pointer} Frame_1: int;
  var {:scalar} ValidateInfo: int;
  var {:scalar} SkipPacket: int;
  var {:pointer} CipData_24: int;
  var {:pointer} FrameContext_4: int;

  anon0:
    call {:si_unique_call 1017} ValidateInfo := __HAVOC_malloc(24);
    CipData_24 := actual_CipData_24;
    FrameContext_4 := actual_FrameContext_4;
    SkipPacket := 0;
    assume {:nonnull} FrameContext_4 != 0;
    assume FrameContext_4 > 0;
    havoc Frame_1;
    assume {:nonnull} FrameContext_4 != 0;
    assume FrameContext_4 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L10;

  L10:
    assume {:nonnull} CipData_24 != 0;
    assume CipData_24 > 0;
    assume {:nonnull} ValidateInfo != 0;
    assume ValidateInfo > 0;
    assume {:nonnull} Frame_1 != 0;
    assume Frame_1 > 0;
    assume {:nonnull} ValidateInfo != 0;
    assume ValidateInfo > 0;
    assume {:nonnull} FrameContext_4 != 0;
    assume FrameContext_4 > 0;
    assume {:nonnull} ValidateInfo != 0;
    assume ValidateInfo > 0;
    assume {:nonnull} Frame_1 != 0;
    assume Frame_1 > 0;
    goto L17;

  L17:
    Tmp_464 := SkipPacket;
    return;

  anon9_Then:
    assume {:nonnull} FrameContext_4 != 0;
    assume FrameContext_4 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} FrameContext_4 != 0;
    assume FrameContext_4 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L17;

  anon8_Then:
    goto L10;

  anon7_Then:
    goto L17;
}



procedure {:origName "AvCip_ListenFrameNotification"} AvCip_ListenFrameNotification(actual_CipData_25: int, actual_FrameContext_5: int, actual_Status_28: int) returns (Tmp_466: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_ListenFrameNotification"} AvCip_ListenFrameNotification(actual_CipData_25: int, actual_FrameContext_5: int, actual_Status_28: int) returns (Tmp_466: int)
{
  var {:pointer} Frame_2: int;
  var {:scalar} sdv_359: int;
  var {:scalar} NotifyInfo_1: int;
  var {:pointer} CipData_25: int;
  var {:pointer} FrameContext_5: int;
  var {:scalar} Status_28: int;
  var vslice_dummy_var_152: int;

  anon0:
    call {:si_unique_call 1018} NotifyInfo_1 := __HAVOC_malloc(12);
    CipData_25 := actual_CipData_25;
    FrameContext_5 := actual_FrameContext_5;
    Status_28 := actual_Status_28;
    call {:si_unique_call 1019} vslice_dummy_var_152 := sdv_RemoveEntryList(0);
    assume {:nonnull} FrameContext_5 != 0;
    assume FrameContext_5 > 0;
    havoc Frame_2;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    assume {:nonnull} NotifyInfo_1 != 0;
    assume NotifyInfo_1 > 0;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    assume {:nonnull} NotifyInfo_1 != 0;
    assume NotifyInfo_1 > 0;
    assume {:nonnull} NotifyInfo_1 != 0;
    assume NotifyInfo_1 > 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    call {:si_unique_call 1020} sdv_ExFreePool(0);
    call {:si_unique_call 1021} sdv_359 := sdv_IsListEmpty(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_359 != 0;
    FrameContext_5 := 0;
    goto L29;

  L29:
    Tmp_466 := FrameContext_5;
    return;

  anon3_Then:
    assume {:partition} sdv_359 == 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    havoc FrameContext_5;
    goto L29;
}



procedure {:origName "AvCip_ProcessTalkPacket_2"} AvCip_ProcessTalkPacket_2(actual_CipData_26: int, actual_DescriptorData_9: int) returns (Tmp_468: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_468 == -1073741675 || Tmp_468 == 0 || Tmp_468 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_ProcessTalkPacket_2"} AvCip_ProcessTalkPacket_2(actual_CipData_26: int, actual_DescriptorData_9: int) returns (Tmp_468: int)
{
  var {:scalar} i_2: int;
  var {:pointer} Frame_3: int;
  var {:scalar} BlockTime: int;
  var {:scalar} Tmp_470: int;
  var {:scalar} UniTime: int;
  var {:pointer} IsochDescriptor: int;
  var {:pointer} Tmp_471: int;
  var {:scalar} Count_1: int;
  var {:scalar} MaxFrameSize: int;
  var {:scalar} Status_29: int;
  var {:scalar} UniTime_1: int;
  var {:scalar} sdv_364: int;
  var {:scalar} LastCount: int;
  var {:pointer} DriftData: int;
  var {:scalar} sdv_365: int;
  var {:scalar} sdv_367: int;
  var {:scalar} Tmp_474: int;
  var {:scalar} sdv_368: int;
  var {:scalar} sdv_369: int;
  var {:pointer} Cip: int;
  var {:scalar} bDone: int;
  var {:scalar} sdv_370: int;
  var {:scalar} sdv_371: int;
  var {:scalar} sdv_373: int;
  var {:scalar} UniTime_2: int;
  var {:scalar} sdv_374: int;
  var {:pointer} Tmp_478: int;
  var {:scalar} sdv_375: int;
  var {:scalar} sdv_376: int;
  var {:scalar} Count_2: int;
  var {:scalar} SpTime: int;
  var {:pointer} FrameContext_6: int;
  var {:scalar} currLength: int;
  var {:pointer} SpHeader: int;
  var {:scalar} sdv_377: int;
  var {:pointer} pThisFrame: int;
  var {:pointer} CipData_26: int;
  var {:pointer} DescriptorData_9: int;
  var boogieTmp: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_2070: int;
  var vslice_dummy_var_2071: int;

  anon0:
    call {:si_unique_call 1022} UniTime := __HAVOC_malloc(40);
    call {:si_unique_call 1023} UniTime_1 := __HAVOC_malloc(40);
    call {:si_unique_call 1024} UniTime_2 := __HAVOC_malloc(40);
    call {:si_unique_call 1025} SpTime := __HAVOC_malloc(40);
    CipData_26 := actual_CipData_26;
    DescriptorData_9 := actual_DescriptorData_9;
    call {:si_unique_call 1026} Tmp_471 := __HAVOC_malloc(360);
    Status_29 := 0;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    havoc Tmp_471;
    IsochDescriptor := Tmp_471;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    havoc Cip;
    pThisFrame := 0;
    currLength := 0;
    i_2 := 0;
    MaxFrameSize := 0;
    FrameContext_6 := 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    DriftData := DriftData__CIP_DATA(CipData_26);
    bDone := 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    Count_1 := 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc Count_1;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 1027} vslice_dummy_var_155 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(CipData_26), Count_1);
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 1028} sdv_370 := sdv_IsListEmpty(0);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} sdv_370 != 0;
    goto L51;

  L51:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L52;

  L52:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc Tmp_474;
    call {:si_unique_call 1029} sdv_RtlZeroMemory(0, Tmp_474);
    goto L53;

  L53:
    i_2 := 0;
    goto L58;

  L58:
    call {:si_unique_call 1030} i_2, Frame_3, BlockTime, Tmp_470, MaxFrameSize, sdv_367, bDone, sdv_371, Tmp_478, FrameContext_6, currLength, SpHeader, sdv_377, pThisFrame, boogieTmp, vslice_dummy_var_153, vslice_dummy_var_154, vslice_dummy_var_156, vslice_dummy_var_157 := AvCip_ProcessTalkPacket_2_loop_L58(i_2, Frame_3, BlockTime, Tmp_470, MaxFrameSize, UniTime_1, sdv_365, sdv_367, sdv_369, Cip, bDone, sdv_371, Tmp_478, sdv_375, SpTime, FrameContext_6, currLength, SpHeader, sdv_377, pThisFrame, CipData_26, DescriptorData_9, boogieTmp, vslice_dummy_var_153, vslice_dummy_var_154, vslice_dummy_var_156, vslice_dummy_var_157);
    goto L58_last;

  L58_last:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc Tmp_478;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} Tmp_478 != 0;
    assume Tmp_478 > 0;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    call {:si_unique_call 1031} boogieTmp := corral_nondet();
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 1032} vslice_dummy_var_153 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(CipData_26), 3072);
    goto L69;

  L69:
    call {:si_unique_call 1033} Frame_3, BlockTime, Tmp_470, sdv_367, bDone, sdv_371, FrameContext_6, SpHeader, sdv_377, pThisFrame, boogieTmp, vslice_dummy_var_154, vslice_dummy_var_156, vslice_dummy_var_157 := AvCip_ProcessTalkPacket_2_loop_L69(Frame_3, BlockTime, Tmp_470, UniTime_1, sdv_365, sdv_367, sdv_369, Cip, bDone, sdv_371, sdv_375, SpTime, FrameContext_6, SpHeader, sdv_377, pThisFrame, CipData_26, DescriptorData_9, boogieTmp, vslice_dummy_var_154, vslice_dummy_var_156, vslice_dummy_var_157);
    goto L69_last;

  L69_last:
    call {:si_unique_call 1047} sdv_371 := AvCip_CopyBlock(CipData_26);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} sdv_371 != 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    BlockTime := 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L76;

  L76:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} FrameContext_6 != 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc Tmp_470;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    call {:si_unique_call 1034} sdv_RtlCopyMemory(0, 0, Tmp_470);
    goto L86;

  L86:
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    havoc SpHeader;
    goto L97;

  L97:
    assume {:nonnull} SpTime != 0;
    assume SpTime > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} SpTime != 0;
    assume SpTime > 0;
    assume {:nonnull} SpHeader != 0;
    assume SpHeader > 0;
    goto L87;

  L87:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L103;

  L103:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc vslice_dummy_var_2070;
    havoc vslice_dummy_var_2071;
    call {:si_unique_call 1035} sdv_367 := RtlUShortAdd(vslice_dummy_var_2070, vslice_dummy_var_2071, BytesInFrame__CIP_DATA(CipData_26));
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} sdv_367 >= 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    call {:si_unique_call 1036} vslice_dummy_var_154 := sdv_RemoveEntryList(0);
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    havoc Frame_3;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Frame_3 != 0;
    assume Frame_3 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Frame_3 != 0;
    assume Frame_3 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Frame_3 != 0;
    assume Frame_3 > 0;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    call {:si_unique_call 1037} vslice_dummy_var_156 := sdv_InsertTailList(NotifyFrameList__CIP_DESCRIPTOR_DATA(DescriptorData_9), ListEntry__CIP_FRAME_CONTEXT(FrameContext_6));
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L128;

  L128:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    call {:si_unique_call 1038} sdv_377 := sdv_IsListEmpty(0);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} sdv_377 == 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc FrameContext_6;
    goto L136;

  L136:
    bDone := 1;
    goto L115;

  L115:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto L138;

  L138:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 1039} boogieTmp := corral_nondet();
    goto L77;

  L77:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    goto L145;

  L145:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} FrameContext_6 == 0;
    goto L73;

  L73:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L171;

  L171:
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc MaxFrameSize;
    goto L174;

  L174:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} currLength != 0;
    goto L177;

  L177:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc currLength;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} bDone != 0;
    i_2 := i_2 + 1;
    goto L59;

  L59:
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    call {:si_unique_call 1040} IoFreeMdl(0);
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto L190;

  L190:
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} currLength != 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    call {:si_unique_call 1041} boogieTmp := IoAllocateMdl(0, currLength, 0, 0, 0);
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto L141;

  L141:
    Tmp_468 := Status_29;
    return;

  anon146_Then:
    Status_29 := -1073741670;
    goto L141;

  anon131_Then:
    assume {:partition} currLength == 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto L141;

  anon145_Then:
    goto L190;

  anon144_Then:
    assume {:partition} bDone == 0;
    i_2 := i_2 + 1;
    goto anon144_Then_dummy;

  anon144_Then_dummy:
    assume false;
    return;

  anon129_Then:
    assume {:partition} currLength == 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    goto L177;

  anon130_Then:
    goto L177;

  anon143_Then:
    goto L174;

  anon142_Then:
    goto L171;

  anon108_Then:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L171;

  anon147_Then:
    goto L171;

  anon126_Then:
    assume {:partition} FrameContext_6 != 0;
    goto anon126_Then_dummy;

  anon126_Then_dummy:
    assume false;
    return;

  anon124_Then:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} FrameContext_6 != 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} UniTime_1 != 0;
    assume UniTime_1 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} UniTime_1 != 0;
    assume UniTime_1 > 0;
    goto L145;

  anon125_Then:
    assume {:partition} FrameContext_6 == 0;
    goto L145;

  anon111_Then:
    goto anon111_Then_dummy;

  anon111_Then_dummy:
    assume false;
    return;

  anon120_Then:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L138;

  anon123_Then:
    assume {:partition} sdv_377 != 0;
    goto L130;

  L130:
    FrameContext_6 := 0;
    goto L136;

  anon122_Then:
    goto L130;

  anon121_Then:
    goto L128;

  anon141_Then:
    goto L115;

  anon119_Then:
    assume {:partition} 0 > sdv_367;
    Status_29 := -1073741675;
    goto L141;

  anon118_Then:
    goto L103;

  anon115_Then:
    goto L103;

  anon117_Then:
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    havoc SpHeader;
    goto L97;

  anon116_Then:
    goto L87;

  anon114_Then:
    goto L87;

  anon112_Then:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} pThisFrame == 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    havoc pThisFrame;
    goto L86;

  anon113_Then:
    assume {:partition} pThisFrame != 0;
    goto L86;

  anon110_Then:
    assume {:partition} FrameContext_6 == 0;
    goto L77;

  anon148_Then:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    BlockTime := BlockTime + 1;
    goto L159;

  L159:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc BlockTime;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 1042} vslice_dummy_var_157 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(CipData_26), BlockTime);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} bDone != 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} FrameContext_6 == 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L76;

  anon128_Then:
    assume {:partition} FrameContext_6 != 0;
    goto L76;

  anon127_Then:
    assume {:partition} bDone == 0;
    goto L76;

  anon149_Then:
    goto L159;

  anon109_Then:
    goto L76;

  anon107_Then:
    assume {:partition} sdv_371 == 0;
    goto L73;

  anon140_Then:
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    goto L69;

  anon106_Then:
    goto L59;

  anon105_Then:
    goto L53;

  anon104_Then:
    assume {:partition} sdv_370 == 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc FrameContext_6;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} UniTime != 0;
    assume UniTime > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} UniTime != 0;
    assume UniTime > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L51;

  anon139_Then:
    call {:si_unique_call 1043} sdv_368 := sdv_IsListEmpty(0);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} sdv_368 == 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc FrameContext_6;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} UniTime_2 != 0;
    assume UniTime_2 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} UniTime_2 != 0;
    assume UniTime_2 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    goto L230;

  L230:
    call {:si_unique_call 1044} AvCip_ProcessTalkPacket_2_loop_L230(UniTime_2, sdv_376, FrameContext_6, CipData_26);
    goto L230_last;

  L230_last:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} UniTime_2 != 0;
    assume UniTime_2 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} UniTime_2 != 0;
    assume UniTime_2 > 0;
    goto anon133_Else_dummy;

  anon133_Else_dummy:
    assume false;
    return;

  anon133_Then:
    goto L52;

  anon150_Then:
    goto L52;

  anon132_Then:
    assume {:partition} sdv_368 != 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L52;

  anon138_Then:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    Count_2 := 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc Count_2;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 1045} vslice_dummy_var_158 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(CipData_26), Count_2);
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto L255;

  L255:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L256;

  L256:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    call {:si_unique_call 1046} sdv_364 := sdv_IsListEmpty(0);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_364 != 0;
    goto L262;

  L262:
    FrameContext_6 := 0;
    goto L52;

  anon135_Then:
    assume {:partition} sdv_364 == 0;
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc FrameContext_6;
    goto L52;

  anon136_Then:
    goto L262;

  anon151_Then:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto L255;

  anon103_Then:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    havoc LastCount;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    havoc LastCount;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} LastCount >= 8000;
    LastCount := LastCount - 8000;
    goto L271;

  L271:
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto L256;

  anon137_Then:
    goto L256;

  anon153_Then:
    assume {:partition} 8000 > LastCount;
    goto L271;

  anon134_Then:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L256;

  anon152_Then:
    goto L256;
}



procedure {:origName "AvCip_SetTalkFormat"} AvCip_SetTalkFormat(actual_CipData_27: int, actual_Format_1: int, actual_LocalNodeId: int) returns (Tmp_482: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_482 == -1073741790 || Tmp_482 == 0 || Tmp_482 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_SetTalkFormat"} AvCip_SetTalkFormat(actual_CipData_27: int, actual_Format_1: int, actual_LocalNodeId: int) returns (Tmp_482: int)
{
  var {:scalar} Status_30: int;
  var {:scalar} Tmp_483: int;
  var {:scalar} Irql_12: int;
  var {:pointer} Tmp_484: int;
  var {:pointer} CipData_27: int;
  var {:pointer} Format_1: int;
  var {:pointer} LocalNodeId: int;
  var vslice_dummy_var_159: int;

  anon0:
    CipData_27 := actual_CipData_27;
    Format_1 := actual_Format_1;
    LocalNodeId := actual_LocalNodeId;
    Status_30 := 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Status_30 := -1073741790;
    goto L11;

  L11:
    Tmp_482 := Status_30;
    return;

  anon9_Then:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    call {:si_unique_call 1048} Tmp_484 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    call {:si_unique_call 1049} sdv_KeAcquireSpinLock(0, Tmp_484);
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    havoc Irql_12;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 1050} vslice_dummy_var_159 := AvCip_ConvertCipDataFormat(Format_1);
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    goto L38;

  L38:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    havoc Tmp_483;
    goto L43;

  L43:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    call {:si_unique_call 1051} sdv_KeReleaseSpinLock(0, Irql_12);
    goto L11;

  anon12_Then:
    Tmp_483 := 1024;
    goto L43;

  anon10_Then:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    goto L38;

  anon11_Then:
    Status_30 := -1073741811;
    goto L11;
}



procedure {:origName "AvCip_Create"} AvCip_Create(actual_pCipData: int, actual_DDIVersion: int, actual_ParentDeviceObject_1: int, actual_IrbPool: int, actual_Connect_4: int, actual_Type_3: int, actual_LocalNodeId_1: int) returns (Tmp_485: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_485 == 0 || Tmp_485 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_Create"} AvCip_Create(actual_pCipData: int, actual_DDIVersion: int, actual_ParentDeviceObject_1: int, actual_IrbPool: int, actual_Connect_4: int, actual_Type_3: int, actual_LocalNodeId_1: int) returns (Tmp_485: int)
{
  var {:pointer} sdv_379: int;
  var {:scalar} Status_31: int;
  var {:pointer} CipData_28: int;
  var {:pointer} Tmp_486: int;
  var {:pointer} pCipData: int;
  var {:scalar} DDIVersion: int;
  var {:pointer} ParentDeviceObject_1: int;
  var {:pointer} IrbPool: int;
  var {:pointer} Connect_4: int;
  var {:scalar} Type_3: int;
  var {:pointer} LocalNodeId_1: int;

  anon0:
    pCipData := actual_pCipData;
    DDIVersion := actual_DDIVersion;
    ParentDeviceObject_1 := actual_ParentDeviceObject_1;
    IrbPool := actual_IrbPool;
    Connect_4 := actual_Connect_4;
    Type_3 := actual_Type_3;
    LocalNodeId_1 := actual_LocalNodeId_1;
    Status_31 := 0;
    CipData_28 := 0;
    call {:si_unique_call 1052} sdv_379 := ExAllocatePoolWithTag(512, 212, 943206710);
    CipData_28 := sdv_379;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} CipData_28 != 0;
    call {:si_unique_call 1053} sdv_RtlZeroMemory(0, 212);
    call {:si_unique_call 1054} Tmp_486 := __HAVOC_malloc(4);
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} Tmp_486 != 0;
    assume Tmp_486 > 0;
    call {:si_unique_call 1055} sdv_KeInitializeSpinLock(Tmp_486);
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} Tmp_486 != 0;
    assume Tmp_486 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    call {:si_unique_call 1056} InitializeListHead(FrameList__CIP_DATA(CipData_28));
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    call {:si_unique_call 1057} InitializeListHead(DescriptorList__CIP_DATA(CipData_28));
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} pCipData != 0;
    assume pCipData > 0;
    goto L37;

  L37:
    Tmp_485 := Status_31;
    return;

  anon3_Then:
    assume {:partition} CipData_28 == 0;
    Status_31 := -1073741670;
    assume {:nonnull} pCipData != 0;
    assume pCipData > 0;
    goto L37;
}



procedure {:origName "AvCip_AttachFrames"} AvCip_AttachFrames(actual_BusExtension_18: int, actual_Irp_28: int, actual_Request_5: int) returns (Tmp_487: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_487 == 0 || Tmp_487 == -1073741670 || Tmp_487 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_AttachFrames"} AvCip_AttachFrames(actual_BusExtension_18: int, actual_Irp_28: int, actual_Request_5: int) returns (Tmp_487: int)
{
  var {:pointer} Tmp_488: int;
  var {:pointer} sdv_380: int;
  var {:scalar} Status_32: int;
  var {:pointer} CipData_29: int;
  var {:pointer} Connect_5: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_491: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} AttachFrame: int;
  var {:scalar} Irql_13: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} FrameContext_7: int;
  var {:pointer} Tmp_494: int;
  var {:pointer} Tmp_495: int;
  var {:pointer} Request_5: int;
  var vslice_dummy_var_160: int;

  anon0:
    Request_5 := actual_Request_5;
    Status_32 := 0;
    assume {:nonnull} Request_5 != 0;
    assume Request_5 > 0;
    AttachFrame := AttachFrame__AV_61883_REQUEST(Request_5);
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Connect_5;
    assume {:nonnull} Connect_5 != 0;
    assume Connect_5 > 0;
    havoc CipData_29;
    assume {:nonnull} Connect_5 != 0;
    assume Connect_5 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_490;
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 1058} sdv_380 := ExAllocatePoolWithTag(512, 32, 943206710);
    FrameContext_7 := sdv_380;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} FrameContext_7 != 0;
    call {:si_unique_call 1059} sdv_RtlZeroMemory(0, 32);
    call {:si_unique_call 1060} Tmp_495 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    call {:si_unique_call 1061} sdv_KeAcquireSpinLock(0, Tmp_495);
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    havoc Irql_13;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_493;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L38;

  L38:
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_491;
    assume {:nonnull} Tmp_491 != 0;
    assume Tmp_491 > 0;
    goto L39;

  L39:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_492;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_494;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_489;
    assume {:nonnull} Tmp_489 != 0;
    assume Tmp_489 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_488;
    assume {:nonnull} Tmp_488 != 0;
    assume Tmp_488 > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    call {:si_unique_call 1062} vslice_dummy_var_160 := sdv_InsertTailList(FrameList__CIP_DATA(CipData_29), ListEntry__CIP_FRAME_CONTEXT(FrameContext_7));
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    call {:si_unique_call 1063} sdv_KeReleaseSpinLock(0, Irql_13);
    goto L56;

  L56:
    Tmp_487 := Status_32;
    return;

  anon28_Then:
    goto L39;

  anon33_Then:
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto L38;

  anon27_Then:
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto L38;

  anon29_Then:
    goto L38;

  anon32_Then:
    assume {:partition} FrameContext_7 == 0;
    Status_32 := -1073741670;
    goto L56;

  anon26_Then:
    goto L19;

  L19:
    Status_32 := -1073741811;
    goto L56;

  anon25_Then:
    goto L19;

  anon24_Then:
    goto L19;

  anon31_Then:
    goto L16;

  L16:
    Status_32 := -1073741811;
    goto L56;

  anon23_Then:
    goto L16;

  anon30_Then:
    Status_32 := -1073741811;
    goto L56;
}



procedure {:origName "AvFcp_CreateRequestAddressRange"} AvFcp_CreateRequestAddressRange(actual_BusExtension_19: int, actual_FcpData_1: int) returns (Tmp_496: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_CreateRequestAddressRange"} AvFcp_CreateRequestAddressRange(actual_BusExtension_19: int, actual_FcpData_1: int) returns (Tmp_496: int)
{
  var {:pointer} Irp_29: int;
  var {:pointer} Irb_8: int;
  var {:scalar} StackSize_2: int;
  var {:pointer} sdv_382: int;
  var {:scalar} ntStatus_15: int;
  var {:pointer} Tmp_498: int;
  var {:pointer} BusExtension_19: int;
  var {:pointer} FcpData_1: int;
  var vslice_dummy_var_2072: int;

  anon0:
    BusExtension_19 := actual_BusExtension_19;
    FcpData_1 := actual_FcpData_1;
    ntStatus_15 := 0;
    Irp_29 := 0;
    Irb_8 := 0;
    assume {:nonnull} BusExtension_19 != 0;
    assume BusExtension_19 > 0;
    havoc Tmp_498;
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    havoc StackSize_2;
    call {:si_unique_call 1064} Irp_29 := IoAllocateIrp(StackSize_2, 0);
    call {:si_unique_call 1065} sdv_382 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_8 := sdv_382;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irp_29 != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Irb_8 != 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} FcpData_1 != 0;
    assume FcpData_1 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} FcpData_1 != 0;
    assume FcpData_1 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} BusExtension_19 != 0;
    assume BusExtension_19 > 0;
    havoc vslice_dummy_var_2072;
    call {:si_unique_call 1066} ntStatus_15 := Av_SubmitIrpSynch(vslice_dummy_var_2072, Irp_29, Irb_8);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} ntStatus_15 >= 0;
    assume {:nonnull} FcpData_1 != 0;
    assume FcpData_1 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    goto L45;

  L45:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Irp_29 != 0;
    call {:si_unique_call 1067} IoFreeIrp(0);
    goto L47;

  L47:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Irb_8 != 0;
    assume {:nonnull} BusExtension_19 != 0;
    assume BusExtension_19 > 0;
    call {:si_unique_call 1068} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_19), Irb_8);
    goto L51;

  L51:
    Tmp_496 := ntStatus_15;
    return;

  anon14_Then:
    assume {:partition} Irb_8 == 0;
    goto L51;

  anon13_Then:
    assume {:partition} Irp_29 == 0;
    goto L47;

  anon12_Then:
    assume {:partition} 0 > ntStatus_15;
    goto L45;

  anon11_Then:
    assume {:partition} Irb_8 == 0;
    goto L20;

  L20:
    ntStatus_15 := -1073741670;
    goto L45;

  anon15_Then:
    assume {:partition} Irp_29 == 0;
    goto L20;
}



procedure {:origName "AvFcp_CreateFcpData"} AvFcp_CreateFcpData(actual_BusExtension_20: int, actual_ppFcpData: int) returns (Tmp_499: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_CreateFcpData"} AvFcp_CreateFcpData(actual_BusExtension_20: int, actual_ppFcpData: int) returns (Tmp_499: int)
{
  var {:pointer} sdv_384: int;
  var {:pointer} sdv_386: int;
  var {:scalar} ntStatus_16: int;
  var {:pointer} FcpData_2: int;
  var {:pointer} sdv_388: int;
  var {:pointer} BusExtension_20: int;
  var {:pointer} ppFcpData: int;
  var boogieTmp: int;

  anon0:
    BusExtension_20 := actual_BusExtension_20;
    ppFcpData := actual_ppFcpData;
    ntStatus_16 := 0;
    call {:si_unique_call 1069} sdv_384 := ExAllocatePoolWithTag(512, 44, 943206710);
    FcpData_2 := sdv_384;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} FcpData_2 != 0;
    call {:si_unique_call 1070} sdv_RtlZeroMemory(0, 44);
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    call {:si_unique_call 1071} sdv_386 := ExAllocatePoolWithTag(512, 512, 943206710);
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    call {:si_unique_call 1072} boogieTmp := IoAllocateMdl(0, 512, 0, 0, 0);
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 1073} ntStatus_16 := AvFcp_CreateRequestAddressRange(BusExtension_20, FcpData_2);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_16 < 0;
    goto L60;

  L60:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} FcpData_2 != 0;
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1074} IoFreeMdl(0);
    goto L63;

  L63:
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 1075} sdv_ExFreePool(0);
    goto L67;

  L67:
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 1076} IoFreeMdl(0);
    goto L71;

  L71:
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 1077} sdv_ExFreePool(0);
    goto L75;

  L75:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} FcpData_2 != 0;
    call {:si_unique_call 1078} sdv_ExFreePool(0);
    goto L61;

  L61:
    assume {:nonnull} ppFcpData != 0;
    assume ppFcpData > 0;
    Tmp_499 := ntStatus_16;
    goto L1;

  L1:
    return;

  anon36_Then:
    assume {:partition} FcpData_2 == 0;
    goto L61;

  anon35_Then:
    goto L75;

  anon34_Then:
    goto L71;

  anon33_Then:
    goto L67;

  anon32_Then:
    goto L63;

  anon31_Then:
    assume {:partition} FcpData_2 == 0;
    goto L61;

  anon28_Then:
    assume {:partition} 0 <= ntStatus_16;
    call {:si_unique_call 1079} sdv_388 := ExAllocatePoolWithTag(512, 512, 943206710);
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    call {:si_unique_call 1080} boogieTmp := IoAllocateMdl(0, 512, 0, 0, 0);
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 1081} ntStatus_16 := AvFcp_CreateResponseAddressRange(BusExtension_20, FcpData_2);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ntStatus_16 < 0;
    goto L60;

  anon30_Then:
    assume {:partition} 0 <= ntStatus_16;
    assume {:nonnull} ppFcpData != 0;
    assume ppFcpData > 0;
    Tmp_499 := ntStatus_16;
    goto L1;

  anon29_Then:
    ntStatus_16 := -1073741670;
    goto L60;

  anon39_Then:
    ntStatus_16 := -1073741670;
    goto L60;

  anon27_Then:
    ntStatus_16 := -1073741670;
    goto L60;

  anon38_Then:
    ntStatus_16 := -1073741670;
    goto L60;

  anon37_Then:
    assume {:partition} FcpData_2 == 0;
    ntStatus_16 := -1073741670;
    goto L60;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_161: int;

  anon0:
    call {:si_unique_call 1082} vslice_dummy_var_161 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "AvFcp_GetFcpResponse"} AvFcp_GetFcpResponse(actual_PdoExtension_7: int, actual_Irp_30: int, actual_Request_6: int) returns (Tmp_503: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_503 == -1073741811 || Tmp_503 == 0 || Tmp_503 == -1073741536 || Tmp_503 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_GetFcpResponse"} AvFcp_GetFcpResponse(actual_PdoExtension_7: int, actual_Irp_30: int, actual_Request_6: int) returns (Tmp_503: int)
{
  var {:scalar} sdv_391: int;
  var {:pointer} pEntry: int;
  var {:pointer} Tmp_504: int;
  var {:pointer} pResponse: int;
  var {:scalar} sdv_392: int;
  var {:scalar} ntStatus_17: int;
  var {:pointer} sdv_395: int;
  var {:pointer} FcpResponse: int;
  var {:pointer} Length_4: int;
  var {:scalar} Irql_14: int;
  var {:pointer} FcpResponse_1: int;
  var {:pointer} NodeAddress: int;
  var {:pointer} PdoExtension_7: int;
  var {:pointer} Irp_30: int;
  var {:pointer} Request_6: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_2073: int;

  anon0:
    PdoExtension_7 := actual_PdoExtension_7;
    Irp_30 := actual_Irp_30;
    Request_6 := actual_Request_6;
    ntStatus_17 := 0;
    pEntry := 0;
    call {:si_unique_call 1083} Tmp_504 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    call {:si_unique_call 1084} sdv_KeAcquireSpinLock(0, Tmp_504);
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    havoc Irql_14;
    call {:si_unique_call 1085} sdv_391 := sdv_IsListEmpty(0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_391 != 0;
    goto L18;

  L18:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1086} sdv_395 := sdv_containing_record(pEntry, 0);
    pResponse := sdv_395;
    assume {:nonnull} Request_6 != 0;
    assume Request_6 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Request_6 != 0;
    assume Request_6 > 0;
    FcpResponse_1 := Request__AV_61883_REQUEST(Request_6);
    assume {:nonnull} FcpResponse_1 != 0;
    assume FcpResponse_1 > 0;
    NodeAddress := NodeAddress__FCP_GET_REQUEST(FcpResponse_1);
    assume {:nonnull} FcpResponse_1 != 0;
    assume FcpResponse_1 > 0;
    Length_4 := Length__FCP_GET_REQUEST(FcpResponse_1);
    assume {:nonnull} FcpResponse_1 != 0;
    assume FcpResponse_1 > 0;
    goto L37;

  L37:
    assume {:nonnull} Length_4 != 0;
    assume Length_4 > 0;
    assume {:nonnull} pResponse != 0;
    assume pResponse > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_17 := -1073741811;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 1087} InsertHeadList(FcpRspPktList__PDO_DEVICE_EXTENSION(PdoExtension_7), pEntry);
    goto L46;

  L46:
    call {:si_unique_call 1088} sdv_KeReleaseSpinLock(0, Irql_14);
    Tmp_503 := ntStatus_17;
    return;

  anon19_Then:
    assume {:nonnull} pResponse != 0;
    assume pResponse > 0;
    havoc vslice_dummy_var_2073;
    call {:si_unique_call 1089} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2073);
    assume {:nonnull} Length_4 != 0;
    assume Length_4 > 0;
    assume {:nonnull} pResponse != 0;
    assume pResponse > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} NodeAddress != 0;
    assume {:nonnull} NodeAddress != 0;
    assume NodeAddress > 0;
    assume {:nonnull} pResponse != 0;
    assume pResponse > 0;
    assume {:nonnull} NodeAddress != 0;
    assume NodeAddress > 0;
    assume {:nonnull} pResponse != 0;
    assume pResponse > 0;
    goto L52;

  L52:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 1090} ExFreeToNPagedLookasideList(FcpRspPktPool__PDO_DEVICE_EXTENSION(PdoExtension_7), pResponse);
    call {:si_unique_call 1091} vslice_dummy_var_163 := sdv_IoSetCancelRoutine(Irp_30, 0);
    ntStatus_17 := 0;
    goto L46;

  anon23_Then:
    assume {:partition} NodeAddress == 0;
    goto L52;

  anon22_Then:
    assume {:nonnull} Request_6 != 0;
    assume Request_6 > 0;
    FcpResponse := Request__AV_61883_REQUEST(Request_6);
    NodeAddress := 0;
    assume {:nonnull} FcpResponse != 0;
    assume FcpResponse > 0;
    Length_4 := Length_unnamed_tag_18(FcpResponse);
    assume {:nonnull} FcpResponse != 0;
    assume FcpResponse > 0;
    goto L37;

  anon18_Then:
    call {:si_unique_call 1092} vslice_dummy_var_162 := sdv_IoSetCancelRoutine(Irp_30, li2bplFunctionConstant498);
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 1093} sdv_392 := sdv_IoSetCancelRoutine(Irp_30, 0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_392 != 0;
    ntStatus_17 := -1073741536;
    goto L46;

  anon21_Then:
    assume {:partition} sdv_392 == 0;
    goto L65;

  L65:
    ntStatus_17 := 259;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume Irp_30 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1094} SLIC_sdv_IoMarkIrpPending_entry(strConst__li2bpl1);
    goto L85;

  L85:
    call {:si_unique_call 1095} sdv_IoMarkIrpPending(0);
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 1096} vslice_dummy_var_164 := sdv_InsertTailList(FcpRspIrpList__PDO_DEVICE_EXTENSION(PdoExtension_7), ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_30))));
    goto L46;

  anon24_Then:
    assume !(Irp_30 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L85;

  anon20_Then:
    goto L65;

  anon17_Then:
    assume {:partition} sdv_391 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 1097} pEntry := RemoveHeadList(FcpRspPktList__PDO_DEVICE_EXTENSION(PdoExtension_7));
    goto L18;
}



procedure {:origName "AvFcp_DestroyFcpData"} AvFcp_DestroyFcpData(actual_BusExtension_21: int, actual_FcpData_3: int) returns (Tmp_505: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} Tmp_505 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_DestroyFcpData"} AvFcp_DestroyFcpData(actual_BusExtension_21: int, actual_FcpData_3: int) returns (Tmp_505: int)
{
  var {:scalar} ntStatus_18: int;
  var {:pointer} BusExtension_21: int;
  var {:pointer} FcpData_3: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;

  anon0:
    BusExtension_21 := actual_BusExtension_21;
    FcpData_3 := actual_FcpData_3;
    ntStatus_18 := 0;
    call {:si_unique_call 1098} vslice_dummy_var_166 := AvFcp_FreeRequestAddressRange(BusExtension_21, FcpData_3);
    call {:si_unique_call 1099} vslice_dummy_var_165 := AvFcp_FreeResponseAddressRange(BusExtension_21, FcpData_3);
    assume {:nonnull} FcpData_3 != 0;
    assume FcpData_3 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1100} IoFreeMdl(0);
    goto L12;

  L12:
    assume {:nonnull} FcpData_3 != 0;
    assume FcpData_3 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 1101} sdv_ExFreePool(0);
    goto L16;

  L16:
    assume {:nonnull} FcpData_3 != 0;
    assume FcpData_3 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 1102} IoFreeMdl(0);
    goto L20;

  L20:
    assume {:nonnull} FcpData_3 != 0;
    assume FcpData_3 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 1103} sdv_ExFreePool(0);
    goto L24;

  L24:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} FcpData_3 != 0;
    call {:si_unique_call 1104} sdv_ExFreePool(0);
    goto L28;

  L28:
    Tmp_505 := ntStatus_18;
    return;

  anon15_Then:
    assume {:partition} FcpData_3 == 0;
    goto L28;

  anon14_Then:
    goto L24;

  anon13_Then:
    goto L20;

  anon12_Then:
    goto L16;

  anon11_Then:
    goto L12;
}



procedure {:origName "AvFcp_GetFcpRequest"} AvFcp_GetFcpRequest(actual_PdoExtension_8: int, actual_Irp_31: int, actual_Request_7: int) returns (Tmp_507: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_507 == -1073741811 || Tmp_507 == 0 || Tmp_507 == -1073741536 || Tmp_507 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_GetFcpRequest"} AvFcp_GetFcpRequest(actual_PdoExtension_8: int, actual_Irp_31: int, actual_Request_7: int) returns (Tmp_507: int)
{
  var {:pointer} pRequest: int;
  var {:pointer} FcpRequest: int;
  var {:scalar} sdv_399: int;
  var {:pointer} pEntry_1: int;
  var {:scalar} sdv_400: int;
  var {:scalar} ntStatus_19: int;
  var {:pointer} sdv_404: int;
  var {:scalar} Irql_15: int;
  var {:pointer} Tmp_508: int;
  var {:pointer} PdoExtension_8: int;
  var {:pointer} Irp_31: int;
  var {:pointer} Request_7: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_2074: int;

  anon0:
    PdoExtension_8 := actual_PdoExtension_8;
    Irp_31 := actual_Irp_31;
    Request_7 := actual_Request_7;
    ntStatus_19 := 0;
    pEntry_1 := 0;
    assume {:nonnull} Request_7 != 0;
    assume Request_7 > 0;
    FcpRequest := GetRequest__AV_61883_REQUEST(Request_7);
    call {:si_unique_call 1105} Tmp_508 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    call {:si_unique_call 1106} sdv_KeAcquireSpinLock(0, Tmp_508);
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    havoc Irql_15;
    call {:si_unique_call 1107} sdv_399 := sdv_IsListEmpty(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_399 != 0;
    goto L20;

  L20:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 1108} sdv_404 := sdv_containing_record(pEntry_1, 0);
    pRequest := sdv_404;
    assume {:nonnull} FcpRequest != 0;
    assume FcpRequest > 0;
    assume {:nonnull} pRequest != 0;
    assume pRequest > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    ntStatus_19 := -1073741811;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 1109} InsertHeadList(FcpReqPktList__PDO_DEVICE_EXTENSION(PdoExtension_8), pEntry_1);
    goto L38;

  L38:
    call {:si_unique_call 1110} sdv_KeReleaseSpinLock(0, Irql_15);
    Tmp_507 := ntStatus_19;
    return;

  anon17_Then:
    assume {:nonnull} pRequest != 0;
    assume pRequest > 0;
    havoc vslice_dummy_var_2074;
    call {:si_unique_call 1111} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2074);
    assume {:nonnull} FcpRequest != 0;
    assume FcpRequest > 0;
    assume {:nonnull} pRequest != 0;
    assume pRequest > 0;
    assume {:nonnull} FcpRequest != 0;
    assume FcpRequest > 0;
    assume {:nonnull} pRequest != 0;
    assume pRequest > 0;
    assume {:nonnull} FcpRequest != 0;
    assume FcpRequest > 0;
    assume {:nonnull} pRequest != 0;
    assume pRequest > 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 1112} ExFreeToNPagedLookasideList(FcpReqPktPool__PDO_DEVICE_EXTENSION(PdoExtension_8), pRequest);
    call {:si_unique_call 1113} vslice_dummy_var_168 := sdv_IoSetCancelRoutine(Irp_31, 0);
    ntStatus_19 := 0;
    goto L38;

  anon14_Then:
    call {:si_unique_call 1114} vslice_dummy_var_167 := sdv_IoSetCancelRoutine(Irp_31, li2bplFunctionConstant499);
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1115} sdv_400 := sdv_IoSetCancelRoutine(Irp_31, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} sdv_400 != 0;
    ntStatus_19 := -1073741536;
    goto L38;

  anon16_Then:
    assume {:partition} sdv_400 == 0;
    goto L52;

  L52:
    ntStatus_19 := 259;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1116} SLIC_sdv_IoMarkIrpPending_entry(strConst__li2bpl1);
    goto L71;

  L71:
    call {:si_unique_call 1117} sdv_IoMarkIrpPending(0);
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 1118} vslice_dummy_var_169 := sdv_InsertTailList(FcpReqIrpList__PDO_DEVICE_EXTENSION(PdoExtension_8), ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_31))));
    goto L38;

  anon18_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L71;

  anon15_Then:
    goto L52;

  anon13_Then:
    assume {:partition} sdv_399 == 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 1119} pEntry_1 := RemoveHeadList(FcpReqPktList__PDO_DEVICE_EXTENSION(PdoExtension_8));
    goto L20;
}



procedure {:origName "AvFcp_CompleteQueuedFcp"} AvFcp_CompleteQueuedFcp(actual_PdoExtension_9: int, actual_Notify_1: int) returns (Tmp_509: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_509 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_CompleteQueuedFcp"} AvFcp_CompleteQueuedFcp(actual_PdoExtension_9: int, actual_Notify_1: int) returns (Tmp_509: int)
{
  var {:pointer} Tmp_510: int;
  var {:pointer} FcpIrp: int;
  var {:scalar} sdv_405: int;
  var {:scalar} Irql_16: int;
  var {:pointer} FcpIrp_1: int;
  var {:scalar} sdv_407: int;
  var {:pointer} sdv_409: int;
  var {:scalar} sdv_410: int;
  var {:scalar} sdv_411: int;
  var {:pointer} IrpEntry: int;
  var {:scalar} Irql_17: int;
  var {:pointer} sdv_412: int;
  var {:pointer} IrpEntry_1: int;
  var {:pointer} PdoExtension_9: int;
  var {:scalar} Notify_1: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Notify_1 := actual_Notify_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} BAND(Notify_1, 1) != 0;
    FcpIrp := 0;
    call {:si_unique_call 1120} Tmp_510 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    call {:si_unique_call 1121} sdv_KeAcquireSpinLock(0, Tmp_510);
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    havoc Irql_17;
    goto L12;

  L12:
    call {:si_unique_call 1122} Tmp_510, FcpIrp, sdv_405, sdv_409, sdv_411, IrpEntry, Irql_17 := AvFcp_CompleteQueuedFcp_loop_L12(Tmp_510, FcpIrp, sdv_405, sdv_409, sdv_411, IrpEntry, Irql_17, PdoExtension_9);
    goto L12_last;

  L12_last:
    call {:si_unique_call 1145} sdv_405 := sdv_IsListEmpty(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_405 != 0;
    call {:si_unique_call 1123} sdv_KeReleaseSpinLock(0, Irql_17);
    goto L4;

  L4:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} BAND(Notify_1, 2) != 0;
    FcpIrp_1 := 0;
    call {:si_unique_call 1124} Tmp_510 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    call {:si_unique_call 1125} sdv_KeAcquireSpinLock(0, Tmp_510);
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    havoc Irql_16;
    goto L53;

  L53:
    call {:si_unique_call 1126} Tmp_510, Irql_16, FcpIrp_1, sdv_407, sdv_410, sdv_412, IrpEntry_1 := AvFcp_CompleteQueuedFcp_loop_L53(Tmp_510, Irql_16, FcpIrp_1, sdv_407, sdv_410, sdv_412, IrpEntry_1, PdoExtension_9);
    goto L53_last;

  L53_last:
    call {:si_unique_call 1144} sdv_410 := sdv_IsListEmpty(0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_410 != 0;
    call {:si_unique_call 1127} sdv_KeReleaseSpinLock(0, Irql_16);
    goto L45;

  L45:
    Tmp_509 := 0;
    return;

  anon17_Then:
    assume {:partition} sdv_410 == 0;
    assume {:nonnull} PdoExtension_9 != 0;
    assume PdoExtension_9 > 0;
    call {:si_unique_call 1128} IrpEntry_1 := RemoveHeadList(FcpReqIrpList__PDO_DEVICE_EXTENSION(PdoExtension_9));
    call {:si_unique_call 1129} sdv_412 := sdv_containing_record(IrpEntry_1, 88);
    FcpIrp_1 := sdv_412;
    call {:si_unique_call 1130} sdv_407 := sdv_IoSetCancelRoutine(FcpIrp_1, 0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} sdv_407 != 0;
    call {:si_unique_call 1131} sdv_KeReleaseSpinLock(0, Irql_16);
    assume {:nonnull} FcpIrp_1 != 0;
    assume FcpIrp_1 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(FcpIrp_1))] := -1073741248;
    call {:si_unique_call 1132} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1133} Tmp_510 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    call {:si_unique_call 1134} sdv_KeAcquireSpinLock(0, Tmp_510);
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    havoc Irql_16;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    assume false;
    return;

  anon18_Then:
    assume {:partition} sdv_407 == 0;
    assume {:nonnull} FcpIrp_1 != 0;
    assume FcpIrp_1 > 0;
    call {:si_unique_call 1135} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(FcpIrp_1))));
    FcpIrp_1 := 0;
    goto anon18_Then_dummy;

  anon18_Then_dummy:
    assume false;
    return;

  anon14_Then:
    assume {:partition} BAND(Notify_1, 2) == 0;
    goto L45;

  anon15_Then:
    assume {:partition} sdv_405 == 0;
    assume {:nonnull} PdoExtension_9 != 0;
    assume PdoExtension_9 > 0;
    call {:si_unique_call 1136} IrpEntry := RemoveHeadList(FcpRspIrpList__PDO_DEVICE_EXTENSION(PdoExtension_9));
    call {:si_unique_call 1137} sdv_409 := sdv_containing_record(IrpEntry, 88);
    FcpIrp := sdv_409;
    call {:si_unique_call 1138} sdv_411 := sdv_IoSetCancelRoutine(FcpIrp, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} sdv_411 != 0;
    call {:si_unique_call 1139} sdv_KeReleaseSpinLock(0, Irql_17);
    assume {:nonnull} FcpIrp != 0;
    assume FcpIrp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(FcpIrp))] := -1073741248;
    call {:si_unique_call 1140} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1141} Tmp_510 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    call {:si_unique_call 1142} sdv_KeAcquireSpinLock(0, Tmp_510);
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    havoc Irql_17;
    goto anon16_Else_dummy;

  anon16_Else_dummy:
    assume false;
    return;

  anon16_Then:
    assume {:partition} sdv_411 == 0;
    assume {:nonnull} FcpIrp != 0;
    assume FcpIrp > 0;
    call {:si_unique_call 1143} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(FcpIrp))));
    FcpIrp := 0;
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    assume false;
    return;

  anon13_Then:
    assume {:partition} BAND(Notify_1, 1) == 0;
    goto L4;
}



procedure {:origName "AvFcp_CreateResponseAddressRange"} AvFcp_CreateResponseAddressRange(actual_BusExtension_22: int, actual_FcpData_4: int) returns (Tmp_511: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_CreateResponseAddressRange"} AvFcp_CreateResponseAddressRange(actual_BusExtension_22: int, actual_FcpData_4: int) returns (Tmp_511: int)
{
  var {:pointer} Irp_32: int;
  var {:pointer} Irb_9: int;
  var {:scalar} StackSize_3: int;
  var {:pointer} sdv_414: int;
  var {:pointer} Tmp_513: int;
  var {:scalar} ntStatus_20: int;
  var {:pointer} BusExtension_22: int;
  var {:pointer} FcpData_4: int;
  var vslice_dummy_var_2075: int;

  anon0:
    BusExtension_22 := actual_BusExtension_22;
    FcpData_4 := actual_FcpData_4;
    ntStatus_20 := 0;
    Irp_32 := 0;
    Irb_9 := 0;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    havoc Tmp_513;
    assume {:nonnull} Tmp_513 != 0;
    assume Tmp_513 > 0;
    havoc StackSize_3;
    call {:si_unique_call 1146} Irp_32 := IoAllocateIrp(StackSize_3, 0);
    call {:si_unique_call 1147} sdv_414 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_9 := sdv_414;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irp_32 != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Irb_9 != 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} FcpData_4 != 0;
    assume FcpData_4 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} FcpData_4 != 0;
    assume FcpData_4 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    havoc vslice_dummy_var_2075;
    call {:si_unique_call 1148} ntStatus_20 := Av_SubmitIrpSynch(vslice_dummy_var_2075, Irp_32, Irb_9);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} ntStatus_20 >= 0;
    assume {:nonnull} FcpData_4 != 0;
    assume FcpData_4 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    goto L45;

  L45:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Irp_32 != 0;
    call {:si_unique_call 1149} IoFreeIrp(0);
    goto L47;

  L47:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Irb_9 != 0;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    call {:si_unique_call 1150} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_22), Irb_9);
    goto L51;

  L51:
    Tmp_511 := ntStatus_20;
    return;

  anon14_Then:
    assume {:partition} Irb_9 == 0;
    goto L51;

  anon13_Then:
    assume {:partition} Irp_32 == 0;
    goto L47;

  anon12_Then:
    assume {:partition} 0 > ntStatus_20;
    goto L45;

  anon11_Then:
    assume {:partition} Irb_9 == 0;
    goto L20;

  L20:
    ntStatus_20 := -1073741670;
    goto L45;

  anon15_Then:
    assume {:partition} Irp_32 == 0;
    goto L20;
}



procedure {:origName "AvFcp_SendFcpRequest"} AvFcp_SendFcpRequest(actual_BusExtension_23: int, actual_RequestIrp: int, actual_Request_8: int) returns (Tmp_514: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_514 == 259 || Tmp_514 == 0 || Tmp_514 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_SendFcpRequest"} AvFcp_SendFcpRequest(actual_BusExtension_23: int, actual_RequestIrp: int, actual_Request_8: int) returns (Tmp_514: int)
{
  var {:pointer} FcpRequest_1: int;
  var {:pointer} CRStruct: int;
  var {:pointer} Irp_33: int;
  var {:pointer} Irb_10: int;
  var {:pointer} Mdl_1: int;
  var {:pointer} sdv_416: int;
  var {:pointer} FcpRequest_2: int;
  var {:scalar} StackSize_4: int;
  var {:scalar} ntStatus_21: int;
  var {:pointer} NextIrpStack_2: int;
  var {:pointer} sdv_419: int;
  var {:scalar} Length_5: int;
  var {:scalar} NodeAddress_1: int;
  var {:pointer} Tmp_516: int;
  var {:pointer} BusExtension_23: int;
  var {:pointer} RequestIrp: int;
  var {:pointer} Request_8: int;
  var boogieTmp: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_2076: int;

  anon0:
    call {:si_unique_call 1151} NodeAddress_1 := __HAVOC_malloc(8);
    BusExtension_23 := actual_BusExtension_23;
    RequestIrp := actual_RequestIrp;
    Request_8 := actual_Request_8;
    ntStatus_21 := 0;
    CRStruct := 0;
    Mdl_1 := 0;
    Irp_33 := 0;
    Irb_10 := 0;
    assume {:nonnull} NodeAddress_1 != 0;
    assume NodeAddress_1 > 0;
    assume {:nonnull} NodeAddress_1 != 0;
    assume NodeAddress_1 > 0;
    assume {:nonnull} Request_8 != 0;
    assume Request_8 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Request_8 != 0;
    assume Request_8 > 0;
    FcpRequest_2 := Request__AV_61883_REQUEST(Request_8);
    assume {:nonnull} FcpRequest_2 != 0;
    assume FcpRequest_2 > 0;
    assume {:nonnull} NodeAddress_1 != 0;
    assume NodeAddress_1 > 0;
    assume {:nonnull} FcpRequest_2 != 0;
    assume FcpRequest_2 > 0;
    assume {:nonnull} NodeAddress_1 != 0;
    assume NodeAddress_1 > 0;
    assume {:nonnull} FcpRequest_2 != 0;
    assume FcpRequest_2 > 0;
    havoc Length_5;
    assume {:nonnull} FcpRequest_2 != 0;
    assume FcpRequest_2 > 0;
    goto L26;

  L26:
    call {:si_unique_call 1152} sdv_416 := ExAllocatePoolWithTag(512, 20, 943206710);
    CRStruct := sdv_416;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} CRStruct == 0;
    goto L89;

  L89:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Mdl_1 != 0;
    call {:si_unique_call 1153} IoFreeMdl(0);
    goto L90;

  L90:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Irp_33 != 0;
    call {:si_unique_call 1154} IoFreeIrp(0);
    goto L94;

  L94:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Irb_10 != 0;
    assume {:nonnull} BusExtension_23 != 0;
    assume BusExtension_23 > 0;
    call {:si_unique_call 1155} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_23), Irb_10);
    goto L98;

  L98:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} CRStruct != 0;
    call {:si_unique_call 1156} sdv_ExFreePool(0);
    goto L102;

  L102:
    Tmp_514 := ntStatus_21;
    goto L1;

  L1:
    return;

  anon35_Then:
    assume {:partition} CRStruct == 0;
    goto L102;

  anon34_Then:
    assume {:partition} Irb_10 == 0;
    goto L98;

  anon33_Then:
    assume {:partition} Irp_33 == 0;
    goto L94;

  anon32_Then:
    assume {:partition} Mdl_1 == 0;
    goto L90;

  anon38_Then:
    assume {:partition} CRStruct != 0;
    assume {:nonnull} BusExtension_23 != 0;
    assume BusExtension_23 > 0;
    havoc Tmp_516;
    assume {:nonnull} Tmp_516 != 0;
    assume Tmp_516 > 0;
    havoc StackSize_4;
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    call {:si_unique_call 1157} boogieTmp := IoAllocateIrp(StackSize_4, 0);
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    havoc Irp_33;
    call {:si_unique_call 1158} sdv_419 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    havoc Irb_10;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Irp_33 != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Irb_10 != 0;
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    call {:si_unique_call 1159} boogieTmp := IoAllocateMdl(0, Length_5, 0, 0, 0);
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    havoc Mdl_1;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Mdl_1 != 0;
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} NodeAddress_1 != 0;
    assume NodeAddress_1 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} NodeAddress_1 != 0;
    assume NodeAddress_1 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} BusExtension_23 != 0;
    assume BusExtension_23 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} BusExtension_23 != 0;
    assume BusExtension_23 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    goto L70;

  L70:
    call {:si_unique_call 1160} NextIrpStack_2 := sdv_IoGetNextIrpStackLocation(Irp_33);
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    ntStatus_21 := 259;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume RequestIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1161} SLIC_sdv_IoMarkIrpPending_entry(strConst__li2bpl1);
    goto L119;

  L119:
    call {:si_unique_call 1162} sdv_IoMarkIrpPending(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume Irp_33 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1163} SLIC_sdv_IoSetCompletionRoutine_entry(0);
    goto L122;

  L122:
    call {:si_unique_call 1164} sdv_IoSetCompletionRoutine(Irp_33, li2bplFunctionConstant500, CRStruct, 1, 1, 1);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume Irp_33 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1165} SLIC_sdv_IoCallDriver_entry(0);
    goto L125;

  L125:
    assume {:nonnull} BusExtension_23 != 0;
    assume BusExtension_23 > 0;
    havoc vslice_dummy_var_2076;
    call {:si_unique_call 1166} vslice_dummy_var_170 := sdv_IoCallDriver#1(vslice_dummy_var_2076, Irp_33);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume Irp_33 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1167} SLIC_sdv_IoCallDriver_exit(0, Irp_33);
    goto L87;

  L87:
    Tmp_514 := ntStatus_21;
    goto L1;

  anon36_Then:
    assume !(Irp_33 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L87;

  anon31_Then:
    assume !(Irp_33 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L125;

  anon30_Then:
    assume !(Irp_33 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L122;

  anon42_Then:
    assume !(RequestIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L119;

  anon41_Then:
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    goto L70;

  anon40_Then:
    assume {:partition} Mdl_1 == 0;
    ntStatus_21 := -1073741670;
    goto L89;

  anon29_Then:
    assume {:partition} Irb_10 == 0;
    goto L44;

  L44:
    ntStatus_21 := -1073741670;
    goto L89;

  anon39_Then:
    assume {:partition} Irp_33 == 0;
    goto L44;

  anon37_Then:
    assume {:nonnull} Request_8 != 0;
    assume Request_8 > 0;
    FcpRequest_1 := Request__AV_61883_REQUEST(Request_8);
    assume {:nonnull} FcpRequest_1 != 0;
    assume FcpRequest_1 > 0;
    havoc Length_5;
    assume {:nonnull} FcpRequest_1 != 0;
    assume FcpRequest_1 > 0;
    goto L26;
}



procedure {:origName "AvFcp_SendFcpResponse"} AvFcp_SendFcpResponse(actual_BusExtension_24: int, actual_RequestIrp_1: int, actual_Request_9: int) returns (Tmp_517: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} Tmp_517 == 259 || Tmp_517 == 0 || Tmp_517 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_SendFcpResponse"} AvFcp_SendFcpResponse(actual_BusExtension_24: int, actual_RequestIrp_1: int, actual_Request_9: int) returns (Tmp_517: int)
{
  var {:pointer} CRStruct_1: int;
  var {:pointer} Irp_34: int;
  var {:pointer} Mdl_2: int;
  var {:pointer} Irb_11: int;
  var {:pointer} sdv_422: int;
  var {:scalar} StackSize_5: int;
  var {:pointer} Tmp_519: int;
  var {:scalar} ntStatus_22: int;
  var {:pointer} NextIrpStack_3: int;
  var {:pointer} sdv_425: int;
  var {:pointer} FcpResponse_2: int;
  var {:pointer} BusExtension_24: int;
  var {:pointer} RequestIrp_1: int;
  var {:pointer} Request_9: int;
  var boogieTmp: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_2077: int;
  var vslice_dummy_var_2078: int;

  anon0:
    BusExtension_24 := actual_BusExtension_24;
    RequestIrp_1 := actual_RequestIrp_1;
    Request_9 := actual_Request_9;
    ntStatus_22 := 0;
    assume {:nonnull} Request_9 != 0;
    assume Request_9 > 0;
    FcpResponse_2 := Response__AV_61883_REQUEST(Request_9);
    CRStruct_1 := 0;
    Mdl_2 := 0;
    Irp_34 := 0;
    Irb_11 := 0;
    call {:si_unique_call 1168} sdv_422 := ExAllocatePoolWithTag(512, 20, 943206710);
    CRStruct_1 := sdv_422;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} CRStruct_1 == 0;
    goto L80;

  L80:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Mdl_2 != 0;
    call {:si_unique_call 1169} IoFreeMdl(0);
    goto L81;

  L81:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irp_34 != 0;
    call {:si_unique_call 1170} IoFreeIrp(0);
    goto L85;

  L85:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Irb_11 != 0;
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    call {:si_unique_call 1171} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_24), Irb_11);
    goto L89;

  L89:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} CRStruct_1 != 0;
    call {:si_unique_call 1172} sdv_ExFreePool(0);
    goto L93;

  L93:
    Tmp_517 := ntStatus_22;
    goto L1;

  L1:
    return;

  anon25_Then:
    assume {:partition} CRStruct_1 == 0;
    goto L93;

  anon24_Then:
    assume {:partition} Irb_11 == 0;
    goto L89;

  anon23_Then:
    assume {:partition} Irp_34 == 0;
    goto L85;

  anon22_Then:
    assume {:partition} Mdl_2 == 0;
    goto L81;

  anon26_Then:
    assume {:partition} CRStruct_1 != 0;
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    havoc Tmp_519;
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    havoc StackSize_5;
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    call {:si_unique_call 1173} boogieTmp := IoAllocateIrp(StackSize_5, 0);
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    havoc Irp_34;
    call {:si_unique_call 1174} sdv_425 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    havoc Irb_11;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Irp_34 != 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_11 != 0;
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    assume {:nonnull} FcpResponse_2 != 0;
    assume FcpResponse_2 > 0;
    havoc vslice_dummy_var_2077;
    call {:si_unique_call 1175} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_2077, 0, 0, 0);
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    havoc Mdl_2;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mdl_2 != 0;
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} FcpResponse_2 != 0;
    assume FcpResponse_2 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} FcpResponse_2 != 0;
    assume FcpResponse_2 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} FcpResponse_2 != 0;
    assume FcpResponse_2 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    goto L61;

  L61:
    call {:si_unique_call 1176} NextIrpStack_3 := sdv_IoGetNextIrpStackLocation(Irp_34);
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    ntStatus_22 := 259;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume RequestIrp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1177} SLIC_sdv_IoMarkIrpPending_entry(strConst__li2bpl1);
    goto L106;

  L106:
    call {:si_unique_call 1178} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 1179} sdv_IoSetCompletionRoutine(Irp_34, li2bplFunctionConstant500, CRStruct_1, 1, 1, 1);
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    havoc vslice_dummy_var_2078;
    call {:si_unique_call 1180} vslice_dummy_var_171 := sdv_IoCallDriver#1(vslice_dummy_var_2078, Irp_34);
    Tmp_517 := ntStatus_22;
    goto L1;

  anon30_Then:
    assume !(RequestIrp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L106;

  anon29_Then:
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    goto L61;

  anon28_Then:
    assume {:partition} Mdl_2 == 0;
    ntStatus_22 := -1073741670;
    goto L80;

  anon21_Then:
    assume {:partition} Irb_11 == 0;
    goto L35;

  L35:
    ntStatus_22 := -1073741670;
    goto L80;

  anon27_Then:
    assume {:partition} Irp_34 == 0;
    goto L35;
}



procedure {:origName "AvFcp_FreeRequestAddressRange"} AvFcp_FreeRequestAddressRange(actual_BusExtension_25: int, actual_FcpData_5: int) returns (Tmp_520: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_FreeRequestAddressRange"} AvFcp_FreeRequestAddressRange(actual_BusExtension_25: int, actual_FcpData_5: int) returns (Tmp_520: int)
{
  var {:pointer} Irp_35: int;
  var {:pointer} Irb_12: int;
  var {:pointer} Tmp_521: int;
  var {:scalar} StackSize_6: int;
  var {:pointer} sdv_429: int;
  var {:scalar} ntStatus_23: int;
  var {:pointer} BusExtension_25: int;
  var {:pointer} FcpData_5: int;
  var vslice_dummy_var_2079: int;

  anon0:
    BusExtension_25 := actual_BusExtension_25;
    FcpData_5 := actual_FcpData_5;
    ntStatus_23 := 0;
    Irp_35 := 0;
    Irb_12 := 0;
    assume {:nonnull} BusExtension_25 != 0;
    assume BusExtension_25 > 0;
    havoc Tmp_521;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    havoc StackSize_6;
    call {:si_unique_call 1181} Irp_35 := IoAllocateIrp(StackSize_6, 0);
    call {:si_unique_call 1182} sdv_429 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_12 := sdv_429;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Irp_35 != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Irb_12 != 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} FcpData_5 != 0;
    assume FcpData_5 > 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} FcpData_5 != 0;
    assume FcpData_5 > 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} BusExtension_25 != 0;
    assume BusExtension_25 > 0;
    havoc vslice_dummy_var_2079;
    call {:si_unique_call 1183} ntStatus_23 := Av_SubmitIrpSynch(vslice_dummy_var_2079, Irp_35, Irb_12);
    goto L33;

  L33:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Irp_35 != 0;
    call {:si_unique_call 1184} IoFreeIrp(0);
    goto L34;

  L34:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Irb_12 != 0;
    assume {:nonnull} BusExtension_25 != 0;
    assume BusExtension_25 > 0;
    call {:si_unique_call 1185} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_25), Irb_12);
    goto L38;

  L38:
    Tmp_520 := ntStatus_23;
    return;

  anon11_Then:
    assume {:partition} Irb_12 == 0;
    goto L38;

  anon10_Then:
    assume {:partition} Irp_35 == 0;
    goto L34;

  anon9_Then:
    assume {:partition} Irb_12 == 0;
    goto L20;

  L20:
    ntStatus_23 := -1073741670;
    goto L33;

  anon12_Then:
    assume {:partition} Irp_35 == 0;
    goto L20;
}



procedure {:origName "AvFcp_SetFcpNotify"} AvFcp_SetFcpNotify(actual_PdoExtension_10: int, actual_Irp_36: int, actual_Request_10: int) returns (Tmp_523: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_523 == 0 || Tmp_523 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_SetFcpNotify"} AvFcp_SetFcpNotify(actual_PdoExtension_10: int, actual_Irp_36: int, actual_Request_10: int) returns (Tmp_523: int)
{
  var {:scalar} Notify_2: int;
  var {:pointer} NotifyData_2: int;
  var {:scalar} Status_33: int;
  var {:pointer} Tmp_524: int;
  var {:scalar} Irql_18: int;
  var {:pointer} BusExtension_26: int;
  var {:pointer} AvAdapterData_7: int;
  var {:pointer} Tmp_525: int;
  var {:pointer} SetFcpNotify: int;
  var {:pointer} PdoExtension_10: int;
  var {:pointer} Request_10: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;

  anon0:
    PdoExtension_10 := actual_PdoExtension_10;
    Request_10 := actual_Request_10;
    Status_33 := 0;
    assume {:nonnull} Request_10 != 0;
    assume Request_10 > 0;
    SetFcpNotify := SetFcpNotify__AV_61883_REQUEST(Request_10);
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    NotifyData_2 := FcpNotifyData__PDO_DEVICE_EXTENSION(PdoExtension_10);
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    havoc Tmp_524;
    assume {:nonnull} Tmp_524 != 0;
    assume Tmp_524 > 0;
    havoc BusExtension_26;
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    havoc AvAdapterData_7;
    call {:si_unique_call 1186} Tmp_525 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    call {:si_unique_call 1187} sdv_KeAcquireSpinLock(0, Tmp_525);
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    havoc Irql_18;
    assume {:nonnull} SetFcpNotify != 0;
    assume SetFcpNotify > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    havoc Notify_2;
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    call {:si_unique_call 1188} vslice_dummy_var_174 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1189} sdv_KeReleaseSpinLock(0, Irql_18);
    call {:si_unique_call 1190} vslice_dummy_var_172 := AvFcp_CompleteQueuedFcp(PdoExtension_10, Notify_2);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} BAND(Notify_2, 2) != 0;
    call {:si_unique_call 1191} ExDeleteNPagedLookasideList(0);
    goto L54;

  L54:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(Notify_2, 1) != 0;
    call {:si_unique_call 1192} ExDeleteNPagedLookasideList(0);
    goto L37;

  L37:
    Tmp_523 := Status_33;
    return;

  anon18_Then:
    assume {:partition} BAND(Notify_2, 1) == 0;
    goto L37;

  anon17_Then:
    assume {:partition} BAND(Notify_2, 2) == 0;
    goto L54;

  anon16_Then:
    call {:si_unique_call 1193} sdv_KeReleaseSpinLock(0, Irql_18);
    Status_33 := -1073741811;
    goto L37;

  anon13_Then:
    assume {:nonnull} SetFcpNotify != 0;
    assume SetFcpNotify > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 1194} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 528, -260872878, 0);
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    goto L20;

  L20:
    assume {:nonnull} SetFcpNotify != 0;
    assume SetFcpNotify > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1195} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 528, -210672302, 0);
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    goto L25;

  L25:
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    assume {:nonnull} SetFcpNotify != 0;
    assume SetFcpNotify > 0;
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    assume {:nonnull} AvAdapterData_7 != 0;
    assume AvAdapterData_7 > 0;
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    call {:si_unique_call 1196} vslice_dummy_var_173 := sdv_InsertTailList(FcpList__AV_ADAPTER_DATA(AvAdapterData_7), Entry__FCP_NOTIFY_DATA(NotifyData_2));
    call {:si_unique_call 1197} sdv_KeReleaseSpinLock(0, Irql_18);
    goto L37;

  anon15_Then:
    goto L25;

  anon14_Then:
    goto L20;
}



procedure {:origName "AvFcp_FreeResponseAddressRange"} AvFcp_FreeResponseAddressRange(actual_BusExtension_27: int, actual_FcpData_6: int) returns (Tmp_526: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_FreeResponseAddressRange"} AvFcp_FreeResponseAddressRange(actual_BusExtension_27: int, actual_FcpData_6: int) returns (Tmp_526: int)
{
  var {:pointer} Irp_37: int;
  var {:pointer} Irb_13: int;
  var {:scalar} StackSize_7: int;
  var {:pointer} sdv_434: int;
  var {:scalar} ntStatus_24: int;
  var {:pointer} Tmp_528: int;
  var {:pointer} BusExtension_27: int;
  var {:pointer} FcpData_6: int;
  var vslice_dummy_var_2080: int;

  anon0:
    BusExtension_27 := actual_BusExtension_27;
    FcpData_6 := actual_FcpData_6;
    ntStatus_24 := 0;
    Irp_37 := 0;
    Irb_13 := 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    havoc Tmp_528;
    assume {:nonnull} Tmp_528 != 0;
    assume Tmp_528 > 0;
    havoc StackSize_7;
    call {:si_unique_call 1198} Irp_37 := IoAllocateIrp(StackSize_7, 0);
    call {:si_unique_call 1199} sdv_434 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_13 := sdv_434;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Irp_37 != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Irb_13 != 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} FcpData_6 != 0;
    assume FcpData_6 > 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} FcpData_6 != 0;
    assume FcpData_6 > 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    havoc vslice_dummy_var_2080;
    call {:si_unique_call 1200} ntStatus_24 := Av_SubmitIrpSynch(vslice_dummy_var_2080, Irp_37, Irb_13);
    goto L33;

  L33:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Irp_37 != 0;
    call {:si_unique_call 1201} IoFreeIrp(0);
    goto L34;

  L34:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Irb_13 != 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    call {:si_unique_call 1202} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_27), Irb_13);
    goto L38;

  L38:
    Tmp_526 := ntStatus_24;
    return;

  anon11_Then:
    assume {:partition} Irb_13 == 0;
    goto L38;

  anon10_Then:
    assume {:partition} Irp_37 == 0;
    goto L34;

  anon9_Then:
    assume {:partition} Irb_13 == 0;
    goto L20;

  L20:
    ntStatus_24 := -1073741670;
    goto L33;

  anon12_Then:
    assume {:partition} Irp_37 == 0;
    goto L20;
}



procedure {:origName "AvFcp_SendFcpCR"} AvFcp_SendFcpCR(actual_DeviceObject_26: int, actual_Irp_38: int, actual_Context_4: int) returns (Tmp_529: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_529 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvFcp_SendFcpCR"} AvFcp_SendFcpCR(actual_DeviceObject_26: int, actual_Irp_38: int, actual_Context_4: int) returns (Tmp_529: int)
{
  var {:pointer} CRStruct_2: int;
  var {:pointer} RequestIrp_2: int;
  var {:scalar} ntStatus_25: int;
  var {:pointer} BusExtension_28: int;
  var {:pointer} Irp_38: int;
  var {:pointer} Context_4: int;
  var vslice_dummy_var_2081: int;

  anon0:
    Irp_38 := actual_Irp_38;
    Context_4 := actual_Context_4;
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    ntStatus_25 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_38))];
    CRStruct_2 := Context_4;
    assume {:nonnull} CRStruct_2 != 0;
    assume CRStruct_2 > 0;
    havoc BusExtension_28;
    assume {:nonnull} CRStruct_2 != 0;
    assume CRStruct_2 > 0;
    havoc RequestIrp_2;
    call {:si_unique_call 1203} IoFreeMdl(0);
    call {:si_unique_call 1204} IoFreeIrp(0);
    assume {:nonnull} BusExtension_28 != 0;
    assume BusExtension_28 > 0;
    assume {:nonnull} CRStruct_2 != 0;
    assume CRStruct_2 > 0;
    havoc vslice_dummy_var_2081;
    call {:si_unique_call 1205} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_28), vslice_dummy_var_2081);
    call {:si_unique_call 1206} sdv_ExFreePool(0);
    assume {:nonnull} RequestIrp_2 != 0;
    assume RequestIrp_2 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(RequestIrp_2))] := ntStatus_25;
    call {:si_unique_call 1207} sdv_IoCompleteRequest(0, 0);
    Tmp_529 := -1073741802;
    return;
}



procedure {:origName "AvCmp_MonitorPlugs"} AvCmp_MonitorPlugs(actual_PdoExtension_11: int, actual_Irp_39: int, actual_Request_11: int) returns (Tmp_531: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_531 == 0 || Tmp_531 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_MonitorPlugs"} AvCmp_MonitorPlugs(actual_PdoExtension_11: int, actual_Irp_39: int, actual_Request_11: int) returns (Tmp_531: int)
{
  var {:pointer} Tmp_532: int;
  var {:pointer} MonitorPlugs: int;
  var {:pointer} Tmp_533: int;
  var {:scalar} ntStatus_26: int;
  var {:scalar} Irql_19: int;
  var {:pointer} BusExtension_29: int;
  var {:pointer} AvAdapterData_8: int;
  var {:pointer} MonitorData_1: int;
  var {:pointer} PdoExtension_11: int;
  var {:pointer} Request_11: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;

  anon0:
    PdoExtension_11 := actual_PdoExtension_11;
    Request_11 := actual_Request_11;
    ntStatus_26 := 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    havoc Tmp_532;
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    havoc BusExtension_29;
    assume {:nonnull} BusExtension_29 != 0;
    assume BusExtension_29 > 0;
    havoc AvAdapterData_8;
    assume {:nonnull} Request_11 != 0;
    assume Request_11 > 0;
    MonitorPlugs := MonitorPlugs__AV_61883_REQUEST(Request_11);
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    MonitorData_1 := MonitorData__PDO_DEVICE_EXTENSION(PdoExtension_11);
    call {:si_unique_call 1208} Tmp_533 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_533 != 0;
    assume Tmp_533 > 0;
    call {:si_unique_call 1209} sdv_KeAcquireSpinLock(0, Tmp_533);
    assume {:nonnull} Tmp_533 != 0;
    assume Tmp_533 > 0;
    havoc Irql_19;
    assume {:nonnull} MonitorPlugs != 0;
    assume MonitorPlugs > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 1210} vslice_dummy_var_175 := sdv_RemoveEntryList(0);
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    goto L25;

  L25:
    call {:si_unique_call 1211} sdv_KeReleaseSpinLock(0, Irql_19);
    Tmp_531 := ntStatus_26;
    return;

  anon5_Then:
    assume {:nonnull} MonitorPlugs != 0;
    assume MonitorPlugs > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    assume {:nonnull} MonitorPlugs != 0;
    assume MonitorPlugs > 0;
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    assume {:nonnull} MonitorPlugs != 0;
    assume MonitorPlugs > 0;
    assume {:nonnull} AvAdapterData_8 != 0;
    assume AvAdapterData_8 > 0;
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    call {:si_unique_call 1212} vslice_dummy_var_176 := sdv_InsertTailList(MonitorList__AV_ADAPTER_DATA(AvAdapterData_8), Entry__CMP_MONITOR_DATA(MonitorData_1));
    goto L25;

  anon6_Then:
    ntStatus_26 := -1073741811;
    goto L25;
}



procedure {:origName "AvCmp_DeletePlug"} AvCmp_DeletePlug(actual_BusExtension_30: int, actual_Irp_40: int, actual_Request_12: int) returns (Tmp_534: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_534 == 0 || Tmp_534 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_DeletePlug"} AvCmp_DeletePlug(actual_BusExtension_30: int, actual_Irp_40: int, actual_Request_12: int) returns (Tmp_534: int)
{
  var {:scalar} MonitorInfo: int;
  var {:pointer} DeletePlug: int;
  var {:scalar} u_1: int;
  var {:scalar} PlugNum: int;
  var {:scalar} Tmp_535: int;
  var {:pointer} Tmp_536: int;
  var {:scalar} sdv_437: int;
  var {:pointer} CmpData_1: int;
  var {:scalar} Tmp_537: int;
  var {:scalar} Tmp_538: int;
  var {:scalar} Tmp_539: int;
  var {:pointer} Tmp_540: int;
  var {:scalar} sdv_438: int;
  var {:pointer} Tmp_541: int;
  var {:scalar} ntStatus_27: int;
  var {:scalar} sdv_439: int;
  var {:pointer} CurrMonitor: int;
  var {:pointer} Plug: int;
  var {:pointer} Tmp_542: int;
  var {:scalar} Irql_20: int;
  var {:pointer} AvAdapterData_9: int;
  var {:pointer} Tmp_543: int;
  var {:pointer} Tmp_544: int;
  var {:pointer} BusExtension_30: int;
  var {:pointer} Request_12: int;

  anon0:
    call {:si_unique_call 1213} MonitorInfo := __HAVOC_malloc(76);
    call {:si_unique_call 1214} u_1 := __HAVOC_malloc(28);
    BusExtension_30 := actual_BusExtension_30;
    Request_12 := actual_Request_12;
    call {:si_unique_call 1215} Tmp_540 := __HAVOC_malloc(3720);
    call {:si_unique_call 1216} Tmp_541 := __HAVOC_malloc(3720);
    call {:si_unique_call 1217} Tmp_542 := __HAVOC_malloc(3720);
    call {:si_unique_call 1218} Tmp_544 := __HAVOC_malloc(3720);
    ntStatus_27 := 0;
    assume {:nonnull} Request_12 != 0;
    assume Request_12 > 0;
    DeletePlug := DeletePlug__AV_61883_REQUEST(Request_12);
    assume {:nonnull} DeletePlug != 0;
    assume DeletePlug > 0;
    havoc Plug;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Plug != 0;
    assume {:nonnull} BusExtension_30 != 0;
    assume BusExtension_30 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} BusExtension_30 != 0;
    assume BusExtension_30 > 0;
    havoc CmpData_1;
    goto L19;

  L19:
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_30 != 0;
    assume BusExtension_30 > 0;
    havoc AvAdapterData_9;
    CurrMonitor := 0;
    call {:si_unique_call 1219} Tmp_536 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    call {:si_unique_call 1220} sdv_KeAcquireSpinLock(0, Tmp_536);
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    havoc Irql_20;
    call {:si_unique_call 1221} sdv_437 := sdv_IsListEmpty(0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} sdv_437 != 0;
    goto L36;

  L36:
    call {:si_unique_call 1222} sdv_KeReleaseSpinLock(0, Irql_20);
    goto L20;

  L20:
    call {:si_unique_call 1223} Tmp_536 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    call {:si_unique_call 1224} sdv_KeAcquireSpinLock(0, Tmp_536);
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    havoc Irql_20;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    havoc PlugNum;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    goto L61;

  L61:
    Tmp_535 := PlugNum;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    havoc Tmp_544;
    assume {:nonnull} Tmp_544 != 0;
    assume Tmp_544 > 0;
    Tmp_537 := PlugNum;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    havoc Tmp_540;
    assume {:nonnull} Tmp_540 != 0;
    assume Tmp_540 > 0;
    goto L53;

  L53:
    call {:si_unique_call 1225} sdv_KeReleaseSpinLock(0, Irql_20);
    goto L70;

  L70:
    Tmp_534 := ntStatus_27;
    return;

  anon31_Then:
    goto L61;

  anon29_Then:
    goto L53;

  anon28_Then:
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    havoc PlugNum;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    goto L75;

  L75:
    Tmp_539 := PlugNum;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    havoc Tmp_541;
    assume {:nonnull} Tmp_541 != 0;
    assume Tmp_541 > 0;
    Tmp_538 := PlugNum;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    havoc Tmp_542;
    assume {:nonnull} Tmp_542 != 0;
    assume Tmp_542 > 0;
    goto L53;

  anon32_Then:
    goto L75;

  anon25_Then:
    assume {:partition} sdv_437 == 0;
    goto L35;

  L35:
    call {:si_unique_call 1226} CurrMonitor := AvCmp_DeletePlug_loop_L35(MonitorInfo, CurrMonitor, Plug, AvAdapterData_9);
    goto L35_last;

  L35_last:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} CurrMonitor != 0;
    assume {:nonnull} CurrMonitor != 0;
    assume CurrMonitor > 0;
    havoc CurrMonitor;
    goto L41;

  L41:
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    assume {:nonnull} CurrMonitor != 0;
    assume CurrMonitor > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} CurrMonitor != 0;
    assume CurrMonitor > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} CurrMonitor != 0;
    assume CurrMonitor > 0;
    goto L46;

  L46:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L36;

  anon27_Then:
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    assume false;
    return;

  anon33_Then:
    goto L46;

  anon26_Then:
    assume {:partition} CurrMonitor == 0;
    assume {:nonnull} AvAdapterData_9 != 0;
    assume AvAdapterData_9 > 0;
    havoc CurrMonitor;
    goto L41;

  anon24_Then:
    goto L20;

  anon23_Then:
    assume {:nonnull} BusExtension_30 != 0;
    assume BusExtension_30 > 0;
    havoc Tmp_543;
    assume {:nonnull} Tmp_543 != 0;
    assume Tmp_543 > 0;
    havoc CmpData_1;
    goto L19;

  anon30_Then:
    assume {:partition} Plug == 0;
    ntStatus_27 := -1073741811;
    goto L70;
}



procedure {:origName "AvCmp_P2PCR_oPlug"} AvCmp_P2PCR_oPlug(actual_BusExtension_31: int, actual_CmpData_2: int, actual_Connect_6: int, actual_bReconnect: int, actual_Generation: int) returns (Tmp_545: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_P2PCR_oPlug"} AvCmp_P2PCR_oPlug(actual_BusExtension_31: int, actual_CmpData_2: int, actual_Connect_6: int, actual_bReconnect: int, actual_Generation: int) returns (Tmp_545: int)
{
  var {:scalar} Pcr1: int;
  var {:scalar} Tmp_546: int;
  var {:pointer} Tmp_547: int;
  var {:pointer} Tmp_548: int;
  var {:pointer} Tmp_549: int;
  var {:scalar} MonitorInfo_1: int;
  var {:scalar} Tmp_550: int;
  var {:pointer} Tmp_551: int;
  var {:scalar} bBandwidth: int;
  var {:pointer} iPlug: int;
  var {:pointer} Tmp_552: int;
  var {:pointer} Tmp_553: int;
  var {:pointer} oPlug: int;
  var {:pointer} Tmp_554: int;
  var {:scalar} Tmp_555: int;
  var {:scalar} Pcr2: int;
  var {:scalar} Tmp_556: int;
  var {:scalar} Tmp_557: int;
  var {:scalar} sdv_444: int;
  var {:pointer} Tmp_558: int;
  var {:pointer} iPCR: int;
  var {:scalar} Tmp_559: int;
  var {:scalar} ntStatus_28: int;
  var {:scalar} PcrOrg: int;
  var {:scalar} Tmp_560: int;
  var {:scalar} Tmp_561: int;
  var {:scalar} BandwidthUnits: int;
  var {:pointer} CurrMonitor_1: int;
  var {:pointer} Tmp_562: int;
  var {:scalar} Pcr: int;
  var {:scalar} bChannel: int;
  var {:scalar} Tmp_563: int;
  var {:scalar} Irql_21: int;
  var {:scalar} sdv_450: int;
  var {:pointer} AvAdapterData_10: int;
  var {:scalar} newSpeed: int;
  var {:pointer} BusExtension_31: int;
  var {:pointer} CmpData_2: int;
  var {:pointer} Connect_6: int;
  var {:scalar} bReconnect: int;
  var {:scalar} Generation: int;
  var boogieTmp: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_2082: int;
  var vslice_dummy_var_2083: int;
  var vslice_dummy_var_2084: int;
  var vslice_dummy_var_2085: int;
  var vslice_dummy_var_2086: int;
  var vslice_dummy_var_2087: int;
  var vslice_dummy_var_2088: int;
  var vslice_dummy_var_2089: int;
  var vslice_dummy_var_2090: int;
  var vslice_dummy_var_2091: int;
  var vslice_dummy_var_2092: int;
  var vslice_dummy_var_2093: int;

  anon0:
    call {:si_unique_call 1227} Pcr1 := __HAVOC_malloc(60);
    call {:si_unique_call 1228} MonitorInfo_1 := __HAVOC_malloc(76);
    call {:si_unique_call 1229} Pcr2 := __HAVOC_malloc(60);
    call {:si_unique_call 1230} PcrOrg := __HAVOC_malloc(60);
    call {:si_unique_call 1231} Pcr := __HAVOC_malloc(60);
    BusExtension_31 := actual_BusExtension_31;
    CmpData_2 := actual_CmpData_2;
    Connect_6 := actual_Connect_6;
    bReconnect := actual_bReconnect;
    Generation := actual_Generation;
    call {:si_unique_call 1232} Tmp_548 := __HAVOC_malloc(3720);
    call {:si_unique_call 1233} Tmp_549 := __HAVOC_malloc(3720);
    call {:si_unique_call 1234} Tmp_551 := __HAVOC_malloc(3720);
    call {:si_unique_call 1235} Tmp_552 := __HAVOC_malloc(3720);
    call {:si_unique_call 1236} Tmp_553 := __HAVOC_malloc(3720);
    call {:si_unique_call 1237} Tmp_554 := __HAVOC_malloc(3720);
    call {:si_unique_call 1238} Tmp_558 := __HAVOC_malloc(3720);
    call {:si_unique_call 1239} Tmp_562 := __HAVOC_malloc(3720);
    ntStatus_28 := 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    havoc oPlug;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    havoc iPlug;
    BandwidthUnits := 0;
    bChannel := 0;
    bBandwidth := 0;
    assume {:nonnull} BusExtension_31 != 0;
    assume BusExtension_31 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} oPlug != 0;
    assume oPlug > 0;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    goto L24;

  L24:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} ntStatus_28 >= 0;
    goto L26;

  L26:
    Tmp_545 := ntStatus_28;
    return;

  anon72_Then:
    assume {:partition} 0 > ntStatus_28;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} bChannel == 1;
    call {:si_unique_call 1240} vslice_dummy_var_177 := Av1394_FreeChannel(BusExtension_31, Connect_6);
    goto L27;

  L27:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} bBandwidth == 1;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    havoc vslice_dummy_var_2082;
    call {:si_unique_call 1241} vslice_dummy_var_178 := Av1394_FreeBandwidth(BusExtension_31, Connect_6, vslice_dummy_var_2082, BandwidthUnits);
    goto L26;

  anon74_Then:
    assume {:partition} bBandwidth != 1;
    goto L26;

  anon73_Then:
    assume {:partition} bChannel != 1;
    goto L27;

  anon95_Then:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} bReconnect == 1;
    assume {:nonnull} oPlug != 0;
    assume oPlug > 0;
    havoc vslice_dummy_var_2083;
    havoc vslice_dummy_var_2084;
    call {:si_unique_call 1242} ntStatus_28 := Av1394_ReadPCR(BusExtension_31, Generation, vslice_dummy_var_2083, vslice_dummy_var_2084, Pcr1);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} ntStatus_28 >= 0;
    goto L43;

  L43:
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    goto L46;

  L46:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} iPlug != 0;
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_546;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_558;
    assume {:nonnull} Tmp_558 != 0;
    assume Tmp_558 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L51;

  L51:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_556;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_548;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    assume {:nonnull} Tmp_548 != 0;
    assume Tmp_548 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    ntStatus_28 := -1073741790;
    goto L24;

  anon101_Then:
    goto L47;

  L47:
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    call {:si_unique_call 1243} boogieTmp := corral_nondet();
    goto L55;

  L55:
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} bReconnect == 1;
    assume {:nonnull} oPlug != 0;
    assume oPlug > 0;
    havoc vslice_dummy_var_2085;
    havoc vslice_dummy_var_2086;
    call {:si_unique_call 1244} ntStatus_28 := AvCmp_SetPlugPCR(BusExtension_31, vslice_dummy_var_2085, vslice_dummy_var_2086, Pcr1, Pcr2, PcrOrg, 1, Generation);
    goto L64;

  L64:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} ntStatus_28 >= 0;
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    assume {:nonnull} PcrOrg != 0;
    assume PcrOrg > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    ntStatus_28 := -1073741823;
    goto L24;

  anon80_Then:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} iPlug != 0;
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_561;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_554;
    assume {:nonnull} Tmp_554 != 0;
    assume Tmp_554 > 0;
    iPCR := iPCR__AV_PCR(Tmp_554 + Tmp_561 * 120);
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_563;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_553;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} BusExtension_31 != 0;
    assume BusExtension_31 > 0;
    havoc AvAdapterData_10;
    CurrMonitor_1 := 0;
    call {:si_unique_call 1245} Tmp_547 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    call {:si_unique_call 1246} sdv_KeAcquireSpinLock(0, Tmp_547);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    havoc Irql_21;
    call {:si_unique_call 1247} sdv_444 := sdv_IsListEmpty(0);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} sdv_444 != 0;
    goto L97;

  L97:
    call {:si_unique_call 1248} sdv_KeReleaseSpinLock(0, Irql_21);
    goto L24;

  anon83_Then:
    assume {:partition} sdv_444 == 0;
    goto L96;

  L96:
    call {:si_unique_call 1249} CurrMonitor_1 := AvCmp_P2PCR_oPlug_loop_L96(MonitorInfo_1, iPlug, iPCR, CurrMonitor_1, AvAdapterData_10);
    goto L96_last;

  L96_last:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} CurrMonitor_1 != 0;
    assume {:nonnull} CurrMonitor_1 != 0;
    assume CurrMonitor_1 > 0;
    havoc CurrMonitor_1;
    goto L102;

  L102:
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} CurrMonitor_1 != 0;
    assume CurrMonitor_1 > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} CurrMonitor_1 != 0;
    assume CurrMonitor_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} CurrMonitor_1 != 0;
    assume CurrMonitor_1 > 0;
    goto L108;

  L108:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto L97;

  anon85_Then:
    goto anon85_Then_dummy;

  anon85_Then_dummy:
    assume false;
    return;

  anon99_Then:
    goto L108;

  anon84_Then:
    assume {:partition} CurrMonitor_1 == 0;
    assume {:nonnull} AvAdapterData_10 != 0;
    assume AvAdapterData_10 > 0;
    havoc CurrMonitor_1;
    goto L102;

  anon98_Then:
    goto L24;

  anon82_Then:
    goto L24;

  anon81_Then:
    assume {:partition} iPlug == 0;
    goto L24;

  anon79_Then:
    assume {:partition} 0 > ntStatus_28;
    goto L24;

  anon97_Then:
    assume {:partition} bReconnect != 1;
    assume {:nonnull} oPlug != 0;
    assume oPlug > 0;
    havoc vslice_dummy_var_2087;
    havoc vslice_dummy_var_2088;
    call {:si_unique_call 1250} ntStatus_28 := AvCmp_SetPlugPCR(BusExtension_31, vslice_dummy_var_2087, vslice_dummy_var_2088, Pcr1, Pcr2, PcrOrg, 0, 0);
    goto L64;

  anon100_Then:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_559;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_562;
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto L51;

  anon102_Then:
    goto L47;

  anon78_Then:
    goto L47;

  anon77_Then:
    assume {:partition} iPlug == 0;
    goto L47;

  anon96_Then:
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} iPlug != 0;
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_555;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_551;
    assume {:nonnull} Tmp_551 != 0;
    assume Tmp_551 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    goto L118;

  L118:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_557;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_552;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    assume {:nonnull} Tmp_552 != 0;
    assume Tmp_552 > 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    goto L120;

  L120:
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    call {:si_unique_call 1251} boogieTmp := corral_nondet();
    goto L55;

  anon103_Then:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_550;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_549;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    goto L118;

  anon104_Then:
    goto L114;

  L114:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} bReconnect != 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    havoc Tmp_560;
    goto L123;

  L123:
    call {:si_unique_call 1252} ntStatus_28 := Av1394_AllocateChannel(BusExtension_31, Connect_6, Tmp_560);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} bReconnect != 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} ntStatus_28 == -1073741791;
    call {:si_unique_call 1253} ntStatus_28 := Av1394_AllocateChannel(BusExtension_31, Connect_6, -1);
    goto L128;

  L128:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} ntStatus_28 >= 0;
    bChannel := 1;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    havoc vslice_dummy_var_2089;
    havoc vslice_dummy_var_2090;
    call {:si_unique_call 1254} BandwidthUnits := AvCmp_CalculateBWUnits(Connect_6, vslice_dummy_var_2089, vslice_dummy_var_2090);
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    havoc vslice_dummy_var_2091;
    call {:si_unique_call 1255} ntStatus_28 := Av1394_AllocateBandwidth(BusExtension_31, Connect_6, vslice_dummy_var_2091, BandwidthUnits);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} ntStatus_28 >= 0;
    bBandwidth := 1;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    goto L120;

  anon92_Then:
    assume {:partition} 0 > ntStatus_28;
    goto L24;

  anon90_Then:
    assume {:partition} 0 > ntStatus_28;
    goto L24;

  anon91_Then:
    assume {:partition} ntStatus_28 != -1073741791;
    goto L128;

  anon89_Then:
    assume {:partition} bReconnect == 0;
    goto L128;

  anon87_Then:
    assume {:partition} bReconnect == 0;
    Tmp_560 := -1;
    goto L123;

  anon88_Then:
    goto L114;

  anon86_Then:
    assume {:partition} iPlug == 0;
    goto L114;

  anon76_Then:
    goto L46;

  anon75_Then:
    assume {:partition} 0 > ntStatus_28;
    goto L24;

  anon71_Then:
    assume {:partition} bReconnect != 1;
    assume {:nonnull} oPlug != 0;
    assume oPlug > 0;
    havoc vslice_dummy_var_2092;
    havoc vslice_dummy_var_2093;
    call {:si_unique_call 1256} ntStatus_28 := AvCmp_GetPlugPCR(BusExtension_31, vslice_dummy_var_2092, vslice_dummy_var_2093, Pcr1);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} ntStatus_28 >= 0;
    call {:si_unique_call 1257} newSpeed := corral_nondet();
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    goto L154;

  L154:
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    goto L43;

  anon94_Then:
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    goto L43;

  anon105_Then:
    goto L154;

  anon93_Then:
    assume {:partition} 0 > ntStatus_28;
    goto L24;
}



procedure {:origName "AvCmp_InitCipModule"} AvCmp_InitCipModule(actual_BusExtension_32: int, actual_Connect_7: int, actual_TalkFormat: int) returns (Tmp_564: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} Tmp_564 == 0 || Tmp_564 == -1073741790 || Tmp_564 == -1073741811 || Tmp_564 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_InitCipModule"} AvCmp_InitCipModule(actual_BusExtension_32: int, actual_Connect_7: int, actual_TalkFormat: int) returns (Tmp_564: int)
{
  var {:pointer} iPlug_1: int;
  var {:scalar} Status_34: int;
  var {:pointer} oPlug_1: int;
  var {:pointer} BusExtension_32: int;
  var {:pointer} Connect_7: int;
  var {:pointer} TalkFormat: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_2094: int;
  var vslice_dummy_var_2095: int;
  var vslice_dummy_var_2096: int;
  var vslice_dummy_var_2097: int;
  var vslice_dummy_var_2098: int;
  var vslice_dummy_var_2099: int;
  var vslice_dummy_var_2100: int;
  var vslice_dummy_var_2101: int;
  var vslice_dummy_var_2102: int;
  var vslice_dummy_var_2103: int;
  var vslice_dummy_var_2104: int;
  var vslice_dummy_var_2105: int;
  var vslice_dummy_var_2106: int;
  var vslice_dummy_var_2107: int;
  var vslice_dummy_var_2108: int;
  var vslice_dummy_var_2109: int;

  anon0:
    BusExtension_32 := actual_BusExtension_32;
    Connect_7 := actual_Connect_7;
    TalkFormat := actual_TalkFormat;
    Status_34 := 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc iPlug_1;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc oPlug_1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} iPlug_1 != 0;
    assume {:nonnull} iPlug_1 != 0;
    assume iPlug_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} oPlug_1 != 0;
    assume {:nonnull} oPlug_1 != 0;
    assume oPlug_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L15;

  L15:
    Tmp_564 := Status_34;
    return;

  anon36_Then:
    goto L10;

  L10:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} iPlug_1 != 0;
    assume {:nonnull} iPlug_1 != 0;
    assume iPlug_1 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto L18;

  L18:
    assume {:nonnull} BusExtension_32 != 0;
    assume BusExtension_32 > 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_2094;
    havoc vslice_dummy_var_2095;
    call {:si_unique_call 1258} Status_34 := AvCip_Create(CipData__AV_CONNECT(Connect_7), vslice_dummy_var_2094, vslice_dummy_var_2095, IrbPool__BUS_DEVICE_EXTENSION(BusExtension_32), Connect_7, 0, NodeID__BUS_DEVICE_EXTENSION(BusExtension_32));
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Status_34 >= 0;
    assume {:nonnull} BusExtension_32 != 0;
    assume BusExtension_32 > 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_2096;
    call {:si_unique_call 1259} Status_34 := AvCip_SetTalkFormat(vslice_dummy_var_2096, TalkFormat, NodeID__BUS_DEVICE_EXTENSION(BusExtension_32));
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Status_34 >= 0;
    goto L30;

  L30:
    assume {:nonnull} BusExtension_32 != 0;
    assume BusExtension_32 > 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_2097;
    havoc vslice_dummy_var_2098;
    havoc vslice_dummy_var_2099;
    havoc vslice_dummy_var_2100;
    havoc vslice_dummy_var_2101;
    call {:si_unique_call 1260} Status_34 := AvCip_SetCipIsochParameters(vslice_dummy_var_2097, vslice_dummy_var_2098, vslice_dummy_var_2099, vslice_dummy_var_2100, vslice_dummy_var_2101);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Status_34 >= 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_2102;
    havoc vslice_dummy_var_2103;
    call {:si_unique_call 1261} vslice_dummy_var_179 := AvCip_SetCipPacketSize(vslice_dummy_var_2102, vslice_dummy_var_2103);
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_2104;
    havoc vslice_dummy_var_2105;
    call {:si_unique_call 1262} vslice_dummy_var_180 := AvCip_SetSpeed(vslice_dummy_var_2104, vslice_dummy_var_2105);
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_2106;
    havoc vslice_dummy_var_2107;
    call {:si_unique_call 1263} vslice_dummy_var_181 := AvCip_SetChannel(vslice_dummy_var_2106, vslice_dummy_var_2107);
    goto L15;

  anon41_Then:
    assume {:partition} 0 > Status_34;
    goto L15;

  anon40_Then:
    assume {:partition} 0 > Status_34;
    goto L15;

  anon39_Then:
    assume {:partition} 0 > Status_34;
    goto L15;

  anon38_Then:
    goto L16;

  L16:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} oPlug_1 != 0;
    assume {:nonnull} oPlug_1 != 0;
    assume oPlug_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto L45;

  L45:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} oPlug_1 != 0;
    assume {:nonnull} oPlug_1 != 0;
    assume oPlug_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L49;

  L49:
    assume {:nonnull} BusExtension_32 != 0;
    assume BusExtension_32 > 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_2108;
    havoc vslice_dummy_var_2109;
    call {:si_unique_call 1264} Status_34 := AvCip_Create(CipData__AV_CONNECT(Connect_7), vslice_dummy_var_2108, vslice_dummy_var_2109, IrbPool__BUS_DEVICE_EXTENSION(BusExtension_32), Connect_7, 1, NodeID__BUS_DEVICE_EXTENSION(BusExtension_32));
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Status_34 >= 0;
    goto L30;

  anon46_Then:
    assume {:partition} 0 > Status_34;
    goto L15;

  anon45_Then:
    goto L47;

  L47:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} iPlug_1 != 0;
    assume {:nonnull} iPlug_1 != 0;
    assume iPlug_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L49;

  anon47_Then:
    goto L30;

  anon44_Then:
    assume {:partition} iPlug_1 == 0;
    goto L30;

  anon42_Then:
    assume {:partition} oPlug_1 == 0;
    goto L47;

  anon43_Then:
    goto L18;

  anon37_Then:
    assume {:partition} oPlug_1 == 0;
    goto L45;

  anon33_Then:
    assume {:partition} iPlug_1 == 0;
    goto L16;

  anon35_Then:
    assume {:partition} oPlug_1 == 0;
    goto L10;

  anon34_Then:
    goto L10;

  anon48_Then:
    assume {:partition} iPlug_1 == 0;
    goto L10;
}



procedure {:origName "AvCmp_CreateCMPAddressRange"} AvCmp_CreateCMPAddressRange(actual_BusExtension_33: int, actual_CmpData_3: int, actual_PlugType: int) returns (Tmp_566: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_CreateCMPAddressRange"} AvCmp_CreateCMPAddressRange(actual_BusExtension_33: int, actual_CmpData_3: int, actual_PlugType: int) returns (Tmp_566: int)
{
  var {:pointer} Irp_41: int;
  var {:pointer} Irb_14: int;
  var {:scalar} StackSize_8: int;
  var {:pointer} sdv_460: int;
  var {:scalar} ntStatus_29: int;
  var {:pointer} Tmp_568: int;
  var {:pointer} BusExtension_33: int;
  var {:pointer} CmpData_3: int;
  var {:scalar} PlugType: int;
  var vslice_dummy_var_2110: int;

  anon0:
    BusExtension_33 := actual_BusExtension_33;
    CmpData_3 := actual_CmpData_3;
    PlugType := actual_PlugType;
    ntStatus_29 := 0;
    Irp_41 := 0;
    Irb_14 := 0;
    assume {:nonnull} BusExtension_33 != 0;
    assume BusExtension_33 > 0;
    havoc Tmp_568;
    assume {:nonnull} Tmp_568 != 0;
    assume Tmp_568 > 0;
    havoc StackSize_8;
    call {:si_unique_call 1265} Irp_41 := IoAllocateIrp(StackSize_8, 0);
    call {:si_unique_call 1266} sdv_460 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_14 := sdv_460;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Irp_41 != 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irb_14 != 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L30;

  L30:
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} PlugType != 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} PlugType == 1;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L38;

  L38:
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} BusExtension_33 != 0;
    assume BusExtension_33 > 0;
    havoc vslice_dummy_var_2110;
    call {:si_unique_call 1267} ntStatus_29 := Av_SubmitIrpSynch(vslice_dummy_var_2110, Irp_41, Irb_14);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} ntStatus_29 >= 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} PlugType != 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} PlugType == 1;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L50;

  L50:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_41 != 0;
    call {:si_unique_call 1268} IoFreeIrp(0);
    goto L55;

  L55:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Irb_14 != 0;
    assume {:nonnull} BusExtension_33 != 0;
    assume BusExtension_33 > 0;
    call {:si_unique_call 1269} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_33), Irb_14);
    goto L59;

  L59:
    Tmp_566 := ntStatus_29;
    return;

  anon29_Then:
    assume {:partition} Irb_14 == 0;
    goto L59;

  anon26_Then:
    assume {:partition} Irp_41 == 0;
    goto L55;

  anon28_Then:
    assume {:partition} PlugType != 1;
    goto L50;

  anon27_Then:
    assume {:partition} PlugType == 0;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L50;

  anon25_Then:
    assume {:partition} 0 > ntStatus_29;
    goto L50;

  anon24_Then:
    assume {:partition} PlugType != 1;
    goto L38;

  anon32_Then:
    assume {:partition} PlugType == 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} BusExtension_33 != 0;
    assume BusExtension_33 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L38;

  anon33_Then:
    goto L38;

  anon31_Then:
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L30;

  anon23_Then:
    assume {:partition} Irb_14 == 0;
    goto L20;

  L20:
    ntStatus_29 := -1073741670;
    goto L50;

  anon30_Then:
    assume {:partition} Irp_41 == 0;
    goto L20;
}



procedure {:origName "AvCmp_SetPlugPCR"} AvCmp_SetPlugPCR(actual_BusExtension_34: int, actual_Type_4: int, actual_Index: int, actual_PcrRef: int, actual_PcrSet: int, actual_PcrOrg_1: int, actual_bGeneration: int, actual_Generation_1: int) returns (Tmp_569: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_SetPlugPCR"} AvCmp_SetPlugPCR(actual_BusExtension_34: int, actual_Type_4: int, actual_Index: int, actual_PcrRef: int, actual_PcrSet: int, actual_PcrOrg_1: int, actual_bGeneration: int, actual_Generation_1: int) returns (Tmp_569: int)
{
  var {:pointer} pUlong1: int;
  var {:scalar} sdv_462: int;
  var {:pointer} pUlong3: int;
  var {:pointer} pUlong2: int;
  var {:scalar} Tmp_571: int;
  var {:scalar} sdv_464: int;
  var {:scalar} ntStatus_30: int;
  var {:scalar} Tmp_572: int;
  var {:scalar} sdv_465: int;
  var {:scalar} sdv_466: int;
  var {:scalar} sdv_467: int;
  var {:pointer} BusExtension_34: int;
  var {:scalar} Type_4: int;
  var {:scalar} Index: int;
  var {:pointer} PcrRef: int;
  var {:pointer} PcrSet: int;
  var {:pointer} PcrOrg_1: int;
  var {:scalar} bGeneration: int;
  var {:scalar} Generation_1: int;
  var vslice_dummy_var_2111: int;
  var vslice_dummy_var_2112: int;
  var vslice_dummy_var_2113: int;
  var vslice_dummy_var_2114: int;

  anon0:
    BusExtension_34 := actual_BusExtension_34;
    Type_4 := actual_Type_4;
    Index := actual_Index;
    PcrRef := actual_PcrRef;
    PcrSet := actual_PcrSet;
    PcrOrg_1 := actual_PcrOrg_1;
    bGeneration := actual_bGeneration;
    Generation_1 := actual_Generation_1;
    ntStatus_30 := 0;
    pUlong1 := PcrRef;
    pUlong2 := PcrSet;
    pUlong3 := PcrOrg_1;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Index <= 30;
    assume {:nonnull} pUlong1 != 0;
    assume pUlong1 > 0;
    assume {:nonnull} pUlong2 != 0;
    assume pUlong2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Type_4 != 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Type_4 == 1;
    Tmp_571 := -268433020 + Index * 4;
    assume {:nonnull} pUlong1 != 0;
    assume pUlong1 > 0;
    assume {:nonnull} pUlong2 != 0;
    assume pUlong2 > 0;
    havoc vslice_dummy_var_2111;
    havoc vslice_dummy_var_2112;
    call {:si_unique_call 1270} ntStatus_30 := Av1394_LockedSwap(BusExtension_34, vslice_dummy_var_2111, vslice_dummy_var_2112, pUlong3, Tmp_571, bGeneration, Generation_1);
    goto L20;

  L20:
    assume {:nonnull} pUlong1 != 0;
    assume pUlong1 > 0;
    assume {:nonnull} pUlong2 != 0;
    assume pUlong2 > 0;
    assume {:nonnull} pUlong3 != 0;
    assume pUlong3 > 0;
    Tmp_569 := ntStatus_30;
    return;

  anon7_Then:
    assume {:partition} Type_4 != 1;
    ntStatus_30 := -1073741811;
    goto L20;

  anon9_Then:
    assume {:partition} Type_4 == 0;
    Tmp_572 := -268433148 + Index * 4;
    assume {:nonnull} pUlong1 != 0;
    assume pUlong1 > 0;
    assume {:nonnull} pUlong2 != 0;
    assume pUlong2 > 0;
    havoc vslice_dummy_var_2113;
    havoc vslice_dummy_var_2114;
    call {:si_unique_call 1271} ntStatus_30 := Av1394_LockedSwap(BusExtension_34, vslice_dummy_var_2113, vslice_dummy_var_2114, pUlong3, Tmp_572, bGeneration, Generation_1);
    goto L20;

  anon8_Then:
    assume {:partition} 30 < Index;
    ntStatus_30 := -1073741811;
    goto L20;
}



procedure {:origName "AvCmp_GetUnitCapabilities"} AvCmp_GetUnitCapabilities(actual_BusExtension_35: int, actual_Irp_42: int, actual_Request_13: int) returns (Tmp_573: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_573 == -1073741811 || Tmp_573 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_GetUnitCapabilities"} AvCmp_GetUnitCapabilities(actual_BusExtension_35: int, actual_Irp_42: int, actual_Request_13: int) returns (Tmp_573: int)
{
  var {:pointer} Tmp_574: int;
  var {:pointer} pVersion: int;
  var {:scalar} ulUnitModelLength: int;
  var {:pointer} GetUnitCaps: int;
  var {:scalar} uniVendorText: int;
  var {:pointer} GetUnitInfo: int;
  var {:pointer} pDiagLevel: int;
  var {:scalar} uniUnitModelText: int;
  var {:pointer} CmpData_4: int;
  var {:pointer} uniUnitModelId: int;
  var {:scalar} ulModelLength: int;
  var {:pointer} UnitIsochParams: int;
  var {:scalar} uniModelText: int;
  var {:pointer} uniModelId_2: int;
  var {:scalar} ulVendorLength: int;
  var {:scalar} ntStatus_31: int;
  var {:pointer} BusGenNode: int;
  var {:pointer} GetUnitIds: int;
  var {:pointer} uniVendorId_2: int;
  var {:pointer} BusExtension_35: int;
  var {:pointer} Request_13: int;

  anon0:
    call {:si_unique_call 1272} uniVendorText := __HAVOC_malloc(12);
    call {:si_unique_call 1273} uniUnitModelText := __HAVOC_malloc(12);
    call {:si_unique_call 1274} uniModelText := __HAVOC_malloc(12);
    BusExtension_35 := actual_BusExtension_35;
    Request_13 := actual_Request_13;
    ntStatus_31 := 0;
    assume {:nonnull} Request_13 != 0;
    assume Request_13 > 0;
    GetUnitInfo := GetUnitInfo__AV_61883_REQUEST(Request_13);
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc GetUnitIds;
    ulVendorLength := 0;
    ulModelLength := 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L21;

  L21:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L23;

  L23:
    assume {:nonnull} Request_13 != 0;
    assume Request_13 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    ntStatus_31 := -1073741811;
    goto L29;

  L29:
    Tmp_573 := ntStatus_31;
    return;

  anon55_Then:
    goto L24;

  L24:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    uniVendorId_2 := uniVendorId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_35));
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    uniModelId_2 := uniModelId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_35));
    assume {:nonnull} uniVendorId_2 != 0;
    assume uniVendorId_2 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} uniVendorId_2 != 0;
    assume uniVendorId_2 > 0;
    havoc ulVendorLength;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} uniVendorText != 0;
    assume uniVendorText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniVendorText != 0;
    assume uniVendorText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniVendorText != 0;
    assume uniVendorText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L46;

  L46:
    assume {:nonnull} uniModelId_2 != 0;
    assume uniModelId_2 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} uniModelId_2 != 0;
    assume uniModelId_2 > 0;
    havoc ulModelLength;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} uniModelText != 0;
    assume uniModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniModelText != 0;
    assume uniModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniModelText != 0;
    assume uniModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L58;

  L58:
    assume {:nonnull} Request_13 != 0;
    assume Request_13 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    ulUnitModelLength := 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    uniUnitModelId := uniUnitModelId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_35));
    assume {:nonnull} uniUnitModelId != 0;
    assume uniUnitModelId > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} uniUnitModelId != 0;
    assume uniUnitModelId > 0;
    havoc ulUnitModelLength;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} uniUnitModelText != 0;
    assume uniUnitModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniUnitModelText != 0;
    assume uniUnitModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniUnitModelText != 0;
    assume uniUnitModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L29;

  anon71_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L29;

  anon70_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L29;

  anon57_Then:
    goto L29;

  anon69_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L58;

  anon56_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L58;

  anon68_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L46;

  anon67_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L46;

  anon54_Then:
    goto L24;

  anon53_Then:
    goto L24;

  anon51_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    ntStatus_31 := -1073741811;
    goto L29;

  anon52_Then:
    goto L23;

  anon66_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    ntStatus_31 := -1073741811;
    goto L29;

  anon50_Then:
    goto L21;

  anon65_Then:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc GetUnitCaps;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto L90;

  L90:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    havoc CmpData_4;
    goto L93;

  L93:
    assume {:nonnull} CmpData_4 != 0;
    assume CmpData_4 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} CmpData_4 != 0;
    assume CmpData_4 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} CmpData_4 != 0;
    assume CmpData_4 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    goto L29;

  anon60_Then:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    havoc Tmp_574;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    havoc CmpData_4;
    goto L93;

  anon72_Then:
    assume {:nonnull} Request_13 != 0;
    assume Request_13 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    goto L29;

  anon61_Then:
    ntStatus_31 := -1073741811;
    goto L29;

  anon59_Then:
    goto L90;

  anon49_Then:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc UnitIsochParams;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} UnitIsochParams != 0;
    assume UnitIsochParams > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} UnitIsochParams != 0;
    assume UnitIsochParams > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} UnitIsochParams != 0;
    assume UnitIsochParams > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} UnitIsochParams != 0;
    assume UnitIsochParams > 0;
    goto L29;

  anon58_Then:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc BusGenNode;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} BusGenNode != 0;
    assume BusGenNode > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} BusGenNode != 0;
    assume BusGenNode > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} BusGenNode != 0;
    assume BusGenNode > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} BusGenNode != 0;
    assume BusGenNode > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} BusGenNode != 0;
    assume BusGenNode > 0;
    goto L29;

  anon62_Then:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc pVersion;
    assume {:nonnull} pVersion != 0;
    assume pVersion > 0;
    goto L29;

  anon63_Then:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc pDiagLevel;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} pDiagLevel != 0;
    assume pDiagLevel > 0;
    goto L29;

  anon64_Then:
    ntStatus_31 := -1073741811;
    goto L29;
}



procedure {:origName "AvCmp_SetPlug"} AvCmp_SetPlug(actual_PdoExtension_12: int, actual_Irp_43: int, actual_Request_14: int) returns (Tmp_576: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_576 == 0 || Tmp_576 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_SetPlug"} AvCmp_SetPlug(actual_PdoExtension_12: int, actual_Irp_43: int, actual_Request_14: int) returns (Tmp_576: int)
{
  var {:pointer} Tmp_577: int;
  var {:scalar} MonitorInfo_2: int;
  var {:pointer} SetPlug: int;
  var {:scalar} Tmp_578: int;
  var {:scalar} PlugNum_1: int;
  var {:pointer} Tmp_579: int;
  var {:pointer} Tmp_580: int;
  var {:scalar} sdv_469: int;
  var {:pointer} CmpData_5: int;
  var {:pointer} Tmp_581: int;
  var {:scalar} sdv_470: int;
  var {:pointer} iPCR_1: int;
  var {:scalar} ntStatus_32: int;
  var {:pointer} Tmp_582: int;
  var {:scalar} Tmp_583: int;
  var {:scalar} sdv_471: int;
  var {:pointer} CurrMonitor_2: int;
  var {:pointer} Plug_1: int;
  var {:scalar} Pcr_1: int;
  var {:pointer} Tmp_584: int;
  var {:pointer} oPCR: int;
  var {:scalar} Irql_22: int;
  var {:pointer} BusExtension_36: int;
  var {:pointer} AvAdapterData_11: int;
  var {:pointer} Tmp_585: int;
  var {:scalar} Tmp_586: int;
  var {:scalar} Tmp_587: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Request_14: int;

  anon0:
    call {:si_unique_call 1275} MonitorInfo_2 := __HAVOC_malloc(76);
    call {:si_unique_call 1276} Pcr_1 := __HAVOC_malloc(60);
    PdoExtension_12 := actual_PdoExtension_12;
    Request_14 := actual_Request_14;
    call {:si_unique_call 1277} Tmp_579 := __HAVOC_malloc(3720);
    call {:si_unique_call 1278} Tmp_581 := __HAVOC_malloc(3720);
    call {:si_unique_call 1279} Tmp_582 := __HAVOC_malloc(3720);
    call {:si_unique_call 1280} Tmp_584 := __HAVOC_malloc(3720);
    ntStatus_32 := 0;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_577;
    assume {:nonnull} Tmp_577 != 0;
    assume Tmp_577 > 0;
    havoc BusExtension_36;
    assume {:nonnull} Request_14 != 0;
    assume Request_14 > 0;
    SetPlug := SetPlug__AV_61883_REQUEST(Request_14);
    PlugNum_1 := 0;
    assume {:nonnull} BusExtension_36 != 0;
    assume BusExtension_36 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} BusExtension_36 != 0;
    assume BusExtension_36 > 0;
    havoc CmpData_5;
    goto L20;

  L20:
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    havoc Plug_1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Plug_1 != 0;
    call {:si_unique_call 1281} Tmp_580 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    call {:si_unique_call 1282} sdv_KeAcquireSpinLock(0, Tmp_580);
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    havoc Irql_22;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    havoc PlugNum_1;
    Tmp_578 := PlugNum_1;
    assume {:nonnull} CmpData_5 != 0;
    assume CmpData_5 > 0;
    havoc Tmp_581;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    oPCR := oPCR__AV_PCR(Tmp_581 + Tmp_578 * 120);
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    Tmp_587 := PlugNum_1;
    assume {:nonnull} CmpData_5 != 0;
    assume CmpData_5 > 0;
    havoc Tmp_582;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    goto L42;

  L42:
    call {:si_unique_call 1283} sdv_KeReleaseSpinLock(0, Irql_22);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_32 < 0;
    goto L48;

  L48:
    Tmp_576 := ntStatus_32;
    return;

  anon28_Then:
    assume {:partition} 0 <= ntStatus_32;
    assume {:nonnull} CmpData_5 != 0;
    assume CmpData_5 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} BusExtension_36 != 0;
    assume BusExtension_36 > 0;
    havoc AvAdapterData_11;
    CurrMonitor_2 := 0;
    call {:si_unique_call 1284} Tmp_580 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    call {:si_unique_call 1285} sdv_KeAcquireSpinLock(0, Tmp_580);
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    havoc Irql_22;
    call {:si_unique_call 1286} sdv_470 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_470 != 0;
    goto L62;

  L62:
    call {:si_unique_call 1287} sdv_KeReleaseSpinLock(0, Irql_22);
    goto L48;

  anon30_Then:
    assume {:partition} sdv_470 == 0;
    goto L61;

  L61:
    call {:si_unique_call 1288} CurrMonitor_2 := AvCmp_SetPlug_loop_L61(MonitorInfo_2, PlugNum_1, CurrMonitor_2, Plug_1, Pcr_1, AvAdapterData_11);
    goto L61_last;

  L61_last:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} CurrMonitor_2 != 0;
    assume {:nonnull} CurrMonitor_2 != 0;
    assume CurrMonitor_2 > 0;
    havoc CurrMonitor_2;
    goto L67;

  L67:
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} CurrMonitor_2 != 0;
    assume CurrMonitor_2 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    goto L74;

  L74:
    assume {:nonnull} CurrMonitor_2 != 0;
    assume CurrMonitor_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} CurrMonitor_2 != 0;
    assume CurrMonitor_2 > 0;
    goto L75;

  L75:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L62;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon32_Then:
    goto L75;

  anon36_Then:
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    goto L74;

  anon31_Then:
    assume {:partition} CurrMonitor_2 == 0;
    assume {:nonnull} AvAdapterData_11 != 0;
    assume AvAdapterData_11 > 0;
    havoc CurrMonitor_2;
    goto L67;

  anon29_Then:
    goto L48;

  anon26_Then:
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    havoc PlugNum_1;
    Tmp_586 := PlugNum_1;
    assume {:nonnull} CmpData_5 != 0;
    assume CmpData_5 > 0;
    havoc Tmp_584;
    assume {:nonnull} Tmp_584 != 0;
    assume Tmp_584 > 0;
    iPCR_1 := iPCR__AV_PCR(Tmp_584 + Tmp_586 * 120);
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    Tmp_583 := PlugNum_1;
    assume {:nonnull} CmpData_5 != 0;
    assume CmpData_5 > 0;
    havoc Tmp_579;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    goto L42;

  anon27_Then:
    ntStatus_32 := -1073741811;
    goto L42;

  anon25_Then:
    ntStatus_32 := -1073741811;
    goto L42;

  anon35_Then:
    assume {:partition} Plug_1 == 0;
    ntStatus_32 := -1073741811;
    goto L48;

  anon34_Then:
    assume {:nonnull} BusExtension_36 != 0;
    assume BusExtension_36 > 0;
    havoc Tmp_585;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    havoc CmpData_5;
    goto L20;
}



procedure {:origName "AvCmp_SetUnitCapabilities"} AvCmp_SetUnitCapabilities(actual_BusExtension_37: int, actual_Irp_44: int, actual_Request_15: int) returns (Tmp_588: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_SetUnitCapabilities"} AvCmp_SetUnitCapabilities(actual_BusExtension_37: int, actual_Irp_44: int, actual_Request_15: int) returns (Tmp_588: int)
{
  var {:pointer} AddressType: int;
  var {:pointer} SetUnitInfo: int;
  var {:pointer} pDiagLevel_1: int;
  var {:pointer} UnitIsochParams_1: int;
  var {:scalar} ntStatus_33: int;
  var {:pointer} BusExtension_37: int;
  var {:pointer} Request_15: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_2115: int;

  anon0:
    BusExtension_37 := actual_BusExtension_37;
    Request_15 := actual_Request_15;
    ntStatus_33 := 0;
    assume {:nonnull} Request_15 != 0;
    assume Request_15 > 0;
    SetUnitInfo := SetUnitInfo__AV_61883_REQUEST(Request_15);
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    havoc pDiagLevel_1;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    assume {:nonnull} pDiagLevel_1 != 0;
    assume pDiagLevel_1 > 0;
    goto L12;

  L12:
    Tmp_588 := ntStatus_33;
    return;

  anon20_Then:
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    havoc UnitIsochParams_1;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    assume {:nonnull} UnitIsochParams_1 != 0;
    assume UnitIsochParams_1 > 0;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    assume {:nonnull} UnitIsochParams_1 != 0;
    assume UnitIsochParams_1 > 0;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    assume {:nonnull} UnitIsochParams_1 != 0;
    assume UnitIsochParams_1 > 0;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    assume {:nonnull} UnitIsochParams_1 != 0;
    assume UnitIsochParams_1 > 0;
    goto L12;

  anon15_Then:
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    havoc AddressType;
    assume {:nonnull} AddressType != 0;
    assume AddressType > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    call {:si_unique_call 1289} ntStatus_33 := AvCmp_CreateCmpData(BusExtension_37, 2, CmpData__BUS_DEVICE_EXTENSION(BusExtension_37));
    goto L12;

  anon18_Then:
    goto L12;

  anon21_Then:
    assume {:nonnull} AddressType != 0;
    assume AddressType > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    havoc vslice_dummy_var_2115;
    call {:si_unique_call 1290} vslice_dummy_var_182 := AvCmp_DestroyCmpData(BusExtension_37, vslice_dummy_var_2115);
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    goto L12;

  anon19_Then:
    goto L12;

  anon17_Then:
    ntStatus_33 := -1073741811;
    goto L12;

  anon16_Then:
    ntStatus_33 := -1073741811;
    goto L12;
}



procedure {:origName "AvCmp_InitPlugInstance"} AvCmp_InitPlugInstance(actual_BusExtension_38: int, actual_PlugNum_2: int, actual_PlugType_1: int) returns (Tmp_590: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_InitPlugInstance"} AvCmp_InitPlugInstance(actual_BusExtension_38: int, actual_PlugNum_2: int, actual_PlugType_1: int) returns (Tmp_590: int)
{
  var {:pointer} Tmp_592: int;
  var {:scalar} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:scalar} ntStatus_34: int;
  var {:pointer} Plug_2: int;
  var {:scalar} Pcr_2: int;
  var {:scalar} Tmp_595: int;
  var {:pointer} BusExtension_38: int;
  var {:scalar} PlugNum_2: int;
  var {:scalar} PlugType_1: int;

  anon0:
    call {:si_unique_call 1291} Pcr_2 := __HAVOC_malloc(60);
    BusExtension_38 := actual_BusExtension_38;
    PlugNum_2 := actual_PlugNum_2;
    PlugType_1 := actual_PlugType_1;
    ntStatus_34 := 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} PlugType_1 != 0;
    Tmp_595 := PlugNum_2;
    assume {:nonnull} BusExtension_38 != 0;
    assume BusExtension_38 > 0;
    havoc Tmp_592;
    Plug_2 := Tmp_592 + Tmp_595 * 32;
    goto L10;

  L10:
    call {:si_unique_call 1292} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    call {:si_unique_call 1293} ntStatus_34 := AvCmp_GetPlugPCR(BusExtension_38, PlugType_1, PlugNum_2, Pcr_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_34 >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} PlugType_1 != 0;
    goto L23;

  L23:
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    Tmp_590 := ntStatus_34;
    goto L1;

  L1:
    return;

  anon10_Then:
    assume {:partition} PlugType_1 == 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L27;

  L27:
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    goto L23;

  anon11_Then:
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    goto L27;

  anon9_Then:
    assume {:partition} 0 > ntStatus_34;
    Tmp_590 := ntStatus_34;
    goto L1;

  anon12_Then:
    assume {:partition} PlugType_1 == 0;
    Tmp_593 := PlugNum_2;
    assume {:nonnull} BusExtension_38 != 0;
    assume BusExtension_38 > 0;
    havoc Tmp_594;
    Plug_2 := Tmp_594 + Tmp_593 * 32;
    goto L10;
}



procedure {:origName "AvCmp_CreatePlugs"} AvCmp_CreatePlugs(actual_BusExtension_39: int) returns (Tmp_596: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_CreatePlugs"} AvCmp_CreatePlugs(actual_BusExtension_39: int) returns (Tmp_596: int)
{
  var {:scalar} numPcr: int;
  var {:scalar} Tmp_597: int;
  var {:pointer} sdv_476: int;
  var {:scalar} ntStatus_35: int;
  var {:pointer} sdv_477: int;
  var {:scalar} Tmp_598: int;
  var {:scalar} oMPR: int;
  var {:scalar} Tmp_600: int;
  var {:scalar} iMPR: int;
  var {:pointer} BusExtension_39: int;

  anon0:
    call {:si_unique_call 1294} oMPR := __HAVOC_malloc(24);
    call {:si_unique_call 1295} iMPR := __HAVOC_malloc(24);
    BusExtension_39 := actual_BusExtension_39;
    ntStatus_35 := 0;
    call {:si_unique_call 1296} ntStatus_35 := AvCmp_GetPlugMPR(BusExtension_39, oMPR, iMPR);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} ntStatus_35 < 0;
    goto L40;

  L40:
    Tmp_596 := ntStatus_35;
    goto L1;

  L1:
    return;

  anon25_Then:
    assume {:partition} 0 <= ntStatus_35;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} oMPR != 0;
    assume oMPR > 0;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} iMPR != 0;
    assume iMPR > 0;
    assume {:nonnull} iMPR != 0;
    assume iMPR > 0;
    assume {:nonnull} oMPR != 0;
    assume oMPR > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} oMPR != 0;
    assume oMPR > 0;
    havoc Tmp_600;
    goto L19;

  L19:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    havoc Tmp_598;
    call {:si_unique_call 1297} sdv_476 := ExAllocatePoolWithTag(512, Tmp_598, 943206710);
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    ntStatus_35 := -1073741670;
    goto L30;

  L30:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 1298} sdv_ExFreePool(0);
    goto L31;

  L31:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 1299} sdv_ExFreePool(0);
    goto L35;

  L35:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto L40;

  anon28_Then:
    goto L35;

  anon27_Then:
    goto L31;

  anon35_Then:
    goto L21;

  L21:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    havoc Tmp_597;
    call {:si_unique_call 1300} sdv_477 := ExAllocatePoolWithTag(512, Tmp_597, 943206710);
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    ntStatus_35 := -1073741670;
    goto L30;

  anon36_Then:
    goto L41;

  L41:
    numPcr := 0;
    goto L50;

  L50:
    call {:si_unique_call 1301} numPcr, ntStatus_35 := AvCmp_CreatePlugs_loop_L50(numPcr, ntStatus_35, oMPR, BusExtension_39);
    goto L50_last;

  L50_last:
    assume {:nonnull} oMPR != 0;
    assume oMPR > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 1302} ntStatus_35 := AvCmp_InitPlugInstance(BusExtension_39, numPcr, 0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ntStatus_35 >= 0;
    numPcr := numPcr + 1;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    assume false;
    return;

  anon30_Then:
    assume {:partition} 0 > ntStatus_35;
    goto L30;

  anon29_Then:
    numPcr := 0;
    goto L59;

  L59:
    call {:si_unique_call 1303} numPcr, ntStatus_35 := AvCmp_CreatePlugs_loop_L59(numPcr, ntStatus_35, iMPR, BusExtension_39);
    goto L59_last;

  L59_last:
    assume {:nonnull} iMPR != 0;
    assume iMPR > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1304} ntStatus_35 := AvCmp_InitPlugInstance(BusExtension_39, numPcr, 1);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} ntStatus_35 >= 0;
    numPcr := numPcr + 1;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    assume false;
    return;

  anon32_Then:
    assume {:partition} 0 > ntStatus_35;
    goto L30;

  anon31_Then:
    Tmp_596 := ntStatus_35;
    goto L1;

  anon26_Then:
    goto L41;

  anon34_Then:
    goto L21;

  anon33_Then:
    assume {:nonnull} iMPR != 0;
    assume iMPR > 0;
    havoc Tmp_600;
    goto L19;
}



procedure {:origName "AvCmp_Connect"} AvCmp_Connect(actual_BusExtension_40: int, actual_Irp_45: int, actual_Request_16: int) returns (Tmp_601: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_Connect"} AvCmp_Connect(actual_BusExtension_40: int, actual_Irp_45: int, actual_Request_16: int) returns (Tmp_601: int)
{
  var {:pointer} iPlug_2: int;
  var {:pointer} Ver2Connect: int;
  var {:pointer} oPlug_2: int;
  var {:pointer} Connect_8: int;
  var {:scalar} ntStatus_36: int;
  var {:pointer} phConnect: int;
  var {:pointer} BusExtension_40: int;
  var {:pointer} Request_16: int;
  var vslice_dummy_var_2116: int;
  var vslice_dummy_var_2117: int;

  anon0:
    BusExtension_40 := actual_BusExtension_40;
    Request_16 := actual_Request_16;
    ntStatus_36 := 0;
    assume {:nonnull} Request_16 != 0;
    assume Request_16 > 0;
    Connect_8 := Connect__AV_61883_REQUEST(Request_16);
    assume {:nonnull} Connect_8 != 0;
    assume Connect_8 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} Connect_8 != 0;
    assume Connect_8 > 0;
    havoc iPlug_2;
    assume {:nonnull} Connect_8 != 0;
    assume Connect_8 > 0;
    havoc oPlug_2;
    assume {:nonnull} Request_16 != 0;
    assume Request_16 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Request_16 != 0;
    assume Request_16 > 0;
    Ver2Connect := Connect__AV_61883_REQUEST(Request_16);
    assume {:nonnull} Ver2Connect != 0;
    assume Ver2Connect > 0;
    phConnect := hConnect__CMP_CONNECT_VER2(Ver2Connect);
    goto L19;

  L19:
    assume {:nonnull} Connect_8 != 0;
    assume Connect_8 > 0;
    assume {:nonnull} Request_16 != 0;
    assume Request_16 > 0;
    havoc vslice_dummy_var_2116;
    havoc vslice_dummy_var_2117;
    call {:si_unique_call 1305} ntStatus_36 := AvCmp_P2PConnect(BusExtension_40, vslice_dummy_var_2116, iPlug_2, oPlug_2, Format__CMP_CONNECT_VER3(Connect_8), vslice_dummy_var_2117, phConnect);
    goto L25;

  L25:
    Tmp_601 := ntStatus_36;
    return;

  anon6_Then:
    assume {:nonnull} Connect_8 != 0;
    assume Connect_8 > 0;
    phConnect := hConnect__CMP_CONNECT_VER3(Connect_8);
    goto L19;

  anon5_Then:
    ntStatus_36 := -1073741637;
    goto L25;
}



procedure {:origName "AvCmp_DestroyPlugs"} AvCmp_DestroyPlugs(actual_BusExtension_41: int) returns (Tmp_603: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_603 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_DestroyPlugs"} AvCmp_DestroyPlugs(actual_BusExtension_41: int) returns (Tmp_603: int)
{
  var {:scalar} ntStatus_37: int;
  var {:pointer} BusExtension_41: int;

  anon0:
    BusExtension_41 := actual_BusExtension_41;
    ntStatus_37 := 0;
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 1306} sdv_ExFreePool(0);
    goto L6;

  L6:
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1307} sdv_ExFreePool(0);
    goto L11;

  L11:
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    Tmp_603 := ntStatus_37;
    return;

  anon11_Then:
    goto L11;

  anon9_Then:
    goto L11;

  anon10_Then:
    goto L6;

  anon12_Then:
    goto L6;
}



procedure {:origName "AvCmp_CalculatePlugSize"} AvCmp_CalculatePlugSize(actual_Format_2: int, actual_DDIVersion_1: int) returns (Tmp_605: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_CalculatePlugSize"} AvCmp_CalculatePlugSize(actual_Format_2: int, actual_DDIVersion_1: int) returns (Tmp_605: int)
{
  var {:scalar} Tmp_606: int;
  var {:scalar} MaxBlocksPerFrame: int;
  var {:scalar} Tmp_608: int;
  var {:scalar} BlocksPerPacket: int;
  var {:pointer} Format_2: int;
  var {:scalar} DDIVersion_1: int;
  var vslice_dummy_var_183: int;

  anon0:
    Format_2 := actual_Format_2;
    DDIVersion_1 := actual_DDIVersion_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} 2 >= DDIVersion_1;
    call {:si_unique_call 1308} vslice_dummy_var_183 := AvCip_ConvertCipDataFormat(Format_2);
    BlocksPerPacket := 0;
    goto L11;

  L11:
    assume {:nonnull} Format_2 != 0;
    assume Format_2 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_606 := 1;
    goto L14;

  L14:
    assume {:nonnull} Format_2 != 0;
    assume Format_2 > 0;
    havoc MaxBlocksPerFrame;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} MaxBlocksPerFrame > BlocksPerPacket;
    Tmp_608 := MaxBlocksPerFrame;
    goto L18;

  L18:
    MaxBlocksPerFrame := Tmp_608;
    assume {:nonnull} Format_2 != 0;
    assume Format_2 > 0;
    havoc Tmp_605;
    return;

  anon9_Then:
    assume {:partition} BlocksPerPacket >= MaxBlocksPerFrame;
    Tmp_608 := BlocksPerPacket;
    goto L18;

  anon8_Then:
    Tmp_606 := 0;
    goto L14;

  anon7_Then:
    assume {:partition} DDIVersion_1 > 2;
    assume {:nonnull} Format_2 != 0;
    assume Format_2 > 0;
    havoc BlocksPerPacket;
    goto L11;
}



procedure {:origName "AvCmp_GetPlugState"} AvCmp_GetPlugState(actual_BusExtension_42: int, actual_Irp_46: int, actual_Request_17: int) returns (Tmp_609: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_GetPlugState"} AvCmp_GetPlugState(actual_BusExtension_42: int, actual_Irp_46: int, actual_Request_17: int) returns (Tmp_609: int)
{
  var {:scalar} PlugNum_3: int;
  var {:pointer} CmpData_6: int;
  var {:pointer} Tmp_610: int;
  var {:pointer} Tmp_611: int;
  var {:pointer} iPCR_2: int;
  var {:scalar} ntStatus_38: int;
  var {:pointer} Plug_3: int;
  var {:scalar} Pcr_3: int;
  var {:pointer} GetPlugState: int;
  var {:scalar} Tmp_613: int;
  var {:pointer} oPCR_1: int;
  var {:pointer} Tmp_614: int;
  var {:scalar} Tmp_615: int;
  var {:pointer} BusExtension_42: int;
  var {:pointer} Request_17: int;
  var vslice_dummy_var_2118: int;
  var vslice_dummy_var_2119: int;

  anon0:
    call {:si_unique_call 1309} Pcr_3 := __HAVOC_malloc(60);
    BusExtension_42 := actual_BusExtension_42;
    Request_17 := actual_Request_17;
    call {:si_unique_call 1310} Tmp_610 := __HAVOC_malloc(3720);
    call {:si_unique_call 1311} Tmp_614 := __HAVOC_malloc(3720);
    ntStatus_38 := 0;
    assume {:nonnull} Request_17 != 0;
    assume Request_17 > 0;
    GetPlugState := GetPlugState__AV_61883_REQUEST(Request_17);
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    havoc Plug_3;
    assume {:nonnull} BusExtension_42 != 0;
    assume BusExtension_42 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L15;

  L15:
    assume {:nonnull} Plug_3 != 0;
    assume Plug_3 > 0;
    havoc PlugNum_3;
    assume {:nonnull} BusExtension_42 != 0;
    assume BusExtension_42 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} BusExtension_42 != 0;
    assume BusExtension_42 > 0;
    havoc CmpData_6;
    goto L19;

  L19:
    assume {:nonnull} Plug_3 != 0;
    assume Plug_3 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    Tmp_613 := PlugNum_3;
    assume {:nonnull} CmpData_6 != 0;
    assume CmpData_6 > 0;
    havoc Tmp_614;
    assume {:nonnull} Tmp_614 != 0;
    assume Tmp_614 > 0;
    oPCR_1 := oPCR__AV_PCR(Tmp_614 + Tmp_613 * 120);
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    goto L28;

  L28:
    Tmp_609 := ntStatus_38;
    return;

  anon16_Then:
    Tmp_615 := PlugNum_3;
    assume {:nonnull} CmpData_6 != 0;
    assume CmpData_6 > 0;
    havoc Tmp_610;
    assume {:nonnull} Tmp_610 != 0;
    assume Tmp_610 > 0;
    iPCR_2 := iPCR__AV_PCR(Tmp_610 + Tmp_615 * 120);
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    goto L28;

  anon21_Then:
    assume {:nonnull} BusExtension_42 != 0;
    assume BusExtension_42 > 0;
    havoc Tmp_611;
    assume {:nonnull} Tmp_611 != 0;
    assume Tmp_611 > 0;
    havoc CmpData_6;
    goto L19;

  anon20_Then:
    assume {:nonnull} Request_17 != 0;
    assume Request_17 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} BusExtension_42 != 0;
    assume BusExtension_42 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Plug_3 != 0;
    assume Plug_3 > 0;
    havoc vslice_dummy_var_2118;
    havoc vslice_dummy_var_2119;
    call {:si_unique_call 1312} ntStatus_38 := AvCmp_GetPlugPCR(BusExtension_42, vslice_dummy_var_2118, vslice_dummy_var_2119, Pcr_3);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} ntStatus_38 >= 0;
    assume {:nonnull} Plug_3 != 0;
    assume Plug_3 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    goto L28;

  anon19_Then:
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    goto L28;

  anon18_Then:
    assume {:partition} 0 > ntStatus_38;
    goto L28;

  anon17_Then:
    ntStatus_38 := -1073741811;
    goto L28;

  anon15_Then:
    goto L15;
}



procedure {:origName "AvCmp_P2PConnect"} AvCmp_P2PConnect(actual_BusExtension_43: int, actual_ConnectType: int, actual_iPlug_3: int, actual_oPlug_3: int, actual_Format_3: int, actual_DDIVersion_2: int, actual_pConnect: int) returns (Tmp_616: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_P2PConnect"} AvCmp_P2PConnect(actual_BusExtension_43: int, actual_ConnectType: int, actual_iPlug_3: int, actual_oPlug_3: int, actual_Format_3: int, actual_DDIVersion_2: int, actual_pConnect: int) returns (Tmp_616: int)
{
  var {:scalar} Tmp_617: int;
  var {:scalar} Retries: int;
  var {:pointer} Tmp_618: int;
  var {:scalar} Tmp_619: int;
  var {:pointer} Tmp_620: int;
  var {:pointer} sdv_483: int;
  var {:pointer} CmpData_7: int;
  var {:pointer} Connect_9: int;
  var {:scalar} Retries_1: int;
  var {:scalar} ntStatus_39: int;
  var {:scalar} Tmp_621: int;
  var {:scalar} Tmp_624: int;
  var {:scalar} Tmp_625: int;
  var {:pointer} Tmp_626: int;
  var {:pointer} BusExtension_43: int;
  var {:scalar} ConnectType: int;
  var {:pointer} iPlug_3: int;
  var {:pointer} oPlug_3: int;
  var {:pointer} Format_3: int;
  var {:scalar} DDIVersion_2: int;
  var {:pointer} pConnect: int;
  var boogieTmp: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_2120: int;
  var vslice_dummy_var_2121: int;

  anon0:
    BusExtension_43 := actual_BusExtension_43;
    ConnectType := actual_ConnectType;
    iPlug_3 := actual_iPlug_3;
    oPlug_3 := actual_oPlug_3;
    Format_3 := actual_Format_3;
    DDIVersion_2 := actual_DDIVersion_2;
    pConnect := actual_pConnect;
    call {:si_unique_call 1313} Tmp_618 := __HAVOC_malloc(3720);
    call {:si_unique_call 1314} vslice_dummy_var_184 := __HAVOC_malloc(3720);
    call {:si_unique_call 1315} Tmp_626 := __HAVOC_malloc(3720);
    ntStatus_39 := 0;
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    havoc CmpData_7;
    goto L13;

  L13:
    call {:si_unique_call 1316} ExAcquireFastMutex(0);
    call {:si_unique_call 1317} sdv_483 := ExAllocatePoolWithTag(512, 44, 943206710);
    Connect_9 := sdv_483;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Connect_9 != 0;
    call {:si_unique_call 1318} sdv_RtlZeroMemory(0, 44);
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} oPlug_3 != 0;
    goto L31;

  L31:
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1319} boogieTmp := corral_nondet();
    goto L34;

  L34:
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    havoc Tmp_617;
    goto L37;

  L37:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} iPlug_3 != 0;
    assume {:nonnull} iPlug_3 != 0;
    assume iPlug_3 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L41;

  L41:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1320} boogieTmp := AvCmp_CalculatePlugSize(Format_3, DDIVersion_2);
    goto L45;

  L45:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} oPlug_3 != 0;
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} iPlug_3 == 0;
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    havoc Tmp_624;
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    havoc Tmp_626;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    assume {:nonnull} Tmp_626 != 0;
    assume Tmp_626 > 0;
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1321} boogieTmp := corral_nondet();
    goto L46;

  L46:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} iPlug_3 != 0;
    assume {:nonnull} iPlug_3 != 0;
    assume iPlug_3 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} oPlug_3 == 0;
    assume {:nonnull} iPlug_3 != 0;
    assume iPlug_3 > 0;
    havoc Tmp_621;
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    havoc Tmp_618;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1322} boogieTmp := corral_nondet();
    goto L51;

  L51:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} oPlug_3 != 0;
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    Retries := 4;
    goto L60;

  L60:
    call {:si_unique_call 1323} Retries, Tmp_619, ntStatus_39 := AvCmp_P2PConnect_loop_L60(Retries, Tmp_619, CmpData_7, Connect_9, ntStatus_39, oPlug_3);
    goto L60_last;

  L60_last:
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    havoc vslice_dummy_var_2120;
    call {:si_unique_call 1330} ntStatus_39 := AvCmp_P2PCR_oPlug(vslice_dummy_var_2120, CmpData_7, Connect_9, 0, 0);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} ntStatus_39 >= 0;
    goto L67;

  L67:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} ntStatus_39 >= 0;
    call {:si_unique_call 1324} ntStatus_39 := AvCmp_InitCipModule(BusExtension_43, Connect_9, Format_3);
    goto L68;

  L68:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} ntStatus_39 >= 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1325} vslice_dummy_var_185 := sdv_ExInterlockedInsertTailList(0, 0, 0);
    assume {:nonnull} pConnect != 0;
    assume pConnect > 0;
    goto L80;

  L80:
    call {:si_unique_call 1326} ExReleaseFastMutex(0);
    Tmp_616 := ntStatus_39;
    return;

  anon76_Then:
    assume {:partition} 0 > ntStatus_39;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} Connect_9 != 0;
    call {:si_unique_call 1327} sdv_ExFreePool(0);
    goto L84;

  L84:
    assume {:nonnull} pConnect != 0;
    assume pConnect > 0;
    goto L80;

  anon77_Then:
    assume {:partition} Connect_9 == 0;
    goto L84;

  anon75_Then:
    assume {:partition} 0 > ntStatus_39;
    goto L68;

  anon73_Then:
    assume {:partition} 0 > ntStatus_39;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} ntStatus_39 != -1073741823;
    Tmp_619 := Retries;
    Retries := Retries - 1;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} Tmp_619 != 0;
    goto anon86_Else_dummy;

  anon86_Else_dummy:
    assume false;
    return;

  anon86_Then:
    assume {:partition} Tmp_619 == 0;
    goto L56;

  L56:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} iPlug_3 != 0;
    assume {:nonnull} iPlug_3 != 0;
    assume iPlug_3 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    Retries_1 := 4;
    goto L92;

  L92:
    call {:si_unique_call 1328} Retries_1, ntStatus_39, Tmp_625 := AvCmp_P2PConnect_loop_L92(CmpData_7, Connect_9, Retries_1, ntStatus_39, Tmp_625, iPlug_3);
    goto L92_last;

  L92_last:
    assume {:nonnull} iPlug_3 != 0;
    assume iPlug_3 > 0;
    havoc vslice_dummy_var_2121;
    call {:si_unique_call 1331} ntStatus_39 := AvCmp_P2PCR_iPlug(vslice_dummy_var_2121, CmpData_7, Connect_9, 0, 0);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} ntStatus_39 < 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} ntStatus_39 != -1073741823;
    Tmp_625 := Retries_1;
    Retries_1 := Retries_1 - 1;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} Tmp_625 != 0;
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    assume false;
    return;

  anon87_Then:
    assume {:partition} Tmp_625 == 0;
    goto L67;

  anon80_Then:
    assume {:partition} ntStatus_39 == -1073741823;
    goto anon80_Then_dummy;

  anon80_Then_dummy:
    assume false;
    return;

  anon79_Then:
    assume {:partition} 0 <= ntStatus_39;
    goto L67;

  anon78_Then:
    goto L67;

  anon71_Then:
    assume {:partition} iPlug_3 == 0;
    goto L67;

  anon74_Then:
    assume {:partition} ntStatus_39 == -1073741823;
    goto anon74_Then_dummy;

  anon74_Then_dummy:
    assume false;
    return;

  anon72_Then:
    goto L56;

  anon68_Then:
    assume {:partition} oPlug_3 == 0;
    goto L56;

  anon70_Then:
    assume {:partition} oPlug_3 != 0;
    goto L51;

  anon69_Then:
    goto L51;

  anon65_Then:
    assume {:partition} iPlug_3 == 0;
    goto L51;

  anon67_Then:
    assume {:partition} iPlug_3 != 0;
    goto L46;

  anon66_Then:
    goto L46;

  anon64_Then:
    assume {:partition} oPlug_3 == 0;
    goto L46;

  anon63_Then:
    goto L39;

  L39:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} oPlug_3 != 0;
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L100;

  L100:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    goto L45;

  anon81_Then:
    goto L41;

  anon62_Then:
    assume {:partition} oPlug_3 == 0;
    goto L100;

  anon85_Then:
    assume {:partition} iPlug_3 == 0;
    goto L39;

  anon61_Then:
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    havoc Tmp_617;
    goto L37;

  anon60_Then:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1329} boogieTmp := corral_nondet();
    goto L34;

  anon84_Then:
    assume {:partition} oPlug_3 == 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} iPlug_3 == 0;
    ntStatus_39 := -1073741811;
    goto L67;

  anon59_Then:
    assume {:partition} iPlug_3 != 0;
    goto L31;

  anon83_Then:
    assume {:partition} Connect_9 == 0;
    ntStatus_39 := -1073741670;
    goto L67;

  anon82_Then:
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    havoc Tmp_620;
    assume {:nonnull} Tmp_620 != 0;
    assume Tmp_620 > 0;
    havoc CmpData_7;
    goto L13;
}



procedure {:origName "AvCmp_GetPlugPCR"} AvCmp_GetPlugPCR(actual_BusExtension_44: int, actual_Type_5: int, actual_Index_1: int, actual_Pcr_4: int) returns (Tmp_628: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_GetPlugPCR"} AvCmp_GetPlugPCR(actual_BusExtension_44: int, actual_Type_5: int, actual_Index_1: int, actual_Pcr_4: int) returns (Tmp_628: int)
{
  var {:pointer} pUlong: int;
  var {:scalar} sdv_490: int;
  var {:scalar} Tmp_630: int;
  var {:scalar} ntStatus_40: int;
  var {:scalar} Tmp_631: int;
  var {:pointer} BusExtension_44: int;
  var {:scalar} Type_5: int;
  var {:scalar} Index_1: int;
  var {:pointer} Pcr_4: int;

  anon0:
    BusExtension_44 := actual_BusExtension_44;
    Type_5 := actual_Type_5;
    Index_1 := actual_Index_1;
    Pcr_4 := actual_Pcr_4;
    ntStatus_40 := 0;
    pUlong := Pcr_4;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Index_1 > 30;
    ntStatus_40 := -1073741811;
    goto L11;

  L11:
    Tmp_628 := ntStatus_40;
    return;

  anon12_Then:
    assume {:partition} 30 >= Index_1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Type_5 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Type_5 == 1;
    Tmp_631 := -268433020 + Index_1 * 4;
    call {:si_unique_call 1332} ntStatus_40 := Av1394_QuadletRead(BusExtension_44, Pcr_4, Tmp_631);
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} ntStatus_40 >= 0;
    assume {:nonnull} pUlong != 0;
    assume pUlong > 0;
    goto L11;

  anon11_Then:
    assume {:partition} 0 > ntStatus_40;
    goto L11;

  anon10_Then:
    assume {:partition} Type_5 != 1;
    ntStatus_40 := -1073741811;
    goto L11;

  anon9_Then:
    assume {:partition} Type_5 == 0;
    Tmp_630 := -268433148 + Index_1 * 4;
    call {:si_unique_call 1333} ntStatus_40 := Av1394_QuadletRead(BusExtension_44, Pcr_4, Tmp_630);
    goto L20;
}



procedure {:origName "AvCmp_GetPlugHandle"} AvCmp_GetPlugHandle(actual_BusExtension_45: int, actual_Irp_47: int, actual_Request_18: int) returns (Tmp_632: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_632 == -1073741811 || Tmp_632 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_GetPlugHandle"} AvCmp_GetPlugHandle(actual_BusExtension_45: int, actual_Irp_47: int, actual_Request_18: int) returns (Tmp_632: int)
{
  var {:scalar} Tmp_633: int;
  var {:scalar} Tmp_634: int;
  var {:scalar} Tmp_635: int;
  var {:pointer} Tmp_636: int;
  var {:pointer} Tmp_637: int;
  var {:scalar} Tmp_638: int;
  var {:pointer} CmpData_8: int;
  var {:scalar} Status_35: int;
  var {:pointer} GetPlugHandle: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:scalar} Tmp_642: int;
  var {:scalar} Tmp_643: int;
  var {:pointer} Tmp_644: int;
  var {:pointer} Tmp_645: int;
  var {:pointer} Tmp_646: int;
  var {:pointer} BusExtension_45: int;
  var {:pointer} Request_18: int;

  anon0:
    BusExtension_45 := actual_BusExtension_45;
    Request_18 := actual_Request_18;
    call {:si_unique_call 1334} Tmp_636 := __HAVOC_malloc(992);
    call {:si_unique_call 1335} Tmp_637 := __HAVOC_malloc(992);
    call {:si_unique_call 1336} Tmp_640 := __HAVOC_malloc(992);
    call {:si_unique_call 1337} Tmp_645 := __HAVOC_malloc(992);
    Status_35 := 0;
    assume {:nonnull} Request_18 != 0;
    assume Request_18 > 0;
    GetPlugHandle := GetPlugHandle__AV_61883_REQUEST(Request_18);
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Status_35 := -1073741811;
    goto L11;

  L11:
    Tmp_632 := Status_35;
    return;

  anon43_Then:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L14;

  L14:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    havoc CmpData_8;
    goto L17;

  L17:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L19;

  L19:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} CmpData_8 != 0;
    assume CmpData_8 > 0;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_634;
    assume {:nonnull} CmpData_8 != 0;
    assume CmpData_8 > 0;
    havoc Tmp_640;
    assume {:nonnull} Tmp_640 != 0;
    assume Tmp_640 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_642;
    assume {:nonnull} CmpData_8 != 0;
    assume CmpData_8 > 0;
    havoc Tmp_637;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto L11;

  anon44_Then:
    goto L20;

  L20:
    Status_35 := -1073741811;
    goto L11;

  anon37_Then:
    goto L20;

  anon36_Then:
    goto L20;

  anon34_Then:
    assume {:nonnull} CmpData_8 != 0;
    assume CmpData_8 > 0;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_633;
    assume {:nonnull} CmpData_8 != 0;
    assume CmpData_8 > 0;
    havoc Tmp_636;
    assume {:nonnull} Tmp_636 != 0;
    assume Tmp_636 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_638;
    assume {:nonnull} CmpData_8 != 0;
    assume CmpData_8 > 0;
    havoc Tmp_645;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto L11;

  anon45_Then:
    goto L19;

  anon35_Then:
    goto L19;

  anon33_Then:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    havoc Tmp_641;
    assume {:nonnull} Tmp_641 != 0;
    assume Tmp_641 > 0;
    havoc CmpData_8;
    goto L17;

  anon31_Then:
    assume {:nonnull} Request_18 != 0;
    assume Request_18 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L30;

  L30:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_643;
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    havoc Tmp_646;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto L11;

  anon42_Then:
    goto L31;

  L31:
    Status_35 := -1073741811;
    goto L11;

  anon41_Then:
    goto L31;

  anon39_Then:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_635;
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    havoc Tmp_644;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto L11;

  anon40_Then:
    goto L30;

  anon38_Then:
    Status_35 := -1073741811;
    goto L11;

  anon32_Then:
    goto L14;
}



procedure {:origName "AvCmp_FreeCMPAddressRange"} AvCmp_FreeCMPAddressRange(actual_BusExtension_46: int, actual_CmpData_9: int, actual_PlugType_2: int) returns (Tmp_647: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_FreeCMPAddressRange"} AvCmp_FreeCMPAddressRange(actual_BusExtension_46: int, actual_CmpData_9: int, actual_PlugType_2: int) returns (Tmp_647: int)
{
  var {:pointer} Irp_48: int;
  var {:pointer} Irb_15: int;
  var {:scalar} StackSize_9: int;
  var {:pointer} sdv_493: int;
  var {:scalar} ntStatus_41: int;
  var {:pointer} Tmp_649: int;
  var {:pointer} BusExtension_46: int;
  var {:pointer} CmpData_9: int;
  var {:scalar} PlugType_2: int;
  var vslice_dummy_var_2122: int;

  anon0:
    BusExtension_46 := actual_BusExtension_46;
    CmpData_9 := actual_CmpData_9;
    PlugType_2 := actual_PlugType_2;
    ntStatus_41 := 0;
    Irp_48 := 0;
    Irb_15 := 0;
    assume {:nonnull} BusExtension_46 != 0;
    assume BusExtension_46 > 0;
    havoc Tmp_649;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    havoc StackSize_9;
    call {:si_unique_call 1338} Irp_48 := IoAllocateIrp(StackSize_9, 0);
    call {:si_unique_call 1339} sdv_493 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_15 := sdv_493;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irp_48 != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Irb_15 != 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} PlugType_2 != 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} PlugType_2 == 1;
    assume {:nonnull} CmpData_9 != 0;
    assume CmpData_9 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    assume {:nonnull} CmpData_9 != 0;
    assume CmpData_9 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    goto L28;

  L28:
    assume {:nonnull} BusExtension_46 != 0;
    assume BusExtension_46 > 0;
    havoc vslice_dummy_var_2122;
    call {:si_unique_call 1340} ntStatus_41 := Av_SubmitIrpSynch(vslice_dummy_var_2122, Irp_48, Irb_15);
    goto L35;

  L35:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irp_48 != 0;
    call {:si_unique_call 1341} IoFreeIrp(0);
    goto L36;

  L36:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irb_15 != 0;
    assume {:nonnull} BusExtension_46 != 0;
    assume BusExtension_46 > 0;
    call {:si_unique_call 1342} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_46), Irb_15);
    goto L40;

  L40:
    Tmp_647 := ntStatus_41;
    return;

  anon16_Then:
    assume {:partition} Irb_15 == 0;
    goto L40;

  anon15_Then:
    assume {:partition} Irp_48 == 0;
    goto L36;

  anon14_Then:
    assume {:partition} PlugType_2 != 1;
    goto L28;

  anon18_Then:
    assume {:partition} PlugType_2 == 0;
    assume {:nonnull} CmpData_9 != 0;
    assume CmpData_9 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    assume {:nonnull} CmpData_9 != 0;
    assume CmpData_9 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    goto L28;

  anon13_Then:
    assume {:partition} Irb_15 == 0;
    goto L20;

  L20:
    ntStatus_41 := -1073741670;
    goto L35;

  anon17_Then:
    assume {:partition} Irp_48 == 0;
    goto L20;
}



procedure {:origName "AvCmp_Disconnect"} AvCmp_Disconnect(actual_BusExtension_47: int, actual_Irp_49: int, actual_Request_19: int) returns (Tmp_650: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_Disconnect"} AvCmp_Disconnect(actual_BusExtension_47: int, actual_Irp_49: int, actual_Request_19: int) returns (Tmp_650: int)
{
  var {:pointer} Connect_10: int;
  var {:scalar} ntStatus_42: int;
  var {:pointer} Disconnect: int;
  var {:pointer} BusExtension_47: int;
  var {:pointer} Request_19: int;

  anon0:
    BusExtension_47 := actual_BusExtension_47;
    Request_19 := actual_Request_19;
    ntStatus_42 := 0;
    assume {:nonnull} Request_19 != 0;
    assume Request_19 > 0;
    Disconnect := Disconnect__AV_61883_REQUEST(Request_19);
    assume {:nonnull} Disconnect != 0;
    assume Disconnect > 0;
    havoc Connect_10;
    assume {:nonnull} Connect_10 != 0;
    assume Connect_10 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1343} ntStatus_42 := AvCmp_P2PDisconnect(BusExtension_47, Connect_10);
    goto L17;

  L17:
    Tmp_650 := ntStatus_42;
    return;

  anon3_Then:
    ntStatus_42 := -1073741637;
    goto L17;
}



procedure {:origName "AvCmp_CalculateBWUnits"} AvCmp_CalculateBWUnits(actual_Connect_11: int, actual_Payload: int, actual_OverheadId: int) returns (Tmp_652: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_CalculateBWUnits"} AvCmp_CalculateBWUnits(actual_Connect_11: int, actual_Payload: int, actual_OverheadId: int) returns (Tmp_652: int)
{
  var {:scalar} BandwidthUnits_1: int;
  var {:scalar} DR: int;
  var {:pointer} Connect_11: int;
  var {:scalar} Payload: int;
  var {:scalar} OverheadId: int;

  anon0:
    Connect_11 := actual_Connect_11;
    Payload := actual_Payload;
    OverheadId := actual_OverheadId;
    BandwidthUnits_1 := 0;
    assume {:nonnull} Connect_11 != 0;
    assume Connect_11 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Connect_11 != 0;
    assume Connect_11 > 0;
    havoc DR;
    goto L9;

  L9:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Payload > 4096;
    Payload := 1024;
    goto L10;

  L10:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} OverheadId != 0;
    BandwidthUnits_1 := OverheadId * 32 + (Payload + 3) * DR;
    goto L14;

  L14:
    Tmp_652 := BandwidthUnits_1;
    return;

  anon8_Then:
    assume {:partition} OverheadId == 0;
    BandwidthUnits_1 := 512 + (Payload + 3) * DR;
    goto L14;

  anon7_Then:
    assume {:partition} 4096 >= Payload;
    goto L10;

  anon9_Then:
    DR := 16;
    goto L9;
}



procedure {:origName "AvCmp_GetPlugMPR"} AvCmp_GetPlugMPR(actual_BusExtension_48: int, actual_oMPR_1: int, actual_iMPR_1: int) returns (Tmp_654: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_GetPlugMPR"} AvCmp_GetPlugMPR(actual_BusExtension_48: int, actual_oMPR_1: int, actual_iMPR_1: int) returns (Tmp_654: int)
{
  var {:pointer} pUlong1_1: int;
  var {:pointer} pUlong2_1: int;
  var {:scalar} sdv_497: int;
  var {:scalar} ntStatus_43: int;
  var {:scalar} sdv_499: int;
  var {:pointer} BusExtension_48: int;
  var {:pointer} oMPR_1: int;
  var {:pointer} iMPR_1: int;

  anon0:
    BusExtension_48 := actual_BusExtension_48;
    oMPR_1 := actual_oMPR_1;
    iMPR_1 := actual_iMPR_1;
    ntStatus_43 := 0;
    pUlong1_1 := oMPR_1;
    pUlong2_1 := iMPR_1;
    call {:si_unique_call 1344} ntStatus_43 := Av1394_QuadletRead(BusExtension_48, oMPR_1, -268433152);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_43 >= 0;
    goto L18;

  L18:
    assume {:nonnull} pUlong1_1 != 0;
    assume pUlong1_1 > 0;
    call {:si_unique_call 1345} ntStatus_43 := Av1394_QuadletRead(BusExtension_48, iMPR_1, -268433024);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} ntStatus_43 >= 0;
    goto L28;

  L28:
    assume {:nonnull} pUlong2_1 != 0;
    assume pUlong2_1 > 0;
    goto L29;

  L29:
    Tmp_654 := ntStatus_43;
    return;

  anon11_Then:
    assume {:partition} 0 > ntStatus_43;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} ntStatus_43 == -1073741668;
    assume {:nonnull} pUlong2_1 != 0;
    assume pUlong2_1 > 0;
    ntStatus_43 := 0;
    goto L28;

  anon12_Then:
    assume {:partition} ntStatus_43 != -1073741668;
    goto L29;

  anon9_Then:
    assume {:partition} 0 > ntStatus_43;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} ntStatus_43 == -1073741668;
    assume {:nonnull} pUlong1_1 != 0;
    assume pUlong1_1 > 0;
    ntStatus_43 := 0;
    goto L18;

  anon10_Then:
    assume {:partition} ntStatus_43 != -1073741668;
    goto L29;
}



procedure {:origName "AvCmp_P2PDisconnect"} AvCmp_P2PDisconnect(actual_BusExtension_49: int, actual_Connect_12: int) returns (Tmp_656: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_P2PDisconnect"} AvCmp_P2PDisconnect(actual_BusExtension_49: int, actual_Connect_12: int) returns (Tmp_656: int)
{
  var {:scalar} Pcr1_1: int;
  var {:scalar} MonitorInfo_3: int;
  var {:scalar} Tmp_657: int;
  var {:scalar} sdv_500: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:pointer} Tmp_660: int;
  var {:scalar} MonitorInfo_4: int;
  var {:scalar} sdv_502: int;
  var {:scalar} Tmp_661: int;
  var {:pointer} Tmp_662: int;
  var {:scalar} Tmp_663: int;
  var {:pointer} iPlug_4: int;
  var {:pointer} CmpData_10: int;
  var {:scalar} BandwidthUnits_2: int;
  var {:pointer} oPlug_4: int;
  var {:scalar} sdv_505: int;
  var {:scalar} Pcr2_1: int;
  var {:scalar} Tmp_664: int;
  var {:scalar} Tmp_665: int;
  var {:scalar} Pcr_5: int;
  var {:scalar} BandwidthUnits_3: int;
  var {:pointer} iPCR_3: int;
  var {:scalar} ntStatus_44: int;
  var {:scalar} PcrOrg_2: int;
  var {:pointer} CurrMonitor_3: int;
  var {:scalar} BandwidthUnits_4: int;
  var {:pointer} Tmp_666: int;
  var {:pointer} CurrMonitor_4: int;
  var {:scalar} sdv_513: int;
  var {:scalar} Pcr_6: int;
  var {:pointer} Tmp_667: int;
  var {:scalar} Irql_23: int;
  var {:pointer} oPCR_2: int;
  var {:pointer} AvAdapterData_12: int;
  var {:pointer} AvAdapterData_13: int;
  var {:scalar} Tmp_668: int;
  var {:pointer} BusExtension_49: int;
  var {:pointer} Connect_12: int;
  var boogieTmp: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_2123: int;
  var vslice_dummy_var_2124: int;
  var vslice_dummy_var_2125: int;
  var vslice_dummy_var_2126: int;
  var vslice_dummy_var_2127: int;
  var vslice_dummy_var_2128: int;
  var vslice_dummy_var_2129: int;
  var vslice_dummy_var_2130: int;
  var vslice_dummy_var_2131: int;
  var vslice_dummy_var_2132: int;
  var vslice_dummy_var_2133: int;
  var vslice_dummy_var_2134: int;
  var vslice_dummy_var_2135: int;
  var vslice_dummy_var_2136: int;
  var vslice_dummy_var_2137: int;
  var vslice_dummy_var_2138: int;
  var vslice_dummy_var_2139: int;
  var vslice_dummy_var_2140: int;
  var vslice_dummy_var_2141: int;
  var vslice_dummy_var_2142: int;

  anon0:
    call {:si_unique_call 1346} Pcr1_1 := __HAVOC_malloc(60);
    call {:si_unique_call 1347} MonitorInfo_3 := __HAVOC_malloc(76);
    call {:si_unique_call 1348} MonitorInfo_4 := __HAVOC_malloc(76);
    call {:si_unique_call 1349} Pcr2_1 := __HAVOC_malloc(60);
    call {:si_unique_call 1350} Pcr_5 := __HAVOC_malloc(60);
    call {:si_unique_call 1351} PcrOrg_2 := __HAVOC_malloc(60);
    call {:si_unique_call 1352} Pcr_6 := __HAVOC_malloc(60);
    BusExtension_49 := actual_BusExtension_49;
    Connect_12 := actual_Connect_12;
    call {:si_unique_call 1353} Tmp_658 := __HAVOC_malloc(3720);
    call {:si_unique_call 1354} Tmp_659 := __HAVOC_malloc(3720);
    call {:si_unique_call 1355} Tmp_666 := __HAVOC_malloc(3720);
    call {:si_unique_call 1356} Tmp_667 := __HAVOC_malloc(3720);
    ntStatus_44 := 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc iPlug_4;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc oPlug_4;
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    havoc CmpData_10;
    goto L18;

  L18:
    call {:si_unique_call 1357} ExAcquireFastMutex(0);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} Connect_12 != 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} oPlug_4 != 0;
    goto L27;

  L27:
    call {:si_unique_call 1358} Tmp_662 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    call {:si_unique_call 1359} sdv_KeAcquireSpinLock(0, Tmp_662);
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    havoc Irql_23;
    call {:si_unique_call 1360} vslice_dummy_var_186 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1361} sdv_KeReleaseSpinLock(0, Irql_23);
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc vslice_dummy_var_2123;
    call {:si_unique_call 1362} vslice_dummy_var_187 := AvCip_Destroy(vslice_dummy_var_2123);
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    goto L38;

  L38:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} oPlug_4 != 0;
    goto L43;

  L43:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} iPlug_4 != 0;
    goto L46;

  L46:
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} oPlug_4 != 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    havoc vslice_dummy_var_2124;
    havoc vslice_dummy_var_2125;
    havoc vslice_dummy_var_2126;
    call {:si_unique_call 1363} ntStatus_44 := AvCmp_GetPlugPCR(vslice_dummy_var_2124, vslice_dummy_var_2125, vslice_dummy_var_2126, Pcr1_1);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} ntStatus_44 < 0;
    goto L73;

  L73:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} Connect_12 != 0;
    call {:si_unique_call 1364} sdv_ExFreePool(0);
    goto L74;

  L74:
    call {:si_unique_call 1365} ExReleaseFastMutex(0);
    Tmp_656 := ntStatus_44;
    return;

  anon119_Then:
    assume {:partition} Connect_12 == 0;
    goto L74;

  anon115_Then:
    assume {:partition} 0 <= ntStatus_44;
    assume {:nonnull} Pcr1_1 != 0;
    assume Pcr1_1 > 0;
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    havoc vslice_dummy_var_2127;
    havoc vslice_dummy_var_2128;
    havoc vslice_dummy_var_2129;
    call {:si_unique_call 1366} ntStatus_44 := AvCmp_SetPlugPCR(vslice_dummy_var_2127, vslice_dummy_var_2128, vslice_dummy_var_2129, Pcr1_1, Pcr2_1, PcrOrg_2, 0, 0);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} ntStatus_44 < 0;
    goto L73;

  anon116_Then:
    assume {:partition} 0 <= ntStatus_44;
    assume {:nonnull} Pcr1_1 != 0;
    assume Pcr1_1 > 0;
    assume {:nonnull} PcrOrg_2 != 0;
    assume PcrOrg_2 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    ntStatus_44 := -1073741823;
    goto L73;

  anon117_Then:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} iPlug_4 != 0;
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    havoc Tmp_663;
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    havoc Tmp_667;
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    iPCR_3 := iPCR__AV_PCR(Tmp_667 + Tmp_663 * 120);
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    havoc Tmp_665;
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    havoc Tmp_666;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Pcr_6 != 0;
    assume Pcr_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    havoc AvAdapterData_13;
    CurrMonitor_4 := 0;
    call {:si_unique_call 1367} Tmp_662 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    call {:si_unique_call 1368} sdv_KeAcquireSpinLock(0, Tmp_662);
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    havoc Irql_23;
    call {:si_unique_call 1369} sdv_505 := sdv_IsListEmpty(0);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} sdv_505 != 0;
    goto L107;

  L107:
    call {:si_unique_call 1370} sdv_KeReleaseSpinLock(0, Irql_23);
    goto L81;

  L81:
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    BandwidthUnits_4 := 0;
    call {:si_unique_call 1371} ntStatus_44 := Av1394_FreeChannel(BusExtension_49, Connect_12);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    call {:si_unique_call 1372} boogieTmp := corral_nondet();
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    havoc vslice_dummy_var_2130;
    havoc vslice_dummy_var_2131;
    call {:si_unique_call 1373} BandwidthUnits_4 := AvCmp_CalculateBWUnits(Connect_12, vslice_dummy_var_2130, vslice_dummy_var_2131);
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc vslice_dummy_var_2132;
    call {:si_unique_call 1374} ntStatus_44 := Av1394_FreeBandwidth(BusExtension_49, Connect_12, vslice_dummy_var_2132, BandwidthUnits_4);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} ntStatus_44 < 0;
    goto L73;

  anon127_Then:
    assume {:partition} 0 <= ntStatus_44;
    goto L49;

  L49:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} iPlug_4 != 0;
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    oPlug_4 := 0;
    goto L147;

  L147:
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    havoc vslice_dummy_var_2133;
    havoc vslice_dummy_var_2134;
    havoc vslice_dummy_var_2135;
    call {:si_unique_call 1375} ntStatus_44 := AvCmp_GetPlugPCR(vslice_dummy_var_2133, vslice_dummy_var_2134, vslice_dummy_var_2135, Pcr1_1);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} Pcr1_1 != 0;
    assume Pcr1_1 > 0;
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    goto L160;

  L160:
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    havoc vslice_dummy_var_2136;
    havoc vslice_dummy_var_2137;
    havoc vslice_dummy_var_2138;
    call {:si_unique_call 1376} ntStatus_44 := AvCmp_SetPlugPCR(vslice_dummy_var_2136, vslice_dummy_var_2137, vslice_dummy_var_2138, Pcr1_1, Pcr2_1, PcrOrg_2, 0, 0);
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} Pcr1_1 != 0;
    assume Pcr1_1 > 0;
    assume {:nonnull} PcrOrg_2 != 0;
    assume PcrOrg_2 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    ntStatus_44 := -1073741823;
    goto L73;

  anon134_Then:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} oPlug_4 != 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    havoc Tmp_661;
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    havoc Tmp_659;
    assume {:nonnull} Tmp_659 != 0;
    assume Tmp_659 > 0;
    oPCR_2 := oPCR__AV_PCR(Tmp_659 + Tmp_661 * 120);
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    havoc Tmp_657;
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    havoc Tmp_658;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto L184;

  L184:
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    havoc AvAdapterData_12;
    CurrMonitor_3 := 0;
    call {:si_unique_call 1377} Tmp_662 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    call {:si_unique_call 1378} sdv_KeAcquireSpinLock(0, Tmp_662);
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    havoc Irql_23;
    call {:si_unique_call 1379} sdv_502 := sdv_IsListEmpty(0);
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} sdv_502 != 0;
    goto L198;

  L198:
    call {:si_unique_call 1380} sdv_KeReleaseSpinLock(0, Irql_23);
    goto L73;

  anon140_Then:
    assume {:partition} sdv_502 == 0;
    goto L197;

  L197:
    call {:si_unique_call 1381} CurrMonitor_3 := AvCmp_P2PDisconnect_loop_L197(MonitorInfo_4, oPlug_4, CurrMonitor_3, oPCR_2, AvAdapterData_12);
    goto L197_last;

  L197_last:
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} CurrMonitor_3 != 0;
    assume {:nonnull} CurrMonitor_3 != 0;
    assume CurrMonitor_3 > 0;
    havoc CurrMonitor_3;
    goto L203;

  L203:
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} CurrMonitor_3 != 0;
    assume CurrMonitor_3 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} CurrMonitor_3 != 0;
    assume CurrMonitor_3 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} CurrMonitor_3 != 0;
    assume CurrMonitor_3 > 0;
    goto L209;

  L209:
    goto anon142_Then, anon142_Else;

  anon142_Else:
    goto L198;

  anon142_Then:
    goto anon142_Then_dummy;

  anon142_Then_dummy:
    assume false;
    return;

  anon153_Then:
    goto L209;

  anon141_Then:
    assume {:partition} CurrMonitor_3 == 0;
    assume {:nonnull} AvAdapterData_12 != 0;
    assume AvAdapterData_12 > 0;
    havoc CurrMonitor_3;
    goto L203;

  anon139_Then:
    goto L73;

  anon152_Then:
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    BandwidthUnits_2 := 0;
    call {:si_unique_call 1382} ntStatus_44 := Av1394_FreeChannel(BusExtension_49, Connect_12);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    call {:si_unique_call 1383} boogieTmp := corral_nondet();
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    havoc vslice_dummy_var_2139;
    havoc vslice_dummy_var_2140;
    call {:si_unique_call 1384} BandwidthUnits_2 := AvCmp_CalculateBWUnits(Connect_12, vslice_dummy_var_2139, vslice_dummy_var_2140);
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc vslice_dummy_var_2141;
    call {:si_unique_call 1385} ntStatus_44 := Av1394_FreeBandwidth(BusExtension_49, Connect_12, vslice_dummy_var_2141, BandwidthUnits_2);
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} ntStatus_44 >= 0;
    goto L184;

  anon144_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon143_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon138_Then:
    goto L184;

  anon137_Then:
    goto L170;

  L170:
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} oPlug_4 != 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    goto L232;

  L232:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    BandwidthUnits_3 := 0;
    call {:si_unique_call 1386} ntStatus_44 := Av1394_FreeChannel(BusExtension_49, Connect_12);
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc Tmp_668;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc Tmp_664;
    call {:si_unique_call 1387} BandwidthUnits_3 := AvCmp_CalculateBWUnits(Connect_12, Tmp_664, Tmp_668);
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc vslice_dummy_var_2142;
    call {:si_unique_call 1388} ntStatus_44 := Av1394_FreeBandwidth(BusExtension_49, Connect_12, vslice_dummy_var_2142, BandwidthUnits_3);
    goto L73;

  anon147_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon145_Then:
    goto L73;

  anon146_Then:
    goto L73;

  anon136_Then:
    assume {:partition} oPlug_4 == 0;
    goto L232;

  anon135_Then:
    assume {:partition} oPlug_4 == 0;
    goto L170;

  anon133_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon151_Then:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto L160;

  anon132_Then:
    goto L160;

  anon150_Then:
    ntStatus_44 := -1073741811;
    goto L73;

  anon131_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon130_Then:
    goto L147;

  anon129_Then:
    goto L73;

  anon128_Then:
    goto L73;

  anon112_Then:
    assume {:partition} iPlug_4 == 0;
    goto L73;

  anon126_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon125_Then:
    goto L49;

  anon120_Then:
    goto L49;

  anon122_Then:
    assume {:partition} sdv_505 == 0;
    goto L106;

  L106:
    call {:si_unique_call 1389} CurrMonitor_4 := AvCmp_P2PDisconnect_loop_L106(MonitorInfo_3, iPlug_4, iPCR_3, CurrMonitor_4, AvAdapterData_13);
    goto L106_last;

  L106_last:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} CurrMonitor_4 != 0;
    assume {:nonnull} CurrMonitor_4 != 0;
    assume CurrMonitor_4 > 0;
    havoc CurrMonitor_4;
    goto L112;

  L112:
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} CurrMonitor_4 != 0;
    assume CurrMonitor_4 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} CurrMonitor_4 != 0;
    assume CurrMonitor_4 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} CurrMonitor_4 != 0;
    assume CurrMonitor_4 > 0;
    goto L118;

  L118:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    goto L107;

  anon124_Then:
    goto anon124_Then_dummy;

  anon124_Then_dummy:
    assume false;
    return;

  anon156_Then:
    goto L118;

  anon123_Then:
    assume {:partition} CurrMonitor_4 == 0;
    assume {:nonnull} AvAdapterData_13 != 0;
    assume AvAdapterData_13 > 0;
    havoc CurrMonitor_4;
    goto L112;

  anon155_Then:
    goto L81;

  anon121_Then:
    goto L81;

  anon118_Then:
    assume {:partition} iPlug_4 == 0;
    goto L81;

  anon154_Then:
    ntStatus_44 := -1073741811;
    goto L73;

  anon114_Then:
    goto L49;

  anon113_Then:
    goto L49;

  anon111_Then:
    assume {:partition} oPlug_4 == 0;
    goto L49;

  anon110_Then:
    assume {:partition} iPlug_4 == 0;
    goto L46;

  anon109_Then:
    assume {:partition} oPlug_4 == 0;
    goto L43;

  anon149_Then:
    goto L38;

  anon107_Then:
    assume {:partition} oPlug_4 == 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} iPlug_4 == 0;
    ntStatus_44 := -1073741811;
    goto L73;

  anon108_Then:
    assume {:partition} iPlug_4 != 0;
    goto L27;

  anon106_Then:
    ntStatus_44 := -1073741811;
    goto L73;

  anon105_Then:
    assume {:partition} Connect_12 == 0;
    ntStatus_44 := -1073741811;
    goto L73;

  anon148_Then:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    havoc Tmp_660;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    havoc CmpData_10;
    goto L18;
}



procedure {:origName "AvCmp_DestroyCmpData"} AvCmp_DestroyCmpData(actual_BusExtension_50: int, actual_CmpData_11: int) returns (Tmp_669: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} Tmp_669 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_DestroyCmpData"} AvCmp_DestroyCmpData(actual_BusExtension_50: int, actual_CmpData_11: int) returns (Tmp_669: int)
{
  var {:scalar} ntStatus_45: int;
  var {:pointer} BusExtension_50: int;
  var {:pointer} CmpData_11: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;

  anon0:
    BusExtension_50 := actual_BusExtension_50;
    CmpData_11 := actual_CmpData_11;
    ntStatus_45 := 0;
    call {:si_unique_call 1390} vslice_dummy_var_189 := AvCmp_FreeCMPAddressRange(BusExtension_50, CmpData_11, 0);
    call {:si_unique_call 1391} vslice_dummy_var_188 := AvCmp_FreeCMPAddressRange(BusExtension_50, CmpData_11, 1);
    assume {:nonnull} CmpData_11 != 0;
    assume CmpData_11 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 1392} IoFreeMdl(0);
    goto L12;

  L12:
    assume {:nonnull} CmpData_11 != 0;
    assume CmpData_11 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 1393} IoFreeMdl(0);
    goto L16;

  L16:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} CmpData_11 != 0;
    call {:si_unique_call 1394} sdv_ExFreePool(0);
    goto L20;

  L20:
    Tmp_669 := ntStatus_45;
    return;

  anon9_Then:
    assume {:partition} CmpData_11 == 0;
    goto L20;

  anon8_Then:
    goto L16;

  anon7_Then:
    goto L12;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_190: int;

  anon0:
    call {:si_unique_call 1395} vslice_dummy_var_190 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "AvCmp_CreatePlug"} AvCmp_CreatePlug(actual_PdoExtension_13: int, actual_Irp_50: int, actual_Request_20: int) returns (Tmp_673: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_673 == -1073741670 || Tmp_673 == 0 || Tmp_673 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_CreatePlug"} AvCmp_CreatePlug(actual_PdoExtension_13: int, actual_Irp_50: int, actual_Request_20: int) returns (Tmp_673: int)
{
  var {:scalar} Tmp_674: int;
  var {:scalar} MonitorInfo_5: int;
  var {:pointer} Tmp_675: int;
  var {:scalar} Tmp_676: int;
  var {:pointer} Tmp_677: int;
  var {:scalar} Tmp_678: int;
  var {:scalar} u_2: int;
  var {:scalar} PlugNum_4: int;
  var {:pointer} Tmp_679: int;
  var {:scalar} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:scalar} Tmp_682: int;
  var {:scalar} sdv_521: int;
  var {:pointer} CmpData_12: int;
  var {:scalar} Tmp_683: int;
  var {:pointer} iPCR_4: int;
  var {:scalar} sdv_522: int;
  var {:scalar} ntStatus_46: int;
  var {:pointer} CurrMonitor_5: int;
  var {:scalar} sdv_523: int;
  var {:pointer} Plug_4: int;
  var {:scalar} sdv_524: int;
  var {:scalar} sdv_525: int;
  var {:pointer} Tmp_684: int;
  var {:scalar} Pcr_7: int;
  var {:pointer} oPCR_3: int;
  var {:scalar} Irql_24: int;
  var {:pointer} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_687: int;
  var {:pointer} BusExtension_51: int;
  var {:pointer} CreatePlug: int;
  var {:pointer} AvAdapterData_14: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:pointer} Tmp_690: int;
  var {:scalar} Tmp_691: int;
  var {:scalar} Tmp_692: int;
  var {:pointer} PdoExtension_13: int;
  var {:pointer} Request_20: int;

  anon0:
    call {:si_unique_call 1396} MonitorInfo_5 := __HAVOC_malloc(76);
    call {:si_unique_call 1397} u_2 := __HAVOC_malloc(28);
    call {:si_unique_call 1398} Pcr_7 := __HAVOC_malloc(60);
    PdoExtension_13 := actual_PdoExtension_13;
    Request_20 := actual_Request_20;
    call {:si_unique_call 1399} Tmp_675 := __HAVOC_malloc(3720);
    call {:si_unique_call 1400} Tmp_677 := __HAVOC_malloc(992);
    call {:si_unique_call 1401} Tmp_681 := __HAVOC_malloc(992);
    call {:si_unique_call 1402} Tmp_684 := __HAVOC_malloc(3720);
    call {:si_unique_call 1403} Tmp_685 := __HAVOC_malloc(992);
    call {:si_unique_call 1404} Tmp_686 := __HAVOC_malloc(3720);
    call {:si_unique_call 1405} Tmp_687 := __HAVOC_malloc(992);
    call {:si_unique_call 1406} Tmp_689 := __HAVOC_malloc(3720);
    ntStatus_46 := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_688;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    havoc BusExtension_51;
    assume {:nonnull} Request_20 != 0;
    assume Request_20 > 0;
    CreatePlug := CreatePlug__AV_61883_REQUEST(Request_20);
    PlugNum_4 := 0;
    Plug_4 := 0;
    assume {:nonnull} BusExtension_51 != 0;
    assume BusExtension_51 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} BusExtension_51 != 0;
    assume BusExtension_51 > 0;
    havoc CmpData_12;
    goto L21;

  L21:
    call {:si_unique_call 1407} Tmp_679 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    call {:si_unique_call 1408} sdv_KeAcquireSpinLock(0, Tmp_679);
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    havoc Irql_24;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    PlugNum_4 := 0;
    goto L98;

  L98:
    call {:si_unique_call 1409} PlugNum_4, Tmp_683, Tmp_687 := AvCmp_CreatePlug_loop_L98(PlugNum_4, CmpData_12, Tmp_683, Tmp_687);
    goto L98_last;

  L98_last:
    Tmp_683 := PlugNum_4;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_687;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    PlugNum_4 := PlugNum_4 + 1;
    goto anon48_Else_dummy;

  anon48_Else_dummy:
    assume false;
    return;

  anon48_Then:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} PlugNum_4 > 30;
    ntStatus_46 := -1073741670;
    goto L36;

  L36:
    call {:si_unique_call 1410} sdv_KeReleaseSpinLock(0, Irql_24);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} ntStatus_46 != 0;
    goto L41;

  L41:
    Tmp_673 := ntStatus_46;
    return;

  anon37_Then:
    assume {:partition} ntStatus_46 == 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} BusExtension_51 != 0;
    assume BusExtension_51 > 0;
    havoc AvAdapterData_14;
    CurrMonitor_5 := 0;
    call {:si_unique_call 1411} Tmp_679 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    call {:si_unique_call 1412} sdv_KeAcquireSpinLock(0, Tmp_679);
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    havoc Irql_24;
    call {:si_unique_call 1413} sdv_521 := sdv_IsListEmpty(0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_521 != 0;
    goto L55;

  L55:
    call {:si_unique_call 1414} sdv_KeReleaseSpinLock(0, Irql_24);
    goto L41;

  anon39_Then:
    assume {:partition} sdv_521 == 0;
    goto L54;

  L54:
    call {:si_unique_call 1415} CurrMonitor_5 := AvCmp_CreatePlug_loop_L54(MonitorInfo_5, PlugNum_4, CurrMonitor_5, Plug_4, Pcr_7, AvAdapterData_14);
    goto L54_last;

  L54_last:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} CurrMonitor_5 != 0;
    assume {:nonnull} CurrMonitor_5 != 0;
    assume CurrMonitor_5 > 0;
    havoc CurrMonitor_5;
    goto L60;

  L60:
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} CurrMonitor_5 != 0;
    assume CurrMonitor_5 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    goto L67;

  L67:
    assume {:nonnull} CurrMonitor_5 != 0;
    assume CurrMonitor_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} CurrMonitor_5 != 0;
    assume CurrMonitor_5 > 0;
    goto L68;

  L68:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L55;

  anon42_Then:
    goto anon42_Then_dummy;

  anon42_Then_dummy:
    assume false;
    return;

  anon41_Then:
    goto L68;

  anon47_Then:
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    goto L67;

  anon40_Then:
    assume {:partition} CurrMonitor_5 == 0;
    assume {:nonnull} AvAdapterData_14 != 0;
    assume AvAdapterData_14 > 0;
    havoc CurrMonitor_5;
    goto L60;

  anon38_Then:
    goto L41;

  anon43_Then:
    assume {:partition} 30 >= PlugNum_4;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    goto L104;

  L104:
    Tmp_692 := PlugNum_4;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_685;
    Plug_4 := Tmp_685 + Tmp_692 * 32;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    Tmp_691 := PlugNum_4;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_675;
    assume {:nonnull} Tmp_675 != 0;
    assume Tmp_675 > 0;
    oPCR_3 := oPCR__AV_PCR(Tmp_675 + Tmp_691 * 120);
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    Tmp_678 := PlugNum_4;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_684;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    goto L36;

  anon44_Then:
    goto L104;

  anon33_Then:
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    PlugNum_4 := 0;
    goto L30;

  L30:
    call {:si_unique_call 1416} PlugNum_4, Tmp_681, Tmp_682 := AvCmp_CreatePlug_loop_L30(PlugNum_4, Tmp_681, Tmp_682, CmpData_12);
    goto L30_last;

  L30_last:
    Tmp_682 := PlugNum_4;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    PlugNum_4 := PlugNum_4 + 1;
    goto anon46_Else_dummy;

  anon46_Else_dummy:
    assume false;
    return;

  anon46_Then:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} PlugNum_4 > 30;
    ntStatus_46 := -1073741670;
    goto L36;

  anon35_Then:
    assume {:partition} 30 >= PlugNum_4;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    goto L73;

  L73:
    Tmp_674 := PlugNum_4;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_677;
    Plug_4 := Tmp_677 + Tmp_674 * 32;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    Tmp_676 := PlugNum_4;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_689;
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    iPCR_4 := iPCR__AV_PCR(Tmp_689 + Tmp_676 * 120);
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    Tmp_680 := PlugNum_4;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_686;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    goto L36;

  anon36_Then:
    goto L73;

  anon34_Then:
    ntStatus_46 := -1073741811;
    goto L36;

  anon45_Then:
    assume {:nonnull} BusExtension_51 != 0;
    assume BusExtension_51 > 0;
    havoc Tmp_690;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    havoc CmpData_12;
    goto L21;
}



procedure {:origName "AvCmp_P2PCR_iPlug"} AvCmp_P2PCR_iPlug(actual_BusExtension_52: int, actual_CmpData_13: int, actual_Connect_13: int, actual_bReconnect_1: int, actual_Generation_2: int) returns (Tmp_693: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_P2PCR_iPlug"} AvCmp_P2PCR_iPlug(actual_BusExtension_52: int, actual_CmpData_13: int, actual_Connect_13: int, actual_bReconnect_1: int, actual_Generation_2: int) returns (Tmp_693: int)
{
  var {:scalar} Pcr1_2: int;
  var {:pointer} Tmp_694: int;
  var {:scalar} MonitorInfo_6: int;
  var {:pointer} Tmp_695: int;
  var {:scalar} Tmp_697: int;
  var {:scalar} Tmp_698: int;
  var {:scalar} bBandwidth_1: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Tmp_701: int;
  var {:scalar} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:scalar} Tmp_705: int;
  var {:pointer} iPlug_5: int;
  var {:pointer} Tmp_706: int;
  var {:scalar} Tmp_707: int;
  var {:scalar} Tmp_708: int;
  var {:pointer} oPlug_5: int;
  var {:scalar} Tmp_709: int;
  var {:scalar} Tmp_711: int;
  var {:scalar} Tmp_712: int;
  var {:pointer} Tmp_713: int;
  var {:scalar} Tmp_714: int;
  var {:scalar} Pcr2_2: int;
  var {:scalar} Tmp_715: int;
  var {:pointer} Tmp_716: int;
  var {:scalar} sdv_531: int;
  var {:scalar} ntStatus_47: int;
  var {:scalar} PcrOrg_3: int;
  var {:scalar} Tmp_717: int;
  var {:scalar} BandwidthUnits_5: int;
  var {:scalar} Tmp_718: int;
  var {:pointer} CurrMonitor_6: int;
  var {:pointer} Tmp_719: int;
  var {:scalar} Pcr_8: int;
  var {:pointer} Tmp_720: int;
  var {:scalar} bChannel_1: int;
  var {:pointer} Tmp_721: int;
  var {:scalar} Irql_25: int;
  var {:scalar} sdv_539: int;
  var {:pointer} oPCR_4: int;
  var {:pointer} AvAdapterData_15: int;
  var {:scalar} Tmp_722: int;
  var {:scalar} Tmp_723: int;
  var {:scalar} Tmp_724: int;
  var {:scalar} Tmp_725: int;
  var {:pointer} BusExtension_52: int;
  var {:pointer} CmpData_13: int;
  var {:pointer} Connect_13: int;
  var {:scalar} bReconnect_1: int;
  var {:scalar} Generation_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_2143: int;
  var vslice_dummy_var_2144: int;
  var vslice_dummy_var_2145: int;
  var vslice_dummy_var_2146: int;
  var vslice_dummy_var_2147: int;
  var vslice_dummy_var_2148: int;
  var vslice_dummy_var_2149: int;
  var vslice_dummy_var_2150: int;
  var vslice_dummy_var_2151: int;
  var vslice_dummy_var_2152: int;
  var vslice_dummy_var_2153: int;
  var vslice_dummy_var_2154: int;

  anon0:
    call {:si_unique_call 1417} Pcr1_2 := __HAVOC_malloc(60);
    call {:si_unique_call 1418} MonitorInfo_6 := __HAVOC_malloc(76);
    call {:si_unique_call 1419} Pcr2_2 := __HAVOC_malloc(60);
    call {:si_unique_call 1420} PcrOrg_3 := __HAVOC_malloc(60);
    call {:si_unique_call 1421} Pcr_8 := __HAVOC_malloc(60);
    BusExtension_52 := actual_BusExtension_52;
    CmpData_13 := actual_CmpData_13;
    Connect_13 := actual_Connect_13;
    bReconnect_1 := actual_bReconnect_1;
    Generation_2 := actual_Generation_2;
    call {:si_unique_call 1422} Tmp_694 := __HAVOC_malloc(3720);
    call {:si_unique_call 1423} Tmp_695 := __HAVOC_malloc(3720);
    call {:si_unique_call 1424} vslice_dummy_var_193 := __HAVOC_malloc(3720);
    call {:si_unique_call 1425} Tmp_699 := __HAVOC_malloc(3720);
    call {:si_unique_call 1426} Tmp_701 := __HAVOC_malloc(3720);
    call {:si_unique_call 1427} Tmp_703 := __HAVOC_malloc(3720);
    call {:si_unique_call 1428} vslice_dummy_var_194 := __HAVOC_malloc(3720);
    call {:si_unique_call 1429} Tmp_706 := __HAVOC_malloc(3720);
    call {:si_unique_call 1430} Tmp_713 := __HAVOC_malloc(3720);
    call {:si_unique_call 1431} Tmp_719 := __HAVOC_malloc(3720);
    call {:si_unique_call 1432} Tmp_720 := __HAVOC_malloc(3720);
    call {:si_unique_call 1433} Tmp_721 := __HAVOC_malloc(3720);
    ntStatus_47 := 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc oPlug_5;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc iPlug_5;
    BandwidthUnits_5 := 0;
    bChannel_1 := 0;
    bBandwidth_1 := 0;
    assume {:nonnull} BusExtension_52 != 0;
    assume BusExtension_52 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto L23;

  L23:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} ntStatus_47 >= 0;
    goto L25;

  L25:
    Tmp_693 := ntStatus_47;
    return;

  anon84_Then:
    assume {:partition} 0 > ntStatus_47;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} bChannel_1 == 1;
    call {:si_unique_call 1434} vslice_dummy_var_191 := Av1394_FreeChannel(BusExtension_52, Connect_13);
    goto L26;

  L26:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} bBandwidth_1 == 1;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc vslice_dummy_var_2143;
    call {:si_unique_call 1435} vslice_dummy_var_192 := Av1394_FreeBandwidth(BusExtension_52, Connect_13, vslice_dummy_var_2143, BandwidthUnits_5);
    goto L25;

  anon86_Then:
    assume {:partition} bBandwidth_1 != 1;
    goto L25;

  anon85_Then:
    assume {:partition} bChannel_1 != 1;
    goto L26;

  anon113_Then:
    assume {:nonnull} BusExtension_52 != 0;
    assume BusExtension_52 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    oPlug_5 := 0;
    goto L33;

  L33:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} bReconnect_1 == 1;
    assume {:nonnull} iPlug_5 != 0;
    assume iPlug_5 > 0;
    havoc vslice_dummy_var_2144;
    havoc vslice_dummy_var_2145;
    call {:si_unique_call 1436} ntStatus_47 := Av1394_ReadPCR(BusExtension_52, Generation_2, vslice_dummy_var_2144, vslice_dummy_var_2145, Pcr1_2);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} ntStatus_47 >= 0;
    goto L44;

  L44:
    assume {:nonnull} Pcr1_2 != 0;
    assume Pcr1_2 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} oPlug_5 != 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    ntStatus_47 := -1073741790;
    goto L23;

  anon94_Then:
    goto L52;

  L52:
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto L56;

  L56:
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} bReconnect_1 == 1;
    assume {:nonnull} iPlug_5 != 0;
    assume iPlug_5 > 0;
    havoc vslice_dummy_var_2146;
    havoc vslice_dummy_var_2147;
    call {:si_unique_call 1437} ntStatus_47 := AvCmp_SetPlugPCR(BusExtension_52, vslice_dummy_var_2146, vslice_dummy_var_2147, Pcr1_2, Pcr2_2, PcrOrg_3, 1, Generation_2);
    goto L65;

  L65:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} ntStatus_47 >= 0;
    assume {:nonnull} Pcr1_2 != 0;
    assume Pcr1_2 > 0;
    assume {:nonnull} PcrOrg_3 != 0;
    assume PcrOrg_3 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    ntStatus_47 := -1073741823;
    goto L23;

  anon96_Then:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} oPlug_5 != 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_714;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    havoc Tmp_720;
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    oPCR_4 := oPCR__AV_PCR(Tmp_720 + Tmp_714 * 120);
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    call {:si_unique_call 1438} boogieTmp := corral_nondet();
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_722;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    havoc Tmp_694;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} BusExtension_52 != 0;
    assume BusExtension_52 > 0;
    havoc AvAdapterData_15;
    CurrMonitor_6 := 0;
    call {:si_unique_call 1439} Tmp_716 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_716 != 0;
    assume Tmp_716 > 0;
    call {:si_unique_call 1440} sdv_KeAcquireSpinLock(0, Tmp_716);
    assume {:nonnull} Tmp_716 != 0;
    assume Tmp_716 > 0;
    havoc Irql_25;
    call {:si_unique_call 1441} sdv_531 := sdv_IsListEmpty(0);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} sdv_531 != 0;
    goto L99;

  L99:
    call {:si_unique_call 1442} sdv_KeReleaseSpinLock(0, Irql_25);
    goto L23;

  anon99_Then:
    assume {:partition} sdv_531 == 0;
    goto L98;

  L98:
    call {:si_unique_call 1443} CurrMonitor_6 := AvCmp_P2PCR_iPlug_loop_L98(MonitorInfo_6, oPlug_5, CurrMonitor_6, oPCR_4, AvAdapterData_15);
    goto L98_last;

  L98_last:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} CurrMonitor_6 != 0;
    assume {:nonnull} CurrMonitor_6 != 0;
    assume CurrMonitor_6 > 0;
    havoc CurrMonitor_6;
    goto L104;

  L104:
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} CurrMonitor_6 != 0;
    assume CurrMonitor_6 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} CurrMonitor_6 != 0;
    assume CurrMonitor_6 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} CurrMonitor_6 != 0;
    assume CurrMonitor_6 > 0;
    goto L110;

  L110:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L99;

  anon101_Then:
    goto anon101_Then_dummy;

  anon101_Then_dummy:
    assume false;
    return;

  anon117_Then:
    goto L110;

  anon100_Then:
    assume {:partition} CurrMonitor_6 == 0;
    assume {:nonnull} AvAdapterData_15 != 0;
    assume AvAdapterData_15 > 0;
    havoc CurrMonitor_6;
    goto L104;

  anon116_Then:
    goto L23;

  anon98_Then:
    goto L23;

  anon97_Then:
    assume {:partition} oPlug_5 == 0;
    goto L23;

  anon95_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon115_Then:
    assume {:partition} bReconnect_1 != 1;
    assume {:nonnull} iPlug_5 != 0;
    assume iPlug_5 > 0;
    havoc vslice_dummy_var_2148;
    havoc vslice_dummy_var_2149;
    call {:si_unique_call 1444} ntStatus_47 := AvCmp_SetPlugPCR(BusExtension_52, vslice_dummy_var_2148, vslice_dummy_var_2149, Pcr1_2, Pcr2_2, PcrOrg_3, 0, 0);
    goto L65;

  anon93_Then:
    goto L52;

  anon92_Then:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_718;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    havoc Tmp_699;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    goto L116;

  L116:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_698;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    havoc Tmp_719;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    ntStatus_47 := -1073741790;
    goto L23;

  anon119_Then:
    goto L117;

  L117:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    call {:si_unique_call 1445} boogieTmp := corral_nondet();
    goto L52;

  anon118_Then:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_702;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    havoc Tmp_721;
    assume {:nonnull} Tmp_721 != 0;
    assume Tmp_721 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto L117;

  anon120_Then:
    goto L116;

  anon90_Then:
    assume {:partition} oPlug_5 == 0;
    assume {:nonnull} BusExtension_52 != 0;
    assume BusExtension_52 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    havoc vslice_dummy_var_2150;
    call {:si_unique_call 1446} ntStatus_47 := Av1394_AllocateChannel(BusExtension_52, Connect_13, vslice_dummy_var_2150);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} ntStatus_47 >= 0;
    bChannel_1 := 1;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc Tmp_723;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc Tmp_711;
    call {:si_unique_call 1447} BandwidthUnits_5 := AvCmp_CalculateBWUnits(Connect_13, Tmp_711, Tmp_723);
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc vslice_dummy_var_2151;
    call {:si_unique_call 1448} ntStatus_47 := Av1394_AllocateBandwidth(BusExtension_52, Connect_13, vslice_dummy_var_2151, BandwidthUnits_5);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} ntStatus_47 >= 0;
    bBandwidth_1 := 1;
    goto L52;

  anon103_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon102_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon91_Then:
    goto L52;

  anon114_Then:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} oPlug_5 != 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto L56;

  anon105_Then:
    goto L140;

  L140:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} oPlug_5 != 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_724;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    goto L147;

  L147:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_712;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    havoc Tmp_706;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    call {:si_unique_call 1449} boogieTmp := corral_nondet();
    goto L56;

  anon122_Then:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_697;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    havoc Tmp_695;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    goto L147;

  anon123_Then:
    goto L143;

  L143:
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} bReconnect_1 != 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc Tmp_705;
    goto L152;

  L152:
    call {:si_unique_call 1450} ntStatus_47 := Av1394_AllocateChannel(BusExtension_52, Connect_13, Tmp_705);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} bReconnect_1 != 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} ntStatus_47 == -1073741791;
    call {:si_unique_call 1451} ntStatus_47 := Av1394_AllocateChannel(BusExtension_52, Connect_13, -1);
    goto L157;

  L157:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} ntStatus_47 >= 0;
    bChannel_1 := 1;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} oPlug_5 != 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_725;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    havoc Tmp_713;
    assume {:nonnull} Tmp_713 != 0;
    assume Tmp_713 > 0;
    havoc Tmp_708;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_717;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    havoc Tmp_701;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    havoc Tmp_707;
    call {:si_unique_call 1452} BandwidthUnits_5 := AvCmp_CalculateBWUnits(Connect_13, Tmp_707, Tmp_708);
    goto L173;

  L173:
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc vslice_dummy_var_2152;
    call {:si_unique_call 1453} ntStatus_47 := Av1394_AllocateBandwidth(BusExtension_52, Connect_13, vslice_dummy_var_2152, BandwidthUnits_5);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} ntStatus_47 >= 0;
    bBandwidth_1 := 1;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto L56;

  anon111_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon121_Then:
    assume {:partition} oPlug_5 == 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc Tmp_709;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc Tmp_715;
    call {:si_unique_call 1454} BandwidthUnits_5 := AvCmp_CalculateBWUnits(Connect_13, Tmp_715, Tmp_709);
    goto L173;

  anon109_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon110_Then:
    assume {:partition} ntStatus_47 != -1073741791;
    goto L157;

  anon108_Then:
    assume {:partition} bReconnect_1 == 0;
    goto L157;

  anon106_Then:
    assume {:partition} bReconnect_1 == 0;
    Tmp_705 := -1;
    goto L152;

  anon107_Then:
    goto L143;

  anon104_Then:
    assume {:partition} oPlug_5 == 0;
    goto L143;

  anon89_Then:
    assume {:partition} oPlug_5 == 0;
    goto L140;

  anon88_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon87_Then:
    assume {:partition} bReconnect_1 != 1;
    assume {:nonnull} iPlug_5 != 0;
    assume iPlug_5 > 0;
    havoc vslice_dummy_var_2153;
    havoc vslice_dummy_var_2154;
    call {:si_unique_call 1455} ntStatus_47 := AvCmp_GetPlugPCR(BusExtension_52, vslice_dummy_var_2153, vslice_dummy_var_2154, Pcr1_2);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} ntStatus_47 >= 0;
    goto L44;

  anon112_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon83_Then:
    goto L33;
}



procedure {:origName "AvCmp_CreateCmpData"} AvCmp_CreateCmpData(actual_BusExtension_53: int, actual_Type_6: int, actual_ppCmpData: int) returns (Tmp_726: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCmp_CreateCmpData"} AvCmp_CreateCmpData(actual_BusExtension_53: int, actual_Type_6: int, actual_ppCmpData: int) returns (Tmp_726: int)
{
  var {:scalar} Tmp_727: int;
  var {:scalar} u_3: int;
  var {:pointer} sdv_542: int;
  var {:pointer} CmpData_14: int;
  var {:pointer} Tmp_728: int;
  var {:scalar} sdv_544: int;
  var {:scalar} ntStatus_48: int;
  var {:scalar} sdv_545: int;
  var {:pointer} oMPR_2: int;
  var {:pointer} iMPR_2: int;
  var {:pointer} BusExtension_53: int;
  var {:scalar} Type_6: int;
  var {:pointer} ppCmpData: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 1456} u_3 := __HAVOC_malloc(28);
    BusExtension_53 := actual_BusExtension_53;
    Type_6 := actual_Type_6;
    ppCmpData := actual_ppCmpData;
    ntStatus_48 := 0;
    call {:si_unique_call 1457} sdv_542 := ExAllocatePoolWithTag(512, 2544, 943206710);
    CmpData_14 := sdv_542;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} CmpData_14 != 0;
    call {:si_unique_call 1458} sdv_RtlZeroMemory(0, 992);
    call {:si_unique_call 1459} sdv_RtlZeroMemory(0, 992);
    call {:si_unique_call 1460} Tmp_728 := __HAVOC_malloc(4);
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    call {:si_unique_call 1461} sdv_KeInitializeSpinLock(Tmp_728);
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} BusExtension_53 != 0;
    assume BusExtension_53 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto L29;

  L29:
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    oMPR_2 := Mpr__PCR_MAP(oMap__CMP_DATA(CmpData_14));
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    call {:si_unique_call 1462} boogieTmp := corral_nondet();
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    iMPR_2 := Mpr__PCR_MAP(iMap__CMP_DATA(CmpData_14));
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    call {:si_unique_call 1463} boogieTmp := corral_nondet();
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    havoc Tmp_727;
    goto L59;

  L59:
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    call {:si_unique_call 1464} boogieTmp := IoAllocateMdl(0, 128, 0, 0, 0);
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    call {:si_unique_call 1465} boogieTmp := IoAllocateMdl(0, 128, 0, 0, 0);
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 1466} ntStatus_48 := AvCmp_CreateCMPAddressRange(BusExtension_53, CmpData_14, 0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} ntStatus_48 < 0;
    goto L92;

  L92:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} CmpData_14 != 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 1467} IoFreeMdl(0);
    goto L95;

  L95:
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 1468} IoFreeMdl(0);
    goto L99;

  L99:
    call {:si_unique_call 1469} sdv_ExFreePool(0);
    goto L93;

  L93:
    assume {:nonnull} ppCmpData != 0;
    assume ppCmpData > 0;
    Tmp_726 := ntStatus_48;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto L99;

  anon26_Then:
    goto L95;

  anon25_Then:
    assume {:partition} CmpData_14 == 0;
    goto L93;

  anon23_Then:
    assume {:partition} 0 <= ntStatus_48;
    call {:si_unique_call 1470} ntStatus_48 := AvCmp_CreateCMPAddressRange(BusExtension_53, CmpData_14, 1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} ntStatus_48 < 0;
    goto L92;

  anon24_Then:
    assume {:partition} 0 <= ntStatus_48;
    assume {:nonnull} ppCmpData != 0;
    assume ppCmpData > 0;
    Tmp_726 := ntStatus_48;
    goto L1;

  anon22_Then:
    ntStatus_48 := -1073741670;
    goto L92;

  anon21_Then:
    ntStatus_48 := -1073741670;
    goto L92;

  anon30_Then:
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    havoc Tmp_727;
    goto L59;

  anon29_Then:
    goto L29;

  anon28_Then:
    assume {:partition} CmpData_14 == 0;
    ntStatus_48 := -1073741670;
    goto L92;
}



procedure {:origName "Av1394_GetUnitInfo"} Av1394_GetUnitInfo(actual_BusExtension_54: int, actual_UnitData_1: int) returns (Tmp_729: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_GetUnitInfo"} Av1394_GetUnitInfo(actual_BusExtension_54: int, actual_UnitData_1: int) returns (Tmp_729: int)
{
  var {:scalar} CurrAddress: int;
  var {:scalar} i_3: int;
  var {:scalar} Tmp_730: int;
  var {:scalar} Tmp_731: int;
  var {:pointer} Irp_51: int;
  var {:pointer} Irb_16: int;
  var {:scalar} u_4: int;
  var {:scalar} sdv_553: int;
  var {:scalar} ConfigRom: int;
  var {:scalar} Tmp_732: int;
  var {:scalar} LastKey: int;
  var {:scalar} DescAddress: int;
  var {:pointer} UnitDir: int;
  var {:scalar} sdv_557: int;
  var {:scalar} Tmp_733: int;
  var {:scalar} StackSize_10: int;
  var {:scalar} sdv_560: int;
  var {:scalar} sdv_561: int;
  var {:scalar} ntStatus_49: int;
  var {:scalar} sdv_562: int;
  var {:scalar} DescAddress_1: int;
  var {:scalar} sdv_565: int;
  var {:pointer} sdv_566: int;
  var {:scalar} maxRecPkt: int;
  var {:scalar} DescAddress_2: int;
  var {:pointer} Tmp_735: int;
  var {:scalar} sdv_568: int;
  var {:dopa} {:scalar} ulQuadlet: int;
  var {:scalar} Tmp_736: int;
  var {:scalar} u3: int;
  var {:scalar} Tmp_737: int;
  var {:scalar} u2: int;
  var {:pointer} BusExtension_54: int;
  var {:pointer} UnitData_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_2155: int;
  var vslice_dummy_var_2156: int;
  var vslice_dummy_var_2157: int;

  anon0:
    call {:si_unique_call 1471} u_4 := __HAVOC_malloc(24);
    call {:si_unique_call 1472} ConfigRom := __HAVOC_malloc(20);
    call {:si_unique_call 1473} ulQuadlet := __HAVOC_malloc(4);
    call {:si_unique_call 1474} u3 := __HAVOC_malloc(24);
    call {:si_unique_call 1475} u2 := __HAVOC_malloc(24);
    BusExtension_54 := actual_BusExtension_54;
    UnitData_1 := actual_UnitData_1;
    ntStatus_49 := 0;
    LastKey := 0;
    UnitDir := 0;
    CurrAddress := -268434412;
    call {:si_unique_call 1476} ntStatus_49 := Av1394_QuadletRead(BusExtension_54, ulQuadlet, CurrAddress);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} ntStatus_49 < 0;
    goto L92;

  L92:
    Tmp_729 := ntStatus_49;
    return;

  anon59_Then:
    assume {:partition} 0 <= ntStatus_49;
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    i_3 := 0;
    goto L31;

  L31:
    call {:si_unique_call 1477} CurrAddress, i_3, Tmp_730, Tmp_731, Tmp_732, LastKey, ntStatus_49, DescAddress_1, DescAddress_2, Tmp_736, vslice_dummy_var_195, vslice_dummy_var_196, vslice_dummy_var_197, vslice_dummy_var_198, vslice_dummy_var_199, vslice_dummy_var_200 := Av1394_GetUnitInfo_loop_L31(CurrAddress, i_3, Tmp_730, Tmp_731, u_4, Tmp_732, LastKey, sdv_561, ntStatus_49, DescAddress_1, sdv_565, DescAddress_2, sdv_568, ulQuadlet, Tmp_736, u3, u2, BusExtension_54, UnitData_1, vslice_dummy_var_195, vslice_dummy_var_196, vslice_dummy_var_197, vslice_dummy_var_198, vslice_dummy_var_199, vslice_dummy_var_200);
    goto L31_last;

  L31_last:
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    CurrAddress := CurrAddress + 4;
    call {:si_unique_call 1478} ntStatus_49 := Av1394_QuadletRead(BusExtension_54, ulQuadlet, CurrAddress);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} ntStatus_49 < 0;
    goto L92;

  anon61_Then:
    assume {:partition} 0 <= ntStatus_49;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto L45;

  L45:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} LastKey == 3;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc Tmp_736;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    call {:si_unique_call 1479} vslice_dummy_var_195 := Av1394_ReadTextualDescriptor(BusExtension_54, uniVendorId__UNIT_DATA(UnitData_1), Tmp_736);
    goto L47;

  L47:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} LastKey == 3;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc DescAddress_2;
    call {:si_unique_call 1480} vslice_dummy_var_196 := Av1394_QuadletRead(BusExtension_54, ulQuadlet, DescAddress_2);
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    havoc Tmp_731;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    call {:si_unique_call 1481} vslice_dummy_var_197 := Av1394_ReadTextualDescriptor(BusExtension_54, uniVendorId__UNIT_DATA(UnitData_1), Tmp_731);
    goto L53;

  L53:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto L68;

  L68:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} LastKey == 23;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc Tmp_732;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    call {:si_unique_call 1482} vslice_dummy_var_198 := Av1394_ReadTextualDescriptor(BusExtension_54, uniModelId__UNIT_DATA(UnitData_1), Tmp_732);
    goto L70;

  L70:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} LastKey == 23;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc DescAddress_1;
    call {:si_unique_call 1483} vslice_dummy_var_199 := Av1394_QuadletRead(BusExtension_54, ulQuadlet, DescAddress_1);
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    havoc Tmp_730;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    call {:si_unique_call 1484} vslice_dummy_var_200 := Av1394_ReadTextualDescriptor(BusExtension_54, uniModelId__UNIT_DATA(UnitData_1), Tmp_730);
    goto L76;

  L76:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc LastKey;
    i_3 := i_3 + 1;
    goto L76_dummy;

  L76_dummy:
    assume false;
    return;

  anon70_Then:
    assume {:partition} LastKey != 23;
    goto L76;

  anon68_Then:
    goto L76;

  anon69_Then:
    assume {:partition} LastKey != 23;
    goto L70;

  anon67_Then:
    goto L70;

  anon65_Then:
    goto L68;

  anon66_Then:
    assume {:partition} LastKey != 3;
    goto L53;

  anon63_Then:
    goto L53;

  anon64_Then:
    assume {:partition} LastKey != 3;
    goto L47;

  anon62_Then:
    goto L47;

  anon83_Then:
    goto L45;

  anon60_Then:
    assume {:nonnull} BusExtension_54 != 0;
    assume BusExtension_54 > 0;
    havoc Tmp_735;
    assume {:nonnull} Tmp_735 != 0;
    assume Tmp_735 > 0;
    havoc StackSize_10;
    call {:si_unique_call 1485} Irp_51 := IoAllocateIrp(StackSize_10, 0);
    call {:si_unique_call 1486} sdv_566 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_16 := sdv_566;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Irp_51 != 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Irb_16 != 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} BusExtension_54 != 0;
    assume BusExtension_54 > 0;
    havoc vslice_dummy_var_2155;
    call {:si_unique_call 1487} ntStatus_49 := Av_SubmitIrpSynch(vslice_dummy_var_2155, Irp_51, Irb_16);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} ntStatus_49 >= 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    havoc vslice_dummy_var_2156;
    call {:si_unique_call 1488} boogieTmp := ExAllocatePoolWithTag(512, vslice_dummy_var_2156, 943206710);
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    havoc UnitDir;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} BusExtension_54 != 0;
    assume BusExtension_54 > 0;
    havoc vslice_dummy_var_2157;
    call {:si_unique_call 1489} ntStatus_49 := Av_SubmitIrpSynch(vslice_dummy_var_2157, Irp_51, Irb_16);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} ntStatus_49 >= 0;
    assume {:nonnull} ConfigRom != 0;
    assume ConfigRom > 0;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    assume {:nonnull} ConfigRom != 0;
    assume ConfigRom > 0;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    call {:si_unique_call 1490} maxRecPkt := corral_nondet();
    maxRecPkt := BAND(maxRecPkt, BOR(BOR(BOR(1, 2), 4), 8));
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} maxRecPkt != 0;
    goto L150;

  L150:
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    havoc CurrAddress;
    i_3 := 0;
    goto L157;

  L157:
    call {:si_unique_call 1491} CurrAddress, i_3, LastKey, DescAddress, Tmp_733, Tmp_737, vslice_dummy_var_201, vslice_dummy_var_202, vslice_dummy_var_203 := Av1394_GetUnitInfo_loop_L157(CurrAddress, i_3, u_4, sdv_553, LastKey, DescAddress, UnitDir, sdv_557, Tmp_733, ulQuadlet, u3, Tmp_737, u2, BusExtension_54, UnitData_1, vslice_dummy_var_201, vslice_dummy_var_202, vslice_dummy_var_203);
    goto L157_last;

  L157_last:
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    CurrAddress := CurrAddress + 4;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto L166;

  L166:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto L169;

  L169:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} LastKey == 23;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc Tmp_733;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    call {:si_unique_call 1492} vslice_dummy_var_201 := Av1394_ReadTextualDescriptor(BusExtension_54, uniUnitModelId__UNIT_DATA(UnitData_1), Tmp_733);
    goto L171;

  L171:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} LastKey == 23;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc DescAddress;
    call {:si_unique_call 1493} vslice_dummy_var_202 := Av1394_QuadletRead(BusExtension_54, ulQuadlet, DescAddress);
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    havoc Tmp_737;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    call {:si_unique_call 1494} vslice_dummy_var_203 := Av1394_ReadTextualDescriptor(BusExtension_54, uniModelId__UNIT_DATA(UnitData_1), Tmp_737);
    goto L177;

  L177:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc LastKey;
    i_3 := i_3 + 1;
    goto L177_dummy;

  L177_dummy:
    assume false;
    return;

  anon82_Then:
    assume {:partition} LastKey != 23;
    goto L177;

  anon80_Then:
    goto L177;

  anon81_Then:
    assume {:partition} LastKey != 23;
    goto L171;

  anon79_Then:
    goto L171;

  anon78_Then:
    goto L169;

  anon87_Then:
    goto L166;

  anon76_Then:
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    call {:si_unique_call 1495} sdv_ExFreePool(0);
    goto L193;

  L193:
    call {:si_unique_call 1496} IoFreeIrp(0);
    assume {:nonnull} BusExtension_54 != 0;
    assume BusExtension_54 > 0;
    call {:si_unique_call 1497} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_54), Irb_16);
    goto L92;

  anon77_Then:
    goto L193;

  anon86_Then:
    assume {:partition} maxRecPkt == 0;
    assume {:nonnull} BusExtension_54 != 0;
    assume BusExtension_54 > 0;
    goto L150;

  anon74_Then:
    assume {:partition} 0 > ntStatus_49;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} UnitDir != 0;
    call {:si_unique_call 1498} sdv_ExFreePool(0);
    goto L92;

  anon75_Then:
    assume {:partition} UnitDir == 0;
    goto L92;

  anon85_Then:
    ntStatus_49 := -1073741670;
    goto L92;

  anon73_Then:
    ntStatus_49 := -1073741621;
    goto L92;

  anon72_Then:
    assume {:partition} 0 > ntStatus_49;
    goto L92;

  anon71_Then:
    assume {:partition} Irb_16 == 0;
    goto L102;

  L102:
    ntStatus_49 := -1073741670;
    goto L92;

  anon84_Then:
    assume {:partition} Irp_51 == 0;
    goto L102;
}



procedure {:origName "Av1394_GetNodeID"} Av1394_GetNodeID(actual_BusExtension_55: int) returns (Tmp_738: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_GetNodeID"} Av1394_GetNodeID(actual_BusExtension_55: int) returns (Tmp_738: int)
{
  var {:pointer} Irp_52: int;
  var {:pointer} Irb_17: int;
  var {:scalar} StackSize_11: int;
  var {:pointer} sdv_574: int;
  var {:scalar} ntStatus_50: int;
  var {:pointer} Tmp_740: int;
  var {:pointer} BusExtension_55: int;
  var vslice_dummy_var_2158: int;

  anon0:
    BusExtension_55 := actual_BusExtension_55;
    ntStatus_50 := 0;
    Irp_52 := 0;
    Irb_17 := 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    ntStatus_50 := -1073741811;
    goto L15;

  L15:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_52 != 0;
    call {:si_unique_call 1499} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irb_17 != 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    call {:si_unique_call 1500} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_55), Irb_17);
    goto L20;

  L20:
    Tmp_738 := ntStatus_50;
    return;

  anon17_Then:
    assume {:partition} Irb_17 == 0;
    goto L20;

  anon16_Then:
    assume {:partition} Irp_52 == 0;
    goto L16;

  anon15_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    havoc Tmp_740;
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    havoc StackSize_11;
    call {:si_unique_call 1501} Irp_52 := IoAllocateIrp(StackSize_11, 0);
    call {:si_unique_call 1502} sdv_574 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_17 := sdv_574;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irp_52 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irb_17 != 0;
    assume {:nonnull} Irb_17 != 0;
    assume Irb_17 > 0;
    assume {:nonnull} Irb_17 != 0;
    assume Irb_17 > 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    havoc vslice_dummy_var_2158;
    call {:si_unique_call 1503} ntStatus_50 := Av_SubmitIrpSynch(vslice_dummy_var_2158, Irp_52, Irb_17);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ntStatus_50 >= 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    assume {:nonnull} Irb_17 != 0;
    assume Irb_17 > 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    assume {:nonnull} Irb_17 != 0;
    assume Irb_17 > 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    assume {:nonnull} Irb_17 != 0;
    assume Irb_17 > 0;
    goto L15;

  anon19_Then:
    assume {:partition} 0 > ntStatus_50;
    goto L15;

  anon18_Then:
    assume {:partition} Irb_17 == 0;
    goto L33;

  L33:
    ntStatus_50 := -1073741670;
    goto L15;

  anon21_Then:
    assume {:partition} Irp_52 == 0;
    goto L33;

  anon20_Then:
    goto L11;
}



procedure {:origName "Av1394_SetUnitDirectory"} Av1394_SetUnitDirectory(actual_PdoExtension_14: int, actual_Irp_53: int, actual_Request_21: int) returns (Tmp_741: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_SetUnitDirectory"} Av1394_SetUnitDirectory(actual_PdoExtension_14: int, actual_Irp_53: int, actual_Request_21: int) returns (Tmp_741: int)
{
  var {:pointer} CurrPdoCrom: int;
  var {:pointer} PdoCromData_1: int;
  var {:pointer} Tmp_742: int;
  var {:pointer} Tmp_743: int;
  var {:scalar} sdv_576: int;
  var {:pointer} CurrCrom_1: int;
  var {:pointer} CromData_1: int;
  var {:scalar} sdv_580: int;
  var {:scalar} ntStatus_51: int;
  var {:pointer} sdv_581: int;
  var {:pointer} sdv_582: int;
  var {:pointer} PdoCromData_2: int;
  var {:pointer} CromData_2: int;
  var {:scalar} Irql_26: int;
  var {:pointer} BusExtension_56: int;
  var {:pointer} AvAdapterData_16: int;
  var {:pointer} SetUnitDir: int;
  var {:pointer} PdoExtension_14: int;
  var {:pointer} Request_21: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;

  anon0:
    PdoExtension_14 := actual_PdoExtension_14;
    Request_21 := actual_Request_21;
    ntStatus_51 := 0;
    assume {:nonnull} Request_21 != 0;
    assume Request_21 > 0;
    SetUnitDir := SetUnitDirectory__AV_61883_REQUEST(Request_21);
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    havoc Tmp_742;
    assume {:nonnull} Tmp_742 != 0;
    assume Tmp_742 > 0;
    havoc BusExtension_56;
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    havoc AvAdapterData_16;
    call {:si_unique_call 1504} Tmp_743 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_743 != 0;
    assume Tmp_743 > 0;
    call {:si_unique_call 1505} sdv_KeAcquireSpinLock(0, Tmp_743);
    assume {:nonnull} Tmp_743 != 0;
    assume Tmp_743 > 0;
    havoc Irql_26;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    CurrCrom_1 := 0;
    CromData_1 := 0;
    CurrPdoCrom := 0;
    call {:si_unique_call 1506} sdv_576 := sdv_IsListEmpty(0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_576 != 0;
    goto L28;

  L28:
    call {:si_unique_call 1507} sdv_580 := sdv_IsListEmpty(0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_580 != 0;
    goto L33;

  L33:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} CromData_1 != 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    goto L39;

  L39:
    call {:si_unique_call 1508} sdv_582 := ExAllocatePoolWithTag(512, 20, 943206710);
    PdoCromData_2 := sdv_582;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} PdoCromData_2 != 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    assume {:nonnull} PdoCromData_2 != 0;
    assume PdoCromData_2 > 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    assume {:nonnull} PdoCromData_2 != 0;
    assume PdoCromData_2 > 0;
    assume {:nonnull} PdoCromData_2 != 0;
    assume PdoCromData_2 > 0;
    assume {:nonnull} PdoCromData_2 != 0;
    assume PdoCromData_2 > 0;
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    call {:si_unique_call 1509} vslice_dummy_var_210 := sdv_InsertTailList(PdoCromList__PDO_DEVICE_EXTENSION(PdoExtension_14), Entry__PDO_CROM_DATA(PdoCromData_2));
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto L52;

  L52:
    call {:si_unique_call 1510} sdv_KeReleaseSpinLock(0, Irql_26);
    Tmp_741 := ntStatus_51;
    return;

  anon57_Then:
    assume {:partition} PdoCromData_2 == 0;
    ntStatus_51 := -1073741670;
    goto L52;

  anon47_Then:
    assume {:partition} CromData_1 == 0;
    call {:si_unique_call 1511} sdv_581 := ExAllocatePoolWithTag(512, 44, 943206710);
    CromData_1 := sdv_581;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} CromData_1 != 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    call {:si_unique_call 1512} ntStatus_51 := Av1394_AddConfigRomEntry(CromData_1);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} ntStatus_51 >= 0;
    assume {:nonnull} AvAdapterData_16 != 0;
    assume AvAdapterData_16 > 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    call {:si_unique_call 1513} vslice_dummy_var_204 := sdv_InsertTailList(CromList__AV_ADAPTER_DATA(AvAdapterData_16), Entry__CROM_DATA(CromData_1));
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 1514} vslice_dummy_var_205 := Av1394_BusReset(BusExtension_56, 0, 0);
    goto L39;

  anon49_Then:
    goto L39;

  anon48_Then:
    assume {:partition} 0 > ntStatus_51;
    call {:si_unique_call 1515} sdv_ExFreePool(0);
    goto L52;

  anon58_Then:
    assume {:partition} CromData_1 == 0;
    ntStatus_51 := -1073741670;
    goto L52;

  anon45_Then:
    assume {:partition} sdv_580 == 0;
    goto L32;

  L32:
    call {:si_unique_call 1516} CurrCrom_1 := Av1394_SetUnitDirectory_loop_L32(CurrCrom_1, AvAdapterData_16, SetUnitDir);
    goto L32_last;

  L32_last:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} CurrCrom_1 != 0;
    assume {:nonnull} CurrCrom_1 != 0;
    assume CurrCrom_1 > 0;
    havoc CurrCrom_1;
    goto L83;

  L83:
    assume {:nonnull} CurrCrom_1 != 0;
    assume CurrCrom_1 > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} CurrCrom_1 != 0;
    assume CurrCrom_1 > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    CromData_1 := CurrCrom_1;
    goto L33;

  anon52_Then:
    goto L84;

  L84:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L33;

  anon51_Then:
    goto anon51_Then_dummy;

  anon51_Then_dummy:
    assume false;
    return;

  anon50_Then:
    goto L84;

  anon46_Then:
    assume {:partition} CurrCrom_1 == 0;
    assume {:nonnull} AvAdapterData_16 != 0;
    assume AvAdapterData_16 > 0;
    havoc CurrCrom_1;
    goto L83;

  anon43_Then:
    assume {:partition} sdv_576 == 0;
    goto L27;

  L27:
    call {:si_unique_call 1517} CurrPdoCrom := Av1394_SetUnitDirectory_loop_L27(CurrPdoCrom, SetUnitDir, PdoExtension_14);
    goto L27_last;

  L27_last:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} CurrPdoCrom != 0;
    assume {:nonnull} CurrPdoCrom != 0;
    assume CurrPdoCrom > 0;
    havoc CurrPdoCrom;
    goto L90;

  L90:
    assume {:nonnull} CurrPdoCrom != 0;
    assume CurrPdoCrom > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} CurrPdoCrom != 0;
    assume CurrPdoCrom > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    ntStatus_51 := -1073741811;
    goto L52;

  anon55_Then:
    goto L91;

  L91:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L28;

  anon54_Then:
    goto anon54_Then_dummy;

  anon54_Then_dummy:
    assume false;
    return;

  anon53_Then:
    goto L91;

  anon44_Then:
    assume {:partition} CurrPdoCrom == 0;
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    havoc CurrPdoCrom;
    goto L90;

  anon41_Then:
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    havoc PdoCromData_1;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} PdoCromData_1 != 0;
    call {:si_unique_call 1518} vslice_dummy_var_206 := sdv_RemoveEntryList(0);
    assume {:nonnull} PdoCromData_1 != 0;
    assume PdoCromData_1 > 0;
    havoc CromData_2;
    assume {:nonnull} CromData_2 != 0;
    assume CromData_2 > 0;
    assume {:nonnull} CromData_2 != 0;
    assume CromData_2 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L110;

  L110:
    call {:si_unique_call 1519} sdv_ExFreePool(0);
    goto L52;

  anon60_Then:
    call {:si_unique_call 1520} vslice_dummy_var_207 := Av1394_RemoveConfigRomEntry(CromData_2);
    call {:si_unique_call 1521} vslice_dummy_var_208 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1522} sdv_ExFreePool(0);
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1523} vslice_dummy_var_209 := Av1394_BusReset(BusExtension_56, 0, 0);
    goto L110;

  anon56_Then:
    goto L110;

  anon59_Then:
    assume {:partition} PdoCromData_1 == 0;
    ntStatus_51 := -1073741811;
    goto L52;

  anon42_Then:
    ntStatus_51 := -1073741811;
    goto L52;
}



procedure {:origName "Av1394_BusReset"} Av1394_BusReset(actual_BusExtension_57: int, actual_UnusedIrp: int, actual_Request_22: int) returns (Tmp_744: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_BusReset"} Av1394_BusReset(actual_BusExtension_57: int, actual_UnusedIrp: int, actual_Request_22: int) returns (Tmp_744: int)
{
  var {:pointer} Irp_54: int;
  var {:pointer} Irb_18: int;
  var {:pointer} Tmp_745: int;
  var {:scalar} StackSize_12: int;
  var {:pointer} sdv_587: int;
  var {:scalar} ntStatus_52: int;
  var {:pointer} BusExtension_57: int;
  var {:pointer} Request_22: int;
  var vslice_dummy_var_2159: int;

  anon0:
    BusExtension_57 := actual_BusExtension_57;
    Request_22 := actual_Request_22;
    ntStatus_52 := 0;
    Irp_54 := 0;
    Irb_18 := 0;
    assume {:nonnull} BusExtension_57 != 0;
    assume BusExtension_57 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} BusExtension_57 != 0;
    assume BusExtension_57 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    ntStatus_52 := -1073741811;
    goto L15;

  L15:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_54 != 0;
    call {:si_unique_call 1524} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irb_18 != 0;
    assume {:nonnull} BusExtension_57 != 0;
    assume BusExtension_57 > 0;
    call {:si_unique_call 1525} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_57), Irb_18);
    goto L20;

  L20:
    Tmp_744 := ntStatus_52;
    return;

  anon17_Then:
    assume {:partition} Irb_18 == 0;
    goto L20;

  anon16_Then:
    assume {:partition} Irp_54 == 0;
    goto L16;

  anon15_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_57 != 0;
    assume BusExtension_57 > 0;
    havoc Tmp_745;
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    havoc StackSize_12;
    call {:si_unique_call 1526} Irp_54 := IoAllocateIrp(StackSize_12, 0);
    call {:si_unique_call 1527} sdv_587 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_18 := sdv_587;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_54 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irb_18 != 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Request_22 != 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} Request_22 != 0;
    assume Request_22 > 0;
    goto L40;

  L40:
    assume {:nonnull} BusExtension_57 != 0;
    assume BusExtension_57 > 0;
    havoc vslice_dummy_var_2159;
    call {:si_unique_call 1528} ntStatus_52 := Av_SubmitIrpSynch(vslice_dummy_var_2159, Irp_54, Irb_18);
    goto L15;

  anon21_Then:
    assume {:partition} Request_22 == 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    goto L40;

  anon18_Then:
    assume {:partition} Irb_18 == 0;
    goto L33;

  L33:
    ntStatus_52 := -1073741670;
    goto L15;

  anon20_Then:
    assume {:partition} Irp_54 == 0;
    goto L33;

  anon19_Then:
    goto L11;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_211: int;

  anon0:
    call {:si_unique_call 1529} vslice_dummy_var_211 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Av1394_AddConfigRomEntry"} Av1394_AddConfigRomEntry(actual_CromData_3: int) returns (Tmp_749: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_AddConfigRomEntry"} Av1394_AddConfigRomEntry(actual_CromData_3: int) returns (Tmp_749: int)
{
  var {:scalar} i_4: int;
  var {:pointer} Irp_55: int;
  var {:pointer} Irb_19: int;
  var {:pointer} Tmp_751: int;
  var {:scalar} StackSize_13: int;
  var {:pointer} sdv_591: int;
  var {:scalar} ntStatus_53: int;
  var {:pointer} sdv_592: int;
  var {:pointer} Tmp_752: int;
  var {:scalar} sdv_594: int;
  var {:pointer} CromEntry: int;
  var {:pointer} BusExtension_58: int;
  var {:pointer} AvAdapterData_17: int;
  var {:pointer} SetLocalHostProps3: int;
  var {:pointer} CromData_3: int;
  var boogieTmp: int;
  var vslice_dummy_var_2160: int;

  anon0:
    CromData_3 := actual_CromData_3;
    ntStatus_53 := 0;
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    havoc AvAdapterData_17;
    assume {:nonnull} AvAdapterData_17 != 0;
    assume AvAdapterData_17 > 0;
    havoc BusExtension_58;
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    CromEntry := CromEntry__CROM_DATA(CromData_3);
    Irp_55 := 0;
    Irb_19 := 0;
    SetLocalHostProps3 := 0;
    assume {:nonnull} BusExtension_58 != 0;
    assume BusExtension_58 > 0;
    havoc Tmp_751;
    assume {:nonnull} Tmp_751 != 0;
    assume Tmp_751 > 0;
    havoc StackSize_13;
    call {:si_unique_call 1530} Irp_55 := IoAllocateIrp(StackSize_13, 0);
    call {:si_unique_call 1531} sdv_591 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_19 := sdv_591;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Irp_55 != 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_19 != 0;
    call {:si_unique_call 1532} sdv_592 := ExAllocatePoolWithTag(512, 16, 943206710);
    SetLocalHostProps3 := sdv_592;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} SetLocalHostProps3 != 0;
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    call {:si_unique_call 1533} boogieTmp := IoAllocateMdl(0, 12, 0, 0, 0);
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 1534} sdv_RtlZeroMemory(0, 12);
    assume {:nonnull} CromEntry != 0;
    assume CromEntry > 0;
    assume {:nonnull} CromEntry != 0;
    assume CromEntry > 0;
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    assume {:nonnull} CromEntry != 0;
    assume CromEntry > 0;
    assume {:nonnull} CromEntry != 0;
    assume CromEntry > 0;
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    assume {:nonnull} CromEntry != 0;
    assume CromEntry > 0;
    i_4 := 0;
    goto L55;

  L55:
    call {:si_unique_call 1535} i_4, Tmp_752 := Av1394_AddConfigRomEntry_loop_L55(i_4, Tmp_752, sdv_594, CromEntry);
    goto L55_last;

  L55_last:
    assume {:CounterLoop 3} {:Counter "i_4"} true;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} 3 > i_4;
    Tmp_752 := CromEntry;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    i_4 := i_4 + 1;
    goto anon23_Else_dummy;

  anon23_Else_dummy:
    assume false;
    return;

  anon23_Then:
    assume {:partition} i_4 >= 3;
    assume {:nonnull} SetLocalHostProps3 != 0;
    assume SetLocalHostProps3 > 0;
    assume {:nonnull} SetLocalHostProps3 != 0;
    assume SetLocalHostProps3 > 0;
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    assume {:nonnull} SetLocalHostProps3 != 0;
    assume SetLocalHostProps3 > 0;
    assume {:nonnull} Irb_19 != 0;
    assume Irb_19 > 0;
    assume {:nonnull} Irb_19 != 0;
    assume Irb_19 > 0;
    assume {:nonnull} Irb_19 != 0;
    assume Irb_19 > 0;
    assume {:nonnull} Irb_19 != 0;
    assume Irb_19 > 0;
    assume {:nonnull} BusExtension_58 != 0;
    assume BusExtension_58 > 0;
    havoc vslice_dummy_var_2160;
    call {:si_unique_call 1536} ntStatus_53 := Av_SubmitIrpSynch(vslice_dummy_var_2160, Irp_55, Irb_19);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} ntStatus_53 >= 0;
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    assume {:nonnull} SetLocalHostProps3 != 0;
    assume SetLocalHostProps3 > 0;
    goto L76;

  L76:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} SetLocalHostProps3 != 0;
    call {:si_unique_call 1537} sdv_ExFreePool(0);
    goto L77;

  L77:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Irp_55 != 0;
    call {:si_unique_call 1538} IoFreeIrp(0);
    goto L81;

  L81:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Irb_19 != 0;
    assume {:nonnull} BusExtension_58 != 0;
    assume BusExtension_58 > 0;
    call {:si_unique_call 1539} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_58), Irb_19);
    goto L85;

  L85:
    Tmp_749 := ntStatus_53;
    return;

  anon28_Then:
    assume {:partition} Irb_19 == 0;
    goto L85;

  anon27_Then:
    assume {:partition} Irp_55 == 0;
    goto L81;

  anon26_Then:
    assume {:partition} SetLocalHostProps3 == 0;
    goto L77;

  anon24_Then:
    assume {:partition} 0 > ntStatus_53;
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 1540} sdv_ExFreePool(0);
    goto L76;

  anon25_Then:
    goto L76;

  anon22_Then:
    ntStatus_53 := -1073741670;
    goto L76;

  anon30_Then:
    assume {:partition} SetLocalHostProps3 == 0;
    ntStatus_53 := -1073741670;
    goto L76;

  anon21_Then:
    assume {:partition} Irb_19 == 0;
    goto L29;

  L29:
    ntStatus_53 := -1073741670;
    goto L76;

  anon29_Then:
    assume {:partition} Irp_55 == 0;
    goto L29;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_2: int, actual_Entry_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_2: int, actual_Entry_1: int)
{
  var {:pointer} NextEntry: int;
  var {:pointer} ListHead_2: int;
  var {:pointer} Entry_1: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_2161: int;

  anon0:
    call {:si_unique_call 1541} vslice_dummy_var_212 := __HAVOC_malloc(4);
    ListHead_2 := actual_ListHead_2;
    Entry_1 := actual_Entry_1;
    assume {:nonnull} ListHead_2 != 0;
    assume ListHead_2 > 0;
    havoc NextEntry;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    havoc vslice_dummy_var_2161;
    call {:si_unique_call 1542} FatalListEntryError(ListHead_2, NextEntry, vslice_dummy_var_2161);
    goto L8;

  L8:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    assume {:nonnull} ListHead_2 != 0;
    assume ListHead_2 > 0;
    return;

  anon3_Then:
    goto L8;
}



procedure {:origName "Av1394_GetLocalHostUniqueId"} Av1394_GetLocalHostUniqueId(actual_BusExtension_59: int, actual_UniqueId: int) returns (Tmp_756: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_GetLocalHostUniqueId"} Av1394_GetLocalHostUniqueId(actual_BusExtension_59: int, actual_UniqueId: int) returns (Tmp_756: int)
{
  var {:scalar} HostCaps: int;
  var {:pointer} Irp_56: int;
  var {:pointer} Irb_20: int;
  var {:scalar} StackSize_14: int;
  var {:pointer} sdv_596: int;
  var {:scalar} ntStatus_54: int;
  var {:pointer} Tmp_758: int;
  var {:pointer} BusExtension_59: int;
  var {:pointer} UniqueId: int;
  var vslice_dummy_var_2162: int;

  anon0:
    call {:si_unique_call 1543} HostCaps := __HAVOC_malloc(20);
    BusExtension_59 := actual_BusExtension_59;
    UniqueId := actual_UniqueId;
    ntStatus_54 := 0;
    Irp_56 := 0;
    Irb_20 := 0;
    assume {:nonnull} BusExtension_59 != 0;
    assume BusExtension_59 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} BusExtension_59 != 0;
    assume BusExtension_59 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    ntStatus_54 := -1073741811;
    goto L16;

  L16:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_56 != 0;
    call {:si_unique_call 1544} IoFreeIrp(0);
    goto L17;

  L17:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irb_20 != 0;
    assume {:nonnull} BusExtension_59 != 0;
    assume BusExtension_59 > 0;
    call {:si_unique_call 1545} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_59), Irb_20);
    goto L21;

  L21:
    Tmp_756 := ntStatus_54;
    return;

  anon17_Then:
    assume {:partition} Irb_20 == 0;
    goto L21;

  anon16_Then:
    assume {:partition} Irp_56 == 0;
    goto L17;

  anon15_Then:
    goto L12;

  L12:
    assume {:nonnull} BusExtension_59 != 0;
    assume BusExtension_59 > 0;
    havoc Tmp_758;
    assume {:nonnull} Tmp_758 != 0;
    assume Tmp_758 > 0;
    havoc StackSize_14;
    call {:si_unique_call 1546} Irp_56 := IoAllocateIrp(StackSize_14, 0);
    call {:si_unique_call 1547} sdv_596 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_20 := sdv_596;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irp_56 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irb_20 != 0;
    assume {:nonnull} Irb_20 != 0;
    assume Irb_20 > 0;
    assume {:nonnull} Irb_20 != 0;
    assume Irb_20 > 0;
    assume {:nonnull} Irb_20 != 0;
    assume Irb_20 > 0;
    assume {:nonnull} Irb_20 != 0;
    assume Irb_20 > 0;
    assume {:nonnull} BusExtension_59 != 0;
    assume BusExtension_59 > 0;
    havoc vslice_dummy_var_2162;
    call {:si_unique_call 1548} ntStatus_54 := Av_SubmitIrpSynch(vslice_dummy_var_2162, Irp_56, Irb_20);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ntStatus_54 >= 0;
    assume {:nonnull} HostCaps != 0;
    assume HostCaps > 0;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    assume {:nonnull} HostCaps != 0;
    assume HostCaps > 0;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    assume {:nonnull} HostCaps != 0;
    assume HostCaps > 0;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    assume {:nonnull} HostCaps != 0;
    assume HostCaps > 0;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    assume {:nonnull} HostCaps != 0;
    assume HostCaps > 0;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    goto L16;

  anon19_Then:
    assume {:partition} 0 > ntStatus_54;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    goto L16;

  anon18_Then:
    assume {:partition} Irb_20 == 0;
    goto L34;

  L34:
    ntStatus_54 := -1073741670;
    goto L16;

  anon21_Then:
    assume {:partition} Irp_56 == 0;
    goto L34;

  anon20_Then:
    goto L12;
}



procedure {:origName "__AssumeBoundInt"} __AssumeBoundInt(actual_i_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "__AssumeBoundInt"} __AssumeBoundInt(actual_i_5: int)
{
  var vslice_dummy_var_213: int;

  anon0:
    call {:si_unique_call 1549} vslice_dummy_var_213 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlULongAdd"} RtlULongAdd(actual_ulAugend: int, actual_ulAddend: int, actual_pulResult: int) returns (Tmp_761: int);
  free ensures {:va_keep} Tmp_761 == 0 || Tmp_761 == -1073741675;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlULongAdd"} RtlULongAdd(actual_ulAugend: int, actual_ulAddend: int, actual_pulResult: int) returns (Tmp_761: int)
{
  var {:scalar} status_6: int;
  var {:scalar} ulAugend: int;
  var {:scalar} ulAddend: int;
  var {:pointer} pulResult: int;

  anon0:
    ulAugend := actual_ulAugend;
    ulAddend := actual_ulAddend;
    pulResult := actual_pulResult;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ulAugend + ulAddend >= ulAugend;
    assume {:nonnull} pulResult != 0;
    assume pulResult > 0;
    status_6 := 0;
    goto L8;

  L8:
    Tmp_761 := status_6;
    return;

  anon3_Then:
    assume {:partition} ulAugend > ulAugend + ulAddend;
    assume {:nonnull} pulResult != 0;
    assume pulResult > 0;
    status_6 := -1073741675;
    goto L8;
}



procedure {:origName "Av1394_GetVirtualUnitInfo"} Av1394_GetVirtualUnitInfo(actual_BusExtension_60: int, actual_UnitData_2: int) returns (Tmp_763: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} Tmp_763 == -1073741811 || Tmp_763 == -1073741808 || Tmp_763 == -1073741823 || Tmp_763 == 0 || Tmp_763 == -1073741670 || Tmp_763 == 5 || Tmp_763 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_GetVirtualUnitInfo"} Av1394_GetVirtualUnitInfo(actual_BusExtension_60: int, actual_UnitData_2: int) returns (Tmp_763: int)
{
  var {:scalar} Tmp_764: int;
  var {:pointer} Tmp_765: int;
  var {:pointer} sdv_599: int;
  var {:pointer} Irp_57: int;
  var {:pointer} Irb_21: int;
  var {:pointer} RootHandle_1: int;
  var {:pointer} sdv_603: int;
  var {:scalar} ResultLength_4: int;
  var {:pointer} KeyInfo_1: int;
  var {:scalar} KeyLength_1: int;
  var {:pointer} sdv_604: int;
  var {:scalar} ResultLength_5: int;
  var {:pointer} Tmp_767: int;
  var {:pointer} sdv_606: int;
  var {:pointer} Tmp_769: int;
  var {:pointer} sdv_608: int;
  var {:pointer} Tmp_770: int;
  var {:scalar} KeyLength_2: int;
  var {:scalar} Tmp_772: int;
  var {:pointer} sdv_610: int;
  var {:scalar} StackSize_15: int;
  var {:scalar} uniKeyName: int;
  var {:scalar} KeyLength_3: int;
  var {:pointer} sdv_612: int;
  var {:scalar} Tmp_773: int;
  var {:scalar} ntStatus_55: int;
  var {:pointer} uniModelId_3: int;
  var {:pointer} KeyHandle_2: int;
  var {:pointer} Tmp_775: int;
  var {:scalar} ResultLength_6: int;
  var {:pointer} KeyInfo_2: int;
  var {:scalar} Tmp_776: int;
  var {:scalar} ResultLength_7: int;
  var {:pointer} sdv_616: int;
  var {:scalar} Tmp_777: int;
  var {:scalar} Tmp_778: int;
  var {:pointer} sdv_619: int;
  var {:scalar} Tmp_779: int;
  var {:scalar} KeyLength_4: int;
  var {:scalar} KeyLength_5: int;
  var {:scalar} Tmp_781: int;
  var {:scalar} Tmp_782: int;
  var {:pointer} sdv_623: int;
  var {:pointer} KeyInfo_3: int;
  var {:pointer} KeyInfo_4: int;
  var {:scalar} Tmp_783: int;
  var {:scalar} uniTempName_1: int;
  var {:scalar} Tmp_784: int;
  var {:scalar} ResultLength_8: int;
  var {:pointer} KeyInfo_5: int;
  var {:scalar} Tmp_786: int;
  var {:pointer} uniVendorId_3: int;
  var {:pointer} BusExtension_60: int;
  var {:pointer} UnitData_2: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_2163: int;

  anon0:
    call {:si_unique_call 1550} uniKeyName := __HAVOC_malloc(12);
    call {:si_unique_call 1551} KeyHandle_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1552} uniTempName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1553} vslice_dummy_var_214 := __HAVOC_malloc(24);
    BusExtension_60 := actual_BusExtension_60;
    UnitData_2 := actual_UnitData_2;
    call {:si_unique_call 1554} vslice_dummy_var_219 := __HAVOC_malloc(32);
    call {:si_unique_call 1555} vslice_dummy_var_220 := __HAVOC_malloc(16);
    call {:si_unique_call 1556} vslice_dummy_var_221 := __HAVOC_malloc(40);
    call {:si_unique_call 1557} vslice_dummy_var_222 := __HAVOC_malloc(40);
    call {:si_unique_call 1558} vslice_dummy_var_223 := __HAVOC_malloc(44);
    call {:si_unique_call 1559} vslice_dummy_var_224 := __HAVOC_malloc(36);
    ntStatus_55 := 0;
    RootHandle_1 := 0;
    assume {:nonnull} KeyHandle_2 != 0;
    assume KeyHandle_2 > 0;
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1560} ntStatus_55 := IoOpenDeviceRegistryKey(0, 2, 983103, 0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} ntStatus_55 < 0;
    goto L259;

  L259:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} RootHandle_1 != 0;
    call {:si_unique_call 1561} vslice_dummy_var_217 := ZwClose(0);
    goto L260;

  L260:
    assume {:nonnull} KeyHandle_2 != 0;
    assume KeyHandle_2 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1562} vslice_dummy_var_218 := ZwClose(0);
    goto L264;

  L264:
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 1563} sdv_ExFreePool(0);
    goto L268;

  L268:
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1564} sdv_ExFreePool(0);
    goto L272;

  L272:
    Tmp_763 := ntStatus_55;
    return;

  anon56_Then:
    goto L272;

  anon55_Then:
    goto L268;

  anon54_Then:
    goto L264;

  anon53_Then:
    assume {:partition} RootHandle_1 == 0;
    goto L260;

  anon45_Then:
    assume {:partition} 0 <= ntStatus_55;
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    havoc Tmp_773;
    call {:si_unique_call 1565} sdv_612 := ExAllocatePoolWithTag(512, Tmp_773, 943206710);
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    havoc Tmp_764;
    call {:si_unique_call 1566} sdv_RtlZeroMemory(0, Tmp_764);
    call {:si_unique_call 1567} vslice_dummy_var_225 := corral_nondet();
    call {:si_unique_call 1568} sdv_InitializeObjectAttributes(0, 0, 576, 0, 0);
    call {:si_unique_call 1569} ntStatus_55 := ZwCreateKey(KeyHandle_2, 983103, 0, 0, 0, 0, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} ntStatus_55 < 0;
    goto L259;

  anon46_Then:
    assume {:partition} 0 <= ntStatus_55;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_781;
    call {:si_unique_call 1570} sdv_616 := ExAllocatePoolWithTag(512, Tmp_781, 943206710);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    KeyLength_4 := 20;
    call {:si_unique_call 1571} sdv_608 := ExAllocatePoolWithTag(512, KeyLength_4, 943206710);
    KeyInfo_5 := sdv_608;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} KeyInfo_5 != 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_778;
    call {:si_unique_call 1572} sdv_RtlZeroMemory(0, Tmp_778);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1573} vslice_dummy_var_226 := corral_nondet();
    call {:si_unique_call 1574} Tmp_775 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    call {:si_unique_call 1575} ntStatus_55 := ZwQueryValueKey(0, 0, 2, 0, KeyLength_4, Tmp_775);
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    havoc ResultLength_4;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} ntStatus_55 >= 0;
    assume {:nonnull} KeyInfo_5 != 0;
    assume KeyInfo_5 > 0;
    Tmp_770 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo_5);
    assume {:nonnull} Tmp_770 != 0;
    assume Tmp_770 > 0;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    goto L79;

  L79:
    call {:si_unique_call 1576} sdv_ExFreePool(0);
    KeyLength_3 := 20;
    call {:si_unique_call 1577} sdv_610 := ExAllocatePoolWithTag(512, KeyLength_3, 943206710);
    KeyInfo_2 := sdv_610;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} KeyInfo_2 != 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_776;
    call {:si_unique_call 1578} sdv_RtlZeroMemory(0, Tmp_776);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1579} vslice_dummy_var_227 := corral_nondet();
    call {:si_unique_call 1580} Tmp_775 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    call {:si_unique_call 1581} ntStatus_55 := ZwQueryValueKey(0, 0, 2, 0, KeyLength_3, Tmp_775);
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    havoc ResultLength_5;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} ntStatus_55 >= 0;
    assume {:nonnull} KeyInfo_2 != 0;
    assume KeyInfo_2 > 0;
    Tmp_767 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo_2);
    assume {:nonnull} Tmp_767 != 0;
    assume Tmp_767 > 0;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    goto L107;

  L107:
    call {:si_unique_call 1582} sdv_ExFreePool(0);
    KeyLength_1 := 20;
    call {:si_unique_call 1583} sdv_599 := ExAllocatePoolWithTag(512, KeyLength_1, 943206710);
    KeyInfo_3 := sdv_599;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} KeyInfo_3 != 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_779;
    call {:si_unique_call 1584} sdv_RtlZeroMemory(0, Tmp_779);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1585} vslice_dummy_var_228 := corral_nondet();
    call {:si_unique_call 1586} Tmp_775 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    call {:si_unique_call 1587} ntStatus_55 := ZwQueryValueKey(0, 0, 2, 0, KeyLength_1, Tmp_775);
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    havoc ResultLength_8;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} ntStatus_55 >= 0;
    assume {:nonnull} KeyInfo_3 != 0;
    assume KeyInfo_3 > 0;
    Tmp_765 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo_3);
    assume {:nonnull} Tmp_765 != 0;
    assume Tmp_765 > 0;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    goto L136;

  L136:
    call {:si_unique_call 1588} sdv_ExFreePool(0);
    assume {:nonnull} BusExtension_60 != 0;
    assume BusExtension_60 > 0;
    havoc Tmp_769;
    assume {:nonnull} Tmp_769 != 0;
    assume Tmp_769 > 0;
    havoc StackSize_15;
    call {:si_unique_call 1589} Irp_57 := IoAllocateIrp(StackSize_15, 0);
    call {:si_unique_call 1590} sdv_623 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_21 := sdv_623;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Irp_57 != 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Irb_21 != 0;
    assume {:nonnull} Irb_21 != 0;
    assume Irb_21 > 0;
    assume {:nonnull} Irb_21 != 0;
    assume Irb_21 > 0;
    assume {:nonnull} Irb_21 != 0;
    assume Irb_21 > 0;
    assume {:nonnull} Irb_21 != 0;
    assume Irb_21 > 0;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    assume {:nonnull} BusExtension_60 != 0;
    assume BusExtension_60 > 0;
    havoc vslice_dummy_var_2163;
    call {:si_unique_call 1591} ntStatus_55 := Av_SubmitIrpSynch(vslice_dummy_var_2163, Irp_57, Irb_21);
    call {:si_unique_call 1592} IoFreeIrp(0);
    assume {:nonnull} BusExtension_60 != 0;
    assume BusExtension_60 > 0;
    call {:si_unique_call 1593} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_60), Irb_21);
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    uniVendorId_3 := uniVendorId__UNIT_DATA(UnitData_2);
    KeyLength_5 := 216;
    call {:si_unique_call 1594} sdv_606 := ExAllocatePoolWithTag(512, KeyLength_5, 943206710);
    KeyInfo_1 := sdv_606;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} KeyInfo_1 != 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_772;
    call {:si_unique_call 1595} sdv_RtlZeroMemory(0, Tmp_772);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1596} vslice_dummy_var_229 := corral_nondet();
    call {:si_unique_call 1597} Tmp_775 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    call {:si_unique_call 1598} ntStatus_55 := ZwQueryValueKey(0, 0, 2, 0, KeyLength_5, Tmp_775);
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    havoc ResultLength_7;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} ntStatus_55 >= 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    havoc Tmp_777;
    call {:si_unique_call 1599} sdv_603 := ExAllocatePoolWithTag(512, Tmp_777, 943206710);
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    havoc Tmp_783;
    call {:si_unique_call 1600} sdv_RtlZeroMemory(0, Tmp_783);
    call {:si_unique_call 1601} vslice_dummy_var_215 := corral_nondet();
    goto L211;

  L211:
    call {:si_unique_call 1602} sdv_ExFreePool(0);
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    uniModelId_3 := uniModelId__UNIT_DATA(UnitData_2);
    KeyLength_2 := 216;
    call {:si_unique_call 1603} sdv_604 := ExAllocatePoolWithTag(512, KeyLength_2, 943206710);
    KeyInfo_4 := sdv_604;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} KeyInfo_4 != 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_784;
    call {:si_unique_call 1604} sdv_RtlZeroMemory(0, Tmp_784);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1605} vslice_dummy_var_230 := corral_nondet();
    call {:si_unique_call 1606} Tmp_775 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    call {:si_unique_call 1607} ntStatus_55 := ZwQueryValueKey(0, 0, 2, 0, KeyLength_2, Tmp_775);
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    havoc ResultLength_6;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} ntStatus_55 >= 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    havoc Tmp_786;
    call {:si_unique_call 1608} sdv_619 := ExAllocatePoolWithTag(512, Tmp_786, 943206710);
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    havoc Tmp_782;
    call {:si_unique_call 1609} sdv_RtlZeroMemory(0, Tmp_782);
    call {:si_unique_call 1610} vslice_dummy_var_216 := corral_nondet();
    goto L256;

  L256:
    call {:si_unique_call 1611} sdv_ExFreePool(0);
    goto L259;

  anon66_Then:
    ntStatus_55 := -1073741670;
    goto L259;

  anon52_Then:
    assume {:partition} 0 > ntStatus_55;
    ntStatus_55 := 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    goto L256;

  anon65_Then:
    assume {:partition} KeyInfo_4 == 0;
    ntStatus_55 := -1073741670;
    goto L259;

  anon64_Then:
    ntStatus_55 := -1073741670;
    goto L259;

  anon51_Then:
    assume {:partition} 0 > ntStatus_55;
    ntStatus_55 := 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    goto L211;

  anon63_Then:
    assume {:partition} KeyInfo_1 == 0;
    ntStatus_55 := -1073741670;
    goto L259;

  anon50_Then:
    assume {:partition} Irb_21 == 0;
    goto L152;

  L152:
    ntStatus_55 := -1073741670;
    goto L259;

  anon62_Then:
    assume {:partition} Irp_57 == 0;
    goto L152;

  anon49_Then:
    assume {:partition} 0 > ntStatus_55;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    goto L136;

  anon61_Then:
    assume {:partition} KeyInfo_3 == 0;
    ntStatus_55 := -1073741670;
    goto L259;

  anon48_Then:
    assume {:partition} 0 > ntStatus_55;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    ntStatus_55 := 0;
    goto L107;

  anon60_Then:
    assume {:partition} KeyInfo_2 == 0;
    ntStatus_55 := -1073741670;
    goto L259;

  anon47_Then:
    assume {:partition} 0 > ntStatus_55;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    goto L79;

  anon59_Then:
    assume {:partition} KeyInfo_5 == 0;
    ntStatus_55 := -1073741670;
    goto L259;

  anon58_Then:
    ntStatus_55 := -1073741670;
    goto L259;

  anon57_Then:
    ntStatus_55 := -1073741670;
    goto L259;
}



procedure {:origName "RtlULongMult"} RtlULongMult(actual_ulMultiplicand: int, actual_ulMultiplier: int, actual_pulResult_1: int) returns (Tmp_787: int);
  free ensures {:va_keep} Tmp_787 == 0 || Tmp_787 == -1073741675;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlULongMult"} RtlULongMult(actual_ulMultiplicand: int, actual_ulMultiplier: int, actual_pulResult_1: int) returns (Tmp_787: int)
{
  var {:scalar} ull64Result: int;
  var {:scalar} ulMultiplicand: int;
  var {:scalar} ulMultiplier: int;
  var {:pointer} pulResult_1: int;

  anon0:
    ulMultiplicand := actual_ulMultiplicand;
    ulMultiplier := actual_ulMultiplier;
    pulResult_1 := actual_pulResult_1;
    ull64Result := ulMultiplicand * ulMultiplier;
    call {:si_unique_call 1612} Tmp_787 := RtlULongLongToULong(ull64Result, pulResult_1);
    return;
}



procedure {:origName "Av1394_RemoveConfigRomEntry"} Av1394_RemoveConfigRomEntry(actual_CromData_4: int) returns (Tmp_789: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_RemoveConfigRomEntry"} Av1394_RemoveConfigRomEntry(actual_CromData_4: int) returns (Tmp_789: int)
{
  var {:pointer} Irp_58: int;
  var {:pointer} Irb_22: int;
  var {:scalar} StackSize_16: int;
  var {:pointer} sdv_629: int;
  var {:scalar} ntStatus_56: int;
  var {:pointer} sdv_630: int;
  var {:pointer} BusExtension_61: int;
  var {:pointer} AvAdapterData_18: int;
  var {:pointer} SetLocalHostProps3_1: int;
  var {:pointer} Tmp_791: int;
  var {:pointer} CromData_4: int;
  var vslice_dummy_var_2164: int;

  anon0:
    CromData_4 := actual_CromData_4;
    ntStatus_56 := 0;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    havoc AvAdapterData_18;
    assume {:nonnull} AvAdapterData_18 != 0;
    assume AvAdapterData_18 > 0;
    havoc BusExtension_61;
    Irp_58 := 0;
    Irb_22 := 0;
    assume {:nonnull} BusExtension_61 != 0;
    assume BusExtension_61 > 0;
    havoc Tmp_791;
    assume {:nonnull} Tmp_791 != 0;
    assume Tmp_791 > 0;
    havoc StackSize_16;
    call {:si_unique_call 1613} Irp_58 := IoAllocateIrp(StackSize_16, 0);
    call {:si_unique_call 1614} sdv_629 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_22 := sdv_629;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irp_58 != 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irb_22 != 0;
    call {:si_unique_call 1615} sdv_630 := ExAllocatePoolWithTag(512, 16, 943206710);
    SetLocalHostProps3_1 := sdv_630;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} SetLocalHostProps3_1 != 0;
    assume {:nonnull} SetLocalHostProps3_1 != 0;
    assume SetLocalHostProps3_1 > 0;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    assume {:nonnull} SetLocalHostProps3_1 != 0;
    assume SetLocalHostProps3_1 > 0;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    assume {:nonnull} SetLocalHostProps3_1 != 0;
    assume SetLocalHostProps3_1 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} BusExtension_61 != 0;
    assume BusExtension_61 > 0;
    havoc vslice_dummy_var_2164;
    call {:si_unique_call 1616} ntStatus_56 := Av_SubmitIrpSynch(vslice_dummy_var_2164, Irp_58, Irb_22);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} ntStatus_56 >= 0;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 1617} sdv_ExFreePool(0);
    goto L47;

  L47:
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    goto L45;

  L45:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} SetLocalHostProps3_1 != 0;
    call {:si_unique_call 1618} sdv_ExFreePool(0);
    goto L51;

  L51:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irp_58 != 0;
    call {:si_unique_call 1619} IoFreeIrp(0);
    goto L55;

  L55:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_22 != 0;
    assume {:nonnull} BusExtension_61 != 0;
    assume BusExtension_61 > 0;
    call {:si_unique_call 1620} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_61), Irb_22);
    goto L59;

  L59:
    Tmp_789 := ntStatus_56;
    return;

  anon22_Then:
    assume {:partition} Irb_22 == 0;
    goto L59;

  anon21_Then:
    assume {:partition} Irp_58 == 0;
    goto L55;

  anon19_Then:
    assume {:partition} SetLocalHostProps3_1 == 0;
    goto L51;

  anon20_Then:
    goto L47;

  anon18_Then:
    assume {:partition} 0 > ntStatus_56;
    goto L45;

  anon24_Then:
    assume {:partition} SetLocalHostProps3_1 == 0;
    ntStatus_56 := -1073741670;
    goto L51;

  anon17_Then:
    assume {:partition} Irb_22 == 0;
    goto L25;

  L25:
    ntStatus_56 := -1073741670;
    goto L51;

  anon23_Then:
    assume {:partition} Irp_58 == 0;
    goto L25;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_3: int)
{
  var {:pointer} ListHead_3: int;
  var vslice_dummy_var_231: int;

  anon0:
    call {:si_unique_call 1621} vslice_dummy_var_231 := __HAVOC_malloc(4);
    ListHead_3 := actual_ListHead_3;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    return;
}



procedure {:origName "Av1394_GetHostDDIVersion"} Av1394_GetHostDDIVersion(actual_BusExtension_62: int) returns (Tmp_794: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_GetHostDDIVersion"} Av1394_GetHostDDIVersion(actual_BusExtension_62: int) returns (Tmp_794: int)
{
  var {:pointer} Irp_59: int;
  var {:pointer} Irb_23: int;
  var {:pointer} Tmp_795: int;
  var {:scalar} StackSize_17: int;
  var {:pointer} sdv_633: int;
  var {:scalar} ntStatus_57: int;
  var {:scalar} HostDDIVersion: int;
  var {:pointer} BusExtension_62: int;
  var vslice_dummy_var_2165: int;

  anon0:
    call {:si_unique_call 1622} HostDDIVersion := __HAVOC_malloc(8);
    BusExtension_62 := actual_BusExtension_62;
    ntStatus_57 := 0;
    Irp_59 := 0;
    Irb_23 := 0;
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    ntStatus_57 := -1073741811;
    goto L16;

  L16:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_59 != 0;
    call {:si_unique_call 1623} IoFreeIrp(0);
    goto L17;

  L17:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irb_23 != 0;
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    call {:si_unique_call 1624} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_62), Irb_23);
    goto L21;

  L21:
    Tmp_794 := ntStatus_57;
    return;

  anon17_Then:
    assume {:partition} Irb_23 == 0;
    goto L21;

  anon16_Then:
    assume {:partition} Irp_59 == 0;
    goto L17;

  anon15_Then:
    goto L12;

  L12:
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    havoc Tmp_795;
    assume {:nonnull} Tmp_795 != 0;
    assume Tmp_795 > 0;
    havoc StackSize_17;
    call {:si_unique_call 1625} Irp_59 := IoAllocateIrp(StackSize_17, 0);
    call {:si_unique_call 1626} sdv_633 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_23 := sdv_633;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irp_59 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irb_23 != 0;
    assume {:nonnull} Irb_23 != 0;
    assume Irb_23 > 0;
    assume {:nonnull} Irb_23 != 0;
    assume Irb_23 > 0;
    assume {:nonnull} Irb_23 != 0;
    assume Irb_23 > 0;
    assume {:nonnull} Irb_23 != 0;
    assume Irb_23 > 0;
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    havoc vslice_dummy_var_2165;
    call {:si_unique_call 1627} ntStatus_57 := Av_SubmitIrpSynch(vslice_dummy_var_2165, Irp_59, Irb_23);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ntStatus_57 >= 0;
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    goto L16;

  anon19_Then:
    assume {:partition} 0 > ntStatus_57;
    ntStatus_57 := 0;
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    goto L16;

  anon18_Then:
    assume {:partition} Irb_23 == 0;
    goto L34;

  L34:
    ntStatus_57 := -1073741670;
    goto L16;

  anon21_Then:
    assume {:partition} Irp_59 == 0;
    goto L34;

  anon20_Then:
    goto L12;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_4: int) returns (Tmp_797: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_4: int) returns (Tmp_797: int)
{
  var {:pointer} NextEntry_1: int;
  var {:pointer} Entry_2: int;
  var {:pointer} ListHead_4: int;

  anon0:
    ListHead_4 := actual_ListHead_4;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    havoc Entry_2;
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc NextEntry_1;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L9;

  L9:
    call {:si_unique_call 1628} FatalListEntryError(ListHead_4, Entry_2, NextEntry_1);
    goto L12;

  L12:
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    assume {:nonnull} NextEntry_1 != 0;
    assume NextEntry_1 > 0;
    Tmp_797 := Entry_2;
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L12;

  anon5_Then:
    goto L9;
}



procedure {:origName "Av1394_GetDeviceNodeId"} Av1394_GetDeviceNodeId(actual_PdoExtension_15: int) returns (Tmp_799: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_GetDeviceNodeId"} Av1394_GetDeviceNodeId(actual_PdoExtension_15: int) returns (Tmp_799: int)
{
  var {:pointer} Irp_60: int;
  var {:pointer} Irb_24: int;
  var {:pointer} Tmp_800: int;
  var {:pointer} Tmp_801: int;
  var {:scalar} StackSize_18: int;
  var {:pointer} sdv_636: int;
  var {:scalar} ntStatus_58: int;
  var {:pointer} BusExtension_63: int;
  var {:pointer} PdoExtension_15: int;
  var vslice_dummy_var_2166: int;

  anon0:
    PdoExtension_15 := actual_PdoExtension_15;
    ntStatus_58 := 0;
    Irp_60 := 0;
    Irb_24 := 0;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_801;
    assume {:nonnull} Tmp_801 != 0;
    assume Tmp_801 > 0;
    havoc BusExtension_63;
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    ntStatus_58 := -1073741811;
    goto L17;

  L17:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_60 != 0;
    call {:si_unique_call 1629} IoFreeIrp(0);
    goto L18;

  L18:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irb_24 != 0;
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    call {:si_unique_call 1630} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_63), Irb_24);
    goto L22;

  L22:
    Tmp_799 := ntStatus_58;
    return;

  anon17_Then:
    assume {:partition} Irb_24 == 0;
    goto L22;

  anon16_Then:
    assume {:partition} Irp_60 == 0;
    goto L18;

  anon15_Then:
    goto L13;

  L13:
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    havoc Tmp_800;
    assume {:nonnull} Tmp_800 != 0;
    assume Tmp_800 > 0;
    havoc StackSize_18;
    call {:si_unique_call 1631} Irp_60 := IoAllocateIrp(StackSize_18, 0);
    call {:si_unique_call 1632} sdv_636 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_24 := sdv_636;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irp_60 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irb_24 != 0;
    assume {:nonnull} Irb_24 != 0;
    assume Irb_24 > 0;
    assume {:nonnull} Irb_24 != 0;
    assume Irb_24 > 0;
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    havoc vslice_dummy_var_2166;
    call {:si_unique_call 1633} ntStatus_58 := Av_SubmitIrpSynch(vslice_dummy_var_2166, Irp_60, Irb_24);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ntStatus_58 >= 0;
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    assume {:nonnull} Irb_24 != 0;
    assume Irb_24 > 0;
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    assume {:nonnull} Irb_24 != 0;
    assume Irb_24 > 0;
    assume {:nonnull} Irb_24 != 0;
    assume Irb_24 > 0;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    goto L17;

  anon19_Then:
    assume {:partition} 0 > ntStatus_58;
    goto L17;

  anon18_Then:
    assume {:partition} Irb_24 == 0;
    goto L35;

  L35:
    ntStatus_58 := -1073741670;
    goto L17;

  anon21_Then:
    assume {:partition} Irp_60 == 0;
    goto L35;

  anon20_Then:
    goto L13;
}



procedure {:origName "FatalListEntryError"} FatalListEntryError(actual_p1_1: int, actual_p2_1: int, actual_p3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "FatalListEntryError"} FatalListEntryError(actual_p1_1: int, actual_p2_1: int, actual_p3: int)
{
  var vslice_dummy_var_232: int;

  anon0:
    call {:si_unique_call 1634} vslice_dummy_var_232 := __HAVOC_malloc(4);
    call {:si_unique_call 1635} RtlFailFast(3);
    return;
}



procedure {:origName "Av1394_GetHostCapabilities"} Av1394_GetHostCapabilities(actual_BusExtension_64: int) returns (Tmp_805: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_GetHostCapabilities"} Av1394_GetHostCapabilities(actual_BusExtension_64: int) returns (Tmp_805: int)
{
  var {:scalar} HostCaps_1: int;
  var {:pointer} Irp_61: int;
  var {:pointer} Irb_25: int;
  var {:pointer} Tmp_806: int;
  var {:scalar} StackSize_19: int;
  var {:pointer} sdv_639: int;
  var {:scalar} ntStatus_59: int;
  var {:pointer} BusExtension_64: int;
  var vslice_dummy_var_2167: int;

  anon0:
    call {:si_unique_call 1636} HostCaps_1 := __HAVOC_malloc(12);
    BusExtension_64 := actual_BusExtension_64;
    ntStatus_59 := 0;
    Irp_61 := 0;
    Irb_25 := 0;
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    ntStatus_59 := -1073741811;
    goto L16;

  L16:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irp_61 != 0;
    call {:si_unique_call 1637} IoFreeIrp(0);
    goto L17;

  L17:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Irb_25 != 0;
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    call {:si_unique_call 1638} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_64), Irb_25);
    goto L21;

  L21:
    Tmp_805 := ntStatus_59;
    return;

  anon19_Then:
    assume {:partition} Irb_25 == 0;
    goto L21;

  anon18_Then:
    assume {:partition} Irp_61 == 0;
    goto L17;

  anon17_Then:
    goto L12;

  L12:
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    havoc Tmp_806;
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    havoc StackSize_19;
    call {:si_unique_call 1639} Irp_61 := IoAllocateIrp(StackSize_19, 0);
    call {:si_unique_call 1640} sdv_639 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_25 := sdv_639;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irp_61 != 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irb_25 != 0;
    assume {:nonnull} Irb_25 != 0;
    assume Irb_25 > 0;
    assume {:nonnull} Irb_25 != 0;
    assume Irb_25 > 0;
    assume {:nonnull} Irb_25 != 0;
    assume Irb_25 > 0;
    assume {:nonnull} Irb_25 != 0;
    assume Irb_25 > 0;
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    havoc vslice_dummy_var_2167;
    call {:si_unique_call 1641} ntStatus_59 := Av_SubmitIrpSynch(vslice_dummy_var_2167, Irp_61, Irb_25);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} ntStatus_59 >= 0;
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    assume {:nonnull} HostCaps_1 != 0;
    assume HostCaps_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    assume {:nonnull} BusExtension_64 != 0;
    assume BusExtension_64 > 0;
    goto L16;

  anon24_Then:
    goto L16;

  anon21_Then:
    assume {:partition} 0 > ntStatus_59;
    goto L16;

  anon20_Then:
    assume {:partition} Irb_25 == 0;
    goto L34;

  L34:
    ntStatus_59 := -1073741670;
    goto L16;

  anon23_Then:
    assume {:partition} Irp_61 == 0;
    goto L34;

  anon22_Then:
    goto L12;
}



procedure {:origName "Av1394_GetDeviceSpeed"} Av1394_GetDeviceSpeed(actual_BusExtension_65: int) returns (Tmp_808: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_GetDeviceSpeed"} Av1394_GetDeviceSpeed(actual_BusExtension_65: int) returns (Tmp_808: int)
{
  var {:pointer} Irp_62: int;
  var {:pointer} Irb_26: int;
  var {:scalar} StackSize_20: int;
  var {:pointer} sdv_642: int;
  var {:scalar} ntStatus_60: int;
  var {:pointer} Tmp_810: int;
  var {:pointer} Tmp_811: int;
  var {:pointer} BusExtension_65: int;
  var vslice_dummy_var_2168: int;

  anon0:
    BusExtension_65 := actual_BusExtension_65;
    call {:si_unique_call 1642} Tmp_811 := __HAVOC_malloc(256);
    ntStatus_60 := 0;
    Irp_62 := 0;
    Irb_26 := 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    ntStatus_60 := -1073741811;
    goto L15;

  L15:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irp_62 != 0;
    call {:si_unique_call 1643} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Irb_26 != 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    call {:si_unique_call 1644} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_65), Irb_26);
    goto L20;

  L20:
    Tmp_808 := ntStatus_60;
    return;

  anon19_Then:
    assume {:partition} Irb_26 == 0;
    goto L20;

  anon18_Then:
    assume {:partition} Irp_62 == 0;
    goto L16;

  anon17_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    havoc Tmp_810;
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    havoc StackSize_20;
    call {:si_unique_call 1645} Irp_62 := IoAllocateIrp(StackSize_20, 0);
    call {:si_unique_call 1646} sdv_642 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_26 := sdv_642;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Irp_62 != 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irb_26 != 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    havoc Tmp_811;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    assume {:nonnull} Tmp_811 != 0;
    assume Tmp_811 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    havoc vslice_dummy_var_2168;
    call {:si_unique_call 1647} ntStatus_60 := Av_SubmitIrpSynch(vslice_dummy_var_2168, Irp_62, Irb_26);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} ntStatus_60 >= 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    goto L15;

  anon22_Then:
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    goto L15;

  anon21_Then:
    assume {:partition} 0 > ntStatus_60;
    goto L15;

  anon20_Then:
    assume {:partition} Irb_26 == 0;
    goto L33;

  L33:
    ntStatus_60 := -1073741670;
    goto L15;

  anon24_Then:
    assume {:partition} Irp_62 == 0;
    goto L33;

  anon23_Then:
    goto L11;
}



procedure {:origName "Av1394_FreeBandwidth"} Av1394_FreeBandwidth(actual_BusExtension_66: int, actual_Connect_14: int, actual_Speed_1: int, actual_BandwidthUnits_6: int) returns (Tmp_812: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_FreeBandwidth"} Av1394_FreeBandwidth(actual_BusExtension_66: int, actual_Connect_14: int, actual_Speed_1: int, actual_BandwidthUnits_6: int) returns (Tmp_812: int)
{
  var {:pointer} Tmp_813: int;
  var {:pointer} Irp_63: int;
  var {:pointer} Irb_27: int;
  var {:scalar} StackSize_21: int;
  var {:pointer} sdv_645: int;
  var {:scalar} ntStatus_61: int;
  var {:pointer} BusExtension_66: int;
  var {:scalar} Speed_1: int;
  var {:scalar} BandwidthUnits_6: int;
  var vslice_dummy_var_2169: int;

  anon0:
    BusExtension_66 := actual_BusExtension_66;
    Speed_1 := actual_Speed_1;
    BandwidthUnits_6 := actual_BandwidthUnits_6;
    ntStatus_61 := 0;
    Irp_63 := 0;
    Irb_27 := 0;
    assume {:nonnull} BusExtension_66 != 0;
    assume BusExtension_66 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} BusExtension_66 != 0;
    assume BusExtension_66 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    ntStatus_61 := -1073741811;
    goto L15;

  L15:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Irp_63 != 0;
    call {:si_unique_call 1648} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irb_27 != 0;
    assume {:nonnull} BusExtension_66 != 0;
    assume BusExtension_66 > 0;
    call {:si_unique_call 1649} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_66), Irb_27);
    goto L20;

  L20:
    Tmp_812 := ntStatus_61;
    return;

  anon15_Then:
    assume {:partition} Irb_27 == 0;
    goto L20;

  anon14_Then:
    assume {:partition} Irp_63 == 0;
    goto L16;

  anon13_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_66 != 0;
    assume BusExtension_66 > 0;
    havoc Tmp_813;
    assume {:nonnull} Tmp_813 != 0;
    assume Tmp_813 > 0;
    havoc StackSize_21;
    call {:si_unique_call 1650} Irp_63 := IoAllocateIrp(StackSize_21, 0);
    call {:si_unique_call 1651} sdv_645 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_27 := sdv_645;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irp_63 != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irb_27 != 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} BusExtension_66 != 0;
    assume BusExtension_66 > 0;
    havoc vslice_dummy_var_2169;
    call {:si_unique_call 1652} ntStatus_61 := Av_SubmitIrpSynch(vslice_dummy_var_2169, Irp_63, Irb_27);
    goto L15;

  anon16_Then:
    assume {:partition} Irb_27 == 0;
    goto L33;

  L33:
    ntStatus_61 := -1073741670;
    goto L15;

  anon18_Then:
    assume {:partition} Irp_63 == 0;
    goto L33;

  anon17_Then:
    goto L11;
}



procedure {:origName "RtlULongLongToULong"} RtlULongLongToULong(actual_ullOperand: int, actual_pulResult_2: int) returns (Tmp_815: int);
  free ensures {:va_keep} Tmp_815 == 0 || Tmp_815 == -1073741675;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlULongLongToULong"} RtlULongLongToULong(actual_ullOperand: int, actual_pulResult_2: int) returns (Tmp_815: int)
{
  var {:scalar} status_7: int;
  var {:scalar} ullOperand: int;
  var {:pointer} pulResult_2: int;

  anon0:
    ullOperand := actual_ullOperand;
    pulResult_2 := actual_pulResult_2;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} -1 >= ullOperand;
    assume {:nonnull} pulResult_2 != 0;
    assume pulResult_2 > 0;
    status_7 := 0;
    goto L8;

  L8:
    Tmp_815 := status_7;
    return;

  anon3_Then:
    assume {:partition} ullOperand > -1;
    assume {:nonnull} pulResult_2 != 0;
    assume pulResult_2 > 0;
    status_7 := -1073741675;
    goto L8;
}



procedure {:origName "Av1394_FreeChannel"} Av1394_FreeChannel(actual_BusExtension_67: int, actual_Connect_15: int) returns (Tmp_817: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_FreeChannel"} Av1394_FreeChannel(actual_BusExtension_67: int, actual_Connect_15: int) returns (Tmp_817: int)
{
  var {:pointer} Irp_64: int;
  var {:pointer} Irb_28: int;
  var {:scalar} StackSize_22: int;
  var {:pointer} sdv_648: int;
  var {:scalar} ntStatus_62: int;
  var {:pointer} Tmp_819: int;
  var {:pointer} BusExtension_67: int;
  var {:pointer} Connect_15: int;
  var vslice_dummy_var_2170: int;

  anon0:
    BusExtension_67 := actual_BusExtension_67;
    Connect_15 := actual_Connect_15;
    ntStatus_62 := 0;
    Irp_64 := 0;
    Irb_28 := 0;
    assume {:nonnull} BusExtension_67 != 0;
    assume BusExtension_67 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} BusExtension_67 != 0;
    assume BusExtension_67 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    ntStatus_62 := -1073741811;
    goto L15;

  L15:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Irp_64 != 0;
    call {:si_unique_call 1653} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irb_28 != 0;
    assume {:nonnull} BusExtension_67 != 0;
    assume BusExtension_67 > 0;
    call {:si_unique_call 1654} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_67), Irb_28);
    goto L20;

  L20:
    Tmp_817 := ntStatus_62;
    return;

  anon15_Then:
    assume {:partition} Irb_28 == 0;
    goto L20;

  anon14_Then:
    assume {:partition} Irp_64 == 0;
    goto L16;

  anon13_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_67 != 0;
    assume BusExtension_67 > 0;
    havoc Tmp_819;
    assume {:nonnull} Tmp_819 != 0;
    assume Tmp_819 > 0;
    havoc StackSize_22;
    call {:si_unique_call 1655} Irp_64 := IoAllocateIrp(StackSize_22, 0);
    call {:si_unique_call 1656} sdv_648 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_28 := sdv_648;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irp_64 != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irb_28 != 0;
    assume {:nonnull} Irb_28 != 0;
    assume Irb_28 > 0;
    assume {:nonnull} Irb_28 != 0;
    assume Irb_28 > 0;
    assume {:nonnull} Connect_15 != 0;
    assume Connect_15 > 0;
    assume {:nonnull} Irb_28 != 0;
    assume Irb_28 > 0;
    assume {:nonnull} BusExtension_67 != 0;
    assume BusExtension_67 > 0;
    havoc vslice_dummy_var_2170;
    call {:si_unique_call 1657} ntStatus_62 := Av_SubmitIrpSynch(vslice_dummy_var_2170, Irp_64, Irb_28);
    goto L15;

  anon16_Then:
    assume {:partition} Irb_28 == 0;
    goto L33;

  L33:
    ntStatus_62 := -1073741670;
    goto L15;

  anon18_Then:
    assume {:partition} Irp_64 == 0;
    goto L33;

  anon17_Then:
    goto L11;
}



procedure {:origName "Av1394_ReadPCR"} Av1394_ReadPCR(actual_BusExtension_68: int, actual_GenerationCount: int, actual_Type_7: int, actual_Index_2: int, actual_Pcr_9: int) returns (Tmp_820: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_ReadPCR"} Av1394_ReadPCR(actual_BusExtension_68: int, actual_GenerationCount: int, actual_Type_7: int, actual_Index_2: int, actual_Pcr_9: int) returns (Tmp_820: int)
{
  var {:scalar} Retries_2: int;
  var {:pointer} Irp_65: int;
  var {:pointer} Irb_29: int;
  var {:pointer} Mdl_3: int;
  var {:scalar} Tmp_821: int;
  var {:pointer} pData: int;
  var {:scalar} StackSize_23: int;
  var {:pointer} sdv_651: int;
  var {:scalar} ntStatus_63: int;
  var {:scalar} sdv_654: int;
  var {:pointer} Tmp_823: int;
  var {:pointer} BusExtension_68: int;
  var {:scalar} GenerationCount: int;
  var {:scalar} Type_7: int;
  var {:scalar} Index_2: int;
  var {:pointer} Pcr_9: int;
  var vslice_dummy_var_2171: int;

  anon0:
    BusExtension_68 := actual_BusExtension_68;
    GenerationCount := actual_GenerationCount;
    Type_7 := actual_Type_7;
    Index_2 := actual_Index_2;
    Pcr_9 := actual_Pcr_9;
    ntStatus_63 := 0;
    Retries_2 := 4;
    pData := Pcr_9;
    assume {:nonnull} BusExtension_68 != 0;
    assume BusExtension_68 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} BusExtension_68 != 0;
    assume BusExtension_68 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    ntStatus_63 := -1073741811;
    goto L18;

  L18:
    Tmp_820 := ntStatus_63;
    return;

  anon26_Then:
    goto L14;

  L14:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Index_2 > 30;
    ntStatus_63 := -1073741811;
    goto L18;

  anon25_Then:
    assume {:partition} 30 >= Index_2;
    assume {:nonnull} BusExtension_68 != 0;
    assume BusExtension_68 > 0;
    havoc Tmp_823;
    assume {:nonnull} Tmp_823 != 0;
    assume Tmp_823 > 0;
    havoc StackSize_23;
    goto L22;

  L22:
    call {:si_unique_call 1658} Retries_2, Irp_65, Irb_29, Mdl_3, Tmp_821, sdv_651, ntStatus_63 := Av1394_ReadPCR_loop_L22(Retries_2, Irp_65, Irb_29, Mdl_3, Tmp_821, StackSize_23, sdv_651, ntStatus_63, BusExtension_68, GenerationCount, Type_7, Index_2);
    goto L22_last;

  L22_last:
    call {:si_unique_call 1664} Irp_65 := IoAllocateIrp(StackSize_23, 0);
    call {:si_unique_call 1665} sdv_651 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_29 := sdv_651;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Irp_65 != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Irb_29 != 0;
    call {:si_unique_call 1659} Mdl_3 := IoAllocateMdl(0, 4, 0, 0, 0);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mdl_3 != 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Type_7 != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Type_7 == 1;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    goto L57;

  L57:
    assume {:nonnull} BusExtension_68 != 0;
    assume BusExtension_68 > 0;
    havoc vslice_dummy_var_2171;
    call {:si_unique_call 1660} ntStatus_63 := Av_SubmitIrpSynch(vslice_dummy_var_2171, Irp_65, Irb_29);
    call {:si_unique_call 1661} IoFreeIrp(0);
    assume {:nonnull} BusExtension_68 != 0;
    assume BusExtension_68 > 0;
    call {:si_unique_call 1662} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_68), Irb_29);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mdl_3 != 0;
    call {:si_unique_call 1663} IoFreeMdl(0);
    goto L69;

  L69:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} ntStatus_63 != -1072562032;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} ntStatus_63 >= 0;
    assume {:nonnull} pData != 0;
    assume pData > 0;
    goto L18;

  anon32_Then:
    assume {:partition} 0 > ntStatus_63;
    Tmp_821 := Retries_2;
    Retries_2 := Retries_2 - 1;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Tmp_821 != 0;
    goto anon36_Else_dummy;

  anon36_Else_dummy:
    assume false;
    return;

  anon36_Then:
    assume {:partition} Tmp_821 == 0;
    goto L18;

  anon31_Then:
    assume {:partition} ntStatus_63 == -1072562032;
    goto L18;

  anon30_Then:
    assume {:partition} Mdl_3 == 0;
    goto L69;

  anon29_Then:
    assume {:partition} Type_7 != 1;
    goto L57;

  anon35_Then:
    assume {:partition} Type_7 == 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    goto L57;

  anon28_Then:
    assume {:partition} Mdl_3 == 0;
    ntStatus_63 := -1073741670;
    goto L18;

  anon27_Then:
    assume {:partition} Irb_29 == 0;
    goto L31;

  L31:
    ntStatus_63 := -1073741670;
    goto L18;

  anon34_Then:
    assume {:partition} Irp_65 == 0;
    goto L31;

  anon33_Then:
    goto L14;
}



procedure {:origName "Av1394_LockedSwap"} Av1394_LockedSwap(actual_BusExtension_69: int, actual_Argument: int, actual_Data: int, actual_pOldValue: int, actual_Address_1: int, actual_bGeneration_1: int, actual_Generation_3: int) returns (Tmp_824: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_LockedSwap"} Av1394_LockedSwap(actual_BusExtension_69: int, actual_Argument: int, actual_Data: int, actual_pOldValue: int, actual_Address_1: int, actual_bGeneration_1: int, actual_Generation_3: int) returns (Tmp_824: int)
{
  var {:scalar} Retries_3: int;
  var {:pointer} Irp_66: int;
  var {:pointer} Tmp_825: int;
  var {:pointer} Irb_30: int;
  var {:pointer} Tmp_826: int;
  var {:scalar} StackSize_24: int;
  var {:pointer} sdv_656: int;
  var {:scalar} ntStatus_64: int;
  var {:pointer} Tmp_827: int;
  var {:scalar} Tmp_828: int;
  var {:pointer} BusExtension_69: int;
  var {:scalar} Argument: int;
  var {:scalar} Data: int;
  var {:pointer} pOldValue: int;
  var {:scalar} Address_1: int;
  var {:scalar} bGeneration_1: int;
  var {:scalar} Generation_3: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_2172: int;

  anon0:
    BusExtension_69 := actual_BusExtension_69;
    Argument := actual_Argument;
    Data := actual_Data;
    pOldValue := actual_pOldValue;
    Address_1 := actual_Address_1;
    bGeneration_1 := actual_bGeneration_1;
    Generation_3 := actual_Generation_3;
    call {:si_unique_call 1666} Tmp_825 := __HAVOC_malloc(8);
    call {:si_unique_call 1667} Tmp_826 := __HAVOC_malloc(8);
    ntStatus_64 := 0;
    Retries_3 := 4;
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    ntStatus_64 := -1073741811;
    goto L15;

  L15:
    Tmp_824 := ntStatus_64;
    return;

  anon21_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    havoc Tmp_827;
    assume {:nonnull} Tmp_827 != 0;
    assume Tmp_827 > 0;
    havoc StackSize_24;
    goto L16;

  L16:
    call {:si_unique_call 1668} Retries_3, Irp_66, Tmp_825, Irb_30, Tmp_826, sdv_656, ntStatus_64, Tmp_828, vslice_dummy_var_233 := Av1394_LockedSwap_loop_L16(Retries_3, Irp_66, Tmp_825, Irb_30, Tmp_826, StackSize_24, sdv_656, ntStatus_64, Tmp_828, BusExtension_69, Argument, Data, pOldValue, Address_1, bGeneration_1, Generation_3, vslice_dummy_var_233);
    goto L16_last;

  L16_last:
    call {:si_unique_call 1673} Irp_66 := IoAllocateIrp(StackSize_24, 0);
    call {:si_unique_call 1674} sdv_656 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_30 := sdv_656;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Irp_66 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_30 != 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    havoc Tmp_825;
    assume {:nonnull} Tmp_825 != 0;
    assume Tmp_825 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    havoc Tmp_826;
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} bGeneration_1 != 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    goto L45;

  L45:
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    havoc vslice_dummy_var_2172;
    call {:si_unique_call 1669} ntStatus_64 := Av_SubmitIrpSynch(vslice_dummy_var_2172, Irp_66, Irb_30);
    call {:si_unique_call 1670} IoFreeIrp(0);
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    call {:si_unique_call 1671} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_69), Irb_30);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} ntStatus_64 == -1072562032;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} bGeneration_1 == 0;
    call {:si_unique_call 1672} vslice_dummy_var_233 := Av1394_GetGenerationCount(BusExtension_69);
    goto L62;

  L62:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} ntStatus_64 != -1072562032;
    Tmp_828 := Retries_3;
    Retries_3 := Retries_3 - 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Tmp_828 != 0;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    assume false;
    return;

  anon30_Then:
    assume {:partition} Tmp_828 == 0;
    goto L15;

  anon26_Then:
    assume {:partition} ntStatus_64 == -1072562032;
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    assume false;
    return;

  anon25_Then:
    assume {:partition} bGeneration_1 != 0;
    goto L15;

  anon23_Then:
    assume {:partition} ntStatus_64 != -1072562032;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} ntStatus_64 < 0;
    goto L62;

  anon24_Then:
    assume {:partition} 0 <= ntStatus_64;
    goto L15;

  anon29_Then:
    assume {:partition} bGeneration_1 == 0;
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    goto L45;

  anon22_Then:
    assume {:partition} Irb_30 == 0;
    goto L25;

  L25:
    ntStatus_64 := -1073741670;
    goto L15;

  anon28_Then:
    assume {:partition} Irp_66 == 0;
    goto L25;

  anon27_Then:
    goto L11;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_832: int;
  var {:pointer} Lookaside_3: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;

  anon0:
    call {:si_unique_call 1675} vslice_dummy_var_234 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_832 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_832 != 0;
    assume Tmp_832 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L1;

  anon5_Then:
    call {:si_unique_call 1676} vslice_dummy_var_235 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "Av1394_SetPacketSize"} Av1394_SetPacketSize(actual_BusExtension_70: int, actual_PacketSize: int) returns (Tmp_833: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_SetPacketSize"} Av1394_SetPacketSize(actual_BusExtension_70: int, actual_PacketSize: int) returns (Tmp_833: int)
{
  var {:pointer} Irp_67: int;
  var {:pointer} Irb_31: int;
  var {:scalar} StackSize_25: int;
  var {:pointer} sdv_661: int;
  var {:scalar} SetLocalProps: int;
  var {:scalar} ntStatus_65: int;
  var {:pointer} Tmp_835: int;
  var {:pointer} BusExtension_70: int;
  var {:scalar} PacketSize: int;
  var vslice_dummy_var_2173: int;

  anon0:
    call {:si_unique_call 1677} SetLocalProps := __HAVOC_malloc(8);
    BusExtension_70 := actual_BusExtension_70;
    PacketSize := actual_PacketSize;
    ntStatus_65 := 0;
    Irp_67 := 0;
    Irb_31 := 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    ntStatus_65 := -1073741811;
    goto L16;

  L16:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Irp_67 != 0;
    call {:si_unique_call 1678} IoFreeIrp(0);
    goto L17;

  L17:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irb_31 != 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    call {:si_unique_call 1679} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_70), Irb_31);
    goto L21;

  L21:
    Tmp_833 := ntStatus_65;
    return;

  anon15_Then:
    assume {:partition} Irb_31 == 0;
    goto L21;

  anon14_Then:
    assume {:partition} Irp_67 == 0;
    goto L17;

  anon13_Then:
    goto L12;

  L12:
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    havoc Tmp_835;
    assume {:nonnull} Tmp_835 != 0;
    assume Tmp_835 > 0;
    havoc StackSize_25;
    call {:si_unique_call 1680} Irp_67 := IoAllocateIrp(StackSize_25, 0);
    call {:si_unique_call 1681} sdv_661 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_31 := sdv_661;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irp_67 != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irb_31 != 0;
    assume {:nonnull} SetLocalProps != 0;
    assume SetLocalProps > 0;
    assume {:nonnull} SetLocalProps != 0;
    assume SetLocalProps > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    havoc vslice_dummy_var_2173;
    call {:si_unique_call 1682} ntStatus_65 := Av_SubmitIrpSynch(vslice_dummy_var_2173, Irp_67, Irb_31);
    goto L16;

  anon16_Then:
    assume {:partition} Irb_31 == 0;
    goto L34;

  L34:
    ntStatus_65 := -1073741670;
    goto L16;

  anon18_Then:
    assume {:partition} Irp_67 == 0;
    goto L34;

  anon17_Then:
    goto L12;
}



procedure {:origName "Av1394_AllocateChannel"} Av1394_AllocateChannel(actual_BusExtension_71: int, actual_Connect_16: int, actual_Channel_1: int) returns (Tmp_836: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_AllocateChannel"} Av1394_AllocateChannel(actual_BusExtension_71: int, actual_Connect_16: int, actual_Channel_1: int) returns (Tmp_836: int)
{
  var {:pointer} Irp_68: int;
  var {:pointer} Irb_32: int;
  var {:pointer} Tmp_837: int;
  var {:scalar} StackSize_26: int;
  var {:pointer} sdv_664: int;
  var {:scalar} ntStatus_66: int;
  var {:pointer} BusExtension_71: int;
  var {:pointer} Connect_16: int;
  var {:scalar} Channel_1: int;
  var vslice_dummy_var_2174: int;

  anon0:
    BusExtension_71 := actual_BusExtension_71;
    Connect_16 := actual_Connect_16;
    Channel_1 := actual_Channel_1;
    ntStatus_66 := 0;
    Irp_68 := 0;
    Irb_32 := 0;
    assume {:nonnull} BusExtension_71 != 0;
    assume BusExtension_71 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} BusExtension_71 != 0;
    assume BusExtension_71 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    ntStatus_66 := -1073741811;
    goto L15;

  L15:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_68 != 0;
    call {:si_unique_call 1683} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irb_32 != 0;
    assume {:nonnull} BusExtension_71 != 0;
    assume BusExtension_71 > 0;
    call {:si_unique_call 1684} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_71), Irb_32);
    goto L20;

  L20:
    Tmp_836 := ntStatus_66;
    return;

  anon17_Then:
    assume {:partition} Irb_32 == 0;
    goto L20;

  anon16_Then:
    assume {:partition} Irp_68 == 0;
    goto L16;

  anon15_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_71 != 0;
    assume BusExtension_71 > 0;
    havoc Tmp_837;
    assume {:nonnull} Tmp_837 != 0;
    assume Tmp_837 > 0;
    havoc StackSize_26;
    call {:si_unique_call 1685} Irp_68 := IoAllocateIrp(StackSize_26, 0);
    call {:si_unique_call 1686} sdv_664 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_32 := sdv_664;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irp_68 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irb_32 != 0;
    assume {:nonnull} Irb_32 != 0;
    assume Irb_32 > 0;
    assume {:nonnull} Irb_32 != 0;
    assume Irb_32 > 0;
    assume {:nonnull} Irb_32 != 0;
    assume Irb_32 > 0;
    assume {:nonnull} Irb_32 != 0;
    assume Irb_32 > 0;
    assume {:nonnull} Irb_32 != 0;
    assume Irb_32 > 0;
    assume {:nonnull} BusExtension_71 != 0;
    assume BusExtension_71 > 0;
    havoc vslice_dummy_var_2174;
    call {:si_unique_call 1687} ntStatus_66 := Av_SubmitIrpSynch(vslice_dummy_var_2174, Irp_68, Irb_32);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ntStatus_66 >= 0;
    assume {:nonnull} Connect_16 != 0;
    assume Connect_16 > 0;
    assume {:nonnull} Irb_32 != 0;
    assume Irb_32 > 0;
    goto L15;

  anon19_Then:
    assume {:partition} 0 > ntStatus_66;
    goto L15;

  anon18_Then:
    assume {:partition} Irb_32 == 0;
    goto L33;

  L33:
    ntStatus_66 := -1073741670;
    goto L15;

  anon21_Then:
    assume {:partition} Irp_68 == 0;
    goto L33;

  anon20_Then:
    goto L11;
}



procedure {:origName "Av1394_ReadTextualDescriptor"} Av1394_ReadTextualDescriptor(actual_BusExtension_72: int, actual_uniString: int, actual_Address_2: int) returns (Tmp_839: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_ReadTextualDescriptor"} Av1394_ReadTextualDescriptor(actual_BusExtension_72: int, actual_uniString: int, actual_Address_2: int) returns (Tmp_839: int)
{
  var {:scalar} i_6: int;
  var {:scalar} DataLength: int;
  var {:scalar} u_5: int;
  var {:scalar} Tmp_841: int;
  var {:dopa} {:scalar} ulLength_1: int;
  var {:scalar} sdv_667: int;
  var {:pointer} pData_1: int;
  var {:scalar} n_1: int;
  var {:scalar} ulUnicode: int;
  var {:pointer} sdv_668: int;
  var {:scalar} Tmp_842: int;
  var {:scalar} Tmp_843: int;
  var {:scalar} sdv_670: int;
  var {:scalar} ntStatus_67: int;
  var {:scalar} Tmp_845: int;
  var {:scalar} Tmp_847: int;
  var {:pointer} sdv_675: int;
  var {:dopa} {:scalar} ulQuadlet_1: int;
  var {:scalar} Tmp_848: int;
  var {:scalar} Tmp_850: int;
  var {:scalar} Tmp_851: int;
  var {:pointer} BusExtension_72: int;
  var {:pointer} uniString: int;
  var {:scalar} Address_2: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_2175: int;
  var vslice_dummy_var_2176: int;
  var vslice_dummy_var_2177: int;

  anon0:
    call {:si_unique_call 1688} u_5 := __HAVOC_malloc(20);
    call {:si_unique_call 1689} ulLength_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1690} vslice_dummy_var_236 := __HAVOC_malloc(12);
    call {:si_unique_call 1691} ulQuadlet_1 := __HAVOC_malloc(4);
    BusExtension_72 := actual_BusExtension_72;
    uniString := actual_uniString;
    Address_2 := actual_Address_2;
    ntStatus_67 := 0;
    pData_1 := 0;
    assume {:nonnull} ulLength_1 != 0;
    assume ulLength_1 > 0;
    call {:si_unique_call 1692} ntStatus_67 := Av1394_QuadletRead(BusExtension_72, ulQuadlet_1, Address_2);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} ntStatus_67 < 0;
    goto L85;

  L85:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} pData_1 != 0;
    call {:si_unique_call 1693} sdv_ExFreePool(0);
    goto L86;

  L86:
    Tmp_839 := ntStatus_67;
    return;

  anon41_Then:
    assume {:partition} pData_1 == 0;
    goto L86;

  anon33_Then:
    assume {:partition} 0 <= ntStatus_67;
    assume {:nonnull} u_5 != 0;
    assume u_5 > 0;
    assume {:nonnull} u_5 != 0;
    assume u_5 > 0;
    havoc DataLength;
    call {:si_unique_call 1694} ntStatus_67 := RtlULongMult(DataLength, 4, ulLength_1);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} ntStatus_67 >= 0;
    assume {:nonnull} ulLength_1 != 0;
    assume ulLength_1 > 0;
    havoc vslice_dummy_var_2175;
    call {:si_unique_call 1695} ntStatus_67 := RtlULongAdd(vslice_dummy_var_2175, 2, ulLength_1);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} ntStatus_67 >= 0;
    Address_2 := Address_2 + 4;
    call {:si_unique_call 1696} ntStatus_67 := Av1394_QuadletRead(BusExtension_72, ulQuadlet_1, Address_2);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} ntStatus_67 < 0;
    goto L85;

  anon36_Then:
    assume {:partition} 0 <= ntStatus_67;
    ulUnicode := sdv_667;
    assume {:nonnull} ulLength_1 != 0;
    assume ulLength_1 > 0;
    havoc vslice_dummy_var_2176;
    call {:si_unique_call 1697} sdv_675 := ExAllocatePoolWithTag(512, vslice_dummy_var_2176, 943206710);
    pData_1 := sdv_675;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} pData_1 != 0;
    assume {:nonnull} ulLength_1 != 0;
    assume ulLength_1 > 0;
    havoc vslice_dummy_var_2177;
    call {:si_unique_call 1698} sdv_RtlZeroMemory(0, vslice_dummy_var_2177);
    Address_2 := Address_2 + 8;
    i_6 := 0;
    goto L60;

  L60:
    call {:si_unique_call 1699} i_6, Tmp_841, n_1, Tmp_842, ntStatus_67, Tmp_845, Tmp_847, Tmp_848, Tmp_850 := Av1394_ReadTextualDescriptor_loop_L60(i_6, DataLength, u_5, Tmp_841, pData_1, n_1, ulUnicode, Tmp_842, ntStatus_67, Tmp_845, Tmp_847, Tmp_848, Tmp_850, BusExtension_72, Address_2);
    goto L60_last;

  L60_last:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} DataLength <= i_6;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_851;
    call {:si_unique_call 1700} sdv_668 := ExAllocatePoolWithTag(512, Tmp_851, 943206710);
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_843;
    call {:si_unique_call 1701} sdv_RtlZeroMemory(0, Tmp_843);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    call {:si_unique_call 1702} vslice_dummy_var_238 := corral_nondet();
    goto L85;

  anon42_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    call {:si_unique_call 1703} RtlInitAnsiString(0, 0);
    call {:si_unique_call 1704} vslice_dummy_var_237 := RtlAnsiStringToUnicodeString(0, 0, 0);
    goto L85;

  anon48_Then:
    ntStatus_67 := -1073741670;
    goto L85;

  anon37_Then:
    assume {:partition} i_6 < DataLength;
    Tmp_842 := Address_2 + 4 * i_6;
    assume {:nonnull} u_5 != 0;
    assume u_5 > 0;
    call {:si_unique_call 1705} ntStatus_67 := Av1394_QuadletRead(BusExtension_72, asUlong_unnamed_tag_70(u_5), Tmp_842);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} ntStatus_67 < 0;
    goto L85;

  anon38_Then:
    assume {:partition} 0 <= ntStatus_67;
    n_1 := 0;
    goto L70;

  L70:
    call {:si_unique_call 1706} Tmp_841, n_1, Tmp_845, Tmp_847, Tmp_848, Tmp_850 := Av1394_ReadTextualDescriptor_loop_L70(u_5, Tmp_841, n_1, ulUnicode, Tmp_845, Tmp_847, Tmp_848, Tmp_850);
    goto L70_last;

  L70_last:
    assume {:CounterLoop 4} {:Counter "n_1"} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} 4 > n_1;
    Tmp_841 := n_1;
    assume {:nonnull} u_5 != 0;
    assume u_5 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    Tmp_848 := n_1;
    assume {:nonnull} u_5 != 0;
    assume u_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L76;

  L76:
    Tmp_847 := n_1;
    assume {:nonnull} u_5 != 0;
    assume u_5 > 0;
    goto L77;

  L77:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    n_1 := n_1 + 1;
    goto L78;

  L78:
    n_1 := n_1 + 1;
    goto L78_dummy;

  L78_dummy:
    assume false;
    return;

  anon40_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    goto L78;

  anon45_Then:
    Tmp_845 := n_1;
    assume {:nonnull} u_5 != 0;
    assume u_5 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    Tmp_850 := n_1;
    assume {:nonnull} u_5 != 0;
    assume u_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L77;

  anon47_Then:
    goto L76;

  anon46_Then:
    goto L76;

  anon44_Then:
    goto L71;

  L71:
    call {:si_unique_call 1707} sdv_RtlCopyMemory(0, 0, 4);
    i_6 := i_6 + 1;
    goto L71_dummy;

  L71_dummy:
    assume false;
    return;

  anon39_Then:
    assume {:partition} n_1 >= 4;
    goto L71;

  anon43_Then:
    assume {:partition} pData_1 == 0;
    ntStatus_67 := -1073741670;
    goto L85;

  anon35_Then:
    assume {:partition} 0 > ntStatus_67;
    ntStatus_67 := -1073741670;
    goto L85;

  anon34_Then:
    assume {:partition} 0 > ntStatus_67;
    ntStatus_67 := -1073741670;
    goto L85;
}



procedure {:origName "RtlFailFast"} RtlFailFast(actual_Code: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlFailFast"} RtlFailFast(actual_Code: int)
{
  var vslice_dummy_var_239: int;

  anon0:
    call {:si_unique_call 1708} vslice_dummy_var_239 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Av1394_AllocateBandwidth"} Av1394_AllocateBandwidth(actual_BusExtension_73: int, actual_Connect_17: int, actual_Speed_2: int, actual_BandwidthUnits_7: int) returns (Tmp_854: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_AllocateBandwidth"} Av1394_AllocateBandwidth(actual_BusExtension_73: int, actual_Connect_17: int, actual_Speed_2: int, actual_BandwidthUnits_7: int) returns (Tmp_854: int)
{
  var {:pointer} Irp_69: int;
  var {:pointer} Irb_33: int;
  var {:pointer} Tmp_856: int;
  var {:scalar} StackSize_27: int;
  var {:pointer} sdv_678: int;
  var {:scalar} ntStatus_68: int;
  var {:pointer} BusExtension_73: int;
  var {:pointer} Connect_17: int;
  var {:scalar} Speed_2: int;
  var {:scalar} BandwidthUnits_7: int;
  var vslice_dummy_var_2178: int;

  anon0:
    BusExtension_73 := actual_BusExtension_73;
    Connect_17 := actual_Connect_17;
    Speed_2 := actual_Speed_2;
    BandwidthUnits_7 := actual_BandwidthUnits_7;
    ntStatus_68 := 0;
    Irp_69 := 0;
    Irb_33 := 0;
    assume {:nonnull} BusExtension_73 != 0;
    assume BusExtension_73 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} BusExtension_73 != 0;
    assume BusExtension_73 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    ntStatus_68 := -1073741811;
    goto L15;

  L15:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_69 != 0;
    call {:si_unique_call 1709} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irb_33 != 0;
    assume {:nonnull} BusExtension_73 != 0;
    assume BusExtension_73 > 0;
    call {:si_unique_call 1710} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_73), Irb_33);
    goto L20;

  L20:
    Tmp_854 := ntStatus_68;
    return;

  anon17_Then:
    assume {:partition} Irb_33 == 0;
    goto L20;

  anon16_Then:
    assume {:partition} Irp_69 == 0;
    goto L16;

  anon15_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_73 != 0;
    assume BusExtension_73 > 0;
    havoc Tmp_856;
    assume {:nonnull} Tmp_856 != 0;
    assume Tmp_856 > 0;
    havoc StackSize_27;
    call {:si_unique_call 1711} Irp_69 := IoAllocateIrp(StackSize_27, 0);
    call {:si_unique_call 1712} sdv_678 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_33 := sdv_678;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irp_69 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irb_33 != 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} BusExtension_73 != 0;
    assume BusExtension_73 > 0;
    havoc vslice_dummy_var_2178;
    call {:si_unique_call 1713} ntStatus_68 := Av_SubmitIrpSynch(vslice_dummy_var_2178, Irp_69, Irb_33);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ntStatus_68 >= 0;
    assume {:nonnull} Connect_17 != 0;
    assume Connect_17 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    goto L15;

  anon19_Then:
    assume {:partition} 0 > ntStatus_68;
    goto L15;

  anon18_Then:
    assume {:partition} Irb_33 == 0;
    goto L33;

  L33:
    ntStatus_68 := -1073741670;
    goto L15;

  anon21_Then:
    assume {:partition} Irp_69 == 0;
    goto L33;

  anon20_Then:
    goto L11;
}



procedure {:origName "RtlUShortAdd"} RtlUShortAdd(actual_usAugend: int, actual_usAddend: int, actual_pusResult: int) returns (Tmp_857: int);
  free ensures {:va_keep} Tmp_857 == 0 || Tmp_857 == -1073741675;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlUShortAdd"} RtlUShortAdd(actual_usAugend: int, actual_usAddend: int, actual_pusResult: int) returns (Tmp_857: int)
{
  var {:scalar} status_8: int;
  var {:scalar} usAugend: int;
  var {:scalar} usAddend: int;
  var {:pointer} pusResult: int;

  anon0:
    usAugend := actual_usAugend;
    usAddend := actual_usAddend;
    pusResult := actual_pusResult;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} usAugend + usAddend >= usAugend;
    assume {:nonnull} pusResult != 0;
    assume pusResult > 0;
    status_8 := 0;
    goto L8;

  L8:
    Tmp_857 := status_8;
    return;

  anon3_Then:
    assume {:partition} usAugend > usAugend + usAddend;
    assume {:nonnull} pusResult != 0;
    assume pusResult > 0;
    status_8 := -1073741675;
    goto L8;
}



procedure {:origName "Av1394_BusResetNotify"} Av1394_BusResetNotify(actual_PdoExtension_16: int, actual_Irp_70: int, actual_Request_23: int) returns (Tmp_859: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_859 == 0 || Tmp_859 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_BusResetNotify"} Av1394_BusResetNotify(actual_PdoExtension_16: int, actual_Irp_70: int, actual_Request_23: int) returns (Tmp_859: int)
{
  var {:scalar} ntStatus_69: int;
  var {:pointer} ResetNotify: int;
  var {:pointer} Tmp_860: int;
  var {:scalar} Irql_27: int;
  var {:pointer} PdoExtension_16: int;
  var {:pointer} Request_23: int;

  anon0:
    PdoExtension_16 := actual_PdoExtension_16;
    Request_23 := actual_Request_23;
    ntStatus_69 := 0;
    assume {:nonnull} Request_23 != 0;
    assume Request_23 > 0;
    ResetNotify := GetPlugHandle__AV_61883_REQUEST(Request_23);
    call {:si_unique_call 1714} Tmp_860 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_860 != 0;
    assume Tmp_860 > 0;
    call {:si_unique_call 1715} sdv_KeAcquireSpinLock(0, Tmp_860);
    assume {:nonnull} Tmp_860 != 0;
    assume Tmp_860 > 0;
    havoc Irql_27;
    assume {:nonnull} ResetNotify != 0;
    assume ResetNotify > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} ResetNotify != 0;
    assume ResetNotify > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto L17;

  L17:
    call {:si_unique_call 1716} sdv_KeReleaseSpinLock(0, Irql_27);
    Tmp_859 := ntStatus_69;
    return;

  anon6_Then:
    ntStatus_69 := -1073741811;
    goto L17;

  anon5_Then:
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    assume {:nonnull} ResetNotify != 0;
    assume ResetNotify > 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    assume {:nonnull} ResetNotify != 0;
    assume ResetNotify > 0;
    goto L17;
}



procedure {:origName "Av1394_SetBusResetNotify"} Av1394_SetBusResetNotify(actual_BusExtension_74: int, actual_bEnable: int) returns (Tmp_861: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_SetBusResetNotify"} Av1394_SetBusResetNotify(actual_BusExtension_74: int, actual_bEnable: int) returns (Tmp_861: int)
{
  var {:pointer} Irp_71: int;
  var {:pointer} Irb_34: int;
  var {:scalar} StackSize_28: int;
  var {:pointer} sdv_681: int;
  var {:scalar} ntStatus_70: int;
  var {:pointer} Tmp_863: int;
  var {:pointer} BusExtension_74: int;
  var {:scalar} bEnable: int;
  var vslice_dummy_var_2179: int;

  anon0:
    BusExtension_74 := actual_BusExtension_74;
    bEnable := actual_bEnable;
    ntStatus_70 := 0;
    Irp_71 := 0;
    Irb_34 := 0;
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_70 := -1073741811;
    goto L15;

  L15:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_71 != 0;
    call {:si_unique_call 1717} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_34 != 0;
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    call {:si_unique_call 1718} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_74), Irb_34);
    goto L20;

  L20:
    Tmp_861 := ntStatus_70;
    return;

  anon21_Then:
    assume {:partition} Irb_34 == 0;
    goto L20;

  anon20_Then:
    assume {:partition} Irp_71 == 0;
    goto L16;

  anon19_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    havoc Tmp_863;
    assume {:nonnull} Tmp_863 != 0;
    assume Tmp_863 > 0;
    havoc StackSize_28;
    call {:si_unique_call 1719} Irp_71 := IoAllocateIrp(StackSize_28, 0);
    call {:si_unique_call 1720} sdv_681 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_34 := sdv_681;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_71 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_34 != 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} bEnable != 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    goto L42;

  L42:
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    goto L44;

  L44:
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    havoc vslice_dummy_var_2179;
    call {:si_unique_call 1721} ntStatus_70 := Av_SubmitIrpSynch(vslice_dummy_var_2179, Irp_71, Irb_34);
    goto L15;

  anon24_Then:
    assume {:partition} bEnable == 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    goto L42;

  anon27_Then:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} bEnable != 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    goto L51;

  L51:
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    goto L44;

  anon23_Then:
    assume {:partition} bEnable == 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    goto L51;

  anon22_Then:
    assume {:partition} Irb_34 == 0;
    goto L33;

  L33:
    ntStatus_70 := -1073741670;
    goto L15;

  anon26_Then:
    assume {:partition} Irp_71 == 0;
    goto L33;

  anon25_Then:
    goto L11;
}



procedure {:origName "Av1394_QuadletRead"} Av1394_QuadletRead(actual_BusExtension_75: int, actual_pData_2: int, actual_Address_3: int) returns (Tmp_864: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_QuadletRead"} Av1394_QuadletRead(actual_BusExtension_75: int, actual_pData_2: int, actual_Address_3: int) returns (Tmp_864: int)
{
  var {:scalar} Retries_4: int;
  var {:pointer} Irp_72: int;
  var {:pointer} Mdl_4: int;
  var {:pointer} Irb_35: int;
  var {:scalar} Tmp_865: int;
  var {:scalar} StackSize_29: int;
  var {:pointer} sdv_684: int;
  var {:scalar} ntStatus_71: int;
  var {:pointer} Tmp_867: int;
  var {:pointer} BusExtension_75: int;
  var {:scalar} Address_3: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_2180: int;

  anon0:
    BusExtension_75 := actual_BusExtension_75;
    Address_3 := actual_Address_3;
    ntStatus_71 := 0;
    Retries_4 := 4;
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    ntStatus_71 := -1073741811;
    goto L16;

  L16:
    Tmp_864 := ntStatus_71;
    return;

  anon21_Then:
    goto L12;

  L12:
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    havoc Tmp_867;
    assume {:nonnull} Tmp_867 != 0;
    assume Tmp_867 > 0;
    havoc StackSize_29;
    goto L17;

  L17:
    call {:si_unique_call 1722} Retries_4, Irp_72, Mdl_4, Irb_35, Tmp_865, sdv_684, ntStatus_71, vslice_dummy_var_240 := Av1394_QuadletRead_loop_L17(Retries_4, Irp_72, Mdl_4, Irb_35, Tmp_865, StackSize_29, sdv_684, ntStatus_71, BusExtension_75, Address_3, vslice_dummy_var_240);
    goto L17_last;

  L17_last:
    call {:si_unique_call 1729} Irp_72 := IoAllocateIrp(StackSize_29, 0);
    call {:si_unique_call 1730} sdv_684 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_35 := sdv_684;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Irp_72 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_35 != 0;
    call {:si_unique_call 1723} Mdl_4 := IoAllocateMdl(0, 4, 0, 0, 0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mdl_4 != 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    havoc vslice_dummy_var_2180;
    call {:si_unique_call 1724} ntStatus_71 := Av_SubmitIrpSynch(vslice_dummy_var_2180, Irp_72, Irb_35);
    call {:si_unique_call 1725} IoFreeIrp(0);
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    call {:si_unique_call 1726} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_75), Irb_35);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mdl_4 != 0;
    call {:si_unique_call 1727} IoFreeMdl(0);
    goto L61;

  L61:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} ntStatus_71 == -1072562032;
    call {:si_unique_call 1728} vslice_dummy_var_240 := Av1394_GetGenerationCount(BusExtension_75);
    goto L69;

  L69:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} ntStatus_71 != -1072562032;
    Tmp_865 := Retries_4;
    Retries_4 := Retries_4 - 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Tmp_865 != 0;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    assume false;
    return;

  anon30_Then:
    assume {:partition} Tmp_865 == 0;
    goto L16;

  anon27_Then:
    assume {:partition} ntStatus_71 == -1072562032;
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    assume false;
    return;

  anon25_Then:
    assume {:partition} ntStatus_71 != -1072562032;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} ntStatus_71 < 0;
    goto L69;

  anon26_Then:
    assume {:partition} 0 <= ntStatus_71;
    goto L16;

  anon24_Then:
    assume {:partition} Mdl_4 == 0;
    goto L61;

  anon23_Then:
    assume {:partition} Mdl_4 == 0;
    ntStatus_71 := -1073741670;
    goto L16;

  anon22_Then:
    assume {:partition} Irb_35 == 0;
    goto L26;

  L26:
    ntStatus_71 := -1073741670;
    goto L16;

  anon29_Then:
    assume {:partition} Irp_72 == 0;
    goto L26;

  anon28_Then:
    goto L12;
}



procedure {:origName "Av1394_GetGenerationCount"} Av1394_GetGenerationCount(actual_BusExtension_76: int) returns (Tmp_868: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Av1394_GetGenerationCount"} Av1394_GetGenerationCount(actual_BusExtension_76: int) returns (Tmp_868: int)
{
  var {:pointer} Irp_73: int;
  var {:pointer} Irb_36: int;
  var {:scalar} StackSize_30: int;
  var {:pointer} sdv_689: int;
  var {:scalar} ntStatus_72: int;
  var {:pointer} Tmp_870: int;
  var {:pointer} BusExtension_76: int;
  var vslice_dummy_var_2181: int;

  anon0:
    BusExtension_76 := actual_BusExtension_76;
    ntStatus_72 := 0;
    Irp_73 := 0;
    Irb_36 := 0;
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    ntStatus_72 := -1073741811;
    goto L15;

  L15:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_73 != 0;
    call {:si_unique_call 1731} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irb_36 != 0;
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    call {:si_unique_call 1732} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_76), Irb_36);
    goto L20;

  L20:
    Tmp_868 := ntStatus_72;
    return;

  anon17_Then:
    assume {:partition} Irb_36 == 0;
    goto L20;

  anon16_Then:
    assume {:partition} Irp_73 == 0;
    goto L16;

  anon15_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    havoc Tmp_870;
    assume {:nonnull} Tmp_870 != 0;
    assume Tmp_870 > 0;
    havoc StackSize_30;
    call {:si_unique_call 1733} Irp_73 := IoAllocateIrp(StackSize_30, 0);
    call {:si_unique_call 1734} sdv_689 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_36 := sdv_689;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irp_73 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irb_36 != 0;
    assume {:nonnull} Irb_36 != 0;
    assume Irb_36 > 0;
    assume {:nonnull} Irb_36 != 0;
    assume Irb_36 > 0;
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    havoc vslice_dummy_var_2181;
    call {:si_unique_call 1735} ntStatus_72 := Av_SubmitIrpSynch(vslice_dummy_var_2181, Irp_73, Irb_36);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ntStatus_72 >= 0;
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    assume {:nonnull} Irb_36 != 0;
    assume Irb_36 > 0;
    goto L15;

  anon19_Then:
    assume {:partition} 0 > ntStatus_72;
    goto L15;

  anon18_Then:
    assume {:partition} Irb_36 == 0;
    goto L33;

  L33:
    ntStatus_72 := -1073741670;
    goto L15;

  anon21_Then:
    assume {:partition} Irp_73 == 0;
    goto L33;

  anon20_Then:
    goto L11;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    assume (forall x: int :: { Mem_T.CompletionRoutine__IO_STACK_LOCATION[x] } Mem_T.CompletionRoutine__IO_STACK_LOCATION[x] <= 0 || Mem_T.CompletionRoutine__IO_STACK_LOCATION[x] > 728);
    return;
}



function {:inline true} {:fieldmap "Mem_T.AddDevice__DRIVER_EXTENSION"} {:fieldname "AddDevice"} AddDevice__DRIVER_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "AddressesReturned"} AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.AllocateAddressRange_unnamed_tag_68"} {:fieldname "AllocateAddressRange"} AllocateAddressRange_unnamed_tag_68(x: int) : int
{
  x + 472
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_42"} {:fieldname "Argument1"} Argument1_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Arguments__IRB_REQ_ASYNC_LOCK"} {:fieldname "Arguments"} Arguments__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.AsyncLock_unnamed_tag_68"} {:fieldname "AsyncLock"} AsyncLock_unnamed_tag_68(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.AsyncRead_unnamed_tag_68"} {:fieldname "AsyncRead"} AsyncRead_unnamed_tag_68(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncWrite_unnamed_tag_68"} {:fieldname "AsyncWrite"} AsyncWrite_unnamed_tag_68(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T._CIP_ATTACH_FRAME"} {:fieldname "AttachFrame"} AttachFrame__AV_61883_REQUEST(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.AttachIrb__CIP_DESCRIPTOR_DATA"} {:fieldname "AttachIrb"} AttachIrb__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 576
}

function {:inline true} {:fieldmap "Mem_T.AttachIrp__CIP_DESCRIPTOR_DATA"} {:fieldname "AttachIrp"} AttachIrp__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 572
}

function {:inline true} {:fieldmap "Mem_T.AvAdapterData__BUS_DEVICE_EXTENSION"} {:fieldname "AvAdapterData"} AvAdapterData__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.AvAdapterData__CMP_DATA"} {:fieldname "AvAdapterData"} AvAdapterData__CMP_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AvAdapterData__CROM_DATA"} {:fieldname "AvAdapterData"} AvAdapterData__CROM_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AvAdapterData__FCP_DATA"} {:fieldname "AvAdapterData"} AvAdapterData__FCP_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AvDataList"} AvDataList__AV_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AvDataLock__AV_DATA"} {:fieldname "AvDataLock"} AvDataLock__AV_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.BCCCounter__IPCR"} {:fieldname "BCCCounter"} BCCCounter__IPCR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BCCCounter__OPCR"} {:fieldname "BCCCounter"} BCCCounter__OPCR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.BC_Connections__CMP_GET_PLUG_STATE"} {:fieldname "BC_Connections"} BC_Connections__CMP_GET_PLUG_STATE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BlockPeriodRemainder__CIP_DATA"} {:fieldname "BlockPeriodRemainder"} BlockPeriodRemainder__CIP_DATA(x: int) : int
{
  x + 332
}

function {:inline true} {:fieldmap "Mem_T.BlockPeriodRemainder__CIP_DATA_FORMAT_VER3"} {:fieldname "BlockPeriodRemainder"} BlockPeriodRemainder__CIP_DATA_FORMAT_VER3(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.BlockPeriodResidue__CIP_DATA"} {:fieldname "BlockPeriodResidue"} BlockPeriodResidue__CIP_DATA(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.BlockPeriod__CIP_DATA"} {:fieldname "BlockPeriod"} BlockPeriod__CIP_DATA(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.BlockPeriod__CIP_DATA_FORMAT_VER2"} {:fieldname "BlockPeriod"} BlockPeriod__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.BlockSize__CIP_DATA"} {:fieldname "BlockSize"} BlockSize__CIP_DATA(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T.BlockSize__CIP_DATA_FORMAT_VER2"} {:fieldname "BlockSize"} BlockSize__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.BlocksPerPacket__CIP_DATA"} {:fieldname "BlocksPerPacket"} BlocksPerPacket__CIP_DATA(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.BlocksPerPacket__CIP_DATA_FORMAT_VER3"} {:fieldname "BlocksPerPacket"} BlocksPerPacket__CIP_DATA_FORMAT_VER3(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Buffer__STRING"} {:fieldname "Buffer"} Buffer__STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusBuffer__CIP_DESCRIPTOR_DATA"} {:fieldname "BusBuffer"} BusBuffer__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.BusExtension__COMPLETION_STRUCT"} {:fieldname "BusExtension"} BusExtension__COMPLETION_STRUCT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.BusHeader__CIP_DESCRIPTOR_DATA"} {:fieldname "BusHeader"} BusHeader__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 556
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__PNP_BUS_INFORMATION"} {:fieldname "BusNumber"} BusNumber__PNP_BUS_INFORMATION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.BusOwner__AV_CONNECT"} {:fieldname "BusOwner"} BusOwner__AV_CONNECT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotification_unnamed_tag_68"} {:fieldname "BusResetNotification"} BusResetNotification_unnamed_tag_68(x: int) : int
{
  x + 1060
}

function {:inline true} {:fieldmap "Mem_T.BusReset_unnamed_tag_68"} {:fieldname "BusReset"} BusReset_unnamed_tag_68(x: int) : int
{
  x + 972
}

function {:inline true} {:fieldmap "Mem_T.BusTypeGuid__PNP_BUS_INFORMATION"} {:fieldname "BusTypeGuid"} BusTypeGuid__PNP_BUS_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Byte1__UNICYCLE_TIME"} {:fieldname "Byte1"} Byte1__UNICYCLE_TIME(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Byte2__UNICYCLE_TIME"} {:fieldname "Byte2"} Byte2__UNICYCLE_TIME(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte3__UNICYCLE_TIME"} {:fieldname "Byte3"} Byte3__UNICYCLE_TIME(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Byte4__UNICYCLE_TIME"} {:fieldname "Byte4"} Byte4__UNICYCLE_TIME(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "BytesInFrame"} BytesInFrame__CIP_DATA(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.BytesPerFrameAvailable__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "BytesPerFrameAvailable"} BytesPerFrameAvailable__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CL_CycleCount__CYCLE_TIME"} {:fieldname "CL_CycleCount"} CL_CycleCount__CYCLE_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CL_CycleOffset__CYCLE_TIME"} {:fieldname "CL_CycleOffset"} CL_CycleOffset__CYCLE_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CL_SecondCount__CYCLE_TIME"} {:fieldname "CL_SecondCount"} CL_SecondCount__CYCLE_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CR_Node_UniqueID__CONFIG_ROM"} {:fieldname "CR_Node_UniqueID"} CR_Node_UniqueID__CONFIG_ROM(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CR_UnitInfo__CROM_ENTRY"} {:fieldname "CR_UnitInfo"} CR_UnitInfo__CROM_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CR_UnitSpecId__CROM_ENTRY"} {:fieldname "CR_UnitSpecId"} CR_UnitSpecId__CROM_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CR_UnitSwVersion__CROM_ENTRY"} {:fieldname "CR_UnitSwVersion"} CR_UnitSwVersion__CROM_ENTRY(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.CTSFlags__GET_UNIT_CAPABILITIES"} {:fieldname "CTSFlags"} CTSFlags__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CTS__PDO_DEVICE_EXTENSION"} {:fieldname "CTS"} CTS__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T.Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Callback"} Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Callback__ISOCH_DESCRIPTOR"} {:fieldname "Callback"} Callback__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._CIP_CANCEL_FRAME"} {:fieldname "CancelFrame"} CancelFrame__AV_61883_REQUEST(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.CanonCount__AV_ADAPTER_DATA"} {:fieldname "CanonCount"} CanonCount__AV_ADAPTER_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_30"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_30(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ChannelBase__MPR"} {:fieldname "ChannelBase"} ChannelBase__MPR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Channel__AV_CONNECT"} {:fieldname "Channel"} Channel__AV_CONNECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Channel__CIP_DATA"} {:fieldname "Channel"} Channel__CIP_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.Channel__IPCR"} {:fieldname "Channel"} Channel__IPCR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Channel__IRB_REQ_ISOCH_ALLOCATE_CHANNEL"} {:fieldname "Channel"} Channel__IRB_REQ_ISOCH_ALLOCATE_CHANNEL(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Channel__ISO_HEADER"} {:fieldname "Channel"} Channel__ISO_HEADER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Channel__OPCR"} {:fieldname "Channel"} Channel__OPCR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ChannelsAvailable__IRB_REQ_ISOCH_ALLOCATE_CHANNEL"} {:fieldname "ChannelsAvailable"} ChannelsAvailable__IRB_REQ_ISOCH_ALLOCATE_CHANNEL(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CipDataLock__CIP_DATA"} {:fieldname "CipDataLock"} CipDataLock__CIP_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "CipData"} CipData__AV_CONNECT(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.CipData__CIP_DESCRIPTOR_DATA"} {:fieldname "CipData"} CipData__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.CipDelay__CIP_DATA"} {:fieldname "CipDelay"} CipDelay__CIP_DATA(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T.CipFlags__CIP_DATA"} {:fieldname "CipFlags"} CipFlags__CIP_DATA(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.CipHeader__CIP_DATA"} {:fieldname "CipHeader"} CipHeader__CIP_DATA(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.CipPacketSize__CIP_DATA"} {:fieldname "CipPacketSize"} CipPacketSize__CIP_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.P_CMP_DATA"} {:fieldname "CmpData"} CmpData__AV_ADAPTER_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.P_CMP_DATA"} {:fieldname "CmpData"} CmpData__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 512
}

function {:inline true} {:fieldmap "Mem_T.CmpLock__CMP_DATA"} {:fieldname "CmpLock"} CmpLock__CMP_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CmpPacketSize__AV_CONNECT"} {:fieldname "CmpPacketSize"} CmpPacketSize__AV_CONNECT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "CompatIds"} CompatIds__PDO_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CompletedBytes__CIP_FRAME"} {:fieldname "CompletedBytes"} CompletedBytes__CIP_FRAME(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ConnectList"} ConnectList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T.ConnectLock__BUS_DEVICE_EXTENSION"} {:fieldname "ConnectLock"} ConnectLock__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.ConnectType__AV_CONNECT"} {:fieldname "ConnectType"} ConnectType__AV_CONNECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._CMP_CONNECT_VER3"} {:fieldname "Connect"} Connect__AV_61883_REQUEST(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Connect__CIP_DATA"} {:fieldname "Connect"} Connect__CIP_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Context1__ISOCH_DESCRIPTOR"} {:fieldname "Context1"} Context1__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Context2__ISOCH_DESCRIPTOR"} {:fieldname "Context2"} Context2__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Context__AV_PLUG"} {:fieldname "Context"} Context__AV_PLUG(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Context__BUS_RESET_NOTIFY"} {:fieldname "Context"} Context__BUS_RESET_NOTIFY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Context__CIP_NOTIFY_INFO"} {:fieldname "Context"} Context__CIP_NOTIFY_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Context__CIP_VALIDATE_INFO"} {:fieldname "Context"} Context__CIP_VALIDATE_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Context__CMP_CREATE_PLUG"} {:fieldname "Context"} Context__CMP_CREATE_PLUG(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.Context__CMP_MONITOR_DATA"} {:fieldname "Context"} Context__CMP_MONITOR_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Context__CMP_MONITOR_INFO"} {:fieldname "Context"} Context__CMP_MONITOR_INFO(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Context"} Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Count__DEVICE_RELATIONS"} {:fieldname "Count"} Count__DEVICE_RELATIONS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._CMP_CREATE_PLUG"} {:fieldname "CreatePlug"} CreatePlug__AV_61883_REQUEST(x: int) : int
{
  x + 272
}

function {:inline true} {:fieldmap "Mem_T.CromData__PDO_CROM_DATA"} {:fieldname "CromData"} CromData__PDO_CROM_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._CROM_ENTRY"} {:fieldname "CromEntry"} CromEntry__CROM_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "CromList"} CromList__AV_ADAPTER_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.CromMdl__CROM_DATA"} {:fieldname "CromMdl"} CromMdl__CROM_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.CtsMask__UNIT_DATA"} {:fieldname "CtsMask"} CtsMask__UNIT_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CurrCount__CIP_DATA"} {:fieldname "CurrCount"} CurrCount__CIP_DATA(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_6"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_6(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CycleCount__CIP_DATA"} {:fieldname "CycleCount"} CycleCount__CIP_DATA(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._UNICYCLE_TIME"} {:fieldname "CycleTime"} CycleTime__CIP_DATA(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T.CycleTime__ISOCH_DESCRIPTOR"} {:fieldname "CycleTime"} CycleTime__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.DBC__CIP_HEADER"} {:fieldname "DBC"} DBC__CIP_HEADER(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.DBC__TX_HEADER"} {:fieldname "DBC"} DBC__TX_HEADER(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.DBS__CIP_HEADER"} {:fieldname "DBS"} DBS__CIP_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DDIVersion__BUS_DEVICE_EXTENSION"} {:fieldname "DDIVersion"} DDIVersion__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.DDIVersion__CIP_DATA"} {:fieldname "DDIVersion"} DDIVersion__CIP_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DI_Length__DIRECTORY_INFO"} {:fieldname "DI_Length"} DI_Length__DIRECTORY_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataLength__TX_HEADER1"} {:fieldname "DataLength"} DataLength__TX_HEADER1(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DataRate__CMP_GET_PLUG_STATE"} {:fieldname "DataRate"} DataRate__CMP_GET_PLUG_STATE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DataRate__MPR"} {:fieldname "DataRate"} DataRate__MPR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DataRate__OPCR"} {:fieldname "DataRate"} DataRate__OPCR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DataValues__IRB_REQ_ASYNC_LOCK"} {:fieldname "DataValues"} DataValues__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Data"} Data__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DefaultData__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultData"} DefaultData__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DefaultLength__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultLength"} DefaultLength__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DefaultType__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultType"} DefaultType__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._CMP_DELETE_PLUG"} {:fieldname "DeletePlug"} DeletePlug__AV_61883_REQUEST(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DescriptorList"} DescriptorList__CIP_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.Descriptor__CIP_DESCRIPTOR_DATA"} {:fieldname "Descriptor"} Descriptor__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_LOCK"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_READ"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_WRITE"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DetachIrb__CIP_DESCRIPTOR_DATA"} {:fieldname "DetachIrb"} DetachIrb__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 568
}

function {:inline true} {:fieldmap "Mem_T.DetachIrp__CIP_DESCRIPTOR_DATA"} {:fieldname "DetachIrp"} DetachIrp__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 564
}

function {:inline true} {:fieldmap "Mem_T.DetectedDrift__CIP_DRIFT_DATA"} {:fieldname "DetectedDrift"} DetectedDrift__CIP_DRIFT_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceId"} DeviceId__PDO_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T.DeviceNodeAddress__BUS_DEVICE_EXTENSION"} {:fieldname "DeviceNodeAddress"} DeviceNodeAddress__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 500
}

function {:inline true} {:fieldmap "Mem_T.DeviceNodeAddress__BUS_GENERATION_NODE"} {:fieldname "DeviceNodeAddress"} DeviceNodeAddress__BUS_GENERATION_NODE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceNodeId__PDO_DEVICE_EXTENSION"} {:fieldname "DeviceNodeId"} DeviceNodeId__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__COMMON_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__PDO_DATA"} {:fieldname "DeviceObject"} DeviceObject__PDO_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_35"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_35(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.DiagLevel__UNIT_DIAG_LEVEL"} {:fieldname "DiagLevel"} DiagLevel__UNIT_DIAG_LEVEL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DirInfo_unnamed_tag_72"} {:fieldname "DirInfo"} DirInfo_unnamed_tag_72(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DirectoryHeader_unnamed_tag_70"} {:fieldname "DirectoryHeader"} DirectoryHeader_unnamed_tag_70(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._CMP_DISCONNECT"} {:fieldname "Disconnect"} Disconnect__AV_61883_REQUEST(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T._CIP_DRIFT_DATA"} {:fieldname "DriftData"} DriftData__CIP_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.DriftIteration__CIP_DRIFT_DATA"} {:fieldname "DriftIteration"} DriftIteration__CIP_DRIFT_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DriverExtension__DRIVER_OBJECT"} {:fieldname "DriverExtension"} DriverExtension__DRIVER_OBJECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__COMMON_DEVICE_EXTENSION"} {:fieldname "DriverObject"} DriverObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DriverUnload__DRIVER_OBJECT"} {:fieldname "DriverUnload"} DriverUnload__DRIVER_OBJECT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.EOH_0__CIP_HEADER"} {:fieldname "EOH_0"} EOH_0__CIP_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.EOH_1__CIP_HEADER"} {:fieldname "EOH_1"} EOH_1__CIP_HEADER(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.EntryContext__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "EntryContext"} EntryContext__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__AV_ADAPTER_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__AV_DATA_OWNERS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__CMP_MONITOR_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__CROM_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__FCP_NOTIFY_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__PDO_CROM_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Entry_unnamed_tag_72"} {:fieldname "Entry"} Entry_unnamed_tag_72(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Enumerated__PDO_DATA"} {:fieldname "Enumerated"} Enumerated__PDO_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Extension__AV_DATA_OWNERS"} {:fieldname "Extension"} Extension__AV_DATA_OWNERS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Extension__FCP_NOTIFY_DATA"} {:fieldname "Extension"} Extension__FCP_NOTIFY_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FDF_hi__CIP_DATA_FORMAT_VER2"} {:fieldname "FDF_hi"} FDF_hi__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FDF_hi__CIP_HEADER"} {:fieldname "FDF_hi"} FDF_hi__CIP_HEADER(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.FDF_lo__CIP_DATA_FORMAT_VER2"} {:fieldname "FDF_lo"} FDF_lo__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FDF_lo__CIP_HEADER"} {:fieldname "FDF_lo"} FDF_lo__CIP_HEADER(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.FDF_mid__CIP_DATA_FORMAT_VER2"} {:fieldname "FDF_mid"} FDF_mid__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.FDF_mid__CIP_HEADER"} {:fieldname "FDF_mid"} FDF_mid__CIP_HEADER(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.FMT__CIP_DATA_FORMAT_VER2"} {:fieldname "FMT"} FMT__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FMT__CIP_HEADER"} {:fieldname "FMT"} FMT__CIP_HEADER(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.FN__CIP_HEADER"} {:fieldname "FN"} FN__CIP_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.P_FCP_DATA"} {:fieldname "FcpData"} FcpData__AV_ADAPTER_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FcpList"} FcpList__AV_ADAPTER_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T._FCP_NOTIFY_DATA"} {:fieldname "FcpNotifyData"} FcpNotifyData__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.FcpReqFrame__FCP_DATA"} {:fieldname "FcpReqFrame"} FcpReqFrame__FCP_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FcpReqIrpList"} FcpReqIrpList__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.FcpReqMdl__FCP_DATA"} {:fieldname "FcpReqMdl"} FcpReqMdl__FCP_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FcpReqPktList"} FcpReqPktList__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.FcpReqPktLock__PDO_DEVICE_EXTENSION"} {:fieldname "FcpReqPktLock"} FcpReqPktLock__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "FcpReqPktPool"} FcpReqPktPool__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_RANGE"} {:fieldname "FcpReqRange"} FcpReqRange__FCP_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FcpRspFrame__FCP_DATA"} {:fieldname "FcpRspFrame"} FcpRspFrame__FCP_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FcpRspIrpList"} FcpRspIrpList__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.FcpRspMdl__FCP_DATA"} {:fieldname "FcpRspMdl"} FcpRspMdl__FCP_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FcpRspPktList"} FcpRspPktList__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.FcpRspPktLock__PDO_DEVICE_EXTENSION"} {:fieldname "FcpRspPktLock"} FcpRspPktLock__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "FcpRspPktPool"} FcpRspPktPool__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_RANGE"} {:fieldname "FcpRspRange"} FcpRspRange__FCP_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSListHead"} FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSpinLock"} FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Flags__AV_61883_REQUEST"} {:fieldname "Flags"} Flags__AV_61883_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__BUS_RESET_NOTIFY"} {:fieldname "Flags"} Flags__BUS_RESET_NOTIFY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__CIP_DATA"} {:fieldname "Flags"} Flags__CIP_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__CIP_FRAME"} {:fieldname "Flags"} Flags__CIP_FRAME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__CIP_FRAME_CONTEXT"} {:fieldname "Flags"} Flags__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__CMP_MONITOR_DATA"} {:fieldname "Flags"} Flags__CMP_MONITOR_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__FCP_NOTIFY_DATA"} {:fieldname "Flags"} Flags__FCP_NOTIFY_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRB"} {:fieldname "Flags"} Flags__IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Flags"} Flags__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__SET_FCP_NOTIFY"} {:fieldname "Flags"} Flags__SET_FCP_NOTIFY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__SET_UNIT_DIRECTORY"} {:fieldname "Flags"} Flags__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Form_0__CIP_HEADER"} {:fieldname "Form_0"} Form_0__CIP_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Form_1__CIP_HEADER"} {:fieldname "Form_1"} Form_1__CIP_HEADER(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._CIP_DATA_FORMAT_VER3"} {:fieldname "Format"} Format__CMP_CONNECT_VER3(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Fraction__CIP_DATA_FORMAT_VER2"} {:fieldname "Fraction"} Fraction__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.FrameLength__CIP_ATTACH_FRAME"} {:fieldname "FrameLength"} FrameLength__CIP_ATTACH_FRAME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FrameLength__CIP_FRAME_CONTEXT"} {:fieldname "FrameLength"} FrameLength__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FrameList"} FrameList__CIP_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.FrameSize__AV_PLUG"} {:fieldname "FrameSize"} FrameSize__AV_PLUG(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Frame__CIP_ATTACH_FRAME"} {:fieldname "Frame"} Frame__CIP_ATTACH_FRAME(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Frame__CIP_CANCEL_FRAME"} {:fieldname "Frame"} Frame__CIP_CANCEL_FRAME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Frame__CIP_FRAME_CONTEXT"} {:fieldname "Frame"} Frame__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Frame__CIP_NOTIFY_INFO"} {:fieldname "Frame"} Frame__CIP_NOTIFY_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Frame__FCP_GET_REQUEST"} {:fieldname "Frame"} Frame__FCP_GET_REQUEST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Frame__FCP_REQUEST_VER1"} {:fieldname "Frame"} Frame__FCP_REQUEST_VER1(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FreeAddressRange_unnamed_tag_68"} {:fieldname "FreeAddressRange"} FreeAddressRange_unnamed_tag_68(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FunctionNumber__IRB"} {:fieldname "FunctionNumber"} FunctionNumber__IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Function__AV_61883_REQUEST"} {:fieldname "Function"} Function__AV_61883_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FutureCount__CIP_DATA"} {:fieldname "FutureCount"} FutureCount__CIP_DATA(x: int) : int
{
  x + 308
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__BUS_DEVICE_EXTENSION"} {:fieldname "GenerationCount"} GenerationCount__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__IRB_REQ_GET_GENERATION_COUNT"} {:fieldname "GenerationCount"} GenerationCount__IRB_REQ_GET_GENERATION_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Get1394AddressFromDeviceObject_unnamed_tag_68"} {:fieldname "Get1394AddressFromDeviceObject"} Get1394AddressFromDeviceObject_unnamed_tag_68(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.GetConfigurationInformation_unnamed_tag_68"} {:fieldname "GetConfigurationInformation"} GetConfigurationInformation_unnamed_tag_68(x: int) : int
{
  x + 880
}

function {:inline true} {:fieldmap "Mem_T.GetGenerationCount_unnamed_tag_68"} {:fieldname "GetGenerationCount"} GetGenerationCount_unnamed_tag_68(x: int) : int
{
  x + 976
}

function {:inline true} {:fieldmap "Mem_T.GetLocalHostInformation_unnamed_tag_68"} {:fieldname "GetLocalHostInformation"} GetLocalHostInformation_unnamed_tag_68(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.GetMaxSpeedBetweenDevices_unnamed_tag_68"} {:fieldname "GetMaxSpeedBetweenDevices"} GetMaxSpeedBetweenDevices_unnamed_tag_68(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T._CMP_GET_PLUG_HANDLE"} {:fieldname "GetPlugHandle"} GetPlugHandle__AV_61883_REQUEST(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._CMP_GET_PLUG_STATE"} {:fieldname "GetPlugState"} GetPlugState__AV_61883_REQUEST(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._FCP_GET_REQUEST"} {:fieldname "GetRequest"} GetRequest__AV_61883_REQUEST(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T._GET_UNIT_INFO"} {:fieldname "GetUnitInfo"} GetUnitInfo__AV_61883_REQUEST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.HardwareFlags__BUS_DEVICE_EXTENSION"} {:fieldname "HardwareFlags"} HardwareFlags__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 508
}

function {:inline true} {:fieldmap "Mem_T.HardwareFlags__GET_UNIT_CAPABILITIES"} {:fieldname "HardwareFlags"} HardwareFlags__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.HeaderLength__TX_HEADER1"} {:fieldname "HeaderLength"} HeaderLength__TX_HEADER1(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HostCapabilities__GET_LOCAL_HOST_INFO2"} {:fieldname "HostCapabilities"} HostCapabilities__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.HostDDIMajorVersion__BUS_DEVICE_EXTENSION"} {:fieldname "HostDDIMajorVersion"} HostDDIMajorVersion__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 516
}

function {:inline true} {:fieldmap "Mem_T.HostDDIMinorVersion__BUS_DEVICE_EXTENSION"} {:fieldname "HostDDIMinorVersion"} HostDDIMinorVersion__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 520
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_ID__IO_ADDRESS"} {:fieldname "IA_Destination_ID"} IA_Destination_ID__IO_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_Offset__IO_ADDRESS"} {:fieldname "IA_Destination_Offset"} IA_Destination_Offset__IO_ADDRESS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IE_Key__IMMEDIATE_ENTRY"} {:fieldname "IE_Key"} IE_Key__IMMEDIATE_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IE_Value__IMMEDIATE_ENTRY"} {:fieldname "IE_Value"} IE_Value__IMMEDIATE_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_34"} {:fieldname "IdType"} IdType_unnamed_tag_34(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__GET_UNIT_INFO"} {:fieldname "Information"} Information__GET_UNIT_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InitStream__CIP_DATA"} {:fieldname "InitStream"} InitStream__CIP_DATA(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.InputPlugs__CMP_DATA"} {:fieldname "InputPlugs"} InputPlugs__CMP_DATA(x: int) : int
{
  x + 1008
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_22"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_22(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "IoLock"} IoLock__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "IrbPool"} IrbPool__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.IrbPool__CIP_DATA"} {:fieldname "IrbPool"} IrbPool__CIP_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Irb__COMPLETION_STRUCT"} {:fieldname "Irb"} Irb__COMPLETION_STRUCT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Irp__COMPLETION_STRUCT"} {:fieldname "Irp"} Irp__COMPLETION_STRUCT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IsochAllocateBandwidth_unnamed_tag_68"} {:fieldname "IsochAllocateBandwidth"} IsochAllocateBandwidth_unnamed_tag_68(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.IsochAllocateChannel_unnamed_tag_68"} {:fieldname "IsochAllocateChannel"} IsochAllocateChannel_unnamed_tag_68(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.IsochAllocateResources_unnamed_tag_68"} {:fieldname "IsochAllocateResources"} IsochAllocateResources_unnamed_tag_68(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.IsochAttachBuffers_unnamed_tag_68"} {:fieldname "IsochAttachBuffers"} IsochAttachBuffers_unnamed_tag_68(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.IsochDetachBuffers_unnamed_tag_68"} {:fieldname "IsochDetachBuffers"} IsochDetachBuffers_unnamed_tag_68(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.IsochFreeBandwidth_unnamed_tag_68"} {:fieldname "IsochFreeBandwidth"} IsochFreeBandwidth_unnamed_tag_68(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.IsochFreeChannel_unnamed_tag_68"} {:fieldname "IsochFreeChannel"} IsochFreeChannel_unnamed_tag_68(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.IsochFreeResources_unnamed_tag_68"} {:fieldname "IsochFreeResources"} IsochFreeResources_unnamed_tag_68(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.IsochHeader__CIP_DATA"} {:fieldname "IsochHeader"} IsochHeader__CIP_DATA(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.IsochListen_unnamed_tag_68"} {:fieldname "IsochListen"} IsochListen_unnamed_tag_68(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.IsochStop_unnamed_tag_68"} {:fieldname "IsochStop"} IsochStop_unnamed_tag_68(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.IsochTalk_unnamed_tag_68"} {:fieldname "IsochTalk"} IsochTalk_unnamed_tag_68(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LastBlock__CIP_DATA"} {:fieldname "LastBlock"} LastBlock__CIP_DATA(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.LastCount__CIP_DATA"} {:fieldname "LastCount"} LastCount__CIP_DATA(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.LastCycleCount__CIP_DRIFT_DATA"} {:fieldname "LastCycleCount"} LastCycleCount__CIP_DRIFT_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LegacyBusType__PNP_BUS_INFORMATION"} {:fieldname "LegacyBusType"} LegacyBusType__PNP_BUS_INFORMATION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Length"} Length__FCP_GET_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Length__FCP_REQUEST_ENTRY"} {:fieldname "Length"} Length__FCP_REQUEST_ENTRY(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Length"} Length_unnamed_tag_18(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry_unnamed_tag_6(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Listen__AV_61883_REQUEST"} {:fieldname "Listen"} Listen__AV_61883_REQUEST(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.LocalNodeAddress__BUS_DEVICE_EXTENSION"} {:fieldname "LocalNodeAddress"} LocalNodeAddress__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 492
}

function {:inline true} {:fieldmap "Mem_T.LocalNodeAddress__BUS_GENERATION_NODE"} {:fieldname "LocalNodeAddress"} LocalNodeAddress__BUS_GENERATION_NODE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LocalNodeId__CIP_DATA"} {:fieldname "LocalNodeId"} LocalNodeId__CIP_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Location__AV_PLUG"} {:fieldname "Location"} Location__AV_PLUG(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorVersion__GET_LOCAL_HOST_INFO8"} {:fieldname "MajorVersion"} MajorVersion__GET_LOCAL_HOST_INFO8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncPayloadRequested__SET_LOCAL_HOST_PROPS4"} {:fieldname "MaxAsyncPayloadRequested"} MaxAsyncPayloadRequested__SET_LOCAL_HOST_PROPS4(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncPayloadResult__SET_LOCAL_HOST_PROPS4"} {:fieldname "MaxAsyncPayloadResult"} MaxAsyncPayloadResult__SET_LOCAL_HOST_PROPS4(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxDataRate__BUS_DEVICE_EXTENSION"} {:fieldname "MaxDataRate"} MaxDataRate__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 480
}

function {:inline true} {:fieldmap "Mem_T.MaxDataRate__CMP_DATA"} {:fieldname "MaxDataRate"} MaxDataRate__CMP_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaxDataRate__GET_UNIT_CAPABILITIES"} {:fieldname "MaxDataRate"} MaxDataRate__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaxDriftIteration__CIP_DRIFT_DATA"} {:fieldname "MaxDriftIteration"} MaxDriftIteration__CIP_DRIFT_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "MaxSegmentSize"} MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaxSpeed__BUS_DEVICE_EXTENSION"} {:fieldname "MaxSpeed"} MaxSpeed__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__STRING"} {:fieldname "MaximumLength"} MaximumLength__STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Mdl__COMPLETION_STRUCT"} {:fieldname "Mdl"} Mdl__COMPLETION_STRUCT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_READ"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_WRITE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Mdl__ISOCH_DESCRIPTOR"} {:fieldname "Mdl"} Mdl__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Mdl__SET_LOCAL_HOST_PROPS3"} {:fieldname "Mdl"} Mdl__SET_LOCAL_HOST_PROPS3(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorVersion__GET_LOCAL_HOST_INFO8"} {:fieldname "MinorVersion"} MinorVersion__GET_LOCAL_HOST_INFO8(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MissedBlock__CIP_DATA"} {:fieldname "MissedBlock"} MissedBlock__CIP_DATA(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.ModelID__GET_UNIT_IDS"} {:fieldname "ModelID"} ModelID__GET_UNIT_IDS(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ModelId__UNIT_DATA"} {:fieldname "ModelId"} ModelId__UNIT_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeafBufferSize"} ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeaf"} ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.ModelText__GET_UNIT_IDS"} {:fieldname "ModelText"} ModelText__GET_UNIT_IDS(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._CMP_MONITOR_DATA"} {:fieldname "MonitorData"} MonitorData__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 348
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "MonitorList"} MonitorList__AV_ADAPTER_DATA(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T._CMP_MONITOR_PLUGS"} {:fieldname "MonitorPlugs"} MonitorPlugs__AV_61883_REQUEST(x: int) : int
{
  x + 448
}

function {:inline true} {:fieldmap "Mem_T._MPR"} {:fieldname "Mpr"} Mpr__PCR_MAP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Mpr_unnamed_tag_73"} {:fieldname "Mpr"} Mpr_unnamed_tag_73(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NA_Bus_Number__NODE_ADDRESS"} {:fieldname "NA_Bus_Number"} NA_Bus_Number__NODE_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NA_Node_Number__NODE_ADDRESS"} {:fieldname "NA_Node_Number"} NA_Node_Number__NODE_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Name__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Name"} Name__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._NODE_ADDRESS"} {:fieldname "NodeAddress"} NodeAddress__FCP_GET_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__FCP_REQUEST_ENTRY"} {:fieldname "NodeAddress"} NodeAddress__FCP_REQUEST_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT"} {:fieldname "NodeAddress"} NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "NodeID"} NodeID__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.NotifyContext__CIP_FRAME"} {:fieldname "NotifyContext"} NotifyContext__CIP_FRAME(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "NotifyFrameList"} NotifyFrameList__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 580
}

function {:inline true} {:fieldmap "Mem_T.NumBlocks__CIP_DATA"} {:fieldname "NumBlocks"} NumBlocks__CIP_DATA(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.NumInputPlugs__BUS_DEVICE_EXTENSION"} {:fieldname "NumInputPlugs"} NumInputPlugs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 476
}

function {:inline true} {:fieldmap "Mem_T.NumInputPlugs__GET_UNIT_CAPABILITIES"} {:fieldname "NumInputPlugs"} NumInputPlugs__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumOutputPlugs__BUS_DEVICE_EXTENSION"} {:fieldname "NumOutputPlugs"} NumOutputPlugs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 472
}

function {:inline true} {:fieldmap "Mem_T.NumOutputPlugs__GET_UNIT_CAPABILITIES"} {:fieldname "NumOutputPlugs"} NumOutputPlugs__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NumPackets__CIP_DESCRIPTOR_DATA"} {:fieldname "NumPackets"} NumPackets__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.NumPlugs__MPR"} {:fieldname "NumPlugs"} NumPlugs__MPR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NumberCompatIds__PDO_DATA"} {:fieldname "NumberCompatIds"} NumberCompatIds__PDO_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.NumberPDOs__BUS_DEVICE_EXTENSION"} {:fieldname "NumberPDOs"} NumberPDOs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.PP_DEVICE_OBJECT"} {:fieldname "Objects"} Objects__DEVICE_RELATIONS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Off_High__ADDRESS_OFFSET"} {:fieldname "Off_High"} Off_High__ADDRESS_OFFSET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__ADDRESS_OFFSET"} {:fieldname "Off_Low"} Off_Low__ADDRESS_OFFSET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OnLine__IPCR"} {:fieldname "OnLine"} OnLine__IPCR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.OnLine__OPCR"} {:fieldname "OnLine"} OnLine__OPCR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.OutputPlugs__CMP_DATA"} {:fieldname "OutputPlugs"} OutputPlugs__CMP_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.OverheadID__OPCR"} {:fieldname "OverheadID"} OverheadID__OPCR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_5"} {:fieldname "Overlay"} Overlay_unnamed_tag_5(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "OwnerList"} OwnerList__AV_ADAPTER_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Owner__AV_ADAPTER_DATA"} {:fieldname "Owner"} Owner__AV_ADAPTER_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Owner__AV_PLUG"} {:fieldname "Owner"} Owner__AV_PLUG(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.PPCCounter__IPCR"} {:fieldname "PPCCounter"} PPCCounter__IPCR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PPCCounter__OPCR"} {:fieldname "PPCCounter"} PPCCounter__OPCR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PP_Connections__CMP_GET_PLUG_STATE"} {:fieldname "PP_Connections"} PP_Connections__CMP_GET_PLUG_STATE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PacketOffset__CIP_FRAME_CONTEXT"} {:fieldname "PacketOffset"} PacketOffset__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Packet__CIP_FRAME"} {:fieldname "Packet"} Packet__CIP_FRAME(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Packet__CIP_FRAME_CONTEXT"} {:fieldname "Packet"} Packet__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Packet__CIP_VALIDATE_INFO"} {:fieldname "Packet"} Packet__CIP_VALIDATE_INFO(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Padding__CIP_DATA_FORMAT_VER2"} {:fieldname "Padding"} Padding__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParentDeviceObject__CIP_DATA"} {:fieldname "ParentDeviceObject"} ParentDeviceObject__CIP_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParentDeviceObject__COMMON_DEVICE_EXTENSION"} {:fieldname "ParentDeviceObject"} ParentDeviceObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Payload__CMP_GET_PLUG_STATE"} {:fieldname "Payload"} Payload__CMP_GET_PLUG_STATE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Payload__OPCR"} {:fieldname "Payload"} Payload__OPCR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pcr__CMP_CREATE_PLUG"} {:fieldname "Pcr"} Pcr__CMP_CREATE_PLUG(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Pcr__CMP_MONITOR_INFO"} {:fieldname "Pcr"} Pcr__CMP_MONITOR_INFO(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Pcr__CMP_SET_PLUG"} {:fieldname "Pcr"} Pcr__CMP_SET_PLUG(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Pcr__PCR_MAP"} {:fieldname "Pcr"} Pcr__PCR_MAP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PdoCromList"} PdoCromList__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.PdoData__PDO_DEVICE_EXTENSION"} {:fieldname "PdoData"} PdoData__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PdoList"} PdoList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PdoList"} PdoList__PDO_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PersistentExt__MPR"} {:fieldname "PersistentExt"} PersistentExt__MPR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PhysicalDeviceObject__COMMON_DEVICE_EXTENSION"} {:fieldname "PhysicalDeviceObject"} PhysicalDeviceObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PlugNum__AV_PLUG"} {:fieldname "PlugNum"} PlugNum__AV_PLUG(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PlugNum__CMP_CREATE_PLUG"} {:fieldname "PlugNum"} PlugNum__CMP_CREATE_PLUG(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.PlugNum__CMP_GET_PLUG_HANDLE"} {:fieldname "PlugNum"} PlugNum__CMP_GET_PLUG_HANDLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PlugNum__CMP_MONITOR_INFO"} {:fieldname "PlugNum"} PlugNum__CMP_MONITOR_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.PlugType__AV_PLUG"} {:fieldname "PlugType"} PlugType__AV_PLUG(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PlugType__CMP_CREATE_PLUG"} {:fieldname "PlugType"} PlugType__CMP_CREATE_PLUG(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PlugType__CMP_MONITOR_INFO"} {:fieldname "PlugType"} PlugType__CMP_MONITOR_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.QPC__CIP_HEADER"} {:fieldname "QPC"} QPC__CIP_HEADER(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.QueryRoutine__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "QueryRoutine"} QueryRoutine__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RX_NumDescriptors__BUS_DEVICE_EXTENSION"} {:fieldname "RX_NumDescriptors"} RX_NumDescriptors__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.RX_NumDescriptors__CIP_DATA"} {:fieldname "RX_NumDescriptors"} RX_NumDescriptors__CIP_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.RX_NumDescriptors__UNIT_ISOCH_PARAMS"} {:fieldname "RX_NumDescriptors"} RX_NumDescriptors__UNIT_ISOCH_PARAMS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.RX_NumPackets__BUS_DEVICE_EXTENSION"} {:fieldname "RX_NumPackets"} RX_NumPackets__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.RX_NumPackets__CIP_DATA"} {:fieldname "RX_NumPackets"} RX_NumPackets__CIP_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.RX_NumPackets__UNIT_ISOCH_PARAMS"} {:fieldname "RX_NumPackets"} RX_NumPackets__UNIT_ISOCH_PARAMS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RefCount__AV_ADAPTER_DATA"} {:fieldname "RefCount"} RefCount__AV_ADAPTER_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.RefCount__CROM_DATA"} {:fieldname "RefCount"} RefCount__CROM_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Removed__COMMON_DEVICE_EXTENSION"} {:fieldname "Removed"} Removed__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.RequestIrp__COMPLETION_STRUCT"} {:fieldname "RequestIrp"} RequestIrp__COMPLETION_STRUCT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._FCP_SEND_REQUEST"} {:fieldname "Request"} Request__AV_61883_REQUEST(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.RequestorMode__IRP"} {:fieldname "RequestorMode"} RequestorMode__IRP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Required1394Offset"} Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Reserved0__IPCR"} {:fieldname "Reserved0"} Reserved0__IPCR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__IPCR"} {:fieldname "Reserved1"} Reserved1__IPCR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Reserved__CIP_FRAME"} {:fieldname "Reserved"} Reserved__CIP_FRAME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Reserved__IRB_REQ_ASYNC_LOCK"} {:fieldname "Reserved"} Reserved__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.Reserved__IRB_REQ_ASYNC_READ"} {:fieldname "Reserved"} Reserved__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Reserved__MPR"} {:fieldname "Reserved"} Reserved__MPR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Reserved__OPCR"} {:fieldname "Reserved"} Reserved__OPCR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetContext"} ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__PDO_DEVICE_EXTENSION"} {:fieldname "ResetContext"} ResetContext__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.ResetLock__PDO_DEVICE_EXTENSION"} {:fieldname "ResetLock"} ResetLock__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetRoutine"} ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__PDO_DEVICE_EXTENSION"} {:fieldname "ResetRoutine"} ResetRoutine__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 332
}

function {:inline true} {:fieldmap "Mem_T._FCP_GET_RESPONSE"} {:fieldname "Response"} Response__AV_61883_REQUEST(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.SID__TX_HEADER"} {:fieldname "SID"} SID__TX_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SPH__CIP_HEADER"} {:fieldname "SPH"} SPH__CIP_HEADER(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SPH__TX_HEADER"} {:fieldname "SPH"} SPH__TX_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SYT_hi__CIP_HEADER"} {:fieldname "SYT_hi"} SYT_hi__CIP_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.SYT_hi__TX_HEADER"} {:fieldname "SYT_hi"} SYT_hi__TX_HEADER(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.SYT_lo__CIP_HEADER"} {:fieldname "SYT_lo"} SYT_lo__CIP_HEADER(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.SYT_lo__TX_HEADER"} {:fieldname "SYT_lo"} SYT_lo__TX_HEADER(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T._SET_FCP_NOTIFY"} {:fieldname "SetFcpNotify"} SetFcpNotify__AV_61883_REQUEST(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T.SetLocalHostProperties_unnamed_tag_68"} {:fieldname "SetLocalHostProperties"} SetLocalHostProperties_unnamed_tag_68(x: int) : int
{
  x + 872
}

function {:inline true} {:fieldmap "Mem_T._CMP_SET_PLUG"} {:fieldname "SetPlug"} SetPlug__AV_61883_REQUEST(x: int) : int
{
  x + 356
}

function {:inline true} {:fieldmap "Mem_T._SET_UNIT_DIRECTORY"} {:fieldname "SetUnitDirectory"} SetUnitDirectory__AV_61883_REQUEST(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T._SET_UNIT_INFO"} {:fieldname "SetUnitInfo"} SetUnitInfo__AV_61883_REQUEST(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Short1__UNICYCLE_TIME"} {:fieldname "Short1"} Short1__UNICYCLE_TIME(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Short2__UNICYCLE_TIME"} {:fieldname "Short2"} Short2__UNICYCLE_TIME(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.SourceCount__CIP_DATA"} {:fieldname "SourceCount"} SourceCount__CIP_DATA(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T.SourceLength__CIP_ATTACH_FRAME"} {:fieldname "SourceLength"} SourceLength__CIP_ATTACH_FRAME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SourceLength__CIP_FRAME_CONTEXT"} {:fieldname "SourceLength"} SourceLength__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SpeedSelected__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "SpeedSelected"} SpeedSelected__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Speed__AV_CONNECT"} {:fieldname "Speed"} Speed__AV_CONNECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Speed__CIP_DATA"} {:fieldname "Speed"} Speed__CIP_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.StartTime__IRB_REQ_ISOCH_LISTEN"} {:fieldname "StartTime"} StartTime__IRB_REQ_ISOCH_LISTEN(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Started__COMMON_DEVICE_EXTENSION"} {:fieldname "Started"} Started__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.State__AV_CONNECT"} {:fieldname "State"} State__AV_CONNECT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.State__CIP_DATA"} {:fieldname "State"} State__CIP_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State__CIP_DESCRIPTOR_DATA"} {:fieldname "State"} State__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.State__CMP_GET_PLUG_STATE"} {:fieldname "State"} State__CMP_GET_PLUG_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.State__CMP_MONITOR_INFO"} {:fieldname "State"} State__CMP_MONITOR_INFO(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_39"} {:fieldname "State"} State_unnamed_tag_39(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__CIP_FRAME"} {:fieldname "Status"} Status__CIP_FRAME(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Stop__AV_61883_REQUEST"} {:fieldname "Stop"} Stop__AV_61883_REQUEST(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.StreamType__CIP_DATA"} {:fieldname "StreamType"} StreamType__CIP_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SurpriseRemovalOK__DEVICE_CAPABILITIES"} {:fieldname "SurpriseRemovalOK"} SurpriseRemovalOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SwVersion__UNIT_DATA"} {:fieldname "SwVersion"} SwVersion__UNIT_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "SymbolicLinkName"} SymbolicLinkName__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__COMMON_DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.SytCount__CIP_DATA"} {:fieldname "SytCount"} SytCount__CIP_DATA(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.SytInterval__CIP_DATA"} {:fieldname "SytInterval"} SytInterval__CIP_DATA(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.TX_NumDescriptors__BUS_DEVICE_EXTENSION"} {:fieldname "TX_NumDescriptors"} TX_NumDescriptors__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.TX_NumDescriptors__CIP_DATA"} {:fieldname "TX_NumDescriptors"} TX_NumDescriptors__CIP_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.TX_NumDescriptors__UNIT_ISOCH_PARAMS"} {:fieldname "TX_NumDescriptors"} TX_NumDescriptors__UNIT_ISOCH_PARAMS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.TX_NumPackets__BUS_DEVICE_EXTENSION"} {:fieldname "TX_NumPackets"} TX_NumPackets__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.TX_NumPackets__CIP_DATA"} {:fieldname "TX_NumPackets"} TX_NumPackets__CIP_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.TX_NumPackets__UNIT_ISOCH_PARAMS"} {:fieldname "TX_NumPackets"} TX_NumPackets__UNIT_ISOCH_PARAMS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Tag__COMMON_DEVICE_EXTENSION"} {:fieldname "Tag"} Tag__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Tag__ISO_HEADER"} {:fieldname "Tag"} Tag__ISO_HEADER(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Tag__PDO_DATA"} {:fieldname "Tag"} Tag__PDO_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Talk__AV_61883_REQUEST"} {:fieldname "Talk"} Talk__AV_61883_REQUEST(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.Tcode__ISO_HEADER"} {:fieldname "Tcode"} Tcode__ISO_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ThisBlock__CIP_DATA"} {:fieldname "ThisBlock"} ThisBlock__CIP_DATA(x: int) : int
{
  x + 240
}

function {:inline true} {:fieldmap "Mem_T.TimeStamp__TS_HEADER"} {:fieldname "TimeStamp"} TimeStamp__TS_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TimerDpc"} TimerDpc__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 588
}

function {:inline true} {:fieldmap "Mem_T.Timestamp__CIP_FRAME"} {:fieldname "Timestamp"} Timestamp__CIP_FRAME(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TotalPackets__CIP_DATA"} {:fieldname "TotalPackets"} TotalPackets__CIP_DATA(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.TxHeader__CIP_DATA"} {:fieldname "TxHeader"} TxHeader__CIP_DATA(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.Type__CMP_CONNECT_VER3"} {:fieldname "Type"} Type__CMP_CONNECT_VER3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Type__CMP_DATA"} {:fieldname "Type"} Type__CMP_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type__CMP_GET_PLUG_HANDLE"} {:fieldname "Type"} Type__CMP_GET_PLUG_HANDLE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type__KEY_VALUE_PARTIAL_INFORMATION"} {:fieldname "Type"} Type__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type__SET_CMP_ADDRESS_TYPE"} {:fieldname "Type"} Type__SET_CMP_ADDRESS_TYPE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_39"} {:fieldname "Type"} Type_unnamed_tag_39(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__GET_UNIT_IDS"} {:fieldname "UniqueID"} UniqueID__GET_UNIT_IDS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.UniqueId__AV_ADAPTER_DATA"} {:fieldname "UniqueId"} UniqueId__AV_ADAPTER_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UniqueId__GET_LOCAL_HOST_INFO1"} {:fieldname "UniqueId"} UniqueId__GET_LOCAL_HOST_INFO1(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UniqueId"} UniqueId__PDO_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "UniqueId"} UniqueId__UNIT_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._UNIT_DATA"} {:fieldname "UnitData"} UnitData__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryBufferSize"} UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectory"} UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryBufferSize"} UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryLocation"} UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectory"} UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.UnitModelID__GET_UNIT_IDS"} {:fieldname "UnitModelID"} UnitModelID__GET_UNIT_IDS(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.UnitModelId__UNIT_DATA"} {:fieldname "UnitModelId"} UnitModelId__UNIT_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.UnitModelText__GET_UNIT_IDS"} {:fieldname "UnitModelText"} UnitModelText__GET_UNIT_IDS(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.UnitSpecId__CROM_DATA"} {:fieldname "UnitSpecId"} UnitSpecId__CROM_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitSpecId__PDO_CROM_DATA"} {:fieldname "UnitSpecId"} UnitSpecId__PDO_CROM_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.UnitSpecId__SET_UNIT_DIRECTORY"} {:fieldname "UnitSpecId"} UnitSpecId__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitSwVersion__CROM_DATA"} {:fieldname "UnitSwVersion"} UnitSwVersion__CROM_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.UnitSwVersion__PDO_CROM_DATA"} {:fieldname "UnitSwVersion"} UnitSwVersion__PDO_CROM_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitSwVersion__SET_UNIT_DIRECTORY"} {:fieldname "UnitSwVersion"} UnitSwVersion__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ValidateContext__CIP_FRAME"} {:fieldname "ValidateContext"} ValidateContext__CIP_FRAME(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.VendorID__GET_UNIT_IDS"} {:fieldname "VendorID"} VendorID__GET_UNIT_IDS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.VendorId__UNIT_DATA"} {:fieldname "VendorId"} VendorId__UNIT_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeafBufferSize"} VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeaf"} VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.VendorText__GET_UNIT_IDS"} {:fieldname "VendorText"} VendorText__GET_UNIT_IDS(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Version__AV_61883_REQUEST"} {:fieldname "Version"} Version__AV_61883_REQUEST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Version__UNIT_DDI_VERSION"} {:fieldname "Version"} Version__UNIT_DDI_VERSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.VolatileExt__MPR"} {:fieldname "VolatileExt"} VolatileExt__MPR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.asUchar_unnamed_tag_70"} {:fieldname "asUchar"} asUchar_unnamed_tag_70(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "asUlong"} asUlong_unnamed_tag_70(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.asUlong_unnamed_tag_72"} {:fieldname "asUlong"} asUlong_unnamed_tag_72(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.attachref__CIP_DATA"} {:fieldname "attachref"} attachref__CIP_DATA(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.bHeader__CIP_DATA_FORMAT_VER2"} {:fieldname "bHeader"} bHeader__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.cbref__CIP_DATA"} {:fieldname "cbref"} cbref__CIP_DATA(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.chPriority__IRB_REQ_ASYNC_LOCK"} {:fieldname "chPriority"} chPriority__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.chPriority__IRB_REQ_ASYNC_READ"} {:fieldname "chPriority"} chPriority__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulAccessType"} fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_LOCK"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_READ"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_WRITE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_BUS_RESET"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_BUS_RESET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ISOCH_STOP"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ISOCH_STOP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_ISOCH_FREE_BANDWIDTH"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_ISOCH_FREE_BANDWIDTH(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.fulTransactionType__IRB_REQ_ASYNC_LOCK"} {:fieldname "fulTransactionType"} fulTransactionType__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "hAddressRange"} hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.hBandwidth__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "hBandwidth"} hBandwidth__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.hBandwidth__IRB_REQ_ISOCH_FREE_BANDWIDTH"} {:fieldname "hBandwidth"} hBandwidth__IRB_REQ_ISOCH_FREE_BANDWIDTH(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.hConnect__CIP_LISTEN"} {:fieldname "hConnect"} hConnect__CIP_LISTEN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "hConnect"} hConnect__CMP_CONNECT_VER2(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "hConnect"} hConnect__CMP_CONNECT_VER3(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.hCromData__CROM_DATA"} {:fieldname "hCromData"} hCromData__CROM_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.hCromData__SET_LOCAL_HOST_PROPS3"} {:fieldname "hCromData"} hCromData__SET_LOCAL_HOST_PROPS3(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.hCromEntry__SET_UNIT_DIRECTORY"} {:fieldname "hCromEntry"} hCromEntry__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.hDestinationDeviceObjects__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "hDestinationDeviceObjects"} hDestinationDeviceObjects__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "hFcpReqRange"} hFcpReqRange__FCP_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "hFcpRspRange"} hFcpRspRange__FCP_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.hInputPlug__CMP_CONNECT_VER3"} {:fieldname "hInputPlug"} hInputPlug__CMP_CONNECT_VER3(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.hOutputPlug__CMP_CONNECT_VER3"} {:fieldname "hOutputPlug"} hOutputPlug__CMP_CONNECT_VER3(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.hPlug__CMP_CREATE_PLUG"} {:fieldname "hPlug"} hPlug__CMP_CREATE_PLUG(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.hPlug__CMP_DELETE_PLUG"} {:fieldname "hPlug"} hPlug__CMP_DELETE_PLUG(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.hPlug__CMP_GET_PLUG_HANDLE"} {:fieldname "hPlug"} hPlug__CMP_GET_PLUG_HANDLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.hResource__CIP_DATA"} {:fieldname "hResource"} hResource__CIP_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.hResource__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "hResource"} hResource__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.hResource__IRB_REQ_ISOCH_FREE_RESOURCES"} {:fieldname "hResource"} hResource__IRB_REQ_ISOCH_FREE_RESOURCES(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "iHandle"} iHandle__CMP_DATA(x: int) : int
{
  x + 9572
}

function {:inline true} {:fieldmap "Mem_T.iMap_Bus__CMP_DATA"} {:fieldname "iMap_Bus"} iMap_Bus__CMP_DATA(x: int) : int
{
  x + 7652
}

function {:inline true} {:fieldmap "Mem_T.iMap__CMP_DATA"} {:fieldname "iMap"} iMap__CMP_DATA(x: int) : int
{
  x + 3884
}

function {:inline true} {:fieldmap "Mem_T.iMdl__CMP_DATA"} {:fieldname "iMdl"} iMdl__CMP_DATA(x: int) : int
{
  x + 9540
}

function {:inline true} {:fieldmap "Mem_T._IPCR"} {:fieldname "iPCR"} iPCR__AV_PCR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.iPlug__AV_CONNECT"} {:fieldname "iPlug"} iPlug__AV_CONNECT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_RANGE"} {:fieldname "iRange"} iRange__CMP_DATA(x: int) : int
{
  x + 9560
}

function {:inline true} {:fieldmap "Mem_T.nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "nAddressesToFree"} nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nBandwidthUnitsRequired__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "nBandwidthUnitsRequired"} nBandwidthUnitsRequired__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_READ"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_WRITE"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nChannel__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "nChannel"} nChannel__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nChannel__IRB_REQ_ISOCH_FREE_CHANNEL"} {:fieldname "nChannel"} nChannel__IRB_REQ_ISOCH_FREE_CHANNEL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "nLength"} nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLength__SET_LOCAL_HOST_PROPS3"} {:fieldname "nLength"} nLength__SET_LOCAL_HOST_PROPS3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLevel__GET_UNIT_INFO"} {:fieldname "nLevel"} nLevel__GET_UNIT_INFO(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nMaxBufferSize__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "nMaxBufferSize"} nMaxBufferSize__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nMaxBytesPerFrameRequested__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "nMaxBytesPerFrameRequested"} nMaxBytesPerFrameRequested__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nMaxBytesPerFrameRequested__IRB_REQ_ISOCH_FREE_BANDWIDTH"} {:fieldname "nMaxBytesPerFrameRequested"} nMaxBytesPerFrameRequested__IRB_REQ_ISOCH_FREE_BANDWIDTH(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.nMaxBytesPerFrame__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "nMaxBytesPerFrame"} nMaxBytesPerFrame__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.nMaxBytesPerFrame__ISOCH_DESCRIPTOR"} {:fieldname "nMaxBytesPerFrame"} nMaxBytesPerFrame__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfArgBytes__IRB_REQ_ASYNC_LOCK"} {:fieldname "nNumberOfArgBytes"} nNumberOfArgBytes__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBuffers__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "nNumberOfBuffers"} nNumberOfBuffers__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToRead__IRB_REQ_ASYNC_READ"} {:fieldname "nNumberOfBytesToRead"} nNumberOfBytesToRead__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE"} {:fieldname "nNumberOfBytesToWrite"} nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfDataBytes__IRB_REQ_ASYNC_LOCK"} {:fieldname "nNumberOfDataBytes"} nNumberOfDataBytes__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfDescriptors__IRB_REQ_ISOCH_ATTACH_BUFFERS"} {:fieldname "nNumberOfDescriptors"} nNumberOfDescriptors__IRB_REQ_ISOCH_ATTACH_BUFFERS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.nQuadletsToStrip__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "nQuadletsToStrip"} nQuadletsToStrip__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.nRequestedChannel__IRB_REQ_ISOCH_ALLOCATE_CHANNEL"} {:fieldname "nRequestedChannel"} nRequestedChannel__IRB_REQ_ISOCH_ALLOCATE_CHANNEL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nSpeed__IRB_REQ_ASYNC_LOCK"} {:fieldname "nSpeed"} nSpeed__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.nSpeed__IRB_REQ_ASYNC_READ"} {:fieldname "nSpeed"} nSpeed__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.numAttached__CIP_DATA"} {:fieldname "numAttached"} numAttached__CIP_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "oHandle"} oHandle__CMP_DATA(x: int) : int
{
  x + 9556
}

function {:inline true} {:fieldmap "Mem_T.oMap_Bus__CMP_DATA"} {:fieldname "oMap_Bus"} oMap_Bus__CMP_DATA(x: int) : int
{
  x + 5768
}

function {:inline true} {:fieldmap "Mem_T.oMap__CMP_DATA"} {:fieldname "oMap"} oMap__CMP_DATA(x: int) : int
{
  x + 2000
}

function {:inline true} {:fieldmap "Mem_T.oMdl__CMP_DATA"} {:fieldname "oMdl"} oMdl__CMP_DATA(x: int) : int
{
  x + 9536
}

function {:inline true} {:fieldmap "Mem_T._OPCR"} {:fieldname "oPCR"} oPCR__AV_PCR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.oPlug__AV_CONNECT"} {:fieldname "oPlug"} oPlug__AV_CONNECT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_RANGE"} {:fieldname "oRange"} oRange__CMP_DATA(x: int) : int
{
  x + 9544
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "pAddressRange"} pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.pBuffer__IRB_REQ_ASYNC_LOCK"} {:fieldname "pBuffer"} pBuffer__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.pInputPlugs__BUS_DEVICE_EXTENSION"} {:fieldname "pInputPlugs"} pInputPlugs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.pIsochDescriptor__IRB_REQ_ISOCH_ATTACH_BUFFERS"} {:fieldname "pIsochDescriptor"} pIsochDescriptor__IRB_REQ_ISOCH_ATTACH_BUFFERS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.pOutputPlugs__BUS_DEVICE_EXTENSION"} {:fieldname "pOutputPlugs"} pOutputPlugs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 484
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__AV_PLUG"} {:fieldname "pfnNotify"} pfnNotify__AV_PLUG(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__BUS_RESET_NOTIFY"} {:fieldname "pfnNotify"} pfnNotify__BUS_RESET_NOTIFY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__CIP_FRAME"} {:fieldname "pfnNotify"} pfnNotify__CIP_FRAME(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__CMP_CREATE_PLUG"} {:fieldname "pfnNotify"} pfnNotify__CMP_CREATE_PLUG(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__CMP_MONITOR_DATA"} {:fieldname "pfnNotify"} pfnNotify__CMP_MONITOR_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.pfnValidate__CIP_FRAME"} {:fieldname "pfnValidate"} pfnValidate__CIP_FRAME(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.rsv__CIP_HEADER"} {:fieldname "rsv"} rsv__CIP_HEADER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.tCode__IRB_REQ_ASYNC_LOCK"} {:fieldname "tCode"} tCode__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.tCode__IRB_REQ_ASYNC_READ"} {:fieldname "tCode"} tCode__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.u__IRB"} {:fieldname "u"} u__IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "ulDiagLevel"} ulDiagLevel__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_LOCK"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_READ"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_WRITE"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulLength__ISOCH_DESCRIPTOR"} {:fieldname "ulLength"} ulLength__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulModelLength__GET_UNIT_IDS"} {:fieldname "ulModelLength"} ulModelLength__GET_UNIT_IDS(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "ulNumberOfDestinations"} ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ulTag__ISOCH_DESCRIPTOR"} {:fieldname "ulTag"} ulTag__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.ulUnitModelLength__GET_UNIT_IDS"} {:fieldname "ulUnitModelLength"} ulUnitModelLength__GET_UNIT_IDS(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ulVendorLength__GET_UNIT_IDS"} {:fieldname "ulVendorLength"} ulVendorLength__GET_UNIT_IDS(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ulongData__AV_PCR"} {:fieldname "ulongData"} ulongData__AV_PCR(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.ulongData_unnamed_tag_73"} {:fieldname "ulongData"} ulongData_unnamed_tag_73(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ulong__UNICYCLE_TIME"} {:fieldname "ulong"} ulong__UNICYCLE_TIME(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniModelId"} uniModelId__UNIT_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniUnitModelId"} uniUnitModelId__UNIT_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniVendorId"} uniVendorId__UNIT_DATA(x: int) : int
{
  x + 36
}

const {:string " "} unique strConst__li2bpl14: int;

const {:string "&"} unique strConst__li2bpl9: int;

const {:string "61883"} unique strConst__li2bpl8: int;

const {:string "61883\\"} unique strConst__li2bpl10: int;

const {:string "AvCmp_GetUnitCapabilities"} unique strConst__li2bpl0: int;

const {:string "CipDelay"} unique strConst__li2bpl15: int;

const {:string "DiagLevel"} unique strConst__li2bpl7: int;

const {:string "GENERIC"} unique strConst__li2bpl11: int;

const {:string "IEEE1394 AV Device"} unique strConst__li2bpl13: int;

const {:string "ModelId"} unique strConst__li2bpl18: int;

const {:string "SwVersion"} unique strConst__li2bpl19: int;

const {:string "The dispatch routine return when STATUS_PENDING is set for IRP->IoStatus.Status."} unique strConst__li2bpl2: int;

const {:string "The dispatch routine's return should not return STATUS_SUCCESS if the lower driver fails the IRP."} unique strConst__li2bpl5: int;

const {:string "The dispatch routine's return value does not match that of the IRP->IoStatus.Status."} unique strConst__li2bpl3: int;

const {:string "V1394"} unique strConst__li2bpl6: int;

const {:string "V61883\\"} unique strConst__li2bpl12: int;

const {:string "VDL"} unique strConst__li2bpl16: int;

const {:string "VendorId"} unique strConst__li2bpl17: int;

const {:string "caller"} unique strConst__li2bpl1: int;

const {:string "halt"} unique strConst__li2bpl4: int;

const {:string "szModelId"} unique strConst__li2bpl21: int;

const {:string "szVendorId"} unique strConst__li2bpl20: int;

const {:allocated} li2bplFunctionConstant354: int;

axiom li2bplFunctionConstant354 == 354;

const {:allocated} li2bplFunctionConstant355: int;

axiom li2bplFunctionConstant355 == 355;

const {:allocated} li2bplFunctionConstant371: int;

axiom li2bplFunctionConstant371 == 371;

const {:allocated} li2bplFunctionConstant372: int;

axiom li2bplFunctionConstant372 == 372;

const {:allocated} li2bplFunctionConstant373: int;

axiom li2bplFunctionConstant373 == 373;

const {:allocated} li2bplFunctionConstant383: int;

axiom li2bplFunctionConstant383 == 383;

const {:allocated} li2bplFunctionConstant384: int;

axiom li2bplFunctionConstant384 == 384;

const {:allocated} li2bplFunctionConstant385: int;

axiom li2bplFunctionConstant385 == 385;

const {:allocated} li2bplFunctionConstant386: int;

axiom li2bplFunctionConstant386 == 386;

const {:allocated} li2bplFunctionConstant387: int;

axiom li2bplFunctionConstant387 == 387;

const {:allocated} li2bplFunctionConstant388: int;

axiom li2bplFunctionConstant388 == 388;

const {:allocated} li2bplFunctionConstant389: int;

axiom li2bplFunctionConstant389 == 389;

const {:allocated} li2bplFunctionConstant390: int;

axiom li2bplFunctionConstant390 == 390;

const {:allocated} li2bplFunctionConstant392: int;

axiom li2bplFunctionConstant392 == 392;

const {:allocated} li2bplFunctionConstant393: int;

axiom li2bplFunctionConstant393 == 393;

const {:allocated} li2bplFunctionConstant394: int;

axiom li2bplFunctionConstant394 == 394;

const {:allocated} li2bplFunctionConstant395: int;

axiom li2bplFunctionConstant395 == 395;

const {:allocated} li2bplFunctionConstant396: int;

axiom li2bplFunctionConstant396 == 396;

const {:allocated} li2bplFunctionConstant397: int;

axiom li2bplFunctionConstant397 == 397;

const {:allocated} li2bplFunctionConstant398: int;

axiom li2bplFunctionConstant398 == 398;

const {:allocated} li2bplFunctionConstant399: int;

axiom li2bplFunctionConstant399 == 399;

const {:allocated} li2bplFunctionConstant400: int;

axiom li2bplFunctionConstant400 == 400;

const {:allocated} li2bplFunctionConstant401: int;

axiom li2bplFunctionConstant401 == 401;

const {:allocated} li2bplFunctionConstant402: int;

axiom li2bplFunctionConstant402 == 402;

const {:allocated} li2bplFunctionConstant403: int;

axiom li2bplFunctionConstant403 == 403;

const {:allocated} li2bplFunctionConstant404: int;

axiom li2bplFunctionConstant404 == 404;

const {:allocated} li2bplFunctionConstant405: int;

axiom li2bplFunctionConstant405 == 405;

const {:allocated} li2bplFunctionConstant406: int;

axiom li2bplFunctionConstant406 == 406;

const {:allocated} li2bplFunctionConstant407: int;

axiom li2bplFunctionConstant407 == 407;

const {:allocated} li2bplFunctionConstant408: int;

axiom li2bplFunctionConstant408 == 408;

const {:allocated} li2bplFunctionConstant409: int;

axiom li2bplFunctionConstant409 == 409;

const {:allocated} li2bplFunctionConstant410: int;

axiom li2bplFunctionConstant410 == 410;

const {:allocated} li2bplFunctionConstant411: int;

axiom li2bplFunctionConstant411 == 411;

const {:allocated} li2bplFunctionConstant416: int;

axiom li2bplFunctionConstant416 == 416;

const {:allocated} li2bplFunctionConstant434: int;

axiom li2bplFunctionConstant434 == 434;

const {:allocated} li2bplFunctionConstant435: int;

axiom li2bplFunctionConstant435 == 435;

const {:allocated} li2bplFunctionConstant438: int;

axiom li2bplFunctionConstant438 == 438;

const {:allocated} li2bplFunctionConstant439: int;

axiom li2bplFunctionConstant439 == 439;

const {:allocated} li2bplFunctionConstant445: int;

axiom li2bplFunctionConstant445 == 445;

const {:allocated} li2bplFunctionConstant464: int;

axiom li2bplFunctionConstant464 == 464;

const {:allocated} li2bplFunctionConstant465: int;

axiom li2bplFunctionConstant465 == 465;

const {:allocated} li2bplFunctionConstant466: int;

axiom li2bplFunctionConstant466 == 466;

const {:allocated} li2bplFunctionConstant493: int;

axiom li2bplFunctionConstant493 == 493;

const {:allocated} li2bplFunctionConstant496: int;

axiom li2bplFunctionConstant496 == 496;

const {:allocated} li2bplFunctionConstant498: int;

axiom li2bplFunctionConstant498 == 498;

const {:allocated} li2bplFunctionConstant499: int;

axiom li2bplFunctionConstant499 == 499;

const {:allocated} li2bplFunctionConstant500: int;

axiom li2bplFunctionConstant500 == 500;

const {:allocated} li2bplFunctionConstant654: int;

axiom li2bplFunctionConstant654 == 654;

const {:allocated} li2bplFunctionConstant723: int;

axiom li2bplFunctionConstant723 == 723;

const {:allocated} li2bplFunctionConstant725: int;

axiom li2bplFunctionConstant725 == 725;

const {:allocated} li2bplFunctionConstant728: int;

axiom li2bplFunctionConstant728 == 728;

implementation {:origName "AvCip_ProcessListenPacket"} AvCip_ProcessListenPacket#0(actual_DeviceObject_23: int, actual_Irp_23: int, actual_DescriptorDataIn: int) returns (Tmp_346: int)
{
  var {:scalar} i_1: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} Tmp_348: int;
  var {:scalar} EmiStatus: int;
  var {:pointer} Tmp_349: int;
  var {:scalar} sdv_288: int;
  var {:pointer} Tmp_350: int;
  var {:pointer} Tmp_351: int;
  var {:scalar} Status_11: int;
  var {:pointer} Tmp_352: int;
  var {:pointer} CipData_4: int;
  var {:pointer} Tmp_353: int;
  var {:pointer} DescriptorData_1: int;
  var {:pointer} Tmp_354: int;
  var {:pointer} Tmp_355: int;
  var {:scalar} Tmp_356: int;
  var {:pointer} Tmp_357: int;
  var {:scalar} Tmp_359: int;
  var {:scalar} CopySize: int;
  var {:scalar} OddEvenStatus: int;
  var {:scalar} sdv_291: int;
  var {:scalar} TsHeader: int;
  var {:pointer} Tmp_361: int;
  var {:scalar} Tmp_362: int;
  var {:pointer} Tmp_364: int;
  var {:pointer} Tmp_365: int;
  var {:pointer} Tmp_366: int;
  var {:scalar} Irql_7: int;
  var {:scalar} timestamp: int;
  var {:pointer} BusBuffer: int;
  var {:pointer} Tmp_367: int;
  var {:pointer} FrameContext_1: int;
  var {:scalar} SourceLength: int;
  var {:pointer} Irp_23: int;
  var {:pointer} DescriptorDataIn: int;
  var boogieTmp: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;

  anon0:
    call {:si_unique_call 1736} TsHeader := __HAVOC_malloc(8);
    call {:si_unique_call 1737} timestamp := __HAVOC_malloc(40);
    Irp_23 := actual_Irp_23;
    DescriptorDataIn := actual_DescriptorDataIn;
    DescriptorData_1 := DescriptorDataIn;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Status_11 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    havoc CipData_4;
    FrameContext_1 := 0;
    OddEvenStatus := 0;
    EmiStatus := 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} Status_11 >= 0;
    call {:si_unique_call 1738} Tmp_347 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    call {:si_unique_call 1739} sdv_KeAcquireSpinLock(0, Tmp_347);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    havoc Irql_7;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1740} sdv_288 := sdv_IsListEmpty(0);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} sdv_288 != 0;
    goto L32;

  L32:
    i_1 := 0;
    goto L33;

  L33:
    call {:si_unique_call 1741} i_1, Tmp_348, EmiStatus, Tmp_349, Tmp_350, Tmp_351, Tmp_352, Tmp_353, Tmp_354, Tmp_355, Tmp_356, Tmp_357, Tmp_359, CopySize, OddEvenStatus, sdv_291, Tmp_361, Tmp_362, Tmp_364, Tmp_365, Tmp_366, BusBuffer, Tmp_367, FrameContext_1, SourceLength, boogieTmp := AvCip_ProcessListenPacket#0_loop_L33(i_1, Tmp_348, EmiStatus, Tmp_349, Tmp_350, Tmp_351, Tmp_352, CipData_4, Tmp_353, DescriptorData_1, Tmp_354, Tmp_355, Tmp_356, Tmp_357, Tmp_359, CopySize, OddEvenStatus, sdv_291, TsHeader, Tmp_361, Tmp_362, Tmp_364, Tmp_365, Tmp_366, timestamp, BusBuffer, Tmp_367, FrameContext_1, SourceLength, boogieTmp);
    goto L33_last;

  L33_last:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    havoc BusBuffer;
    call {:si_unique_call 1742} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} TsHeader != 0;
    assume TsHeader > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1743} boogieTmp := corral_nondet();
    call {:si_unique_call 1744} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1745} boogieTmp := corral_nondet();
    call {:si_unique_call 1746} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    goto L56;

  L56:
    i_1 := i_1 + 1;
    goto L56_dummy;

  L56_dummy:
    assume false;
    return;

  anon116_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc Tmp_362;
    goto L59;

  L59:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1747} boogieTmp := corral_nondet();
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1748} boogieTmp := corral_nondet();
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc SourceLength;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    SourceLength := SourceLength - 4;
    goto L71;

  L71:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto L67;

  L67:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto L74;

  L74:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto L155;

  L155:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} FrameContext_1 != 0;
    call {:si_unique_call 1749} FrameContext_1 := AvCip_ListenFrameNotification(CipData_4, FrameContext_1, 1);
    goto L56;

  anon114_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L56;

  anon92_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    goto L155;

  anon94_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto L155;

  anon95_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    goto L155;

  anon96_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    goto L155;

  anon97_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto L155;

  anon98_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L155;

  anon99_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L155;

  anon100_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} FrameContext_1 != 0;
    call {:si_unique_call 1750} OddEvenStatus := corral_nondet();
    call {:si_unique_call 1751} EmiStatus := corral_nondet();
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_355;
    assume {:nonnull} Tmp_355 != 0;
    assume Tmp_355 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_348;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    havoc Tmp_356;
    call {:si_unique_call 1752} FrameContext_1 := AvCip_ListenFrameNotification(CipData_4, FrameContext_1, Tmp_356);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_357;
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    goto L94;

  L94:
    call {:si_unique_call 1753} Tmp_349, Tmp_350, Tmp_352, Tmp_353, Tmp_354, Tmp_359, CopySize, sdv_291, Tmp_361, Tmp_365, Tmp_366, Tmp_367, FrameContext_1, boogieTmp := AvCip_ProcessListenPacket#0_loop_L94(EmiStatus, Tmp_349, Tmp_350, Tmp_352, CipData_4, Tmp_353, Tmp_354, Tmp_359, CopySize, OddEvenStatus, sdv_291, Tmp_361, Tmp_365, Tmp_366, timestamp, BusBuffer, Tmp_367, FrameContext_1, boogieTmp);
    goto L94_last;

  L94_last:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc CopySize;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    Tmp_365 := BusBuffer;
    assume {:nonnull} Tmp_365 != 0;
    assume Tmp_365 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    goto L113;

  L113:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    CopySize := CopySize - 4;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    call {:si_unique_call 1754} sdv_RtlCopyMemory(0, 0, CopySize);
    goto L128;

  L128:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_367;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_366;
    assume {:nonnull} Tmp_366 != 0;
    assume Tmp_366 > 0;
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    goto L130;

  L130:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    call {:si_unique_call 1755} sdv_291 := AvCip_ValidateSourcePacket(CipData_4, FrameContext_1);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} sdv_291 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_353;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_352;
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_350;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_361;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} Tmp_350 != 0;
    assume Tmp_350 > 0;
    assume {:nonnull} Tmp_361 != 0;
    assume Tmp_361 > 0;
    goto L132;

  L132:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_354;
    assume {:nonnull} Tmp_354 != 0;
    assume Tmp_354 > 0;
    havoc Tmp_359;
    call {:si_unique_call 1756} FrameContext_1 := AvCip_ListenFrameNotification(CipData_4, FrameContext_1, Tmp_359);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_349;
    assume {:nonnull} Tmp_349 != 0;
    assume Tmp_349 > 0;
    goto L109;

  L109:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1757} boogieTmp := corral_nondet();
    goto L109_dummy;

  L109_dummy:
    assume false;
    return;

  anon113_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L109;

  anon112_Then:
    goto L109;

  anon110_Then:
    goto L109;

  anon123_Then:
    goto L132;

  anon111_Then:
    assume {:partition} sdv_291 == 0;
    goto L132;

  anon109_Then:
    goto L132;

  anon122_Then:
    goto L130;

  anon108_Then:
    goto L120;

  L120:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    call {:si_unique_call 1758} sdv_RtlCopyMemory(0, 0, CopySize);
    goto L128;

  anon106_Then:
    goto L120;

  anon107_Then:
    goto L113;

  anon121_Then:
    goto L113;

  anon105_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L109;

  anon102_Then:
    goto L56;

  anon104_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L94;

  anon120_Then:
    goto L94;

  anon119_Then:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_364;
    assume {:nonnull} Tmp_364 != 0;
    assume Tmp_364 > 0;
    goto L94;

  anon103_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L94;

  anon101_Then:
    goto L94;

  anon93_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_351;
    assume {:nonnull} Tmp_351 != 0;
    assume Tmp_351 > 0;
    goto L74;

  anon126_Then:
    goto L74;

  anon125_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L74;

  anon124_Then:
    goto L74;

  anon90_Then:
    goto L74;

  anon91_Then:
    goto L56;

  anon118_Then:
    goto L71;

  anon89_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L67;

  anon88_Then:
    goto L56;

  anon117_Then:
    goto L56;

  anon87_Then:
    Tmp_362 := 1024;
    goto L59;

  anon86_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1759} sdv_KeReleaseSpinLock(0, Irql_7);
    call {:si_unique_call 1760} vslice_dummy_var_242 := AvCip_ProcessAttachBuffer#0(CipData_4, DescriptorData_1);
    goto L167;

  L167:
    Tmp_346 := -1073741802;
    return;

  anon85_Then:
    assume {:partition} sdv_288 == 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc FrameContext_1;
    goto L32;

  anon115_Then:
    assume {:partition} 0 > Status_11;
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    call {:si_unique_call 1761} vslice_dummy_var_241 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_1), 0);
    goto L167;
}



procedure {:origName "AvCip_ProcessListenPacket"} AvCip_ProcessListenPacket#0(actual_DeviceObject_23: int, actual_Irp_23: int, actual_DescriptorDataIn: int) returns (Tmp_346: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} Tmp_346 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_ProcessListenPacket"} AvCip_ProcessListenPacket#1(actual_DeviceObject_23: int, actual_Irp_23: int, actual_DescriptorDataIn: int) returns (Tmp_346: int)
{
  var {:scalar} i_1: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} Tmp_348: int;
  var {:scalar} EmiStatus: int;
  var {:pointer} Tmp_349: int;
  var {:scalar} sdv_288: int;
  var {:pointer} Tmp_350: int;
  var {:pointer} Tmp_351: int;
  var {:scalar} Status_11: int;
  var {:pointer} Tmp_352: int;
  var {:pointer} CipData_4: int;
  var {:pointer} Tmp_353: int;
  var {:pointer} DescriptorData_1: int;
  var {:pointer} Tmp_354: int;
  var {:pointer} Tmp_355: int;
  var {:scalar} Tmp_356: int;
  var {:pointer} Tmp_357: int;
  var {:scalar} Tmp_359: int;
  var {:scalar} CopySize: int;
  var {:scalar} OddEvenStatus: int;
  var {:scalar} sdv_291: int;
  var {:scalar} TsHeader: int;
  var {:pointer} Tmp_361: int;
  var {:scalar} Tmp_362: int;
  var {:pointer} Tmp_364: int;
  var {:pointer} Tmp_365: int;
  var {:pointer} Tmp_366: int;
  var {:scalar} Irql_7: int;
  var {:scalar} timestamp: int;
  var {:pointer} BusBuffer: int;
  var {:pointer} Tmp_367: int;
  var {:pointer} FrameContext_1: int;
  var {:scalar} SourceLength: int;
  var {:pointer} Irp_23: int;
  var {:pointer} DescriptorDataIn: int;
  var boogieTmp: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;

  anon0:
    call {:si_unique_call 1762} TsHeader := __HAVOC_malloc(8);
    call {:si_unique_call 1763} timestamp := __HAVOC_malloc(40);
    Irp_23 := actual_Irp_23;
    DescriptorDataIn := actual_DescriptorDataIn;
    DescriptorData_1 := DescriptorDataIn;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Status_11 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_23))];
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    havoc CipData_4;
    FrameContext_1 := 0;
    OddEvenStatus := 0;
    EmiStatus := 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} Status_11 >= 0;
    call {:si_unique_call 1764} Tmp_347 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    call {:si_unique_call 1765} sdv_KeAcquireSpinLock(0, Tmp_347);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    havoc Irql_7;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1766} sdv_288 := sdv_IsListEmpty(0);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} sdv_288 != 0;
    goto L32;

  L32:
    i_1 := 0;
    goto L33;

  L33:
    call {:si_unique_call 1767} i_1, Tmp_348, EmiStatus, Tmp_349, Tmp_350, Tmp_351, Tmp_352, Tmp_353, Tmp_354, Tmp_355, Tmp_356, Tmp_357, Tmp_359, CopySize, OddEvenStatus, sdv_291, Tmp_361, Tmp_362, Tmp_364, Tmp_365, Tmp_366, BusBuffer, Tmp_367, FrameContext_1, SourceLength, boogieTmp := AvCip_ProcessListenPacket#1_loop_L33(i_1, Tmp_348, EmiStatus, Tmp_349, Tmp_350, Tmp_351, Tmp_352, CipData_4, Tmp_353, DescriptorData_1, Tmp_354, Tmp_355, Tmp_356, Tmp_357, Tmp_359, CopySize, OddEvenStatus, sdv_291, TsHeader, Tmp_361, Tmp_362, Tmp_364, Tmp_365, Tmp_366, timestamp, BusBuffer, Tmp_367, FrameContext_1, SourceLength, boogieTmp);
    goto L33_last;

  L33_last:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    havoc BusBuffer;
    call {:si_unique_call 1768} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} TsHeader != 0;
    assume TsHeader > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1769} boogieTmp := corral_nondet();
    call {:si_unique_call 1770} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1771} boogieTmp := corral_nondet();
    call {:si_unique_call 1772} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    goto L56;

  L56:
    i_1 := i_1 + 1;
    goto L56_dummy;

  L56_dummy:
    assume false;
    return;

  anon116_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc Tmp_362;
    goto L59;

  L59:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1773} boogieTmp := corral_nondet();
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1774} boogieTmp := corral_nondet();
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc SourceLength;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    SourceLength := SourceLength - 4;
    goto L71;

  L71:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto L67;

  L67:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto L74;

  L74:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto L155;

  L155:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} FrameContext_1 != 0;
    call {:si_unique_call 1775} FrameContext_1 := AvCip_ListenFrameNotification(CipData_4, FrameContext_1, 1);
    goto L56;

  anon114_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L56;

  anon92_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    goto L155;

  anon94_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto L155;

  anon95_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    goto L155;

  anon96_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    goto L155;

  anon97_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto L155;

  anon98_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L155;

  anon99_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L155;

  anon100_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} FrameContext_1 != 0;
    call {:si_unique_call 1776} OddEvenStatus := corral_nondet();
    call {:si_unique_call 1777} EmiStatus := corral_nondet();
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_355;
    assume {:nonnull} Tmp_355 != 0;
    assume Tmp_355 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_348;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    havoc Tmp_356;
    call {:si_unique_call 1778} FrameContext_1 := AvCip_ListenFrameNotification(CipData_4, FrameContext_1, Tmp_356);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_357;
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    goto L94;

  L94:
    call {:si_unique_call 1779} Tmp_349, Tmp_350, Tmp_352, Tmp_353, Tmp_354, Tmp_359, CopySize, sdv_291, Tmp_361, Tmp_365, Tmp_366, Tmp_367, FrameContext_1, boogieTmp := AvCip_ProcessListenPacket#1_loop_L94(EmiStatus, Tmp_349, Tmp_350, Tmp_352, CipData_4, Tmp_353, Tmp_354, Tmp_359, CopySize, OddEvenStatus, sdv_291, Tmp_361, Tmp_365, Tmp_366, timestamp, BusBuffer, Tmp_367, FrameContext_1, boogieTmp);
    goto L94_last;

  L94_last:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc CopySize;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    Tmp_365 := BusBuffer;
    assume {:nonnull} Tmp_365 != 0;
    assume Tmp_365 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    goto L113;

  L113:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    CopySize := CopySize - 4;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    call {:si_unique_call 1780} sdv_RtlCopyMemory(0, 0, CopySize);
    goto L128;

  L128:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_367;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_366;
    assume {:nonnull} Tmp_366 != 0;
    assume Tmp_366 > 0;
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    goto L130;

  L130:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    call {:si_unique_call 1781} sdv_291 := AvCip_ValidateSourcePacket(CipData_4, FrameContext_1);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} sdv_291 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_353;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_352;
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_350;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_361;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} Tmp_350 != 0;
    assume Tmp_350 > 0;
    assume {:nonnull} Tmp_361 != 0;
    assume Tmp_361 > 0;
    goto L132;

  L132:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_354;
    assume {:nonnull} Tmp_354 != 0;
    assume Tmp_354 > 0;
    havoc Tmp_359;
    call {:si_unique_call 1782} FrameContext_1 := AvCip_ListenFrameNotification(CipData_4, FrameContext_1, Tmp_359);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_349;
    assume {:nonnull} Tmp_349 != 0;
    assume Tmp_349 > 0;
    goto L109;

  L109:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1783} boogieTmp := corral_nondet();
    goto L109_dummy;

  L109_dummy:
    assume false;
    return;

  anon113_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L109;

  anon112_Then:
    goto L109;

  anon110_Then:
    goto L109;

  anon123_Then:
    goto L132;

  anon111_Then:
    assume {:partition} sdv_291 == 0;
    goto L132;

  anon109_Then:
    goto L132;

  anon122_Then:
    goto L130;

  anon108_Then:
    goto L120;

  L120:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    call {:si_unique_call 1784} sdv_RtlCopyMemory(0, 0, CopySize);
    goto L128;

  anon106_Then:
    goto L120;

  anon107_Then:
    goto L113;

  anon121_Then:
    goto L113;

  anon105_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L109;

  anon102_Then:
    goto L56;

  anon104_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L94;

  anon120_Then:
    goto L94;

  anon119_Then:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_364;
    assume {:nonnull} Tmp_364 != 0;
    assume Tmp_364 > 0;
    goto L94;

  anon103_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L94;

  anon101_Then:
    goto L94;

  anon93_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_351;
    assume {:nonnull} Tmp_351 != 0;
    assume Tmp_351 > 0;
    goto L74;

  anon126_Then:
    goto L74;

  anon125_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L74;

  anon124_Then:
    goto L74;

  anon90_Then:
    goto L74;

  anon91_Then:
    goto L56;

  anon118_Then:
    goto L71;

  anon89_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L67;

  anon88_Then:
    goto L56;

  anon117_Then:
    goto L56;

  anon87_Then:
    Tmp_362 := 1024;
    goto L59;

  anon86_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1785} sdv_KeReleaseSpinLock(0, Irql_7);
    call {:si_unique_call 1786} vslice_dummy_var_244 := AvCip_ProcessAttachBuffer#1(CipData_4, DescriptorData_1);
    goto L167;

  L167:
    Tmp_346 := -1073741802;
    return;

  anon85_Then:
    assume {:partition} sdv_288 == 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc FrameContext_1;
    goto L32;

  anon115_Then:
    assume {:partition} 0 > Status_11;
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    call {:si_unique_call 1787} vslice_dummy_var_243 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_1), 0);
    goto L167;
}



procedure {:origName "AvCip_ProcessListenPacket"} AvCip_ProcessListenPacket#1(actual_DeviceObject_23: int, actual_Irp_23: int, actual_DescriptorDataIn: int) returns (Tmp_346: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} Tmp_346 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_ProcessAttachBuffer"} AvCip_ProcessAttachBuffer#0(actual_CipData_23: int, actual_DescriptorData_8: int) returns (Tmp_455: int)
{
  var {:scalar} Time: int;
  var {:pointer} Tmp_456: int;
  var {:scalar} sdv_350: int;
  var {:scalar} Status_27: int;
  var {:pointer} Tmp_457: int;
  var {:pointer} Tmp_458: int;
  var {:pointer} Tmp_460: int;
  var {:pointer} NextIrpStack_1: int;
  var {:pointer} Tmp_461: int;
  var {:pointer} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:pointer} CipData_23: int;
  var {:pointer} DescriptorData_8: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_2182: int;
  var vslice_dummy_var_2183: int;
  var vslice_dummy_var_2184: int;

  anon0:
    call {:si_unique_call 1788} Time := __HAVOC_malloc(20);
    CipData_23 := actual_CipData_23;
    DescriptorData_8 := actual_DescriptorData_8;
    call {:si_unique_call 1789} Tmp_458 := __HAVOC_malloc(360);
    Status_27 := 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_350 != 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    call {:si_unique_call 1790} vslice_dummy_var_245 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_8), 0);
    goto L16;

  L16:
    Tmp_455 := Status_27;
    return;

  anon13_Then:
    assume {:partition} sdv_350 == 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_2182;
    call {:si_unique_call 1791} IoReuseIrp(vslice_dummy_var_2182, 0);
    call {:si_unique_call 1792} sdv_RtlZeroMemory(0, 344);
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_456;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_463;
    assume {:nonnull} Tmp_463 != 0;
    assume Tmp_463 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_460;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    assume {:nonnull} Tmp_460 != 0;
    assume Tmp_460 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_462;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_458;
    assume {:nonnull} Tmp_462 != 0;
    assume Tmp_462 > 0;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_461;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    goto L27;

  L27:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_2183;
    call {:si_unique_call 1793} NextIrpStack_1 := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_2183);
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Time != 0;
    assume Time > 0;
    assume {:nonnull} Time != 0;
    assume Time > 0;
    call {:si_unique_call 1794} vslice_dummy_var_248 := KeSetTimer(0, Time, 0);
    goto L36;

  L36:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_2184;
    call {:si_unique_call 1795} sdv_IoSetCompletionRoutine(vslice_dummy_var_2184, li2bplFunctionConstant445, DescriptorData_8, 1, 1, 1);
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    assume false;
    return;

  anon15_Then:
    goto L36;

  anon14_Then:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_457;
    assume {:nonnull} Tmp_457 != 0;
    assume Tmp_457 > 0;
    goto L27;
}



procedure {:origName "AvCip_ProcessAttachBuffer"} AvCip_ProcessAttachBuffer#0(actual_CipData_23: int, actual_DescriptorData_8: int) returns (Tmp_455: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} Tmp_455 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_ProcessAttachBuffer"} AvCip_ProcessAttachBuffer#1(actual_CipData_23: int, actual_DescriptorData_8: int) returns (Tmp_455: int)
{
  var {:scalar} Time: int;
  var {:pointer} Tmp_456: int;
  var {:scalar} sdv_350: int;
  var {:scalar} Status_27: int;
  var {:pointer} Tmp_457: int;
  var {:pointer} Tmp_458: int;
  var {:pointer} Tmp_460: int;
  var {:pointer} NextIrpStack_1: int;
  var {:pointer} Tmp_461: int;
  var {:pointer} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:pointer} CipData_23: int;
  var {:pointer} DescriptorData_8: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_2185: int;
  var vslice_dummy_var_2186: int;
  var vslice_dummy_var_2187: int;
  var vslice_dummy_var_2188: int;
  var vslice_dummy_var_2189: int;

  anon0:
    call {:si_unique_call 1796} Time := __HAVOC_malloc(20);
    CipData_23 := actual_CipData_23;
    DescriptorData_8 := actual_DescriptorData_8;
    call {:si_unique_call 1797} Tmp_458 := __HAVOC_malloc(360);
    Status_27 := 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_350 != 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    call {:si_unique_call 1798} vslice_dummy_var_249 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_8), 0);
    goto L16;

  L16:
    Tmp_455 := Status_27;
    return;

  anon13_Then:
    assume {:partition} sdv_350 == 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_2185;
    call {:si_unique_call 1799} IoReuseIrp(vslice_dummy_var_2185, 0);
    call {:si_unique_call 1800} sdv_RtlZeroMemory(0, 344);
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_456;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_463;
    assume {:nonnull} Tmp_463 != 0;
    assume Tmp_463 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_460;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    assume {:nonnull} Tmp_460 != 0;
    assume Tmp_460 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_462;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_458;
    assume {:nonnull} Tmp_462 != 0;
    assume Tmp_462 > 0;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_461;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    goto L27;

  L27:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_2186;
    call {:si_unique_call 1801} NextIrpStack_1 := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_2186);
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Time != 0;
    assume Time > 0;
    assume {:nonnull} Time != 0;
    assume Time > 0;
    call {:si_unique_call 1802} vslice_dummy_var_252 := KeSetTimer(0, Time, 0);
    goto L36;

  L36:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_2187;
    call {:si_unique_call 1803} sdv_IoSetCompletionRoutine(vslice_dummy_var_2187, li2bplFunctionConstant445, DescriptorData_8, 1, 1, 1);
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_2188;
    havoc vslice_dummy_var_2189;
    call {:si_unique_call 1804} Status_27 := sdv_IoCallDriver#0(vslice_dummy_var_2188, vslice_dummy_var_2189);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Status_27 < 0;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L51;

  L51:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    call {:si_unique_call 1805} vslice_dummy_var_251 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_8), 0);
    goto L16;

  anon12_Then:
    call {:si_unique_call 1806} vslice_dummy_var_250 := KeCancelTimer(0);
    goto L51;

  anon11_Then:
    assume {:partition} 0 <= Status_27;
    goto L16;

  anon15_Then:
    goto L36;

  anon14_Then:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_457;
    assume {:nonnull} Tmp_457 != 0;
    assume Tmp_457 > 0;
    goto L27;
}



procedure {:origName "AvCip_ProcessAttachBuffer"} AvCip_ProcessAttachBuffer#1(actual_CipData_23: int, actual_DescriptorData_8: int) returns (Tmp_455: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} Tmp_455 == 0 || Tmp_455 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#0(actual_DeviceObject_13: int, actual_Irp_12: int) returns (Tmp_190: int)
{
  var {:pointer} Irp_12: int;

  anon0:
    Irp_12 := actual_Irp_12;
    call {:si_unique_call 1807} Tmp_190 := IofCallDriver#0(0, Irp_12);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#0(actual_DeviceObject_13: int, actual_Irp_12: int) returns (Tmp_190: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} Tmp_190 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#1(actual_DeviceObject_13: int, actual_Irp_12: int) returns (Tmp_190: int)
{
  var {:pointer} Irp_12: int;

  anon0:
    Irp_12 := actual_Irp_12;
    call {:si_unique_call 1808} Tmp_190 := IofCallDriver#1(0, Irp_12);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#1(actual_DeviceObject_13: int, actual_Irp_12: int) returns (Tmp_190: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} Tmp_190 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver#0(actual_DeviceObject_11: int, actual_Irp_10: int) returns (Tmp_180: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_5: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;

  anon0:
    call {:si_unique_call 1809} completion_1 := __HAVOC_malloc(4);
    Irp_10 := actual_Irp_10;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    status_5 := 259;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_10))] := 259;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_10)] := 1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 259;
    goto L19;

  L19:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L21;

  L21:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L23;

  L23:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  L29:
    Tmp_180 := status_5;
    return;

  anon47_Then:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 1810} vslice_dummy_var_253 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_10, sdv_context, completion_1);
    goto L29;

  anon46_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L23;

  anon45_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L21;

  anon65_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L19;

  anon60_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_10))] := -1073741823;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_10)] := 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741823;
    goto L58;

  L58:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L60;

  L60:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L62;

  L62:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_invoke_on_error != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 1811} vslice_dummy_var_256 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_10, sdv_context, completion_1);
    goto L29;

  anon59_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon58_Then:
    assume {:partition} sdv_invoke_on_error == 0;
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L62;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L60;

  anon66_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L58;

  anon61_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_10))] := -1073741536;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_10)] := 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741536;
    goto L32;

  L32:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L34;

  L34:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L36;

  L36:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_invoke_on_cancel != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 1812} vslice_dummy_var_254 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_10, sdv_context, completion_1);
    goto L29;

  anon51_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon50_Then:
    assume {:partition} sdv_invoke_on_cancel == 0;
    goto L29;

  anon49_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L36;

  anon48_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L34;

  anon64_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L32;

  anon62_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_10))] := 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_10)] := 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 0;
    goto L45;

  L45:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L47;

  L47:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L49;

  L49:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_invoke_on_success != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 1813} vslice_dummy_var_255 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_10, sdv_context, completion_1);
    goto L29;

  anon55_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon54_Then:
    assume {:partition} sdv_invoke_on_success == 0;
    goto L29;

  anon53_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L49;

  anon52_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L47;

  anon63_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L45;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver#0(actual_DeviceObject_11: int, actual_Irp_10: int) returns (Tmp_180: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} Tmp_180 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver#1(actual_DeviceObject_11: int, actual_Irp_10: int) returns (Tmp_180: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_5: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;

  anon0:
    call {:si_unique_call 1814} completion_1 := __HAVOC_malloc(4);
    Irp_10 := actual_Irp_10;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    status_5 := 259;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_10))] := 259;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_10)] := 1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 259;
    goto L19;

  L19:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L21;

  L21:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L23;

  L23:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  L29:
    Tmp_180 := status_5;
    return;

  anon47_Then:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 1815} vslice_dummy_var_257 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_10, sdv_context, completion_1);
    goto L29;

  anon46_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L23;

  anon45_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L21;

  anon65_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L19;

  anon60_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_10))] := -1073741823;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_10)] := 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741823;
    goto L58;

  L58:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L60;

  L60:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L62;

  L62:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_invoke_on_error != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 1816} vslice_dummy_var_260 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_10, sdv_context, completion_1);
    goto L29;

  anon59_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon58_Then:
    assume {:partition} sdv_invoke_on_error == 0;
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L62;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L60;

  anon66_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L58;

  anon61_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_10))] := -1073741536;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_10)] := 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741536;
    goto L32;

  L32:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L34;

  L34:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L36;

  L36:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_invoke_on_cancel != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 1817} vslice_dummy_var_258 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_10, sdv_context, completion_1);
    goto L29;

  anon51_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon50_Then:
    assume {:partition} sdv_invoke_on_cancel == 0;
    goto L29;

  anon49_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L36;

  anon48_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L34;

  anon64_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L32;

  anon62_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_10))] := 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_10)] := 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 0;
    goto L45;

  L45:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L47;

  L47:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L49;

  L49:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_invoke_on_success != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_compFset != 0;
    call {:si_unique_call 1818} vslice_dummy_var_259 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_10, sdv_context, completion_1);
    goto L29;

  anon55_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon54_Then:
    assume {:partition} sdv_invoke_on_success == 0;
    goto L29;

  anon53_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L49;

  anon52_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L47;

  anon63_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L45;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver#1(actual_DeviceObject_11: int, actual_Irp_10: int) returns (Tmp_180: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} Tmp_180 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#0(actual_DeviceObject_12: int, actual_Irp_11: int, actual_Context_2: int, actual_Completion: int) returns (Tmp_184: int)
{
  var {:scalar} Status_2: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} Irp_11: int;
  var {:pointer} Context_2: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_12 := actual_DeviceObject_12;
    Irp_11 := actual_Irp_11;
    Context_2 := actual_Context_2;
    Completion := actual_Completion;
    call {:si_unique_call 1819} irpsp := sdv_IoGetNextIrpStackLocation(Irp_11);
    Status_2 := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant445;
    call {:si_unique_call 1820} Status_2 := AvCip_ProcessAttachBuffer_CR(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant439;
    call {:si_unique_call 1821} Status_2 := AvCip_ProcessListenPacket#0(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant438;
    call {:si_unique_call 1822} Status_2 := AvCip_ProcessTalkPacket#0(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L45;

  L45:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant500;
    call {:si_unique_call 1823} Status_2 := AvFcp_SendFcpCR(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L62;

  L62:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant654;
    call {:si_unique_call 1824} Status_2 := Av_FDO_PowerComplete(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L79;

  L79:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant416;
    call {:si_unique_call 1825} Status_2 := Av_SynchCompletionRoutine(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L96;

  L96:
    Tmp_184 := Status_2;
    return;

  anon17_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant416;
    goto L96;

  anon16_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant654;
    goto L79;

  anon15_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant500;
    goto L62;

  anon14_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant438;
    goto L45;

  anon13_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant439;
    goto L28;

  anon18_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant445;
    goto L11;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#0(actual_DeviceObject_12: int, actual_Irp_11: int, actual_Context_2: int, actual_Completion: int) returns (Tmp_184: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#1(actual_DeviceObject_12: int, actual_Irp_11: int, actual_Context_2: int, actual_Completion: int) returns (Tmp_184: int)
{
  var {:scalar} Status_2: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} Irp_11: int;
  var {:pointer} Context_2: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_12 := actual_DeviceObject_12;
    Irp_11 := actual_Irp_11;
    Context_2 := actual_Context_2;
    Completion := actual_Completion;
    call {:si_unique_call 1826} irpsp := sdv_IoGetNextIrpStackLocation(Irp_11);
    Status_2 := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant445;
    call {:si_unique_call 1827} Status_2 := AvCip_ProcessAttachBuffer_CR(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant439;
    call {:si_unique_call 1828} Status_2 := AvCip_ProcessListenPacket#1(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant438;
    call {:si_unique_call 1829} Status_2 := AvCip_ProcessTalkPacket#1(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L45;

  L45:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant500;
    call {:si_unique_call 1830} Status_2 := AvFcp_SendFcpCR(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L62;

  L62:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant654;
    call {:si_unique_call 1831} Status_2 := Av_FDO_PowerComplete(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L79;

  L79:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant416;
    call {:si_unique_call 1832} Status_2 := Av_SynchCompletionRoutine(DeviceObject_12, Irp_11, Context_2);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L96;

  L96:
    Tmp_184 := Status_2;
    return;

  anon17_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant416;
    goto L96;

  anon16_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant654;
    goto L79;

  anon15_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant500;
    goto L62;

  anon14_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant438;
    goto L45;

  anon13_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant439;
    goto L28;

  anon18_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant445;
    goto L11;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#1(actual_DeviceObject_12: int, actual_Irp_11: int, actual_Context_2: int, actual_Completion: int) returns (Tmp_184: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_ProcessTalkPacket"} AvCip_ProcessTalkPacket#0(actual_DeviceObject_25: int, actual_Irp_27: int, actual_DescriptorDataIn_2: int) returns (Tmp_395: int)
{
  var {:pointer} Tmp_396: int;
  var {:scalar} Status_20: int;
  var {:pointer} CipData_16: int;
  var {:pointer} DescriptorData_4: int;
  var {:scalar} Irql_9: int;
  var {:pointer} Irp_27: int;
  var {:pointer} DescriptorDataIn_2: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;

  anon0:
    Irp_27 := actual_Irp_27;
    DescriptorDataIn_2 := actual_DescriptorDataIn_2;
    DescriptorData_4 := DescriptorDataIn_2;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    Status_20 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_27))];
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    havoc CipData_16;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Status_20 >= 0;
    call {:si_unique_call 1833} Tmp_396 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    call {:si_unique_call 1834} sdv_KeAcquireSpinLock(0, Tmp_396);
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    havoc Irql_9;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1835} vslice_dummy_var_264 := AvCip_HandleFrameNotification(CipData_16, DescriptorData_4);
    call {:si_unique_call 1836} Status_20 := AvCip_ProcessTalkPacket_2(CipData_16, DescriptorData_4);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Status_20 >= 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    call {:si_unique_call 1837} sdv_KeReleaseSpinLock(0, Irql_9);
    call {:si_unique_call 1838} vslice_dummy_var_262 := AvCip_ProcessAttachBuffer#0(CipData_16, DescriptorData_4);
    goto L36;

  L36:
    Tmp_395 := -1073741802;
    return;

  anon5_Then:
    assume {:partition} 0 > Status_20;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    call {:si_unique_call 1839} sdv_KeReleaseSpinLock(0, Irql_9);
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1840} vslice_dummy_var_263 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_4), 0);
    goto L36;

  anon6_Then:
    assume {:partition} 0 > Status_20;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1841} vslice_dummy_var_261 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_4), 0);
    goto L36;
}



procedure {:origName "AvCip_ProcessTalkPacket"} AvCip_ProcessTalkPacket#0(actual_DeviceObject_25: int, actual_Irp_27: int, actual_DescriptorDataIn_2: int) returns (Tmp_395: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} Tmp_395 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvCip_ProcessTalkPacket"} AvCip_ProcessTalkPacket#1(actual_DeviceObject_25: int, actual_Irp_27: int, actual_DescriptorDataIn_2: int) returns (Tmp_395: int)
{
  var {:pointer} Tmp_396: int;
  var {:scalar} Status_20: int;
  var {:pointer} CipData_16: int;
  var {:pointer} DescriptorData_4: int;
  var {:scalar} Irql_9: int;
  var {:pointer} Irp_27: int;
  var {:pointer} DescriptorDataIn_2: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;

  anon0:
    Irp_27 := actual_Irp_27;
    DescriptorDataIn_2 := actual_DescriptorDataIn_2;
    DescriptorData_4 := DescriptorDataIn_2;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    Status_20 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_27))];
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    havoc CipData_16;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Status_20 >= 0;
    call {:si_unique_call 1842} Tmp_396 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    call {:si_unique_call 1843} sdv_KeAcquireSpinLock(0, Tmp_396);
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    havoc Irql_9;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1844} vslice_dummy_var_268 := AvCip_HandleFrameNotification(CipData_16, DescriptorData_4);
    call {:si_unique_call 1845} Status_20 := AvCip_ProcessTalkPacket_2(CipData_16, DescriptorData_4);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Status_20 >= 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    call {:si_unique_call 1846} sdv_KeReleaseSpinLock(0, Irql_9);
    call {:si_unique_call 1847} vslice_dummy_var_266 := AvCip_ProcessAttachBuffer#1(CipData_16, DescriptorData_4);
    goto L36;

  L36:
    Tmp_395 := -1073741802;
    return;

  anon5_Then:
    assume {:partition} 0 > Status_20;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    call {:si_unique_call 1848} sdv_KeReleaseSpinLock(0, Irql_9);
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1849} vslice_dummy_var_267 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_4), 0);
    goto L36;

  anon6_Then:
    assume {:partition} 0 > Status_20;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1850} vslice_dummy_var_265 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_4), 0);
    goto L36;
}



procedure {:origName "AvCip_ProcessTalkPacket"} AvCip_ProcessTalkPacket#1(actual_DeviceObject_25: int, actual_Irp_27: int, actual_DescriptorDataIn_2: int) returns (Tmp_395: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} Tmp_395 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation Av_FDO_StartDevice_loop_L76(in_AdapterId: int, in_AvAdapterData_1: int) returns (out_AvAdapterData_1: int)
{

  entry:
    out_AvAdapterData_1 := in_AvAdapterData_1;
    goto L76, exit;

  exit:
    return;

  L76:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} out_AvAdapterData_1 != 0;
    assume {:nonnull} out_AvAdapterData_1 != 0;
    assume out_AvAdapterData_1 > 0;
    havoc out_AvAdapterData_1;
    goto L198;

  L198:
    assume {:nonnull} in_AdapterId != 0;
    assume in_AdapterId > 0;
    assume {:nonnull} out_AvAdapterData_1 != 0;
    assume out_AvAdapterData_1 > 0;
    goto anon69_Then;

  anon69_Then:
    goto anon70_Then;

  anon70_Then:
    goto anon70_Then_dummy;

  anon70_Then_dummy:
    havoc out_AvAdapterData_1;
    return;

  anon63_Then:
    assume {:partition} out_AvAdapterData_1 == 0;
    havoc out_AvAdapterData_1;
    goto L198;
}



procedure {:LoopProcedure} Av_FDO_StartDevice_loop_L76(in_AdapterId: int, in_AvAdapterData_1: int) returns (out_AvAdapterData_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av_FDO_StopDevice_loop_L128(in_CurrCrom: int, in_ntStatus_5: int, in_Irql_3: int, in_AvAdapterData_3: int, in_Tmp_239: int) returns (out_CurrCrom: int, out_ntStatus_5: int, out_Irql_3: int, out_Tmp_239: int)
{

  entry:
    out_CurrCrom, out_ntStatus_5, out_Irql_3, out_Tmp_239 := in_CurrCrom, in_ntStatus_5, in_Irql_3, in_Tmp_239;
    goto L128, exit;

  exit:
    return;

  L128:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} out_CurrCrom != 0;
    assume {:nonnull} out_CurrCrom != 0;
    assume out_CurrCrom > 0;
    havoc out_CurrCrom;
    goto L131;

  L131:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} out_CurrCrom != 0;
    call {:si_unique_call 1851} sdv_KeReleaseSpinLock(0, out_Irql_3);
    call {:si_unique_call 1852} out_ntStatus_5 := Av1394_AddConfigRomEntry(out_CurrCrom);
    call {:si_unique_call 1853} out_Tmp_239 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_239 != 0;
    assume out_Tmp_239 > 0;
    call {:si_unique_call 1854} sdv_KeAcquireSpinLock(0, out_Tmp_239);
    assume {:nonnull} out_Tmp_239 != 0;
    assume out_Tmp_239 > 0;
    havoc out_Irql_3;
    goto L132;

  L132:
    goto anon37_Else;

  anon37_Else:
    goto anon37_Else_dummy;

  anon37_Else_dummy:
    call {:si_unique_call 1855} {:si_old_unique_call 1} out_CurrCrom, out_ntStatus_5, out_Irql_3, out_Tmp_239 := Av_FDO_StopDevice_loop_L128(out_CurrCrom, out_ntStatus_5, out_Irql_3, in_AvAdapterData_3, out_Tmp_239);
    return;

  anon36_Then:
    assume {:partition} out_CurrCrom == 0;
    goto L132;

  anon35_Then:
    assume {:partition} out_CurrCrom == 0;
    assume {:nonnull} in_AvAdapterData_3 != 0;
    assume in_AvAdapterData_3 > 0;
    havoc out_CurrCrom;
    goto L131;
}



procedure {:LoopProcedure} Av_FDO_StopDevice_loop_L128(in_CurrCrom: int, in_ntStatus_5: int, in_Irql_3: int, in_AvAdapterData_3: int, in_Tmp_239: int) returns (out_CurrCrom: int, out_ntStatus_5: int, out_Irql_3: int, out_Tmp_239: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av_FDO_StopDevice_loop_L28(in_MyOwner: int, in_BusExtension_5: int) returns (out_MyOwner: int)
{

  entry:
    out_MyOwner := in_MyOwner;
    goto L28, exit;

  exit:
    return;

  L28:
    goto anon29_Else;

  anon29_Else:
    assume {:nonnull} out_MyOwner != 0;
    assume out_MyOwner > 0;
    goto anon30_Else;

  anon30_Else:
    assume {:nonnull} out_MyOwner != 0;
    assume out_MyOwner > 0;
    havoc out_MyOwner;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    havoc out_MyOwner;
    return;
}



procedure {:LoopProcedure} Av_FDO_StopDevice_loop_L28(in_MyOwner: int, in_BusExtension_5: int) returns (out_MyOwner: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av_PDO_StopDevice_loop_L53(in_CromData: int, in_sdv_218: int, in_sdv_220: int, in_PdoCromData: int, in_Irql_4: int, in_BusExtension_9: int, in_Tmp_290: int, in_PdoExtension_5: int, in_vslice_dummy_var_118: int, in_vslice_dummy_var_119: int, in_vslice_dummy_var_120: int) returns (out_CromData: int, out_sdv_218: int, out_sdv_220: int, out_PdoCromData: int, out_Irql_4: int, out_Tmp_290: int, out_vslice_dummy_var_118: int, out_vslice_dummy_var_119: int, out_vslice_dummy_var_120: int)
{

  entry:
    out_CromData, out_sdv_218, out_sdv_220, out_PdoCromData, out_Irql_4, out_Tmp_290, out_vslice_dummy_var_118, out_vslice_dummy_var_119, out_vslice_dummy_var_120 := in_CromData, in_sdv_218, in_sdv_220, in_PdoCromData, in_Irql_4, in_Tmp_290, in_vslice_dummy_var_118, in_vslice_dummy_var_119, in_vslice_dummy_var_120;
    goto L53, exit;

  exit:
    return;

  L53:
    call {:si_unique_call 1856} out_sdv_218 := sdv_IsListEmpty(0);
    goto anon16_Else;

  anon16_Else:
    assume {:partition} out_sdv_218 == 0;
    out_PdoCromData := 0;
    out_CromData := 0;
    assume {:nonnull} in_PdoExtension_5 != 0;
    assume in_PdoExtension_5 > 0;
    call {:si_unique_call 1865} out_sdv_220 := RemoveHeadList(PdoCromList__PDO_DEVICE_EXTENSION(in_PdoExtension_5));
    out_PdoCromData := out_sdv_220;
    assume {:nonnull} out_PdoCromData != 0;
    assume out_PdoCromData > 0;
    havoc out_CromData;
    assume {:nonnull} out_CromData != 0;
    assume out_CromData > 0;
    assume {:nonnull} out_CromData != 0;
    assume out_CromData > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L82;

  L82:
    call {:si_unique_call 1857} sdv_ExFreePool(0);
    goto L82_dummy;

  L82_dummy:
    call {:si_unique_call 1866} {:si_old_unique_call 1} out_CromData, out_sdv_218, out_sdv_220, out_PdoCromData, out_Irql_4, out_Tmp_290, out_vslice_dummy_var_118, out_vslice_dummy_var_119, out_vslice_dummy_var_120 := Av_PDO_StopDevice_loop_L53(out_CromData, out_sdv_218, out_sdv_220, out_PdoCromData, out_Irql_4, in_BusExtension_9, out_Tmp_290, in_PdoExtension_5, out_vslice_dummy_var_118, out_vslice_dummy_var_119, out_vslice_dummy_var_120);
    return;

  anon18_Then:
    call {:si_unique_call 1858} out_vslice_dummy_var_118 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1859} sdv_KeReleaseSpinLock(0, out_Irql_4);
    call {:si_unique_call 1860} out_vslice_dummy_var_119 := Av1394_RemoveConfigRomEntry(out_CromData);
    call {:si_unique_call 1861} sdv_ExFreePool(0);
    call {:si_unique_call 1862} out_vslice_dummy_var_120 := Av1394_BusReset(in_BusExtension_9, 0, 0);
    call {:si_unique_call 1863} out_Tmp_290 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_290 != 0;
    assume out_Tmp_290 > 0;
    call {:si_unique_call 1864} sdv_KeAcquireSpinLock(0, out_Tmp_290);
    assume {:nonnull} out_Tmp_290 != 0;
    assume out_Tmp_290 > 0;
    havoc out_Irql_4;
    goto L82;
}



procedure {:LoopProcedure} Av_PDO_StopDevice_loop_L53(in_CromData: int, in_sdv_218: int, in_sdv_220: int, in_PdoCromData: int, in_Irql_4: int, in_BusExtension_9: int, in_Tmp_290: int, in_PdoExtension_5: int, in_vslice_dummy_var_118: int, in_vslice_dummy_var_119: int, in_vslice_dummy_var_120: int) returns (out_CromData: int, out_sdv_218: int, out_sdv_220: int, out_PdoCromData: int, out_Irql_4: int, out_Tmp_290: int, out_vslice_dummy_var_118: int, out_vslice_dummy_var_119: int, out_vslice_dummy_var_120: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} out_sdv_218 == 1 || out_sdv_218 == 0 || out_sdv_218 == in_sdv_218;
  free ensures {:va_keep} out_vslice_dummy_var_118 == 1 || out_vslice_dummy_var_118 == 0 || out_vslice_dummy_var_118 == in_vslice_dummy_var_118;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av_EnumerateChildren_loop_L51(in_ntStatus_12: int, in_PdoDeviceObject_1: int, in_CurrPdoData: int, in_BusExtension_10: int) returns (out_ntStatus_12: int, out_CurrPdoData: int)
{
  var vslice_dummy_var_2190: int;

  entry:
    out_ntStatus_12, out_CurrPdoData := in_ntStatus_12, in_CurrPdoData;
    goto L51, exit;

  exit:
    return;

  L51:
    goto anon31_Else;

  anon31_Else:
    assume {:nonnull} out_CurrPdoData != 0;
    assume out_CurrPdoData > 0;
    assume {:nonnull} out_CurrPdoData != 0;
    assume out_CurrPdoData > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} out_CurrPdoData != 0;
    assume out_CurrPdoData > 0;
    goto L58;

  L58:
    assume {:nonnull} out_CurrPdoData != 0;
    assume out_CurrPdoData > 0;
    havoc out_CurrPdoData;
    goto L58_dummy;

  L58_dummy:
    call {:si_unique_call 1868} {:si_old_unique_call 1} out_ntStatus_12, out_CurrPdoData := Av_EnumerateChildren_loop_L51(out_ntStatus_12, in_PdoDeviceObject_1, out_CurrPdoData, in_BusExtension_10);
    return;

  anon33_Then:
    assume {:nonnull} out_CurrPdoData != 0;
    assume out_CurrPdoData > 0;
    havoc vslice_dummy_var_2190;
    call {:si_unique_call 1867} out_ntStatus_12 := Av_CreatePDO(in_BusExtension_10, out_CurrPdoData, vslice_dummy_var_2190, in_PdoDeviceObject_1);
    goto anon32_Then;

  anon32_Then:
    assume {:partition} 0 <= out_ntStatus_12;
    goto L58;
}



procedure {:LoopProcedure} Av_EnumerateChildren_loop_L51(in_ntStatus_12: int, in_PdoDeviceObject_1: int, in_CurrPdoData: int, in_BusExtension_10: int) returns (out_ntStatus_12: int, out_CurrPdoData: int);
  modifies alloc, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} out_ntStatus_12 == -1073741824 || out_ntStatus_12 == -1073741771 || out_ntStatus_12 == -1073741670 || out_ntStatus_12 == -1073741823 || out_ntStatus_12 == 0 || out_ntStatus_12 == in_ntStatus_12;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av_FDO_Pnp_loop_L207(in_PdoData_4: int, in_sdv_260: int, in_BusExtension_13: int, in_sdv_275: int) returns (out_PdoData_4: int, out_sdv_260: int, out_sdv_275: int)
{

  entry:
    out_PdoData_4, out_sdv_260, out_sdv_275 := in_PdoData_4, in_sdv_260, in_sdv_275;
    goto L207, exit;

  exit:
    return;

  L207:
    call {:si_unique_call 1869} out_sdv_260 := sdv_IsListEmpty(0);
    goto anon188_Else;

  anon188_Else:
    assume {:partition} out_sdv_260 == 0;
    assume {:nonnull} in_BusExtension_13 != 0;
    assume in_BusExtension_13 > 0;
    call {:si_unique_call 1875} out_sdv_275 := RemoveHeadList(PdoList__BUS_DEVICE_EXTENSION(in_BusExtension_13));
    out_PdoData_4 := out_sdv_275;
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    call {:si_unique_call 1874} IoDeleteDevice(0);
    goto L232;

  L232:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    call {:si_unique_call 1873} sdv_ExFreePool(0);
    goto L236;

  L236:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    call {:si_unique_call 1872} sdv_ExFreePool(0);
    goto L240;

  L240:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    call {:si_unique_call 1871} sdv_ExFreePool(0);
    goto L244;

  L244:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} out_PdoData_4 != 0;
    call {:si_unique_call 1870} sdv_ExFreePool(0);
    goto anon193_Else_dummy;

  anon193_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 1876} {:si_old_unique_call 1} out_PdoData_4, out_sdv_260, out_sdv_275 := Av_FDO_Pnp_loop_L207(out_PdoData_4, out_sdv_260, in_BusExtension_13, out_sdv_275);
    return;

  anon193_Then:
    assume {:partition} out_PdoData_4 == 0;
    goto anon193_Then_dummy;

  anon193_Then_dummy:
    goto L_BAF_0;

  anon192_Then:
    goto L244;

  anon191_Then:
    goto L240;

  anon190_Then:
    goto L236;

  anon230_Then:
    goto L232;
}



procedure {:LoopProcedure} Av_FDO_Pnp_loop_L207(in_PdoData_4: int, in_sdv_260: int, in_BusExtension_13: int, in_sdv_275: int) returns (out_PdoData_4: int, out_sdv_260: int, out_sdv_275: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_260 == 1 || out_sdv_260 == 0 || out_sdv_260 == in_sdv_260;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av_FDO_Pnp_loop_L307(in_BusExtension_13: int, in_PdoData_5: int) returns (out_PdoData_5: int)
{

  entry:
    out_PdoData_5 := in_PdoData_5;
    goto L307, exit;

  exit:
    return;

  L307:
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} out_PdoData_5 != 0;
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    havoc out_PdoData_5;
    goto L310;

  L310:
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    goto anon233_Else;

  anon233_Else:
    goto anon233_Else_dummy;

  anon233_Else_dummy:
    call {:si_unique_call 1877} {:si_old_unique_call 1} out_PdoData_5 := Av_FDO_Pnp_loop_L307(in_BusExtension_13, out_PdoData_5);
    return;

  anon201_Then:
    assume {:partition} out_PdoData_5 == 0;
    assume {:nonnull} in_BusExtension_13 != 0;
    assume in_BusExtension_13 > 0;
    havoc out_PdoData_5;
    goto L310;
}



procedure {:LoopProcedure} Av_FDO_Pnp_loop_L307(in_BusExtension_13: int, in_PdoData_5: int) returns (out_PdoData_5: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av_FDO_Pnp_loop_L120(in_i: int, in_Relations: int, in_numPDO: int, in_CurrPdoData_1: int, in_Tmp_331: int, in_Tmp_332: int, in_vslice_dummy_var_136: int) returns (out_numPDO: int, out_CurrPdoData_1: int, out_Tmp_331: int, out_Tmp_332: int, out_vslice_dummy_var_136: int)
{

  entry:
    out_numPDO, out_CurrPdoData_1, out_Tmp_331, out_Tmp_332, out_vslice_dummy_var_136 := in_numPDO, in_CurrPdoData_1, in_Tmp_331, in_Tmp_332, in_vslice_dummy_var_136;
    goto L120, exit;

  exit:
    return;

  L120:
    goto anon179_Else;

  anon179_Else:
    out_Tmp_331 := in_i + out_numPDO;
    assume {:nonnull} in_Relations != 0;
    assume in_Relations > 0;
    havoc out_Tmp_332;
    assume {:nonnull} out_CurrPdoData_1 != 0;
    assume out_CurrPdoData_1 > 0;
    assume {:nonnull} out_Tmp_332 != 0;
    assume out_Tmp_332 > 0;
    call {:si_unique_call 1878} out_vslice_dummy_var_136 := sdv_ObReferenceObject(0);
    assume {:nonnull} out_CurrPdoData_1 != 0;
    assume out_CurrPdoData_1 > 0;
    havoc out_CurrPdoData_1;
    out_numPDO := out_numPDO + 1;
    goto anon179_Else_dummy;

  anon179_Else_dummy:
    call {:si_unique_call 1879} {:si_old_unique_call 1} out_numPDO, out_CurrPdoData_1, out_Tmp_331, out_Tmp_332, out_vslice_dummy_var_136 := Av_FDO_Pnp_loop_L120(in_i, in_Relations, out_numPDO, out_CurrPdoData_1, out_Tmp_331, out_Tmp_332, out_vslice_dummy_var_136);
    return;
}



procedure {:LoopProcedure} Av_FDO_Pnp_loop_L120(in_i: int, in_Relations: int, in_numPDO: int, in_CurrPdoData_1: int, in_Tmp_331: int, in_Tmp_332: int, in_vslice_dummy_var_136: int) returns (out_numPDO: int, out_CurrPdoData_1: int, out_Tmp_331: int, out_Tmp_332: int, out_vslice_dummy_var_136: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_UpdateCycleTime_loop_L10(in_bCountFlipped: int, in_CycleTime: int) returns (out_bCountFlipped: int)
{

  entry:
    out_bCountFlipped := in_bCountFlipped;
    goto L10, exit;

  exit:
    return;

  L10:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto anon8_Else;

  anon8_Else:
    out_bCountFlipped := 1;
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto L14;

  L14:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto L14_dummy;

  L14_dummy:
    call {:si_unique_call 1880} {:si_old_unique_call 1} out_bCountFlipped := Av1394_UpdateCycleTime_loop_L10(out_bCountFlipped, in_CycleTime);
    return;

  anon9_Then:
    goto L14;
}



procedure {:LoopProcedure} Av1394_UpdateCycleTime_loop_L10(in_bCountFlipped: int, in_CycleTime: int) returns (out_bCountFlipped: int);
  free ensures {:va_keep} out_bCountFlipped == 1 || out_bCountFlipped == in_bCountFlipped;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_UpdateCycleTime_loop_L6(in_bCountFlipped: int, in_CycleTime: int, in_Count: int) returns (out_bCountFlipped: int, out_Count: int)
{

  entry:
    out_bCountFlipped, out_Count := in_bCountFlipped, in_Count;
    goto L6, exit;

  exit:
    return;

  L6:
    goto anon7_Else;

  anon7_Else:
    assume {:partition} out_Count >= 3072;
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    out_Count := out_Count - 3072;
    goto L10;

  L10:
    call {:si_unique_call 1881} out_bCountFlipped := Av1394_UpdateCycleTime_loop_L10(out_bCountFlipped, in_CycleTime);
    goto L10_last;

  L10_last:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    out_bCountFlipped := 1;
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto L14;

  L14:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    assume false;
    return;

  anon9_Then:
    goto L14;

  anon8_Then:
    goto anon8_Then_dummy;

  anon8_Then_dummy:
    call {:si_unique_call 1882} {:si_old_unique_call 1} out_bCountFlipped, out_Count := Av1394_UpdateCycleTime_loop_L6(out_bCountFlipped, in_CycleTime, out_Count);
    return;
}



procedure {:LoopProcedure} Av1394_UpdateCycleTime_loop_L6(in_bCountFlipped: int, in_CycleTime: int, in_Count: int) returns (out_bCountFlipped: int, out_Count: int);
  free ensures {:va_keep} out_bCountFlipped == 1 || out_bCountFlipped == in_bCountFlipped;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_HandleFrameNotification_loop_L6(in_NotifyFrameContext: int, in_sdv_298: int, in_sdv_299: int, in_NotifyFrame: int, in_NotifyInfo: int, in_CipData_7: int, in_DescriptorData_3: int) returns (out_NotifyFrameContext: int, out_sdv_298: int, out_sdv_299: int, out_NotifyFrame: int)
{

  entry:
    out_NotifyFrameContext, out_sdv_298, out_sdv_299, out_NotifyFrame := in_NotifyFrameContext, in_sdv_298, in_sdv_299, in_NotifyFrame;
    goto L6, exit;

  exit:
    return;

  L6:
    call {:si_unique_call 1883} out_sdv_298 := sdv_IsListEmpty(0);
    goto anon3_Then;

  anon3_Then:
    assume {:partition} out_sdv_298 == 0;
    assume {:nonnull} in_DescriptorData_3 != 0;
    assume in_DescriptorData_3 > 0;
    call {:si_unique_call 1884} out_sdv_299 := RemoveHeadList(NotifyFrameList__CIP_DESCRIPTOR_DATA(in_DescriptorData_3));
    out_NotifyFrameContext := out_sdv_299;
    assume {:nonnull} out_NotifyFrameContext != 0;
    assume out_NotifyFrameContext > 0;
    havoc out_NotifyFrame;
    assume {:nonnull} out_NotifyFrame != 0;
    assume out_NotifyFrame > 0;
    assume {:nonnull} in_CipData_7 != 0;
    assume in_CipData_7 > 0;
    assume {:nonnull} in_CipData_7 != 0;
    assume in_CipData_7 > 0;
    assume {:nonnull} in_NotifyInfo != 0;
    assume in_NotifyInfo > 0;
    assume {:nonnull} out_NotifyFrame != 0;
    assume out_NotifyFrame > 0;
    assume {:nonnull} in_NotifyInfo != 0;
    assume in_NotifyInfo > 0;
    assume {:nonnull} in_NotifyInfo != 0;
    assume in_NotifyInfo > 0;
    assume {:nonnull} out_NotifyFrame != 0;
    assume out_NotifyFrame > 0;
    call {:si_unique_call 1885} sdv_ExFreePool(0);
    goto anon3_Then_dummy;

  anon3_Then_dummy:
    call {:si_unique_call 1886} {:si_old_unique_call 1} out_NotifyFrameContext, out_sdv_298, out_sdv_299, out_NotifyFrame := AvCip_HandleFrameNotification_loop_L6(out_NotifyFrameContext, out_sdv_298, out_sdv_299, out_NotifyFrame, in_NotifyInfo, in_CipData_7, in_DescriptorData_3);
    return;
}



procedure {:LoopProcedure} AvCip_HandleFrameNotification_loop_L6(in_NotifyFrameContext: int, in_sdv_298: int, in_sdv_299: int, in_NotifyFrame: int, in_NotifyInfo: int, in_CipData_7: int, in_DescriptorData_3: int) returns (out_NotifyFrameContext: int, out_sdv_298: int, out_sdv_299: int, out_NotifyFrame: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_298 == 1 || out_sdv_298 == 0 || out_sdv_298 == in_sdv_298;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_Destroy_loop_L10(in_sdv_315: int, in_sdv_317: int, in_FrameContext_2: int, in_CipData_11: int) returns (out_sdv_315: int, out_sdv_317: int, out_FrameContext_2: int)
{

  entry:
    out_sdv_315, out_sdv_317, out_FrameContext_2 := in_sdv_315, in_sdv_317, in_FrameContext_2;
    goto L10, exit;

  exit:
    return;

  L10:
    call {:si_unique_call 1887} out_sdv_315 := sdv_IsListEmpty(0);
    goto anon10_Then;

  anon10_Then:
    assume {:partition} out_sdv_315 == 0;
    assume {:nonnull} in_CipData_11 != 0;
    assume in_CipData_11 > 0;
    call {:si_unique_call 1889} out_sdv_317 := RemoveHeadList(FrameList__CIP_DATA(in_CipData_11));
    out_FrameContext_2 := out_sdv_317;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} out_FrameContext_2 != 0;
    call {:si_unique_call 1888} sdv_ExFreePool(0);
    goto anon12_Else_dummy;

  anon12_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 1890} {:si_old_unique_call 1} out_sdv_315, out_sdv_317, out_FrameContext_2 := AvCip_Destroy_loop_L10(out_sdv_315, out_sdv_317, out_FrameContext_2, in_CipData_11);
    return;

  anon12_Then:
    assume {:partition} out_FrameContext_2 == 0;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    goto L_BAF_1;
}



procedure {:LoopProcedure} AvCip_Destroy_loop_L10(in_sdv_315: int, in_sdv_317: int, in_FrameContext_2: int, in_CipData_11: int) returns (out_sdv_315: int, out_sdv_317: int, out_FrameContext_2: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_315 == 1 || out_sdv_315 == 0 || out_sdv_315 == in_sdv_315;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_FreeResources_loop_L11(in_Tmp_400: int, in_Tmp_402: int, in_sdv_325: int, in_Status_22: int, in_Tmp_403: int, in_sdv_326: int, in_DescriptorData_5: int, in_sdv_329: int, in_sdv_332: int, in_Tmp_404: int, in_PriorState: int, in_Irql_10: int, in_Tmp_405: int, in_CipData_18: int, in_vslice_dummy_var_146: int, in_vslice_dummy_var_147: int, in_vslice_dummy_var_148: int) returns (out_Tmp_400: int, out_Tmp_402: int, out_sdv_325: int, out_Status_22: int, out_Tmp_403: int, out_DescriptorData_5: int, out_sdv_329: int, out_sdv_332: int, out_Tmp_404: int, out_PriorState: int, out_Irql_10: int, out_Tmp_405: int, out_vslice_dummy_var_146: int, out_vslice_dummy_var_147: int, out_vslice_dummy_var_148: int)
{
  var vslice_dummy_var_2191: int;
  var vslice_dummy_var_2192: int;
  var vslice_dummy_var_2193: int;
  var vslice_dummy_var_2194: int;

  entry:
    out_Tmp_400, out_Tmp_402, out_sdv_325, out_Status_22, out_Tmp_403, out_DescriptorData_5, out_sdv_329, out_sdv_332, out_Tmp_404, out_PriorState, out_Irql_10, out_Tmp_405, out_vslice_dummy_var_146, out_vslice_dummy_var_147, out_vslice_dummy_var_148 := in_Tmp_400, in_Tmp_402, in_sdv_325, in_Status_22, in_Tmp_403, in_DescriptorData_5, in_sdv_329, in_sdv_332, in_Tmp_404, in_PriorState, in_Irql_10, in_Tmp_405, in_vslice_dummy_var_146, in_vslice_dummy_var_147, in_vslice_dummy_var_148;
    goto L11, exit;

  exit:
    return;

  L11:
    call {:si_unique_call 1891} out_sdv_325 := sdv_IsListEmpty(0);
    goto anon31_Then;

  anon31_Then:
    assume {:partition} out_sdv_325 == 0;
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    call {:si_unique_call 1898} out_sdv_329 := RemoveHeadList(DescriptorList__CIP_DATA(in_CipData_18));
    out_DescriptorData_5 := out_sdv_329;
    call {:si_unique_call 1899} sdv_KeReleaseSpinLock(0, out_Irql_10);
    call {:si_unique_call 1900} out_vslice_dummy_var_146 := sdv_IoAcquireRemoveLock(0, 0);
    call {:si_unique_call 1901} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 1902} out_Tmp_402 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_402 != 0;
    assume out_Tmp_402 > 0;
    call {:si_unique_call 1903} sdv_KeAcquireSpinLock(0, out_Tmp_402);
    assume {:nonnull} out_Tmp_402 != 0;
    assume out_Tmp_402 > 0;
    havoc out_Irql_10;
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L45;

  L45:
    call {:si_unique_call 1895} sdv_KeReleaseSpinLock(0, out_Irql_10);
    out_PriorState := in_sdv_326;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} out_PriorState == 1;
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L58;

  L58:
    call {:si_unique_call 1904} out_Status_22 := Av1394_DetachBuffer(in_CipData_18, out_DescriptorData_5);
    goto anon35_Else;

  anon35_Else:
    assume {:partition} out_Status_22 >= 0;
    goto L53;

  L53:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} out_DescriptorData_5 != 0;
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 1913} IoFreeIrp(0);
    goto L68;

  L68:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc vslice_dummy_var_2193;
    havoc vslice_dummy_var_2194;
    call {:si_unique_call 1912} ExFreeToNPagedLookasideList(vslice_dummy_var_2193, vslice_dummy_var_2194);
    goto L72;

  L72:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 1911} IoFreeIrp(0);
    goto L76;

  L76:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc vslice_dummy_var_2191;
    havoc vslice_dummy_var_2192;
    call {:si_unique_call 1910} ExFreeToNPagedLookasideList(vslice_dummy_var_2191, vslice_dummy_var_2192);
    goto L80;

  L80:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc out_Tmp_404;
    assume {:nonnull} out_Tmp_404 != 0;
    assume out_Tmp_404 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc out_Tmp_400;
    assume {:nonnull} out_Tmp_400 != 0;
    assume out_Tmp_400 > 0;
    call {:si_unique_call 1909} IoFreeMdl(0);
    goto L84;

  L84:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc out_Tmp_405;
    assume {:nonnull} out_Tmp_405 != 0;
    assume out_Tmp_405 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc out_Tmp_403;
    assume {:nonnull} out_Tmp_403 != 0;
    assume out_Tmp_403 > 0;
    call {:si_unique_call 1908} IoFreeMdl(0);
    goto L89;

  L89:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 1907} sdv_ExFreePool(0);
    goto L94;

  L94:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 1906} sdv_ExFreePool(0);
    goto L98;

  L98:
    call {:si_unique_call 1894} sdv_ExFreePool(0);
    goto L64;

  L64:
    call {:si_unique_call 1892} out_Tmp_402 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_402 != 0;
    assume out_Tmp_402 > 0;
    call {:si_unique_call 1893} sdv_KeAcquireSpinLock(0, out_Tmp_402);
    assume {:nonnull} out_Tmp_402 != 0;
    assume out_Tmp_402 > 0;
    havoc out_Irql_10;
    goto L64_dummy;

  L64_dummy:
    call {:si_unique_call 1914} {:si_old_unique_call 1} out_Tmp_400, out_Tmp_402, out_sdv_325, out_Status_22, out_Tmp_403, out_DescriptorData_5, out_sdv_329, out_sdv_332, out_Tmp_404, out_PriorState, out_Irql_10, out_Tmp_405, out_vslice_dummy_var_146, out_vslice_dummy_var_147, out_vslice_dummy_var_148 := AvCip_FreeResources_loop_L11(out_Tmp_400, out_Tmp_402, out_sdv_325, out_Status_22, out_Tmp_403, in_sdv_326, out_DescriptorData_5, out_sdv_329, out_sdv_332, out_Tmp_404, out_PriorState, out_Irql_10, out_Tmp_405, in_CipData_18, out_vslice_dummy_var_146, out_vslice_dummy_var_147, out_vslice_dummy_var_148);
    return;

  anon41_Then:
    goto L98;

  anon40_Then:
    goto L94;

  anon45_Then:
    goto L89;

  anon44_Then:
    goto L84;

  anon39_Then:
    goto L80;

  anon38_Then:
    goto L76;

  anon37_Then:
    goto L72;

  anon36_Then:
    goto L68;

  anon33_Then:
    assume {:partition} out_DescriptorData_5 == 0;
    goto L64;

  anon34_Then:
    call {:si_unique_call 1905} out_vslice_dummy_var_147 := KeCancelTimer(0);
    goto L58;

  anon43_Then:
    assume {:partition} out_PriorState != 1;
    goto L53;

  anon32_Then:
    call {:si_unique_call 1897} out_sdv_332 := sdv_IsListEmpty(0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} out_sdv_332 != 0;
    goto L108;

  L108:
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto L45;

  anon42_Then:
    assume {:partition} out_sdv_332 == 0;
    call {:si_unique_call 1896} out_vslice_dummy_var_148 := AvCip_HandleFrameNotification(in_CipData_18, out_DescriptorData_5);
    goto L108;
}



procedure {:LoopProcedure} AvCip_FreeResources_loop_L11(in_Tmp_400: int, in_Tmp_402: int, in_sdv_325: int, in_Status_22: int, in_Tmp_403: int, in_sdv_326: int, in_DescriptorData_5: int, in_sdv_329: int, in_sdv_332: int, in_Tmp_404: int, in_PriorState: int, in_Irql_10: int, in_Tmp_405: int, in_CipData_18: int, in_vslice_dummy_var_146: int, in_vslice_dummy_var_147: int, in_vslice_dummy_var_148: int) returns (out_Tmp_400: int, out_Tmp_402: int, out_sdv_325: int, out_Status_22: int, out_Tmp_403: int, out_DescriptorData_5: int, out_sdv_329: int, out_sdv_332: int, out_Tmp_404: int, out_PriorState: int, out_Irql_10: int, out_Tmp_405: int, out_vslice_dummy_var_146: int, out_vslice_dummy_var_147: int, out_vslice_dummy_var_148: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.PendingReturned__IRP, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} out_sdv_325 == 1 || out_sdv_325 == 0 || out_sdv_325 == in_sdv_325;
  free ensures {:va_keep} out_sdv_332 == 1 || out_sdv_332 == 0 || out_sdv_332 == in_sdv_332;
  free ensures {:va_keep} out_PriorState == in_PriorState || out_PriorState == in_sdv_326;
  free ensures {:va_keep} out_vslice_dummy_var_146 == -1073741823 || out_vslice_dummy_var_146 == -1073741738 || out_vslice_dummy_var_146 == 0 || out_vslice_dummy_var_146 == in_vslice_dummy_var_146;
  free ensures {:va_keep} out_vslice_dummy_var_147 == 1 || out_vslice_dummy_var_147 == 0 || out_vslice_dummy_var_147 == in_vslice_dummy_var_147;
  free ensures {:va_keep} out_vslice_dummy_var_148 == 0 || out_vslice_dummy_var_148 == in_vslice_dummy_var_148;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_AllocateResources_loop_L179(in_iPacket: int, in_DescriptorData_7: int, in_NumPackets: int) returns (out_iPacket: int)
{

  entry:
    out_iPacket := in_iPacket;
    goto L179, exit;

  exit:
    return;

  L179:
    goto anon70_Else;

  anon70_Else:
    assume {:partition} in_NumPackets > out_iPacket;
    assume {:nonnull} in_DescriptorData_7 != 0;
    assume in_DescriptorData_7 > 0;
    call {:si_unique_call 1915} sdv_RtlCopyMemory(0, 0, 12);
    out_iPacket := out_iPacket + 1;
    goto anon70_Else_dummy;

  anon70_Else_dummy:
    havoc out_iPacket;
    return;
}



procedure {:LoopProcedure} AvCip_AllocateResources_loop_L179(in_iPacket: int, in_DescriptorData_7: int, in_NumPackets: int) returns (out_iPacket: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_AllocateResources_loop_L23(in_Tmp_417: int, in_Tmp_418: int, in_Tmp_419: int, in_sdv_338: int, in_iPacket: int, in_Tmp_421: int, in_Tmp_422: int, in_Tmp_423: int, in_NumDescriptors: int, in_Status_26: int, in_sdv_340: int, in_Tmp_424: int, in_DescriptorData_7: int, in_sdv_342: int, in_Tmp_426: int, in_sdv_343: int, in_sdv_344: int, in_Tmp_429: int, in_Tmp_430: int, in_NumPackets: int, in_Tmp_431: int, in_iAttach: int, in_Tmp_432: int, in_Tmp_433: int, in_Tmp_434: int, in_sdv_346: int, in_Tmp_435: int, in_Tmp_437: int, in_Tmp_438: int, in_Tmp_439: int, in_Tmp_440: int, in_Tmp_441: int, in_Tmp_442: int, in_Tmp_443: int, in_Tmp_444: int, in_Irql_11: int, in_sdv_348: int, in_Tmp_445: int, in_Tmp_446: int, in_Tmp_447: int, in_Tmp_448: int, in_Tmp_449: int, in_Tmp_450: int, in_Tmp_452: int, in_Tmp_453: int, in_Tmp_454: int, in_CipData_22: int, in_boogieTmp: int, in_vslice_dummy_var_150: int) returns (out_Tmp_417: int, out_Tmp_418: int, out_Tmp_419: int, out_sdv_338: int, out_iPacket: int, out_Tmp_421: int, out_Tmp_422: int, out_Tmp_423: int, out_Status_26: int, out_sdv_340: int, out_Tmp_424: int, out_DescriptorData_7: int, out_sdv_342: int, out_Tmp_426: int, out_sdv_343: int, out_sdv_344: int, out_Tmp_429: int, out_Tmp_430: int, out_Tmp_431: int, out_iAttach: int, out_Tmp_432: int, out_Tmp_433: int, out_Tmp_434: int, out_sdv_346: int, out_Tmp_435: int, out_Tmp_437: int, out_Tmp_438: int, out_Tmp_439: int, out_Tmp_440: int, out_Tmp_441: int, out_Tmp_442: int, out_Tmp_443: int, out_Tmp_444: int, out_Irql_11: int, out_sdv_348: int, out_Tmp_445: int, out_Tmp_446: int, out_Tmp_447: int, out_Tmp_448: int, out_Tmp_449: int, out_Tmp_450: int, out_Tmp_452: int, out_Tmp_453: int, out_Tmp_454: int, out_boogieTmp: int, out_vslice_dummy_var_150: int)
{
  var vslice_dummy_var_2195: int;

  entry:
    out_Tmp_417, out_Tmp_418, out_Tmp_419, out_sdv_338, out_iPacket, out_Tmp_421, out_Tmp_422, out_Tmp_423, out_Status_26, out_sdv_340, out_Tmp_424, out_DescriptorData_7, out_sdv_342, out_Tmp_426, out_sdv_343, out_sdv_344, out_Tmp_429, out_Tmp_430, out_Tmp_431, out_iAttach, out_Tmp_432, out_Tmp_433, out_Tmp_434, out_sdv_346, out_Tmp_435, out_Tmp_437, out_Tmp_438, out_Tmp_439, out_Tmp_440, out_Tmp_441, out_Tmp_442, out_Tmp_443, out_Tmp_444, out_Irql_11, out_sdv_348, out_Tmp_445, out_Tmp_446, out_Tmp_447, out_Tmp_448, out_Tmp_449, out_Tmp_450, out_Tmp_452, out_Tmp_453, out_Tmp_454, out_boogieTmp, out_vslice_dummy_var_150 := in_Tmp_417, in_Tmp_418, in_Tmp_419, in_sdv_338, in_iPacket, in_Tmp_421, in_Tmp_422, in_Tmp_423, in_Status_26, in_sdv_340, in_Tmp_424, in_DescriptorData_7, in_sdv_342, in_Tmp_426, in_sdv_343, in_sdv_344, in_Tmp_429, in_Tmp_430, in_Tmp_431, in_iAttach, in_Tmp_432, in_Tmp_433, in_Tmp_434, in_sdv_346, in_Tmp_435, in_Tmp_437, in_Tmp_438, in_Tmp_439, in_Tmp_440, in_Tmp_441, in_Tmp_442, in_Tmp_443, in_Tmp_444, in_Irql_11, in_sdv_348, in_Tmp_445, in_Tmp_446, in_Tmp_447, in_Tmp_448, in_Tmp_449, in_Tmp_450, in_Tmp_452, in_Tmp_453, in_Tmp_454, in_boogieTmp, in_vslice_dummy_var_150;
    goto L23, exit;

  exit:
    return;

  L23:
    goto anon55_Else;

  anon55_Else:
    assume {:partition} in_NumDescriptors > out_iAttach;
    call {:si_unique_call 1934} out_sdv_343 := ExAllocatePoolWithTag(512, 496, 943206710);
    out_DescriptorData_7 := out_sdv_343;
    goto anon71_Else;

  anon71_Else:
    assume {:partition} out_DescriptorData_7 != 0;
    call {:si_unique_call 1930} sdv_RtlZeroMemory(0, 496);
    call {:si_unique_call 1931} sdv_IoInitializeRemoveLock(0, -462395037, 1, 50);
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    havoc out_Tmp_418;
    assume {:nonnull} out_Tmp_418 != 0;
    assume out_Tmp_418 > 0;
    havoc out_Tmp_444;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1932} out_boogieTmp := IoAllocateIrp(out_Tmp_444, 0);
    call {:si_unique_call 1933} out_sdv_346 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon72_Else;

  anon72_Else:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon56_Else;

  anon56_Else:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    havoc out_Tmp_443;
    assume {:nonnull} out_Tmp_443 != 0;
    assume out_Tmp_443 > 0;
    havoc out_Tmp_449;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1928} out_boogieTmp := IoAllocateIrp(out_Tmp_449, 0);
    call {:si_unique_call 1929} out_sdv_340 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon73_Else;

  anon73_Else:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon57_Else;

  anon57_Else:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L63;

  L63:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto L65;

  L65:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    havoc vslice_dummy_var_2195;
    call {:si_unique_call 1935} __AssumeBoundInt(vslice_dummy_var_2195);
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    havoc out_Tmp_446;
    call {:si_unique_call 1936} out_sdv_348 := ExAllocatePoolWithTag(512, out_Tmp_446, 943206710);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon74_Else;

  anon74_Else:
    goto L75;

  L75:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    havoc out_Tmp_441;
    call {:si_unique_call 1937} out_sdv_342 := IoAllocateMdl(0, out_Tmp_441, 0, 0, 0);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_450;
    assume {:nonnull} out_Tmp_450 != 0;
    assume out_Tmp_450 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_433;
    assume {:nonnull} out_Tmp_433 != 0;
    assume out_Tmp_433 > 0;
    goto anon75_Else;

  anon75_Else:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_422;
    assume {:nonnull} out_Tmp_422 != 0;
    assume out_Tmp_422 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_430;
    assume {:nonnull} out_Tmp_430 != 0;
    assume out_Tmp_430 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_424;
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    assume {:nonnull} out_Tmp_424 != 0;
    assume out_Tmp_424 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_437;
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    assume {:nonnull} out_Tmp_437 != 0;
    assume out_Tmp_437 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_452;
    assume {:nonnull} out_Tmp_452 != 0;
    assume out_Tmp_452 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_439;
    assume {:nonnull} out_Tmp_439 != 0;
    assume out_Tmp_439 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_448;
    assume {:nonnull} out_Tmp_448 != 0;
    assume out_Tmp_448 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_423;
    assume {:nonnull} out_Tmp_423 != 0;
    assume out_Tmp_423 > 0;
    goto L95;

  L95:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1920} out_Status_26 := Av1394_AttachBuffer(in_CipData_22, out_DescriptorData_7);
    goto anon62_Then;

  anon62_Then:
    assume {:partition} 0 <= out_Status_26;
    call {:si_unique_call 1916} out_Tmp_445 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_445 != 0;
    assume out_Tmp_445 > 0;
    call {:si_unique_call 1917} sdv_KeAcquireSpinLock(0, out_Tmp_445);
    assume {:nonnull} out_Tmp_445 != 0;
    assume out_Tmp_445 > 0;
    havoc out_Irql_11;
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1918} out_vslice_dummy_var_150 := sdv_InsertTailList(DescriptorList__CIP_DATA(in_CipData_22), ListEntry__CIP_DESCRIPTOR_DATA(out_DescriptorData_7));
    call {:si_unique_call 1919} sdv_KeReleaseSpinLock(0, out_Irql_11);
    out_iAttach := out_iAttach + 1;
    goto anon62_Then_dummy;

  anon62_Then_dummy:
    call {:si_unique_call 1938} {:si_old_unique_call 1} out_Tmp_417, out_Tmp_418, out_Tmp_419, out_sdv_338, out_iPacket, out_Tmp_421, out_Tmp_422, out_Tmp_423, out_Status_26, out_sdv_340, out_Tmp_424, out_DescriptorData_7, out_sdv_342, out_Tmp_426, out_sdv_343, out_sdv_344, out_Tmp_429, out_Tmp_430, out_Tmp_431, out_iAttach, out_Tmp_432, out_Tmp_433, out_Tmp_434, out_sdv_346, out_Tmp_435, out_Tmp_437, out_Tmp_438, out_Tmp_439, out_Tmp_440, out_Tmp_441, out_Tmp_442, out_Tmp_443, out_Tmp_444, out_Irql_11, out_sdv_348, out_Tmp_445, out_Tmp_446, out_Tmp_447, out_Tmp_448, out_Tmp_449, out_Tmp_450, out_Tmp_452, out_Tmp_453, out_Tmp_454, out_boogieTmp, out_vslice_dummy_var_150 := AvCip_AllocateResources_loop_L23(out_Tmp_417, out_Tmp_418, out_Tmp_419, out_sdv_338, out_iPacket, out_Tmp_421, out_Tmp_422, out_Tmp_423, in_NumDescriptors, out_Status_26, out_sdv_340, out_Tmp_424, out_DescriptorData_7, out_sdv_342, out_Tmp_426, out_sdv_343, out_sdv_344, out_Tmp_429, out_Tmp_430, in_NumPackets, out_Tmp_431, out_iAttach, out_Tmp_432, out_Tmp_433, out_Tmp_434, out_sdv_346, out_Tmp_435, out_Tmp_437, out_Tmp_438, out_Tmp_439, out_Tmp_440, out_Tmp_441, out_Tmp_442, out_Tmp_443, out_Tmp_444, out_Irql_11, out_sdv_348, out_Tmp_445, out_Tmp_446, out_Tmp_447, out_Tmp_448, out_Tmp_449, out_Tmp_450, out_Tmp_452, out_Tmp_453, out_Tmp_454, in_CipData_22, out_boogieTmp, out_vslice_dummy_var_150);
    return;

  anon61_Then:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_454;
    assume {:nonnull} out_Tmp_454 != 0;
    assume out_Tmp_454 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_438;
    assume {:nonnull} out_Tmp_438 != 0;
    assume out_Tmp_438 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_447;
    assume {:nonnull} out_Tmp_447 != 0;
    assume out_Tmp_447 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_421;
    assume {:nonnull} out_Tmp_421 != 0;
    assume out_Tmp_421 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_429;
    assume {:nonnull} out_Tmp_429 != 0;
    assume out_Tmp_429 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_432;
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    assume {:nonnull} out_Tmp_432 != 0;
    assume out_Tmp_432 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_419;
    assume {:nonnull} out_Tmp_419 != 0;
    assume out_Tmp_419 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_442;
    assume {:nonnull} out_Tmp_442 != 0;
    assume out_Tmp_442 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_417;
    assume {:nonnull} out_Tmp_417 != 0;
    assume out_Tmp_417 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_434;
    assume {:nonnull} out_Tmp_434 != 0;
    assume out_Tmp_434 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1921} InitializeListHead(NotifyFrameList__CIP_DESCRIPTOR_DATA(out_DescriptorData_7));
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1922} KeInitializeDpc(TimerDpc__CIP_DESCRIPTOR_DATA(out_DescriptorData_7), li2bplFunctionConstant435, 0);
    call {:si_unique_call 1923} KeInitializeTimer(0);
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto L95;

  anon59_Then:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L75;

  anon60_Then:
    goto L65;

  anon58_Then:
    out_Tmp_431 := in_NumPackets * 12;
    call {:si_unique_call 1927} out_sdv_344 := ExAllocatePoolWithTag(512, out_Tmp_431, 943206710);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon77_Else;

  anon77_Else:
    out_iPacket := 0;
    goto L179;

  L179:
    call {:si_unique_call 1925} out_iPacket := AvCip_AllocateResources_loop_L179(out_iPacket, out_DescriptorData_7, in_NumPackets);
    goto L179_last;

  L179_last:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} in_NumPackets > out_iPacket;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1926} sdv_RtlCopyMemory(0, 0, 12);
    out_iPacket := out_iPacket + 1;
    assume false;
    return;

  anon70_Then:
    assume {:partition} out_iPacket >= in_NumPackets;
    out_Tmp_440 := 12 * in_NumPackets;
    call {:si_unique_call 1924} out_sdv_338 := IoAllocateMdl(0, out_Tmp_440, 0, 0, 0);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_453;
    assume {:nonnull} out_Tmp_453 != 0;
    assume out_Tmp_453 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_426;
    assume {:nonnull} out_Tmp_426 != 0;
    assume out_Tmp_426 > 0;
    goto anon78_Else;

  anon78_Else:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_435;
    assume {:nonnull} out_Tmp_435 != 0;
    assume out_Tmp_435 > 0;
    goto L63;
}



procedure {:LoopProcedure} AvCip_AllocateResources_loop_L23(in_Tmp_417: int, in_Tmp_418: int, in_Tmp_419: int, in_sdv_338: int, in_iPacket: int, in_Tmp_421: int, in_Tmp_422: int, in_Tmp_423: int, in_NumDescriptors: int, in_Status_26: int, in_sdv_340: int, in_Tmp_424: int, in_DescriptorData_7: int, in_sdv_342: int, in_Tmp_426: int, in_sdv_343: int, in_sdv_344: int, in_Tmp_429: int, in_Tmp_430: int, in_NumPackets: int, in_Tmp_431: int, in_iAttach: int, in_Tmp_432: int, in_Tmp_433: int, in_Tmp_434: int, in_sdv_346: int, in_Tmp_435: int, in_Tmp_437: int, in_Tmp_438: int, in_Tmp_439: int, in_Tmp_440: int, in_Tmp_441: int, in_Tmp_442: int, in_Tmp_443: int, in_Tmp_444: int, in_Irql_11: int, in_sdv_348: int, in_Tmp_445: int, in_Tmp_446: int, in_Tmp_447: int, in_Tmp_448: int, in_Tmp_449: int, in_Tmp_450: int, in_Tmp_452: int, in_Tmp_453: int, in_Tmp_454: int, in_CipData_22: int, in_boogieTmp: int, in_vslice_dummy_var_150: int) returns (out_Tmp_417: int, out_Tmp_418: int, out_Tmp_419: int, out_sdv_338: int, out_iPacket: int, out_Tmp_421: int, out_Tmp_422: int, out_Tmp_423: int, out_Status_26: int, out_sdv_340: int, out_Tmp_424: int, out_DescriptorData_7: int, out_sdv_342: int, out_Tmp_426: int, out_sdv_343: int, out_sdv_344: int, out_Tmp_429: int, out_Tmp_430: int, out_Tmp_431: int, out_iAttach: int, out_Tmp_432: int, out_Tmp_433: int, out_Tmp_434: int, out_sdv_346: int, out_Tmp_435: int, out_Tmp_437: int, out_Tmp_438: int, out_Tmp_439: int, out_Tmp_440: int, out_Tmp_441: int, out_Tmp_442: int, out_Tmp_443: int, out_Tmp_444: int, out_Irql_11: int, out_sdv_348: int, out_Tmp_445: int, out_Tmp_446: int, out_Tmp_447: int, out_Tmp_448: int, out_Tmp_449: int, out_Tmp_450: int, out_Tmp_452: int, out_Tmp_453: int, out_Tmp_454: int, out_boogieTmp: int, out_vslice_dummy_var_150: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} out_Tmp_431 == in_Tmp_431 || out_Tmp_431 == in_NumPackets * 12;
  free ensures {:va_keep} out_Tmp_440 == in_Tmp_440 || out_Tmp_440 == 12 * in_NumPackets;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_ProcessTalkPacket_2_loop_L69(in_Frame_3: int, in_BlockTime: int, in_Tmp_470: int, in_UniTime_1: int, in_sdv_365: int, in_sdv_367: int, in_sdv_369: int, in_Cip: int, in_bDone: int, in_sdv_371: int, in_sdv_375: int, in_SpTime: int, in_FrameContext_6: int, in_SpHeader: int, in_sdv_377: int, in_pThisFrame: int, in_CipData_26: int, in_DescriptorData_9: int, in_boogieTmp: int, in_vslice_dummy_var_154: int, in_vslice_dummy_var_156: int, in_vslice_dummy_var_157: int) returns (out_Frame_3: int, out_BlockTime: int, out_Tmp_470: int, out_sdv_367: int, out_bDone: int, out_sdv_371: int, out_FrameContext_6: int, out_SpHeader: int, out_sdv_377: int, out_pThisFrame: int, out_boogieTmp: int, out_vslice_dummy_var_154: int, out_vslice_dummy_var_156: int, out_vslice_dummy_var_157: int)
{
  var vslice_dummy_var_2196: int;
  var vslice_dummy_var_2197: int;

  entry:
    out_Frame_3, out_BlockTime, out_Tmp_470, out_sdv_367, out_bDone, out_sdv_371, out_FrameContext_6, out_SpHeader, out_sdv_377, out_pThisFrame, out_boogieTmp, out_vslice_dummy_var_154, out_vslice_dummy_var_156, out_vslice_dummy_var_157 := in_Frame_3, in_BlockTime, in_Tmp_470, in_sdv_367, in_bDone, in_sdv_371, in_FrameContext_6, in_SpHeader, in_sdv_377, in_pThisFrame, in_boogieTmp, in_vslice_dummy_var_154, in_vslice_dummy_var_156, in_vslice_dummy_var_157;
    goto L69, exit;

  exit:
    return;

  L69:
    call {:si_unique_call 1939} out_sdv_371 := AvCip_CopyBlock(in_CipData_26);
    goto anon107_Else;

  anon107_Else:
    assume {:partition} out_sdv_371 != 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    out_BlockTime := 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L76;

  L76:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} out_FrameContext_6 != 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_Tmp_470;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    call {:si_unique_call 1943} sdv_RtlCopyMemory(0, 0, out_Tmp_470);
    goto L86;

  L86:
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    havoc out_SpHeader;
    goto L97;

  L97:
    assume {:nonnull} in_SpTime != 0;
    assume in_SpTime > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_SpTime != 0;
    assume in_SpTime > 0;
    assume {:nonnull} out_SpHeader != 0;
    assume out_SpHeader > 0;
    goto L87;

  L87:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L103;

  L103:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc vslice_dummy_var_2196;
    havoc vslice_dummy_var_2197;
    call {:si_unique_call 1942} out_sdv_367 := RtlUShortAdd(vslice_dummy_var_2196, vslice_dummy_var_2197, BytesInFrame__CIP_DATA(in_CipData_26));
    goto anon119_Else;

  anon119_Else:
    assume {:partition} out_sdv_367 >= 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    call {:si_unique_call 1944} out_vslice_dummy_var_154 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_Frame_3;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    call {:si_unique_call 1945} out_vslice_dummy_var_156 := sdv_InsertTailList(NotifyFrameList__CIP_DESCRIPTOR_DATA(in_DescriptorData_9), ListEntry__CIP_FRAME_CONTEXT(out_FrameContext_6));
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L128;

  L128:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    call {:si_unique_call 1946} out_sdv_377 := sdv_IsListEmpty(0);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} out_sdv_377 == 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_FrameContext_6;
    goto L136;

  L136:
    out_bDone := 1;
    goto L115;

  L115:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto L138;

  L138:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    call {:si_unique_call 1940} out_boogieTmp := corral_nondet();
    goto L77;

  L77:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    goto L145;

  L145:
    goto anon126_Then;

  anon126_Then:
    assume {:partition} out_FrameContext_6 != 0;
    goto anon126_Then_dummy;

  anon126_Then_dummy:
    goto L_BAF_2;

  L_BAF_2:
    call {:si_unique_call 1947} {:si_old_unique_call 1} out_Frame_3, out_BlockTime, out_Tmp_470, out_sdv_367, out_bDone, out_sdv_371, out_FrameContext_6, out_SpHeader, out_sdv_377, out_pThisFrame, out_boogieTmp, out_vslice_dummy_var_154, out_vslice_dummy_var_156, out_vslice_dummy_var_157 := AvCip_ProcessTalkPacket_2_loop_L69(out_Frame_3, out_BlockTime, out_Tmp_470, in_UniTime_1, in_sdv_365, out_sdv_367, in_sdv_369, in_Cip, out_bDone, out_sdv_371, in_sdv_375, in_SpTime, out_FrameContext_6, out_SpHeader, out_sdv_377, out_pThisFrame, in_CipData_26, in_DescriptorData_9, out_boogieTmp, out_vslice_dummy_var_154, out_vslice_dummy_var_156, out_vslice_dummy_var_157);
    return;

  anon124_Then:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} out_FrameContext_6 != 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} in_UniTime_1 != 0;
    assume in_UniTime_1 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_UniTime_1 != 0;
    assume in_UniTime_1 > 0;
    goto L145;

  anon125_Then:
    assume {:partition} out_FrameContext_6 == 0;
    goto L145;

  anon111_Then:
    goto anon111_Then_dummy;

  anon111_Then_dummy:
    goto L_BAF_2;

  anon120_Then:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L138;

  anon123_Then:
    assume {:partition} out_sdv_377 != 0;
    goto L130;

  L130:
    out_FrameContext_6 := 0;
    goto L136;

  anon122_Then:
    goto L130;

  anon121_Then:
    goto L128;

  anon141_Then:
    goto L115;

  anon118_Then:
    goto L103;

  anon115_Then:
    goto L103;

  anon117_Then:
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_SpHeader;
    goto L97;

  anon116_Then:
    goto L87;

  anon114_Then:
    goto L87;

  anon112_Then:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} out_pThisFrame == 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_pThisFrame;
    goto L86;

  anon113_Then:
    assume {:partition} out_pThisFrame != 0;
    goto L86;

  anon110_Then:
    assume {:partition} out_FrameContext_6 == 0;
    goto L77;

  anon148_Then:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    out_BlockTime := out_BlockTime + 1;
    goto L159;

  L159:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_BlockTime;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    call {:si_unique_call 1941} out_vslice_dummy_var_157 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(in_CipData_26), out_BlockTime);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} out_bDone != 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} out_FrameContext_6 == 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L76;

  anon128_Then:
    assume {:partition} out_FrameContext_6 != 0;
    goto L76;

  anon127_Then:
    assume {:partition} out_bDone == 0;
    goto L76;

  anon149_Then:
    goto L159;

  anon109_Then:
    goto L76;
}



procedure {:LoopProcedure} AvCip_ProcessTalkPacket_2_loop_L69(in_Frame_3: int, in_BlockTime: int, in_Tmp_470: int, in_UniTime_1: int, in_sdv_365: int, in_sdv_367: int, in_sdv_369: int, in_Cip: int, in_bDone: int, in_sdv_371: int, in_sdv_375: int, in_SpTime: int, in_FrameContext_6: int, in_SpHeader: int, in_sdv_377: int, in_pThisFrame: int, in_CipData_26: int, in_DescriptorData_9: int, in_boogieTmp: int, in_vslice_dummy_var_154: int, in_vslice_dummy_var_156: int, in_vslice_dummy_var_157: int) returns (out_Frame_3: int, out_BlockTime: int, out_Tmp_470: int, out_sdv_367: int, out_bDone: int, out_sdv_371: int, out_FrameContext_6: int, out_SpHeader: int, out_sdv_377: int, out_pThisFrame: int, out_boogieTmp: int, out_vslice_dummy_var_154: int, out_vslice_dummy_var_156: int, out_vslice_dummy_var_157: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_367 == 0 || out_sdv_367 == -1073741675 || out_sdv_367 == in_sdv_367;
  free ensures {:va_keep} out_bDone == 1 || out_bDone == in_bDone;
  free ensures {:va_keep} out_sdv_371 == 1 || out_sdv_371 == 0 || out_sdv_371 == in_sdv_371;
  free ensures {:va_keep} out_sdv_377 == 1 || out_sdv_377 == 0 || out_sdv_377 == in_sdv_377;
  free ensures {:va_keep} out_vslice_dummy_var_154 == 1 || out_vslice_dummy_var_154 == 0 || out_vslice_dummy_var_154 == in_vslice_dummy_var_154;
  free ensures {:va_keep} out_vslice_dummy_var_157 == 1 || out_vslice_dummy_var_157 == 0 || out_vslice_dummy_var_157 == in_vslice_dummy_var_157;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_ProcessTalkPacket_2_loop_L58(in_i_2: int, in_Frame_3: int, in_BlockTime: int, in_Tmp_470: int, in_MaxFrameSize: int, in_UniTime_1: int, in_sdv_365: int, in_sdv_367: int, in_sdv_369: int, in_Cip: int, in_bDone: int, in_sdv_371: int, in_Tmp_478: int, in_sdv_375: int, in_SpTime: int, in_FrameContext_6: int, in_currLength: int, in_SpHeader: int, in_sdv_377: int, in_pThisFrame: int, in_CipData_26: int, in_DescriptorData_9: int, in_boogieTmp: int, in_vslice_dummy_var_153: int, in_vslice_dummy_var_154: int, in_vslice_dummy_var_156: int, in_vslice_dummy_var_157: int) returns (out_i_2: int, out_Frame_3: int, out_BlockTime: int, out_Tmp_470: int, out_MaxFrameSize: int, out_sdv_367: int, out_bDone: int, out_sdv_371: int, out_Tmp_478: int, out_FrameContext_6: int, out_currLength: int, out_SpHeader: int, out_sdv_377: int, out_pThisFrame: int, out_boogieTmp: int, out_vslice_dummy_var_153: int, out_vslice_dummy_var_154: int, out_vslice_dummy_var_156: int, out_vslice_dummy_var_157: int)
{
  var vslice_dummy_var_2198: int;
  var vslice_dummy_var_2199: int;

  entry:
    out_i_2, out_Frame_3, out_BlockTime, out_Tmp_470, out_MaxFrameSize, out_sdv_367, out_bDone, out_sdv_371, out_Tmp_478, out_FrameContext_6, out_currLength, out_SpHeader, out_sdv_377, out_pThisFrame, out_boogieTmp, out_vslice_dummy_var_153, out_vslice_dummy_var_154, out_vslice_dummy_var_156, out_vslice_dummy_var_157 := in_i_2, in_Frame_3, in_BlockTime, in_Tmp_470, in_MaxFrameSize, in_sdv_367, in_bDone, in_sdv_371, in_Tmp_478, in_FrameContext_6, in_currLength, in_SpHeader, in_sdv_377, in_pThisFrame, in_boogieTmp, in_vslice_dummy_var_153, in_vslice_dummy_var_154, in_vslice_dummy_var_156, in_vslice_dummy_var_157;
    goto L58, exit;

  exit:
    return;

  L58:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon106_Else;

  anon106_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_Tmp_478;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} out_Tmp_478 != 0;
    assume out_Tmp_478 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    call {:si_unique_call 1951} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    call {:si_unique_call 1950} out_vslice_dummy_var_153 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(in_CipData_26), 3072);
    goto L69;

  L69:
    call {:si_unique_call 1948} out_Frame_3, out_BlockTime, out_Tmp_470, out_sdv_367, out_bDone, out_sdv_371, out_FrameContext_6, out_SpHeader, out_sdv_377, out_pThisFrame, out_boogieTmp, out_vslice_dummy_var_154, out_vslice_dummy_var_156, out_vslice_dummy_var_157 := AvCip_ProcessTalkPacket_2_loop_L69(out_Frame_3, out_BlockTime, out_Tmp_470, in_UniTime_1, in_sdv_365, out_sdv_367, in_sdv_369, in_Cip, out_bDone, out_sdv_371, in_sdv_375, in_SpTime, out_FrameContext_6, out_SpHeader, out_sdv_377, out_pThisFrame, in_CipData_26, in_DescriptorData_9, out_boogieTmp, out_vslice_dummy_var_154, out_vslice_dummy_var_156, out_vslice_dummy_var_157);
    goto L69_last;

  L69_last:
    call {:si_unique_call 1949} out_sdv_371 := AvCip_CopyBlock(in_CipData_26);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} out_sdv_371 != 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    out_BlockTime := 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L76;

  L76:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} out_FrameContext_6 != 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_Tmp_470;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    call {:si_unique_call 1955} sdv_RtlCopyMemory(0, 0, out_Tmp_470);
    goto L86;

  L86:
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    havoc out_SpHeader;
    goto L97;

  L97:
    assume {:nonnull} in_SpTime != 0;
    assume in_SpTime > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_SpTime != 0;
    assume in_SpTime > 0;
    assume {:nonnull} out_SpHeader != 0;
    assume out_SpHeader > 0;
    goto L87;

  L87:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L103;

  L103:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc vslice_dummy_var_2198;
    havoc vslice_dummy_var_2199;
    call {:si_unique_call 1954} out_sdv_367 := RtlUShortAdd(vslice_dummy_var_2198, vslice_dummy_var_2199, BytesInFrame__CIP_DATA(in_CipData_26));
    goto anon119_Else;

  anon119_Else:
    assume {:partition} out_sdv_367 >= 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    call {:si_unique_call 1956} out_vslice_dummy_var_154 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_Frame_3;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    call {:si_unique_call 1957} out_vslice_dummy_var_156 := sdv_InsertTailList(NotifyFrameList__CIP_DESCRIPTOR_DATA(in_DescriptorData_9), ListEntry__CIP_FRAME_CONTEXT(out_FrameContext_6));
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L128;

  L128:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    call {:si_unique_call 1958} out_sdv_377 := sdv_IsListEmpty(0);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} out_sdv_377 == 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_FrameContext_6;
    goto L136;

  L136:
    out_bDone := 1;
    goto L115;

  L115:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto L138;

  L138:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    call {:si_unique_call 1952} out_boogieTmp := corral_nondet();
    goto L77;

  L77:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    goto L145;

  L145:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} out_FrameContext_6 == 0;
    goto L73;

  L73:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L171;

  L171:
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_MaxFrameSize;
    goto L174;

  L174:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} out_currLength != 0;
    goto L177;

  L177:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_currLength;
    goto anon144_Then;

  anon144_Then:
    assume {:partition} out_bDone == 0;
    out_i_2 := out_i_2 + 1;
    goto anon144_Then_dummy;

  anon144_Then_dummy:
    call {:si_unique_call 1959} {:si_old_unique_call 1} out_i_2, out_Frame_3, out_BlockTime, out_Tmp_470, out_MaxFrameSize, out_sdv_367, out_bDone, out_sdv_371, out_Tmp_478, out_FrameContext_6, out_currLength, out_SpHeader, out_sdv_377, out_pThisFrame, out_boogieTmp, out_vslice_dummy_var_153, out_vslice_dummy_var_154, out_vslice_dummy_var_156, out_vslice_dummy_var_157 := AvCip_ProcessTalkPacket_2_loop_L58(out_i_2, out_Frame_3, out_BlockTime, out_Tmp_470, out_MaxFrameSize, in_UniTime_1, in_sdv_365, out_sdv_367, in_sdv_369, in_Cip, out_bDone, out_sdv_371, out_Tmp_478, in_sdv_375, in_SpTime, out_FrameContext_6, out_currLength, out_SpHeader, out_sdv_377, out_pThisFrame, in_CipData_26, in_DescriptorData_9, out_boogieTmp, out_vslice_dummy_var_153, out_vslice_dummy_var_154, out_vslice_dummy_var_156, out_vslice_dummy_var_157);
    return;

  anon129_Then:
    assume {:partition} out_currLength == 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    goto L177;

  anon130_Then:
    goto L177;

  anon143_Then:
    goto L174;

  anon142_Then:
    goto L171;

  anon108_Then:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L171;

  anon147_Then:
    goto L171;

  anon126_Then:
    assume {:partition} out_FrameContext_6 != 0;
    assume false;
    return;

  anon124_Then:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} out_FrameContext_6 != 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} in_UniTime_1 != 0;
    assume in_UniTime_1 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_UniTime_1 != 0;
    assume in_UniTime_1 > 0;
    goto L145;

  anon125_Then:
    assume {:partition} out_FrameContext_6 == 0;
    goto L145;

  anon111_Then:
    assume false;
    return;

  anon120_Then:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L138;

  anon123_Then:
    assume {:partition} out_sdv_377 != 0;
    goto L130;

  L130:
    out_FrameContext_6 := 0;
    goto L136;

  anon122_Then:
    goto L130;

  anon121_Then:
    goto L128;

  anon141_Then:
    goto L115;

  anon118_Then:
    goto L103;

  anon115_Then:
    goto L103;

  anon117_Then:
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_SpHeader;
    goto L97;

  anon116_Then:
    goto L87;

  anon114_Then:
    goto L87;

  anon112_Then:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} out_pThisFrame == 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_pThisFrame;
    goto L86;

  anon113_Then:
    assume {:partition} out_pThisFrame != 0;
    goto L86;

  anon110_Then:
    assume {:partition} out_FrameContext_6 == 0;
    goto L77;

  anon148_Then:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    out_BlockTime := out_BlockTime + 1;
    goto L159;

  L159:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_BlockTime;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    call {:si_unique_call 1953} out_vslice_dummy_var_157 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(in_CipData_26), out_BlockTime);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} out_bDone != 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} out_FrameContext_6 == 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L76;

  anon128_Then:
    assume {:partition} out_FrameContext_6 != 0;
    goto L76;

  anon127_Then:
    assume {:partition} out_bDone == 0;
    goto L76;

  anon149_Then:
    goto L159;

  anon109_Then:
    goto L76;

  anon107_Then:
    assume {:partition} out_sdv_371 == 0;
    goto L73;

  anon140_Then:
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    goto L69;
}



procedure {:LoopProcedure} AvCip_ProcessTalkPacket_2_loop_L58(in_i_2: int, in_Frame_3: int, in_BlockTime: int, in_Tmp_470: int, in_MaxFrameSize: int, in_UniTime_1: int, in_sdv_365: int, in_sdv_367: int, in_sdv_369: int, in_Cip: int, in_bDone: int, in_sdv_371: int, in_Tmp_478: int, in_sdv_375: int, in_SpTime: int, in_FrameContext_6: int, in_currLength: int, in_SpHeader: int, in_sdv_377: int, in_pThisFrame: int, in_CipData_26: int, in_DescriptorData_9: int, in_boogieTmp: int, in_vslice_dummy_var_153: int, in_vslice_dummy_var_154: int, in_vslice_dummy_var_156: int, in_vslice_dummy_var_157: int) returns (out_i_2: int, out_Frame_3: int, out_BlockTime: int, out_Tmp_470: int, out_MaxFrameSize: int, out_sdv_367: int, out_bDone: int, out_sdv_371: int, out_Tmp_478: int, out_FrameContext_6: int, out_currLength: int, out_SpHeader: int, out_sdv_377: int, out_pThisFrame: int, out_boogieTmp: int, out_vslice_dummy_var_153: int, out_vslice_dummy_var_154: int, out_vslice_dummy_var_156: int, out_vslice_dummy_var_157: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_367 == 0 || out_sdv_367 == -1073741675 || out_sdv_367 == in_sdv_367;
  free ensures {:va_keep} out_bDone == 1 || out_bDone == in_bDone;
  free ensures {:va_keep} out_sdv_371 == 1 || out_sdv_371 == 0 || out_sdv_371 == in_sdv_371;
  free ensures {:va_keep} out_sdv_377 == 1 || out_sdv_377 == 0 || out_sdv_377 == in_sdv_377;
  free ensures {:va_keep} out_vslice_dummy_var_153 == 1 || out_vslice_dummy_var_153 == 0 || out_vslice_dummy_var_153 == in_vslice_dummy_var_153;
  free ensures {:va_keep} out_vslice_dummy_var_154 == 1 || out_vslice_dummy_var_154 == 0 || out_vslice_dummy_var_154 == in_vslice_dummy_var_154;
  free ensures {:va_keep} out_vslice_dummy_var_157 == 1 || out_vslice_dummy_var_157 == 0 || out_vslice_dummy_var_157 == in_vslice_dummy_var_157;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_ProcessTalkPacket_2_loop_L230(in_UniTime_2: int, in_sdv_376: int, in_FrameContext_6: int, in_CipData_26: int)
{

  entry:
    goto L230, exit;

  exit:
    return;

  L230:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon133_Else;

  anon133_Else:
    assume {:nonnull} in_FrameContext_6 != 0;
    assume in_FrameContext_6 > 0;
    assume {:nonnull} in_FrameContext_6 != 0;
    assume in_FrameContext_6 > 0;
    assume {:nonnull} in_UniTime_2 != 0;
    assume in_UniTime_2 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_UniTime_2 != 0;
    assume in_UniTime_2 > 0;
    goto anon133_Else_dummy;

  anon133_Else_dummy:
    call {:si_unique_call 1960} {:si_old_unique_call 1} AvCip_ProcessTalkPacket_2_loop_L230(in_UniTime_2, in_sdv_376, in_FrameContext_6, in_CipData_26);
    return;
}



procedure {:LoopProcedure} AvCip_ProcessTalkPacket_2_loop_L230(in_UniTime_2: int, in_sdv_376: int, in_FrameContext_6: int, in_CipData_26: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvFcp_CompleteQueuedFcp_loop_L53(in_Tmp_510: int, in_Irql_16: int, in_FcpIrp_1: int, in_sdv_407: int, in_sdv_410: int, in_sdv_412: int, in_IrpEntry_1: int, in_PdoExtension_9: int) returns (out_Tmp_510: int, out_Irql_16: int, out_FcpIrp_1: int, out_sdv_407: int, out_sdv_410: int, out_sdv_412: int, out_IrpEntry_1: int)
{

  entry:
    out_Tmp_510, out_Irql_16, out_FcpIrp_1, out_sdv_407, out_sdv_410, out_sdv_412, out_IrpEntry_1 := in_Tmp_510, in_Irql_16, in_FcpIrp_1, in_sdv_407, in_sdv_410, in_sdv_412, in_IrpEntry_1;
    goto L53, exit;

  exit:
    return;

  L53:
    call {:si_unique_call 1961} out_sdv_410 := sdv_IsListEmpty(0);
    goto anon17_Then;

  anon17_Then:
    assume {:partition} out_sdv_410 == 0;
    assume {:nonnull} in_PdoExtension_9 != 0;
    assume in_PdoExtension_9 > 0;
    call {:si_unique_call 1966} out_IrpEntry_1 := RemoveHeadList(FcpReqIrpList__PDO_DEVICE_EXTENSION(in_PdoExtension_9));
    call {:si_unique_call 1967} out_sdv_412 := sdv_containing_record(out_IrpEntry_1, 88);
    out_FcpIrp_1 := out_sdv_412;
    call {:si_unique_call 1968} out_sdv_407 := sdv_IoSetCancelRoutine(out_FcpIrp_1, 0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} out_sdv_407 != 0;
    call {:si_unique_call 1962} sdv_KeReleaseSpinLock(0, out_Irql_16);
    assume {:nonnull} out_FcpIrp_1 != 0;
    assume out_FcpIrp_1 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(out_FcpIrp_1))] := -1073741248;
    call {:si_unique_call 1963} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1964} out_Tmp_510 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_510 != 0;
    assume out_Tmp_510 > 0;
    call {:si_unique_call 1965} sdv_KeAcquireSpinLock(0, out_Tmp_510);
    assume {:nonnull} out_Tmp_510 != 0;
    assume out_Tmp_510 > 0;
    havoc out_Irql_16;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    goto L_BAF_3;

  L_BAF_3:
    call {:si_unique_call 1970} {:si_old_unique_call 1} out_Tmp_510, out_Irql_16, out_FcpIrp_1, out_sdv_407, out_sdv_410, out_sdv_412, out_IrpEntry_1 := AvFcp_CompleteQueuedFcp_loop_L53(out_Tmp_510, out_Irql_16, out_FcpIrp_1, out_sdv_407, out_sdv_410, out_sdv_412, out_IrpEntry_1, in_PdoExtension_9);
    return;

  anon18_Then:
    assume {:partition} out_sdv_407 == 0;
    assume {:nonnull} out_FcpIrp_1 != 0;
    assume out_FcpIrp_1 > 0;
    call {:si_unique_call 1969} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(out_FcpIrp_1))));
    out_FcpIrp_1 := 0;
    goto anon18_Then_dummy;

  anon18_Then_dummy:
    goto L_BAF_3;
}



procedure {:LoopProcedure} AvFcp_CompleteQueuedFcp_loop_L53(in_Tmp_510: int, in_Irql_16: int, in_FcpIrp_1: int, in_sdv_407: int, in_sdv_410: int, in_sdv_412: int, in_IrpEntry_1: int, in_PdoExtension_9: int) returns (out_Tmp_510: int, out_Irql_16: int, out_FcpIrp_1: int, out_sdv_407: int, out_sdv_410: int, out_sdv_412: int, out_IrpEntry_1: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} out_sdv_410 == 1 || out_sdv_410 == 0 || out_sdv_410 == in_sdv_410;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvFcp_CompleteQueuedFcp_loop_L12(in_Tmp_510: int, in_FcpIrp: int, in_sdv_405: int, in_sdv_409: int, in_sdv_411: int, in_IrpEntry: int, in_Irql_17: int, in_PdoExtension_9: int) returns (out_Tmp_510: int, out_FcpIrp: int, out_sdv_405: int, out_sdv_409: int, out_sdv_411: int, out_IrpEntry: int, out_Irql_17: int)
{

  entry:
    out_Tmp_510, out_FcpIrp, out_sdv_405, out_sdv_409, out_sdv_411, out_IrpEntry, out_Irql_17 := in_Tmp_510, in_FcpIrp, in_sdv_405, in_sdv_409, in_sdv_411, in_IrpEntry, in_Irql_17;
    goto L12, exit;

  exit:
    return;

  L12:
    call {:si_unique_call 1971} out_sdv_405 := sdv_IsListEmpty(0);
    goto anon15_Then;

  anon15_Then:
    assume {:partition} out_sdv_405 == 0;
    assume {:nonnull} in_PdoExtension_9 != 0;
    assume in_PdoExtension_9 > 0;
    call {:si_unique_call 1976} out_IrpEntry := RemoveHeadList(FcpRspIrpList__PDO_DEVICE_EXTENSION(in_PdoExtension_9));
    call {:si_unique_call 1977} out_sdv_409 := sdv_containing_record(out_IrpEntry, 88);
    out_FcpIrp := out_sdv_409;
    call {:si_unique_call 1978} out_sdv_411 := sdv_IoSetCancelRoutine(out_FcpIrp, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} out_sdv_411 != 0;
    call {:si_unique_call 1972} sdv_KeReleaseSpinLock(0, out_Irql_17);
    assume {:nonnull} out_FcpIrp != 0;
    assume out_FcpIrp > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(out_FcpIrp))] := -1073741248;
    call {:si_unique_call 1973} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1974} out_Tmp_510 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_510 != 0;
    assume out_Tmp_510 > 0;
    call {:si_unique_call 1975} sdv_KeAcquireSpinLock(0, out_Tmp_510);
    assume {:nonnull} out_Tmp_510 != 0;
    assume out_Tmp_510 > 0;
    havoc out_Irql_17;
    goto anon16_Else_dummy;

  anon16_Else_dummy:
    goto L_BAF_4;

  L_BAF_4:
    call {:si_unique_call 1980} {:si_old_unique_call 1} out_Tmp_510, out_FcpIrp, out_sdv_405, out_sdv_409, out_sdv_411, out_IrpEntry, out_Irql_17 := AvFcp_CompleteQueuedFcp_loop_L12(out_Tmp_510, out_FcpIrp, out_sdv_405, out_sdv_409, out_sdv_411, out_IrpEntry, out_Irql_17, in_PdoExtension_9);
    return;

  anon16_Then:
    assume {:partition} out_sdv_411 == 0;
    assume {:nonnull} out_FcpIrp != 0;
    assume out_FcpIrp > 0;
    call {:si_unique_call 1979} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(out_FcpIrp))));
    out_FcpIrp := 0;
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    goto L_BAF_4;
}



procedure {:LoopProcedure} AvFcp_CompleteQueuedFcp_loop_L12(in_Tmp_510: int, in_FcpIrp: int, in_sdv_405: int, in_sdv_409: int, in_sdv_411: int, in_IrpEntry: int, in_Irql_17: int, in_PdoExtension_9: int) returns (out_Tmp_510: int, out_FcpIrp: int, out_sdv_405: int, out_sdv_409: int, out_sdv_411: int, out_IrpEntry: int, out_Irql_17: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} out_sdv_405 == 1 || out_sdv_405 == 0 || out_sdv_405 == in_sdv_405;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_DeletePlug_loop_L35(in_MonitorInfo: int, in_CurrMonitor: int, in_Plug: int, in_AvAdapterData_9: int) returns (out_CurrMonitor: int)
{

  entry:
    out_CurrMonitor := in_CurrMonitor;
    goto L35, exit;

  exit:
    return;

  L35:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} out_CurrMonitor != 0;
    assume {:nonnull} out_CurrMonitor != 0;
    assume out_CurrMonitor > 0;
    havoc out_CurrMonitor;
    goto L41;

  L41:
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_Plug != 0;
    assume in_Plug > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_Plug != 0;
    assume in_Plug > 0;
    assume {:nonnull} out_CurrMonitor != 0;
    assume out_CurrMonitor > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} out_CurrMonitor != 0;
    assume out_CurrMonitor > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} out_CurrMonitor != 0;
    assume out_CurrMonitor > 0;
    goto L46;

  L46:
    goto anon27_Then;

  anon27_Then:
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    havoc out_CurrMonitor;
    return;

  anon33_Then:
    goto L46;

  anon26_Then:
    assume {:partition} out_CurrMonitor == 0;
    assume {:nonnull} in_AvAdapterData_9 != 0;
    assume in_AvAdapterData_9 > 0;
    havoc out_CurrMonitor;
    goto L41;
}



procedure {:LoopProcedure} AvCmp_DeletePlug_loop_L35(in_MonitorInfo: int, in_CurrMonitor: int, in_Plug: int, in_AvAdapterData_9: int) returns (out_CurrMonitor: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_P2PCR_oPlug_loop_L96(in_MonitorInfo_1: int, in_iPlug: int, in_iPCR: int, in_CurrMonitor_1: int, in_AvAdapterData_10: int) returns (out_CurrMonitor_1: int)
{

  entry:
    out_CurrMonitor_1 := in_CurrMonitor_1;
    goto L96, exit;

  exit:
    return;

  L96:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} out_CurrMonitor_1 != 0;
    assume {:nonnull} out_CurrMonitor_1 != 0;
    assume out_CurrMonitor_1 > 0;
    havoc out_CurrMonitor_1;
    goto L102;

  L102:
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_iPlug != 0;
    assume in_iPlug > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} out_CurrMonitor_1 != 0;
    assume out_CurrMonitor_1 > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} out_CurrMonitor_1 != 0;
    assume out_CurrMonitor_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} out_CurrMonitor_1 != 0;
    assume out_CurrMonitor_1 > 0;
    goto L108;

  L108:
    goto anon85_Then;

  anon85_Then:
    goto anon85_Then_dummy;

  anon85_Then_dummy:
    havoc out_CurrMonitor_1;
    return;

  anon99_Then:
    goto L108;

  anon84_Then:
    assume {:partition} out_CurrMonitor_1 == 0;
    assume {:nonnull} in_AvAdapterData_10 != 0;
    assume in_AvAdapterData_10 > 0;
    havoc out_CurrMonitor_1;
    goto L102;
}



procedure {:LoopProcedure} AvCmp_P2PCR_oPlug_loop_L96(in_MonitorInfo_1: int, in_iPlug: int, in_iPCR: int, in_CurrMonitor_1: int, in_AvAdapterData_10: int) returns (out_CurrMonitor_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_SetPlug_loop_L61(in_MonitorInfo_2: int, in_PlugNum_1: int, in_CurrMonitor_2: int, in_Plug_1: int, in_Pcr_1: int, in_AvAdapterData_11: int) returns (out_CurrMonitor_2: int)
{

  entry:
    out_CurrMonitor_2 := in_CurrMonitor_2;
    goto L61, exit;

  exit:
    return;

  L61:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} out_CurrMonitor_2 != 0;
    assume {:nonnull} out_CurrMonitor_2 != 0;
    assume out_CurrMonitor_2 > 0;
    havoc out_CurrMonitor_2;
    goto L67;

  L67:
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} out_CurrMonitor_2 != 0;
    assume out_CurrMonitor_2 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Plug_1 != 0;
    assume in_Plug_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    goto L74;

  L74:
    assume {:nonnull} out_CurrMonitor_2 != 0;
    assume out_CurrMonitor_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} out_CurrMonitor_2 != 0;
    assume out_CurrMonitor_2 > 0;
    goto L75;

  L75:
    goto anon33_Then;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    havoc out_CurrMonitor_2;
    return;

  anon32_Then:
    goto L75;

  anon36_Then:
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_Pcr_1 != 0;
    assume in_Pcr_1 > 0;
    goto L74;

  anon31_Then:
    assume {:partition} out_CurrMonitor_2 == 0;
    assume {:nonnull} in_AvAdapterData_11 != 0;
    assume in_AvAdapterData_11 > 0;
    havoc out_CurrMonitor_2;
    goto L67;
}



procedure {:LoopProcedure} AvCmp_SetPlug_loop_L61(in_MonitorInfo_2: int, in_PlugNum_1: int, in_CurrMonitor_2: int, in_Plug_1: int, in_Pcr_1: int, in_AvAdapterData_11: int) returns (out_CurrMonitor_2: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_CreatePlugs_loop_L59(in_numPcr: int, in_ntStatus_35: int, in_iMPR: int, in_BusExtension_39: int) returns (out_numPcr: int, out_ntStatus_35: int)
{

  entry:
    out_numPcr, out_ntStatus_35 := in_numPcr, in_ntStatus_35;
    goto L59, exit;

  exit:
    return;

  L59:
    assume {:nonnull} in_iMPR != 0;
    assume in_iMPR > 0;
    goto anon31_Else;

  anon31_Else:
    call {:si_unique_call 1981} out_ntStatus_35 := AvCmp_InitPlugInstance(in_BusExtension_39, out_numPcr, 1);
    goto anon32_Else;

  anon32_Else:
    assume {:partition} out_ntStatus_35 >= 0;
    out_numPcr := out_numPcr + 1;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    call {:si_unique_call 1982} {:si_old_unique_call 1} out_numPcr, out_ntStatus_35 := AvCmp_CreatePlugs_loop_L59(out_numPcr, out_ntStatus_35, in_iMPR, in_BusExtension_39);
    return;
}



procedure {:LoopProcedure} AvCmp_CreatePlugs_loop_L59(in_numPcr: int, in_ntStatus_35: int, in_iMPR: int, in_BusExtension_39: int) returns (out_numPcr: int, out_ntStatus_35: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_CreatePlugs_loop_L50(in_numPcr: int, in_ntStatus_35: int, in_oMPR: int, in_BusExtension_39: int) returns (out_numPcr: int, out_ntStatus_35: int)
{

  entry:
    out_numPcr, out_ntStatus_35 := in_numPcr, in_ntStatus_35;
    goto L50, exit;

  exit:
    return;

  L50:
    assume {:nonnull} in_oMPR != 0;
    assume in_oMPR > 0;
    goto anon29_Else;

  anon29_Else:
    call {:si_unique_call 1983} out_ntStatus_35 := AvCmp_InitPlugInstance(in_BusExtension_39, out_numPcr, 0);
    goto anon30_Else;

  anon30_Else:
    assume {:partition} out_ntStatus_35 >= 0;
    out_numPcr := out_numPcr + 1;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    call {:si_unique_call 1984} {:si_old_unique_call 1} out_numPcr, out_ntStatus_35 := AvCmp_CreatePlugs_loop_L50(out_numPcr, out_ntStatus_35, in_oMPR, in_BusExtension_39);
    return;
}



procedure {:LoopProcedure} AvCmp_CreatePlugs_loop_L50(in_numPcr: int, in_ntStatus_35: int, in_oMPR: int, in_BusExtension_39: int) returns (out_numPcr: int, out_ntStatus_35: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_P2PConnect_loop_L60(in_Retries: int, in_Tmp_619: int, in_CmpData_7: int, in_Connect_9: int, in_ntStatus_39: int, in_oPlug_3: int) returns (out_Retries: int, out_Tmp_619: int, out_ntStatus_39: int)
{
  var vslice_dummy_var_2200: int;

  entry:
    out_Retries, out_Tmp_619, out_ntStatus_39 := in_Retries, in_Tmp_619, in_ntStatus_39;
    goto L60, exit;

  exit:
    return;

  L60:
    assume {:nonnull} in_oPlug_3 != 0;
    assume in_oPlug_3 > 0;
    havoc vslice_dummy_var_2200;
    call {:si_unique_call 1985} out_ntStatus_39 := AvCmp_P2PCR_oPlug(vslice_dummy_var_2200, in_CmpData_7, in_Connect_9, 0, 0);
    goto anon73_Then;

  anon73_Then:
    assume {:partition} 0 > out_ntStatus_39;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} out_ntStatus_39 != -1073741823;
    out_Tmp_619 := out_Retries;
    out_Retries := out_Retries - 1;
    goto anon86_Else;

  anon86_Else:
    assume {:partition} out_Tmp_619 != 0;
    goto anon86_Else_dummy;

  anon86_Else_dummy:
    goto L_BAF_5;

  L_BAF_5:
    call {:si_unique_call 1986} {:si_old_unique_call 1} out_Retries, out_Tmp_619, out_ntStatus_39 := AvCmp_P2PConnect_loop_L60(out_Retries, out_Tmp_619, in_CmpData_7, in_Connect_9, out_ntStatus_39, in_oPlug_3);
    return;

  anon74_Then:
    assume {:partition} out_ntStatus_39 == -1073741823;
    goto anon74_Then_dummy;

  anon74_Then_dummy:
    goto L_BAF_5;
}



procedure {:LoopProcedure} AvCmp_P2PConnect_loop_L60(in_Retries: int, in_Tmp_619: int, in_CmpData_7: int, in_Connect_9: int, in_ntStatus_39: int, in_oPlug_3: int) returns (out_Retries: int, out_Tmp_619: int, out_ntStatus_39: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_P2PConnect_loop_L92(in_CmpData_7: int, in_Connect_9: int, in_Retries_1: int, in_ntStatus_39: int, in_Tmp_625: int, in_iPlug_3: int) returns (out_Retries_1: int, out_ntStatus_39: int, out_Tmp_625: int)
{
  var vslice_dummy_var_2201: int;

  entry:
    out_Retries_1, out_ntStatus_39, out_Tmp_625 := in_Retries_1, in_ntStatus_39, in_Tmp_625;
    goto L92, exit;

  exit:
    return;

  L92:
    assume {:nonnull} in_iPlug_3 != 0;
    assume in_iPlug_3 > 0;
    havoc vslice_dummy_var_2201;
    call {:si_unique_call 1987} out_ntStatus_39 := AvCmp_P2PCR_iPlug(vslice_dummy_var_2201, in_CmpData_7, in_Connect_9, 0, 0);
    goto anon79_Else;

  anon79_Else:
    assume {:partition} out_ntStatus_39 < 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} out_ntStatus_39 != -1073741823;
    out_Tmp_625 := out_Retries_1;
    out_Retries_1 := out_Retries_1 - 1;
    goto anon87_Else;

  anon87_Else:
    assume {:partition} out_Tmp_625 != 0;
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    goto L_BAF_6;

  L_BAF_6:
    call {:si_unique_call 1988} {:si_old_unique_call 1} out_Retries_1, out_ntStatus_39, out_Tmp_625 := AvCmp_P2PConnect_loop_L92(in_CmpData_7, in_Connect_9, out_Retries_1, out_ntStatus_39, out_Tmp_625, in_iPlug_3);
    return;

  anon80_Then:
    assume {:partition} out_ntStatus_39 == -1073741823;
    goto anon80_Then_dummy;

  anon80_Then_dummy:
    goto L_BAF_6;
}



procedure {:LoopProcedure} AvCmp_P2PConnect_loop_L92(in_CmpData_7: int, in_Connect_9: int, in_Retries_1: int, in_ntStatus_39: int, in_Tmp_625: int, in_iPlug_3: int) returns (out_Retries_1: int, out_ntStatus_39: int, out_Tmp_625: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_P2PDisconnect_loop_L197(in_MonitorInfo_4: int, in_oPlug_4: int, in_CurrMonitor_3: int, in_oPCR_2: int, in_AvAdapterData_12: int) returns (out_CurrMonitor_3: int)
{

  entry:
    out_CurrMonitor_3 := in_CurrMonitor_3;
    goto L197, exit;

  exit:
    return;

  L197:
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} out_CurrMonitor_3 != 0;
    assume {:nonnull} out_CurrMonitor_3 != 0;
    assume out_CurrMonitor_3 > 0;
    havoc out_CurrMonitor_3;
    goto L203;

  L203:
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_oPlug_4 != 0;
    assume in_oPlug_4 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_oPCR_2 != 0;
    assume in_oPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_oPCR_2 != 0;
    assume in_oPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_oPCR_2 != 0;
    assume in_oPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_oPCR_2 != 0;
    assume in_oPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_oPCR_2 != 0;
    assume in_oPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_oPCR_2 != 0;
    assume in_oPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_oPCR_2 != 0;
    assume in_oPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_oPCR_2 != 0;
    assume in_oPCR_2 > 0;
    assume {:nonnull} out_CurrMonitor_3 != 0;
    assume out_CurrMonitor_3 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} out_CurrMonitor_3 != 0;
    assume out_CurrMonitor_3 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} out_CurrMonitor_3 != 0;
    assume out_CurrMonitor_3 > 0;
    goto L209;

  L209:
    goto anon142_Then;

  anon142_Then:
    goto anon142_Then_dummy;

  anon142_Then_dummy:
    havoc out_CurrMonitor_3;
    return;

  anon153_Then:
    goto L209;

  anon141_Then:
    assume {:partition} out_CurrMonitor_3 == 0;
    assume {:nonnull} in_AvAdapterData_12 != 0;
    assume in_AvAdapterData_12 > 0;
    havoc out_CurrMonitor_3;
    goto L203;
}



procedure {:LoopProcedure} AvCmp_P2PDisconnect_loop_L197(in_MonitorInfo_4: int, in_oPlug_4: int, in_CurrMonitor_3: int, in_oPCR_2: int, in_AvAdapterData_12: int) returns (out_CurrMonitor_3: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_P2PDisconnect_loop_L106(in_MonitorInfo_3: int, in_iPlug_4: int, in_iPCR_3: int, in_CurrMonitor_4: int, in_AvAdapterData_13: int) returns (out_CurrMonitor_4: int)
{

  entry:
    out_CurrMonitor_4 := in_CurrMonitor_4;
    goto L106, exit;

  exit:
    return;

  L106:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} out_CurrMonitor_4 != 0;
    assume {:nonnull} out_CurrMonitor_4 != 0;
    assume out_CurrMonitor_4 > 0;
    havoc out_CurrMonitor_4;
    goto L112;

  L112:
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_iPlug_4 != 0;
    assume in_iPlug_4 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_iPCR_3 != 0;
    assume in_iPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_iPCR_3 != 0;
    assume in_iPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_iPCR_3 != 0;
    assume in_iPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_iPCR_3 != 0;
    assume in_iPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_iPCR_3 != 0;
    assume in_iPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_iPCR_3 != 0;
    assume in_iPCR_3 > 0;
    assume {:nonnull} out_CurrMonitor_4 != 0;
    assume out_CurrMonitor_4 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} out_CurrMonitor_4 != 0;
    assume out_CurrMonitor_4 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} out_CurrMonitor_4 != 0;
    assume out_CurrMonitor_4 > 0;
    goto L118;

  L118:
    goto anon124_Then;

  anon124_Then:
    goto anon124_Then_dummy;

  anon124_Then_dummy:
    havoc out_CurrMonitor_4;
    return;

  anon156_Then:
    goto L118;

  anon123_Then:
    assume {:partition} out_CurrMonitor_4 == 0;
    assume {:nonnull} in_AvAdapterData_13 != 0;
    assume in_AvAdapterData_13 > 0;
    havoc out_CurrMonitor_4;
    goto L112;
}



procedure {:LoopProcedure} AvCmp_P2PDisconnect_loop_L106(in_MonitorInfo_3: int, in_iPlug_4: int, in_iPCR_3: int, in_CurrMonitor_4: int, in_AvAdapterData_13: int) returns (out_CurrMonitor_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_CreatePlug_loop_L98(in_PlugNum_4: int, in_CmpData_12: int, in_Tmp_683: int, in_Tmp_687: int) returns (out_PlugNum_4: int, out_Tmp_683: int, out_Tmp_687: int)
{

  entry:
    out_PlugNum_4, out_Tmp_683, out_Tmp_687 := in_PlugNum_4, in_Tmp_683, in_Tmp_687;
    goto L98, exit;

  exit:
    return;

  L98:
    out_Tmp_683 := out_PlugNum_4;
    assume {:nonnull} in_CmpData_12 != 0;
    assume in_CmpData_12 > 0;
    havoc out_Tmp_687;
    assume {:nonnull} out_Tmp_687 != 0;
    assume out_Tmp_687 > 0;
    goto anon48_Else;

  anon48_Else:
    out_PlugNum_4 := out_PlugNum_4 + 1;
    goto anon48_Else_dummy;

  anon48_Else_dummy:
    havoc out_PlugNum_4;
    return;
}



procedure {:LoopProcedure} AvCmp_CreatePlug_loop_L98(in_PlugNum_4: int, in_CmpData_12: int, in_Tmp_683: int, in_Tmp_687: int) returns (out_PlugNum_4: int, out_Tmp_683: int, out_Tmp_687: int);
  free ensures {:va_keep} out_Tmp_683 == in_PlugNum_4 || out_Tmp_683 == in_Tmp_683;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_CreatePlug_loop_L54(in_MonitorInfo_5: int, in_PlugNum_4: int, in_CurrMonitor_5: int, in_Plug_4: int, in_Pcr_7: int, in_AvAdapterData_14: int) returns (out_CurrMonitor_5: int)
{

  entry:
    out_CurrMonitor_5 := in_CurrMonitor_5;
    goto L54, exit;

  exit:
    return;

  L54:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} out_CurrMonitor_5 != 0;
    assume {:nonnull} out_CurrMonitor_5 != 0;
    assume out_CurrMonitor_5 > 0;
    havoc out_CurrMonitor_5;
    goto L60;

  L60:
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} out_CurrMonitor_5 != 0;
    assume out_CurrMonitor_5 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Plug_4 != 0;
    assume in_Plug_4 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    goto L67;

  L67:
    assume {:nonnull} out_CurrMonitor_5 != 0;
    assume out_CurrMonitor_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} out_CurrMonitor_5 != 0;
    assume out_CurrMonitor_5 > 0;
    goto L68;

  L68:
    goto anon42_Then;

  anon42_Then:
    goto anon42_Then_dummy;

  anon42_Then_dummy:
    havoc out_CurrMonitor_5;
    return;

  anon41_Then:
    goto L68;

  anon47_Then:
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_Pcr_7 != 0;
    assume in_Pcr_7 > 0;
    goto L67;

  anon40_Then:
    assume {:partition} out_CurrMonitor_5 == 0;
    assume {:nonnull} in_AvAdapterData_14 != 0;
    assume in_AvAdapterData_14 > 0;
    havoc out_CurrMonitor_5;
    goto L60;
}



procedure {:LoopProcedure} AvCmp_CreatePlug_loop_L54(in_MonitorInfo_5: int, in_PlugNum_4: int, in_CurrMonitor_5: int, in_Plug_4: int, in_Pcr_7: int, in_AvAdapterData_14: int) returns (out_CurrMonitor_5: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_CreatePlug_loop_L30(in_PlugNum_4: int, in_Tmp_681: int, in_Tmp_682: int, in_CmpData_12: int) returns (out_PlugNum_4: int, out_Tmp_681: int, out_Tmp_682: int)
{

  entry:
    out_PlugNum_4, out_Tmp_681, out_Tmp_682 := in_PlugNum_4, in_Tmp_681, in_Tmp_682;
    goto L30, exit;

  exit:
    return;

  L30:
    out_Tmp_682 := out_PlugNum_4;
    assume {:nonnull} in_CmpData_12 != 0;
    assume in_CmpData_12 > 0;
    havoc out_Tmp_681;
    assume {:nonnull} out_Tmp_681 != 0;
    assume out_Tmp_681 > 0;
    goto anon46_Else;

  anon46_Else:
    out_PlugNum_4 := out_PlugNum_4 + 1;
    goto anon46_Else_dummy;

  anon46_Else_dummy:
    havoc out_PlugNum_4;
    return;
}



procedure {:LoopProcedure} AvCmp_CreatePlug_loop_L30(in_PlugNum_4: int, in_Tmp_681: int, in_Tmp_682: int, in_CmpData_12: int) returns (out_PlugNum_4: int, out_Tmp_681: int, out_Tmp_682: int);
  free ensures {:va_keep} out_Tmp_682 == in_PlugNum_4 || out_Tmp_682 == in_Tmp_682;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCmp_P2PCR_iPlug_loop_L98(in_MonitorInfo_6: int, in_oPlug_5: int, in_CurrMonitor_6: int, in_oPCR_4: int, in_AvAdapterData_15: int) returns (out_CurrMonitor_6: int)
{

  entry:
    out_CurrMonitor_6 := in_CurrMonitor_6;
    goto L98, exit;

  exit:
    return;

  L98:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} out_CurrMonitor_6 != 0;
    assume {:nonnull} out_CurrMonitor_6 != 0;
    assume out_CurrMonitor_6 > 0;
    havoc out_CurrMonitor_6;
    goto L104;

  L104:
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPlug_5 != 0;
    assume in_oPlug_5 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_4 != 0;
    assume in_oPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_4 != 0;
    assume in_oPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_4 != 0;
    assume in_oPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_4 != 0;
    assume in_oPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_4 != 0;
    assume in_oPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_4 != 0;
    assume in_oPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_4 != 0;
    assume in_oPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_4 != 0;
    assume in_oPCR_4 > 0;
    assume {:nonnull} out_CurrMonitor_6 != 0;
    assume out_CurrMonitor_6 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} out_CurrMonitor_6 != 0;
    assume out_CurrMonitor_6 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} out_CurrMonitor_6 != 0;
    assume out_CurrMonitor_6 > 0;
    goto L110;

  L110:
    goto anon101_Then;

  anon101_Then:
    goto anon101_Then_dummy;

  anon101_Then_dummy:
    havoc out_CurrMonitor_6;
    return;

  anon117_Then:
    goto L110;

  anon100_Then:
    assume {:partition} out_CurrMonitor_6 == 0;
    assume {:nonnull} in_AvAdapterData_15 != 0;
    assume in_AvAdapterData_15 > 0;
    havoc out_CurrMonitor_6;
    goto L104;
}



procedure {:LoopProcedure} AvCmp_P2PCR_iPlug_loop_L98(in_MonitorInfo_6: int, in_oPlug_5: int, in_CurrMonitor_6: int, in_oPCR_4: int, in_AvAdapterData_15: int) returns (out_CurrMonitor_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_GetUnitInfo_loop_L157(in_CurrAddress: int, in_i_3: int, in_u_4: int, in_sdv_553: int, in_LastKey: int, in_DescAddress: int, in_UnitDir: int, in_sdv_557: int, in_Tmp_733: int, in_ulQuadlet: int, in_u3: int, in_Tmp_737: int, in_u2: int, in_BusExtension_54: int, in_UnitData_1: int, in_vslice_dummy_var_201: int, in_vslice_dummy_var_202: int, in_vslice_dummy_var_203: int) returns (out_CurrAddress: int, out_i_3: int, out_LastKey: int, out_DescAddress: int, out_Tmp_733: int, out_Tmp_737: int, out_vslice_dummy_var_201: int, out_vslice_dummy_var_202: int, out_vslice_dummy_var_203: int)
{

  entry:
    out_CurrAddress, out_i_3, out_LastKey, out_DescAddress, out_Tmp_733, out_Tmp_737, out_vslice_dummy_var_201, out_vslice_dummy_var_202, out_vslice_dummy_var_203 := in_CurrAddress, in_i_3, in_LastKey, in_DescAddress, in_Tmp_733, in_Tmp_737, in_vslice_dummy_var_201, in_vslice_dummy_var_202, in_vslice_dummy_var_203;
    goto L157, exit;

  exit:
    return;

  L157:
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto anon76_Else;

  anon76_Else:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    out_CurrAddress := out_CurrAddress + 4;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto L166;

  L166:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto L169;

  L169:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} out_LastKey == 23;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_Tmp_733;
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    call {:si_unique_call 1991} out_vslice_dummy_var_201 := Av1394_ReadTextualDescriptor(in_BusExtension_54, uniUnitModelId__UNIT_DATA(in_UnitData_1), out_Tmp_733);
    goto L171;

  L171:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} out_LastKey == 23;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_DescAddress;
    call {:si_unique_call 1989} out_vslice_dummy_var_202 := Av1394_QuadletRead(in_BusExtension_54, in_ulQuadlet, out_DescAddress);
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    havoc out_Tmp_737;
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    call {:si_unique_call 1990} out_vslice_dummy_var_203 := Av1394_ReadTextualDescriptor(in_BusExtension_54, uniModelId__UNIT_DATA(in_UnitData_1), out_Tmp_737);
    goto L177;

  L177:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_LastKey;
    out_i_3 := out_i_3 + 1;
    goto L177_dummy;

  L177_dummy:
    call {:si_unique_call 1992} {:si_old_unique_call 1} out_CurrAddress, out_i_3, out_LastKey, out_DescAddress, out_Tmp_733, out_Tmp_737, out_vslice_dummy_var_201, out_vslice_dummy_var_202, out_vslice_dummy_var_203 := Av1394_GetUnitInfo_loop_L157(out_CurrAddress, out_i_3, in_u_4, in_sdv_553, out_LastKey, out_DescAddress, in_UnitDir, in_sdv_557, out_Tmp_733, in_ulQuadlet, in_u3, out_Tmp_737, in_u2, in_BusExtension_54, in_UnitData_1, out_vslice_dummy_var_201, out_vslice_dummy_var_202, out_vslice_dummy_var_203);
    return;

  anon82_Then:
    assume {:partition} out_LastKey != 23;
    goto L177;

  anon80_Then:
    goto L177;

  anon81_Then:
    assume {:partition} out_LastKey != 23;
    goto L171;

  anon79_Then:
    goto L171;

  anon78_Then:
    goto L169;

  anon87_Then:
    goto L166;
}



procedure {:LoopProcedure} Av1394_GetUnitInfo_loop_L157(in_CurrAddress: int, in_i_3: int, in_u_4: int, in_sdv_553: int, in_LastKey: int, in_DescAddress: int, in_UnitDir: int, in_sdv_557: int, in_Tmp_733: int, in_ulQuadlet: int, in_u3: int, in_Tmp_737: int, in_u2: int, in_BusExtension_54: int, in_UnitData_1: int, in_vslice_dummy_var_201: int, in_vslice_dummy_var_202: int, in_vslice_dummy_var_203: int) returns (out_CurrAddress: int, out_i_3: int, out_LastKey: int, out_DescAddress: int, out_Tmp_733: int, out_Tmp_737: int, out_vslice_dummy_var_201: int, out_vslice_dummy_var_202: int, out_vslice_dummy_var_203: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_GetUnitInfo_loop_L31(in_CurrAddress: int, in_i_3: int, in_Tmp_730: int, in_Tmp_731: int, in_u_4: int, in_Tmp_732: int, in_LastKey: int, in_sdv_561: int, in_ntStatus_49: int, in_DescAddress_1: int, in_sdv_565: int, in_DescAddress_2: int, in_sdv_568: int, in_ulQuadlet: int, in_Tmp_736: int, in_u3: int, in_u2: int, in_BusExtension_54: int, in_UnitData_1: int, in_vslice_dummy_var_195: int, in_vslice_dummy_var_196: int, in_vslice_dummy_var_197: int, in_vslice_dummy_var_198: int, in_vslice_dummy_var_199: int, in_vslice_dummy_var_200: int) returns (out_CurrAddress: int, out_i_3: int, out_Tmp_730: int, out_Tmp_731: int, out_Tmp_732: int, out_LastKey: int, out_ntStatus_49: int, out_DescAddress_1: int, out_DescAddress_2: int, out_Tmp_736: int, out_vslice_dummy_var_195: int, out_vslice_dummy_var_196: int, out_vslice_dummy_var_197: int, out_vslice_dummy_var_198: int, out_vslice_dummy_var_199: int, out_vslice_dummy_var_200: int)
{

  entry:
    out_CurrAddress, out_i_3, out_Tmp_730, out_Tmp_731, out_Tmp_732, out_LastKey, out_ntStatus_49, out_DescAddress_1, out_DescAddress_2, out_Tmp_736, out_vslice_dummy_var_195, out_vslice_dummy_var_196, out_vslice_dummy_var_197, out_vslice_dummy_var_198, out_vslice_dummy_var_199, out_vslice_dummy_var_200 := in_CurrAddress, in_i_3, in_Tmp_730, in_Tmp_731, in_Tmp_732, in_LastKey, in_ntStatus_49, in_DescAddress_1, in_DescAddress_2, in_Tmp_736, in_vslice_dummy_var_195, in_vslice_dummy_var_196, in_vslice_dummy_var_197, in_vslice_dummy_var_198, in_vslice_dummy_var_199, in_vslice_dummy_var_200;
    goto L31, exit;

  exit:
    return;

  L31:
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto anon60_Else;

  anon60_Else:
    out_CurrAddress := out_CurrAddress + 4;
    call {:si_unique_call 1999} out_ntStatus_49 := Av1394_QuadletRead(in_BusExtension_54, in_ulQuadlet, out_CurrAddress);
    goto anon61_Then;

  anon61_Then:
    assume {:partition} 0 <= out_ntStatus_49;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto L45;

  L45:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} out_LastKey == 3;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_Tmp_736;
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    call {:si_unique_call 1998} out_vslice_dummy_var_195 := Av1394_ReadTextualDescriptor(in_BusExtension_54, uniVendorId__UNIT_DATA(in_UnitData_1), out_Tmp_736);
    goto L47;

  L47:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_LastKey == 3;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_DescAddress_2;
    call {:si_unique_call 1996} out_vslice_dummy_var_196 := Av1394_QuadletRead(in_BusExtension_54, in_ulQuadlet, out_DescAddress_2);
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    havoc out_Tmp_731;
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    call {:si_unique_call 1997} out_vslice_dummy_var_197 := Av1394_ReadTextualDescriptor(in_BusExtension_54, uniVendorId__UNIT_DATA(in_UnitData_1), out_Tmp_731);
    goto L53;

  L53:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto L68;

  L68:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} out_LastKey == 23;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_Tmp_732;
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    call {:si_unique_call 1995} out_vslice_dummy_var_198 := Av1394_ReadTextualDescriptor(in_BusExtension_54, uniModelId__UNIT_DATA(in_UnitData_1), out_Tmp_732);
    goto L70;

  L70:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} out_LastKey == 23;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_DescAddress_1;
    call {:si_unique_call 1993} out_vslice_dummy_var_199 := Av1394_QuadletRead(in_BusExtension_54, in_ulQuadlet, out_DescAddress_1);
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    havoc out_Tmp_730;
    assume {:nonnull} in_UnitData_1 != 0;
    assume in_UnitData_1 > 0;
    call {:si_unique_call 1994} out_vslice_dummy_var_200 := Av1394_ReadTextualDescriptor(in_BusExtension_54, uniModelId__UNIT_DATA(in_UnitData_1), out_Tmp_730);
    goto L76;

  L76:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_LastKey;
    out_i_3 := out_i_3 + 1;
    goto L76_dummy;

  L76_dummy:
    call {:si_unique_call 2000} {:si_old_unique_call 1} out_CurrAddress, out_i_3, out_Tmp_730, out_Tmp_731, out_Tmp_732, out_LastKey, out_ntStatus_49, out_DescAddress_1, out_DescAddress_2, out_Tmp_736, out_vslice_dummy_var_195, out_vslice_dummy_var_196, out_vslice_dummy_var_197, out_vslice_dummy_var_198, out_vslice_dummy_var_199, out_vslice_dummy_var_200 := Av1394_GetUnitInfo_loop_L31(out_CurrAddress, out_i_3, out_Tmp_730, out_Tmp_731, in_u_4, out_Tmp_732, out_LastKey, in_sdv_561, out_ntStatus_49, out_DescAddress_1, in_sdv_565, out_DescAddress_2, in_sdv_568, in_ulQuadlet, out_Tmp_736, in_u3, in_u2, in_BusExtension_54, in_UnitData_1, out_vslice_dummy_var_195, out_vslice_dummy_var_196, out_vslice_dummy_var_197, out_vslice_dummy_var_198, out_vslice_dummy_var_199, out_vslice_dummy_var_200);
    return;

  anon70_Then:
    assume {:partition} out_LastKey != 23;
    goto L76;

  anon68_Then:
    goto L76;

  anon69_Then:
    assume {:partition} out_LastKey != 23;
    goto L70;

  anon67_Then:
    goto L70;

  anon65_Then:
    goto L68;

  anon66_Then:
    assume {:partition} out_LastKey != 3;
    goto L53;

  anon63_Then:
    goto L53;

  anon64_Then:
    assume {:partition} out_LastKey != 3;
    goto L47;

  anon62_Then:
    goto L47;

  anon83_Then:
    goto L45;
}



procedure {:LoopProcedure} Av1394_GetUnitInfo_loop_L31(in_CurrAddress: int, in_i_3: int, in_Tmp_730: int, in_Tmp_731: int, in_u_4: int, in_Tmp_732: int, in_LastKey: int, in_sdv_561: int, in_ntStatus_49: int, in_DescAddress_1: int, in_sdv_565: int, in_DescAddress_2: int, in_sdv_568: int, in_ulQuadlet: int, in_Tmp_736: int, in_u3: int, in_u2: int, in_BusExtension_54: int, in_UnitData_1: int, in_vslice_dummy_var_195: int, in_vslice_dummy_var_196: int, in_vslice_dummy_var_197: int, in_vslice_dummy_var_198: int, in_vslice_dummy_var_199: int, in_vslice_dummy_var_200: int) returns (out_CurrAddress: int, out_i_3: int, out_Tmp_730: int, out_Tmp_731: int, out_Tmp_732: int, out_LastKey: int, out_ntStatus_49: int, out_DescAddress_1: int, out_DescAddress_2: int, out_Tmp_736: int, out_vslice_dummy_var_195: int, out_vslice_dummy_var_196: int, out_vslice_dummy_var_197: int, out_vslice_dummy_var_198: int, out_vslice_dummy_var_199: int, out_vslice_dummy_var_200: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_SetUnitDirectory_loop_L32(in_CurrCrom_1: int, in_AvAdapterData_16: int, in_SetUnitDir: int) returns (out_CurrCrom_1: int)
{

  entry:
    out_CurrCrom_1 := in_CurrCrom_1;
    goto L32, exit;

  exit:
    return;

  L32:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} out_CurrCrom_1 != 0;
    assume {:nonnull} out_CurrCrom_1 != 0;
    assume out_CurrCrom_1 > 0;
    havoc out_CurrCrom_1;
    goto L83;

  L83:
    assume {:nonnull} out_CurrCrom_1 != 0;
    assume out_CurrCrom_1 > 0;
    assume {:nonnull} in_SetUnitDir != 0;
    assume in_SetUnitDir > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} out_CurrCrom_1 != 0;
    assume out_CurrCrom_1 > 0;
    assume {:nonnull} in_SetUnitDir != 0;
    assume in_SetUnitDir > 0;
    goto anon52_Then;

  anon52_Then:
    goto L84;

  L84:
    goto anon51_Then;

  anon51_Then:
    goto anon51_Then_dummy;

  anon51_Then_dummy:
    havoc out_CurrCrom_1;
    return;

  anon50_Then:
    goto L84;

  anon46_Then:
    assume {:partition} out_CurrCrom_1 == 0;
    assume {:nonnull} in_AvAdapterData_16 != 0;
    assume in_AvAdapterData_16 > 0;
    havoc out_CurrCrom_1;
    goto L83;
}



procedure {:LoopProcedure} Av1394_SetUnitDirectory_loop_L32(in_CurrCrom_1: int, in_AvAdapterData_16: int, in_SetUnitDir: int) returns (out_CurrCrom_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_SetUnitDirectory_loop_L27(in_CurrPdoCrom: int, in_SetUnitDir: int, in_PdoExtension_14: int) returns (out_CurrPdoCrom: int)
{

  entry:
    out_CurrPdoCrom := in_CurrPdoCrom;
    goto L27, exit;

  exit:
    return;

  L27:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} out_CurrPdoCrom != 0;
    assume {:nonnull} out_CurrPdoCrom != 0;
    assume out_CurrPdoCrom > 0;
    havoc out_CurrPdoCrom;
    goto L90;

  L90:
    assume {:nonnull} out_CurrPdoCrom != 0;
    assume out_CurrPdoCrom > 0;
    assume {:nonnull} in_SetUnitDir != 0;
    assume in_SetUnitDir > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} out_CurrPdoCrom != 0;
    assume out_CurrPdoCrom > 0;
    assume {:nonnull} in_SetUnitDir != 0;
    assume in_SetUnitDir > 0;
    goto anon55_Then;

  anon55_Then:
    goto L91;

  L91:
    goto anon54_Then;

  anon54_Then:
    goto anon54_Then_dummy;

  anon54_Then_dummy:
    havoc out_CurrPdoCrom;
    return;

  anon53_Then:
    goto L91;

  anon44_Then:
    assume {:partition} out_CurrPdoCrom == 0;
    assume {:nonnull} in_PdoExtension_14 != 0;
    assume in_PdoExtension_14 > 0;
    havoc out_CurrPdoCrom;
    goto L90;
}



procedure {:LoopProcedure} Av1394_SetUnitDirectory_loop_L27(in_CurrPdoCrom: int, in_SetUnitDir: int, in_PdoExtension_14: int) returns (out_CurrPdoCrom: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_AddConfigRomEntry_loop_L55(in_i_4: int, in_Tmp_752: int, in_sdv_594: int, in_CromEntry: int) returns (out_i_4: int, out_Tmp_752: int)
{

  entry:
    out_i_4, out_Tmp_752 := in_i_4, in_Tmp_752;
    goto L55, exit;

  exit:
    return;

  L55:
    assume {:CounterLoop 3} {:Counter "i_4"} true;
    goto anon23_Else;

  anon23_Else:
    assume {:partition} 3 > out_i_4;
    out_Tmp_752 := in_CromEntry;
    assume {:nonnull} out_Tmp_752 != 0;
    assume out_Tmp_752 > 0;
    out_i_4 := out_i_4 + 1;
    goto anon23_Else_dummy;

  anon23_Else_dummy:
    havoc out_i_4;
    return;
}



procedure {:LoopProcedure} Av1394_AddConfigRomEntry_loop_L55(in_i_4: int, in_Tmp_752: int, in_sdv_594: int, in_CromEntry: int) returns (out_i_4: int, out_Tmp_752: int);
  free ensures {:va_keep} out_Tmp_752 == in_CromEntry || out_Tmp_752 == in_Tmp_752;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_ReadPCR_loop_L22(in_Retries_2: int, in_Irp_65: int, in_Irb_29: int, in_Mdl_3: int, in_Tmp_821: int, in_StackSize_23: int, in_sdv_651: int, in_ntStatus_63: int, in_BusExtension_68: int, in_GenerationCount: int, in_Type_7: int, in_Index_2: int) returns (out_Retries_2: int, out_Irp_65: int, out_Irb_29: int, out_Mdl_3: int, out_Tmp_821: int, out_sdv_651: int, out_ntStatus_63: int)
{
  var vslice_dummy_var_2202: int;

  entry:
    out_Retries_2, out_Irp_65, out_Irb_29, out_Mdl_3, out_Tmp_821, out_sdv_651, out_ntStatus_63 := in_Retries_2, in_Irp_65, in_Irb_29, in_Mdl_3, in_Tmp_821, in_sdv_651, in_ntStatus_63;
    goto L22, exit;

  exit:
    return;

  L22:
    call {:si_unique_call 2001} out_Irp_65 := IoAllocateIrp(in_StackSize_23, 0);
    call {:si_unique_call 2002} out_sdv_651 := sdv_ExAllocateFromNPagedLookasideList(0);
    out_Irb_29 := out_sdv_651;
    goto anon34_Else;

  anon34_Else:
    assume {:partition} out_Irp_65 != 0;
    goto anon27_Else;

  anon27_Else:
    assume {:partition} out_Irb_29 != 0;
    call {:si_unique_call 2007} out_Mdl_3 := IoAllocateMdl(0, 4, 0, 0, 0);
    goto anon28_Else;

  anon28_Else:
    assume {:partition} out_Mdl_3 != 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} in_Type_7 != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} in_Type_7 == 1;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    goto L57;

  L57:
    assume {:nonnull} in_BusExtension_68 != 0;
    assume in_BusExtension_68 > 0;
    havoc vslice_dummy_var_2202;
    call {:si_unique_call 2004} out_ntStatus_63 := Av_SubmitIrpSynch(vslice_dummy_var_2202, out_Irp_65, out_Irb_29);
    call {:si_unique_call 2005} IoFreeIrp(0);
    assume {:nonnull} in_BusExtension_68 != 0;
    assume in_BusExtension_68 > 0;
    call {:si_unique_call 2006} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(in_BusExtension_68), out_Irb_29);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} out_Mdl_3 != 0;
    call {:si_unique_call 2003} IoFreeMdl(0);
    goto L69;

  L69:
    goto anon31_Else;

  anon31_Else:
    assume {:partition} out_ntStatus_63 != -1072562032;
    goto anon32_Then;

  anon32_Then:
    assume {:partition} 0 > out_ntStatus_63;
    out_Tmp_821 := out_Retries_2;
    out_Retries_2 := out_Retries_2 - 1;
    goto anon36_Else;

  anon36_Else:
    assume {:partition} out_Tmp_821 != 0;
    goto anon36_Else_dummy;

  anon36_Else_dummy:
    call {:si_unique_call 2008} {:si_old_unique_call 1} out_Retries_2, out_Irp_65, out_Irb_29, out_Mdl_3, out_Tmp_821, out_sdv_651, out_ntStatus_63 := Av1394_ReadPCR_loop_L22(out_Retries_2, out_Irp_65, out_Irb_29, out_Mdl_3, out_Tmp_821, in_StackSize_23, out_sdv_651, out_ntStatus_63, in_BusExtension_68, in_GenerationCount, in_Type_7, in_Index_2);
    return;

  anon30_Then:
    assume {:partition} out_Mdl_3 == 0;
    goto L69;

  anon29_Then:
    assume {:partition} in_Type_7 != 1;
    goto L57;

  anon35_Then:
    assume {:partition} in_Type_7 == 0;
    assume {:nonnull} out_Irb_29 != 0;
    assume out_Irb_29 > 0;
    goto L57;
}



procedure {:LoopProcedure} Av1394_ReadPCR_loop_L22(in_Retries_2: int, in_Irp_65: int, in_Irb_29: int, in_Mdl_3: int, in_Tmp_821: int, in_StackSize_23: int, in_sdv_651: int, in_ntStatus_63: int, in_BusExtension_68: int, in_GenerationCount: int, in_Type_7: int, in_Index_2: int) returns (out_Retries_2: int, out_Irp_65: int, out_Irb_29: int, out_Mdl_3: int, out_Tmp_821: int, out_sdv_651: int, out_ntStatus_63: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_LockedSwap_loop_L16(in_Retries_3: int, in_Irp_66: int, in_Tmp_825: int, in_Irb_30: int, in_Tmp_826: int, in_StackSize_24: int, in_sdv_656: int, in_ntStatus_64: int, in_Tmp_828: int, in_BusExtension_69: int, in_Argument: int, in_Data: int, in_pOldValue: int, in_Address_1: int, in_bGeneration_1: int, in_Generation_3: int, in_vslice_dummy_var_233: int) returns (out_Retries_3: int, out_Irp_66: int, out_Tmp_825: int, out_Irb_30: int, out_Tmp_826: int, out_sdv_656: int, out_ntStatus_64: int, out_Tmp_828: int, out_vslice_dummy_var_233: int)
{
  var vslice_dummy_var_2203: int;

  entry:
    out_Retries_3, out_Irp_66, out_Tmp_825, out_Irb_30, out_Tmp_826, out_sdv_656, out_ntStatus_64, out_Tmp_828, out_vslice_dummy_var_233 := in_Retries_3, in_Irp_66, in_Tmp_825, in_Irb_30, in_Tmp_826, in_sdv_656, in_ntStatus_64, in_Tmp_828, in_vslice_dummy_var_233;
    goto L16, exit;

  exit:
    return;

  L16:
    call {:si_unique_call 2009} out_Irp_66 := IoAllocateIrp(in_StackSize_24, 0);
    call {:si_unique_call 2010} out_sdv_656 := sdv_ExAllocateFromNPagedLookasideList(0);
    out_Irb_30 := out_sdv_656;
    goto anon28_Else;

  anon28_Else:
    assume {:partition} out_Irp_66 != 0;
    goto anon22_Else;

  anon22_Else:
    assume {:partition} out_Irb_30 != 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    havoc out_Tmp_825;
    assume {:nonnull} out_Tmp_825 != 0;
    assume out_Tmp_825 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    havoc out_Tmp_826;
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} in_bGeneration_1 != 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    goto L45;

  L45:
    assume {:nonnull} in_BusExtension_69 != 0;
    assume in_BusExtension_69 > 0;
    havoc vslice_dummy_var_2203;
    call {:si_unique_call 2012} out_ntStatus_64 := Av_SubmitIrpSynch(vslice_dummy_var_2203, out_Irp_66, out_Irb_30);
    call {:si_unique_call 2013} IoFreeIrp(0);
    assume {:nonnull} in_BusExtension_69 != 0;
    assume in_BusExtension_69 > 0;
    call {:si_unique_call 2014} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(in_BusExtension_69), out_Irb_30);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} out_ntStatus_64 == -1072562032;
    goto anon25_Else;

  anon25_Else:
    assume {:partition} in_bGeneration_1 == 0;
    call {:si_unique_call 2011} out_vslice_dummy_var_233 := Av1394_GetGenerationCount(in_BusExtension_69);
    goto L62;

  L62:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} out_ntStatus_64 != -1072562032;
    out_Tmp_828 := out_Retries_3;
    out_Retries_3 := out_Retries_3 - 1;
    goto anon30_Else;

  anon30_Else:
    assume {:partition} out_Tmp_828 != 0;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    goto L_BAF_7;

  L_BAF_7:
    call {:si_unique_call 2015} {:si_old_unique_call 1} out_Retries_3, out_Irp_66, out_Tmp_825, out_Irb_30, out_Tmp_826, out_sdv_656, out_ntStatus_64, out_Tmp_828, out_vslice_dummy_var_233 := Av1394_LockedSwap_loop_L16(out_Retries_3, out_Irp_66, out_Tmp_825, out_Irb_30, out_Tmp_826, in_StackSize_24, out_sdv_656, out_ntStatus_64, out_Tmp_828, in_BusExtension_69, in_Argument, in_Data, in_pOldValue, in_Address_1, in_bGeneration_1, in_Generation_3, out_vslice_dummy_var_233);
    return;

  anon26_Then:
    assume {:partition} out_ntStatus_64 == -1072562032;
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    goto L_BAF_7;

  anon23_Then:
    assume {:partition} out_ntStatus_64 != -1072562032;
    goto anon24_Else;

  anon24_Else:
    assume {:partition} out_ntStatus_64 < 0;
    goto L62;

  anon29_Then:
    assume {:partition} in_bGeneration_1 == 0;
    assume {:nonnull} in_BusExtension_69 != 0;
    assume in_BusExtension_69 > 0;
    assume {:nonnull} out_Irb_30 != 0;
    assume out_Irb_30 > 0;
    goto L45;
}



procedure {:LoopProcedure} Av1394_LockedSwap_loop_L16(in_Retries_3: int, in_Irp_66: int, in_Tmp_825: int, in_Irb_30: int, in_Tmp_826: int, in_StackSize_24: int, in_sdv_656: int, in_ntStatus_64: int, in_Tmp_828: int, in_BusExtension_69: int, in_Argument: int, in_Data: int, in_pOldValue: int, in_Address_1: int, in_bGeneration_1: int, in_Generation_3: int, in_vslice_dummy_var_233: int) returns (out_Retries_3: int, out_Irp_66: int, out_Tmp_825: int, out_Irb_30: int, out_Tmp_826: int, out_sdv_656: int, out_ntStatus_64: int, out_Tmp_828: int, out_vslice_dummy_var_233: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_ReadTextualDescriptor_loop_L70(in_u_5: int, in_Tmp_841: int, in_n_1: int, in_ulUnicode: int, in_Tmp_845: int, in_Tmp_847: int, in_Tmp_848: int, in_Tmp_850: int) returns (out_Tmp_841: int, out_n_1: int, out_Tmp_845: int, out_Tmp_847: int, out_Tmp_848: int, out_Tmp_850: int)
{

  entry:
    out_Tmp_841, out_n_1, out_Tmp_845, out_Tmp_847, out_Tmp_848, out_Tmp_850 := in_Tmp_841, in_n_1, in_Tmp_845, in_Tmp_847, in_Tmp_848, in_Tmp_850;
    goto L70, exit;

  exit:
    return;

  L70:
    assume {:CounterLoop 4} {:Counter "n_1"} true;
    goto anon39_Else;

  anon39_Else:
    assume {:partition} 4 > out_n_1;
    out_Tmp_841 := out_n_1;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    goto anon44_Else;

  anon44_Else:
    out_Tmp_848 := out_n_1;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L76;

  L76:
    out_Tmp_847 := out_n_1;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    goto L77;

  L77:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} BAND(in_ulUnicode, 0) != 0;
    out_n_1 := out_n_1 + 1;
    goto L78;

  L78:
    out_n_1 := out_n_1 + 1;
    goto L78_dummy;

  L78_dummy:
    call {:si_unique_call 2016} {:si_old_unique_call 1} out_Tmp_841, out_n_1, out_Tmp_845, out_Tmp_847, out_Tmp_848, out_Tmp_850 := Av1394_ReadTextualDescriptor_loop_L70(in_u_5, out_Tmp_841, out_n_1, in_ulUnicode, out_Tmp_845, out_Tmp_847, out_Tmp_848, out_Tmp_850);
    return;

  anon40_Then:
    assume {:partition} BAND(in_ulUnicode, 0) == 0;
    goto L78;

  anon45_Then:
    out_Tmp_845 := out_n_1;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    out_Tmp_850 := out_n_1;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L77;

  anon47_Then:
    goto L76;

  anon46_Then:
    goto L76;
}



procedure {:LoopProcedure} Av1394_ReadTextualDescriptor_loop_L70(in_u_5: int, in_Tmp_841: int, in_n_1: int, in_ulUnicode: int, in_Tmp_845: int, in_Tmp_847: int, in_Tmp_848: int, in_Tmp_850: int) returns (out_Tmp_841: int, out_n_1: int, out_Tmp_845: int, out_Tmp_847: int, out_Tmp_848: int, out_Tmp_850: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_ReadTextualDescriptor_loop_L60(in_i_6: int, in_DataLength: int, in_u_5: int, in_Tmp_841: int, in_pData_1: int, in_n_1: int, in_ulUnicode: int, in_Tmp_842: int, in_ntStatus_67: int, in_Tmp_845: int, in_Tmp_847: int, in_Tmp_848: int, in_Tmp_850: int, in_BusExtension_72: int, in_Address_2: int) returns (out_i_6: int, out_Tmp_841: int, out_n_1: int, out_Tmp_842: int, out_ntStatus_67: int, out_Tmp_845: int, out_Tmp_847: int, out_Tmp_848: int, out_Tmp_850: int)
{

  entry:
    out_i_6, out_Tmp_841, out_n_1, out_Tmp_842, out_ntStatus_67, out_Tmp_845, out_Tmp_847, out_Tmp_848, out_Tmp_850 := in_i_6, in_Tmp_841, in_n_1, in_Tmp_842, in_ntStatus_67, in_Tmp_845, in_Tmp_847, in_Tmp_848, in_Tmp_850;
    goto L60, exit;

  exit:
    return;

  L60:
    goto anon37_Then;

  anon37_Then:
    assume {:partition} out_i_6 < in_DataLength;
    out_Tmp_842 := in_Address_2 + 4 * out_i_6;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    call {:si_unique_call 2019} out_ntStatus_67 := Av1394_QuadletRead(in_BusExtension_72, asUlong_unnamed_tag_70(in_u_5), out_Tmp_842);
    goto anon38_Then;

  anon38_Then:
    assume {:partition} 0 <= out_ntStatus_67;
    out_n_1 := 0;
    goto L70;

  L70:
    call {:si_unique_call 2018} out_Tmp_841, out_n_1, out_Tmp_845, out_Tmp_847, out_Tmp_848, out_Tmp_850 := Av1394_ReadTextualDescriptor_loop_L70(in_u_5, out_Tmp_841, out_n_1, in_ulUnicode, out_Tmp_845, out_Tmp_847, out_Tmp_848, out_Tmp_850);
    goto L70_last;

  L70_last:
    assume {:CounterLoop 4} {:Counter "n_1"} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} 4 > out_n_1;
    out_Tmp_841 := out_n_1;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    out_Tmp_848 := out_n_1;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L76;

  L76:
    out_Tmp_847 := out_n_1;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    goto L77;

  L77:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} BAND(in_ulUnicode, 0) != 0;
    out_n_1 := out_n_1 + 1;
    goto L78;

  L78:
    out_n_1 := out_n_1 + 1;
    assume false;
    return;

  anon40_Then:
    assume {:partition} BAND(in_ulUnicode, 0) == 0;
    goto L78;

  anon45_Then:
    out_Tmp_845 := out_n_1;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    out_Tmp_850 := out_n_1;
    assume {:nonnull} in_u_5 != 0;
    assume in_u_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L77;

  anon47_Then:
    goto L76;

  anon46_Then:
    goto L76;

  anon44_Then:
    goto L71;

  L71:
    call {:si_unique_call 2017} sdv_RtlCopyMemory(0, 0, 4);
    out_i_6 := out_i_6 + 1;
    goto L71_dummy;

  L71_dummy:
    call {:si_unique_call 2020} {:si_old_unique_call 1} out_i_6, out_Tmp_841, out_n_1, out_Tmp_842, out_ntStatus_67, out_Tmp_845, out_Tmp_847, out_Tmp_848, out_Tmp_850 := Av1394_ReadTextualDescriptor_loop_L60(out_i_6, in_DataLength, in_u_5, out_Tmp_841, in_pData_1, out_n_1, in_ulUnicode, out_Tmp_842, out_ntStatus_67, out_Tmp_845, out_Tmp_847, out_Tmp_848, out_Tmp_850, in_BusExtension_72, in_Address_2);
    return;

  anon39_Then:
    assume {:partition} out_n_1 >= 4;
    goto L71;
}



procedure {:LoopProcedure} Av1394_ReadTextualDescriptor_loop_L60(in_i_6: int, in_DataLength: int, in_u_5: int, in_Tmp_841: int, in_pData_1: int, in_n_1: int, in_ulUnicode: int, in_Tmp_842: int, in_ntStatus_67: int, in_Tmp_845: int, in_Tmp_847: int, in_Tmp_848: int, in_Tmp_850: int, in_BusExtension_72: int, in_Address_2: int) returns (out_i_6: int, out_Tmp_841: int, out_n_1: int, out_Tmp_842: int, out_ntStatus_67: int, out_Tmp_845: int, out_Tmp_847: int, out_Tmp_848: int, out_Tmp_850: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Av1394_QuadletRead_loop_L17(in_Retries_4: int, in_Irp_72: int, in_Mdl_4: int, in_Irb_35: int, in_Tmp_865: int, in_StackSize_29: int, in_sdv_684: int, in_ntStatus_71: int, in_BusExtension_75: int, in_Address_3: int, in_vslice_dummy_var_240: int) returns (out_Retries_4: int, out_Irp_72: int, out_Mdl_4: int, out_Irb_35: int, out_Tmp_865: int, out_sdv_684: int, out_ntStatus_71: int, out_vslice_dummy_var_240: int)
{
  var vslice_dummy_var_2204: int;

  entry:
    out_Retries_4, out_Irp_72, out_Mdl_4, out_Irb_35, out_Tmp_865, out_sdv_684, out_ntStatus_71, out_vslice_dummy_var_240 := in_Retries_4, in_Irp_72, in_Mdl_4, in_Irb_35, in_Tmp_865, in_sdv_684, in_ntStatus_71, in_vslice_dummy_var_240;
    goto L17, exit;

  exit:
    return;

  L17:
    call {:si_unique_call 2021} out_Irp_72 := IoAllocateIrp(in_StackSize_29, 0);
    call {:si_unique_call 2022} out_sdv_684 := sdv_ExAllocateFromNPagedLookasideList(0);
    out_Irb_35 := out_sdv_684;
    goto anon29_Else;

  anon29_Else:
    assume {:partition} out_Irp_72 != 0;
    goto anon22_Else;

  anon22_Else:
    assume {:partition} out_Irb_35 != 0;
    call {:si_unique_call 2028} out_Mdl_4 := IoAllocateMdl(0, 4, 0, 0, 0);
    goto anon23_Else;

  anon23_Else:
    assume {:partition} out_Mdl_4 != 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} in_BusExtension_75 != 0;
    assume in_BusExtension_75 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} in_BusExtension_75 != 0;
    assume in_BusExtension_75 > 0;
    havoc vslice_dummy_var_2204;
    call {:si_unique_call 2025} out_ntStatus_71 := Av_SubmitIrpSynch(vslice_dummy_var_2204, out_Irp_72, out_Irb_35);
    call {:si_unique_call 2026} IoFreeIrp(0);
    assume {:nonnull} in_BusExtension_75 != 0;
    assume in_BusExtension_75 > 0;
    call {:si_unique_call 2027} ExFreeToNPagedLookasideList(IrbPool__BUS_DEVICE_EXTENSION(in_BusExtension_75), out_Irb_35);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} out_Mdl_4 != 0;
    call {:si_unique_call 2024} IoFreeMdl(0);
    goto L61;

  L61:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} out_ntStatus_71 == -1072562032;
    call {:si_unique_call 2023} out_vslice_dummy_var_240 := Av1394_GetGenerationCount(in_BusExtension_75);
    goto L69;

  L69:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} out_ntStatus_71 != -1072562032;
    out_Tmp_865 := out_Retries_4;
    out_Retries_4 := out_Retries_4 - 1;
    goto anon30_Else;

  anon30_Else:
    assume {:partition} out_Tmp_865 != 0;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    goto L_BAF_8;

  L_BAF_8:
    call {:si_unique_call 2029} {:si_old_unique_call 1} out_Retries_4, out_Irp_72, out_Mdl_4, out_Irb_35, out_Tmp_865, out_sdv_684, out_ntStatus_71, out_vslice_dummy_var_240 := Av1394_QuadletRead_loop_L17(out_Retries_4, out_Irp_72, out_Mdl_4, out_Irb_35, out_Tmp_865, in_StackSize_29, out_sdv_684, out_ntStatus_71, in_BusExtension_75, in_Address_3, out_vslice_dummy_var_240);
    return;

  anon27_Then:
    assume {:partition} out_ntStatus_71 == -1072562032;
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    goto L_BAF_8;

  anon25_Then:
    assume {:partition} out_ntStatus_71 != -1072562032;
    goto anon26_Else;

  anon26_Else:
    assume {:partition} out_ntStatus_71 < 0;
    goto L69;

  anon24_Then:
    assume {:partition} out_Mdl_4 == 0;
    goto L61;
}



procedure {:LoopProcedure} Av1394_QuadletRead_loop_L17(in_Retries_4: int, in_Irp_72: int, in_Mdl_4: int, in_Irb_35: int, in_Tmp_865: int, in_StackSize_29: int, in_sdv_684: int, in_ntStatus_71: int, in_BusExtension_75: int, in_Address_3: int, in_vslice_dummy_var_240: int) returns (out_Retries_4: int, out_Irp_72: int, out_Mdl_4: int, out_Irb_35: int, out_Tmp_865: int, out_sdv_684: int, out_ntStatus_71: int, out_vslice_dummy_var_240: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, alloc, irp_status, sdv_context, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, irp_copy_next, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.DeviceState__POWER_STATE, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_ProcessListenPacket#0_loop_L94(in_EmiStatus: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_352: int, in_CipData_4: int, in_Tmp_353: int, in_Tmp_354: int, in_Tmp_359: int, in_CopySize: int, in_OddEvenStatus: int, in_sdv_291: int, in_Tmp_361: int, in_Tmp_365: int, in_Tmp_366: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_367: int, in_FrameContext_1: int, in_boogieTmp: int) returns (out_Tmp_349: int, out_Tmp_350: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int, out_Tmp_359: int, out_CopySize: int, out_sdv_291: int, out_Tmp_361: int, out_Tmp_365: int, out_Tmp_366: int, out_Tmp_367: int, out_FrameContext_1: int, out_boogieTmp: int)
{

  entry:
    out_Tmp_349, out_Tmp_350, out_Tmp_352, out_Tmp_353, out_Tmp_354, out_Tmp_359, out_CopySize, out_sdv_291, out_Tmp_361, out_Tmp_365, out_Tmp_366, out_Tmp_367, out_FrameContext_1, out_boogieTmp := in_Tmp_349, in_Tmp_350, in_Tmp_352, in_Tmp_353, in_Tmp_354, in_Tmp_359, in_CopySize, in_sdv_291, in_Tmp_361, in_Tmp_365, in_Tmp_366, in_Tmp_367, in_FrameContext_1, in_boogieTmp;
    goto L94, exit;

  exit:
    return;

  L94:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon102_Else;

  anon102_Else:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_CopySize;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    out_Tmp_365 := in_BusBuffer;
    assume {:nonnull} out_Tmp_365 != 0;
    assume out_Tmp_365 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    goto L113;

  L113:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    out_CopySize := out_CopySize - 4;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2031} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L128;

  L128:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_367;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_366;
    assume {:nonnull} out_Tmp_366 != 0;
    assume out_Tmp_366 > 0;
    assume {:nonnull} out_Tmp_367 != 0;
    assume out_Tmp_367 > 0;
    goto L130;

  L130:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    call {:si_unique_call 2033} out_sdv_291 := AvCip_ValidateSourcePacket(in_CipData_4, out_FrameContext_1);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} out_sdv_291 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_353;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_352;
    assume {:nonnull} out_Tmp_352 != 0;
    assume out_Tmp_352 > 0;
    assume {:nonnull} out_Tmp_353 != 0;
    assume out_Tmp_353 > 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_350;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_361;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} out_Tmp_350 != 0;
    assume out_Tmp_350 > 0;
    assume {:nonnull} out_Tmp_361 != 0;
    assume out_Tmp_361 > 0;
    goto L132;

  L132:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_354;
    assume {:nonnull} out_Tmp_354 != 0;
    assume out_Tmp_354 > 0;
    havoc out_Tmp_359;
    call {:si_unique_call 2034} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, out_Tmp_359);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_349;
    assume {:nonnull} out_Tmp_349 != 0;
    assume out_Tmp_349 > 0;
    goto L109;

  L109:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2030} out_boogieTmp := corral_nondet();
    goto L109_dummy;

  L109_dummy:
    call {:si_unique_call 2035} {:si_old_unique_call 1} out_Tmp_349, out_Tmp_350, out_Tmp_352, out_Tmp_353, out_Tmp_354, out_Tmp_359, out_CopySize, out_sdv_291, out_Tmp_361, out_Tmp_365, out_Tmp_366, out_Tmp_367, out_FrameContext_1, out_boogieTmp := AvCip_ProcessListenPacket#0_loop_L94(in_EmiStatus, out_Tmp_349, out_Tmp_350, out_Tmp_352, in_CipData_4, out_Tmp_353, out_Tmp_354, out_Tmp_359, out_CopySize, in_OddEvenStatus, out_sdv_291, out_Tmp_361, out_Tmp_365, out_Tmp_366, in_timestamp, in_BusBuffer, out_Tmp_367, out_FrameContext_1, out_boogieTmp);
    return;

  anon113_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L109;

  anon112_Then:
    goto L109;

  anon110_Then:
    goto L109;

  anon123_Then:
    goto L132;

  anon111_Then:
    assume {:partition} out_sdv_291 == 0;
    goto L132;

  anon109_Then:
    goto L132;

  anon122_Then:
    goto L130;

  anon108_Then:
    goto L120;

  L120:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2032} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L128;

  anon106_Then:
    goto L120;

  anon107_Then:
    goto L113;

  anon121_Then:
    goto L113;

  anon105_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L109;
}



procedure {:LoopProcedure} AvCip_ProcessListenPacket#0_loop_L94(in_EmiStatus: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_352: int, in_CipData_4: int, in_Tmp_353: int, in_Tmp_354: int, in_Tmp_359: int, in_CopySize: int, in_OddEvenStatus: int, in_sdv_291: int, in_Tmp_361: int, in_Tmp_365: int, in_Tmp_366: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_367: int, in_FrameContext_1: int, in_boogieTmp: int) returns (out_Tmp_349: int, out_Tmp_350: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int, out_Tmp_359: int, out_CopySize: int, out_sdv_291: int, out_Tmp_361: int, out_Tmp_365: int, out_Tmp_366: int, out_Tmp_367: int, out_FrameContext_1: int, out_boogieTmp: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_291 == 0 || out_sdv_291 == in_sdv_291;
  free ensures {:va_keep} out_Tmp_365 == in_Tmp_365 || out_Tmp_365 == in_BusBuffer;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_ProcessListenPacket#0_loop_L33(in_i_1: int, in_Tmp_348: int, in_EmiStatus: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_351: int, in_Tmp_352: int, in_CipData_4: int, in_Tmp_353: int, in_DescriptorData_1: int, in_Tmp_354: int, in_Tmp_355: int, in_Tmp_356: int, in_Tmp_357: int, in_Tmp_359: int, in_CopySize: int, in_OddEvenStatus: int, in_sdv_291: int, in_TsHeader: int, in_Tmp_361: int, in_Tmp_362: int, in_Tmp_364: int, in_Tmp_365: int, in_Tmp_366: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_367: int, in_FrameContext_1: int, in_SourceLength: int, in_boogieTmp: int) returns (out_i_1: int, out_Tmp_348: int, out_EmiStatus: int, out_Tmp_349: int, out_Tmp_350: int, out_Tmp_351: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int, out_Tmp_355: int, out_Tmp_356: int, out_Tmp_357: int, out_Tmp_359: int, out_CopySize: int, out_OddEvenStatus: int, out_sdv_291: int, out_Tmp_361: int, out_Tmp_362: int, out_Tmp_364: int, out_Tmp_365: int, out_Tmp_366: int, out_BusBuffer: int, out_Tmp_367: int, out_FrameContext_1: int, out_SourceLength: int, out_boogieTmp: int)
{

  entry:
    out_i_1, out_Tmp_348, out_EmiStatus, out_Tmp_349, out_Tmp_350, out_Tmp_351, out_Tmp_352, out_Tmp_353, out_Tmp_354, out_Tmp_355, out_Tmp_356, out_Tmp_357, out_Tmp_359, out_CopySize, out_OddEvenStatus, out_sdv_291, out_Tmp_361, out_Tmp_362, out_Tmp_364, out_Tmp_365, out_Tmp_366, out_BusBuffer, out_Tmp_367, out_FrameContext_1, out_SourceLength, out_boogieTmp := in_i_1, in_Tmp_348, in_EmiStatus, in_Tmp_349, in_Tmp_350, in_Tmp_351, in_Tmp_352, in_Tmp_353, in_Tmp_354, in_Tmp_355, in_Tmp_356, in_Tmp_357, in_Tmp_359, in_CopySize, in_OddEvenStatus, in_sdv_291, in_Tmp_361, in_Tmp_362, in_Tmp_364, in_Tmp_365, in_Tmp_366, in_BusBuffer, in_Tmp_367, in_FrameContext_1, in_SourceLength, in_boogieTmp;
    goto L33, exit;

  exit:
    return;

  L33:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon86_Else;

  anon86_Else:
    assume {:nonnull} in_DescriptorData_1 != 0;
    assume in_DescriptorData_1 > 0;
    havoc out_BusBuffer;
    call {:si_unique_call 2039} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_TsHeader != 0;
    assume in_TsHeader > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2040} out_boogieTmp := corral_nondet();
    call {:si_unique_call 2041} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2042} out_boogieTmp := corral_nondet();
    call {:si_unique_call 2043} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    goto L56;

  L56:
    out_i_1 := out_i_1 + 1;
    goto L56_dummy;

  L56_dummy:
    call {:si_unique_call 2053} {:si_old_unique_call 1} out_i_1, out_Tmp_348, out_EmiStatus, out_Tmp_349, out_Tmp_350, out_Tmp_351, out_Tmp_352, out_Tmp_353, out_Tmp_354, out_Tmp_355, out_Tmp_356, out_Tmp_357, out_Tmp_359, out_CopySize, out_OddEvenStatus, out_sdv_291, out_Tmp_361, out_Tmp_362, out_Tmp_364, out_Tmp_365, out_Tmp_366, out_BusBuffer, out_Tmp_367, out_FrameContext_1, out_SourceLength, out_boogieTmp := AvCip_ProcessListenPacket#0_loop_L33(out_i_1, out_Tmp_348, out_EmiStatus, out_Tmp_349, out_Tmp_350, out_Tmp_351, out_Tmp_352, in_CipData_4, out_Tmp_353, in_DescriptorData_1, out_Tmp_354, out_Tmp_355, out_Tmp_356, out_Tmp_357, out_Tmp_359, out_CopySize, out_OddEvenStatus, out_sdv_291, in_TsHeader, out_Tmp_361, out_Tmp_362, out_Tmp_364, out_Tmp_365, out_Tmp_366, in_timestamp, out_BusBuffer, out_Tmp_367, out_FrameContext_1, out_SourceLength, out_boogieTmp);
    return;

  anon116_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_Tmp_362;
    goto L59;

  L59:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2037} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2038} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_SourceLength;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    out_SourceLength := out_SourceLength - 4;
    goto L71;

  L71:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto L67;

  L67:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto L74;

  L74:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto L155;

  L155:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} out_FrameContext_1 != 0;
    call {:si_unique_call 2036} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, 1);
    goto L56;

  anon114_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L56;

  anon92_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    goto L155;

  anon94_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto L155;

  anon95_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    goto L155;

  anon96_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    goto L155;

  anon97_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto L155;

  anon98_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L155;

  anon99_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L155;

  anon100_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} out_FrameContext_1 != 0;
    call {:si_unique_call 2046} out_OddEvenStatus := corral_nondet();
    call {:si_unique_call 2047} out_EmiStatus := corral_nondet();
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_355;
    assume {:nonnull} out_Tmp_355 != 0;
    assume out_Tmp_355 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_348;
    assume {:nonnull} out_Tmp_348 != 0;
    assume out_Tmp_348 > 0;
    havoc out_Tmp_356;
    call {:si_unique_call 2048} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, out_Tmp_356);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_357;
    assume {:nonnull} out_Tmp_357 != 0;
    assume out_Tmp_357 > 0;
    goto L94;

  L94:
    call {:si_unique_call 2044} out_Tmp_349, out_Tmp_350, out_Tmp_352, out_Tmp_353, out_Tmp_354, out_Tmp_359, out_CopySize, out_sdv_291, out_Tmp_361, out_Tmp_365, out_Tmp_366, out_Tmp_367, out_FrameContext_1, out_boogieTmp := AvCip_ProcessListenPacket#0_loop_L94(out_EmiStatus, out_Tmp_349, out_Tmp_350, out_Tmp_352, in_CipData_4, out_Tmp_353, out_Tmp_354, out_Tmp_359, out_CopySize, out_OddEvenStatus, out_sdv_291, out_Tmp_361, out_Tmp_365, out_Tmp_366, in_timestamp, out_BusBuffer, out_Tmp_367, out_FrameContext_1, out_boogieTmp);
    goto L94_last;

  L94_last:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_CopySize;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    out_Tmp_365 := out_BusBuffer;
    assume {:nonnull} out_Tmp_365 != 0;
    assume out_Tmp_365 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    goto L113;

  L113:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    out_CopySize := out_CopySize - 4;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2049} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L128;

  L128:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_367;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_366;
    assume {:nonnull} out_Tmp_366 != 0;
    assume out_Tmp_366 > 0;
    assume {:nonnull} out_Tmp_367 != 0;
    assume out_Tmp_367 > 0;
    goto L130;

  L130:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    call {:si_unique_call 2051} out_sdv_291 := AvCip_ValidateSourcePacket(in_CipData_4, out_FrameContext_1);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} out_sdv_291 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_353;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_352;
    assume {:nonnull} out_Tmp_352 != 0;
    assume out_Tmp_352 > 0;
    assume {:nonnull} out_Tmp_353 != 0;
    assume out_Tmp_353 > 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_350;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_361;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} out_Tmp_350 != 0;
    assume out_Tmp_350 > 0;
    assume {:nonnull} out_Tmp_361 != 0;
    assume out_Tmp_361 > 0;
    goto L132;

  L132:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_354;
    assume {:nonnull} out_Tmp_354 != 0;
    assume out_Tmp_354 > 0;
    havoc out_Tmp_359;
    call {:si_unique_call 2052} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, out_Tmp_359);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_349;
    assume {:nonnull} out_Tmp_349 != 0;
    assume out_Tmp_349 > 0;
    goto L109;

  L109:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2045} out_boogieTmp := corral_nondet();
    assume false;
    return;

  anon113_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L109;

  anon112_Then:
    goto L109;

  anon110_Then:
    goto L109;

  anon123_Then:
    goto L132;

  anon111_Then:
    assume {:partition} out_sdv_291 == 0;
    goto L132;

  anon109_Then:
    goto L132;

  anon122_Then:
    goto L130;

  anon108_Then:
    goto L120;

  L120:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2050} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L128;

  anon106_Then:
    goto L120;

  anon107_Then:
    goto L113;

  anon121_Then:
    goto L113;

  anon105_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L109;

  anon102_Then:
    goto L56;

  anon104_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L94;

  anon120_Then:
    goto L94;

  anon119_Then:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_364;
    assume {:nonnull} out_Tmp_364 != 0;
    assume out_Tmp_364 > 0;
    goto L94;

  anon103_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L94;

  anon101_Then:
    goto L94;

  anon93_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_351;
    assume {:nonnull} out_Tmp_351 != 0;
    assume out_Tmp_351 > 0;
    goto L74;

  anon126_Then:
    goto L74;

  anon125_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L74;

  anon124_Then:
    goto L74;

  anon90_Then:
    goto L74;

  anon91_Then:
    goto L56;

  anon118_Then:
    goto L71;

  anon89_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L67;

  anon88_Then:
    goto L56;

  anon117_Then:
    goto L56;

  anon87_Then:
    out_Tmp_362 := 1024;
    goto L59;
}



procedure {:LoopProcedure} AvCip_ProcessListenPacket#0_loop_L33(in_i_1: int, in_Tmp_348: int, in_EmiStatus: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_351: int, in_Tmp_352: int, in_CipData_4: int, in_Tmp_353: int, in_DescriptorData_1: int, in_Tmp_354: int, in_Tmp_355: int, in_Tmp_356: int, in_Tmp_357: int, in_Tmp_359: int, in_CopySize: int, in_OddEvenStatus: int, in_sdv_291: int, in_TsHeader: int, in_Tmp_361: int, in_Tmp_362: int, in_Tmp_364: int, in_Tmp_365: int, in_Tmp_366: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_367: int, in_FrameContext_1: int, in_SourceLength: int, in_boogieTmp: int) returns (out_i_1: int, out_Tmp_348: int, out_EmiStatus: int, out_Tmp_349: int, out_Tmp_350: int, out_Tmp_351: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int, out_Tmp_355: int, out_Tmp_356: int, out_Tmp_357: int, out_Tmp_359: int, out_CopySize: int, out_OddEvenStatus: int, out_sdv_291: int, out_Tmp_361: int, out_Tmp_362: int, out_Tmp_364: int, out_Tmp_365: int, out_Tmp_366: int, out_BusBuffer: int, out_Tmp_367: int, out_FrameContext_1: int, out_SourceLength: int, out_boogieTmp: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_291 == 0 || out_sdv_291 == in_sdv_291;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_ProcessListenPacket#1_loop_L94(in_EmiStatus: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_352: int, in_CipData_4: int, in_Tmp_353: int, in_Tmp_354: int, in_Tmp_359: int, in_CopySize: int, in_OddEvenStatus: int, in_sdv_291: int, in_Tmp_361: int, in_Tmp_365: int, in_Tmp_366: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_367: int, in_FrameContext_1: int, in_boogieTmp: int) returns (out_Tmp_349: int, out_Tmp_350: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int, out_Tmp_359: int, out_CopySize: int, out_sdv_291: int, out_Tmp_361: int, out_Tmp_365: int, out_Tmp_366: int, out_Tmp_367: int, out_FrameContext_1: int, out_boogieTmp: int)
{

  entry:
    out_Tmp_349, out_Tmp_350, out_Tmp_352, out_Tmp_353, out_Tmp_354, out_Tmp_359, out_CopySize, out_sdv_291, out_Tmp_361, out_Tmp_365, out_Tmp_366, out_Tmp_367, out_FrameContext_1, out_boogieTmp := in_Tmp_349, in_Tmp_350, in_Tmp_352, in_Tmp_353, in_Tmp_354, in_Tmp_359, in_CopySize, in_sdv_291, in_Tmp_361, in_Tmp_365, in_Tmp_366, in_Tmp_367, in_FrameContext_1, in_boogieTmp;
    goto L94, exit;

  exit:
    return;

  L94:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon102_Else;

  anon102_Else:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_CopySize;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    out_Tmp_365 := in_BusBuffer;
    assume {:nonnull} out_Tmp_365 != 0;
    assume out_Tmp_365 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    goto L113;

  L113:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    out_CopySize := out_CopySize - 4;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2055} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L128;

  L128:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_367;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_366;
    assume {:nonnull} out_Tmp_366 != 0;
    assume out_Tmp_366 > 0;
    assume {:nonnull} out_Tmp_367 != 0;
    assume out_Tmp_367 > 0;
    goto L130;

  L130:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    call {:si_unique_call 2057} out_sdv_291 := AvCip_ValidateSourcePacket(in_CipData_4, out_FrameContext_1);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} out_sdv_291 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_353;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_352;
    assume {:nonnull} out_Tmp_352 != 0;
    assume out_Tmp_352 > 0;
    assume {:nonnull} out_Tmp_353 != 0;
    assume out_Tmp_353 > 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_350;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_361;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} out_Tmp_350 != 0;
    assume out_Tmp_350 > 0;
    assume {:nonnull} out_Tmp_361 != 0;
    assume out_Tmp_361 > 0;
    goto L132;

  L132:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_354;
    assume {:nonnull} out_Tmp_354 != 0;
    assume out_Tmp_354 > 0;
    havoc out_Tmp_359;
    call {:si_unique_call 2058} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, out_Tmp_359);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_349;
    assume {:nonnull} out_Tmp_349 != 0;
    assume out_Tmp_349 > 0;
    goto L109;

  L109:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2054} out_boogieTmp := corral_nondet();
    goto L109_dummy;

  L109_dummy:
    call {:si_unique_call 2059} {:si_old_unique_call 1} out_Tmp_349, out_Tmp_350, out_Tmp_352, out_Tmp_353, out_Tmp_354, out_Tmp_359, out_CopySize, out_sdv_291, out_Tmp_361, out_Tmp_365, out_Tmp_366, out_Tmp_367, out_FrameContext_1, out_boogieTmp := AvCip_ProcessListenPacket#1_loop_L94(in_EmiStatus, out_Tmp_349, out_Tmp_350, out_Tmp_352, in_CipData_4, out_Tmp_353, out_Tmp_354, out_Tmp_359, out_CopySize, in_OddEvenStatus, out_sdv_291, out_Tmp_361, out_Tmp_365, out_Tmp_366, in_timestamp, in_BusBuffer, out_Tmp_367, out_FrameContext_1, out_boogieTmp);
    return;

  anon113_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L109;

  anon112_Then:
    goto L109;

  anon110_Then:
    goto L109;

  anon123_Then:
    goto L132;

  anon111_Then:
    assume {:partition} out_sdv_291 == 0;
    goto L132;

  anon109_Then:
    goto L132;

  anon122_Then:
    goto L130;

  anon108_Then:
    goto L120;

  L120:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2056} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L128;

  anon106_Then:
    goto L120;

  anon107_Then:
    goto L113;

  anon121_Then:
    goto L113;

  anon105_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L109;
}



procedure {:LoopProcedure} AvCip_ProcessListenPacket#1_loop_L94(in_EmiStatus: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_352: int, in_CipData_4: int, in_Tmp_353: int, in_Tmp_354: int, in_Tmp_359: int, in_CopySize: int, in_OddEvenStatus: int, in_sdv_291: int, in_Tmp_361: int, in_Tmp_365: int, in_Tmp_366: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_367: int, in_FrameContext_1: int, in_boogieTmp: int) returns (out_Tmp_349: int, out_Tmp_350: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int, out_Tmp_359: int, out_CopySize: int, out_sdv_291: int, out_Tmp_361: int, out_Tmp_365: int, out_Tmp_366: int, out_Tmp_367: int, out_FrameContext_1: int, out_boogieTmp: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_291 == 0 || out_sdv_291 == in_sdv_291;
  free ensures {:va_keep} out_Tmp_365 == in_Tmp_365 || out_Tmp_365 == in_BusBuffer;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvCip_ProcessListenPacket#1_loop_L33(in_i_1: int, in_Tmp_348: int, in_EmiStatus: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_351: int, in_Tmp_352: int, in_CipData_4: int, in_Tmp_353: int, in_DescriptorData_1: int, in_Tmp_354: int, in_Tmp_355: int, in_Tmp_356: int, in_Tmp_357: int, in_Tmp_359: int, in_CopySize: int, in_OddEvenStatus: int, in_sdv_291: int, in_TsHeader: int, in_Tmp_361: int, in_Tmp_362: int, in_Tmp_364: int, in_Tmp_365: int, in_Tmp_366: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_367: int, in_FrameContext_1: int, in_SourceLength: int, in_boogieTmp: int) returns (out_i_1: int, out_Tmp_348: int, out_EmiStatus: int, out_Tmp_349: int, out_Tmp_350: int, out_Tmp_351: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int, out_Tmp_355: int, out_Tmp_356: int, out_Tmp_357: int, out_Tmp_359: int, out_CopySize: int, out_OddEvenStatus: int, out_sdv_291: int, out_Tmp_361: int, out_Tmp_362: int, out_Tmp_364: int, out_Tmp_365: int, out_Tmp_366: int, out_BusBuffer: int, out_Tmp_367: int, out_FrameContext_1: int, out_SourceLength: int, out_boogieTmp: int)
{

  entry:
    out_i_1, out_Tmp_348, out_EmiStatus, out_Tmp_349, out_Tmp_350, out_Tmp_351, out_Tmp_352, out_Tmp_353, out_Tmp_354, out_Tmp_355, out_Tmp_356, out_Tmp_357, out_Tmp_359, out_CopySize, out_OddEvenStatus, out_sdv_291, out_Tmp_361, out_Tmp_362, out_Tmp_364, out_Tmp_365, out_Tmp_366, out_BusBuffer, out_Tmp_367, out_FrameContext_1, out_SourceLength, out_boogieTmp := in_i_1, in_Tmp_348, in_EmiStatus, in_Tmp_349, in_Tmp_350, in_Tmp_351, in_Tmp_352, in_Tmp_353, in_Tmp_354, in_Tmp_355, in_Tmp_356, in_Tmp_357, in_Tmp_359, in_CopySize, in_OddEvenStatus, in_sdv_291, in_Tmp_361, in_Tmp_362, in_Tmp_364, in_Tmp_365, in_Tmp_366, in_BusBuffer, in_Tmp_367, in_FrameContext_1, in_SourceLength, in_boogieTmp;
    goto L33, exit;

  exit:
    return;

  L33:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon86_Else;

  anon86_Else:
    assume {:nonnull} in_DescriptorData_1 != 0;
    assume in_DescriptorData_1 > 0;
    havoc out_BusBuffer;
    call {:si_unique_call 2063} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_TsHeader != 0;
    assume in_TsHeader > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2064} out_boogieTmp := corral_nondet();
    call {:si_unique_call 2065} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2066} out_boogieTmp := corral_nondet();
    call {:si_unique_call 2067} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    goto L56;

  L56:
    out_i_1 := out_i_1 + 1;
    goto L56_dummy;

  L56_dummy:
    call {:si_unique_call 2077} {:si_old_unique_call 1} out_i_1, out_Tmp_348, out_EmiStatus, out_Tmp_349, out_Tmp_350, out_Tmp_351, out_Tmp_352, out_Tmp_353, out_Tmp_354, out_Tmp_355, out_Tmp_356, out_Tmp_357, out_Tmp_359, out_CopySize, out_OddEvenStatus, out_sdv_291, out_Tmp_361, out_Tmp_362, out_Tmp_364, out_Tmp_365, out_Tmp_366, out_BusBuffer, out_Tmp_367, out_FrameContext_1, out_SourceLength, out_boogieTmp := AvCip_ProcessListenPacket#1_loop_L33(out_i_1, out_Tmp_348, out_EmiStatus, out_Tmp_349, out_Tmp_350, out_Tmp_351, out_Tmp_352, in_CipData_4, out_Tmp_353, in_DescriptorData_1, out_Tmp_354, out_Tmp_355, out_Tmp_356, out_Tmp_357, out_Tmp_359, out_CopySize, out_OddEvenStatus, out_sdv_291, in_TsHeader, out_Tmp_361, out_Tmp_362, out_Tmp_364, out_Tmp_365, out_Tmp_366, in_timestamp, out_BusBuffer, out_Tmp_367, out_FrameContext_1, out_SourceLength, out_boogieTmp);
    return;

  anon116_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_Tmp_362;
    goto L59;

  L59:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2061} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2062} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_SourceLength;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    out_SourceLength := out_SourceLength - 4;
    goto L71;

  L71:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto L67;

  L67:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto L74;

  L74:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto L155;

  L155:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} out_FrameContext_1 != 0;
    call {:si_unique_call 2060} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, 1);
    goto L56;

  anon114_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L56;

  anon92_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    goto L155;

  anon94_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto L155;

  anon95_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    goto L155;

  anon96_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    goto L155;

  anon97_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto L155;

  anon98_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L155;

  anon99_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L155;

  anon100_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} out_FrameContext_1 != 0;
    call {:si_unique_call 2070} out_OddEvenStatus := corral_nondet();
    call {:si_unique_call 2071} out_EmiStatus := corral_nondet();
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_355;
    assume {:nonnull} out_Tmp_355 != 0;
    assume out_Tmp_355 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_348;
    assume {:nonnull} out_Tmp_348 != 0;
    assume out_Tmp_348 > 0;
    havoc out_Tmp_356;
    call {:si_unique_call 2072} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, out_Tmp_356);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_357;
    assume {:nonnull} out_Tmp_357 != 0;
    assume out_Tmp_357 > 0;
    goto L94;

  L94:
    call {:si_unique_call 2068} out_Tmp_349, out_Tmp_350, out_Tmp_352, out_Tmp_353, out_Tmp_354, out_Tmp_359, out_CopySize, out_sdv_291, out_Tmp_361, out_Tmp_365, out_Tmp_366, out_Tmp_367, out_FrameContext_1, out_boogieTmp := AvCip_ProcessListenPacket#1_loop_L94(out_EmiStatus, out_Tmp_349, out_Tmp_350, out_Tmp_352, in_CipData_4, out_Tmp_353, out_Tmp_354, out_Tmp_359, out_CopySize, out_OddEvenStatus, out_sdv_291, out_Tmp_361, out_Tmp_365, out_Tmp_366, in_timestamp, out_BusBuffer, out_Tmp_367, out_FrameContext_1, out_boogieTmp);
    goto L94_last;

  L94_last:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_CopySize;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    out_Tmp_365 := out_BusBuffer;
    assume {:nonnull} out_Tmp_365 != 0;
    assume out_Tmp_365 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    goto L113;

  L113:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    out_CopySize := out_CopySize - 4;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2073} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L128;

  L128:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_367;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_366;
    assume {:nonnull} out_Tmp_366 != 0;
    assume out_Tmp_366 > 0;
    assume {:nonnull} out_Tmp_367 != 0;
    assume out_Tmp_367 > 0;
    goto L130;

  L130:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    call {:si_unique_call 2075} out_sdv_291 := AvCip_ValidateSourcePacket(in_CipData_4, out_FrameContext_1);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} out_sdv_291 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_353;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_352;
    assume {:nonnull} out_Tmp_352 != 0;
    assume out_Tmp_352 > 0;
    assume {:nonnull} out_Tmp_353 != 0;
    assume out_Tmp_353 > 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_350;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_361;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} out_Tmp_350 != 0;
    assume out_Tmp_350 > 0;
    assume {:nonnull} out_Tmp_361 != 0;
    assume out_Tmp_361 > 0;
    goto L132;

  L132:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_354;
    assume {:nonnull} out_Tmp_354 != 0;
    assume out_Tmp_354 > 0;
    havoc out_Tmp_359;
    call {:si_unique_call 2076} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, out_Tmp_359);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_349;
    assume {:nonnull} out_Tmp_349 != 0;
    assume out_Tmp_349 > 0;
    goto L109;

  L109:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2069} out_boogieTmp := corral_nondet();
    assume false;
    return;

  anon113_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L109;

  anon112_Then:
    goto L109;

  anon110_Then:
    goto L109;

  anon123_Then:
    goto L132;

  anon111_Then:
    assume {:partition} out_sdv_291 == 0;
    goto L132;

  anon109_Then:
    goto L132;

  anon122_Then:
    goto L130;

  anon108_Then:
    goto L120;

  L120:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2074} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L128;

  anon106_Then:
    goto L120;

  anon107_Then:
    goto L113;

  anon121_Then:
    goto L113;

  anon105_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L109;

  anon102_Then:
    goto L56;

  anon104_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L94;

  anon120_Then:
    goto L94;

  anon119_Then:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_364;
    assume {:nonnull} out_Tmp_364 != 0;
    assume out_Tmp_364 > 0;
    goto L94;

  anon103_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L94;

  anon101_Then:
    goto L94;

  anon93_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_351;
    assume {:nonnull} out_Tmp_351 != 0;
    assume out_Tmp_351 > 0;
    goto L74;

  anon126_Then:
    goto L74;

  anon125_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L74;

  anon124_Then:
    goto L74;

  anon90_Then:
    goto L74;

  anon91_Then:
    goto L56;

  anon118_Then:
    goto L71;

  anon89_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L67;

  anon88_Then:
    goto L56;

  anon117_Then:
    goto L56;

  anon87_Then:
    out_Tmp_362 := 1024;
    goto L59;
}



procedure {:LoopProcedure} AvCip_ProcessListenPacket#1_loop_L33(in_i_1: int, in_Tmp_348: int, in_EmiStatus: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_351: int, in_Tmp_352: int, in_CipData_4: int, in_Tmp_353: int, in_DescriptorData_1: int, in_Tmp_354: int, in_Tmp_355: int, in_Tmp_356: int, in_Tmp_357: int, in_Tmp_359: int, in_CopySize: int, in_OddEvenStatus: int, in_sdv_291: int, in_TsHeader: int, in_Tmp_361: int, in_Tmp_362: int, in_Tmp_364: int, in_Tmp_365: int, in_Tmp_366: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_367: int, in_FrameContext_1: int, in_SourceLength: int, in_boogieTmp: int) returns (out_i_1: int, out_Tmp_348: int, out_EmiStatus: int, out_Tmp_349: int, out_Tmp_350: int, out_Tmp_351: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int, out_Tmp_355: int, out_Tmp_356: int, out_Tmp_357: int, out_Tmp_359: int, out_CopySize: int, out_OddEvenStatus: int, out_sdv_291: int, out_Tmp_361: int, out_Tmp_362: int, out_Tmp_364: int, out_Tmp_365: int, out_Tmp_366: int, out_BusBuffer: int, out_Tmp_367: int, out_FrameContext_1: int, out_SourceLength: int, out_boogieTmp: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_291 == 0 || out_sdv_291 == in_sdv_291;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



procedure fakeMain() returns (Tmp_115: int, dup_assertVar: bool);
  modifies alloc, sdv_context, SLAM_guard_S_0, irp_copy_next, thread_status, irp_status, return_state, lowerDriverFailed, yogi_error, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, sdv_compFset, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION, Mem_T.PendingReturned__IRP, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:entrypoint} fakeMain() returns (Tmp_115: int, dup_assertVar: bool)
{

  start:
    call Tmp_115, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


