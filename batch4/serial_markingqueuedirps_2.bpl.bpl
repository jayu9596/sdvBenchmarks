var {:scalar} alloc: int;

var {:scalar} queued: int;

var {:scalar} yogi_error: int;

var {:scalar} stack_location: int;

var {:scalar} locked: int;

var {:pointer} SLAM_guard_S_0: int;

var {:scalar} markedPending: int;

var {:scalar} queuedWithoutMarking: int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const SerialGlobals: int;

const SerialPhysicalZero: int;

const GUID_DEVINTERFACE_COMPORT: int;

const driverDefaults: int;

const SerialPhysicalZero_1: int;

const SerialPortNameGuid: int;

const SerailPortPerfGuid: int;

const SerialPortPropertiesGuid: int;

const SerialPortHWGuid: int;

const SerialPortCommGuid: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const KdDebuggerNotPresent: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_Io_Removelock_release_wait_returned: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const KdDebuggerEnabled: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_harnessStackLocation: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_harnessDeviceExtension: int;

const sdv_DpcContext: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const KdComPortInUse: int;

const SerialPhysicalZero_2: int;

const SerialPhysicalZero_3: int;

const sdv_cancelFptr: int;

const SLAM_guard_S_0_init: int;

procedure {:origName "SerialQueryInformationFile"} SerialQueryInformationFile(actual_DeviceObject: int, actual_Irp: int) returns (Tmp_2: int);
  modifies alloc, yogi_error, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_2 == 0 || Tmp_2 == -1073741536 || Tmp_2 == 259 || Tmp_2 == -1073741738 || Tmp_2 == -1073741789 || Tmp_2 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialQueryInformationFile"} SerialQueryInformationFile(actual_DeviceObject: int, actual_Irp: int) returns (Tmp_2: int)
{
  var {:pointer} Tmp_3: int;
  var {:scalar} Status: int;
  var {:pointer} IrpSp: int;
  var {:pointer} Tmp_4: int;
  var {:pointer} Tmp_5: int;
  var {:scalar} sdv_10: int;
  var {:pointer} Tmp_6: int;
  var {:scalar} status: int;
  var {:pointer} Buf: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_0: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;

  anon0:
    DeviceObject := actual_DeviceObject;
    Irp := actual_Irp;
    call {:si_unique_call 0} Tmp_4 := __HAVOC_malloc(72);
    call {:si_unique_call 1} Tmp_5 := __HAVOC_malloc(72);
    call {:si_unique_call 2} Tmp_6 := __HAVOC_malloc(96);
    call {:si_unique_call 3} sdv_do_paged_code_check();
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    havoc vslice_dummy_var_3;
    call {:si_unique_call 4} status := SerialIRPPrologue(Irp, vslice_dummy_var_3);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} status != 259;
    Tmp_4 := strConst__li2bpl2;
    call {:si_unique_call 5} vslice_dummy_var_0 := SerialDbgPrintEx(9, Tmp_4);
    call {:si_unique_call 6} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    havoc vslice_dummy_var_4;
    call {:si_unique_call 7} SerialIRPEpilogue(vslice_dummy_var_4);
    goto L18;

  L18:
    Tmp_2 := status;
    goto L1;

  L1:
    call {:si_unique_call 8} SLIC_SerialQueryInformationFile_exit(strConst__li2bpl0, Tmp_2);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon23_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} status == 259;
    goto L18;

  anon17_Then:
    assume {:partition} status == 0;
    Tmp_6 := strConst__li2bpl1;
    call {:si_unique_call 9} vslice_dummy_var_1 := SerialDbgPrintEx(9, Tmp_6);
    call {:si_unique_call 10} sdv_10 := SerialCompleteIfError(DeviceObject, Irp);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_10 != 0;
    Tmp_2 := -1073741536;
    goto L1;

  anon19_Then:
    assume {:partition} sdv_10 == 0;
    call {:si_unique_call 11} IrpSp := sdv_IoGetCurrentIrpStackLocation(Irp);
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    Status := 0;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    havoc Buf;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    goto L44;

  L44:
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    Tmp_5 := strConst__li2bpl2;
    call {:si_unique_call 12} vslice_dummy_var_2 := SerialDbgPrintEx(9, Tmp_5);
    call {:si_unique_call 13} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    havoc vslice_dummy_var_5;
    call {:si_unique_call 14} SerialIRPEpilogue(vslice_dummy_var_5);
    Tmp_2 := Status;
    goto L1;

  anon21_Then:
    Status := -1073741789;
    goto L44;

  anon24_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    Status := -1073741789;
    goto L44;

  anon22_Then:
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    havoc Tmp_3;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    goto L44;

  anon20_Then:
    Status := -1073741811;
    goto L44;
}



procedure {:origName "SerialSetInformationFile"} SerialSetInformationFile(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_8: int);
  modifies alloc, yogi_error, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_8 == 0 || Tmp_8 == -1073741536 || Tmp_8 == 259 || Tmp_8 == -1073741738 || Tmp_8 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialSetInformationFile"} SerialSetInformationFile(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_8: int)
{
  var {:scalar} Status_1: int;
  var {:pointer} sdv_12: int;
  var {:pointer} Tmp_10: int;
  var {:pointer} Tmp_11: int;
  var {:pointer} sdv_15: int;
  var {:scalar} sdv_16: int;
  var {:pointer} Tmp_12: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} Irp_1: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;

  anon0:
    DeviceObject_1 := actual_DeviceObject_1;
    Irp_1 := actual_Irp_1;
    call {:si_unique_call 15} Tmp_10 := __HAVOC_malloc(72);
    call {:si_unique_call 16} Tmp_11 := __HAVOC_malloc(72);
    call {:si_unique_call 17} Tmp_12 := __HAVOC_malloc(96);
    call {:si_unique_call 18} sdv_do_paged_code_check();
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc vslice_dummy_var_6;
    call {:si_unique_call 19} Status_1 := SerialIRPPrologue(Irp_1, vslice_dummy_var_6);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Status_1 != 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Status_1 != 259;
    Tmp_11 := strConst__li2bpl2;
    call {:si_unique_call 20} vslice_dummy_var_3 := SerialDbgPrintEx(9, Tmp_11);
    call {:si_unique_call 21} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc vslice_dummy_var_7;
    call {:si_unique_call 22} SerialIRPEpilogue(vslice_dummy_var_7);
    goto L16;

  L16:
    Tmp_8 := Status_1;
    goto L1;

  L1:
    call {:si_unique_call 23} SLIC_SerialSetInformationFile_exit(strConst__li2bpl0, Tmp_8);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} Status_1 == 259;
    goto L16;

  anon13_Then:
    assume {:partition} Status_1 == 0;
    Tmp_12 := strConst__li2bpl1;
    call {:si_unique_call 24} vslice_dummy_var_4 := SerialDbgPrintEx(9, Tmp_12);
    call {:si_unique_call 25} sdv_16 := SerialCompleteIfError(DeviceObject_1, Irp_1);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_16 != 0;
    Tmp_8 := -1073741536;
    goto L1;

  anon15_Then:
    assume {:partition} sdv_16 == 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 26} sdv_15 := sdv_IoGetCurrentIrpStackLocation(Irp_1);
    assume {:nonnull} sdv_15 != 0;
    assume sdv_15 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L39;

  L39:
    Status_1 := 0;
    goto L40;

  L40:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Tmp_10 := strConst__li2bpl2;
    call {:si_unique_call 27} vslice_dummy_var_5 := SerialDbgPrintEx(9, Tmp_10);
    call {:si_unique_call 28} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc vslice_dummy_var_8;
    call {:si_unique_call 29} SerialIRPEpilogue(vslice_dummy_var_8);
    Tmp_8 := Status_1;
    goto L1;

  anon16_Then:
    call {:si_unique_call 30} sdv_12 := sdv_IoGetCurrentIrpStackLocation(Irp_1);
    assume {:nonnull} sdv_12 != 0;
    assume sdv_12 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    Status_1 := -1073741811;
    goto L40;

  anon17_Then:
    goto L39;
}



procedure {:origName "_sdv_init20"} _sdv_init20();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init20"} _sdv_init20()
{
  var vslice_dummy_var_6: int;

  anon0:
    call {:si_unique_call 31} vslice_dummy_var_6 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_7: int;

  anon0:
    call {:si_unique_call 32} vslice_dummy_var_7 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialFlush"} SerialFlush(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_17: int);
  modifies alloc, yogi_error, markedPending, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialFlush"} SerialFlush(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_17: int)
{
  var {:pointer} Tmp_18: int;
  var {:pointer} Tmp_19: int;
  var {:pointer} Tmp_20: int;
  var {:pointer} Tmp_21: int;
  var {:pointer} Extension: int;
  var {:scalar} sdv_25: int;
  var {:scalar} status_1: int;
  var {:pointer} Tmp_22: int;
  var {:pointer} Tmp_24: int;
  var {:pointer} DeviceObject_2: int;
  var {:pointer} Irp_2: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_9: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;
  var vslice_dummy_var_13: int;

  anon0:
    DeviceObject_2 := actual_DeviceObject_2;
    Irp_2 := actual_Irp_2;
    call {:si_unique_call 33} Tmp_18 := __HAVOC_malloc(84);
    call {:si_unique_call 34} Tmp_19 := __HAVOC_malloc(84);
    call {:si_unique_call 35} Tmp_20 := __HAVOC_malloc(72);
    call {:si_unique_call 36} Tmp_21 := __HAVOC_malloc(88);
    call {:si_unique_call 37} Tmp_22 := __HAVOC_malloc(96);
    call {:si_unique_call 38} Tmp_24 := __HAVOC_malloc(84);
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    havoc Extension;
    call {:si_unique_call 39} sdv_do_paged_code_check();
    Tmp_22 := strConst__li2bpl1;
    call {:si_unique_call 40} vslice_dummy_var_8 := SerialDbgPrintEx(9, Tmp_22);
    Tmp_21 := strConst__li2bpl4;
    call {:si_unique_call 41} vslice_dummy_var_9 := SerialDbgPrintEx(2, Tmp_21);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 42} status_1 := SerialIRPPrologue(Irp_2, Extension);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_1 != 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_1 >= 0;
    goto L29;

  L29:
    Tmp_18 := strConst__li2bpl5;
    call {:si_unique_call 43} vslice_dummy_var_10 := SerialDbgPrintEx(2, Tmp_18);
    Tmp_17 := status_1;
    goto L1;

  L1:
    call {:si_unique_call 44} SLIC_SerialFlush_exit(strConst__li2bpl0, Tmp_17);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} 0 > status_1;
    Tmp_20 := strConst__li2bpl2;
    call {:si_unique_call 45} vslice_dummy_var_11 := SerialDbgPrintEx(9, Tmp_20);
    call {:si_unique_call 46} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 47} SerialIRPEpilogue(Extension);
    goto L29;

  anon9_Then:
    assume {:partition} status_1 == 0;
    call {:si_unique_call 48} sdv_25 := SerialCompleteIfError(DeviceObject_2, Irp_2);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_25 != 0;
    Tmp_24 := strConst__li2bpl6;
    call {:si_unique_call 49} vslice_dummy_var_12 := SerialDbgPrintEx(2, Tmp_24);
    Tmp_17 := -1073741536;
    goto L1;

  anon10_Then:
    assume {:partition} sdv_25 == 0;
    assume {:nonnull} Extension != 0;
    assume Extension > 0;
    call {:si_unique_call 50} status_1 := SerialStartOrQueue(Extension, Irp_2, WriteQueue__SERIAL_DEVICE_EXTENSION(Extension), CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(Extension), li2bplFunctionConstant124);
    Tmp_19 := strConst__li2bpl7;
    call {:si_unique_call 51} vslice_dummy_var_13 := SerialDbgPrintEx(2, Tmp_19);
    Tmp_17 := status_1;
    goto L1;
}



procedure {:origName "SerialStartFlush"} SerialStartFlush(actual_Extension_1: int) returns (Tmp_25: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_25 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialStartFlush"} SerialStartFlush(actual_Extension_1: int) returns (Tmp_25: int)
{
  var {:pointer} NewIrp: int;
  var {:pointer} Tmp_26: int;
  var {:pointer} Extension_1: int;
  var vslice_dummy_var_14: int;

  anon0:
    call {:si_unique_call 52} NewIrp := __HAVOC_malloc(4);
    Extension_1 := actual_Extension_1;
    call {:si_unique_call 53} sdv_do_paged_code_check();
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc Tmp_26;
    assume {:nonnull} Tmp_26 != 0;
    assume Tmp_26 > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    call {:si_unique_call 54} SerialGetNextWrite(CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(Extension_1), WriteQueue__SERIAL_DEVICE_EXTENSION(Extension_1), NewIrp, 1, Extension_1);
    assume {:nonnull} NewIrp != 0;
    assume NewIrp > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 55} vslice_dummy_var_14 := SerialStartWrite#1(Extension_1);
    goto L12;

  L12:
    Tmp_25 := 0;
    return;

  anon3_Then:
    goto L12;
}



procedure {:origName "SerialGetRegistryKeyValue"} SerialGetRegistryKeyValue(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int, actual_Data: int, actual_DataLength: int) returns (Tmp_28: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_28 == -1073741811 || Tmp_28 == -1073741823 || Tmp_28 == 0 || Tmp_28 == 5 || Tmp_28 == -1073741789 || Tmp_28 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetRegistryKeyValue"} SerialGetRegistryKeyValue(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int, actual_Data: int, actual_DataLength: int) returns (Tmp_28: int)
{
  var {:pointer} Tmp_29: int;
  var {:pointer} Tmp_30: int;
  var {:pointer} Tmp_31: int;
  var {:pointer} fullInfo: int;
  var {:scalar} length: int;
  var {:pointer} sdv_29: int;
  var {:scalar} ntStatus: int;
  var {:scalar} keyName: int;
  var {:pointer} KeyNameString: int;
  var {:scalar} KeyNameStringLength: int;
  var {:scalar} DataLength: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 56} keyName := __HAVOC_malloc(12);
    KeyNameString := actual_KeyNameString;
    KeyNameStringLength := actual_KeyNameStringLength;
    DataLength := actual_DataLength;
    call {:si_unique_call 57} Tmp_30 := __HAVOC_malloc(124);
    call {:si_unique_call 58} Tmp_31 := __HAVOC_malloc(132);
    ntStatus := -1073741670;
    call {:si_unique_call 59} sdv_do_paged_code_check();
    Tmp_31 := strConst__li2bpl8;
    call {:si_unique_call 60} vslice_dummy_var_15 := SerialDbgPrintEx(2, Tmp_31);
    call {:si_unique_call 61} RtlInitUnicodeString(keyName, KeyNameString);
    length := 24 + KeyNameStringLength + DataLength;
    call {:si_unique_call 62} sdv_29 := ExAllocatePoolWithTag(1, length, -666022077);
    fullInfo := sdv_29;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} fullInfo != 0;
    call {:si_unique_call 63} Tmp_29 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    call {:si_unique_call 64} ntStatus := ZwQueryValueKey(0, 0, 1, 0, length, Tmp_29);
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    havoc length;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} ntStatus >= 0;
    assume {:nonnull} fullInfo != 0;
    assume fullInfo > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} fullInfo != 0;
    assume fullInfo > 0;
    havoc vslice_dummy_var_9;
    call {:si_unique_call 65} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_9);
    goto L31;

  L31:
    call {:si_unique_call 66} sdv_ExFreePool(0);
    goto L23;

  L23:
    Tmp_30 := strConst__li2bpl9;
    call {:si_unique_call 67} vslice_dummy_var_16 := SerialDbgPrintEx(2, Tmp_30);
    Tmp_28 := ntStatus;
    return;

  anon8_Then:
    goto L31;

  anon7_Then:
    assume {:partition} 0 > ntStatus;
    goto L31;

  anon9_Then:
    assume {:partition} fullInfo == 0;
    goto L23;
}



procedure {:origName "SerialPutRegistryKeyValue"} SerialPutRegistryKeyValue(actual_Handle_1: int, actual_PKeyNameString: int, actual_KeyNameStringLength_1: int, actual_Dtype: int, actual_PData: int, actual_DataLength_1: int) returns (Tmp_33: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_33 == -1073741790 || Tmp_33 == -1073741816 || Tmp_33 == -1073741823 || Tmp_33 == 0 || Tmp_33 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialPutRegistryKeyValue"} SerialPutRegistryKeyValue(actual_Handle_1: int, actual_PKeyNameString: int, actual_KeyNameStringLength_1: int, actual_Dtype: int, actual_PData: int, actual_DataLength_1: int) returns (Tmp_33: int)
{
  var {:scalar} Tmp_35: int;
  var {:pointer} Tmp_36: int;
  var {:pointer} sdv_33: int;
  var {:pointer} Tmp_37: int;
  var {:scalar} status_2: int;
  var {:scalar} keyname: int;
  var {:scalar} KeyNameStringLength_1: int;
  var {:scalar} Dtype: int;
  var {:scalar} DataLength_1: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;

  anon0:
    call {:si_unique_call 68} keyname := __HAVOC_malloc(12);
    KeyNameStringLength_1 := actual_KeyNameStringLength_1;
    Dtype := actual_Dtype;
    DataLength_1 := actual_DataLength_1;
    call {:si_unique_call 69} Tmp_36 := __HAVOC_malloc(124);
    call {:si_unique_call 70} Tmp_37 := __HAVOC_malloc(132);
    call {:si_unique_call 71} sdv_do_paged_code_check();
    Tmp_37 := strConst__li2bpl10;
    call {:si_unique_call 72} vslice_dummy_var_18 := SerialDbgPrintEx(2, Tmp_37);
    call {:si_unique_call 73} RtlInitUnicodeString(keyname, 0);
    assume {:nonnull} keyname != 0;
    assume keyname > 0;
    assume {:nonnull} keyname != 0;
    assume keyname > 0;
    havoc Tmp_35;
    call {:si_unique_call 74} sdv_33 := ExAllocatePoolWithTag(1, Tmp_35, -666022077);
    assume {:nonnull} keyname != 0;
    assume keyname > 0;
    assume {:nonnull} keyname != 0;
    assume keyname > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 75} vslice_dummy_var_17 := corral_nondet();
    call {:si_unique_call 76} status_2 := ZwSetValueKey(0, 0, 0, Dtype, 0, DataLength_1);
    call {:si_unique_call 77} sdv_ExFreePool(0);
    Tmp_36 := strConst__li2bpl11;
    call {:si_unique_call 78} vslice_dummy_var_19 := SerialDbgPrintEx(2, Tmp_36);
    Tmp_33 := status_2;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_33 := -1073741670;
    goto L1;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_20: int;

  anon0:
    call {:si_unique_call 79} vslice_dummy_var_20 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialGetConfigDefaults"} SerialGetConfigDefaults(actual_DriverDefaultsPtr: int, actual_RegistryPath: int) returns (Tmp_40: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_40 == 0 || Tmp_40 == -1073741823 || Tmp_40 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetConfigDefaults"} SerialGetConfigDefaults(actual_DriverDefaultsPtr: int, actual_RegistryPath: int) returns (Tmp_40: int)
{
  var {:pointer} paramTable: int;
  var {:scalar} Tmp_43: int;
  var {:dopa} {:scalar} DbgDefault: int;
  var {:pointer} sdv_37: int;
  var {:scalar} Status_2: int;
  var {:dopa} {:scalar} DetectDefault: int;
  var {:scalar} Tmp_46: int;
  var {:dopa} {:scalar} notThereDefault: int;
  var {:scalar} Tmp_50: int;
  var {:pointer} path: int;
  var {:dopa} {:scalar} zero: int;
  var {:pointer} DriverDefaultsPtr: int;
  var {:pointer} RegistryPath: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;

  anon0:
    call {:si_unique_call 80} DbgDefault := __HAVOC_malloc(4);
    call {:si_unique_call 81} DetectDefault := __HAVOC_malloc(4);
    call {:si_unique_call 82} notThereDefault := __HAVOC_malloc(4);
    call {:si_unique_call 83} zero := __HAVOC_malloc(4);
    DriverDefaultsPtr := actual_DriverDefaultsPtr;
    RegistryPath := actual_RegistryPath;
    call {:si_unique_call 84} paramTable := __HAVOC_malloc(252);
    call {:si_unique_call 85} vslice_dummy_var_21 := __HAVOC_malloc(28);
    call {:si_unique_call 86} vslice_dummy_var_22 := __HAVOC_malloc(64);
    call {:si_unique_call 87} vslice_dummy_var_23 := __HAVOC_malloc(48);
    call {:si_unique_call 88} vslice_dummy_var_24 := __HAVOC_malloc(32);
    call {:si_unique_call 89} vslice_dummy_var_25 := __HAVOC_malloc(28);
    Status_2 := 0;
    assume {:nonnull} zero != 0;
    assume zero > 0;
    assume {:nonnull} DbgDefault != 0;
    assume DbgDefault > 0;
    assume {:nonnull} DetectDefault != 0;
    assume DetectDefault > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    call {:si_unique_call 90} sdv_do_paged_code_check();
    assume {:nonnull} RegistryPath != 0;
    assume RegistryPath > 0;
    havoc Tmp_50;
    call {:si_unique_call 91} sdv_37 := ExAllocatePoolWithTag(1, Tmp_50, -666022077);
    path := sdv_37;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} path != 0;
    call {:si_unique_call 92} sdv_RtlZeroMemory(0, 76);
    call {:si_unique_call 93} sdv_RtlZeroMemory(0, 252);
    assume {:nonnull} RegistryPath != 0;
    assume RegistryPath > 0;
    havoc Tmp_46;
    call {:si_unique_call 94} sdv_RtlZeroMemory(0, Tmp_46);
    assume {:nonnull} RegistryPath != 0;
    assume RegistryPath > 0;
    havoc Tmp_43;
    call {:si_unique_call 95} sdv_RtlMoveMemory(0, 0, Tmp_43);
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    call {:si_unique_call 96} Status_2 := sdv_RtlQueryRegistryValues(0, 0, 0, 0, 0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Status_2 >= 0;
    goto L95;

  L95:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    call {:si_unique_call 97} vslice_dummy_var_26 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    goto L96;

  L96:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    call {:si_unique_call 98} vslice_dummy_var_27 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    goto L101;

  L101:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    call {:si_unique_call 99} vslice_dummy_var_28 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    goto L106;

  L106:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    call {:si_unique_call 100} vslice_dummy_var_29 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    goto L111;

  L111:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    call {:si_unique_call 101} vslice_dummy_var_30 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    goto L116;

  L116:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} path != 0;
    call {:si_unique_call 102} sdv_ExFreePool(0);
    goto L122;

  L122:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    Tmp_40 := Status_2;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} path == 0;
    goto L122;

  anon22_Then:
    goto L116;

  anon21_Then:
    goto L111;

  anon20_Then:
    goto L106;

  anon19_Then:
    goto L101;

  anon18_Then:
    goto L96;

  anon17_Then:
    assume {:partition} 0 > Status_2;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    goto L95;

  anon24_Then:
    assume {:partition} path == 0;
    Status_2 := -1073741670;
    Tmp_40 := Status_2;
    goto L1;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_31: int;

  anon0:
    call {:si_unique_call 103} vslice_dummy_var_31 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialDoExternalNaming"} SerialDoExternalNaming(actual_PDevExt: int, actual_PDrvObj: int) returns (Tmp_54: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_54 == -1073741811 || Tmp_54 == -1073741808 || Tmp_54 == -1073741823 || Tmp_54 == 0 || Tmp_54 == 5 || Tmp_54 == -1073741789 || Tmp_54 == -1073741670 || Tmp_54 == -1073741772 || Tmp_54 == -1073741824;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialDoExternalNaming"} SerialDoExternalNaming(actual_PDevExt: int, actual_PDrvObj: int) returns (Tmp_54: int)
{
  var {:pointer} Tmp_55: int;
  var {:scalar} bufLen: int;
  var {:scalar} Tmp_56: int;
  var {:pointer} keyHandle: int;
  var {:pointer} Tmp_57: int;
  var {:pointer} Tmp_58: int;
  var {:pointer} Tmp_60: int;
  var {:scalar} Tmp_62: int;
  var {:scalar} Tmp_63: int;
  var {:pointer} Tmp_64: int;
  var {:scalar} Tmp_65: int;
  var {:scalar} Tmp_67: int;
  var {:pointer} pRegName: int;
  var {:scalar} sdv_51: int;
  var {:scalar} Tmp_69: int;
  var {:pointer} sdv_53: int;
  var {:scalar} Tmp_72: int;
  var {:pointer} Tmp_74: int;
  var {:pointer} Tmp_75: int;
  var {:scalar} Tmp_77: int;
  var {:pointer} sdv_63: int;
  var {:scalar} status_3: int;
  var {:pointer} Tmp_81: int;
  var {:pointer} pDevObj: int;
  var {:scalar} Tmp_82: int;
  var {:scalar} Tmp_83: int;
  var {:scalar} Tmp_85: int;
  var {:pointer} Tmp_86: int;
  var {:scalar} Tmp_87: int;
  var {:pointer} PDevExt: int;
  var {:pointer} PDrvObj: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 104} Tmp_63 := __HAVOC_malloc(20);
    call {:si_unique_call 105} Tmp_67 := __HAVOC_malloc(20);
    call {:si_unique_call 106} pRegName := __HAVOC_malloc(4);
    call {:si_unique_call 107} Tmp_69 := __HAVOC_malloc(20);
    call {:si_unique_call 108} Tmp_72 := __HAVOC_malloc(20);
    call {:si_unique_call 109} Tmp_77 := __HAVOC_malloc(20);
    call {:si_unique_call 110} Tmp_83 := __HAVOC_malloc(20);
    call {:si_unique_call 111} Tmp_85 := __HAVOC_malloc(20);
    call {:si_unique_call 112} Tmp_87 := __HAVOC_malloc(20);
    PDevExt := actual_PDevExt;
    PDrvObj := actual_PDrvObj;
    call {:si_unique_call 113} Tmp_55 := __HAVOC_malloc(184);
    call {:si_unique_call 114} Tmp_57 := __HAVOC_malloc(64);
    call {:si_unique_call 115} Tmp_58 := __HAVOC_malloc(236);
    call {:si_unique_call 116} Tmp_60 := __HAVOC_malloc(156);
    call {:si_unique_call 117} Tmp_64 := __HAVOC_malloc(156);
    call {:si_unique_call 118} vslice_dummy_var_37 := __HAVOC_malloc(44);
    call {:si_unique_call 119} Tmp_74 := __HAVOC_malloc(100);
    call {:si_unique_call 120} vslice_dummy_var_38 := __HAVOC_malloc(44);
    call {:si_unique_call 121} Tmp_81 := __HAVOC_malloc(192);
    call {:si_unique_call 122} Tmp_86 := __HAVOC_malloc(200);
    status_3 := 0;
    assume {:nonnull} pRegName != 0;
    assume pRegName > 0;
    call {:si_unique_call 123} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc pDevObj;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 124} status_3 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_3 != 0;
    Tmp_54 := status_3;
    goto L1;

  L1:
    return;

  anon35_Then:
    assume {:partition} status_3 == 0;
    Tmp_74 := strConst__li2bpl20;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 125} vslice_dummy_var_39 := SerialGetRegistryKeyValue(keyHandle, Tmp_74, 50, SkipNaming__SERIAL_DEVICE_EXTENSION(PDevExt), 4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 126} vslice_dummy_var_32 := ZwClose(0);
    Tmp_54 := 0;
    goto L1;

  anon36_Then:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 127} status_3 := SerialReadSymName(PDevExt, keyHandle, SymbolicLinkName__SERIAL_DEVICE_EXTENSION(PDevExt), pRegName);
    call {:si_unique_call 128} vslice_dummy_var_33 := ZwClose(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_3 < 0;
    goto L111;

  L111:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_3 >= 0;
    goto L113;

  L113:
    assume {:nonnull} pRegName != 0;
    assume pRegName > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    call {:si_unique_call 129} sdv_ExFreePool(0);
    goto L114;

  L114:
    Tmp_54 := status_3;
    goto L1;

  anon44_Then:
    goto L114;

  anon42_Then:
    assume {:partition} 0 > status_3;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 130} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L118;

  L118:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 131} vslice_dummy_var_35 := IoDeleteSymbolicLink(0);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L123;

  L123:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 132} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L128;

  L128:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 133} vslice_dummy_var_42 := RtlDeleteRegistryValue(4, 0, 0);
    goto L133;

  L133:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    call {:si_unique_call 134} vslice_dummy_var_36 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 135} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L137;

  L137:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 136} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L113;

  anon49_Then:
    goto L113;

  anon48_Then:
    goto L137;

  anon47_Then:
    goto L133;

  anon46_Then:
    goto L128;

  anon45_Then:
    goto L123;

  anon43_Then:
    goto L118;

  anon37_Then:
    assume {:partition} 0 <= status_3;
    bufLen := sdv_51 * 2 + 2;
    call {:si_unique_call 137} sdv_63 := ExAllocatePoolWithTag(1, bufLen, -666022077);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 138} sdv_RtlZeroMemory(0, bufLen);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 139} vslice_dummy_var_40 := corral_nondet();
    call {:si_unique_call 140} sdv_53 := ExAllocatePoolWithTag(1, 66, -666022077);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc Tmp_65;
    call {:si_unique_call 141} sdv_RtlZeroMemory(0, Tmp_65);
    call {:si_unique_call 142} vslice_dummy_var_34 := corral_nondet();
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc Tmp_75;
    call {:si_unique_call 143} sdv_RtlZeroMemory(0, 2);
    Tmp_57 := strConst__li2bpl21;
    call {:si_unique_call 144} vslice_dummy_var_41 := SerialDbgPrintEx(4, Tmp_57);
    call {:si_unique_call 145} status_3 := IoCreateSymbolicLink(0, 0);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc Tmp_82;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 146} status_3 := RtlWriteRegistryValue(4, 0, 0, 1, 0, Tmp_82);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 147} status_3 := IoRegisterDeviceInterface(0, 0, 0, DeviceClassSymbolicName__SERIAL_DEVICE_EXTENSION(PDevExt));
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_3 >= 0;
    call {:si_unique_call 148} status_3 := IoSetDeviceInterfaceState(0, 1);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_3 >= 0;
    goto L111;

  anon41_Then:
    assume {:partition} 0 > status_3;
    Tmp_55 := strConst__li2bpl23;
    call {:si_unique_call 149} vslice_dummy_var_43 := SerialDbgPrintEx(14, Tmp_55);
    goto L111;

  anon40_Then:
    assume {:partition} 0 > status_3;
    Tmp_86 := strConst__li2bpl22;
    call {:si_unique_call 150} vslice_dummy_var_44 := SerialDbgPrintEx(14, Tmp_86);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L111;

  anon39_Then:
    assume {:partition} 0 > status_3;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc Tmp_62;
    assume {:nonnull} Tmp_72 != 0;
    assume Tmp_72 > 0;
    assume {:nonnull} Tmp_72 != 0;
    assume Tmp_72 > 0;
    assume {:nonnull} Tmp_72 != 0;
    assume Tmp_72 > 0;
    assume {:nonnull} Tmp_72 != 0;
    assume Tmp_72 > 0;
    assume {:nonnull} Tmp_72 != 0;
    assume Tmp_72 > 0;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_10;
    call {:si_unique_call 151} SerialLogError(PDrvObj, pDevObj, Tmp_87, Tmp_72, 0, 0, 0, 53, status_3, 393221, Tmp_62, vslice_dummy_var_10, 0, 0);
    Tmp_58 := strConst__li2bpl25;
    call {:si_unique_call 152} vslice_dummy_var_45 := SerialDbgPrintEx(14, Tmp_58);
    goto L111;

  anon38_Then:
    assume {:partition} 0 > status_3;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_11;
    call {:si_unique_call 153} SerialLogError(PDrvObj, pDevObj, Tmp_85, Tmp_63, 0, 0, 0, 52, status_3, 393220, Tmp_56, vslice_dummy_var_11, 0, 0);
    Tmp_81 := strConst__li2bpl26;
    call {:si_unique_call 154} vslice_dummy_var_46 := SerialDbgPrintEx(14, Tmp_81);
    goto L111;

  anon51_Then:
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    call {:si_unique_call 155} SerialLogError(PDrvObj, pDevObj, Tmp_83, Tmp_77, 0, 0, 0, 19, 0, -1073348600, 0, 0, 0, 0);
    Tmp_60 := strConst__li2bpl27;
    call {:si_unique_call 156} vslice_dummy_var_47 := SerialDbgPrintEx(14, Tmp_60);
    status_3 := -1073741670;
    goto L111;

  anon50_Then:
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    call {:si_unique_call 157} SerialLogError(PDrvObj, pDevObj, Tmp_67, Tmp_69, 0, 0, 0, 19, 0, -1073348600, 0, 0, 0, 0);
    Tmp_64 := strConst__li2bpl28;
    call {:si_unique_call 158} vslice_dummy_var_48 := SerialDbgPrintEx(14, Tmp_64);
    status_3 := -1073741670;
    goto L111;
}



procedure {:origName "SerialCreateDevObj"} SerialCreateDevObj(actual_DriverObject: int, actual_NewDeviceObject: int) returns (Tmp_88: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_88 == 0 || Tmp_88 == -1073741670 || Tmp_88 == -1073741824 || Tmp_88 == -1073741771 || Tmp_88 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialCreateDevObj"} SerialCreateDevObj(actual_DriverObject: int, actual_NewDeviceObject: int) returns (Tmp_88: int)
{
  var {:scalar} instanceStr: int;
  var {:pointer} Tmp_89: int;
  var {:pointer} deviceObject: int;
  var {:scalar} Tmp_90: int;
  var {:pointer} Tmp_91: int;
  var {:pointer} instanceNumberBuffer: int;
  var {:scalar} Tmp_92: int;
  var {:pointer} Tmp_93: int;
  var {:pointer} pDevExt: int;
  var {:scalar} deviceObjName: int;
  var {:scalar} Tmp_94: int;
  var {:pointer} Tmp_95: int;
  var {:scalar} Tmp_96: int;
  var {:pointer} Tmp_97: int;
  var {:pointer} sdv_73: int;
  var {:pointer} sdv_74: int;
  var {:scalar} Tmp_99: int;
  var {:scalar} Tmp_100: int;
  var {:pointer} Tmp_101: int;
  var {:scalar} Tmp_102: int;
  var {:pointer} Tmp_103: int;
  var {:scalar} Tmp_104: int;
  var {:scalar} status_4: int;
  var {:scalar} Tmp_106: int;
  var {:scalar} Tmp_107: int;
  var {:pointer} Tmp_108: int;
  var {:pointer} DriverObject: int;
  var {:pointer} NewDeviceObject: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 159} instanceStr := __HAVOC_malloc(12);
    call {:si_unique_call 160} deviceObject := __HAVOC_malloc(4);
    call {:si_unique_call 161} deviceObjName := __HAVOC_malloc(12);
    call {:si_unique_call 162} Tmp_94 := __HAVOC_malloc(20);
    call {:si_unique_call 163} Tmp_96 := __HAVOC_malloc(20);
    call {:si_unique_call 164} Tmp_100 := __HAVOC_malloc(20);
    call {:si_unique_call 165} Tmp_104 := __HAVOC_malloc(20);
    DriverObject := actual_DriverObject;
    NewDeviceObject := actual_NewDeviceObject;
    call {:si_unique_call 166} Tmp_89 := __HAVOC_malloc(180);
    call {:si_unique_call 167} Tmp_91 := __HAVOC_malloc(168);
    call {:si_unique_call 168} instanceNumberBuffer := __HAVOC_malloc(80);
    call {:si_unique_call 169} Tmp_93 := __HAVOC_malloc(164);
    call {:si_unique_call 170} Tmp_97 := __HAVOC_malloc(156);
    call {:si_unique_call 171} Tmp_101 := __HAVOC_malloc(100);
    call {:si_unique_call 172} Tmp_103 := __HAVOC_malloc(104);
    call {:si_unique_call 173} vslice_dummy_var_51 := __HAVOC_malloc(60);
    call {:si_unique_call 174} Tmp_108 := __HAVOC_malloc(104);
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    status_4 := 0;
    call {:si_unique_call 175} sdv_do_paged_code_check();
    Tmp_101 := strConst__li2bpl29;
    call {:si_unique_call 176} vslice_dummy_var_52 := SerialDbgPrintEx(11, Tmp_101);
    call {:si_unique_call 177} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_106;
    call {:si_unique_call 178} sdv_74 := ExAllocatePoolWithTag(1, Tmp_106, -666022077);
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_99;
    call {:si_unique_call 179} sdv_RtlZeroMemory(0, Tmp_99);
    call {:si_unique_call 180} vslice_dummy_var_53 := corral_nondet();
    call {:si_unique_call 181} RtlInitUnicodeString(instanceStr, 0);
    assume {:nonnull} instanceStr != 0;
    assume instanceStr > 0;
    assume {:nonnull} instanceStr != 0;
    assume instanceStr > 0;
    havoc Tmp_107;
    Tmp_92 := Tmp_107;
    call {:si_unique_call 182} vslice_dummy_var_54 := RtlIntegerToUnicodeString(Tmp_92, 10, 0);
    call {:si_unique_call 183} vslice_dummy_var_49 := corral_nondet();
    call {:si_unique_call 184} status_4 := IoCreateDevice(0, 1656, 0, 27, 256, 1, deviceObject);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_4 >= 0;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    havoc pDevExt;
    call {:si_unique_call 185} sdv_RtlZeroMemory(0, 1656);
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_90;
    call {:si_unique_call 186} sdv_73 := ExAllocatePoolWithTag(1, Tmp_90, -666022077);
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc Tmp_102;
    call {:si_unique_call 187} sdv_RtlZeroMemory(0, Tmp_102);
    call {:si_unique_call 188} vslice_dummy_var_50 := corral_nondet();
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 189} InitializeListHead(CommonInterruptObject__SERIAL_DEVICE_EXTENSION(pDevExt));
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 190} InitializeListHead(TopLevelSharers__SERIAL_DEVICE_EXTENSION(pDevExt));
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 191} InitializeListHead(MultiportSiblings__SERIAL_DEVICE_EXTENSION(pDevExt));
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 192} InitializeListHead(AllDevObjs__SERIAL_DEVICE_EXTENSION(pDevExt));
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 193} InitializeListHead(ReadQueue__SERIAL_DEVICE_EXTENSION(pDevExt));
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 194} InitializeListHead(WriteQueue__SERIAL_DEVICE_EXTENSION(pDevExt));
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 195} InitializeListHead(MaskQueue__SERIAL_DEVICE_EXTENSION(pDevExt));
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 196} InitializeListHead(PurgeQueue__SERIAL_DEVICE_EXTENSION(pDevExt));
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 197} InitializeListHead(StalledIrpQueue__SERIAL_DEVICE_EXTENSION(pDevExt));
    call {:si_unique_call 198} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 199} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 200} Tmp_95 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 201} sdv_KeInitializeSpinLock(Tmp_95);
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 202} Tmp_95 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 203} sdv_KeInitializeSpinLock(Tmp_95);
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 204} KeInitializeEvent(PendingIRPEvent__SERIAL_DEVICE_EXTENSION(pDevExt), 1, 0);
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 205} KeInitializeEvent(PendingDpcEvent__SERIAL_DEVICE_EXTENSION(pDevExt), 1, 0);
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 206} KeInitializeEvent(PowerD0Event__SERIAL_DEVICE_EXTENSION(pDevExt), 1, 0);
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    assume {:nonnull} NewDeviceObject != 0;
    assume NewDeviceObject > 0;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    call {:si_unique_call 207} sdv_ExFreePool(0);
    Tmp_108 := strConst__li2bpl32;
    call {:si_unique_call 208} vslice_dummy_var_55 := SerialDbgPrintEx(11, Tmp_108);
    Tmp_88 := 0;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    call {:si_unique_call 209} SerialLogError(DriverObject, 0, Tmp_94, Tmp_104, 0, 0, 0, 19, 0, -1073348600, 0, 0, 0, 0);
    Tmp_93 := strConst__li2bpl33;
    call {:si_unique_call 210} vslice_dummy_var_56 := SerialDbgPrintEx(14, Tmp_93);
    status_4 := -1073741670;
    goto L154;

  L154:
    Tmp_97 := strConst__li2bpl34;
    call {:si_unique_call 211} vslice_dummy_var_57 := SerialDbgPrintEx(14, Tmp_97);
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 212} sdv_ExFreePool(0);
    goto L158;

  L158:
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 213} sdv_ExFreePool(0);
    goto L164;

  L164:
    call {:si_unique_call 214} IoDeleteDevice(0);
    goto L162;

  L162:
    assume {:nonnull} NewDeviceObject != 0;
    assume NewDeviceObject > 0;
    Tmp_103 := strConst__li2bpl32;
    call {:si_unique_call 215} vslice_dummy_var_58 := SerialDbgPrintEx(11, Tmp_103);
    Tmp_88 := status_4;
    goto L1;

  anon16_Then:
    goto L164;

  anon15_Then:
    goto L162;

  anon14_Then:
    goto L158;

  anon13_Then:
    assume {:partition} 0 > status_4;
    Tmp_89 := strConst__li2bpl31;
    call {:si_unique_call 216} vslice_dummy_var_59 := SerialDbgPrintEx(14, Tmp_89);
    goto L154;

  anon17_Then:
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    call {:si_unique_call 217} SerialLogError(DriverObject, 0, Tmp_96, Tmp_100, 0, 0, 0, 19, 0, -1073348600, 0, 0, 0, 0);
    Tmp_91 := strConst__li2bpl35;
    call {:si_unique_call 218} vslice_dummy_var_60 := SerialDbgPrintEx(14, Tmp_91);
    Tmp_88 := -1073741670;
    goto L1;
}



procedure {:origName "SerialAddToAllDevs"} SerialAddToAllDevs(actual_PListEntry: int);
  modifies alloc, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialAddToAllDevs"} SerialAddToAllDevs(actual_PListEntry: int)
{
  var {:pointer} Tmp_109: int;
  var {:scalar} oldIrql: int;
  var {:pointer} PListEntry: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;

  anon0:
    call {:si_unique_call 219} vslice_dummy_var_61 := __HAVOC_malloc(4);
    PListEntry := actual_PListEntry;
    call {:si_unique_call 220} Tmp_109 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    call {:si_unique_call 221} sdv_KeAcquireSpinLock(0, Tmp_109);
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    havoc oldIrql;
    call {:si_unique_call 222} vslice_dummy_var_62 := sdv_InsertTailList(AllDevObjs__SERIAL_GLOBALS(SerialGlobals), PListEntry);
    call {:si_unique_call 223} sdv_KeReleaseSpinLock(0, oldIrql);
    return;
}



procedure {:origName "SerialReadSymName"} SerialReadSymName(actual_PDevExt_1: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_111: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_111 == -1073741811 || Tmp_111 == -1073741823 || Tmp_111 == 0 || Tmp_111 == 5 || Tmp_111 == -1073741789 || Tmp_111 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialReadSymName"} SerialReadSymName(actual_PDevExt_1: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_111: int)
{
  var {:scalar} Tmp_112: int;
  var {:scalar} Tmp_114: int;
  var {:scalar} linkName: int;
  var {:pointer} Tmp_115: int;
  var {:pointer} sdv_84: int;
  var {:scalar} Tmp_118: int;
  var {:scalar} Tmp_119: int;
  var {:pointer} Tmp_120: int;
  var {:scalar} Tmp_121: int;
  var {:pointer} sdv_86: int;
  var {:scalar} Tmp_122: int;
  var {:pointer} sdv_88: int;
  var {:scalar} Tmp_123: int;
  var {:pointer} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_126: int;
  var {:pointer} Tmp_127: int;
  var {:scalar} status_5: int;
  var {:pointer} pDevObj_1: int;
  var {:pointer} pDrvObj: int;
  var {:scalar} Tmp_129: int;
  var {:pointer} PDevExt_1: int;
  var {:pointer} hRegKey: int;
  var {:pointer} PSymName: int;
  var {:pointer} PpRegName: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_12: int;
  var vslice_dummy_var_13: int;

  anon0:
    call {:si_unique_call 224} Tmp_112 := __HAVOC_malloc(20);
    call {:si_unique_call 225} Tmp_114 := __HAVOC_malloc(20);
    call {:si_unique_call 226} linkName := __HAVOC_malloc(12);
    call {:si_unique_call 227} Tmp_122 := __HAVOC_malloc(20);
    call {:si_unique_call 228} Tmp_129 := __HAVOC_malloc(20);
    PDevExt_1 := actual_PDevExt_1;
    hRegKey := actual_hRegKey;
    PSymName := actual_PSymName;
    PpRegName := actual_PpRegName;
    call {:si_unique_call 229} vslice_dummy_var_65 := __HAVOC_malloc(8);
    call {:si_unique_call 230} Tmp_115 := __HAVOC_malloc(168);
    call {:si_unique_call 231} vslice_dummy_var_66 := __HAVOC_malloc(44);
    call {:si_unique_call 232} Tmp_120 := __HAVOC_malloc(164);
    call {:si_unique_call 233} Tmp_124 := __HAVOC_malloc(148);
    call {:si_unique_call 234} Tmp_125 := __HAVOC_malloc(36);
    call {:si_unique_call 235} Tmp_126 := __HAVOC_malloc(44);
    call {:si_unique_call 236} Tmp_127 := __HAVOC_malloc(60);
    call {:si_unique_call 237} vslice_dummy_var_67 := __HAVOC_malloc(8);
    assume {:nonnull} PDevExt_1 != 0;
    assume PDevExt_1 > 0;
    havoc pDevObj_1;
    assume {:nonnull} pDevObj_1 != 0;
    assume pDevObj_1 > 0;
    havoc pDrvObj;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    call {:si_unique_call 238} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_119;
    call {:si_unique_call 239} sdv_84 := ExAllocatePoolWithTag(257, Tmp_119, -666022077);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_118;
    call {:si_unique_call 240} sdv_RtlZeroMemory(0, Tmp_118);
    call {:si_unique_call 241} sdv_88 := ExAllocatePoolWithTag(257, 258, -666022077);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_125 := strConst__li2bpl36;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_12;
    call {:si_unique_call 242} status_5 := SerialGetRegistryKeyValue(hRegKey, Tmp_125, 18, vslice_dummy_var_12, 256);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_5 >= 0;
    goto L39;

  L39:
    call {:si_unique_call 243} vslice_dummy_var_68 := corral_nondet();
    call {:si_unique_call 244} vslice_dummy_var_69 := corral_nondet();
    call {:si_unique_call 245} vslice_dummy_var_70 := corral_nondet();
    call {:si_unique_call 246} vslice_dummy_var_63 := corral_nondet();
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_121;
    call {:si_unique_call 247} sdv_86 := ExAllocatePoolWithTag(257, Tmp_121, -666022077);
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_123;
    call {:si_unique_call 248} sdv_RtlZeroMemory(0, Tmp_123);
    call {:si_unique_call 249} vslice_dummy_var_64 := corral_nondet();
    Tmp_127 := strConst__li2bpl40;
    call {:si_unique_call 250} vslice_dummy_var_71 := SerialDbgPrintEx(4, Tmp_127);
    goto L69;

  L69:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 251} sdv_ExFreePool(0);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto L70;

  L70:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_5 >= 0;
    goto L76;

  L76:
    Tmp_111 := status_5;
    return;

  anon19_Then:
    assume {:partition} 0 > status_5;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 252} sdv_ExFreePool(0);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto L76;

  anon20_Then:
    goto L76;

  anon18_Then:
    goto L70;

  anon24_Then:
    status_5 := -1073741670;
    goto L69;

  anon17_Then:
    assume {:partition} 0 > status_5;
    Tmp_126 := strConst__li2bpl37;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_13;
    call {:si_unique_call 253} status_5 := SerialGetRegistryKeyValue(hRegKey, Tmp_126, 22, vslice_dummy_var_13, 256);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_5 < 0;
    Tmp_120 := strConst__li2bpl41;
    call {:si_unique_call 254} vslice_dummy_var_72 := SerialDbgPrintEx(14, Tmp_120);
    goto L69;

  anon21_Then:
    assume {:partition} 0 <= status_5;
    goto L39;

  anon23_Then:
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    call {:si_unique_call 255} SerialLogError(pDrvObj, pDevObj_1, Tmp_112, Tmp_122, 0, 0, 0, 19, 0, -1073348600, 0, 0, 0, 0);
    Tmp_124 := strConst__li2bpl42;
    call {:si_unique_call 256} vslice_dummy_var_73 := SerialDbgPrintEx(14, Tmp_124);
    status_5 := -1073741670;
    goto L69;

  anon22_Then:
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    call {:si_unique_call 257} SerialLogError(pDrvObj, pDevObj_1, Tmp_114, Tmp_129, 0, 0, 0, 19, 0, -1073348600, 0, 0, 0, 0);
    Tmp_115 := strConst__li2bpl35;
    call {:si_unique_call 258} vslice_dummy_var_74 := SerialDbgPrintEx(14, Tmp_115);
    status_5 := -1073741670;
    goto L69;
}



procedure {:origName "SerialGetPortInfo"} SerialGetPortInfo(actual_PDevObj: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig: int, actual_PUserData: int) returns (Tmp_130: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_130 == -1073348588 || Tmp_130 == -1073348587 || Tmp_130 == -1073348586 || Tmp_130 == -1073348585 || Tmp_130 == -1073348584 || Tmp_130 == 0 || Tmp_130 == -1073348583 || Tmp_130 == -1073741811 || Tmp_130 == -1073741808 || Tmp_130 == -1073741823 || Tmp_130 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetPortInfo"} SerialGetPortInfo(actual_PDevObj: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig: int, actual_PUserData: int) returns (Tmp_130: int)
{
  var {:dopa} {:scalar} ioResIndex: int;
  var {:dopa} {:scalar} isMulti: int;
  var {:scalar} interfaceType: int;
  var {:scalar} count: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} gotIO: int;
  var {:scalar} Tmp_132: int;
  var {:pointer} Tmp_133: int;
  var {:pointer} Tmp_134: int;
  var {:pointer} pPartialTrResourceDesc: int;
  var {:pointer} pDevExt_1: int;
  var {:pointer} Tmp_135: int;
  var {:pointer} Tmp_136: int;
  var {:scalar} Tmp_137: int;
  var {:pointer} Tmp_138: int;
  var {:scalar} Tmp_139: int;
  var {:scalar} Tmp_140: int;
  var {:pointer} Tmp_141: int;
  var {:scalar} Tmp_142: int;
  var {:pointer} pFullResourceDesc: int;
  var {:pointer} Tmp_143: int;
  var {:pointer} Tmp_144: int;
  var {:pointer} Tmp_145: int;
  var {:scalar} Tmp_146: int;
  var {:pointer} Tmp_147: int;
  var {:scalar} Tmp_148: int;
  var {:scalar} foundOne: int;
  var {:scalar} curIoIndex: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:scalar} gotInt: int;
  var {:scalar} badValue: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} pPartialTrResourceList: int;
  var {:pointer} Tmp_153: int;
  var {:scalar} i: int;
  var {:scalar} defaultInterfaceType: int;
  var {:pointer} pPartialResourceList: int;
  var {:pointer} pFullTrResourceDesc: int;
  var {:pointer} Tmp_154: int;
  var {:scalar} Tmp_155: int;
  var {:pointer} Tmp_156: int;
  var {:pointer} Tmp_157: int;
  var {:scalar} Tmp_158: int;
  var {:scalar} Tmp_159: int;
  var {:scalar} Tmp_160: int;
  var {:pointer} Tmp_161: int;
  var {:pointer} keyHandle_1: int;
  var {:pointer} Tmp_162: int;
  var {:scalar} defaultClockRate: int;
  var {:pointer} Tmp_163: int;
  var {:pointer} Tmp_164: int;
  var {:pointer} Tmp_165: int;
  var {:pointer} Tmp_166: int;
  var {:pointer} Tmp_167: int;
  var {:scalar} Tmp_168: int;
  var {:scalar} Tmp_169: int;
  var {:pointer} Tmp_170: int;
  var {:pointer} sDeviceData: int;
  var {:pointer} Tmp_171: int;
  var {:scalar} gotISR: int;
  var {:pointer} Tmp_172: int;
  var {:pointer} Tmp_173: int;
  var {:pointer} Tmp_175: int;
  var {:scalar} foundIt: int;
  var {:scalar} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:scalar} Tmp_178: int;
  var {:pointer} Tmp_179: int;
  var {:scalar} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:scalar} status_6: int;
  var {:scalar} Tmp_183: int;
  var {:scalar} Tmp_184: int;
  var {:scalar} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:scalar} gotMem: int;
  var {:pointer} Tmp_187: int;
  var {:pointer} Tmp_188: int;
  var {:pointer} pPartialResourceDesc: int;
  var {:pointer} Tmp_189: int;
  var {:pointer} Tmp_190: int;
  var {:pointer} PDevObj: int;
  var {:pointer} PResList: int;
  var {:pointer} PTrResList: int;
  var {:pointer} PConfig: int;
  var {:pointer} PUserData: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;

  anon0:
    call {:si_unique_call 259} ioResIndex := __HAVOC_malloc(4);
    call {:si_unique_call 260} isMulti := __HAVOC_malloc(4);
    call {:si_unique_call 261} Tmp_137 := __HAVOC_malloc(20);
    call {:si_unique_call 262} Tmp_139 := __HAVOC_malloc(20);
    call {:si_unique_call 263} Tmp_142 := __HAVOC_malloc(20);
    call {:si_unique_call 264} Tmp_148 := __HAVOC_malloc(20);
    call {:si_unique_call 265} Tmp_155 := __HAVOC_malloc(20);
    call {:si_unique_call 266} Tmp_159 := __HAVOC_malloc(20);
    call {:si_unique_call 267} Tmp_169 := __HAVOC_malloc(20);
    call {:si_unique_call 268} Tmp_183 := __HAVOC_malloc(20);
    call {:si_unique_call 269} Tmp_184 := __HAVOC_malloc(20);
    call {:si_unique_call 270} Tmp_185 := __HAVOC_malloc(20);
    PDevObj := actual_PDevObj;
    PResList := actual_PResList;
    PTrResList := actual_PTrResList;
    PConfig := actual_PConfig;
    PUserData := actual_PUserData;
    call {:si_unique_call 271} Tmp_131 := __HAVOC_malloc(32);
    call {:si_unique_call 272} Tmp_133 := __HAVOC_malloc(48);
    call {:si_unique_call 273} Tmp_134 := __HAVOC_malloc(40);
    call {:si_unique_call 274} Tmp_135 := __HAVOC_malloc(40);
    call {:si_unique_call 275} Tmp_136 := __HAVOC_malloc(52);
    call {:si_unique_call 276} Tmp_138 := __HAVOC_malloc(244);
    call {:si_unique_call 277} Tmp_141 := __HAVOC_malloc(96);
    call {:si_unique_call 278} Tmp_143 := __HAVOC_malloc(112);
    call {:si_unique_call 279} Tmp_144 := __HAVOC_malloc(88);
    call {:si_unique_call 280} Tmp_145 := __HAVOC_malloc(92);
    call {:si_unique_call 281} Tmp_147 := __HAVOC_malloc(88);
    call {:si_unique_call 282} Tmp_149 := __HAVOC_malloc(96);
    call {:si_unique_call 283} Tmp_150 := __HAVOC_malloc(64);
    call {:si_unique_call 284} Tmp_151 := __HAVOC_malloc(96);
    call {:si_unique_call 285} Tmp_152 := __HAVOC_malloc(40);
    call {:si_unique_call 286} Tmp_153 := __HAVOC_malloc(96);
    call {:si_unique_call 287} Tmp_154 := __HAVOC_malloc(152);
    call {:si_unique_call 288} Tmp_156 := __HAVOC_malloc(216);
    call {:si_unique_call 289} Tmp_157 := __HAVOC_malloc(88);
    call {:si_unique_call 290} Tmp_161 := __HAVOC_malloc(92);
    call {:si_unique_call 291} Tmp_162 := __HAVOC_malloc(92);
    call {:si_unique_call 292} Tmp_163 := __HAVOC_malloc(84);
    call {:si_unique_call 293} Tmp_164 := __HAVOC_malloc(232);
    call {:si_unique_call 294} Tmp_165 := __HAVOC_malloc(28);
    call {:si_unique_call 295} Tmp_166 := __HAVOC_malloc(264);
    call {:si_unique_call 296} Tmp_167 := __HAVOC_malloc(96);
    call {:si_unique_call 297} Tmp_170 := __HAVOC_malloc(92);
    call {:si_unique_call 298} Tmp_171 := __HAVOC_malloc(112);
    call {:si_unique_call 299} Tmp_172 := __HAVOC_malloc(68);
    call {:si_unique_call 300} Tmp_173 := __HAVOC_malloc(80);
    call {:si_unique_call 301} Tmp_175 := __HAVOC_malloc(96);
    call {:si_unique_call 302} Tmp_177 := __HAVOC_malloc(264);
    call {:si_unique_call 303} Tmp_179 := __HAVOC_malloc(28);
    call {:si_unique_call 304} Tmp_181 := __HAVOC_malloc(48);
    call {:si_unique_call 305} Tmp_182 := __HAVOC_malloc(108);
    call {:si_unique_call 306} Tmp_186 := __HAVOC_malloc(92);
    call {:si_unique_call 307} Tmp_187 := __HAVOC_malloc(64);
    call {:si_unique_call 308} Tmp_188 := __HAVOC_malloc(84);
    call {:si_unique_call 309} Tmp_189 := __HAVOC_malloc(68);
    call {:si_unique_call 310} Tmp_190 := __HAVOC_malloc(104);
    assume {:nonnull} PDevObj != 0;
    assume PDevObj > 0;
    havoc pDevExt_1;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    status_6 := -1073741822;
    pFullResourceDesc := 0;
    pFullTrResourceDesc := 0;
    assume {:nonnull} isMulti != 0;
    assume isMulti > 0;
    gotInt := 0;
    gotISR := 0;
    gotIO := 0;
    assume {:nonnull} ioResIndex != 0;
    assume ioResIndex > 0;
    curIoIndex := 0;
    gotMem := 0;
    call {:si_unique_call 311} sdv_do_paged_code_check();
    Tmp_171 := strConst__li2bpl43;
    call {:si_unique_call 312} vslice_dummy_var_79 := SerialDbgPrintEx(11, Tmp_171);
    Tmp_167 := strConst__li2bpl44;
    call {:si_unique_call 313} vslice_dummy_var_80 := SerialDbgPrintEx(12, Tmp_167);
    Tmp_182 := strConst__li2bpl45;
    call {:si_unique_call 314} vslice_dummy_var_81 := SerialDbgPrintEx(12, Tmp_182);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} PResList != 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} PTrResList != 0;
    call {:si_unique_call 315} status_6 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} status_6 >= 0;
    Tmp_187 := strConst__li2bpl46;
    call {:si_unique_call 316} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_187, 32, isMulti, 4);
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} status_6 >= 0;
    goto L73;

  L73:
    Tmp_186 := strConst__li2bpl47;
    call {:si_unique_call 317} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_186, 46, ioResIndex, 4);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} status_6 >= 0;
    goto L79;

  L79:
    call {:si_unique_call 318} vslice_dummy_var_75 := ZwClose(0);
    assume {:nonnull} PResList != 0;
    assume PResList > 0;
    havoc Tmp_177;
    pFullResourceDesc := Tmp_177;
    assume {:nonnull} PTrResList != 0;
    assume PTrResList > 0;
    havoc Tmp_166;
    pFullTrResourceDesc := Tmp_166;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} pFullResourceDesc != 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    pPartialResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullResourceDesc);
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc pPartialResourceDesc;
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    i := 0;
    goto L95;

  L95:
    call {:si_unique_call 319} gotIO, curIoIndex, gotInt, i, sDeviceData, gotISR, gotMem := SerialGetPortInfo_loop_L95(ioResIndex, isMulti, count, gotIO, curIoIndex, gotInt, i, sDeviceData, gotISR, gotMem, pPartialResourceDesc, PConfig);
    goto L95_last;

  L95_last:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} count > i;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    goto L105;

  L105:
    i := i + 1;
    goto L105_dummy;

  L105_dummy:
    assume false;
    return;

  anon172_Then:
    sDeviceData := pPartialResourceDesc;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} sDeviceData != 0;
    assume sDeviceData > 0;
    goto L105;

  anon173_Then:
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} gotMem == 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} gotIO == 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    gotMem := 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto L105;

  anon138_Then:
    goto L105;

  anon137_Then:
    assume {:partition} gotIO != 0;
    goto L105;

  anon136_Then:
    assume {:partition} gotMem != 0;
    goto L105;

  anon174_Then:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} gotInt == 0;
    gotInt := 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto L105;

  anon178_Then:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto L105;

  anon135_Then:
    assume {:partition} gotInt != 0;
    goto L105;

  anon133_Then:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} gotISR == 0;
    assume {:nonnull} isMulti != 0;
    assume isMulti > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    gotISR := 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L105;

  anon141_Then:
    goto L105;

  anon140_Then:
    assume {:partition} gotISR != 0;
    goto L121;

  L121:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} gotIO == 0;
    assume {:nonnull} ioResIndex != 0;
    assume ioResIndex > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    gotIO := 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L105;

  anon142_Then:
    curIoIndex := curIoIndex + 1;
    goto L105;

  anon139_Then:
    assume {:partition} gotIO != 0;
    goto L105;

  anon134_Then:
    goto L121;

  anon132_Then:
    assume {:partition} i >= count;
    goto L85;

  L85:
    gotInt := 0;
    gotISR := 0;
    gotIO := 0;
    curIoIndex := 0;
    gotMem := 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} pFullTrResourceDesc != 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    pPartialTrResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullTrResourceDesc);
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc pPartialTrResourceDesc;
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    i := 0;
    goto L148;

  L148:
    call {:si_unique_call 320} gotIO, curIoIndex, gotInt, i, gotISR, gotMem := SerialGetPortInfo_loop_L148(ioResIndex, isMulti, count, gotIO, pPartialTrResourceDesc, curIoIndex, gotInt, i, gotISR, gotMem, PConfig);
    goto L148_last;

  L148_last:
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} count > i;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    goto L156;

  L156:
    i := i + 1;
    goto L156_dummy;

  L156_dummy:
    assume false;
    return;

  anon175_Then:
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} gotMem != 0;
    goto L156;

  anon147_Then:
    assume {:partition} gotMem == 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} gotIO == 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    gotMem := 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto L156;

  anon149_Then:
    goto L156;

  anon148_Then:
    assume {:partition} gotIO != 0;
    goto L156;

  anon176_Then:
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} gotInt == 0;
    gotInt := 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L156;

  anon146_Then:
    assume {:partition} gotInt != 0;
    goto L156;

  anon144_Then:
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} gotISR == 0;
    assume {:nonnull} isMulti != 0;
    assume isMulti > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    gotISR := 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L156;

  anon152_Then:
    goto L156;

  anon151_Then:
    assume {:partition} gotISR != 0;
    goto L167;

  L167:
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} gotIO == 0;
    assume {:nonnull} ioResIndex != 0;
    assume ioResIndex > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    gotIO := 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L156;

  anon153_Then:
    curIoIndex := curIoIndex + 1;
    goto L156;

  anon150_Then:
    assume {:partition} gotIO != 0;
    goto L156;

  anon145_Then:
    goto L167;

  anon143_Then:
    assume {:partition} i >= count;
    goto L140;

  L140:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    defaultInterfaceType := 1;
    defaultClockRate := 1843200;
    interfaceType := 0;
    goto L191;

  L191:
    call {:si_unique_call 321} interfaceType, foundOne, vslice_dummy_var_76 := SerialGetPortInfo_loop_L191(interfaceType, foundOne, vslice_dummy_var_76);
    goto L191_last;

  L191_last:
    assume {:CounterLoop 17} {:Counter "interfaceType"} true;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} 17 > interfaceType;
    foundOne := 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} interfaceType != 0;
    call {:si_unique_call 322} vslice_dummy_var_76 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant254, 0);
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} foundOne != 0;
    defaultInterfaceType := interfaceType;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} defaultInterfaceType == 3;
    goto L192;

  L192:
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} PUserData != 0;
    badValue := -1;
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    Tmp_160 := 0;
    goto L215;

  L215:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_178;
    goto L219;

  L219:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_168;
    goto L223;

  L223:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    Tmp_176 := 0;
    goto L227;

  L227:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_132;
    goto L231;

  L231:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    Tmp_140 := 0;
    goto L235;

  L235:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    Tmp_146 := defaultClockRate;
    goto L239;

  L239:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    Tmp_158 := 0;
    goto L245;

  L245:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto L246;

  L246:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc vslice_dummy_var_14;
    havoc vslice_dummy_var_15;
    call {:si_unique_call 323} SerialLogError(vslice_dummy_var_14, 0, vslice_dummy_var_15, Tmp_183, 0, 0, 0, 30, 0, -1073348588, 0, 0, 0, 0);
    Tmp_188 := strConst__li2bpl48;
    call {:si_unique_call 324} vslice_dummy_var_82 := SerialDbgPrintEx(14, Tmp_188);
    status_6 := -1073348588;
    goto L263;

  L263:
    Tmp_130 := status_6;
    goto L1;

  L1:
    return;

  anon161_Then:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc vslice_dummy_var_16;
    havoc vslice_dummy_var_17;
    call {:si_unique_call 325} SerialLogError(vslice_dummy_var_16, 0, vslice_dummy_var_17, Tmp_159, 0, 0, 0, 32, 0, -1073348587, 0, 0, 0, 0);
    Tmp_175 := strConst__li2bpl49;
    call {:si_unique_call 326} vslice_dummy_var_83 := SerialDbgPrintEx(14, Tmp_175);
    status_6 := -1073348587;
    goto L263;

  anon165_Then:
    goto L251;

  L251:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc vslice_dummy_var_18;
    havoc vslice_dummy_var_19;
    call {:si_unique_call 327} SerialLogError(vslice_dummy_var_18, 0, vslice_dummy_var_19, Tmp_185, 0, 0, 0, 34, 0, -1073348586, 0, 0, 0, 0);
    Tmp_163 := strConst__li2bpl51;
    call {:si_unique_call 328} vslice_dummy_var_84 := SerialDbgPrintEx(14, Tmp_163);
    status_6 := -1073348586;
    goto L263;

  anon167_Then:
    call {:si_unique_call 329} vslice_dummy_var_77 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant254, 0);
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} foundIt == 0;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc vslice_dummy_var_20;
    havoc vslice_dummy_var_21;
    call {:si_unique_call 330} SerialLogError(vslice_dummy_var_20, 0, vslice_dummy_var_21, Tmp_139, 0, 0, 0, 35, 0, -1073348585, 0, 0, 0, 0);
    Tmp_164 := strConst__li2bpl52;
    call {:si_unique_call 331} vslice_dummy_var_97 := SerialDbgPrintEx(14, Tmp_164);
    status_6 := -1073348585;
    goto L263;

  anon168_Then:
    assume {:partition} foundIt != 0;
    goto L294;

  L294:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc vslice_dummy_var_22;
    havoc vslice_dummy_var_23;
    call {:si_unique_call 332} SerialLogError(vslice_dummy_var_22, 0, vslice_dummy_var_23, Tmp_137, 0, 0, 0, 36, 0, -1073348584, 0, 0, 0, 0);
    Tmp_156 := strConst__li2bpl53;
    call {:si_unique_call 333} vslice_dummy_var_85 := SerialDbgPrintEx(14, Tmp_156);
    status_6 := -1073348584;
    goto L263;

  anon169_Then:
    goto L319;

  L319:
    status_6 := 0;
    Tmp_147 := strConst__li2bpl73;
    call {:si_unique_call 334} vslice_dummy_var_86 := SerialDbgPrintEx(4, Tmp_147);
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    Tmp_190 := strConst__li2bpl74;
    call {:si_unique_call 335} vslice_dummy_var_87 := SerialDbgPrintEx(4, Tmp_190);
    Tmp_173 := strConst__li2bpl54;
    call {:si_unique_call 336} vslice_dummy_var_88 := SerialDbgPrintEx(4, Tmp_173);
    Tmp_151 := strConst__li2bpl55;
    call {:si_unique_call 337} vslice_dummy_var_89 := SerialDbgPrintEx(4, Tmp_151);
    Tmp_149 := strConst__li2bpl56;
    call {:si_unique_call 338} vslice_dummy_var_90 := SerialDbgPrintEx(4, Tmp_149);
    Tmp_157 := strConst__li2bpl57;
    call {:si_unique_call 339} vslice_dummy_var_91 := SerialDbgPrintEx(4, Tmp_157);
    Tmp_145 := strConst__li2bpl58;
    call {:si_unique_call 340} vslice_dummy_var_92 := SerialDbgPrintEx(4, Tmp_145);
    Tmp_162 := strConst__li2bpl59;
    call {:si_unique_call 341} vslice_dummy_var_93 := SerialDbgPrintEx(4, Tmp_162);
    Tmp_141 := strConst__li2bpl60;
    call {:si_unique_call 342} vslice_dummy_var_94 := SerialDbgPrintEx(4, Tmp_141);
    Tmp_144 := strConst__li2bpl61;
    call {:si_unique_call 343} vslice_dummy_var_95 := SerialDbgPrintEx(4, Tmp_144);
    Tmp_172 := strConst__li2bpl62;
    call {:si_unique_call 344} vslice_dummy_var_96 := SerialDbgPrintEx(4, Tmp_172);
    goto L263;

  anon166_Then:
    goto L319;

  anon160_Then:
    goto L294;

  anon163_Then:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc vslice_dummy_var_24;
    havoc vslice_dummy_var_25;
    call {:si_unique_call 345} SerialLogError(vslice_dummy_var_24, 0, vslice_dummy_var_25, Tmp_155, 0, 0, 0, 33, 0, -1073348587, 0, 0, 0, 0);
    Tmp_153 := strConst__li2bpl49;
    call {:si_unique_call 346} vslice_dummy_var_98 := SerialDbgPrintEx(14, Tmp_153);
    status_6 := -1073348587;
    goto L263;

  anon164_Then:
    goto L251;

  anon162_Then:
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc vslice_dummy_var_26;
    havoc vslice_dummy_var_27;
    call {:si_unique_call 347} SerialLogError(vslice_dummy_var_26, 0, vslice_dummy_var_27, Tmp_148, 0, 0, 0, 31, 0, -1073348588, 0, 0, 0, 0);
    Tmp_138 := strConst__li2bpl50;
    call {:si_unique_call 348} vslice_dummy_var_99 := SerialDbgPrintEx(14, Tmp_138);
    status_6 := -1073348588;
    goto L263;

  anon159_Then:
    goto L251;

  anon158_Then:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc Tmp_180;
    assume {:nonnull} Tmp_184 != 0;
    assume Tmp_184 > 0;
    assume {:nonnull} Tmp_184 != 0;
    assume Tmp_184 > 0;
    assume {:nonnull} Tmp_184 != 0;
    assume Tmp_184 > 0;
    assume {:nonnull} Tmp_184 != 0;
    assume Tmp_184 > 0;
    assume {:nonnull} Tmp_184 != 0;
    assume Tmp_184 > 0;
    Tmp_152 := strConst__li2bpl75;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc vslice_dummy_var_28;
    havoc vslice_dummy_var_29;
    havoc vslice_dummy_var_30;
    call {:si_unique_call 349} SerialLogError(vslice_dummy_var_28, 0, vslice_dummy_var_29, Tmp_184, 0, 0, 0, 59, 0, -1073348583, Tmp_180, vslice_dummy_var_30, 20, Tmp_152);
    Tmp_189 := strConst__li2bpl63;
    call {:si_unique_call 350} vslice_dummy_var_100 := SerialDbgPrintEx(14, Tmp_189);
    status_6 := -1073348583;
    goto L263;

  anon157_Then:
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    Tmp_181 := strConst__li2bpl76;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj != 0;
    assume PDevObj > 0;
    havoc vslice_dummy_var_31;
    havoc vslice_dummy_var_32;
    call {:si_unique_call 351} SerialLogError(vslice_dummy_var_31, 0, vslice_dummy_var_32, Tmp_142, 0, 0, 0, 58, 0, -1073348583, 0, 0, 26, Tmp_181);
    Tmp_161 := strConst__li2bpl64;
    call {:si_unique_call 352} vslice_dummy_var_101 := SerialDbgPrintEx(14, Tmp_161);
    status_6 := -1073348583;
    goto L263;

  anon189_Then:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_158;
    goto L245;

  anon188_Then:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_146;
    goto L239;

  anon187_Then:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_140;
    goto L235;

  anon186_Then:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_132;
    goto L231;

  anon185_Then:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_176;
    goto L227;

  anon184_Then:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_168;
    goto L223;

  anon183_Then:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_178;
    goto L219;

  anon182_Then:
    assume {:nonnull} PUserData != 0;
    assume PUserData > 0;
    havoc Tmp_160;
    goto L215;

  anon155_Then:
    assume {:partition} PUserData == 0;
    call {:si_unique_call 353} status_6 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} status_6 >= 0;
    Tmp_133 := strConst__li2bpl66;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    call {:si_unique_call 354} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_133, 24, DisablePort__CONFIG_DATA(PConfig), 4);
    Tmp_150 := strConst__li2bpl14;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    call {:si_unique_call 355} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_150, 32, ForceFifoEnable__CONFIG_DATA(PConfig), 4);
    Tmp_165 := strConst__li2bpl15;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    call {:si_unique_call 356} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_165, 14, RxFIFO__CONFIG_DATA(PConfig), 4);
    Tmp_179 := strConst__li2bpl16;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    call {:si_unique_call 357} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_179, 14, TxFIFO__CONFIG_DATA(PConfig), 4);
    Tmp_136 := strConst__li2bpl67;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    call {:si_unique_call 358} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_136, 26, MaskInverted__CONFIG_DATA(PConfig), 4);
    Tmp_170 := strConst__li2bpl68;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    call {:si_unique_call 359} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_170, 46, PermitShare__CONFIG_DATA(PConfig), 4);
    Tmp_134 := strConst__li2bpl69;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    call {:si_unique_call 360} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_134, 20, PortIndex__CONFIG_DATA(PConfig), 4);
    Tmp_131 := strConst__li2bpl70;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    call {:si_unique_call 361} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_131, 16, Indexed__CONFIG_DATA(PConfig), 4);
    Tmp_135 := strConst__li2bpl71;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    call {:si_unique_call 362} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_135, 20, ClockRate__CONFIG_DATA(PConfig), 4);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} status_6 >= 0;
    goto L424;

  L424:
    Tmp_143 := strConst__li2bpl72;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    call {:si_unique_call 363} status_6 := SerialGetRegistryKeyValue(keyHandle_1, Tmp_143, 56, TL16C550CAFC__CONFIG_DATA(PConfig), 4);
    call {:si_unique_call 364} vslice_dummy_var_78 := ZwClose(0);
    goto L246;

  anon171_Then:
    assume {:partition} 0 > status_6;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    goto L424;

  anon170_Then:
    assume {:partition} 0 > status_6;
    Tmp_154 := strConst__li2bpl65;
    call {:si_unique_call 365} vslice_dummy_var_102 := SerialDbgPrintEx(14, Tmp_154);
    goto L263;

  anon181_Then:
    assume {:partition} defaultInterfaceType != 3;
    goto L192;

  anon156_Then:
    assume {:partition} foundOne == 0;
    goto L198;

  L198:
    interfaceType := interfaceType + 1;
    goto L198_dummy;

  L198_dummy:
    assume false;
    return;

  anon180_Then:
    assume {:partition} interfaceType == 0;
    goto L198;

  anon154_Then:
    assume {:partition} interfaceType >= 17;
    goto L192;

  anon179_Then:
    assume {:partition} pFullTrResourceDesc == 0;
    goto L140;

  anon177_Then:
    assume {:partition} pFullResourceDesc == 0;
    goto L85;

  anon131_Then:
    assume {:partition} 0 > status_6;
    assume {:nonnull} ioResIndex != 0;
    assume ioResIndex > 0;
    goto L79;

  anon130_Then:
    assume {:partition} 0 > status_6;
    assume {:nonnull} isMulti != 0;
    assume isMulti > 0;
    goto L73;

  anon129_Then:
    assume {:partition} 0 > status_6;
    Tmp_130 := status_6;
    goto L1;

  anon128_Then:
    assume {:partition} PTrResList == 0;
    goto L59;

  L59:
    Tmp_130 := -1073741670;
    goto L1;

  anon127_Then:
    assume {:partition} PResList == 0;
    goto L59;
}



procedure {:origName "SerialAddDevice"} SerialAddDevice(actual_DriverObject_1: int, actual_PPdo: int) returns (Tmp_191: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_191 == 0 || Tmp_191 == -1073741670 || Tmp_191 == -1073741824 || Tmp_191 == -1073741771 || Tmp_191 == -1073741823 || Tmp_191 == 26;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialAddDevice"} SerialAddDevice(actual_DriverObject_1: int, actual_PPdo: int) returns (Tmp_191: int)
{
  var {:pointer} pDevExt_2: int;
  var {:pointer} Tmp_192: int;
  var {:pointer} pNewDevObj: int;
  var {:pointer} pLowerDevObj_2: int;
  var {:pointer} Tmp_194: int;
  var {:scalar} status_7: int;
  var {:pointer} Tmp_195: int;
  var {:pointer} Tmp_196: int;
  var {:pointer} DriverObject_1: int;
  var {:pointer} PPdo: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;

  anon0:
    call {:si_unique_call 366} pNewDevObj := __HAVOC_malloc(4);
    DriverObject_1 := actual_DriverObject_1;
    PPdo := actual_PPdo;
    call {:si_unique_call 367} Tmp_192 := __HAVOC_malloc(216);
    call {:si_unique_call 368} Tmp_194 := __HAVOC_malloc(260);
    call {:si_unique_call 369} Tmp_195 := __HAVOC_malloc(92);
    call {:si_unique_call 370} Tmp_196 := __HAVOC_malloc(152);
    assume {:nonnull} pNewDevObj != 0;
    assume pNewDevObj > 0;
    pLowerDevObj_2 := 0;
    call {:si_unique_call 371} sdv_do_paged_code_check();
    Tmp_196 := strConst__li2bpl77;
    call {:si_unique_call 372} vslice_dummy_var_103 := SerialDbgPrintEx(11, Tmp_196);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} PPdo != 0;
    call {:si_unique_call 373} status_7 := SerialCreateDevObj(DriverObject_1, pNewDevObj);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} status_7 >= 0;
    call {:si_unique_call 374} pLowerDevObj_2 := IoAttachDeviceToDeviceStack(0, PPdo);
    assume {:nonnull} pNewDevObj != 0;
    assume pNewDevObj > 0;
    havoc pDevExt_2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    assume {:nonnull} pNewDevObj != 0;
    assume pNewDevObj > 0;
    Tmp_195 := strConst__li2bpl80;
    call {:si_unique_call 375} vslice_dummy_var_104 := SerialDbgPrintEx(11, Tmp_195);
    Tmp_191 := status_7;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} 0 > status_7;
    Tmp_192 := strConst__li2bpl79;
    call {:si_unique_call 376} vslice_dummy_var_105 := SerialDbgPrintEx(14, Tmp_192);
    Tmp_191 := status_7;
    goto L1;

  anon5_Then:
    assume {:partition} PPdo == 0;
    Tmp_194 := strConst__li2bpl78;
    call {:si_unique_call 377} vslice_dummy_var_106 := SerialDbgPrintEx(14, Tmp_194);
    Tmp_191 := 26;
    goto L1;
}



procedure {:origName "SerialFinishStartDevice"} SerialFinishStartDevice(actual_PDevObj_1: int, actual_PResList_1: int, actual_PTrResList_1: int, actual_PUserData_1: int) returns (Tmp_197: int);
  modifies alloc, queued, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_197 == -1073741670 || Tmp_197 == -1073348588 || Tmp_197 == -1073348587 || Tmp_197 == -1073348586 || Tmp_197 == -1073348585 || Tmp_197 == -1073348584 || Tmp_197 == 0 || Tmp_197 == -1073348583 || Tmp_197 == -1073741811 || Tmp_197 == -1073741808 || Tmp_197 == -1073741823 || Tmp_197 == -1073741584 || Tmp_197 == 259 || Tmp_197 == -1073348601 || Tmp_197 == -1073741810 || Tmp_197 == -1073741709 || Tmp_197 == 5 || Tmp_197 == -1073741789 || Tmp_197 == -1073741772 || Tmp_197 == -1073741824;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialFinishStartDevice"} SerialFinishStartDevice(actual_PDevObj_1: int, actual_PResList_1: int, actual_PTrResList_1: int, actual_PUserData_1: int) returns (Tmp_197: int)
{
  var {:pointer} Tmp_198: int;
  var {:scalar} Tmp_199: int;
  var {:scalar} Tmp_200: int;
  var {:scalar} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:pointer} Tmp_203: int;
  var {:scalar} allocedUserData: int;
  var {:pointer} Tmp_204: int;
  var {:dopa} {:scalar} powerPolicy: int;
  var {:scalar} Tmp_205: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:pointer} pDevExt_3: int;
  var {:scalar} Tmp_208: int;
  var {:scalar} Tmp_209: int;
  var {:pointer} Tmp_210: int;
  var {:pointer} pnpKey: int;
  var {:scalar} Tmp_211: int;
  var {:pointer} Tmp_212: int;
  var {:pointer} Tmp_213: int;
  var {:pointer} pConfig: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} sdv_158: int;
  var {:dopa} {:scalar} powerOnClose: int;
  var {:pointer} sdv_161: int;
  var {:pointer} Tmp_216: int;
  var {:pointer} Tmp_217: int;
  var {:pointer} Tmp_218: int;
  var {:scalar} status_8: int;
  var {:pointer} countSoFar: int;
  var {:scalar} Tmp_221: int;
  var {:pointer} Tmp_222: int;
  var {:pointer} sdv_172: int;
  var {:scalar} Tmp_223: int;
  var {:scalar} Tmp_224: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} Tmp_226: int;
  var {:scalar} Tmp_227: int;
  var {:pointer} Tmp_228: int;
  var {:pointer} PDevObj_1: int;
  var {:pointer} PResList_1: int;
  var {:pointer} PTrResList_1: int;
  var {:pointer} PUserData_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;

  anon0:
    call {:si_unique_call 378} Tmp_199 := __HAVOC_malloc(20);
    call {:si_unique_call 379} powerPolicy := __HAVOC_malloc(4);
    call {:si_unique_call 380} Tmp_208 := __HAVOC_malloc(20);
    call {:si_unique_call 381} powerOnClose := __HAVOC_malloc(4);
    call {:si_unique_call 382} Tmp_223 := __HAVOC_malloc(20);
    PDevObj_1 := actual_PDevObj_1;
    PResList_1 := actual_PResList_1;
    PTrResList_1 := actual_PTrResList_1;
    PUserData_1 := actual_PUserData_1;
    call {:si_unique_call 383} Tmp_202 := __HAVOC_malloc(316);
    call {:si_unique_call 384} Tmp_203 := __HAVOC_malloc(112);
    call {:si_unique_call 385} Tmp_207 := __HAVOC_malloc(168);
    call {:si_unique_call 386} Tmp_210 := __HAVOC_malloc(144);
    call {:si_unique_call 387} Tmp_212 := __HAVOC_malloc(156);
    call {:si_unique_call 388} Tmp_213 := __HAVOC_malloc(104);
    call {:si_unique_call 389} Tmp_214 := __HAVOC_malloc(88);
    call {:si_unique_call 390} Tmp_216 := __HAVOC_malloc(132);
    call {:si_unique_call 391} Tmp_217 := __HAVOC_malloc(884);
    call {:si_unique_call 392} Tmp_218 := __HAVOC_malloc(884);
    call {:si_unique_call 393} Tmp_222 := __HAVOC_malloc(220);
    call {:si_unique_call 394} Tmp_225 := __HAVOC_malloc(104);
    call {:si_unique_call 395} Tmp_226 := __HAVOC_malloc(272);
    call {:si_unique_call 396} Tmp_228 := __HAVOC_malloc(168);
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    havoc pDevExt_3;
    allocedUserData := 0;
    call {:si_unique_call 397} sdv_do_paged_code_check();
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 398} SerialSetDeviceFlags(pDevExt_3, Flags__SERIAL_DEVICE_EXTENSION(pDevExt_3), 2, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 399} sdv_158 := ExAllocatePoolWithTag(1, 112, -666022077);
    PUserData_1 := sdv_158;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} PUserData_1 != 0;
    allocedUserData := 1;
    call {:si_unique_call 400} sdv_RtlZeroMemory(0, 112);
    assume {:nonnull} PUserData_1 != 0;
    assume PUserData_1 > 0;
    assume {:nonnull} PUserData_1 != 0;
    assume PUserData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PUserData_1 != 0;
    assume PUserData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PUserData_1 != 0;
    assume PUserData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} PUserData_1 != 0;
    assume PUserData_1 > 0;
    goto L65;

  L65:
    call {:si_unique_call 401} sdv_161 := ExAllocatePoolWithTag(1, 128, -666022077);
    pConfig := sdv_161;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 402} sdv_RtlZeroMemory(0, 128);
    call {:si_unique_call 403} status_8 := SerialGetPortInfo(PDevObj_1, PResList_1, PTrResList_1, pConfig, PUserData_1);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} status_8 < 0;
    goto L90;

  L90:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} status_8 >= 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pConfig != 0;
    assume pConfig > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pConfig != 0;
    assume pConfig > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    Tmp_227 := 0;
    goto L101;

  L101:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_224;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    Tmp_201 := 1;
    goto L109;

  L109:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L118;

  L118:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    Tmp_205 := 1;
    goto L123;

  L123:
    Tmp_211 := Tmp_205;
    goto L124;

  L124:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc vslice_dummy_var_33;
    call {:si_unique_call 404} boogieTmp := SerialReportMaxBaudRate(vslice_dummy_var_33);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 405} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    call {:si_unique_call 406} sdv_172 := IoGetConfigurationInformation();
    assume {:nonnull} sdv_172 != 0;
    assume sdv_172 > 0;
    countSoFar := SerialCount__CONFIGURATION_INFORMATION(sdv_172);
    assume {:nonnull} countSoFar != 0;
    assume countSoFar > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 407} vslice_dummy_var_115 := IoWMIRegistrationControl(0, 1);
    goto L153;

  L153:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    call {:si_unique_call 408} SerialUnstallIrps(pDevExt_3);
    goto L154;

  L154:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 409} SerialSetDeviceFlags(pDevExt_3, DevicePNPAccept__SERIAL_DEVICE_EXTENSION(pDevExt_3), -1, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 410} SerialSetDeviceFlags(pDevExt_3, Flags__SERIAL_DEVICE_EXTENSION(pDevExt_3), 1, 1);
    goto L164;

  L164:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 411} sdv_ExFreePool(0);
    goto L165;

  L165:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} PUserData_1 != 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} allocedUserData != 0;
    call {:si_unique_call 412} sdv_ExFreePool(0);
    goto L169;

  L169:
    Tmp_216 := strConst__li2bpl82;
    call {:si_unique_call 413} vslice_dummy_var_114 := SerialDbgPrintEx(11, Tmp_216);
    Tmp_197 := status_8;
    goto L1;

  L1:
    return;

  anon87_Then:
    assume {:partition} allocedUserData == 0;
    goto L169;

  anon86_Then:
    assume {:partition} PUserData_1 == 0;
    goto L169;

  anon85_Then:
    assume {:partition} pConfig == 0;
    goto L165;

  anon84_Then:
    goto L154;

  anon83_Then:
    goto L153;

  anon82_Then:
    Tmp_205 := 2;
    goto L123;

  anon81_Then:
    Tmp_211 := 0;
    goto L124;

  anon102_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L118;

  anon103_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L118;

  anon104_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L118;

  anon105_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L118;

  anon111_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L118;

  anon110_Then:
    Tmp_201 := 0;
    goto L109;

  anon109_Then:
    Tmp_227 := 1;
    goto L101;

  anon80_Then:
    assume {:partition} 0 > status_8;
    Tmp_225 := strConst__li2bpl81;
    call {:si_unique_call 414} vslice_dummy_var_116 := SerialDbgPrintEx(4, Tmp_225);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    call {:si_unique_call 415} SerialKillPendingIrps(PDevObj_1);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 416} SerialSetDeviceFlags(pDevExt_3, DevicePNPAccept__SERIAL_DEVICE_EXTENSION(pDevExt_3), 1, 1);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 417} SerialSetDeviceFlags(pDevExt_3, Flags__SERIAL_DEVICE_EXTENSION(pDevExt_3), 1, 0);
    goto L164;

  anon88_Then:
    goto L164;

  anon77_Then:
    assume {:partition} 0 <= status_8;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc vslice_dummy_var_34;
    call {:si_unique_call 418} status_8 := SerialGotoPowerState(vslice_dummy_var_34, pDevExt_3, 1);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} status_8 < 0;
    goto L90;

  anon79_Then:
    assume {:partition} 0 <= status_8;
    goto L81;

  L81:
    call {:si_unique_call 419} status_8 := SerialFindInitController(PDevObj_1, pConfig);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} status_8 >= 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} pDevExt_3 != 0;
    Tmp_222 := strConst__li2bpl84;
    call {:si_unique_call 420} vslice_dummy_var_110 := SerialDbgPrintEx(8, Tmp_222);
    goto L218;

  L218:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto L220;

  L220:
    Tmp_213 := strConst__li2bpl85;
    call {:si_unique_call 421} vslice_dummy_var_111 := SerialDbgPrintEx(8, Tmp_213);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 422} SerialAddToAllDevs(AllDevObjs__SERIAL_DEVICE_EXTENSION(pDevExt_3));
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 423} vslice_dummy_var_112 := KeSynchronizeExecution(0, li2bplFunctionConstant248, 0);
    call {:si_unique_call 424} vslice_dummy_var_107 := KeSynchronizeExecution(0, li2bplFunctionConstant249, 0);
    call {:si_unique_call 425} vslice_dummy_var_108 := KeSynchronizeExecution(0, li2bplFunctionConstant250, 0);
    call {:si_unique_call 426} vslice_dummy_var_109 := KeSynchronizeExecution(0, li2bplFunctionConstant251, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    Tmp_207 := strConst__li2bpl86;
    call {:si_unique_call 427} vslice_dummy_var_113 := SerialDbgPrintEx(12, Tmp_207);
    goto L90;

  anon93_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_198;
    assume {:nonnull} Tmp_198 != 0;
    assume Tmp_198 > 0;
    havoc vslice_dummy_var_35;
    call {:si_unique_call 428} status_8 := SerialDoExternalNaming(pDevExt_3, vslice_dummy_var_35);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} status_8 < 0;
    Tmp_210 := strConst__li2bpl87;
    call {:si_unique_call 429} vslice_dummy_var_117 := SerialDbgPrintEx(14, Tmp_210);
    status_8 := 0;
    goto L90;

  anon94_Then:
    assume {:partition} 0 <= status_8;
    goto L90;

  anon91_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    Tmp_202 := strConst__li2bpl88;
    call {:si_unique_call 430} vslice_dummy_var_118 := SerialDbgPrintEx(8, Tmp_202);
    Tmp_217 := strConst__li2bpl89;
    call {:si_unique_call 431} vslice_dummy_var_119 := SerialDbgPrintEx(8, Tmp_217);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_204;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_206;
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pConfig != 0;
    assume pConfig > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc vslice_dummy_var_36;
    havoc vslice_dummy_var_37;
    havoc vslice_dummy_var_38;
    havoc vslice_dummy_var_39;
    havoc vslice_dummy_var_40;
    havoc vslice_dummy_var_41;
    havoc vslice_dummy_var_42;
    call {:si_unique_call 432} status_8 := IoConnectInterrupt(0, li2bplFunctionConstant252, vslice_dummy_var_36, 0, vslice_dummy_var_37, vslice_dummy_var_38, vslice_dummy_var_39, vslice_dummy_var_40, vslice_dummy_var_41, vslice_dummy_var_42, 0);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} status_8 < 0;
    Tmp_212 := strConst__li2bpl90;
    call {:si_unique_call 433} vslice_dummy_var_120 := SerialDbgPrintEx(14, Tmp_212);
    Tmp_218 := strConst__li2bpl89;
    call {:si_unique_call 434} vslice_dummy_var_121 := SerialDbgPrintEx(14, Tmp_218);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_221;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc vslice_dummy_var_43;
    havoc vslice_dummy_var_44;
    havoc vslice_dummy_var_45;
    call {:si_unique_call 435} SerialLogError(vslice_dummy_var_43, PDevObj_1, vslice_dummy_var_44, Tmp_223, 0, 0, 0, 1, status_8, -1073348601, Tmp_221, vslice_dummy_var_45, 0, 0);
    status_8 := -1073348601;
    goto L90;

  anon95_Then:
    assume {:partition} 0 <= status_8;
    goto L220;

  anon92_Then:
    goto L220;

  anon90_Then:
    assume {:partition} pDevExt_3 == 0;
    Tmp_228 := strConst__li2bpl83;
    call {:si_unique_call 436} vslice_dummy_var_122 := SerialDbgPrintEx(14, Tmp_228);
    goto L218;

  anon89_Then:
    assume {:partition} 0 > status_8;
    goto L90;

  anon78_Then:
    goto L81;

  anon108_Then:
    assume {:partition} pConfig == 0;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    assume {:nonnull} Tmp_208 != 0;
    assume Tmp_208 > 0;
    assume {:nonnull} Tmp_208 != 0;
    assume Tmp_208 > 0;
    assume {:nonnull} Tmp_208 != 0;
    assume Tmp_208 > 0;
    assume {:nonnull} Tmp_208 != 0;
    assume Tmp_208 > 0;
    assume {:nonnull} Tmp_208 != 0;
    assume Tmp_208 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc vslice_dummy_var_46;
    call {:si_unique_call 437} SerialLogError(vslice_dummy_var_46, 0, Tmp_208, Tmp_199, 0, 0, 0, 37, 0, -1073348600, 0, 0, 0, 0);
    Tmp_226 := strConst__li2bpl91;
    call {:si_unique_call 438} vslice_dummy_var_123 := SerialDbgPrintEx(14, Tmp_226);
    status_8 := -1073741670;
    goto L90;

  anon99_Then:
    assume {:nonnull} PUserData_1 != 0;
    assume PUserData_1 > 0;
    goto L65;

  anon100_Then:
    assume {:nonnull} PUserData_1 != 0;
    assume PUserData_1 > 0;
    goto L65;

  anon101_Then:
    assume {:nonnull} PUserData_1 != 0;
    assume PUserData_1 > 0;
    goto L65;

  anon107_Then:
    assume {:nonnull} PUserData_1 != 0;
    assume PUserData_1 > 0;
    goto L65;

  anon106_Then:
    assume {:partition} PUserData_1 == 0;
    Tmp_197 := -1073741670;
    goto L1;

  anon76_Then:
    goto L17;

  L17:
    call {:si_unique_call 439} status_8 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_8 >= 0;
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    assume {:nonnull} powerOnClose != 0;
    assume powerOnClose > 0;
    Tmp_203 := strConst__li2bpl92;
    call {:si_unique_call 440} vslice_dummy_var_124 := SerialGetRegistryKeyValue(pnpKey, Tmp_203, 56, powerPolicy, 4);
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Tmp_209 := 0;
    goto L310;

  L310:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    Tmp_214 := strConst__li2bpl93;
    call {:si_unique_call 441} vslice_dummy_var_125 := SerialGetRegistryKeyValue(pnpKey, Tmp_214, 44, powerOnClose, 4);
    assume {:nonnull} powerOnClose != 0;
    assume powerOnClose > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    Tmp_200 := 1;
    goto L317;

  L317:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 442} vslice_dummy_var_126 := ZwClose(0);
    goto L65;

  anon98_Then:
    Tmp_200 := 0;
    goto L317;

  anon97_Then:
    Tmp_209 := 1;
    goto L310;

  anon96_Then:
    assume {:partition} 0 > status_8;
    goto L65;

  anon75_Then:
    goto L17;
}



procedure {:origName "SerialPnpDispatch"} SerialPnpDispatch(actual_PDevObj_2: int, actual_PIrp: int) returns (Tmp_229: int);
  modifies alloc, stack_location, locked, queuedWithoutMarking, queued, markedPending, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialPnpDispatch"} SerialPnpDispatch(actual_PDevObj_2: int, actual_PIrp: int) returns (Tmp_229: int)
{
  var {:scalar} pIdBuf: int;
  var {:scalar} sdv_175: int;
  var {:pointer} sdv_176: int;
  var {:pointer} sdv_180: int;
  var {:dopa} {:scalar} isMulti_1: int;
  var {:pointer} pResList: int;
  var {:pointer} Tmp_230: int;
  var {:pointer} Tmp_231: int;
  var {:scalar} Tmp_232: int;
  var {:pointer} pDevExt_4: int;
  var {:pointer} Tmp_233: int;
  var {:pointer} Tmp_234: int;
  var {:pointer} Tmp_235: int;
  var {:pointer} Tmp_236: int;
  var {:pointer} Tmp_237: int;
  var {:pointer} Tmp_238: int;
  var {:pointer} Tmp_239: int;
  var {:pointer} Tmp_240: int;
  var {:pointer} Tmp_241: int;
  var {:scalar} Tmp_242: int;
  var {:pointer} Tmp_243: int;
  var {:scalar} cap: int;
  var {:pointer} Tmp_244: int;
  var {:pointer} Tmp_245: int;
  var {:scalar} Tmp_246: int;
  var {:pointer} Tmp_247: int;
  var {:scalar} pnpIdStrLen: int;
  var {:scalar} pendingIRPs: int;
  var {:pointer} pQueryCapsEvent: int;
  var {:pointer} Tmp_248: int;
  var {:pointer} Tmp_249: int;
  var {:pointer} Tmp_250: int;
  var {:pointer} Tmp_251: int;
  var {:pointer} pIrpStack: int;
  var {:pointer} Tmp_252: int;
  var {:dopa} {:scalar} isMulti_2: int;
  var {:pointer} Tmp_253: int;
  var {:pointer} sdv_209: int;
  var {:pointer} Tmp_254: int;
  var {:pointer} pLowerDevObj_3: int;
  var {:scalar} Tmp_255: int;
  var {:pointer} Tmp_256: int;
  var {:pointer} Tmp_257: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Tmp_259: int;
  var {:scalar} gotInt_1: int;
  var {:pointer} Tmp_260: int;
  var {:pointer} Tmp_261: int;
  var {:pointer} Tmp_262: int;
  var {:pointer} Tmp_263: int;
  var {:pointer} pResDesc: int;
  var {:pointer} Tmp_264: int;
  var {:pointer} Tmp_265: int;
  var {:scalar} allocLen: int;
  var {:pointer} Tmp_266: int;
  var {:pointer} Tmp_267: int;
  var {:scalar} Tmp_268: int;
  var {:pointer} Tmp_269: int;
  var {:scalar} Tmp_270: int;
  var {:scalar} listNum: int;
  var {:pointer} Tmp_272: int;
  var {:pointer} Tmp_273: int;
  var {:pointer} Tmp_274: int;
  var {:pointer} Tmp_275: int;
  var {:pointer} Tmp_276: int;
  var {:pointer} Tmp_277: int;
  var {:scalar} pendingIRPs_1: int;
  var {:pointer} Tmp_278: int;
  var {:pointer} pReqList: int;
  var {:pointer} Tmp_279: int;
  var {:pointer} Tmp_280: int;
  var {:pointer} Tmp_281: int;
  var {:pointer} Tmp_282: int;
  var {:pointer} Tmp_283: int;
  var {:scalar} sdv_236: int;
  var {:scalar} pendingIRPs_2: int;
  var {:pointer} Tmp_284: int;
  var {:pointer} Tmp_285: int;
  var {:pointer} Tmp_286: int;
  var {:scalar} j: int;
  var {:pointer} Tmp_287: int;
  var {:pointer} Tmp_288: int;
  var {:pointer} sdv_242: int;
  var {:pointer} pnpKey_1: int;
  var {:pointer} pResFiltEvent: int;
  var {:pointer} Tmp_289: int;
  var {:scalar} gotISR_1: int;
  var {:scalar} Tmp_290: int;
  var {:pointer} Tmp_291: int;
  var {:pointer} Tmp_292: int;
  var {:pointer} Tmp_293: int;
  var {:pointer} Tmp_294: int;
  var {:scalar} curStrLen: int;
  var {:pointer} curStr: int;
  var {:pointer} Tmp_296: int;
  var {:scalar} Tmp_297: int;
  var {:pointer} Tmp_298: int;
  var {:pointer} pDevCaps: int;
  var {:pointer} Tmp_300: int;
  var {:pointer} Tmp_301: int;
  var {:scalar} sdv_269: int;
  var {:scalar} status_9: int;
  var {:pointer} Tmp_302: int;
  var {:pointer} Tmp_303: int;
  var {:pointer} pnpKey_2: int;
  var {:pointer} Tmp_304: int;
  var {:scalar} sdv_274: int;
  var {:pointer} Tmp_305: int;
  var {:pointer} Tmp_306: int;
  var {:pointer} Tmp_307: int;
  var {:pointer} PDevObj_2: int;
  var {:pointer} PIrp: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;

  anon0:
    call {:si_unique_call 443} pIdBuf := __HAVOC_malloc(12);
    call {:si_unique_call 444} isMulti_1 := __HAVOC_malloc(4);
    call {:si_unique_call 445} isMulti_2 := __HAVOC_malloc(4);
    PDevObj_2 := actual_PDevObj_2;
    PIrp := actual_PIrp;
    call {:si_unique_call 446} Tmp_230 := __HAVOC_malloc(144);
    call {:si_unique_call 447} Tmp_231 := __HAVOC_malloc(148);
    call {:si_unique_call 448} Tmp_233 := __HAVOC_malloc(64);
    call {:si_unique_call 449} Tmp_234 := __HAVOC_malloc(72);
    call {:si_unique_call 450} Tmp_235 := __HAVOC_malloc(112);
    call {:si_unique_call 451} Tmp_237 := __HAVOC_malloc(100);
    call {:si_unique_call 452} Tmp_238 := __HAVOC_malloc(112);
    call {:si_unique_call 453} Tmp_239 := __HAVOC_malloc(72);
    call {:si_unique_call 454} Tmp_240 := __HAVOC_malloc(132);
    call {:si_unique_call 455} Tmp_241 := __HAVOC_malloc(180);
    call {:si_unique_call 456} Tmp_243 := __HAVOC_malloc(116);
    call {:si_unique_call 457} Tmp_244 := __HAVOC_malloc(60);
    call {:si_unique_call 458} Tmp_245 := __HAVOC_malloc(380);
    call {:si_unique_call 459} Tmp_247 := __HAVOC_malloc(128);
    call {:si_unique_call 460} Tmp_248 := __HAVOC_malloc(28);
    call {:si_unique_call 461} Tmp_249 := __HAVOC_malloc(88);
    call {:si_unique_call 462} Tmp_250 := __HAVOC_malloc(72);
    call {:si_unique_call 463} Tmp_251 := __HAVOC_malloc(72);
    call {:si_unique_call 464} Tmp_252 := __HAVOC_malloc(120);
    call {:si_unique_call 465} Tmp_253 := __HAVOC_malloc(60);
    call {:si_unique_call 466} Tmp_254 := __HAVOC_malloc(60);
    call {:si_unique_call 467} Tmp_256 := __HAVOC_malloc(60);
    call {:si_unique_call 468} Tmp_257 := __HAVOC_malloc(116);
    call {:si_unique_call 469} Tmp_258 := __HAVOC_malloc(112);
    call {:si_unique_call 470} Tmp_259 := __HAVOC_malloc(392);
    call {:si_unique_call 471} Tmp_260 := __HAVOC_malloc(72);
    call {:si_unique_call 472} Tmp_261 := __HAVOC_malloc(72);
    call {:si_unique_call 473} Tmp_262 := __HAVOC_malloc(28);
    call {:si_unique_call 474} Tmp_263 := __HAVOC_malloc(28);
    call {:si_unique_call 475} Tmp_264 := __HAVOC_malloc(92);
    call {:si_unique_call 476} Tmp_265 := __HAVOC_malloc(120);
    call {:si_unique_call 477} Tmp_266 := __HAVOC_malloc(88);
    call {:si_unique_call 478} Tmp_267 := __HAVOC_malloc(72);
    call {:si_unique_call 479} Tmp_269 := __HAVOC_malloc(72);
    call {:si_unique_call 480} Tmp_272 := __HAVOC_malloc(72);
    call {:si_unique_call 481} Tmp_274 := __HAVOC_malloc(72);
    call {:si_unique_call 482} Tmp_275 := __HAVOC_malloc(64);
    call {:si_unique_call 483} Tmp_276 := __HAVOC_malloc(72);
    call {:si_unique_call 484} Tmp_277 := __HAVOC_malloc(28);
    call {:si_unique_call 485} Tmp_278 := __HAVOC_malloc(60);
    call {:si_unique_call 486} Tmp_279 := __HAVOC_malloc(60);
    call {:si_unique_call 487} Tmp_280 := __HAVOC_malloc(168);
    call {:si_unique_call 488} Tmp_281 := __HAVOC_malloc(72);
    call {:si_unique_call 489} Tmp_282 := __HAVOC_malloc(100);
    call {:si_unique_call 490} Tmp_283 := __HAVOC_malloc(132);
    call {:si_unique_call 491} Tmp_284 := __HAVOC_malloc(88);
    call {:si_unique_call 492} Tmp_285 := __HAVOC_malloc(60);
    call {:si_unique_call 493} Tmp_286 := __HAVOC_malloc(128);
    call {:si_unique_call 494} Tmp_287 := __HAVOC_malloc(116);
    call {:si_unique_call 495} Tmp_288 := __HAVOC_malloc(60);
    call {:si_unique_call 496} Tmp_289 := __HAVOC_malloc(128);
    call {:si_unique_call 497} Tmp_291 := __HAVOC_malloc(136);
    call {:si_unique_call 498} Tmp_292 := __HAVOC_malloc(72);
    call {:si_unique_call 499} Tmp_293 := __HAVOC_malloc(72);
    call {:si_unique_call 500} Tmp_294 := __HAVOC_malloc(168);
    call {:si_unique_call 501} Tmp_296 := __HAVOC_malloc(60);
    call {:si_unique_call 502} Tmp_298 := __HAVOC_malloc(132);
    call {:si_unique_call 503} Tmp_300 := __HAVOC_malloc(176);
    call {:si_unique_call 504} Tmp_301 := __HAVOC_malloc(176);
    call {:si_unique_call 505} Tmp_302 := __HAVOC_malloc(144);
    call {:si_unique_call 506} Tmp_303 := __HAVOC_malloc(132);
    call {:si_unique_call 507} Tmp_304 := __HAVOC_malloc(140);
    call {:si_unique_call 508} Tmp_305 := __HAVOC_malloc(156);
    call {:si_unique_call 509} Tmp_306 := __HAVOC_malloc(112);
    call {:si_unique_call 510} Tmp_307 := __HAVOC_malloc(120);
    assume {:nonnull} PDevObj_2 != 0;
    assume PDevObj_2 > 0;
    havoc pDevExt_4;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc pLowerDevObj_3;
    call {:si_unique_call 511} pIrpStack := sdv_IoGetCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 512} sdv_do_paged_code_check();
    call {:si_unique_call 513} status_9 := SerialIRPPrologue(PIrp, pDevExt_4);
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} status_9 != 0;
    Tmp_234 := strConst__li2bpl2;
    call {:si_unique_call 514} vslice_dummy_var_138 := SerialDbgPrintEx(9, Tmp_234);
    call {:si_unique_call 515} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 516} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := status_9;
    goto L1;

  L1:
    call {:si_unique_call 517} SLIC_SerialPnpDispatch_exit(strConst__li2bpl0, Tmp_229);
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon230_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon165_Then:
    assume {:partition} status_9 == 0;
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    goto L270;

  L270:
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 518} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L870;

  L870:
    call {:si_unique_call 519} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 520} status_9 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    Tmp_229 := status_9;
    goto L1;

  anon175_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L870;

  anon207_Then:
    Tmp_298 := strConst__li2bpl103;
    call {:si_unique_call 521} vslice_dummy_var_196 := SerialDbgPrintEx(12, Tmp_298);
    Tmp_279 := strConst__li2bpl104;
    call {:si_unique_call 522} vslice_dummy_var_197 := SerialDbgPrintEx(12, Tmp_279);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 523} SerialSetDeviceFlags(pDevExt_4, DevicePNPAccept__SERIAL_DEVICE_EXTENSION(pDevExt_4), 8, 1);
    call {:si_unique_call 524} SerialKillPendingIrps(PDevObj_2);
    call {:si_unique_call 525} Tmp_273 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 526} vslice_dummy_var_198 := sdv_InterlockedDecrement(Tmp_273);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 527} Tmp_273 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 528} sdv_269 := sdv_InterlockedDecrement(Tmp_273);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    pendingIRPs_1 := sdv_269;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} pendingIRPs_1 != 0;
    call {:si_unique_call 529} vslice_dummy_var_127 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L92;

  L92:
    call {:si_unique_call 530} Tmp_273 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 531} vslice_dummy_var_199 := sdv_InterlockedIncrement(Tmp_273);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 532} SerialDisableInterfacesResources(PDevObj_2, 0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 533} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L885;

  L885:
    call {:si_unique_call 534} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 535} Tmp_229 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    goto L1;

  anon246_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L885;

  anon245_Then:
    assume {:partition} pendingIRPs_1 == 0;
    goto L92;

  anon208_Then:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    goto L109;

  L109:
    call {:si_unique_call 536} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    call {:si_unique_call 537} Tmp_229 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    goto L1;

  anon167_Then:
    goto L109;

  anon209_Then:
    assume {:nonnull} isMulti_1 != 0;
    assume isMulti_1 > 0;
    Tmp_237 := strConst__li2bpl130;
    call {:si_unique_call 538} vslice_dummy_var_191 := SerialDbgPrintEx(12, Tmp_237);
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    goto L129;

  L129:
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 539} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L879;

  L879:
    call {:si_unique_call 540} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 541} Tmp_229 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    goto L1;

  anon171_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L879;

  anon170_Then:
    goto L127;

  L127:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 542} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L882;

  L882:
    call {:si_unique_call 543} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 544} Tmp_229 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    goto L1;

  anon239_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L882;

  anon172_Then:
    call {:si_unique_call 545} status_9 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} status_9 >= 0;
    assume {:nonnull} isMulti_1 != 0;
    assume isMulti_1 > 0;
    Tmp_275 := strConst__li2bpl46;
    call {:si_unique_call 546} status_9 := SerialGetRegistryKeyValue(pnpKey_1, Tmp_275, 32, isMulti_1, 4);
    call {:si_unique_call 547} vslice_dummy_var_128 := ZwClose(0);
    assume {:nonnull} isMulti_1 != 0;
    assume isMulti_1 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    Tmp_236 := strConst__li2bpl106;
    goto L162;

  L162:
    assume {:nonnull} isMulti_1 != 0;
    assume isMulti_1 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    Tmp_255 := 18;
    goto L166;

  L166:
    pnpIdStrLen := Tmp_255;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    allocLen := 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    havoc curStr;
    goto L179;

  L179:
    call {:si_unique_call 548} allocLen, curStrLen := SerialPnpDispatch_loop_L179(sdv_175, allocLen, curStrLen, curStr);
    goto L179_last;

  L179_last:
    curStrLen := sdv_175;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} curStrLen != 0;
    allocLen := allocLen + curStrLen * 2 + 2;
    goto anon242_Else_dummy;

  anon242_Else_dummy:
    assume false;
    return;

  anon242_Then:
    assume {:partition} curStrLen == 0;
    allocLen := allocLen + 2;
    Tmp_290 := allocLen + pnpIdStrLen + 2;
    call {:si_unique_call 549} sdv_242 := ExAllocatePoolWithTag(1, Tmp_290, -666022077);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_246;
    call {:si_unique_call 550} sdv_RtlZeroMemory(0, Tmp_246);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 551} sdv_RtlCopyMemory(0, 0, allocLen);
    call {:si_unique_call 552} vslice_dummy_var_129 := corral_nondet();
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 553} sdv_ExFreePool(0);
    goto L208;

  L208:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 554} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    call {:si_unique_call 555} Tmp_229 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    goto L1;

  anon243_Then:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 556} sdv_ExFreePool(0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_274 := strConst__li2bpl2;
    call {:si_unique_call 557} vslice_dummy_var_192 := SerialDbgPrintEx(9, Tmp_274);
    call {:si_unique_call 558} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 559} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := -1073741670;
    goto L1;

  anon241_Then:
    Tmp_253 := strConst__li2bpl107;
    call {:si_unique_call 560} vslice_dummy_var_193 := SerialDbgPrintEx(12, Tmp_253);
    Tmp_268 := pnpIdStrLen + 4;
    call {:si_unique_call 561} sdv_209 := ExAllocatePoolWithTag(1, Tmp_268, -666022077);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_270;
    call {:si_unique_call 562} sdv_RtlZeroMemory(0, Tmp_270);
    call {:si_unique_call 563} vslice_dummy_var_130 := corral_nondet();
    goto L208;

  anon244_Then:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_269 := strConst__li2bpl2;
    call {:si_unique_call 564} vslice_dummy_var_194 := SerialDbgPrintEx(9, Tmp_269);
    call {:si_unique_call 565} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 566} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := -1073741670;
    goto L1;

  anon240_Then:
    Tmp_255 := 18;
    goto L166;

  anon174_Then:
    Tmp_236 := strConst__li2bpl105;
    goto L162;

  anon173_Then:
    assume {:partition} 0 > status_9;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_239 := strConst__li2bpl2;
    call {:si_unique_call 567} vslice_dummy_var_195 := SerialDbgPrintEx(9, Tmp_239);
    call {:si_unique_call 568} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 569} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := status_9;
    goto L1;

  anon169_Then:
    goto L129;

  anon168_Then:
    goto L127;

  anon210_Then:
    Tmp_282 := strConst__li2bpl102;
    call {:si_unique_call 570} vslice_dummy_var_190 := SerialDbgPrintEx(12, Tmp_282);
    goto L270;

  anon211_Then:
    Tmp_266 := strConst__li2bpl101;
    call {:si_unique_call 571} vslice_dummy_var_189 := SerialDbgPrintEx(12, Tmp_266);
    goto L270;

  anon212_Then:
    Tmp_257 := strConst__li2bpl100;
    call {:si_unique_call 572} vslice_dummy_var_188 := SerialDbgPrintEx(12, Tmp_257);
    goto L270;

  anon213_Then:
    Tmp_238 := strConst__li2bpl99;
    call {:si_unique_call 573} vslice_dummy_var_187 := SerialDbgPrintEx(12, Tmp_238);
    goto L270;

  anon214_Then:
    assume {:nonnull} isMulti_2 != 0;
    assume isMulti_2 > 0;
    Tmp_241 := strConst__li2bpl124;
    call {:si_unique_call 574} vslice_dummy_var_175 := SerialDbgPrintEx(12, Tmp_241);
    Tmp_288 := strConst__li2bpl104;
    call {:si_unique_call 575} vslice_dummy_var_176 := SerialDbgPrintEx(12, Tmp_288);
    call {:si_unique_call 576} sdv_176 := ExAllocatePoolWithTag(0, 16, -666022077);
    pResFiltEvent := sdv_176;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} pResFiltEvent != 0;
    call {:si_unique_call 577} KeInitializeEvent(pResFiltEvent, 1, 0);
    call {:si_unique_call 578} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    call {:si_unique_call 579} sdv_IoSetCompletionRoutine(PIrp, li2bplFunctionConstant237, pResFiltEvent, 1, 1, 1);
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 580} SLIC_sdv_IoCallDriver_entry(0);
    goto L876;

  L876:
    call {:si_unique_call 581} status_9 := sdv_IoCallDriver(pLowerDevObj_3, PIrp);
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} status_9 == 259;
    call {:si_unique_call 582} vslice_dummy_var_131 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L319;

  L319:
    call {:si_unique_call 583} sdv_ExFreePool(0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    goto L327;

  L327:
    call {:si_unique_call 584} status_9 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} status_9 >= 0;
    Tmp_233 := strConst__li2bpl46;
    call {:si_unique_call 585} status_9 := SerialGetRegistryKeyValue(pnpKey_2, Tmp_233, 32, isMulti_2, 4);
    call {:si_unique_call 586} vslice_dummy_var_132 := ZwClose(0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    havoc pReqList;
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    havoc Tmp_259;
    pResList := Tmp_259;
    Tmp_301 := strConst__li2bpl125;
    call {:si_unique_call 587} vslice_dummy_var_177 := SerialDbgPrintEx(12, Tmp_301);
    listNum := 0;
    goto L346;

  L346:
    call {:si_unique_call 588} Tmp_242, Tmp_243, Tmp_245, gotInt_1, pResDesc, listNum, Tmp_280, Tmp_283, j, Tmp_289, gotISR_1, vslice_dummy_var_178, vslice_dummy_var_179, vslice_dummy_var_180, vslice_dummy_var_181 := SerialPnpDispatch_loop_L346(pResList, pDevExt_4, Tmp_242, Tmp_243, Tmp_245, isMulti_2, pLowerDevObj_3, gotInt_1, pResDesc, listNum, pReqList, Tmp_280, Tmp_283, j, Tmp_289, gotISR_1, vslice_dummy_var_178, vslice_dummy_var_179, vslice_dummy_var_180, vslice_dummy_var_181);
    goto L346_last;

  L346_last:
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    gotISR_1 := 0;
    gotInt_1 := 0;
    Tmp_243 := strConst__li2bpl126;
    call {:si_unique_call 589} vslice_dummy_var_178 := SerialDbgPrintEx(12, Tmp_243);
    j := 0;
    goto L354;

  L354:
    call {:si_unique_call 590} Tmp_242, Tmp_245, gotInt_1, pResDesc, Tmp_280, Tmp_283, j, Tmp_289, gotISR_1, vslice_dummy_var_179, vslice_dummy_var_180, vslice_dummy_var_181 := SerialPnpDispatch_loop_L354(pResList, pDevExt_4, Tmp_242, Tmp_245, isMulti_2, pLowerDevObj_3, gotInt_1, pResDesc, Tmp_280, Tmp_283, j, Tmp_289, gotISR_1, vslice_dummy_var_179, vslice_dummy_var_180, vslice_dummy_var_181);
    goto L354_last;

  L354_last:
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    Tmp_242 := j;
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    havoc Tmp_245;
    pResDesc := Tmp_245 + Tmp_242 * 380;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto L363;

  L363:
    assume {:nonnull} isMulti_2 != 0;
    assume isMulti_2 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} gotInt_1 != 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} gotISR_1 == 0;
    goto L364;

  L364:
    assume {:nonnull} isMulti_2 != 0;
    assume isMulti_2 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    goto L369;

  L369:
    j := j + 1;
    goto L369_dummy;

  L369_dummy:
    assume false;
    return;

  anon186_Then:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} gotInt_1 == 0;
    goto L369;

  anon189_Then:
    assume {:partition} gotInt_1 != 0;
    goto L355;

  L355:
    listNum := listNum + 1;
    goto L355_dummy;

  L355_dummy:
    assume false;
    return;

  anon188_Then:
    assume {:partition} gotISR_1 != 0;
    goto L355;

  anon187_Then:
    assume {:partition} gotInt_1 == 0;
    goto L364;

  anon185_Then:
    goto L364;

  anon229_Then:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} gotInt_1 != 0;
    goto L363;

  anon184_Then:
    assume {:partition} gotInt_1 == 0;
    gotInt_1 := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_283 := strConst__li2bpl128;
    call {:si_unique_call 591} vslice_dummy_var_180 := SerialDbgPrintEx(12, Tmp_283);
    goto L363;

  anon238_Then:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    Tmp_280 := strConst__li2bpl129;
    call {:si_unique_call 592} vslice_dummy_var_181 := SerialDbgPrintEx(12, Tmp_280);
    goto L363;

  anon237_Then:
    assume {:nonnull} isMulti_2 != 0;
    assume isMulti_2 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} gotISR_1 == 0;
    gotISR_1 := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_289 := strConst__li2bpl127;
    call {:si_unique_call 593} vslice_dummy_var_179 := SerialDbgPrintEx(12, Tmp_289);
    goto L363;

  anon191_Then:
    assume {:partition} gotISR_1 != 0;
    goto L363;

  anon190_Then:
    goto L363;

  anon183_Then:
    goto L363;

  anon182_Then:
    goto L355;

  anon181_Then:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_293 := strConst__li2bpl2;
    call {:si_unique_call 594} vslice_dummy_var_182 := SerialDbgPrintEx(9, Tmp_293);
    call {:si_unique_call 595} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 596} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := 0;
    goto L1;

  anon180_Then:
    assume {:partition} 0 > status_9;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_250 := strConst__li2bpl2;
    call {:si_unique_call 597} vslice_dummy_var_183 := SerialDbgPrintEx(9, Tmp_250);
    call {:si_unique_call 598} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 599} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := status_9;
    goto L1;

  anon178_Then:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto L327;

  anon179_Then:
    Tmp_252 := strConst__li2bpl108;
    call {:si_unique_call 600} vslice_dummy_var_184 := SerialDbgPrintEx(12, Tmp_252);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    havoc status_9;
    Tmp_251 := strConst__li2bpl2;
    call {:si_unique_call 601} vslice_dummy_var_185 := SerialDbgPrintEx(9, Tmp_251);
    call {:si_unique_call 602} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 603} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := status_9;
    goto L1;

  anon177_Then:
    assume {:partition} status_9 != 259;
    goto L319;

  anon176_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L876;

  anon236_Then:
    assume {:partition} pResFiltEvent == 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_292 := strConst__li2bpl2;
    call {:si_unique_call 604} vslice_dummy_var_186 := SerialDbgPrintEx(9, Tmp_292);
    call {:si_unique_call 605} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 606} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := -1073741670;
    goto L1;

  anon215_Then:
    Tmp_300 := strConst__li2bpl98;
    call {:si_unique_call 607} vslice_dummy_var_174 := SerialDbgPrintEx(12, Tmp_300);
    goto L270;

  anon216_Then:
    Tmp_294 := strConst__li2bpl109;
    call {:si_unique_call 608} vslice_dummy_var_170 := SerialDbgPrintEx(12, Tmp_294);
    call {:si_unique_call 609} sdv_180 := ExAllocatePoolWithTag(0, 16, -666022077);
    pQueryCapsEvent := sdv_180;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} pQueryCapsEvent != 0;
    call {:si_unique_call 610} KeInitializeEvent(pQueryCapsEvent, 1, 0);
    call {:si_unique_call 611} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    call {:si_unique_call 612} sdv_IoSetCompletionRoutine(PIrp, li2bplFunctionConstant237, pQueryCapsEvent, 1, 1, 1);
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 613} SLIC_sdv_IoCallDriver_entry(0);
    goto L873;

  L873:
    call {:si_unique_call 614} status_9 := sdv_IoCallDriver(pLowerDevObj_3, PIrp);
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} status_9 == 259;
    call {:si_unique_call 615} vslice_dummy_var_133 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L458;

  L458:
    call {:si_unique_call 616} sdv_ExFreePool(0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    havoc status_9;
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    goto L483;

  L483:
    Tmp_276 := strConst__li2bpl2;
    call {:si_unique_call 617} vslice_dummy_var_172 := SerialDbgPrintEx(9, Tmp_276);
    call {:si_unique_call 618} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 619} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := status_9;
    goto L1;

  anon235_Then:
    Tmp_306 := strConst__li2bpl110;
    call {:si_unique_call 620} vslice_dummy_var_171 := SerialDbgPrintEx(12, Tmp_306);
    call {:si_unique_call 621} pIrpStack := sdv_IoGetCurrentIrpStackLocation(PIrp);
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    havoc pDevCaps;
    cap := 2;
    goto L476;

  L476:
    call {:si_unique_call 622} Tmp_232, cap, Tmp_263, Tmp_277, Tmp_297 := SerialPnpDispatch_loop_L476(Tmp_232, pDevExt_4, cap, Tmp_263, Tmp_277, Tmp_297, pDevCaps);
    goto L476_last;

  L476_last:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} 7 > cap;
    Tmp_297 := cap;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_277;
    Tmp_232 := cap;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    havoc Tmp_263;
    assume {:nonnull} Tmp_263 != 0;
    assume Tmp_263 > 0;
    assume {:nonnull} Tmp_277 != 0;
    assume Tmp_277 > 0;
    cap := cap + 1;
    goto anon194_Else_dummy;

  anon194_Else_dummy:
    assume false;
    return;

  anon194_Then:
    assume {:partition} cap >= 7;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_262;
    assume {:nonnull} Tmp_262 != 0;
    assume Tmp_262 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_248;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto L483;

  anon193_Then:
    assume {:partition} status_9 != 259;
    goto L458;

  anon192_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L873;

  anon234_Then:
    assume {:partition} pQueryCapsEvent == 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_260 := strConst__li2bpl2;
    call {:si_unique_call 623} vslice_dummy_var_173 := SerialDbgPrintEx(9, Tmp_260);
    call {:si_unique_call 624} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 625} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := -1073741670;
    goto L1;

  anon217_Then:
    Tmp_286 := strConst__li2bpl97;
    call {:si_unique_call 626} vslice_dummy_var_169 := SerialDbgPrintEx(12, Tmp_286);
    goto L270;

  anon218_Then:
    Tmp_305 := strConst__li2bpl96;
    call {:si_unique_call 627} vslice_dummy_var_162 := SerialDbgPrintEx(12, Tmp_305);
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    Tmp_302 := strConst__li2bpl116;
    call {:si_unique_call 628} vslice_dummy_var_167 := SerialDbgPrintEx(12, Tmp_302);
    goto L524;

  L524:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 629} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L867;

  L867:
    call {:si_unique_call 630} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 631} status_9 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    Tmp_229 := status_9;
    goto L1;

  anon196_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L867;

  anon225_Then:
    Tmp_264 := strConst__li2bpl111;
    call {:si_unique_call 632} vslice_dummy_var_168 := SerialDbgPrintEx(12, Tmp_264);
    goto L524;

  anon226_Then:
    Tmp_247 := strConst__li2bpl115;
    call {:si_unique_call 633} vslice_dummy_var_166 := SerialDbgPrintEx(12, Tmp_247);
    goto L524;

  anon227_Then:
    Tmp_265 := strConst__li2bpl114;
    call {:si_unique_call 634} vslice_dummy_var_165 := SerialDbgPrintEx(12, Tmp_265);
    goto L524;

  anon228_Then:
    Tmp_240 := strConst__li2bpl113;
    call {:si_unique_call 635} vslice_dummy_var_164 := SerialDbgPrintEx(12, Tmp_240);
    goto L524;

  anon195_Then:
    Tmp_235 := strConst__li2bpl112;
    call {:si_unique_call 636} vslice_dummy_var_163 := SerialDbgPrintEx(12, Tmp_235);
    goto L524;

  anon219_Then:
    Tmp_304 := strConst__li2bpl95;
    call {:si_unique_call 637} vslice_dummy_var_160 := SerialDbgPrintEx(12, Tmp_304);
    Tmp_278 := strConst__li2bpl104;
    call {:si_unique_call 638} vslice_dummy_var_161 := SerialDbgPrintEx(12, Tmp_278);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 639} SerialSetDeviceFlags(pDevExt_4, DevicePNPAccept__SERIAL_DEVICE_EXTENSION(pDevExt_4), 2, 0);
    goto L541;

  L541:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 640} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    call {:si_unique_call 641} Tmp_229 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    goto L1;

  anon197_Then:
    goto L541;

  anon220_Then:
    Tmp_291 := strConst__li2bpl117;
    call {:si_unique_call 642} vslice_dummy_var_154 := SerialDbgPrintEx(12, Tmp_291);
    Tmp_254 := strConst__li2bpl104;
    call {:si_unique_call 643} vslice_dummy_var_155 := SerialDbgPrintEx(12, Tmp_254);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_303 := strConst__li2bpl123;
    call {:si_unique_call 644} vslice_dummy_var_156 := SerialDbgPrintEx(12, Tmp_303);
    Tmp_272 := strConst__li2bpl2;
    call {:si_unique_call 645} vslice_dummy_var_157 := SerialDbgPrintEx(9, Tmp_272);
    call {:si_unique_call 646} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 647} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := -1073741637;
    goto L1;

  anon198_Then:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 648} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L864;

  L864:
    call {:si_unique_call 649} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 650} Tmp_229 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    goto L1;

  anon200_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L864;

  anon199_Then:
    call {:si_unique_call 651} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    call {:si_unique_call 652} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_249 := strConst__li2bpl122;
    call {:si_unique_call 653} vslice_dummy_var_158 := SerialDbgPrintEx(12, Tmp_249);
    Tmp_267 := strConst__li2bpl2;
    call {:si_unique_call 654} vslice_dummy_var_159 := SerialDbgPrintEx(9, Tmp_267);
    call {:si_unique_call 655} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 656} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := 17;
    goto L1;

  anon201_Then:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 657} SerialSetDeviceFlags(pDevExt_4, DevicePNPAccept__SERIAL_DEVICE_EXTENSION(pDevExt_4), 2, 1);
    call {:si_unique_call 658} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 659} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    call {:si_unique_call 660} Tmp_229 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    goto L1;

  anon221_Then:
    Tmp_258 := strConst__li2bpl118;
    call {:si_unique_call 661} vslice_dummy_var_150 := SerialDbgPrintEx(12, Tmp_258);
    Tmp_285 := strConst__li2bpl104;
    call {:si_unique_call 662} vslice_dummy_var_151 := SerialDbgPrintEx(12, Tmp_285);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 663} SerialSetDeviceFlags(pDevExt_4, Flags__SERIAL_DEVICE_EXTENSION(pDevExt_4), 2, 1);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 664} SerialSetDeviceFlags(pDevExt_4, DevicePNPAccept__SERIAL_DEVICE_EXTENSION(pDevExt_4), 4, 1);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 665} SerialSetDeviceFlags(pDevExt_4, DevicePNPAccept__SERIAL_DEVICE_EXTENSION(pDevExt_4), 2, 0);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 666} Tmp_273 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 667} vslice_dummy_var_152 := sdv_InterlockedDecrement(Tmp_273);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 668} Tmp_273 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 669} sdv_236 := sdv_InterlockedDecrement(Tmp_273);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    pendingIRPs := sdv_236;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} pendingIRPs != 0;
    call {:si_unique_call 670} vslice_dummy_var_134 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L643;

  L643:
    call {:si_unique_call 671} Tmp_273 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 672} vslice_dummy_var_153 := sdv_InterlockedIncrement(Tmp_273);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    call {:si_unique_call 673} SerialReleaseResources(pDevExt_4);
    goto L650;

  L650:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 674} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L858;

  L858:
    call {:si_unique_call 675} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 676} SLIC_sdv_IoCallDriver_entry(0);
    goto L861;

  L861:
    call {:si_unique_call 677} Tmp_229 := sdv_IoCallDriver(pLowerDevObj_3, PIrp);
    goto L1;

  anon203_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L861;

  anon233_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L858;

  anon202_Then:
    goto L650;

  anon232_Then:
    assume {:partition} pendingIRPs == 0;
    goto L643;

  anon222_Then:
    Tmp_231 := strConst__li2bpl94;
    call {:si_unique_call 678} vslice_dummy_var_148 := SerialDbgPrintEx(12, Tmp_231);
    Tmp_244 := strConst__li2bpl104;
    call {:si_unique_call 679} vslice_dummy_var_149 := SerialDbgPrintEx(12, Tmp_244);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 680} SerialSetDeviceFlags(pDevExt_4, DevicePNPAccept__SERIAL_DEVICE_EXTENSION(pDevExt_4), 1, 0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 681} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    call {:si_unique_call 682} Tmp_229 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    goto L1;

  anon223_Then:
    Tmp_307 := strConst__li2bpl119;
    call {:si_unique_call 683} vslice_dummy_var_145 := SerialDbgPrintEx(12, Tmp_307);
    Tmp_256 := strConst__li2bpl104;
    call {:si_unique_call 684} vslice_dummy_var_146 := SerialDbgPrintEx(12, Tmp_256);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 685} SerialSetDeviceFlags(pDevExt_4, DevicePNPAccept__SERIAL_DEVICE_EXTENSION(pDevExt_4), 1, 1);
    call {:si_unique_call 686} SerialKillPendingIrps(PDevObj_2);
    call {:si_unique_call 687} Tmp_273 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 688} vslice_dummy_var_147 := sdv_InterlockedDecrement(Tmp_273);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 689} Tmp_273 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 690} sdv_274 := sdv_InterlockedDecrement(Tmp_273);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    pendingIRPs_2 := sdv_274;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} pendingIRPs_2 != 0;
    call {:si_unique_call 691} vslice_dummy_var_136 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L697;

  L697:
    call {:si_unique_call 692} vslice_dummy_var_135 := SerialRemoveDevObj(PDevObj_2);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 693} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 694} SLIC_sdv_IoCallDriver_entry(0);
    goto L855;

  L855:
    call {:si_unique_call 695} Tmp_229 := sdv_IoCallDriver(pLowerDevObj_3, PIrp);
    goto L1;

  anon204_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L855;

  anon231_Then:
    assume {:partition} pendingIRPs_2 == 0;
    goto L697;

  anon224_Then:
    Tmp_230 := strConst__li2bpl120;
    call {:si_unique_call 696} vslice_dummy_var_141 := SerialDbgPrintEx(12, Tmp_230);
    Tmp_296 := strConst__li2bpl104;
    call {:si_unique_call 697} vslice_dummy_var_142 := SerialDbgPrintEx(12, Tmp_296);
    call {:si_unique_call 698} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    call {:si_unique_call 699} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_284 := strConst__li2bpl122;
    call {:si_unique_call 700} vslice_dummy_var_143 := SerialDbgPrintEx(12, Tmp_284);
    Tmp_281 := strConst__li2bpl2;
    call {:si_unique_call 701} vslice_dummy_var_144 := SerialDbgPrintEx(9, Tmp_281);
    call {:si_unique_call 702} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 703} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := 17;
    goto L1;

  anon205_Then:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 704} SerialSetDeviceFlags(pDevExt_4, DevicePNPAccept__SERIAL_DEVICE_EXTENSION(pDevExt_4), 1, 1);
    call {:si_unique_call 705} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 706} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    call {:si_unique_call 707} Tmp_229 := SerialIoCallDriver(pDevExt_4, pLowerDevObj_3, PIrp);
    goto L1;

  anon166_Then:
    Tmp_287 := strConst__li2bpl121;
    call {:si_unique_call 708} vslice_dummy_var_139 := SerialDbgPrintEx(12, Tmp_287);
    call {:si_unique_call 709} MmLockPagableSectionByHandle(0);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 710} status_9 := SerialStartDevice(PDevObj_2, PIrp);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    goto L768;

  L768:
    call {:si_unique_call 711} MmUnlockPagableImageSection(0);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_261 := strConst__li2bpl2;
    call {:si_unique_call 712} vslice_dummy_var_140 := SerialDbgPrintEx(9, Tmp_261);
    call {:si_unique_call 713} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 714} SerialIRPEpilogue(pDevExt_4);
    Tmp_229 := status_9;
    goto L1;

  anon206_Then:
    call {:si_unique_call 715} vslice_dummy_var_137 := SerialGotoPowerState(PDevObj_2, pDevExt_4, 4);
    goto L768;
}



procedure {:origName "SerialStartDevice"} SerialStartDevice(actual_PDevObj_3: int, actual_PIrp_1: int) returns (Tmp_308: int);
  modifies alloc, queued, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialStartDevice"} SerialStartDevice(actual_PDevObj_3: int, actual_PIrp_1: int) returns (Tmp_308: int)
{
  var {:pointer} pDevExt_5: int;
  var {:pointer} Tmp_309: int;
  var {:pointer} pIrpStack_1: int;
  var {:pointer} pLowerDevObj_4: int;
  var {:pointer} Tmp_311: int;
  var {:scalar} status_10: int;
  var {:pointer} PDevObj_3: int;
  var {:pointer} PIrp_1: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;

  anon0:
    PDevObj_3 := actual_PDevObj_3;
    PIrp_1 := actual_PIrp_1;
    call {:si_unique_call 716} Tmp_309 := __HAVOC_malloc(112);
    call {:si_unique_call 717} Tmp_311 := __HAVOC_malloc(112);
    call {:si_unique_call 718} pIrpStack_1 := sdv_IoGetCurrentIrpStackLocation(PIrp_1);
    status_10 := -1073741822;
    assume {:nonnull} PDevObj_3 != 0;
    assume PDevObj_3 > 0;
    havoc pDevExt_5;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc pLowerDevObj_4;
    call {:si_unique_call 719} sdv_do_paged_code_check();
    Tmp_309 := strConst__li2bpl131;
    call {:si_unique_call 720} vslice_dummy_var_201 := SerialDbgPrintEx(11, Tmp_309);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 721} KeInitializeEvent(SerialStartEvent__SERIAL_DEVICE_EXTENSION(pDevExt_5), 1, 0);
    call {:si_unique_call 722} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_1);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 723} sdv_IoSetCompletionRoutine(PIrp_1, li2bplFunctionConstant237, SerialStartEvent__SERIAL_DEVICE_EXTENSION(pDevExt_5), 1, 1, 1);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume PIrp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 724} SLIC_sdv_IoCallDriver_entry(0);
    goto L50;

  L50:
    call {:si_unique_call 725} status_10 := sdv_IoCallDriver(pLowerDevObj_4, PIrp_1);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} status_10 == 259;
    call {:si_unique_call 726} vslice_dummy_var_200 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    havoc status_10;
    goto L34;

  L34:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_10 >= 0;
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    havoc vslice_dummy_var_47;
    havoc vslice_dummy_var_48;
    call {:si_unique_call 727} status_10 := SerialFinishStartDevice(PDevObj_3, vslice_dummy_var_47, vslice_dummy_var_48, 0);
    Tmp_308 := status_10;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} 0 > status_10;
    Tmp_311 := strConst__li2bpl132;
    call {:si_unique_call 728} vslice_dummy_var_202 := SerialDbgPrintEx(14, Tmp_311);
    Tmp_308 := status_10;
    goto L1;

  anon8_Then:
    assume {:partition} status_10 != 259;
    goto L34;

  anon7_Then:
    assume !(PIrp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L50;
}



procedure {:origName "SerialReportMaxBaudRate"} SerialReportMaxBaudRate(actual_Bauds: int) returns (Tmp_312: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_312 == 131072 || Tmp_312 == 115200 || Tmp_312 == 57344 || Tmp_312 == 57600 || Tmp_312 == 38400 || Tmp_312 == 19200 || Tmp_312 == 14400 || Tmp_312 == 9600 || Tmp_312 == 7200 || Tmp_312 == 4800 || Tmp_312 == 2400 || Tmp_312 == 1800 || Tmp_312 == 1200 || Tmp_312 == 600 || Tmp_312 == 300 || Tmp_312 == 150 || Tmp_312 == 135 || Tmp_312 == 110 || Tmp_312 == 75 || Tmp_312 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialReportMaxBaudRate"} SerialReportMaxBaudRate(actual_Bauds: int) returns (Tmp_312: int)
{
  var {:scalar} Bauds: int;

  anon0:
    Bauds := actual_Bauds;
    call {:si_unique_call 729} sdv_do_paged_code_check();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Bauds, 65536) != 0;
    Tmp_312 := 131072;
    goto L1;

  L1:
    return;

  anon39_Then:
    assume {:partition} BAND(Bauds, 65536) == 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} BAND(Bauds, 131072) != 0;
    Tmp_312 := 115200;
    goto L1;

  anon40_Then:
    assume {:partition} BAND(Bauds, 131072) == 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} BAND(Bauds, 32768) != 0;
    Tmp_312 := 57344;
    goto L1;

  anon41_Then:
    assume {:partition} BAND(Bauds, 32768) == 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(Bauds, 262144) != 0;
    Tmp_312 := 57600;
    goto L1;

  anon42_Then:
    assume {:partition} BAND(Bauds, 262144) == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(Bauds, 16384) != 0;
    Tmp_312 := 38400;
    goto L1;

  anon43_Then:
    assume {:partition} BAND(Bauds, 16384) == 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(Bauds, 8192) != 0;
    Tmp_312 := 19200;
    goto L1;

  anon44_Then:
    assume {:partition} BAND(Bauds, 8192) == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} BAND(Bauds, 4096) != 0;
    Tmp_312 := 14400;
    goto L1;

  anon45_Then:
    assume {:partition} BAND(Bauds, 4096) == 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(Bauds, 2048) != 0;
    Tmp_312 := 9600;
    goto L1;

  anon46_Then:
    assume {:partition} BAND(Bauds, 2048) == 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Bauds, 1024) != 0;
    Tmp_312 := 7200;
    goto L1;

  anon47_Then:
    assume {:partition} BAND(Bauds, 1024) == 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Bauds, 512) != 0;
    Tmp_312 := 4800;
    goto L1;

  anon48_Then:
    assume {:partition} BAND(Bauds, 512) == 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BAND(Bauds, 256) != 0;
    Tmp_312 := 2400;
    goto L1;

  anon49_Then:
    assume {:partition} BAND(Bauds, 256) == 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(Bauds, 128) != 0;
    Tmp_312 := 1800;
    goto L1;

  anon50_Then:
    assume {:partition} BAND(Bauds, 128) == 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(Bauds, 64) != 0;
    Tmp_312 := 1200;
    goto L1;

  anon51_Then:
    assume {:partition} BAND(Bauds, 64) == 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} BAND(Bauds, 32) != 0;
    Tmp_312 := 600;
    goto L1;

  anon52_Then:
    assume {:partition} BAND(Bauds, 32) == 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(Bauds, 16) != 0;
    Tmp_312 := 300;
    goto L1;

  anon53_Then:
    assume {:partition} BAND(Bauds, 16) == 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} BAND(Bauds, 8) != 0;
    Tmp_312 := 150;
    goto L1;

  anon54_Then:
    assume {:partition} BAND(Bauds, 8) == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(Bauds, 4) != 0;
    Tmp_312 := 135;
    goto L1;

  anon55_Then:
    assume {:partition} BAND(Bauds, 4) == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} BAND(Bauds, 2) != 0;
    Tmp_312 := 110;
    goto L1;

  anon56_Then:
    assume {:partition} BAND(Bauds, 2) == 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(Bauds, 1) != 0;
    Tmp_312 := 75;
    goto L1;

  anon57_Then:
    assume {:partition} BAND(Bauds, 1) == 0;
    Tmp_312 := 0;
    goto L1;
}



procedure {:origName "SerialUndoExternalNaming"} SerialUndoExternalNaming(actual_Extension_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialUndoExternalNaming"} SerialUndoExternalNaming(actual_Extension_2: int)
{
  var {:scalar} Tmp_314: int;
  var {:pointer} keyHandle_2: int;
  var {:pointer} pRegName_1: int;
  var {:scalar} symLinkName: int;
  var {:pointer} Tmp_316: int;
  var {:pointer} Tmp_318: int;
  var {:pointer} Tmp_319: int;
  var {:scalar} status_11: int;
  var {:pointer} Tmp_322: int;
  var {:scalar} Tmp_324: int;
  var {:pointer} Extension_2: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;

  anon0:
    call {:si_unique_call 730} pRegName_1 := __HAVOC_malloc(4);
    call {:si_unique_call 731} symLinkName := __HAVOC_malloc(12);
    call {:si_unique_call 732} Tmp_324 := __HAVOC_malloc(20);
    call {:si_unique_call 733} vslice_dummy_var_203 := __HAVOC_malloc(4);
    Extension_2 := actual_Extension_2;
    call {:si_unique_call 734} Tmp_316 := __HAVOC_malloc(236);
    call {:si_unique_call 735} Tmp_318 := __HAVOC_malloc(132);
    call {:si_unique_call 736} Tmp_319 := __HAVOC_malloc(76);
    call {:si_unique_call 737} vslice_dummy_var_206 := __HAVOC_malloc(44);
    call {:si_unique_call 738} sdv_do_paged_code_check();
    Tmp_316 := strConst__li2bpl133;
    call {:si_unique_call 739} vslice_dummy_var_207 := SerialDbgPrintEx(6, Tmp_316);
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 740} status_11 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    call {:si_unique_call 741} sdv_ExFreePool(0);
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    goto L17;

  L17:
    call {:si_unique_call 742} status_11 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_11 == 0;
    call {:si_unique_call 743} RtlInitUnicodeString(symLinkName, 0);
    call {:si_unique_call 744} status_11 := SerialReadSymName(Extension_2, keyHandle_2, symLinkName, pRegName_1);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_11 != 0;
    goto L43;

  L43:
    call {:si_unique_call 745} vslice_dummy_var_204 := ZwClose(0);
    goto L14;

  L14:
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    call {:si_unique_call 746} sdv_ExFreePool(0);
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    call {:si_unique_call 747} status_11 := RtlDeleteRegistryValue(4, 0, 0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_11 < 0;
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    havoc Tmp_314;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    havoc Tmp_322;
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    assume {:nonnull} Tmp_322 != 0;
    assume Tmp_322 > 0;
    havoc vslice_dummy_var_49;
    havoc vslice_dummy_var_50;
    havoc vslice_dummy_var_51;
    havoc vslice_dummy_var_52;
    call {:si_unique_call 748} SerialLogError(vslice_dummy_var_49, vslice_dummy_var_50, vslice_dummy_var_51, Tmp_324, 0, 0, 0, 55, status_11, 393222, Tmp_314, vslice_dummy_var_52, 0, 0);
    Tmp_318 := strConst__li2bpl135;
    call {:si_unique_call 749} vslice_dummy_var_208 := SerialDbgPrintEx(14, Tmp_318);
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:partition} 0 <= status_11;
    goto L1;

  anon29_Then:
    goto L1;

  anon28_Then:
    goto L1;

  anon23_Then:
    goto L55;

  anon27_Then:
    assume {:partition} status_11 == 0;
    Tmp_319 := strConst__li2bpl134;
    call {:si_unique_call 750} vslice_dummy_var_209 := SerialDbgPrintEx(4, Tmp_319);
    call {:si_unique_call 751} vslice_dummy_var_205 := IoDeleteSymbolicLink(0);
    call {:si_unique_call 752} sdv_ExFreePool(0);
    call {:si_unique_call 753} sdv_ExFreePool(0);
    goto L43;

  anon26_Then:
    assume {:partition} status_11 != 0;
    goto L14;

  anon25_Then:
    goto L17;

  anon24_Then:
    goto L14;

  anon22_Then:
    goto L14;

  anon21_Then:
    goto L1;
}



procedure {:origName "SerialCancelImmediate"} SerialCancelImmediate(actual_DeviceObject_3: int, actual_Irp_3: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialCancelImmediate"} SerialCancelImmediate(actual_DeviceObject_3: int, actual_Irp_3: int)
{
  var {:pointer} Extension_3: int;
  var {:pointer} DeviceObject_3: int;
  var {:pointer} Irp_3: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 754} vslice_dummy_var_210 := __HAVOC_malloc(4);
    DeviceObject_3 := actual_DeviceObject_3;
    Irp_3 := actual_Irp_3;
    assume {:nonnull} DeviceObject_3 != 0;
    assume DeviceObject_3 > 0;
    havoc Extension_3;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    havoc vslice_dummy_var_53;
    call {:si_unique_call 755} SerialTryToCompleteCurrent#1(Extension_3, li2bplFunctionConstant356, vslice_dummy_var_53, -1073741536, CurrentImmediateIrp__SERIAL_DEVICE_EXTENSION(Extension_3), 0, 0, ImmediateTotalTimer__SERIAL_DEVICE_EXTENSION(Extension_3), 0, li2bplFunctionConstant354, 2);
    return;
}



procedure {:origName "_sdv_init13"} _sdv_init13();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init13"} _sdv_init13()
{
  var vslice_dummy_var_211: int;

  anon0:
    call {:si_unique_call 756} vslice_dummy_var_211 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialStartImmediate"} SerialStartImmediate(actual_Extension_4: int);
  modifies alloc, markedPending, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialStartImmediate"} SerialStartImmediate(actual_Extension_4: int)
{
  var {:pointer} s_p_e_c_i_a_l_1: int;
  var {:scalar} TotalTime: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} Tmp_331: int;
  var {:pointer} sdv_295: int;
  var {:scalar} UseATimer: int;
  var {:pointer} sdv_296: int;
  var {:scalar} OldIrql: int;
  var {:pointer} sdv_298: int;
  var {:pointer} Tmp_332: int;
  var {:scalar} s_p_e_c_i_a_l_2: int;
  var {:pointer} s_p_e_c_i_a_l_3: int;
  var {:pointer} OldIrp: int;
  var {:pointer} Tmp_334: int;
  var {:pointer} Tmp_335: int;
  var {:scalar} s_p_e_c_i_a_l_4: int;
  var {:scalar} Timeouts: int;
  var {:pointer} Tmp_336: int;
  var {:pointer} Extension_4: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;

  anon0:
    call {:si_unique_call 757} TotalTime := __HAVOC_malloc(20);
    call {:si_unique_call 758} vslice_dummy_var_212 := __HAVOC_malloc(4);
    call {:si_unique_call 759} Timeouts := __HAVOC_malloc(20);
    Extension_4 := actual_Extension_4;
    call {:si_unique_call 760} Tmp_332 := __HAVOC_malloc(92);
    call {:si_unique_call 761} Tmp_334 := __HAVOC_malloc(108);
    call {:si_unique_call 762} Tmp_335 := __HAVOC_malloc(72);
    Tmp_334 := strConst__li2bpl136;
    call {:si_unique_call 763} vslice_dummy_var_216 := SerialDbgPrintEx(2, Tmp_334);
    UseATimer := 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_331;
    assume {:nonnull} Tmp_331 != 0;
    assume Tmp_331 > 0;
    call {:si_unique_call 764} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 765} Tmp_336 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    call {:si_unique_call 766} sdv_KeAcquireSpinLock(0, Tmp_336);
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    havoc OldIrql;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    call {:si_unique_call 767} sdv_KeReleaseSpinLock(0, OldIrql);
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L24;

  L24:
    UseATimer := 1;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    goto L28;

  L28:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_54;
    call {:si_unique_call 768} sdv_298 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_54);
    assume {:nonnull} sdv_298 != 0;
    assume sdv_298 > 0;
    call {:si_unique_call 769} Tmp_336 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    call {:si_unique_call 770} IoAcquireCancelSpinLock(Tmp_336);
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    havoc OldIrql;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_330;
    assume {:nonnull} Tmp_330 != 0;
    assume Tmp_330 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc OldIrp;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 771} IoReleaseCancelSpinLock(OldIrql);
    assume {:nonnull} OldIrp != 0;
    assume OldIrp > 0;
    assume {:nonnull} OldIrp != 0;
    assume OldIrp > 0;
    Tmp_335 := strConst__li2bpl2;
    call {:si_unique_call 772} vslice_dummy_var_217 := SerialDbgPrintEx(9, Tmp_335);
    call {:si_unique_call 773} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 774} SerialIRPEpilogue(Extension_4);
    goto L56;

  L56:
    Tmp_332 := strConst__li2bpl137;
    call {:si_unique_call 775} vslice_dummy_var_218 := SerialDbgPrintEx(2, Tmp_332);
    return;

  anon11_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_55;
    call {:si_unique_call 776} vslice_dummy_var_213 := sdv_IoSetCancelRoutine(vslice_dummy_var_55, li2bplFunctionConstant351);
    s_p_e_c_i_a_l_2 := 2;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_56;
    call {:si_unique_call 777} sdv_295 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_56);
    assume {:nonnull} sdv_295 != 0;
    assume sdv_295 > 0;
    s_p_e_c_i_a_l_1 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_295)));
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} UseATimer != 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 778} vslice_dummy_var_215 := SerialSetTimer(ImmediateTotalTimer__SERIAL_DEVICE_EXTENSION(Extension_4), TotalTime, TotalImmediateTimeoutDpc__SERIAL_DEVICE_EXTENSION(Extension_4), Extension_4);
    s_p_e_c_i_a_l_4 := 4;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_57;
    call {:si_unique_call 779} sdv_296 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_57);
    assume {:nonnull} sdv_296 != 0;
    assume sdv_296 > 0;
    s_p_e_c_i_a_l_3 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_296)));
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    goto L68;

  L68:
    call {:si_unique_call 780} vslice_dummy_var_214 := KeSynchronizeExecution(0, li2bplFunctionConstant352, 0);
    call {:si_unique_call 781} IoReleaseCancelSpinLock(OldIrql);
    goto L56;

  anon12_Then:
    assume {:partition} UseATimer == 0;
    goto L68;

  anon9_Then:
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L28;

  anon10_Then:
    goto L24;
}



procedure {:origName "SerialGetNextImmediate"} SerialGetNextImmediate(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp_1: int, actual_CompleteCurrent: int, actual_Extension_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetNextImmediate"} SerialGetNextImmediate(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp_1: int, actual_CompleteCurrent: int, actual_Extension_5: int)
{
  var {:scalar} OldIrql_1: int;
  var {:pointer} OldIrp_1: int;
  var {:pointer} Tmp_338: int;
  var {:pointer} Tmp_339: int;
  var {:pointer} CurrentOpIrp: int;
  var {:pointer} NewIrp_1: int;
  var {:pointer} Extension_5: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;

  anon0:
    call {:si_unique_call 782} vslice_dummy_var_219 := __HAVOC_malloc(4);
    CurrentOpIrp := actual_CurrentOpIrp;
    NewIrp_1 := actual_NewIrp_1;
    Extension_5 := actual_Extension_5;
    call {:si_unique_call 783} Tmp_338 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    havoc OldIrp_1;
    call {:si_unique_call 784} Tmp_339 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    call {:si_unique_call 785} IoAcquireCancelSpinLock(Tmp_339);
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    assume {:nonnull} NewIrp_1 != 0;
    assume NewIrp_1 > 0;
    call {:si_unique_call 786} vslice_dummy_var_220 := KeSynchronizeExecution(0, li2bplFunctionConstant217, 0);
    call {:si_unique_call 787} IoReleaseCancelSpinLock(OldIrql_1);
    Tmp_338 := strConst__li2bpl2;
    call {:si_unique_call 788} vslice_dummy_var_221 := SerialDbgPrintEx(9, Tmp_338);
    call {:si_unique_call 789} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 790} SerialIRPEpilogue(Extension_5);
    return;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init12"} _sdv_init12()
{
  var vslice_dummy_var_222: int;

  anon0:
    call {:si_unique_call 791} vslice_dummy_var_222 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialBuildResourceList"} SerialBuildResourceList(actual_PResourceList: int, actual_PPartialCount: int, actual_PUserData_2: int) returns (Tmp_342: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_342 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialBuildResourceList"} SerialBuildResourceList(actual_PResourceList: int, actual_PPartialCount: int, actual_PUserData_2: int) returns (Tmp_342: int)
{
  var {:scalar} Tmp_343: int;
  var {:scalar} countOfPartials: int;
  var {:pointer} Tmp_344: int;
  var {:pointer} Tmp_345: int;
  var {:pointer} Tmp_346: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} pPartial: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} Tmp_350: int;
  var {:pointer} Tmp_351: int;
  var {:pointer} Tmp_352: int;
  var {:pointer} PResourceList: int;
  var {:pointer} PPartialCount: int;
  var {:pointer} PUserData_2: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;

  anon0:
    PResourceList := actual_PResourceList;
    PPartialCount := actual_PPartialCount;
    PUserData_2 := actual_PUserData_2;
    call {:si_unique_call 792} Tmp_344 := __HAVOC_malloc(104);
    call {:si_unique_call 793} Tmp_345 := __HAVOC_malloc(264);
    call {:si_unique_call 794} Tmp_346 := __HAVOC_malloc(264);
    call {:si_unique_call 795} Tmp_347 := __HAVOC_malloc(264);
    call {:si_unique_call 796} Tmp_348 := __HAVOC_malloc(124);
    call {:si_unique_call 797} Tmp_350 := __HAVOC_malloc(124);
    call {:si_unique_call 798} Tmp_351 := __HAVOC_malloc(244);
    call {:si_unique_call 799} Tmp_352 := __HAVOC_malloc(264);
    status_12 := 0;
    call {:si_unique_call 800} sdv_do_paged_code_check();
    Tmp_348 := strConst__li2bpl138;
    call {:si_unique_call 801} vslice_dummy_var_223 := SerialDbgPrintEx(11, Tmp_348);
    Tmp_344 := strConst__li2bpl139;
    call {:si_unique_call 802} vslice_dummy_var_224 := SerialDbgPrintEx(4, Tmp_344);
    assume {:nonnull} PPartialCount != 0;
    assume PPartialCount > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_343 := 3;
    goto L20;

  L20:
    countOfPartials := Tmp_343;
    call {:si_unique_call 803} sdv_RtlZeroMemory(0, 68);
    assume {:nonnull} PResourceList != 0;
    assume PResourceList > 0;
    assume {:nonnull} PResourceList != 0;
    assume PResourceList > 0;
    havoc Tmp_346;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} Tmp_346 != 0;
    assume Tmp_346 > 0;
    assume {:nonnull} PResourceList != 0;
    assume PResourceList > 0;
    havoc Tmp_347;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    assume {:nonnull} PResourceList != 0;
    assume PResourceList > 0;
    havoc Tmp_352;
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} PResourceList != 0;
    assume PResourceList > 0;
    havoc Tmp_345;
    assume {:nonnull} Tmp_345 != 0;
    assume Tmp_345 > 0;
    havoc Tmp_351;
    pPartial := Tmp_351;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    goto L40;

  L40:
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    goto L44;

  L44:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} countOfPartials == 3;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    goto L45;

  L45:
    assume {:nonnull} PPartialCount != 0;
    assume PPartialCount > 0;
    Tmp_350 := strConst__li2bpl140;
    call {:si_unique_call 804} vslice_dummy_var_225 := SerialDbgPrintEx(11, Tmp_350);
    Tmp_342 := status_12;
    return;

  anon9_Then:
    assume {:partition} countOfPartials != 3;
    goto L45;

  anon12_Then:
    assume {:nonnull} PUserData_2 != 0;
    assume PUserData_2 > 0;
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    goto L44;

  anon11_Then:
    assume {:nonnull} pPartial != 0;
    assume pPartial > 0;
    goto L40;

  anon10_Then:
    Tmp_343 := 2;
    goto L20;
}



procedure {:origName "SerialMigrateLegacyRegistry"} SerialMigrateLegacyRegistry(actual_PPdo_1: int, actual_PUserData_3: int, actual_IsMulti: int) returns (Tmp_353: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_353 == -1073741790 || Tmp_353 == -1073741816 || Tmp_353 == -1073741823 || Tmp_353 == 0 || Tmp_353 == -1073741670 || Tmp_353 == -1073741811 || Tmp_353 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialMigrateLegacyRegistry"} SerialMigrateLegacyRegistry(actual_PPdo_1: int, actual_PUserData_3: int, actual_IsMulti: int) returns (Tmp_353: int)
{
  var {:scalar} pnpNameBuf: int;
  var {:pointer} Tmp_354: int;
  var {:pointer} Tmp_355: int;
  var {:pointer} Tmp_356: int;
  var {:pointer} Tmp_357: int;
  var {:pointer} Tmp_358: int;
  var {:pointer} Tmp_359: int;
  var {:dopa} {:scalar} isMultiport: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} Tmp_361: int;
  var {:pointer} Tmp_362: int;
  var {:pointer} Tmp_363: int;
  var {:pointer} Tmp_364: int;
  var {:pointer} Tmp_365: int;
  var {:pointer} pnpKey_3: int;
  var {:pointer} Tmp_366: int;
  var {:pointer} Tmp_367: int;
  var {:pointer} Tmp_368: int;
  var {:pointer} Tmp_369: int;
  var {:pointer} sdv_325: int;
  var {:pointer} Tmp_371: int;
  var {:pointer} Tmp_372: int;
  var {:scalar} Tmp_373: int;
  var {:pointer} Tmp_374: int;
  var {:scalar} Tmp_375: int;
  var {:scalar} Tmp_377: int;
  var {:pointer} Tmp_378: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:pointer} Tmp_382: int;
  var {:pointer} PPdo_1: int;
  var {:pointer} PUserData_3: int;
  var {:scalar} IsMulti: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 805} pnpNameBuf := __HAVOC_malloc(12);
    call {:si_unique_call 806} isMultiport := __HAVOC_malloc(4);
    call {:si_unique_call 807} Tmp_377 := __HAVOC_malloc(20);
    PPdo_1 := actual_PPdo_1;
    PUserData_3 := actual_PUserData_3;
    IsMulti := actual_IsMulti;
    call {:si_unique_call 808} Tmp_354 := __HAVOC_malloc(112);
    call {:si_unique_call 809} Tmp_355 := __HAVOC_malloc(64);
    call {:si_unique_call 810} Tmp_356 := __HAVOC_malloc(136);
    call {:si_unique_call 811} Tmp_357 := __HAVOC_malloc(140);
    call {:si_unique_call 812} Tmp_358 := __HAVOC_malloc(32);
    call {:si_unique_call 813} Tmp_359 := __HAVOC_malloc(28);
    call {:si_unique_call 814} Tmp_360 := __HAVOC_malloc(48);
    call {:si_unique_call 815} Tmp_361 := __HAVOC_malloc(64);
    call {:si_unique_call 816} Tmp_362 := __HAVOC_malloc(120);
    call {:si_unique_call 817} Tmp_363 := __HAVOC_malloc(100);
    call {:si_unique_call 818} Tmp_364 := __HAVOC_malloc(104);
    call {:si_unique_call 819} Tmp_365 := __HAVOC_malloc(36);
    call {:si_unique_call 820} Tmp_366 := __HAVOC_malloc(172);
    call {:si_unique_call 821} Tmp_367 := __HAVOC_malloc(100);
    call {:si_unique_call 822} Tmp_368 := __HAVOC_malloc(108);
    call {:si_unique_call 823} Tmp_369 := __HAVOC_malloc(112);
    call {:si_unique_call 824} Tmp_371 := __HAVOC_malloc(156);
    call {:si_unique_call 825} Tmp_372 := __HAVOC_malloc(100);
    call {:si_unique_call 826} Tmp_374 := __HAVOC_malloc(52);
    call {:si_unique_call 827} Tmp_378 := __HAVOC_malloc(28);
    call {:si_unique_call 828} Tmp_379 := __HAVOC_malloc(40);
    call {:si_unique_call 829} Tmp_380 := __HAVOC_malloc(156);
    call {:si_unique_call 830} Tmp_381 := __HAVOC_malloc(124);
    call {:si_unique_call 831} Tmp_382 := __HAVOC_malloc(40);
    assume {:nonnull} isMultiport != 0;
    assume isMultiport > 0;
    call {:si_unique_call 832} sdv_do_paged_code_check();
    Tmp_357 := strConst__li2bpl141;
    call {:si_unique_call 833} vslice_dummy_var_228 := SerialDbgPrintEx(11, Tmp_357);
    call {:si_unique_call 834} status_13 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} status_13 >= 0;
    assume {:nonnull} pnpNameBuf != 0;
    assume pnpNameBuf > 0;
    assume {:nonnull} pnpNameBuf != 0;
    assume pnpNameBuf > 0;
    call {:si_unique_call 835} sdv_325 := ExAllocatePoolWithTag(1, 514, -666022077);
    assume {:nonnull} pnpNameBuf != 0;
    assume pnpNameBuf > 0;
    assume {:nonnull} pnpNameBuf != 0;
    assume pnpNameBuf > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} pnpNameBuf != 0;
    assume pnpNameBuf > 0;
    havoc Tmp_375;
    call {:si_unique_call 836} sdv_RtlZeroMemory(0, Tmp_375);
    call {:si_unique_call 837} vslice_dummy_var_226 := corral_nondet();
    assume {:nonnull} pnpNameBuf != 0;
    assume pnpNameBuf > 0;
    call {:si_unique_call 838} sdv_RtlZeroMemory(0, 2);
    assume {:nonnull} pnpNameBuf != 0;
    assume pnpNameBuf > 0;
    havoc Tmp_373;
    Tmp_365 := strConst__li2bpl36;
    assume {:nonnull} pnpNameBuf != 0;
    assume pnpNameBuf > 0;
    havoc vslice_dummy_var_58;
    call {:si_unique_call 839} status_13 := SerialPutRegistryKeyValue(pnpKey_3, Tmp_365, 18, 1, vslice_dummy_var_58, Tmp_373);
    call {:si_unique_call 840} sdv_ExFreePool(0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_13 >= 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} IsMulti != 0;
    Tmp_361 := strConst__li2bpl46;
    call {:si_unique_call 841} status_13 := SerialPutRegistryKeyValue(pnpKey_3, Tmp_361, 32, 4, isMultiport, 4);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} status_13 < 0;
    Tmp_363 := strConst__li2bpl144;
    call {:si_unique_call 842} vslice_dummy_var_238 := SerialDbgPrintEx(14, Tmp_363);
    goto L66;

  L66:
    call {:si_unique_call 843} vslice_dummy_var_227 := ZwClose(0);
    Tmp_380 := strConst__li2bpl145;
    call {:si_unique_call 844} vslice_dummy_var_229 := SerialDbgPrintEx(11, Tmp_380);
    Tmp_353 := status_13;
    goto L1;

  L1:
    return;

  anon47_Then:
    assume {:partition} 0 <= status_13;
    goto L56;

  L56:
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    Tmp_379 := strConst__li2bpl69;
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    call {:si_unique_call 845} status_13 := SerialPutRegistryKeyValue(pnpKey_3, Tmp_379, 20, 4, UserPortIndex__SERIAL_USER_DATA(PUserData_3), 4);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_13 < 0;
    Tmp_369 := strConst__li2bpl146;
    call {:si_unique_call 846} vslice_dummy_var_237 := SerialDbgPrintEx(14, Tmp_369);
    goto L66;

  anon49_Then:
    assume {:partition} 0 <= status_13;
    goto L73;

  L73:
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    Tmp_382 := strConst__li2bpl71;
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    call {:si_unique_call 847} status_13 := SerialPutRegistryKeyValue(pnpKey_3, Tmp_382, 20, 4, UserClockRate__SERIAL_USER_DATA(PUserData_3), 4);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} status_13 < 0;
    Tmp_354 := strConst__li2bpl147;
    call {:si_unique_call 848} vslice_dummy_var_236 := SerialDbgPrintEx(14, Tmp_354);
    goto L66;

  anon51_Then:
    assume {:partition} 0 <= status_13;
    goto L83;

  L83:
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    Tmp_358 := strConst__li2bpl70;
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    call {:si_unique_call 849} status_13 := SerialPutRegistryKeyValue(pnpKey_3, Tmp_358, 16, 4, UserIndexed__SERIAL_USER_DATA(PUserData_3), 4);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} status_13 < 0;
    Tmp_364 := strConst__li2bpl148;
    call {:si_unique_call 850} vslice_dummy_var_235 := SerialDbgPrintEx(14, Tmp_364);
    goto L66;

  anon53_Then:
    assume {:partition} 0 <= status_13;
    goto L93;

  L93:
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    Tmp_360 := strConst__li2bpl66;
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    call {:si_unique_call 851} status_13 := SerialPutRegistryKeyValue(pnpKey_3, Tmp_360, 24, 4, DisablePort__SERIAL_USER_DATA(PUserData_3), 4);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_13 < 0;
    Tmp_362 := strConst__li2bpl149;
    call {:si_unique_call 852} vslice_dummy_var_234 := SerialDbgPrintEx(14, Tmp_362);
    goto L66;

  anon55_Then:
    assume {:partition} 0 <= status_13;
    goto L103;

  L103:
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    Tmp_355 := strConst__li2bpl14;
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    call {:si_unique_call 853} status_13 := SerialPutRegistryKeyValue(pnpKey_3, Tmp_355, 32, 4, ForceFIFOEnable__SERIAL_USER_DATA(PUserData_3), 4);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_13 < 0;
    Tmp_356 := strConst__li2bpl150;
    call {:si_unique_call 854} vslice_dummy_var_233 := SerialDbgPrintEx(14, Tmp_356);
    goto L66;

  anon57_Then:
    assume {:partition} 0 <= status_13;
    goto L113;

  L113:
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    Tmp_359 := strConst__li2bpl15;
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    call {:si_unique_call 855} status_13 := SerialPutRegistryKeyValue(pnpKey_3, Tmp_359, 14, 4, RxFIFO__SERIAL_USER_DATA(PUserData_3), 4);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_13 < 0;
    Tmp_372 := strConst__li2bpl151;
    call {:si_unique_call 856} vslice_dummy_var_232 := SerialDbgPrintEx(14, Tmp_372);
    goto L66;

  anon59_Then:
    assume {:partition} 0 <= status_13;
    goto L123;

  L123:
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_378 := strConst__li2bpl16;
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    call {:si_unique_call 857} status_13 := SerialPutRegistryKeyValue(pnpKey_3, Tmp_378, 14, 4, TxFIFO__SERIAL_USER_DATA(PUserData_3), 4);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_13 < 0;
    Tmp_367 := strConst__li2bpl152;
    call {:si_unique_call 858} vslice_dummy_var_231 := SerialDbgPrintEx(14, Tmp_367);
    goto L66;

  anon61_Then:
    assume {:partition} 0 <= status_13;
    goto L133;

  L133:
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    Tmp_374 := strConst__li2bpl67;
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    call {:si_unique_call 859} status_13 := SerialPutRegistryKeyValue(pnpKey_3, Tmp_374, 26, 4, MaskInverted__SERIAL_USER_DATA(PUserData_3), 4);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} status_13 < 0;
    Tmp_381 := strConst__li2bpl153;
    call {:si_unique_call 860} vslice_dummy_var_230 := SerialDbgPrintEx(14, Tmp_381);
    goto L66;

  anon62_Then:
    assume {:partition} 0 <= status_13;
    goto L66;

  anon60_Then:
    goto L66;

  anon58_Then:
    goto L133;

  anon56_Then:
    goto L123;

  anon54_Then:
    goto L113;

  anon52_Then:
    goto L103;

  anon50_Then:
    goto L93;

  anon48_Then:
    goto L83;

  anon46_Then:
    goto L73;

  anon45_Then:
    assume {:partition} IsMulti == 0;
    goto L56;

  anon44_Then:
    assume {:partition} 0 > status_13;
    Tmp_368 := strConst__li2bpl143;
    call {:si_unique_call 861} vslice_dummy_var_239 := SerialDbgPrintEx(14, Tmp_368);
    goto L66;

  anon63_Then:
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    assume {:nonnull} PPdo_1 != 0;
    assume PPdo_1 > 0;
    assume {:nonnull} PUserData_3 != 0;
    assume PUserData_3 > 0;
    havoc vslice_dummy_var_59;
    havoc vslice_dummy_var_60;
    call {:si_unique_call 862} SerialLogError(vslice_dummy_var_59, 0, vslice_dummy_var_60, Tmp_377, 0, 0, 0, 63, 0, -1073348600, 0, 0, 0, 0);
    Tmp_366 := strConst__li2bpl154;
    call {:si_unique_call 863} vslice_dummy_var_240 := SerialDbgPrintEx(14, Tmp_366);
    status_13 := -1073741670;
    goto L66;

  anon43_Then:
    assume {:partition} 0 > status_13;
    Tmp_371 := strConst__li2bpl142;
    call {:si_unique_call 864} vslice_dummy_var_241 := SerialDbgPrintEx(11, Tmp_371);
    Tmp_353 := status_13;
    goto L1;
}



procedure {:origName "SerialEnumerateLegacy"} SerialEnumerateLegacy(actual_DriverObject_2: int, actual_RegistryPath_1: int, actual_DriverDefaultsPtr_1: int) returns (Tmp_383: int);
  modifies alloc, queued, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_383 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialEnumerateLegacy"} SerialEnumerateLegacy(actual_DriverObject_2: int, actual_RegistryPath_1: int, actual_DriverDefaultsPtr_1: int) returns (Tmp_383: int)
{
  var {:pointer} Tmp_384: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} Tmp_386: int;
  var {:scalar} interfaceType_1: int;
  var {:scalar} sdv_341: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:dopa} {:scalar} countOfPartials_1: int;
  var {:dopa} {:scalar} defaultInterruptMode_1: int;
  var {:scalar} Tmp_389: int;
  var {:scalar} Tmp_390: int;
  var {:pointer} Tmp_391: int;
  var {:scalar} Tmp_392: int;
  var {:scalar} Tmp_393: int;
  var {:pointer} Tmp_394: int;
  var {:scalar} Tmp_395: int;
  var {:scalar} Tmp_396: int;
  var {:pointer} sdv_347: int;
  var {:scalar} Tmp_397: int;
  var {:pointer} trResourceList: int;
  var {:pointer} sdv_348: int;
  var {:pointer} Tmp_398: int;
  var {:scalar} Tmp_399: int;
  var {:pointer} sdv_349: int;
  var {:scalar} Tmp_400: int;
  var {:scalar} Tmp_401: int;
  var {:pointer} lowerDevice: int;
  var {:pointer} Tmp_402: int;
  var {:pointer} sdv_351: int;
  var {:scalar} Tmp_403: int;
  var {:pointer} Tmp_404: int;
  var {:scalar} actuallyReturned: int;
  var {:scalar} Tmp_407: int;
  var {:pointer} Tmp_408: int;
  var {:scalar} Tmp_409: int;
  var {:scalar} Tmp_410: int;
  var {:scalar} Tmp_411: int;
  var {:pointer} sdv_357: int;
  var {:scalar} foundOne_1: int;
  var {:scalar} Tmp_412: int;
  var {:scalar} PnPID: int;
  var {:scalar} Tmp_413: int;
  var {:scalar} Tmp_414: int;
  var {:pointer} Tmp_415: int;
  var {:dopa} {:scalar} badValue_1: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} countSoFar_1: int;
  var {:scalar} Tmp_417: int;
  var {:scalar} Tmp_418: int;
  var {:scalar} Tmp_419: int;
  var {:scalar} Tmp_420: int;
  var {:scalar} Tmp_421: int;
  var {:scalar} Tmp_422: int;
  var {:scalar} Tmp_423: int;
  var {:scalar} i_1: int;
  var {:dopa} {:scalar} defaultInterfaceType_1: int;
  var {:scalar} Tmp_425: int;
  var {:pointer} newDevObj: int;
  var {:pointer} Tmp_427: int;
  var {:pointer} userSubKey: int;
  var {:scalar} Tmp_429: int;
  var {:pointer} sdv_368: int;
  var {:pointer} Tmp_430: int;
  var {:pointer} Tmp_431: int;
  var {:pointer} pRequiredList: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} Tmp_434: int;
  var {:pointer} Tmp_435: int;
  var {:scalar} Tmp_436: int;
  var {:scalar} Tmp_437: int;
  var {:pointer} resourceList: int;
  var {:scalar} Tmp_438: int;
  var {:pointer} Tmp_439: int;
  var {:pointer} Tmp_440: int;
  var {:pointer} sdv_373: int;
  var {:pointer} Tmp_441: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} sdv_376: int;
  var {:scalar} Tmp_443: int;
  var {:pointer} Tmp_444: int;
  var {:scalar} Tmp_445: int;
  var {:scalar} legacyKeys: int;
  var {:dopa} {:scalar} legacyDiscovered: int;
  var {:pointer} parameters: int;
  var {:scalar} Tmp_446: int;
  var {:dopa} {:scalar} defaultAddressSpace: int;
  var {:pointer} parametersKey: int;
  var {:pointer} sdv_379: int;
  var {:scalar} status_14: int;
  var {:scalar} sdv_381: int;
  var {:scalar} parametersPath: int;
  var {:pointer} newPdo: int;
  var {:dopa} {:scalar} brokenStatus: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} sdv_382: int;
  var {:pointer} Tmp_449: int;
  var {:scalar} userData: int;
  var {:pointer} Tmp_450: int;
  var {:dopa} {:scalar} zero_2: int;
  var {:scalar} Tmp_451: int;
  var {:pointer} DriverObject_2: int;
  var {:pointer} RegistryPath_1: int;
  var {:pointer} DriverDefaultsPtr_1: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_71: int;

  anon0:
    call {:si_unique_call 865} countOfPartials_1 := __HAVOC_malloc(4);
    call {:si_unique_call 866} defaultInterruptMode_1 := __HAVOC_malloc(4);
    call {:si_unique_call 867} Tmp_389 := __HAVOC_malloc(20);
    call {:si_unique_call 868} Tmp_390 := __HAVOC_malloc(20);
    call {:si_unique_call 869} Tmp_393 := __HAVOC_malloc(20);
    call {:si_unique_call 870} Tmp_395 := __HAVOC_malloc(20);
    call {:si_unique_call 871} Tmp_396 := __HAVOC_malloc(20);
    call {:si_unique_call 872} Tmp_397 := __HAVOC_malloc(20);
    call {:si_unique_call 873} Tmp_399 := __HAVOC_malloc(20);
    call {:si_unique_call 874} Tmp_400 := __HAVOC_malloc(20);
    call {:si_unique_call 875} Tmp_401 := __HAVOC_malloc(20);
    call {:si_unique_call 876} Tmp_407 := __HAVOC_malloc(20);
    call {:si_unique_call 877} Tmp_409 := __HAVOC_malloc(20);
    call {:si_unique_call 878} Tmp_410 := __HAVOC_malloc(20);
    call {:si_unique_call 879} Tmp_412 := __HAVOC_malloc(20);
    call {:si_unique_call 880} PnPID := __HAVOC_malloc(12);
    call {:si_unique_call 881} Tmp_413 := __HAVOC_malloc(20);
    call {:si_unique_call 882} badValue_1 := __HAVOC_malloc(4);
    call {:si_unique_call 883} Tmp_417 := __HAVOC_malloc(20);
    call {:si_unique_call 884} Tmp_419 := __HAVOC_malloc(20);
    call {:si_unique_call 885} Tmp_420 := __HAVOC_malloc(20);
    call {:si_unique_call 886} Tmp_422 := __HAVOC_malloc(20);
    call {:si_unique_call 887} defaultInterfaceType_1 := __HAVOC_malloc(4);
    call {:si_unique_call 888} Tmp_425 := __HAVOC_malloc(20);
    call {:si_unique_call 889} newDevObj := __HAVOC_malloc(4);
    call {:si_unique_call 890} vslice_dummy_var_242 := __HAVOC_malloc(24);
    call {:si_unique_call 891} Tmp_429 := __HAVOC_malloc(20);
    call {:si_unique_call 892} Tmp_432 := __HAVOC_malloc(20);
    call {:si_unique_call 893} Tmp_437 := __HAVOC_malloc(20);
    call {:si_unique_call 894} Tmp_438 := __HAVOC_malloc(20);
    call {:si_unique_call 895} Tmp_443 := __HAVOC_malloc(20);
    call {:si_unique_call 896} legacyKeys := __HAVOC_malloc(12);
    call {:si_unique_call 897} legacyDiscovered := __HAVOC_malloc(4);
    call {:si_unique_call 898} Tmp_446 := __HAVOC_malloc(20);
    call {:si_unique_call 899} defaultAddressSpace := __HAVOC_malloc(4);
    call {:si_unique_call 900} parametersKey := __HAVOC_malloc(4);
    call {:si_unique_call 901} parametersPath := __HAVOC_malloc(12);
    call {:si_unique_call 902} brokenStatus := __HAVOC_malloc(4);
    call {:si_unique_call 903} userData := __HAVOC_malloc(136);
    call {:si_unique_call 904} zero_2 := __HAVOC_malloc(4);
    call {:si_unique_call 905} Tmp_451 := __HAVOC_malloc(20);
    DriverObject_2 := actual_DriverObject_2;
    RegistryPath_1 := actual_RegistryPath_1;
    DriverDefaultsPtr_1 := actual_DriverDefaultsPtr_1;
    call {:si_unique_call 906} Tmp_384 := __HAVOC_malloc(220);
    call {:si_unique_call 907} Tmp_385 := __HAVOC_malloc(4);
    call {:si_unique_call 908} Tmp_387 := __HAVOC_malloc(328);
    call {:si_unique_call 909} Tmp_388 := __HAVOC_malloc(224);
    call {:si_unique_call 910} Tmp_391 := __HAVOC_malloc(4);
    call {:si_unique_call 911} Tmp_394 := __HAVOC_malloc(300);
    call {:si_unique_call 912} Tmp_398 := __HAVOC_malloc(184);
    call {:si_unique_call 913} Tmp_402 := __HAVOC_malloc(240);
    call {:si_unique_call 914} vslice_dummy_var_248 := __HAVOC_malloc(8);
    call {:si_unique_call 915} vslice_dummy_var_249 := __HAVOC_malloc(68);
    call {:si_unique_call 916} Tmp_408 := __HAVOC_malloc(148);
    call {:si_unique_call 917} Tmp_415 := __HAVOC_malloc(184);
    call {:si_unique_call 918} Tmp_416 := __HAVOC_malloc(116);
    call {:si_unique_call 919} vslice_dummy_var_250 := __HAVOC_malloc(44);
    call {:si_unique_call 920} Tmp_430 := __HAVOC_malloc(4);
    call {:si_unique_call 921} Tmp_431 := __HAVOC_malloc(4);
    call {:si_unique_call 922} vslice_dummy_var_251 := __HAVOC_malloc(8);
    call {:si_unique_call 923} Tmp_434 := __HAVOC_malloc(4);
    call {:si_unique_call 924} Tmp_439 := __HAVOC_malloc(272);
    call {:si_unique_call 925} Tmp_440 := __HAVOC_malloc(256);
    call {:si_unique_call 926} Tmp_441 := __HAVOC_malloc(116);
    call {:si_unique_call 927} Tmp_442 := __HAVOC_malloc(232);
    call {:si_unique_call 928} Tmp_449 := __HAVOC_malloc(4);
    call {:si_unique_call 929} Tmp_450 := __HAVOC_malloc(220);
    parameters := 0;
    call {:si_unique_call 930} sdv_368 := IoGetConfigurationInformation();
    assume {:nonnull} sdv_368 != 0;
    assume sdv_368 > 0;
    countSoFar_1 := SerialCount__CONFIGURATION_INFORMATION(sdv_368);
    assume {:nonnull} zero_2 != 0;
    assume zero_2 > 0;
    assume {:nonnull} badValue_1 != 0;
    assume badValue_1 > 0;
    assume {:nonnull} defaultAddressSpace != 0;
    assume defaultAddressSpace > 0;
    userSubKey := 0;
    resourceList := 0;
    trResourceList := 0;
    pRequiredList := 0;
    call {:si_unique_call 931} sdv_do_paged_code_check();
    Tmp_441 := strConst__li2bpl155;
    call {:si_unique_call 932} vslice_dummy_var_252 := SerialDbgPrintEx(11, Tmp_441);
    assume {:nonnull} PnPID != 0;
    assume PnPID > 0;
    assume {:nonnull} legacyKeys != 0;
    assume legacyKeys > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parametersPath != 0;
    assume parametersPath > 0;
    assume {:nonnull} DriverDefaultsPtr_1 != 0;
    assume DriverDefaultsPtr_1 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} DriverDefaultsPtr_1 != 0;
    assume DriverDefaultsPtr_1 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} DriverDefaultsPtr_1 != 0;
    assume DriverDefaultsPtr_1 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} DriverDefaultsPtr_1 != 0;
    assume DriverDefaultsPtr_1 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} DriverDefaultsPtr_1 != 0;
    assume DriverDefaultsPtr_1 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} defaultInterfaceType_1 != 0;
    assume defaultInterfaceType_1 > 0;
    assume {:nonnull} defaultInterruptMode_1 != 0;
    assume defaultInterruptMode_1 > 0;
    interfaceType_1 := 0;
    goto L63;

  L63:
    call {:si_unique_call 933} interfaceType_1, foundOne_1, vslice_dummy_var_243 := SerialEnumerateLegacy_loop_L63(interfaceType_1, foundOne_1, vslice_dummy_var_243);
    goto L63_last;

  L63_last:
    assume {:CounterLoop 17} {:Counter "interfaceType_1"} true;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} 17 > interfaceType_1;
    foundOne_1 := 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} interfaceType_1 != 0;
    call {:si_unique_call 934} vslice_dummy_var_243 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant254, 0);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} foundOne_1 != 0;
    assume {:nonnull} defaultInterfaceType_1 != 0;
    assume defaultInterfaceType_1 > 0;
    assume {:nonnull} defaultInterfaceType_1 != 0;
    assume defaultInterfaceType_1 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} defaultInterruptMode_1 != 0;
    assume defaultInterruptMode_1 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    goto L64;

  L64:
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parametersPath != 0;
    assume parametersPath > 0;
    call {:si_unique_call 935} sdv_351 := ExAllocatePoolWithTag(1, 616, -666022077);
    parameters := sdv_351;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} parameters != 0;
    call {:si_unique_call 936} sdv_RtlZeroMemory(0, 616);
    assume {:nonnull} userData != 0;
    assume userData > 0;
    call {:si_unique_call 937} RtlInitUnicodeString(UserSymbolicLink__SERIAL_USER_DATA(userData), 0);
    assume {:nonnull} userData != 0;
    assume userData > 0;
    call {:si_unique_call 938} sdv_376 := ExAllocatePoolWithTag(1, 514, -666022077);
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    call {:si_unique_call 939} RtlInitUnicodeString(PnPID, 0);
    assume {:nonnull} PnPID != 0;
    assume PnPID > 0;
    call {:si_unique_call 940} sdv_347 := ExAllocatePoolWithTag(1, 514, -666022077);
    assume {:nonnull} PnPID != 0;
    assume PnPID > 0;
    assume {:nonnull} PnPID != 0;
    assume PnPID > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    call {:si_unique_call 941} RtlInitUnicodeString(legacyKeys, 0);
    assume {:nonnull} legacyKeys != 0;
    assume legacyKeys > 0;
    call {:si_unique_call 942} sdv_357 := ExAllocatePoolWithTag(1, 514, -666022077);
    assume {:nonnull} legacyKeys != 0;
    assume legacyKeys > 0;
    assume {:nonnull} legacyKeys != 0;
    assume legacyKeys > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    call {:si_unique_call 943} sdv_349 := ExAllocatePoolWithTag(1, 68, -666022077);
    resourceList := sdv_349;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} resourceList != 0;
    call {:si_unique_call 944} sdv_348 := ExAllocatePoolWithTag(1, 68, -666022077);
    trResourceList := sdv_348;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} trResourceList != 0;
    call {:si_unique_call 945} sdv_382 := ExAllocatePoolWithTag(1, 136, -666022077);
    pRequiredList := sdv_382;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} pRequiredList != 0;
    call {:si_unique_call 946} RtlInitUnicodeString(parametersPath, 0);
    assume {:nonnull} RegistryPath_1 != 0;
    assume RegistryPath_1 > 0;
    assume {:nonnull} parametersPath != 0;
    assume parametersPath > 0;
    assume {:nonnull} parametersPath != 0;
    assume parametersPath > 0;
    havoc Tmp_392;
    call {:si_unique_call 947} sdv_373 := ExAllocatePoolWithTag(1, Tmp_392, -666022077);
    assume {:nonnull} parametersPath != 0;
    assume parametersPath > 0;
    assume {:nonnull} parametersPath != 0;
    assume parametersPath > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} parametersPath != 0;
    assume parametersPath > 0;
    havoc Tmp_445;
    call {:si_unique_call 948} sdv_RtlZeroMemory(0, Tmp_445);
    call {:si_unique_call 949} vslice_dummy_var_244 := corral_nondet();
    call {:si_unique_call 950} vslice_dummy_var_253 := corral_nondet();
    call {:si_unique_call 951} vslice_dummy_var_254 := corral_nondet();
    assume {:nonnull} legacyKeys != 0;
    assume legacyKeys > 0;
    havoc Tmp_386;
    call {:si_unique_call 952} sdv_RtlZeroMemory(0, Tmp_386);
    call {:si_unique_call 953} vslice_dummy_var_245 := corral_nondet();
    call {:si_unique_call 954} sdv_379 := ExAllocatePoolWithTag(1, 536, -666022077);
    userSubKey := sdv_379;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} userSubKey != 0;
    call {:si_unique_call 955} sdv_InitializeObjectAttributes(0, 0, 576, 0, 0);
    call {:si_unique_call 956} sdv_341 := ZwOpenKey(parametersKey, 33554432, 0);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} sdv_341 >= 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    i_1 := 0;
    goto L312;

  L312:
    call {:si_unique_call 957} Tmp_384, Tmp_385, Tmp_391, lowerDevice, Tmp_403, Tmp_404, actuallyReturned, Tmp_408, Tmp_411, Tmp_414, deviceExtension, Tmp_418, Tmp_421, Tmp_423, i_1, Tmp_427, Tmp_430, Tmp_431, Tmp_434, Tmp_435, Tmp_436, Tmp_440, Tmp_442, Tmp_444, status_14, sdv_381, newPdo, Tmp_447, Tmp_449, Tmp_450, vslice_dummy_var_247, vslice_dummy_var_256, vslice_dummy_var_257, vslice_dummy_var_258, vslice_dummy_var_259, vslice_dummy_var_260, vslice_dummy_var_261, vslice_dummy_var_262, vslice_dummy_var_263 := SerialEnumerateLegacy_loop_L312(Tmp_384, Tmp_385, countOfPartials_1, Tmp_390, Tmp_391, Tmp_393, Tmp_396, Tmp_397, trResourceList, lowerDevice, Tmp_403, Tmp_404, actuallyReturned, Tmp_407, Tmp_408, Tmp_409, Tmp_411, PnPID, Tmp_413, Tmp_414, deviceExtension, countSoFar_1, Tmp_418, Tmp_420, Tmp_421, Tmp_423, i_1, defaultInterfaceType_1, newDevObj, Tmp_427, userSubKey, Tmp_430, Tmp_431, pRequiredList, Tmp_434, Tmp_435, Tmp_436, resourceList, Tmp_440, Tmp_442, Tmp_444, legacyKeys, legacyDiscovered, parameters, Tmp_446, status_14, sdv_381, parametersPath, newPdo, brokenStatus, Tmp_447, Tmp_449, userData, Tmp_450, DriverObject_2, vslice_dummy_var_247, vslice_dummy_var_256, vslice_dummy_var_257, vslice_dummy_var_258, vslice_dummy_var_259, vslice_dummy_var_260, vslice_dummy_var_261, vslice_dummy_var_262, vslice_dummy_var_263);
    goto L312_last;

  L312_last:
    assume {:nonnull} newDevObj != 0;
    assume newDevObj > 0;
    call {:si_unique_call 1020} Tmp_444 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    call {:si_unique_call 1021} status_14 := ZwEnumerateKey(0, i_1, 0, 0, 534, Tmp_444);
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    havoc actuallyReturned;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} status_14 != 26;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} status_14 == 5;
    assume {:nonnull} Tmp_413 != 0;
    assume Tmp_413 > 0;
    assume {:nonnull} Tmp_413 != 0;
    assume Tmp_413 > 0;
    assume {:nonnull} Tmp_413 != 0;
    assume Tmp_413 > 0;
    assume {:nonnull} Tmp_413 != 0;
    assume Tmp_413 > 0;
    assume {:nonnull} Tmp_413 != 0;
    assume Tmp_413 > 0;
    assume {:nonnull} Tmp_420 != 0;
    assume Tmp_420 > 0;
    assume {:nonnull} Tmp_420 != 0;
    assume Tmp_420 > 0;
    assume {:nonnull} Tmp_420 != 0;
    assume Tmp_420 > 0;
    assume {:nonnull} Tmp_420 != 0;
    assume Tmp_420 > 0;
    assume {:nonnull} Tmp_420 != 0;
    assume Tmp_420 > 0;
    call {:si_unique_call 958} SerialLogError(DriverObject_2, 0, Tmp_420, Tmp_413, 0, 0, 0, 84, 0, -1073348589, 0, 0, 0, 0);
    Tmp_384 := strConst__li2bpl157;
    call {:si_unique_call 959} vslice_dummy_var_256 := SerialDbgPrintEx(14, Tmp_384);
    i_1 := i_1 + 1;
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    assume false;
    return;

  anon87_Then:
    assume {:partition} status_14 != 5;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} userSubKey != 0;
    assume userSubKey > 0;
    havoc Tmp_431;
    call {:si_unique_call 960} sdv_RtlZeroMemory(0, 2);
    assume {:nonnull} userSubKey != 0;
    assume userSubKey > 0;
    havoc Tmp_430;
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    call {:si_unique_call 961} sdv_RtlZeroMemory(0, 8);
    call {:si_unique_call 962} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} userData != 0;
    assume userData > 0;
    havoc Tmp_414;
    call {:si_unique_call 963} sdv_RtlZeroMemory(0, Tmp_414);
    assume {:nonnull} userData != 0;
    assume userData > 0;
    call {:si_unique_call 964} status_14 := sdv_RtlQueryRegistryValues(0, 0, 0, 0, 0);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} PnPID != 0;
    assume PnPID > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    i_1 := i_1 + 1;
    goto anon90_Else_dummy;

  anon90_Else_dummy:
    assume false;
    return;

  anon90_Then:
    assume {:nonnull} legacyDiscovered != 0;
    assume legacyDiscovered > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    i_1 := i_1 + 1;
    goto anon91_Else_dummy;

  anon91_Else_dummy:
    assume false;
    return;

  anon91_Then:
    assume {:nonnull} userData != 0;
    assume userData > 0;
    call {:si_unique_call 965} sdv_RtlZeroMemory(0, 2);
    assume {:nonnull} brokenStatus != 0;
    assume brokenStatus > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} brokenStatus != 0;
    assume brokenStatus > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    goto L367;

  L367:
    assume {:nonnull} defaultInterfaceType_1 != 0;
    assume defaultInterfaceType_1 > 0;
    havoc vslice_dummy_var_61;
    call {:si_unique_call 966} sdv_381 := SerialIsUserDataValid(DriverObject_2, userSubKey, parameters, vslice_dummy_var_61, userData);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} sdv_381 != 0;
    call {:si_unique_call 967} status_14 := SerialBuildResourceList(resourceList, countOfPartials_1, userData);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} countOfPartials_1 != 0;
    assume countOfPartials_1 > 0;
    havoc vslice_dummy_var_62;
    call {:si_unique_call 968} status_14 := SerialTranslateResourceList(DriverObject_2, userSubKey, trResourceList, resourceList, vslice_dummy_var_62, userData);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} countOfPartials_1 != 0;
    assume countOfPartials_1 > 0;
    havoc vslice_dummy_var_63;
    call {:si_unique_call 969} status_14 := SerialBuildRequirementsList(pRequiredList, vslice_dummy_var_63, userData);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_14 >= 0;
    newPdo := 0;
    call {:si_unique_call 970} status_14 := IoReportDetectedDevice(0, -1, -1, -1, 0, 0, 0, 0);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} countOfPartials_1 != 0;
    assume countOfPartials_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    Tmp_423 := 1;
    goto L401;

  L401:
    Tmp_418 := Tmp_423;
    call {:si_unique_call 971} status_14 := SerialMigrateLegacyRegistry(newPdo, userData, Tmp_418);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} status_14 >= 0;
    call {:si_unique_call 972} status_14 := SerialCreateDevObj(DriverObject_2, newDevObj);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} status_14 >= 0;
    call {:si_unique_call 973} lowerDevice := IoAttachDeviceToDeviceStack(0, newPdo);
    assume {:nonnull} newDevObj != 0;
    assume newDevObj > 0;
    havoc deviceExtension;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} newDevObj != 0;
    assume newDevObj > 0;
    call {:si_unique_call 974} MmLockPagableSectionByHandle(0);
    assume {:nonnull} newDevObj != 0;
    assume newDevObj > 0;
    havoc vslice_dummy_var_64;
    call {:si_unique_call 975} status_14 := SerialFinishStartDevice(vslice_dummy_var_64, resourceList, trResourceList, userData);
    call {:si_unique_call 976} MmUnlockPagableImageSection(0);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} status_14 >= 0;
    call {:si_unique_call 977} vslice_dummy_var_257 := corral_nondet();
    assume {:nonnull} userSubKey != 0;
    assume userSubKey > 0;
    havoc Tmp_385;
    call {:si_unique_call 978} vslice_dummy_var_258 := corral_nondet();
    call {:si_unique_call 979} status_14 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    assume {:nonnull} legacyKeys != 0;
    assume legacyKeys > 0;
    havoc Tmp_421;
    call {:si_unique_call 980} sdv_RtlZeroMemory(0, Tmp_421);
    assume {:nonnull} legacyKeys != 0;
    assume legacyKeys > 0;
    call {:si_unique_call 981} vslice_dummy_var_259 := corral_nondet();
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} status_14 >= 0;
    goto L458;

  L458:
    i_1 := i_1 + 1;
    assume {:nonnull} countSoFar_1 != 0;
    assume countSoFar_1 > 0;
    goto L458_dummy;

  L458_dummy:
    assume false;
    return;

  anon103_Then:
    assume {:partition} 0 > status_14;
    assume {:nonnull} Tmp_407 != 0;
    assume Tmp_407 > 0;
    assume {:nonnull} Tmp_407 != 0;
    assume Tmp_407 > 0;
    assume {:nonnull} Tmp_407 != 0;
    assume Tmp_407 > 0;
    assume {:nonnull} Tmp_407 != 0;
    assume Tmp_407 > 0;
    assume {:nonnull} Tmp_407 != 0;
    assume Tmp_407 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    havoc vslice_dummy_var_65;
    call {:si_unique_call 982} SerialLogError(DriverObject_2, 0, vslice_dummy_var_65, Tmp_407, 0, 0, 0, 88, 0, -1073348567, 0, 0, 0, 0);
    Tmp_442 := strConst__li2bpl159;
    call {:si_unique_call 983} vslice_dummy_var_260 := SerialDbgPrintEx(14, Tmp_442);
    goto L458;

  anon102_Then:
    assume {:partition} 0 > status_14;
    assume {:nonnull} newDevObj != 0;
    assume newDevObj > 0;
    havoc vslice_dummy_var_66;
    call {:si_unique_call 984} vslice_dummy_var_247 := SerialRemoveDevObj(vslice_dummy_var_66);
    i_1 := i_1 + 1;
    goto anon102_Then_dummy;

  anon102_Then_dummy:
    assume false;
    return;

  anon101_Then:
    assume {:partition} 0 > status_14;
    i_1 := i_1 + 1;
    goto anon101_Then_dummy;

  anon101_Then_dummy:
    assume false;
    return;

  anon100_Then:
    assume {:partition} 0 > status_14;
    i_1 := i_1 + 1;
    goto anon100_Then_dummy;

  anon100_Then_dummy:
    assume false;
    return;

  anon99_Then:
    Tmp_423 := 0;
    goto L401;

  anon97_Then:
    assume {:partition} 0 > status_14;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} status_14 == -1073741670;
    assume {:nonnull} userSubKey != 0;
    assume userSubKey > 0;
    havoc Tmp_391;
    Tmp_435 := Tmp_391;
    assume {:nonnull} userSubKey != 0;
    assume userSubKey > 0;
    havoc Tmp_436;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    havoc vslice_dummy_var_67;
    call {:si_unique_call 985} SerialLogError(DriverObject_2, 0, vslice_dummy_var_67, Tmp_446, 0, 0, 0, 89, status_14, -1073348564, Tmp_436, Tmp_435, 0, 0);
    goto L477;

  L477:
    Tmp_408 := strConst__li2bpl160;
    call {:si_unique_call 986} vslice_dummy_var_261 := SerialDbgPrintEx(14, Tmp_408);
    i_1 := i_1 + 1;
    goto L477_dummy;

  L477_dummy:
    assume false;
    return;

  anon98_Then:
    assume {:partition} status_14 != -1073741670;
    assume {:nonnull} userSubKey != 0;
    assume userSubKey > 0;
    havoc Tmp_434;
    Tmp_404 := Tmp_434;
    assume {:nonnull} userSubKey != 0;
    assume userSubKey > 0;
    havoc Tmp_411;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    havoc vslice_dummy_var_68;
    call {:si_unique_call 987} SerialLogError(DriverObject_2, 0, vslice_dummy_var_68, Tmp_390, 0, 0, 0, 87, status_14, -1073348568, Tmp_411, Tmp_404, 0, 0);
    goto L477;

  anon96_Then:
    assume {:partition} 0 > status_14;
    i_1 := i_1 + 1;
    goto anon96_Then_dummy;

  anon96_Then_dummy:
    assume false;
    return;

  anon95_Then:
    assume {:partition} 0 > status_14;
    i_1 := i_1 + 1;
    goto anon95_Then_dummy;

  anon95_Then_dummy:
    assume false;
    return;

  anon94_Then:
    assume {:partition} 0 > status_14;
    i_1 := i_1 + 1;
    goto anon94_Then_dummy;

  anon94_Then_dummy:
    assume false;
    return;

  anon93_Then:
    assume {:partition} sdv_381 == 0;
    i_1 := i_1 + 1;
    goto anon93_Then_dummy;

  anon93_Then_dummy:
    assume false;
    return;

  anon92_Then:
    goto L367;

  anon89_Then:
    assume {:partition} 0 > status_14;
    assume {:nonnull} userSubKey != 0;
    assume userSubKey > 0;
    havoc Tmp_449;
    Tmp_427 := Tmp_449;
    assume {:nonnull} userSubKey != 0;
    assume userSubKey > 0;
    havoc Tmp_403;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    call {:si_unique_call 988} SerialLogError(DriverObject_2, 0, Tmp_397, Tmp_396, 0, 0, 0, 86, 0, -1073348583, Tmp_403, Tmp_427, 0, 0);
    assume {:nonnull} parameters != 0;
    assume parameters > 0;
    havoc Tmp_447;
    Tmp_450 := strConst__li2bpl178;
    call {:si_unique_call 989} vslice_dummy_var_262 := SerialDbgPrintEx(14, Tmp_450);
    i_1 := i_1 + 1;
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    assume false;
    return;

  anon88_Then:
    assume {:partition} 0 > status_14;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    assume {:nonnull} Tmp_409 != 0;
    assume Tmp_409 > 0;
    assume {:nonnull} Tmp_409 != 0;
    assume Tmp_409 > 0;
    assume {:nonnull} Tmp_409 != 0;
    assume Tmp_409 > 0;
    assume {:nonnull} Tmp_409 != 0;
    assume Tmp_409 > 0;
    assume {:nonnull} Tmp_409 != 0;
    assume Tmp_409 > 0;
    call {:si_unique_call 990} SerialLogError(DriverObject_2, 0, Tmp_409, Tmp_393, 0, 0, 0, 85, 0, -1073348589, 0, 0, 0, 0);
    Tmp_440 := strConst__li2bpl161;
    call {:si_unique_call 991} vslice_dummy_var_263 := SerialDbgPrintEx(14, Tmp_440);
    i_1 := i_1 + 1;
    goto anon88_Then_dummy;

  anon88_Then_dummy:
    assume false;
    return;

  anon86_Then:
    assume {:partition} status_14 == 26;
    call {:si_unique_call 992} vslice_dummy_var_246 := ZwClose(0);
    goto L512;

  L512:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} userSubKey != 0;
    call {:si_unique_call 993} sdv_ExFreePool(0);
    goto L513;

  L513:
    assume {:nonnull} PnPID != 0;
    assume PnPID > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    call {:si_unique_call 994} sdv_ExFreePool(0);
    goto L517;

  L517:
    assume {:nonnull} legacyKeys != 0;
    assume legacyKeys > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    call {:si_unique_call 995} sdv_ExFreePool(0);
    goto L521;

  L521:
    assume {:nonnull} userData != 0;
    assume userData > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    call {:si_unique_call 996} sdv_ExFreePool(0);
    goto L525;

  L525:
    assume {:nonnull} parametersPath != 0;
    assume parametersPath > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    call {:si_unique_call 997} sdv_ExFreePool(0);
    goto L529;

  L529:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} parameters != 0;
    call {:si_unique_call 998} sdv_ExFreePool(0);
    goto L533;

  L533:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} resourceList != 0;
    call {:si_unique_call 999} sdv_ExFreePool(0);
    goto L537;

  L537:
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} trResourceList != 0;
    call {:si_unique_call 1000} sdv_ExFreePool(0);
    goto L541;

  L541:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} pRequiredList != 0;
    call {:si_unique_call 1001} sdv_ExFreePool(0);
    goto L545;

  L545:
    Tmp_416 := strConst__li2bpl162;
    call {:si_unique_call 1002} vslice_dummy_var_255 := SerialDbgPrintEx(11, Tmp_416);
    Tmp_383 := 0;
    return;

  anon112_Then:
    assume {:partition} pRequiredList == 0;
    goto L545;

  anon111_Then:
    assume {:partition} trResourceList == 0;
    goto L541;

  anon110_Then:
    assume {:partition} resourceList == 0;
    goto L537;

  anon109_Then:
    assume {:partition} parameters == 0;
    goto L533;

  anon108_Then:
    goto L529;

  anon107_Then:
    goto L525;

  anon106_Then:
    goto L521;

  anon105_Then:
    goto L517;

  anon104_Then:
    assume {:partition} userSubKey == 0;
    goto L513;

  anon85_Then:
    assume {:partition} 0 > sdv_341;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    call {:si_unique_call 1003} SerialLogError(DriverObject_2, 0, Tmp_437, Tmp_432, 0, 0, 0, 83, 0, -1073348590, 0, 0, 0, 0);
    Tmp_398 := strConst__li2bpl163;
    call {:si_unique_call 1004} vslice_dummy_var_264 := SerialDbgPrintEx(14, Tmp_398);
    goto L512;

  anon123_Then:
    assume {:partition} userSubKey == 0;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    call {:si_unique_call 1005} SerialLogError(DriverObject_2, 0, Tmp_389, Tmp_401, 0, 0, 0, 82, 0, -1073348600, 0, 0, 0, 0);
    Tmp_387 := strConst__li2bpl164;
    call {:si_unique_call 1006} vslice_dummy_var_265 := SerialDbgPrintEx(14, Tmp_387);
    goto L512;

  anon122_Then:
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    call {:si_unique_call 1007} SerialLogError(DriverObject_2, 0, Tmp_451, Tmp_425, 0, 0, 0, 81, 0, -1073348600, 0, 0, 0, 0);
    Tmp_388 := strConst__li2bpl165;
    call {:si_unique_call 1008} vslice_dummy_var_266 := SerialDbgPrintEx(14, Tmp_388);
    goto L512;

  anon121_Then:
    assume {:partition} pRequiredList == 0;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    havoc vslice_dummy_var_69;
    call {:si_unique_call 1009} SerialLogError(DriverObject_2, 0, vslice_dummy_var_69, Tmp_429, 0, 0, 0, 80, 0, -1073348600, 0, 0, 0, 0);
    goto L512;

  anon120_Then:
    assume {:partition} trResourceList == 0;
    assume {:nonnull} Tmp_395 != 0;
    assume Tmp_395 > 0;
    assume {:nonnull} Tmp_395 != 0;
    assume Tmp_395 > 0;
    assume {:nonnull} Tmp_395 != 0;
    assume Tmp_395 > 0;
    assume {:nonnull} Tmp_395 != 0;
    assume Tmp_395 > 0;
    assume {:nonnull} Tmp_395 != 0;
    assume Tmp_395 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    havoc vslice_dummy_var_70;
    call {:si_unique_call 1010} SerialLogError(DriverObject_2, 0, vslice_dummy_var_70, Tmp_395, 0, 0, 0, 79, 0, -1073348600, 0, 0, 0, 0);
    goto L512;

  anon119_Then:
    assume {:partition} resourceList == 0;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    assume {:nonnull} userData != 0;
    assume userData > 0;
    havoc vslice_dummy_var_71;
    call {:si_unique_call 1011} SerialLogError(DriverObject_2, 0, vslice_dummy_var_71, Tmp_443, 0, 0, 0, 78, 0, -1073348600, 0, 0, 0, 0);
    goto L512;

  anon118_Then:
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    call {:si_unique_call 1012} SerialLogError(DriverObject_2, 0, Tmp_417, Tmp_399, 0, 0, 0, 77, 0, -1073348600, 0, 0, 0, 0);
    Tmp_415 := strConst__li2bpl166;
    call {:si_unique_call 1013} vslice_dummy_var_267 := SerialDbgPrintEx(14, Tmp_415);
    goto L512;

  anon117_Then:
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    call {:si_unique_call 1014} SerialLogError(DriverObject_2, 0, Tmp_400, Tmp_422, 0, 0, 0, 76, 0, -1073348600, 0, 0, 0, 0);
    Tmp_439 := strConst__li2bpl167;
    call {:si_unique_call 1015} vslice_dummy_var_268 := SerialDbgPrintEx(14, Tmp_439);
    goto L512;

  anon116_Then:
    assume {:nonnull} Tmp_412 != 0;
    assume Tmp_412 > 0;
    assume {:nonnull} Tmp_412 != 0;
    assume Tmp_412 > 0;
    assume {:nonnull} Tmp_412 != 0;
    assume Tmp_412 > 0;
    assume {:nonnull} Tmp_412 != 0;
    assume Tmp_412 > 0;
    assume {:nonnull} Tmp_412 != 0;
    assume Tmp_412 > 0;
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    call {:si_unique_call 1016} SerialLogError(DriverObject_2, 0, Tmp_410, Tmp_412, 0, 0, 0, 75, 0, -1073348600, 0, 0, 0, 0);
    Tmp_394 := strConst__li2bpl168;
    call {:si_unique_call 1017} vslice_dummy_var_269 := SerialDbgPrintEx(14, Tmp_394);
    goto L512;

  anon115_Then:
    assume {:partition} parameters == 0;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    call {:si_unique_call 1018} SerialLogError(DriverObject_2, 0, Tmp_419, Tmp_438, 0, 0, 0, 74, 0, -1073348600, 0, 0, 0, 0);
    Tmp_402 := strConst__li2bpl169;
    call {:si_unique_call 1019} vslice_dummy_var_270 := SerialDbgPrintEx(14, Tmp_402);
    goto L512;

  anon114_Then:
    goto L64;

  anon84_Then:
    assume {:partition} foundOne_1 == 0;
    goto L70;

  L70:
    interfaceType_1 := interfaceType_1 + 1;
    goto L70_dummy;

  L70_dummy:
    assume false;
    return;

  anon113_Then:
    assume {:partition} interfaceType_1 == 0;
    goto L70;

  anon83_Then:
    assume {:partition} interfaceType_1 >= 17;
    goto L64;
}



procedure {:origName "SerialTranslateResourceList"} SerialTranslateResourceList(actual_DriverObject_3: int, actual_UserSubKey: int, actual_PTrResourceList: int, actual_PResourceList_1: int, actual_PartialCount: int, actual_PUserData_4: int) returns (Tmp_452: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_452 == 0 || Tmp_452 == -1073741709;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialTranslateResourceList"} SerialTranslateResourceList(actual_DriverObject_3: int, actual_UserSubKey: int, actual_PTrResourceList: int, actual_PResourceList_1: int, actual_PartialCount: int, actual_PUserData_4: int) returns (Tmp_452: int)
{
  var {:scalar} Tmp_453: int;
  var {:pointer} Tmp_454: int;
  var {:pointer} Tmp_455: int;
  var {:scalar} Tmp_456: int;
  var {:scalar} Tmp_457: int;
  var {:scalar} Tmp_458: int;
  var {:scalar} outAddrSpace: int;
  var {:scalar} Tmp_459: int;
  var {:pointer} Tmp_460: int;
  var {:pointer} Tmp_461: int;
  var {:scalar} outPhysAddr: int;
  var {:pointer} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:pointer} Tmp_464: int;
  var {:pointer} Tmp_465: int;
  var {:pointer} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:pointer} Tmp_468: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} Tmp_470: int;
  var {:pointer} Tmp_471: int;
  var {:scalar} Tmp_472: int;
  var {:pointer} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:pointer} Tmp_475: int;
  var {:pointer} Tmp_476: int;
  var {:scalar} outIrql: int;
  var {:pointer} Tmp_477: int;
  var {:scalar} Tmp_478: int;
  var {:scalar} sdv_386: int;
  var {:pointer} Tmp_479: int;
  var {:scalar} Tmp_480: int;
  var {:scalar} outAffinity: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:scalar} sdv_387: int;
  var {:scalar} Tmp_483: int;
  var {:pointer} Tmp_484: int;
  var {:scalar} Tmp_485: int;
  var {:pointer} Tmp_486: int;
  var {:pointer} Tmp_487: int;
  var {:scalar} sdv_389: int;
  var {:scalar} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_491: int;
  var {:scalar} Tmp_492: int;
  var {:scalar} Tmp_493: int;
  var {:pointer} Tmp_494: int;
  var {:scalar} status_15: int;
  var {:pointer} Tmp_495: int;
  var {:pointer} Tmp_496: int;
  var {:pointer} Tmp_497: int;
  var {:pointer} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:pointer} Tmp_500: int;
  var {:pointer} Tmp_501: int;
  var {:scalar} Tmp_502: int;
  var {:pointer} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:pointer} Tmp_508: int;
  var {:pointer} Tmp_509: int;
  var {:pointer} Tmp_510: int;
  var {:pointer} DriverObject_3: int;
  var {:pointer} UserSubKey: int;
  var {:pointer} PTrResourceList: int;
  var {:scalar} PartialCount: int;
  var {:pointer} PUserData_4: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;

  anon0:
    call {:si_unique_call 1022} Tmp_453 := __HAVOC_malloc(20);
    call {:si_unique_call 1023} Tmp_456 := __HAVOC_malloc(20);
    call {:si_unique_call 1024} outPhysAddr := __HAVOC_malloc(20);
    call {:si_unique_call 1025} Tmp_467 := __HAVOC_malloc(20);
    call {:si_unique_call 1026} Tmp_481 := __HAVOC_malloc(20);
    call {:si_unique_call 1027} Tmp_483 := __HAVOC_malloc(20);
    call {:si_unique_call 1028} Tmp_492 := __HAVOC_malloc(20);
    call {:si_unique_call 1029} Tmp_493 := __HAVOC_malloc(20);
    DriverObject_3 := actual_DriverObject_3;
    UserSubKey := actual_UserSubKey;
    PTrResourceList := actual_PTrResourceList;
    PartialCount := actual_PartialCount;
    PUserData_4 := actual_PUserData_4;
    call {:si_unique_call 1030} Tmp_454 := __HAVOC_malloc(244);
    call {:si_unique_call 1031} Tmp_455 := __HAVOC_malloc(264);
    call {:si_unique_call 1032} Tmp_460 := __HAVOC_malloc(140);
    call {:si_unique_call 1033} Tmp_461 := __HAVOC_malloc(264);
    call {:si_unique_call 1034} Tmp_462 := __HAVOC_malloc(264);
    call {:si_unique_call 1035} Tmp_463 := __HAVOC_malloc(4);
    call {:si_unique_call 1036} Tmp_464 := __HAVOC_malloc(244);
    call {:si_unique_call 1037} Tmp_465 := __HAVOC_malloc(140);
    call {:si_unique_call 1038} Tmp_466 := __HAVOC_malloc(264);
    call {:si_unique_call 1039} Tmp_468 := __HAVOC_malloc(264);
    call {:si_unique_call 1040} Tmp_469 := __HAVOC_malloc(264);
    call {:si_unique_call 1041} Tmp_470 := __HAVOC_malloc(244);
    call {:si_unique_call 1042} Tmp_471 := __HAVOC_malloc(264);
    call {:si_unique_call 1043} Tmp_473 := __HAVOC_malloc(576);
    call {:si_unique_call 1044} Tmp_474 := __HAVOC_malloc(244);
    call {:si_unique_call 1045} Tmp_475 := __HAVOC_malloc(264);
    call {:si_unique_call 1046} Tmp_476 := __HAVOC_malloc(244);
    call {:si_unique_call 1047} Tmp_477 := __HAVOC_malloc(244);
    call {:si_unique_call 1048} Tmp_479 := __HAVOC_malloc(264);
    call {:si_unique_call 1049} Tmp_482 := __HAVOC_malloc(244);
    call {:si_unique_call 1050} Tmp_484 := __HAVOC_malloc(264);
    call {:si_unique_call 1051} Tmp_486 := __HAVOC_malloc(264);
    call {:si_unique_call 1052} Tmp_487 := __HAVOC_malloc(244);
    call {:si_unique_call 1053} Tmp_489 := __HAVOC_malloc(264);
    call {:si_unique_call 1054} Tmp_491 := __HAVOC_malloc(264);
    call {:si_unique_call 1055} Tmp_494 := __HAVOC_malloc(244);
    call {:si_unique_call 1056} Tmp_495 := __HAVOC_malloc(244);
    call {:si_unique_call 1057} Tmp_497 := __HAVOC_malloc(576);
    call {:si_unique_call 1058} Tmp_498 := __HAVOC_malloc(264);
    call {:si_unique_call 1059} Tmp_499 := __HAVOC_malloc(244);
    call {:si_unique_call 1060} Tmp_500 := __HAVOC_malloc(64);
    call {:si_unique_call 1061} Tmp_501 := __HAVOC_malloc(244);
    call {:si_unique_call 1062} Tmp_504 := __HAVOC_malloc(264);
    call {:si_unique_call 1063} Tmp_505 := __HAVOC_malloc(4);
    call {:si_unique_call 1064} Tmp_506 := __HAVOC_malloc(4);
    call {:si_unique_call 1065} Tmp_508 := __HAVOC_malloc(244);
    call {:si_unique_call 1066} Tmp_509 := __HAVOC_malloc(244);
    call {:si_unique_call 1067} Tmp_510 := __HAVOC_malloc(244);
    outAffinity := -1;
    status_15 := 0;
    call {:si_unique_call 1068} sdv_do_paged_code_check();
    Tmp_465 := strConst__li2bpl179;
    call {:si_unique_call 1069} vslice_dummy_var_271 := SerialDbgPrintEx(11, Tmp_465);
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    havoc Tmp_478;
    goto L19;

  L19:
    outIrql := Tmp_478;
    call {:si_unique_call 1070} sdv_RtlCopyMemory(0, 0, 68);
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_455;
    assume {:nonnull} Tmp_455 != 0;
    assume Tmp_455 > 0;
    havoc Tmp_476;
    assume {:nonnull} Tmp_476 != 0;
    assume Tmp_476 > 0;
    havoc outAddrSpace;
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_468;
    assume {:nonnull} Tmp_468 != 0;
    assume Tmp_468 > 0;
    havoc Tmp_508;
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    call {:si_unique_call 1071} sdv_386 := corral_nondet();
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_386 != 0;
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_491;
    assume {:nonnull} Tmp_491 != 0;
    assume Tmp_491 > 0;
    havoc Tmp_477;
    assume {:nonnull} Tmp_477 != 0;
    assume Tmp_477 > 0;
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_462;
    assume {:nonnull} Tmp_462 != 0;
    assume Tmp_462 > 0;
    havoc Tmp_494;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    havoc Tmp_485;
    goto L36;

  L36:
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    havoc vslice_dummy_var_72;
    havoc vslice_dummy_var_73;
    havoc vslice_dummy_var_74;
    call {:si_unique_call 1072} sdv_387 := HalGetInterruptVector(vslice_dummy_var_72, vslice_dummy_var_73, Tmp_485, vslice_dummy_var_74, 0, 0);
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_461;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    havoc Tmp_501;
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_489;
    assume {:nonnull} Tmp_489 != 0;
    assume Tmp_489 > 0;
    havoc Tmp_464;
    assume {:nonnull} Tmp_464 != 0;
    assume Tmp_464 > 0;
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_475;
    assume {:nonnull} Tmp_475 != 0;
    assume Tmp_475 > 0;
    havoc Tmp_509;
    assume {:nonnull} Tmp_509 != 0;
    assume Tmp_509 > 0;
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    havoc Tmp_454;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    havoc outAddrSpace;
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_469;
    assume {:nonnull} Tmp_469 != 0;
    assume Tmp_469 > 0;
    havoc Tmp_495;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} PartialCount == 3;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    call {:si_unique_call 1073} sdv_389 := corral_nondet();
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_389 != 0;
    Tmp_500 := strConst__li2bpl180;
    call {:si_unique_call 1074} vslice_dummy_var_272 := SerialDbgPrintEx(4, Tmp_500);
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_504;
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    havoc Tmp_470;
    assume {:nonnull} Tmp_470 != 0;
    assume Tmp_470 > 0;
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_486;
    assume {:nonnull} Tmp_486 != 0;
    assume Tmp_486 > 0;
    havoc Tmp_487;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    assume {:nonnull} outPhysAddr != 0;
    assume outPhysAddr > 0;
    goto L46;

  L46:
    Tmp_460 := strConst__li2bpl179;
    call {:si_unique_call 1075} vslice_dummy_var_273 := SerialDbgPrintEx(11, Tmp_460);
    Tmp_452 := status_15;
    return;

  anon15_Then:
    assume {:partition} sdv_389 == 0;
    assume {:nonnull} UserSubKey != 0;
    assume UserSubKey > 0;
    havoc Tmp_463;
    Tmp_507 := Tmp_463;
    assume {:nonnull} UserSubKey != 0;
    assume UserSubKey > 0;
    havoc Tmp_458;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    havoc vslice_dummy_var_75;
    call {:si_unique_call 1076} SerialLogError(DriverObject_3, 0, vslice_dummy_var_75, Tmp_481, 0, 0, 0, 62, 0, -1073348569, Tmp_458, Tmp_507, 0, 0);
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_484;
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    havoc Tmp_510;
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    havoc Tmp_472;
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_466;
    assume {:nonnull} Tmp_466 != 0;
    assume Tmp_466 > 0;
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    havoc Tmp_502;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    Tmp_497 := strConst__li2bpl181;
    call {:si_unique_call 1077} vslice_dummy_var_274 := SerialDbgPrintEx(14, Tmp_497);
    status_15 := -1073741709;
    goto L46;

  anon18_Then:
    assume {:partition} PartialCount != 3;
    goto L46;

  anon17_Then:
    assume {:nonnull} UserSubKey != 0;
    assume UserSubKey > 0;
    havoc Tmp_505;
    Tmp_496 := Tmp_505;
    assume {:nonnull} UserSubKey != 0;
    assume UserSubKey > 0;
    havoc Tmp_459;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    havoc vslice_dummy_var_76;
    call {:si_unique_call 1078} SerialLogError(DriverObject_3, 0, vslice_dummy_var_76, Tmp_493, 0, 0, 0, 61, 0, -1073348570, Tmp_459, Tmp_496, 0, 0);
    status_15 := -1073741709;
    goto L46;

  anon16_Then:
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    havoc Tmp_485;
    goto L36;

  anon14_Then:
    assume {:partition} sdv_386 == 0;
    assume {:nonnull} UserSubKey != 0;
    assume UserSubKey > 0;
    havoc Tmp_506;
    Tmp_490 := Tmp_506;
    assume {:nonnull} UserSubKey != 0;
    assume UserSubKey > 0;
    havoc Tmp_480;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    havoc vslice_dummy_var_77;
    call {:si_unique_call 1079} SerialLogError(DriverObject_3, 0, vslice_dummy_var_77, Tmp_483, 0, 0, 0, 60, 0, -1073348571, Tmp_480, Tmp_490, 0, 0);
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_479;
    assume {:nonnull} Tmp_479 != 0;
    assume Tmp_479 > 0;
    havoc Tmp_474;
    assume {:nonnull} Tmp_474 != 0;
    assume Tmp_474 > 0;
    havoc Tmp_488;
    assume {:nonnull} PTrResourceList != 0;
    assume PTrResourceList > 0;
    havoc Tmp_498;
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    havoc Tmp_482;
    assume {:nonnull} Tmp_482 != 0;
    assume Tmp_482 > 0;
    havoc Tmp_457;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    Tmp_473 := strConst__li2bpl182;
    call {:si_unique_call 1080} vslice_dummy_var_275 := SerialDbgPrintEx(14, Tmp_473);
    status_15 := -1073741709;
    goto L46;

  anon13_Then:
    assume {:nonnull} PUserData_4 != 0;
    assume PUserData_4 > 0;
    havoc Tmp_478;
    goto L19;
}



procedure {:origName "SerialBuildRequirementsList"} SerialBuildRequirementsList(actual_PRequiredList: int, actual_PartialCount_1: int, actual_PUserData_5: int) returns (Tmp_511: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_511 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialBuildRequirementsList"} SerialBuildRequirementsList(actual_PRequiredList: int, actual_PartialCount_1: int, actual_PUserData_5: int) returns (Tmp_511: int)
{
  var {:pointer} reqResList: int;
  var {:pointer} Tmp_512: int;
  var {:pointer} Tmp_514: int;
  var {:pointer} Tmp_515: int;
  var {:scalar} status_16: int;
  var {:pointer} Tmp_516: int;
  var {:pointer} reqResDesc: int;
  var {:pointer} PRequiredList: int;
  var {:scalar} PartialCount_1: int;
  var {:pointer} PUserData_5: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;

  anon0:
    PRequiredList := actual_PRequiredList;
    PartialCount_1 := actual_PartialCount_1;
    PUserData_5 := actual_PUserData_5;
    call {:si_unique_call 1081} Tmp_512 := __HAVOC_malloc(140);
    call {:si_unique_call 1082} Tmp_514 := __HAVOC_malloc(140);
    call {:si_unique_call 1083} Tmp_515 := __HAVOC_malloc(380);
    call {:si_unique_call 1084} Tmp_516 := __HAVOC_malloc(392);
    status_16 := 0;
    call {:si_unique_call 1085} sdv_do_paged_code_check();
    Tmp_514 := strConst__li2bpl183;
    call {:si_unique_call 1086} vslice_dummy_var_276 := SerialDbgPrintEx(11, Tmp_514);
    call {:si_unique_call 1087} sdv_RtlZeroMemory(0, 136);
    assume {:nonnull} PRequiredList != 0;
    assume PRequiredList > 0;
    assume {:nonnull} PRequiredList != 0;
    assume PRequiredList > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} PRequiredList != 0;
    assume PRequiredList > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} PRequiredList != 0;
    assume PRequiredList > 0;
    assume {:nonnull} PRequiredList != 0;
    assume PRequiredList > 0;
    assume {:nonnull} PRequiredList != 0;
    assume PRequiredList > 0;
    havoc Tmp_516;
    reqResList := Tmp_516;
    assume {:nonnull} reqResList != 0;
    assume reqResList > 0;
    assume {:nonnull} reqResList != 0;
    assume reqResList > 0;
    assume {:nonnull} reqResList != 0;
    assume reqResList > 0;
    assume {:nonnull} reqResList != 0;
    assume reqResList > 0;
    havoc Tmp_515;
    reqResDesc := Tmp_515;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    goto L37;

  L37:
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} PartialCount_1 == 3;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    assume {:nonnull} PUserData_5 != 0;
    assume PUserData_5 > 0;
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    goto L42;

  L42:
    Tmp_512 := strConst__li2bpl184;
    call {:si_unique_call 1088} vslice_dummy_var_277 := SerialDbgPrintEx(11, Tmp_512);
    Tmp_511 := status_16;
    return;

  anon6_Then:
    assume {:partition} PartialCount_1 != 3;
    goto L42;

  anon5_Then:
    assume {:nonnull} reqResDesc != 0;
    assume reqResDesc > 0;
    goto L37;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_278: int;

  anon0:
    call {:si_unique_call 1089} vslice_dummy_var_278 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialIsUserDataValid"} SerialIsUserDataValid(actual_DriverObject_4: int, actual_UserSubKey_1: int, actual_Parameters: int, actual_DefaultInterfaceType: int, actual_PUserData_6: int) returns (Tmp_519: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_519 == 0 || Tmp_519 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialIsUserDataValid"} SerialIsUserDataValid(actual_DriverObject_4: int, actual_UserSubKey_1: int, actual_Parameters: int, actual_DefaultInterfaceType: int, actual_PUserData_6: int) returns (Tmp_519: int)
{
  var {:scalar} Tmp_520: int;
  var {:scalar} Tmp_521: int;
  var {:pointer} Tmp_522: int;
  var {:pointer} Tmp_523: int;
  var {:pointer} Tmp_524: int;
  var {:scalar} Tmp_525: int;
  var {:scalar} Tmp_526: int;
  var {:pointer} Tmp_527: int;
  var {:scalar} Tmp_528: int;
  var {:scalar} Tmp_529: int;
  var {:pointer} Tmp_530: int;
  var {:pointer} Tmp_531: int;
  var {:pointer} Tmp_532: int;
  var {:scalar} Tmp_533: int;
  var {:pointer} Tmp_534: int;
  var {:pointer} Tmp_535: int;
  var {:pointer} Tmp_536: int;
  var {:pointer} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Tmp_539: int;
  var {:scalar} Tmp_540: int;
  var {:pointer} Tmp_541: int;
  var {:scalar} Tmp_542: int;
  var {:pointer} Tmp_543: int;
  var {:pointer} Tmp_544: int;
  var {:scalar} Tmp_545: int;
  var {:pointer} Tmp_546: int;
  var {:pointer} Tmp_547: int;
  var {:pointer} Tmp_548: int;
  var {:pointer} Tmp_549: int;
  var {:scalar} Tmp_550: int;
  var {:scalar} Tmp_551: int;
  var {:pointer} Tmp_552: int;
  var {:scalar} Tmp_553: int;
  var {:pointer} Tmp_554: int;
  var {:pointer} Tmp_555: int;
  var {:scalar} foundIt_1: int;
  var {:scalar} Tmp_556: int;
  var {:pointer} Tmp_557: int;
  var {:pointer} Tmp_558: int;
  var {:scalar} Tmp_559: int;
  var {:pointer} Tmp_560: int;
  var {:scalar} Tmp_561: int;
  var {:pointer} Tmp_562: int;
  var {:pointer} Tmp_564: int;
  var {:pointer} Tmp_565: int;
  var {:pointer} Tmp_566: int;
  var {:scalar} rval: int;
  var {:pointer} Tmp_567: int;
  var {:scalar} Tmp_568: int;
  var {:scalar} Tmp_569: int;
  var {:scalar} sdv_412: int;
  var {:pointer} Tmp_570: int;
  var {:pointer} Tmp_571: int;
  var {:pointer} Tmp_572: int;
  var {:scalar} Tmp_573: int;
  var {:pointer} Tmp_574: int;
  var {:pointer} Tmp_575: int;
  var {:scalar} Tmp_576: int;
  var {:scalar} Tmp_577: int;
  var {:scalar} sdv_417: int;
  var {:pointer} Tmp_578: int;
  var {:pointer} Tmp_579: int;
  var {:pointer} Tmp_580: int;
  var {:scalar} Tmp_581: int;
  var {:pointer} Tmp_582: int;
  var {:scalar} sdv_419: int;
  var {:pointer} Tmp_583: int;
  var {:pointer} Tmp_584: int;
  var {:scalar} Tmp_585: int;
  var {:pointer} DriverObject_4: int;
  var {:pointer} UserSubKey_1: int;
  var {:pointer} Parameters: int;
  var {:scalar} DefaultInterfaceType: int;
  var {:pointer} PUserData_6: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;

  anon0:
    call {:si_unique_call 1090} Tmp_520 := __HAVOC_malloc(20);
    call {:si_unique_call 1091} Tmp_521 := __HAVOC_malloc(20);
    call {:si_unique_call 1092} Tmp_526 := __HAVOC_malloc(20);
    call {:si_unique_call 1093} Tmp_542 := __HAVOC_malloc(20);
    call {:si_unique_call 1094} Tmp_550 := __HAVOC_malloc(20);
    call {:si_unique_call 1095} Tmp_551 := __HAVOC_malloc(20);
    call {:si_unique_call 1096} Tmp_553 := __HAVOC_malloc(20);
    call {:si_unique_call 1097} Tmp_577 := __HAVOC_malloc(20);
    call {:si_unique_call 1098} Tmp_581 := __HAVOC_malloc(20);
    call {:si_unique_call 1099} Tmp_585 := __HAVOC_malloc(20);
    DriverObject_4 := actual_DriverObject_4;
    UserSubKey_1 := actual_UserSubKey_1;
    Parameters := actual_Parameters;
    DefaultInterfaceType := actual_DefaultInterfaceType;
    PUserData_6 := actual_PUserData_6;
    call {:si_unique_call 1100} Tmp_524 := __HAVOC_malloc(152);
    call {:si_unique_call 1101} Tmp_527 := __HAVOC_malloc(180);
    call {:si_unique_call 1102} Tmp_530 := __HAVOC_malloc(116);
    call {:si_unique_call 1103} Tmp_532 := __HAVOC_malloc(144);
    call {:si_unique_call 1104} Tmp_534 := __HAVOC_malloc(180);
    call {:si_unique_call 1105} Tmp_535 := __HAVOC_malloc(88);
    call {:si_unique_call 1106} Tmp_537 := __HAVOC_malloc(4);
    call {:si_unique_call 1107} Tmp_538 := __HAVOC_malloc(164);
    call {:si_unique_call 1108} Tmp_543 := __HAVOC_malloc(88);
    call {:si_unique_call 1109} Tmp_544 := __HAVOC_malloc(148);
    call {:si_unique_call 1110} Tmp_546 := __HAVOC_malloc(84);
    call {:si_unique_call 1111} Tmp_548 := __HAVOC_malloc(188);
    call {:si_unique_call 1112} Tmp_549 := __HAVOC_malloc(72);
    call {:si_unique_call 1113} Tmp_552 := __HAVOC_malloc(96);
    call {:si_unique_call 1114} Tmp_554 := __HAVOC_malloc(232);
    call {:si_unique_call 1115} Tmp_555 := __HAVOC_malloc(4);
    call {:si_unique_call 1116} Tmp_558 := __HAVOC_malloc(236);
    call {:si_unique_call 1117} Tmp_564 := __HAVOC_malloc(116);
    call {:si_unique_call 1118} Tmp_565 := __HAVOC_malloc(100);
    call {:si_unique_call 1119} Tmp_567 := __HAVOC_malloc(4);
    call {:si_unique_call 1120} Tmp_572 := __HAVOC_malloc(164);
    call {:si_unique_call 1121} Tmp_575 := __HAVOC_malloc(164);
    call {:si_unique_call 1122} Tmp_578 := __HAVOC_malloc(156);
    call {:si_unique_call 1123} Tmp_579 := __HAVOC_malloc(176);
    call {:si_unique_call 1124} Tmp_580 := __HAVOC_malloc(248);
    call {:si_unique_call 1125} Tmp_584 := __HAVOC_malloc(100);
    rval := 1;
    call {:si_unique_call 1126} sdv_do_paged_code_check();
    Tmp_530 := strConst__li2bpl185;
    call {:si_unique_call 1127} vslice_dummy_var_280 := SerialDbgPrintEx(11, Tmp_530);
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc Tmp_573;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc vslice_dummy_var_78;
    havoc vslice_dummy_var_79;
    call {:si_unique_call 1128} SerialLogError(DriverObject_4, 0, vslice_dummy_var_78, Tmp_585, 0, 0, 0, 67, 0, -1073348588, Tmp_573, vslice_dummy_var_79, 0, 0);
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_583;
    Tmp_535 := strConst__li2bpl198;
    call {:si_unique_call 1129} vslice_dummy_var_281 := SerialDbgPrintEx(14, Tmp_535);
    rval := 0;
    goto L34;

  L34:
    Tmp_519 := rval;
    return;

  anon36_Then:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc Tmp_556;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc vslice_dummy_var_80;
    havoc vslice_dummy_var_81;
    call {:si_unique_call 1130} SerialLogError(DriverObject_4, 0, vslice_dummy_var_80, Tmp_521, 0, 0, 0, 69, 0, -1073348587, Tmp_556, vslice_dummy_var_81, 0, 0);
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_582;
    Tmp_565 := strConst__li2bpl199;
    call {:si_unique_call 1131} vslice_dummy_var_282 := SerialDbgPrintEx(14, Tmp_565);
    rval := 0;
    goto L34;

  anon40_Then:
    goto L20;

  L20:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L73;

  L73:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc Tmp_561;
    assume {:nonnull} Tmp_551 != 0;
    assume Tmp_551 > 0;
    assume {:nonnull} Tmp_551 != 0;
    assume Tmp_551 > 0;
    assume {:nonnull} Tmp_551 != 0;
    assume Tmp_551 > 0;
    assume {:nonnull} Tmp_551 != 0;
    assume Tmp_551 > 0;
    assume {:nonnull} Tmp_551 != 0;
    assume Tmp_551 > 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc vslice_dummy_var_82;
    havoc vslice_dummy_var_83;
    call {:si_unique_call 1132} SerialLogError(DriverObject_4, 0, vslice_dummy_var_82, Tmp_551, 0, 0, 0, 71, 0, -1073348586, Tmp_561, vslice_dummy_var_83, 0, 0);
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_574;
    Tmp_543 := strConst__li2bpl200;
    call {:si_unique_call 1133} vslice_dummy_var_283 := SerialDbgPrintEx(14, Tmp_543);
    rval := 0;
    goto L34;

  anon42_Then:
    call {:si_unique_call 1134} vslice_dummy_var_279 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant254, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} foundIt_1 != 0;
    goto L90;

  L90:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc Tmp_568;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc vslice_dummy_var_84;
    havoc vslice_dummy_var_85;
    call {:si_unique_call 1135} SerialLogError(DriverObject_4, 0, vslice_dummy_var_84, Tmp_526, 0, 0, 0, 73, 0, -1073348584, Tmp_568, vslice_dummy_var_85, 0, 0);
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_571;
    Tmp_554 := strConst__li2bpl201;
    call {:si_unique_call 1136} vslice_dummy_var_284 := SerialDbgPrintEx(14, Tmp_554);
    rval := 0;
    goto L34;

  anon45_Then:
    goto L91;

  L91:
    Tmp_532 := strConst__li2bpl186;
    call {:si_unique_call 1137} vslice_dummy_var_285 := SerialDbgPrintEx(4, Tmp_532);
    Tmp_548 := strConst__li2bpl187;
    call {:si_unique_call 1138} vslice_dummy_var_286 := SerialDbgPrintEx(4, Tmp_548);
    Tmp_572 := strConst__li2bpl188;
    call {:si_unique_call 1139} vslice_dummy_var_287 := SerialDbgPrintEx(4, Tmp_572);
    Tmp_575 := strConst__li2bpl189;
    call {:si_unique_call 1140} vslice_dummy_var_288 := SerialDbgPrintEx(4, Tmp_575);
    Tmp_538 := strConst__li2bpl190;
    call {:si_unique_call 1141} vslice_dummy_var_289 := SerialDbgPrintEx(4, Tmp_538);
    Tmp_579 := strConst__li2bpl191;
    call {:si_unique_call 1142} vslice_dummy_var_290 := SerialDbgPrintEx(4, Tmp_579);
    Tmp_534 := strConst__li2bpl192;
    call {:si_unique_call 1143} vslice_dummy_var_291 := SerialDbgPrintEx(4, Tmp_534);
    Tmp_527 := strConst__li2bpl193;
    call {:si_unique_call 1144} vslice_dummy_var_292 := SerialDbgPrintEx(4, Tmp_527);
    Tmp_524 := strConst__li2bpl194;
    call {:si_unique_call 1145} vslice_dummy_var_293 := SerialDbgPrintEx(4, Tmp_524);
    Tmp_544 := strConst__li2bpl195;
    call {:si_unique_call 1146} vslice_dummy_var_294 := SerialDbgPrintEx(4, Tmp_544);
    Tmp_578 := strConst__li2bpl196;
    call {:si_unique_call 1147} vslice_dummy_var_295 := SerialDbgPrintEx(4, Tmp_578);
    Tmp_564 := strConst__li2bpl197;
    call {:si_unique_call 1148} vslice_dummy_var_296 := SerialDbgPrintEx(11, Tmp_564);
    goto L34;

  anon44_Then:
    goto L91;

  anon43_Then:
    assume {:partition} foundIt_1 == 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc Tmp_525;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc vslice_dummy_var_86;
    havoc vslice_dummy_var_87;
    call {:si_unique_call 1149} SerialLogError(DriverObject_4, 0, vslice_dummy_var_86, Tmp_581, 0, 0, 0, 72, 0, -1073348585, Tmp_525, vslice_dummy_var_87, 0, 0);
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_539;
    Tmp_558 := strConst__li2bpl202;
    call {:si_unique_call 1150} vslice_dummy_var_297 := SerialDbgPrintEx(14, Tmp_558);
    rval := 0;
    goto L34;

  anon35_Then:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto L90;

  anon41_Then:
    goto L73;

  anon38_Then:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc Tmp_529;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc vslice_dummy_var_88;
    havoc vslice_dummy_var_89;
    call {:si_unique_call 1151} SerialLogError(DriverObject_4, 0, vslice_dummy_var_88, Tmp_520, 0, 0, 0, 70, 0, -1073348587, Tmp_529, vslice_dummy_var_89, 0, 0);
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_566;
    Tmp_584 := strConst__li2bpl199;
    call {:si_unique_call 1152} vslice_dummy_var_298 := SerialDbgPrintEx(14, Tmp_584);
    rval := 0;
    goto L34;

  anon39_Then:
    goto L20;

  anon37_Then:
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc Tmp_576;
    assume {:nonnull} Tmp_542 != 0;
    assume Tmp_542 > 0;
    assume {:nonnull} Tmp_542 != 0;
    assume Tmp_542 > 0;
    assume {:nonnull} Tmp_542 != 0;
    assume Tmp_542 > 0;
    assume {:nonnull} Tmp_542 != 0;
    assume Tmp_542 > 0;
    assume {:nonnull} Tmp_542 != 0;
    assume Tmp_542 > 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc vslice_dummy_var_90;
    havoc vslice_dummy_var_91;
    call {:si_unique_call 1153} SerialLogError(DriverObject_4, 0, vslice_dummy_var_90, Tmp_542, 0, 0, 0, 68, 0, -1073348588, Tmp_576, vslice_dummy_var_91, 0, 0);
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_557;
    Tmp_580 := strConst__li2bpl203;
    call {:si_unique_call 1154} vslice_dummy_var_299 := SerialDbgPrintEx(14, Tmp_580);
    rval := 0;
    goto L34;

  anon34_Then:
    goto L20;

  anon33_Then:
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_522;
    Tmp_533 := sdv_417 * 2 + 2;
    assume {:nonnull} UserSubKey_1 != 0;
    assume UserSubKey_1 > 0;
    havoc Tmp_567;
    Tmp_531 := Tmp_567;
    assume {:nonnull} UserSubKey_1 != 0;
    assume UserSubKey_1 > 0;
    havoc Tmp_569;
    assume {:nonnull} Tmp_550 != 0;
    assume Tmp_550 > 0;
    assume {:nonnull} Tmp_550 != 0;
    assume Tmp_550 > 0;
    assume {:nonnull} Tmp_550 != 0;
    assume Tmp_550 > 0;
    assume {:nonnull} Tmp_550 != 0;
    assume Tmp_550 > 0;
    assume {:nonnull} Tmp_550 != 0;
    assume Tmp_550 > 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc vslice_dummy_var_92;
    call {:si_unique_call 1155} SerialLogError(DriverObject_4, 0, vslice_dummy_var_92, Tmp_550, 0, 0, 0, 66, 0, -1073348583, Tmp_569, Tmp_531, Tmp_533, Tmp_522);
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_541;
    Tmp_546 := strConst__li2bpl204;
    call {:si_unique_call 1156} vslice_dummy_var_300 := SerialDbgPrintEx(14, Tmp_546);
    rval := 0;
    goto L34;

  anon32_Then:
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_570;
    Tmp_528 := sdv_419 * 2 + 2;
    assume {:nonnull} UserSubKey_1 != 0;
    assume UserSubKey_1 > 0;
    havoc Tmp_537;
    Tmp_547 := Tmp_537;
    assume {:nonnull} UserSubKey_1 != 0;
    assume UserSubKey_1 > 0;
    havoc Tmp_559;
    assume {:nonnull} Tmp_577 != 0;
    assume Tmp_577 > 0;
    assume {:nonnull} Tmp_577 != 0;
    assume Tmp_577 > 0;
    assume {:nonnull} Tmp_577 != 0;
    assume Tmp_577 > 0;
    assume {:nonnull} Tmp_577 != 0;
    assume Tmp_577 > 0;
    assume {:nonnull} Tmp_577 != 0;
    assume Tmp_577 > 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc vslice_dummy_var_93;
    call {:si_unique_call 1157} SerialLogError(DriverObject_4, 0, vslice_dummy_var_93, Tmp_577, 0, 0, 0, 65, 0, -1073348583, Tmp_559, Tmp_547, Tmp_528, Tmp_570);
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_523;
    Tmp_549 := strConst__li2bpl205;
    call {:si_unique_call 1158} vslice_dummy_var_301 := SerialDbgPrintEx(14, Tmp_549);
    rval := 0;
    goto L34;

  anon31_Then:
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_560;
    Tmp_545 := sdv_412 * 2 + 2;
    assume {:nonnull} UserSubKey_1 != 0;
    assume UserSubKey_1 > 0;
    havoc Tmp_555;
    Tmp_562 := Tmp_555;
    assume {:nonnull} UserSubKey_1 != 0;
    assume UserSubKey_1 > 0;
    havoc Tmp_540;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    assume {:nonnull} PUserData_6 != 0;
    assume PUserData_6 > 0;
    havoc vslice_dummy_var_94;
    call {:si_unique_call 1159} SerialLogError(DriverObject_4, 0, vslice_dummy_var_94, Tmp_553, 0, 0, 0, 64, 0, -1073348583, Tmp_540, Tmp_562, Tmp_545, Tmp_560);
    assume {:nonnull} Parameters != 0;
    assume Parameters > 0;
    havoc Tmp_536;
    Tmp_552 := strConst__li2bpl206;
    call {:si_unique_call 1160} vslice_dummy_var_302 := SerialDbgPrintEx(14, Tmp_552);
    rval := 0;
    goto L34;
}



procedure {:origName "SetDeviceIsOpened"} SetDeviceIsOpened(actual_PDevExt_2: int, actual_DeviceIsOpened: int, actual_Reopen: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SetDeviceIsOpened"} SetDeviceIsOpened(actual_PDevExt_2: int, actual_DeviceIsOpened: int, actual_Reopen: int)
{
  var {:pointer} Tmp_586: int;
  var {:scalar} oldIrql_1: int;
  var {:pointer} PDevExt_2: int;
  var {:scalar} DeviceIsOpened: int;
  var {:scalar} Reopen: int;
  var vslice_dummy_var_303: int;

  anon0:
    call {:si_unique_call 1161} vslice_dummy_var_303 := __HAVOC_malloc(4);
    PDevExt_2 := actual_PDevExt_2;
    DeviceIsOpened := actual_DeviceIsOpened;
    Reopen := actual_Reopen;
    call {:si_unique_call 1162} Tmp_586 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_586 != 0;
    assume Tmp_586 > 0;
    call {:si_unique_call 1163} sdv_KeAcquireSpinLock(0, Tmp_586);
    assume {:nonnull} Tmp_586 != 0;
    assume Tmp_586 > 0;
    havoc oldIrql_1;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    call {:si_unique_call 1164} sdv_KeReleaseSpinLock(0, oldIrql_1);
    return;
}



procedure {:origName "SerialGotoPowerState"} SerialGotoPowerState(actual_PDevObj_4: int, actual_PDevExt_3: int, actual_DevPowerState: int) returns (Tmp_588: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_588 == 0 || Tmp_588 == -1073741584 || Tmp_588 == 259 || Tmp_588 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGotoPowerState"} SerialGotoPowerState(actual_PDevObj_4: int, actual_PDevExt_3: int, actual_DevPowerState: int) returns (Tmp_588: int)
{
  var {:scalar} powerState: int;
  var {:scalar} gotoPowEvent: int;
  var {:pointer} Tmp_590: int;
  var {:scalar} status_17: int;
  var {:pointer} Tmp_591: int;
  var {:scalar} DevPowerState: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;

  anon0:
    call {:si_unique_call 1165} powerState := __HAVOC_malloc(8);
    call {:si_unique_call 1166} gotoPowEvent := __HAVOC_malloc(124);
    DevPowerState := actual_DevPowerState;
    call {:si_unique_call 1167} Tmp_590 := __HAVOC_malloc(120);
    call {:si_unique_call 1168} Tmp_591 := __HAVOC_malloc(100);
    call {:si_unique_call 1169} sdv_do_paged_code_check();
    Tmp_591 := strConst__li2bpl207;
    call {:si_unique_call 1170} vslice_dummy_var_305 := SerialDbgPrintEx(11, Tmp_591);
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 1171} KeInitializeEvent(gotoPowEvent, 1, 0);
    call {:si_unique_call 1172} status_17 := PoRequestPowerIrp(0, 2, powerState, li2bplFunctionConstant318, 0, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_17 == 259;
    call {:si_unique_call 1173} vslice_dummy_var_304 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    status_17 := 0;
    goto L21;

  L21:
    Tmp_590 := strConst__li2bpl208;
    call {:si_unique_call 1174} vslice_dummy_var_306 := SerialDbgPrintEx(11, Tmp_590);
    Tmp_588 := status_17;
    return;

  anon3_Then:
    assume {:partition} status_17 != 259;
    goto L21;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init11"} _sdv_init11()
{
  var vslice_dummy_var_307: int;

  anon0:
    call {:si_unique_call 1175} vslice_dummy_var_307 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialSetPowerD0"} SerialSetPowerD0(actual_PDevObj_5: int, actual_PIrp_2: int) returns (Tmp_594: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialSetPowerD0"} SerialSetPowerD0(actual_PDevObj_5: int, actual_PIrp_2: int) returns (Tmp_594: int)
{
  var {:pointer} SD4: int;
  var {:pointer} Tmp_595: int;
  var {:pointer} pDevExt_6: int;
  var {:pointer} Tmp_596: int;
  var {:pointer} Tmp_597: int;
  var {:scalar} sdv_4: int;
  var {:pointer} Tmp_598: int;
  var {:pointer} pIrpStack_2: int;
  var {:pointer} Tmp_599: int;
  var {:pointer} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:scalar} status_18: int;
  var {:pointer} Tmp_602: int;
  var {:pointer} PDevObj_5: int;
  var {:pointer} PIrp_2: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;

  anon0:
    call {:si_unique_call 1176} sdv_4 := __HAVOC_malloc(8);
    PDevObj_5 := actual_PDevObj_5;
    PIrp_2 := actual_PIrp_2;
    call {:si_unique_call 1177} Tmp_595 := __HAVOC_malloc(72);
    call {:si_unique_call 1178} Tmp_596 := __HAVOC_malloc(92);
    call {:si_unique_call 1179} Tmp_597 := __HAVOC_malloc(100);
    call {:si_unique_call 1180} Tmp_598 := __HAVOC_malloc(84);
    call {:si_unique_call 1181} Tmp_599 := __HAVOC_malloc(104);
    call {:si_unique_call 1182} Tmp_600 := __HAVOC_malloc(72);
    call {:si_unique_call 1183} Tmp_601 := __HAVOC_malloc(72);
    call {:si_unique_call 1184} Tmp_602 := __HAVOC_malloc(84);
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    havoc pDevExt_6;
    call {:si_unique_call 1185} pIrpStack_2 := sdv_IoGetCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1186} sdv_do_paged_code_check();
    Tmp_598 := strConst__li2bpl209;
    call {:si_unique_call 1187} vslice_dummy_var_309 := SerialDbgPrintEx(11, Tmp_598);
    Tmp_596 := strConst__li2bpl210;
    call {:si_unique_call 1188} vslice_dummy_var_310 := SerialDbgPrintEx(12, Tmp_596);
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    call {:si_unique_call 1189} KeClearEvent(PowerD0Event__SERIAL_DEVICE_EXTENSION(pDevExt_6));
    call {:si_unique_call 1190} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    call {:si_unique_call 1191} sdv_IoSetCompletionRoutine(PIrp_2, li2bplFunctionConstant237, PowerD0Event__SERIAL_DEVICE_EXTENSION(pDevExt_6), 1, 1, 1);
    Tmp_602 := strConst__li2bpl211;
    call {:si_unique_call 1192} vslice_dummy_var_311 := SerialDbgPrintEx(12, Tmp_602);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume PIrp_2 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1193} SLIC_PoCallDriver_entry(0);
    goto L101;

  L101:
    call {:si_unique_call 1194} status_18 := PoCallDriver(0, PIrp_2);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_18 == 259;
    Tmp_597 := strConst__li2bpl212;
    call {:si_unique_call 1195} vslice_dummy_var_312 := SerialDbgPrintEx(12, Tmp_597);
    call {:si_unique_call 1196} vslice_dummy_var_308 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L44;

  L44:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc status_18;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1197} SerialRestoreDeviceState(pDevExt_6);
    goto L49;

  L49:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    havoc vslice_dummy_var_95;
    havoc vslice_dummy_var_96;
    call {:si_unique_call 1198} SD4 := PoSetPowerState(0, vslice_dummy_var_95, vslice_dummy_var_96);
    assume {:nonnull} SD4 != 0;
    assume SD4 > 0;
    assume {:nonnull} sdv_4 != 0;
    assume sdv_4 > 0;
    assume {:nonnull} SD4 != 0;
    assume SD4 > 0;
    assume {:nonnull} sdv_4 != 0;
    assume sdv_4 > 0;
    call {:si_unique_call 1199} PoStartNextPowerIrp(0);
    Tmp_595 := strConst__li2bpl2;
    call {:si_unique_call 1200} vslice_dummy_var_313 := SerialDbgPrintEx(9, Tmp_595);
    call {:si_unique_call 1201} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1202} SerialIRPEpilogue(pDevExt_6);
    Tmp_599 := strConst__li2bpl213;
    call {:si_unique_call 1203} vslice_dummy_var_314 := SerialDbgPrintEx(11, Tmp_599);
    Tmp_594 := status_18;
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L49;

  anon14_Then:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc status_18;
    call {:si_unique_call 1204} PoStartNextPowerIrp(0);
    Tmp_601 := strConst__li2bpl2;
    call {:si_unique_call 1205} vslice_dummy_var_315 := SerialDbgPrintEx(9, Tmp_601);
    call {:si_unique_call 1206} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1207} SerialIRPEpilogue(pDevExt_6);
    Tmp_594 := status_18;
    goto L1;

  anon12_Then:
    assume {:partition} status_18 != 259;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_18 < 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1208} PoStartNextPowerIrp(0);
    Tmp_600 := strConst__li2bpl2;
    call {:si_unique_call 1209} vslice_dummy_var_316 := SerialDbgPrintEx(9, Tmp_600);
    call {:si_unique_call 1210} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1211} SerialIRPEpilogue(pDevExt_6);
    Tmp_594 := status_18;
    goto L1;

  anon13_Then:
    assume {:partition} 0 <= status_18;
    goto L44;

  anon11_Then:
    assume !(PIrp_2 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L101;
}



procedure {:origName "SerialPowerDispatch"} SerialPowerDispatch(actual_PDevObj_6: int, actual_PIrp_3: int) returns (Tmp_604: int);
  modifies alloc, stack_location, markedPending, locked, queuedWithoutMarking, queued, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialPowerDispatch"} SerialPowerDispatch(actual_PDevObj_6: int, actual_PIrp_3: int) returns (Tmp_604: int)
{
  var {:pointer} Tmp_605: int;
  var {:pointer} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:pointer} Tmp_608: int;
  var {:pointer} pDevExt_7: int;
  var {:pointer} Tmp_609: int;
  var {:pointer} Tmp_610: int;
  var {:scalar} powerState_1: int;
  var {:pointer} Tmp_611: int;
  var {:pointer} Tmp_612: int;
  var {:scalar} Tmp_613: int;
  var {:pointer} pIrpStack_3: int;
  var {:pointer} Tmp_614: int;
  var {:pointer} Tmp_615: int;
  var {:pointer} Tmp_616: int;
  var {:pointer} pLowerDevObj_5: int;
  var {:pointer} Tmp_617: int;
  var {:scalar} status_19: int;
  var {:pointer} Tmp_618: int;
  var {:pointer} Tmp_619: int;
  var {:pointer} PDevObj_6: int;
  var {:pointer} PIrp_3: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;

  anon0:
    call {:si_unique_call 1212} powerState_1 := __HAVOC_malloc(8);
    PDevObj_6 := actual_PDevObj_6;
    PIrp_3 := actual_PIrp_3;
    call {:si_unique_call 1213} Tmp_605 := __HAVOC_malloc(100);
    call {:si_unique_call 1214} Tmp_606 := __HAVOC_malloc(136);
    call {:si_unique_call 1215} Tmp_607 := __HAVOC_malloc(112);
    call {:si_unique_call 1216} Tmp_608 := __HAVOC_malloc(72);
    call {:si_unique_call 1217} Tmp_609 := __HAVOC_malloc(104);
    call {:si_unique_call 1218} Tmp_610 := __HAVOC_malloc(72);
    call {:si_unique_call 1219} Tmp_611 := __HAVOC_malloc(72);
    call {:si_unique_call 1220} Tmp_612 := __HAVOC_malloc(124);
    call {:si_unique_call 1221} Tmp_614 := __HAVOC_malloc(80);
    call {:si_unique_call 1222} Tmp_615 := __HAVOC_malloc(72);
    call {:si_unique_call 1223} Tmp_616 := __HAVOC_malloc(104);
    call {:si_unique_call 1224} Tmp_617 := __HAVOC_malloc(100);
    call {:si_unique_call 1225} Tmp_618 := __HAVOC_malloc(28);
    call {:si_unique_call 1226} Tmp_619 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    havoc pDevExt_7;
    call {:si_unique_call 1227} pIrpStack_3 := sdv_IoGetCurrentIrpStackLocation(PIrp_3);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc pLowerDevObj_5;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 1228} sdv_do_paged_code_check();
    call {:si_unique_call 1229} status_19 := SerialIRPPrologue(PIrp_3, pDevExt_7);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} status_19 != 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_19 != 259;
    call {:si_unique_call 1230} PoStartNextPowerIrp(0);
    Tmp_619 := strConst__li2bpl2;
    call {:si_unique_call 1231} vslice_dummy_var_319 := SerialDbgPrintEx(9, Tmp_619);
    call {:si_unique_call 1232} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1233} SerialIRPEpilogue(pDevExt_7);
    goto L26;

  L26:
    Tmp_604 := status_19;
    goto L1;

  L1:
    call {:si_unique_call 1234} SLIC_SerialPowerDispatch_exit(strConst__li2bpl0, Tmp_604);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:partition} status_19 == 259;
    goto L26;

  anon75_Then:
    assume {:partition} status_19 == 0;
    status_19 := 0;
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_607 := strConst__li2bpl217;
    call {:si_unique_call 1235} vslice_dummy_var_330 := SerialDbgPrintEx(12, Tmp_607);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto L57;

  L57:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc status_19;
    call {:si_unique_call 1236} PoStartNextPowerIrp(0);
    Tmp_610 := strConst__li2bpl2;
    call {:si_unique_call 1237} vslice_dummy_var_331 := SerialDbgPrintEx(9, Tmp_610);
    call {:si_unique_call 1238} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1239} SerialIRPEpilogue(pDevExt_7);
    Tmp_604 := status_19;
    goto L1;

  anon80_Then:
    goto L58;

  L58:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    status_19 := 0;
    call {:si_unique_call 1240} PoStartNextPowerIrp(0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1241} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L248;

  L248:
    call {:si_unique_call 1242} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1243} Tmp_604 := SerialPoCallDriver(pDevExt_7, pLowerDevObj_5, PIrp_3);
    goto L1;

  anon81_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L248;

  anon79_Then:
    goto L58;

  anon77_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto L58;

  anon78_Then:
    goto L57;

  anon96_Then:
    goto L40;

  L40:
    call {:si_unique_call 1244} PoStartNextPowerIrp(0);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1245} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L239;

  L239:
    call {:si_unique_call 1246} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1247} status_19 := SerialPoCallDriver(pDevExt_7, pLowerDevObj_5, PIrp_3);
    Tmp_604 := status_19;
    goto L1;

  anon95_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L239;

  anon97_Then:
    Tmp_616 := strConst__li2bpl216;
    call {:si_unique_call 1248} vslice_dummy_var_322 := SerialDbgPrintEx(12, Tmp_616);
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    Tmp_615 := strConst__li2bpl219;
    call {:si_unique_call 1249} vslice_dummy_var_325 := SerialDbgPrintEx(12, Tmp_615);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    Tmp_606 := strConst__li2bpl220;
    call {:si_unique_call 1250} vslice_dummy_var_326 := SerialDbgPrintEx(12, Tmp_606);
    status_19 := 0;
    goto L40;

  anon83_Then:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    goto L106;

  L106:
    Tmp_605 := strConst__li2bpl222;
    call {:si_unique_call 1251} vslice_dummy_var_328 := SerialDbgPrintEx(12, Tmp_605);
    call {:si_unique_call 1252} Tmp_604 := SerialSetPowerD3(PDevObj_6, PIrp_3);
    goto L1;

  anon107_Then:
    goto L40;

  anon108_Then:
    goto L106;

  anon109_Then:
    goto L106;

  anon84_Then:
    Tmp_617 := strConst__li2bpl221;
    call {:si_unique_call 1253} vslice_dummy_var_327 := SerialDbgPrintEx(12, Tmp_617);
    call {:si_unique_call 1254} Tmp_604 := SerialSetPowerD0(PDevObj_6, PIrp_3);
    goto L1;

  anon99_Then:
    Tmp_614 := strConst__li2bpl218;
    call {:si_unique_call 1255} vslice_dummy_var_329 := SerialDbgPrintEx(12, Tmp_614);
    status_19 := 0;
    goto L40;

  anon82_Then:
    Tmp_608 := strConst__li2bpl223;
    call {:si_unique_call 1256} vslice_dummy_var_323 := SerialDbgPrintEx(12, Tmp_608);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    status_19 := 0;
    goto L40;

  anon85_Then:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L128;

  L128:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    havoc Tmp_613;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_618;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto L130;

  L130:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    call {:si_unique_call 1257} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 1258} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1259} sdv_IoSetCompletionRoutine(PIrp_3, li2bplFunctionConstant322, 0, 1, 1, 1);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1260} SLIC_PoCallDriver_entry(0);
    goto L242;

  L242:
    call {:si_unique_call 1261} vslice_dummy_var_317 := PoCallDriver(0, PIrp_3);
    Tmp_604 := 259;
    goto L1;

  anon90_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L242;

  anon89_Then:
    goto L131;

  L131:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto L150;

  L150:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto L152;

  L152:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    call {:si_unique_call 1262} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 1263} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1264} sdv_IoSetCompletionRoutine(PIrp_3, li2bplFunctionConstant322, 0, 1, 1, 1);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1265} SLIC_PoCallDriver_entry(0);
    goto L245;

  L245:
    call {:si_unique_call 1266} vslice_dummy_var_318 := PoCallDriver(0, PIrp_3);
    Tmp_604 := 259;
    goto L1;

  anon94_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L245;

  anon93_Then:
    status_19 := -1073741436;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1267} PoStartNextPowerIrp(0);
    Tmp_611 := strConst__li2bpl2;
    call {:si_unique_call 1268} vslice_dummy_var_324 := SerialDbgPrintEx(9, Tmp_611);
    call {:si_unique_call 1269} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1270} SerialIRPEpilogue(pDevExt_7);
    Tmp_604 := status_19;
    goto L1;

  anon91_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto L152;

  anon92_Then:
    goto L150;

  anon88_Then:
    goto L40;

  anon87_Then:
    goto L131;

  anon100_Then:
    status_19 := 0;
    goto L40;

  anon101_Then:
    goto L128;

  anon102_Then:
    goto L128;

  anon103_Then:
    goto L128;

  anon104_Then:
    goto L128;

  anon105_Then:
    goto L128;

  anon106_Then:
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto L130;

  anon86_Then:
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto L130;

  anon98_Then:
    Tmp_612 := strConst__li2bpl215;
    call {:si_unique_call 1271} vslice_dummy_var_321 := SerialDbgPrintEx(12, Tmp_612);
    goto L40;

  anon111_Then:
    Tmp_609 := strConst__li2bpl214;
    call {:si_unique_call 1272} vslice_dummy_var_320 := SerialDbgPrintEx(12, Tmp_609);
    goto L40;
}



procedure {:origName "SerialSendWaitWake"} SerialSendWaitWake(actual_PDevExt_4: int) returns (Tmp_621: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_621 == -1073741436 || Tmp_621 == 0 || Tmp_621 == -1073741584 || Tmp_621 == 259 || Tmp_621 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialSendWaitWake"} SerialSendWaitWake(actual_PDevExt_4: int) returns (Tmp_621: int)
{
  var {:scalar} powerState_2: int;
  var {:pointer} Tmp_622: int;
  var {:pointer} pIrp: int;
  var {:scalar} status_20: int;
  var {:pointer} PDevExt_4: int;
  var vslice_dummy_var_332: int;

  anon0:
    call {:si_unique_call 1273} powerState_2 := __HAVOC_malloc(8);
    PDevExt_4 := actual_PDevExt_4;
    call {:si_unique_call 1274} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_621 := -1073741436;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_621 := -1073741436;
    goto L1;

  anon12_Then:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 1275} Tmp_622 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} Tmp_622 != 0;
    assume Tmp_622 > 0;
    call {:si_unique_call 1276} vslice_dummy_var_332 := sdv_InterlockedIncrement(Tmp_622);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} Tmp_622 != 0;
    assume Tmp_622 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} powerState_2 != 0;
    assume powerState_2 > 0;
    call {:si_unique_call 1277} status_20 := PoRequestPowerIrp(0, 0, powerState_2, li2bplFunctionConstant328, 0, 0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status_20 == 259;
    status_20 := 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L27;

  L27:
    Tmp_621 := status_20;
    goto L1;

  anon14_Then:
    assume {:partition} status_20 != 259;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_20 < 0;
    call {:si_unique_call 1278} SerialIRPEpilogue(PDevExt_4);
    goto L27;

  anon15_Then:
    assume {:partition} 0 <= status_20;
    goto L27;

  anon13_Then:
    Tmp_621 := -1073741436;
    goto L1;
}



procedure {:origName "SerialSaveDeviceState"} SerialSaveDeviceState(actual_PDevExt_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialSaveDeviceState"} SerialSaveDeviceState(actual_PDevExt_5: int)
{
  var {:pointer} pDevState: int;
  var {:pointer} Tmp_623: int;
  var {:pointer} Tmp_625: int;
  var {:pointer} PDevExt_5: int;
  var boogieTmp: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;

  anon0:
    call {:si_unique_call 1279} vslice_dummy_var_333 := __HAVOC_malloc(4);
    PDevExt_5 := actual_PDevExt_5;
    call {:si_unique_call 1280} Tmp_623 := __HAVOC_malloc(124);
    call {:si_unique_call 1281} Tmp_625 := __HAVOC_malloc(128);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    pDevState := DeviceState__SERIAL_DEVICE_EXTENSION(PDevExt_5);
    call {:si_unique_call 1282} sdv_do_paged_code_check();
    Tmp_625 := strConst__li2bpl224;
    call {:si_unique_call 1283} vslice_dummy_var_334 := SerialDbgPrintEx(11, Tmp_625);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} pDevState != 0;
    assume pDevState > 0;
    call {:si_unique_call 1284} boogieTmp := corral_nondet();
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} pDevState != 0;
    assume pDevState > 0;
    call {:si_unique_call 1285} boogieTmp := corral_nondet();
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} pDevState != 0;
    assume pDevState > 0;
    call {:si_unique_call 1286} boogieTmp := corral_nondet();
    Tmp_623 := strConst__li2bpl225;
    call {:si_unique_call 1287} vslice_dummy_var_335 := SerialDbgPrintEx(11, Tmp_623);
    return;
}



procedure {:origName "SerialSetPowerD3"} SerialSetPowerD3(actual_PDevObj_7: int, actual_PIrp_4: int) returns (Tmp_630: int);
  modifies alloc, stack_location, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_630 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialSetPowerD3"} SerialSetPowerD3(actual_PDevObj_7: int, actual_PIrp_4: int) returns (Tmp_630: int)
{
  var {:pointer} SD3: int;
  var {:pointer} SD2: int;
  var {:scalar} charTime: int;
  var {:pointer} pDevExt_8: int;
  var {:scalar} sdv_2: int;
  var {:pointer} pIrpStack_4: int;
  var {:scalar} sdv_3: int;
  var {:pointer} Tmp_632: int;
  var {:pointer} PDevObj_7: int;
  var {:pointer} PIrp_4: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;

  anon0:
    call {:si_unique_call 1288} charTime := __HAVOC_malloc(20);
    call {:si_unique_call 1289} sdv_2 := __HAVOC_malloc(8);
    call {:si_unique_call 1290} sdv_3 := __HAVOC_malloc(20);
    PDevObj_7 := actual_PDevObj_7;
    PIrp_4 := actual_PIrp_4;
    call {:si_unique_call 1291} Tmp_632 := __HAVOC_malloc(84);
    assume {:nonnull} PDevObj_7 != 0;
    assume PDevObj_7 > 0;
    havoc pDevExt_8;
    call {:si_unique_call 1292} pIrpStack_4 := sdv_IoGetCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1293} sdv_do_paged_code_check();
    Tmp_632 := strConst__li2bpl226;
    call {:si_unique_call 1294} vslice_dummy_var_337 := SerialDbgPrintEx(6, Tmp_632);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 1295} vslice_dummy_var_336 := SerialSendWaitWake(pDevExt_8);
    goto L20;

  L20:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    havoc vslice_dummy_var_97;
    havoc vslice_dummy_var_98;
    call {:si_unique_call 1296} SD2 := PoSetPowerState(0, vslice_dummy_var_97, vslice_dummy_var_98);
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 1297} SetDeviceIsOpened(pDevExt_8, 0, 1);
    call {:si_unique_call 1298} SD3 := SerialGetCharTime(pDevExt_8);
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    assume {:nonnull} charTime != 0;
    assume charTime > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    call {:si_unique_call 1299} SerialDisableUART(pDevExt_8);
    call {:si_unique_call 1300} SerialDrainUART(pDevExt_8, charTime);
    call {:si_unique_call 1301} SerialSaveDeviceState(pDevExt_8);
    goto L47;

  L47:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1302} PoStartNextPowerIrp(0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume PIrp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1303} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L62;

  L62:
    call {:si_unique_call 1304} sdv_IoSkipCurrentIrpStackLocation(PIrp_4);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    havoc vslice_dummy_var_99;
    call {:si_unique_call 1305} Tmp_630 := SerialPoCallDriver(pDevExt_8, vslice_dummy_var_99, PIrp_4);
    return;

  anon9_Then:
    assume !(PIrp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L62;

  anon8_Then:
    call {:si_unique_call 1306} SetDeviceIsOpened(pDevExt_8, 0, 0);
    goto L47;

  anon7_Then:
    goto L20;
}



procedure {:origName "SerialRestoreDeviceState"} SerialRestoreDeviceState(actual_PDevExt_6: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialRestoreDeviceState"} SerialRestoreDeviceState(actual_PDevExt_6: int)
{
  var {:pointer} pDevState_1: int;
  var {:scalar} S: int;
  var {:dopa} {:scalar} divisor: int;
  var {:pointer} Tmp_641: int;
  var {:pointer} Tmp_645: int;
  var {:pointer} Tmp_649: int;
  var {:pointer} Tmp_655: int;
  var {:pointer} PDevExt_6: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;

  anon0:
    call {:si_unique_call 1307} S := __HAVOC_malloc(8);
    call {:si_unique_call 1308} divisor := __HAVOC_malloc(4);
    call {:si_unique_call 1309} vslice_dummy_var_338 := __HAVOC_malloc(4);
    PDevExt_6 := actual_PDevExt_6;
    call {:si_unique_call 1310} Tmp_645 := __HAVOC_malloc(52);
    call {:si_unique_call 1311} Tmp_649 := __HAVOC_malloc(128);
    call {:si_unique_call 1312} Tmp_655 := __HAVOC_malloc(72);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    pDevState_1 := DeviceState__SERIAL_DEVICE_EXTENSION(PDevExt_6);
    call {:si_unique_call 1313} sdv_do_paged_code_check();
    Tmp_649 := strConst__li2bpl227;
    call {:si_unique_call 1314} vslice_dummy_var_341 := SerialDbgPrintEx(11, Tmp_649);
    Tmp_645 := strConst__li2bpl228;
    call {:si_unique_call 1315} vslice_dummy_var_342 := SerialDbgPrintEx(11, Tmp_645);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc vslice_dummy_var_100;
    havoc vslice_dummy_var_101;
    call {:si_unique_call 1316} vslice_dummy_var_339 := SerialGetDivisorFromBaud(vslice_dummy_var_100, vslice_dummy_var_101, divisor);
    assume {:nonnull} S != 0;
    assume S > 0;
    assume {:nonnull} S != 0;
    assume S > 0;
    assume {:nonnull} divisor != 0;
    assume divisor > 0;
    call {:si_unique_call 1317} vslice_dummy_var_343 := SerialSetBaud(S);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1318} vslice_dummy_var_344 := corral_nondet();
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L48;

  L48:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L49;

  L49:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1319} vslice_dummy_var_345 := corral_nondet();
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1320} vslice_dummy_var_346 := corral_nondet();
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1321} vslice_dummy_var_347 := corral_nondet();
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Tmp_655 := strConst__li2bpl229;
    call {:si_unique_call 1322} vslice_dummy_var_348 := SerialDbgPrintEx(12, Tmp_655);
    call {:si_unique_call 1323} SetDeviceIsOpened(PDevExt_6, 1, 0);
    assume {:nonnull} pDevState_1 != 0;
    assume pDevState_1 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L1;

  anon13_Then:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 1324} vslice_dummy_var_340 := corral_nondet();
    goto L49;

  anon14_Then:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_641;
    assume {:nonnull} Tmp_641 != 0;
    assume Tmp_641 > 0;
    goto L49;

  anon12_Then:
    goto L49;

  anon11_Then:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L48;
}



procedure {:origName "_sdv_init10"} _sdv_init10();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init10"} _sdv_init10()
{
  var vslice_dummy_var_349: int;

  anon0:
    call {:si_unique_call 1325} vslice_dummy_var_349 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialSystemControlDispatch"} SerialSystemControlDispatch(actual_DeviceObject_4: int, actual_Irp_4: int) returns (Tmp_659: int);
  modifies alloc, stack_location, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} Tmp_659 == 259 || Tmp_659 == 0 || Tmp_659 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialSystemControlDispatch"} SerialSystemControlDispatch(actual_DeviceObject_4: int, actual_Irp_4: int) returns (Tmp_659: int)
{
  var {:dopa} {:scalar} disposition: int;
  var {:pointer} pDevExt_9: int;
  var {:scalar} status_22: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_4: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;

  anon0:
    call {:si_unique_call 1326} disposition := __HAVOC_malloc(4);
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_4 := actual_Irp_4;
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc pDevExt_9;
    call {:si_unique_call 1327} sdv_do_paged_code_check();
    call {:si_unique_call 1328} status_22 := WmiSystemControl(0, 0, Irp_4, disposition);
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L22;

  L22:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume Irp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1329} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L46;

  L46:
    call {:si_unique_call 1330} sdv_IoSkipCurrentIrpStackLocation(Irp_4);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume Irp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1331} SLIC_sdv_IoCallDriver_entry(0);
    goto L49;

  L49:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_102;
    call {:si_unique_call 1332} status_22 := sdv_IoCallDriver(vslice_dummy_var_102, Irp_4);
    goto L30;

  L30:
    Tmp_659 := status_22;
    call {:si_unique_call 1333} SLIC_SerialSystemControlDispatch_exit(strConst__li2bpl0, Tmp_659);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume !(Irp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L49;

  anon21_Then:
    assume !(Irp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L46;

  anon24_Then:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume Irp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1334} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L52;

  L52:
    call {:si_unique_call 1335} sdv_IoSkipCurrentIrpStackLocation(Irp_4);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume Irp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1336} SLIC_sdv_IoCallDriver_entry(0);
    goto L55;

  L55:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_103;
    call {:si_unique_call 1337} status_22 := sdv_IoCallDriver(vslice_dummy_var_103, Irp_4);
    goto L30;

  anon23_Then:
    assume !(Irp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L55;

  anon20_Then:
    assume !(Irp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L52;

  anon25_Then:
    goto L22;

  anon26_Then:
    call {:si_unique_call 1338} sdv_IoCompleteRequest(0, 0);
    goto L30;

  anon19_Then:
    goto L30;
}



procedure {:origName "SerialSetBaud"} SerialSetBaud(actual_Context: int) returns (Tmp_661: int);
  free ensures {:va_keep} Tmp_661 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialSetBaud"} SerialSetBaud(actual_Context: int) returns (Tmp_661: int)
{
  var {:scalar} Appropriate: int;
  var {:pointer} Extension_6: int;
  var {:pointer} Tmp_669: int;
  var {:scalar} LineControl: int;
  var {:pointer} Tmp_671: int;
  var {:pointer} Address: int;
  var {:scalar} Divisor: int;
  var {:pointer} Context: int;
  var vslice_dummy_var_350: int;

  anon0:
    Context := actual_Context;
    Tmp_669 := Context;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    havoc Extension_6;
    Tmp_671 := Context;
    assume {:nonnull} Tmp_671 != 0;
    assume Tmp_671 > 0;
    havoc Appropriate;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Address;
    Divisor := Appropriate;
    call {:si_unique_call 1339} LineControl := corral_nondet();
    call {:si_unique_call 1340} vslice_dummy_var_350 := corral_nondet();
    Tmp_661 := 0;
    return;
}



procedure {:origName "SerialIoControl"} SerialIoControl(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_674: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialIoControl"} SerialIoControl(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_674: int)
{
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_676: int;
  var {:dopa} {:scalar} AppropriateDivisor: int;
  var {:pointer} Tmp_677: int;
  var {:pointer} Tmp_678: int;
  var {:pointer} NewChars: int;
  var {:scalar} Tmp_679: int;
  var {:scalar} Tmp_680: int;
  var {:pointer} NewTimeouts: int;
  var {:scalar} Tmp_681: int;
  var {:scalar} Tmp_682: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:pointer} Tmp_685: int;
  var {:scalar} Mask: int;
  var {:pointer} escapeChar: int;
  var {:scalar} S_1: int;
  var {:pointer} Lc: int;
  var {:scalar} prologueStatus: int;
  var {:scalar} Status_3: int;
  var {:pointer} Tmp_686: int;
  var {:scalar} Tmp_687: int;
  var {:scalar} sdv_497: int;
  var {:scalar} S_2: int;
  var {:pointer} Br: int;
  var {:pointer} Rs: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_690: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} HandFlow: int;
  var {:scalar} OldIrql_2: int;
  var {:pointer} Tmp_692: int;
  var {:scalar} LData: int;
  var {:scalar} S_3: int;
  var {:pointer} Extension_7: int;
  var {:scalar} Tmp_693: int;
  var {:scalar} LParity: int;
  var {:scalar} sdv_510: int;
  var {:pointer} Tmp_695: int;
  var {:scalar} S_4: int;
  var {:scalar} Mask_1: int;
  var {:scalar} ModemControl: int;
  var {:pointer} Tmp_696: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:scalar} NewMask: int;
  var {:scalar} Tmp_699: int;
  var {:pointer} Xc: int;
  var {:pointer} Tmp_700: int;
  var {:scalar} Tmp_701: int;
  var {:scalar} LStop: int;
  var {:scalar} S_5: int;
  var {:scalar} S_6: int;
  var {:scalar} BaudRate: int;
  var {:scalar} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:scalar} S_7: int;
  var {:scalar} Tmp_704: int;
  var {:scalar} Tmp_705: int;
  var {:scalar} Tmp_706: int;
  var {:scalar} Tmp_707: int;
  var {:pointer} Tmp_708: int;
  var {:scalar} Tmp_709: int;
  var {:pointer} Tmp_710: int;
  var {:pointer} Lc_1: int;
  var {:scalar} S_8: int;
  var {:pointer} DeviceObject_5: int;
  var {:pointer} Irp_5: int;
  var boogieTmp: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;

  anon0:
    call {:si_unique_call 1341} AppropriateDivisor := __HAVOC_malloc(4);
    call {:si_unique_call 1342} S_1 := __HAVOC_malloc(8);
    call {:si_unique_call 1343} S_2 := __HAVOC_malloc(8);
    call {:si_unique_call 1344} S_3 := __HAVOC_malloc(8);
    call {:si_unique_call 1345} S_4 := __HAVOC_malloc(8);
    call {:si_unique_call 1346} S_5 := __HAVOC_malloc(8);
    call {:si_unique_call 1347} S_6 := __HAVOC_malloc(8);
    call {:si_unique_call 1348} S_7 := __HAVOC_malloc(8);
    call {:si_unique_call 1349} S_8 := __HAVOC_malloc(8);
    DeviceObject_5 := actual_DeviceObject_5;
    Irp_5 := actual_Irp_5;
    call {:si_unique_call 1350} Tmp_675 := __HAVOC_malloc(72);
    call {:si_unique_call 1351} Tmp_677 := __HAVOC_malloc(72);
    call {:si_unique_call 1352} Tmp_678 := __HAVOC_malloc(128);
    call {:si_unique_call 1353} Tmp_685 := __HAVOC_malloc(140);
    call {:si_unique_call 1354} Tmp_689 := __HAVOC_malloc(148);
    call {:si_unique_call 1355} Tmp_692 := __HAVOC_malloc(124);
    call {:si_unique_call 1356} Tmp_695 := __HAVOC_malloc(68);
    call {:si_unique_call 1357} Tmp_697 := __HAVOC_malloc(96);
    call {:si_unique_call 1358} Tmp_703 := __HAVOC_malloc(136);
    call {:si_unique_call 1359} Tmp_708 := __HAVOC_malloc(148);
    assume {:nonnull} DeviceObject_5 != 0;
    assume DeviceObject_5 > 0;
    havoc Extension_7;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1360} sdv_IoCompleteRequest(0, 0);
    Tmp_674 := -1073741808;
    goto L1;

  L1:
    call {:si_unique_call 1361} SLIC_SerialIoControl_exit(strConst__li2bpl0, Tmp_674);
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon406_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon405_Then:
    call {:si_unique_call 1362} prologueStatus := SerialIRPPrologue(Irp_5, Extension_7);
    goto anon289_Then, anon289_Else;

  anon289_Else:
    assume {:partition} prologueStatus != 0;
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume {:partition} prologueStatus != 259;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Tmp_675 := strConst__li2bpl2;
    call {:si_unique_call 1363} vslice_dummy_var_365 := SerialDbgPrintEx(9, Tmp_675);
    call {:si_unique_call 1364} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1365} SerialIRPEpilogue(Extension_7);
    goto L24;

  L24:
    Tmp_674 := prologueStatus;
    goto L1;

  anon290_Then:
    assume {:partition} prologueStatus == 259;
    goto L24;

  anon289_Then:
    assume {:partition} prologueStatus == 0;
    Tmp_697 := strConst__li2bpl1;
    call {:si_unique_call 1366} vslice_dummy_var_366 := SerialDbgPrintEx(9, Tmp_697);
    call {:si_unique_call 1367} sdv_510 := SerialCompleteIfError(DeviceObject_5, Irp_5);
    goto anon291_Then, anon291_Else;

  anon291_Else:
    assume {:partition} sdv_510 != 0;
    Tmp_674 := -1073741536;
    goto L1;

  anon291_Then:
    assume {:partition} sdv_510 == 0;
    call {:si_unique_call 1368} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Status_3 := 0;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    Status_3 := -1073741789;
    goto L95;

  L95:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Tmp_677 := strConst__li2bpl2;
    call {:si_unique_call 1369} vslice_dummy_var_367 := SerialDbgPrintEx(9, Tmp_677);
    call {:si_unique_call 1370} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1371} SerialIRPEpilogue(Extension_7);
    Tmp_674 := Status_3;
    goto L1;

  anon304_Then:
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc vslice_dummy_var_104;
    call {:si_unique_call 1372} Status_3 := SerialGotoPowerState(vslice_dummy_var_104, Extension_7, 1);
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume {:partition} Status_3 >= 0;
    goto L108;

  L108:
    call {:si_unique_call 1373} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1374} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    call {:si_unique_call 1375} vslice_dummy_var_354 := KeSynchronizeExecution(0, li2bplFunctionConstant418, 0);
    call {:si_unique_call 1376} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon305_Then:
    assume {:partition} 0 > Status_3;
    goto L95;

  anon432_Then:
    goto L108;

  anon360_Then:
    Status_3 := -1073741811;
    goto L95;

  anon361_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    Status_3 := -1073741789;
    goto L95;

  anon306_Then:
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc vslice_dummy_var_105;
    call {:si_unique_call 1377} Status_3 := SerialGotoPowerState(vslice_dummy_var_105, Extension_7, 1);
    goto anon307_Then, anon307_Else;

  anon307_Else:
    assume {:partition} Status_3 >= 0;
    goto L130;

  L130:
    call {:si_unique_call 1378} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1379} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    call {:si_unique_call 1380} vslice_dummy_var_355 := KeSynchronizeExecution(0, li2bplFunctionConstant416, 0);
    call {:si_unique_call 1381} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon307_Then:
    assume {:partition} 0 > Status_3;
    goto L95;

  anon431_Then:
    goto L130;

  anon362_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    Status_3 := -1073741789;
    goto L95;

  anon308_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    call {:si_unique_call 1382} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1383} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    call {:si_unique_call 1384} vslice_dummy_var_356 := KeSynchronizeExecution(0, li2bplFunctionConstant417, 0);
    call {:si_unique_call 1385} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon363_Then:
    call {:si_unique_call 1386} vslice_dummy_var_353 := KeSynchronizeExecution(0, li2bplFunctionConstant411, 0);
    goto L95;

  anon364_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    Status_3 := -1073741789;
    goto L95;

  anon303_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1387} vslice_dummy_var_378 := KeSynchronizeExecution(0, li2bplFunctionConstant410, 0);
    goto L95;

  anon365_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    Status_3 := -1073741789;
    goto L95;

  anon302_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Tmp_690;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    goto L95;

  anon366_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc escapeChar;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    Status_3 := -1073741789;
    goto L95;

  anon430_Then:
    call {:si_unique_call 1388} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1389} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon310_Then, anon310_Else;

  anon310_Else:
    goto L190;

  L190:
    Status_3 := -1073741811;
    call {:si_unique_call 1390} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon310_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    goto L190;

  anon312_Then:
    goto L185;

  L185:
    call {:si_unique_call 1391} vslice_dummy_var_357 := KeSynchronizeExecution(0, li2bplFunctionConstant420, 0);
    call {:si_unique_call 1392} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon311_Then:
    goto L190;

  anon309_Then:
    goto L185;

  anon367_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    Status_3 := -1073741789;
    goto L95;

  anon313_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 1393} sdv_497 := corral_nondet();
    ModemControl := sdv_497;
    ModemControl := BAND(ModemControl, BOR(1, 2));
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    goto L95;

  anon368_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    Status_3 := -1073741789;
    goto L95;

  anon301_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Tmp_683 := AssociatedIrp__IRP(Irp_5);
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    havoc vslice_dummy_var_106;
    call {:si_unique_call 1394} SerialGetProperties(Extension_7, vslice_dummy_var_106);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto L95;

  anon369_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Xc;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    Status_3 := -1073741789;
    goto L95;

  anon429_Then:
    assume {:nonnull} Xc != 0;
    assume Xc > 0;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    Status_3 := -1073741811;
    goto L95;

  anon314_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 1395} Tmp_674 := SerialStartOrQueue(Extension_7, Irp_5, WriteQueue__SERIAL_DEVICE_EXTENSION(Extension_7), CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(Extension_7), li2bplFunctionConstant212);
    goto L1;

  anon370_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    Status_3 := -1073741789;
    goto L95;

  anon315_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    call {:si_unique_call 1396} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1397} IoAcquireCancelSpinLock(Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    call {:si_unique_call 1398} vslice_dummy_var_358 := KeSynchronizeExecution(0, li2bplFunctionConstant419, 0);
    call {:si_unique_call 1399} IoReleaseCancelSpinLock(OldIrql_2);
    goto L95;

  anon371_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    Status_3 := -1073741789;
    goto L95;

  anon316_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    call {:si_unique_call 1400} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1401} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    call {:si_unique_call 1402} vslice_dummy_var_359 := KeSynchronizeExecution(0, li2bplFunctionConstant415, 0);
    call {:si_unique_call 1403} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon372_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc HandFlow;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    Status_3 := -1073741789;
    goto L95;

  anon427_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    Status_3 := -1073741811;
    goto L95;

  anon317_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    Status_3 := -1073741811;
    goto L95;

  anon318_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    havoc Tmp_680;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:partition} Tmp_680 == 3;
    Status_3 := -1073741811;
    goto L95;

  anon428_Then:
    assume {:partition} Tmp_680 != 3;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon319_Then, anon319_Else;

  anon319_Else:
    goto L282;

  L282:
    Status_3 := -1073741811;
    goto L95;

  anon319_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    goto L286;

  L286:
    Status_3 := -1073741811;
    goto L95;

  anon321_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    call {:si_unique_call 1404} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1405} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    Status_3 := -1073741811;
    call {:si_unique_call 1406} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon324_Then:
    goto L294;

  L294:
    call {:si_unique_call 1407} vslice_dummy_var_360 := KeSynchronizeExecution(0, li2bplFunctionConstant423, 0);
    call {:si_unique_call 1408} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon323_Then:
    goto L294;

  anon322_Then:
    goto L286;

  anon320_Then:
    goto L282;

  anon373_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    Status_3 := -1073741789;
    goto L95;

  anon300_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1409} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1410} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Tmp_696;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    call {:si_unique_call 1411} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon374_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc NewChars;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    Status_3 := -1073741789;
    goto L95;

  anon426_Then:
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    call {:si_unique_call 1412} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1413} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    goto L332;

  L332:
    Status_3 := -1073741811;
    call {:si_unique_call 1414} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon326_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    goto L332;

  anon327_Then:
    goto L329;

  L329:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    call {:si_unique_call 1415} vslice_dummy_var_377 := KeSynchronizeExecution(0, li2bplFunctionConstant412, 0);
    call {:si_unique_call 1416} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon325_Then:
    goto L329;

  anon375_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    Status_3 := -1073741789;
    goto L95;

  anon299_Then:
    call {:si_unique_call 1417} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1418} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Tmp_698;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1419} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon376_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Lc_1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    Status_3 := -1073741789;
    goto L95;

  anon418_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc vslice_dummy_var_107;
    call {:si_unique_call 1420} sdv_RtlZeroMemory(0, vslice_dummy_var_107);
    call {:si_unique_call 1421} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1422} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_687;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} Tmp_687 == 1;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L372;

  L372:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_693;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} Tmp_693 == 8;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  L378:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L383;

  L383:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1423} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon331_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L383;

  anon330_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L383;

  anon420_Then:
    assume {:partition} Tmp_693 != 8;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_679;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:partition} Tmp_679 == 24;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  anon421_Then:
    assume {:partition} Tmp_679 != 24;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_707;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:partition} Tmp_707 == 40;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  anon422_Then:
    assume {:partition} Tmp_707 != 40;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_702;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:partition} Tmp_702 == 56;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  anon423_Then:
    assume {:partition} Tmp_702 != 56;
    goto L378;

  anon329_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  anon419_Then:
    assume {:partition} Tmp_687 != 1;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_682;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} Tmp_682 == 2;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L372;

  anon424_Then:
    assume {:partition} Tmp_682 != 2;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_709;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} Tmp_709 == 3;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L372;

  anon425_Then:
    assume {:partition} Tmp_709 != 3;
    goto L372;

  anon328_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L372;

  anon377_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Br;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    Status_3 := -1073741789;
    goto L95;

  anon417_Then:
    call {:si_unique_call 1424} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1425} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Br != 0;
    assume Br > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 1426} sdv_KeReleaseSpinLock(0, OldIrql_2);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto L95;

  anon378_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    Status_3 := -1073741789;
    goto L95;

  anon332_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Tmp_700;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    havoc Mask;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:partition} Mask != 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume {:partition} BAND(Mask, -16) == 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 1427} Tmp_674 := SerialStartOrQueue(Extension_7, Irp_5, PurgeQueue__SERIAL_DEVICE_EXTENSION(Extension_7), CurrentPurgeIrp__SERIAL_DEVICE_EXTENSION(Extension_7), li2bplFunctionConstant424);
    goto L1;

  anon333_Then:
    assume {:partition} BAND(Mask, -16) != 0;
    goto L419;

  L419:
    Status_3 := -1073741811;
    goto L95;

  anon416_Then:
    assume {:partition} Mask == 0;
    goto L419;

  anon379_Then:
    Tmp_685 := strConst__li2bpl230;
    call {:si_unique_call 1428} vslice_dummy_var_374 := SerialDbgPrintEx(9, Tmp_685);
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    Tmp_678 := strConst__li2bpl232;
    call {:si_unique_call 1429} vslice_dummy_var_375 := SerialDbgPrintEx(6, Tmp_678);
    Status_3 := -1073741789;
    goto L95;

  anon334_Then:
    Tmp_708 := strConst__li2bpl231;
    call {:si_unique_call 1430} vslice_dummy_var_376 := SerialDbgPrintEx(9, Tmp_708);
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 1431} Tmp_674 := SerialStartOrQueue(Extension_7, Irp_5, MaskQueue__SERIAL_DEVICE_EXTENSION(Extension_7), CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(Extension_7), li2bplFunctionConstant195);
    goto L1;

  anon380_Then:
    Tmp_703 := strConst__li2bpl233;
    call {:si_unique_call 1432} vslice_dummy_var_370 := SerialDbgPrintEx(9, Tmp_703);
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    Tmp_692 := strConst__li2bpl234;
    call {:si_unique_call 1433} vslice_dummy_var_371 := SerialDbgPrintEx(6, Tmp_692);
    Status_3 := -1073741789;
    goto L95;

  anon335_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Tmp_691;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    havoc NewMask;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:partition} BAND(NewMask, -8192) != 0;
    Tmp_695 := strConst__li2bpl236;
    call {:si_unique_call 1434} vslice_dummy_var_372 := SerialDbgPrintEx(6, Tmp_695);
    Status_3 := -1073741811;
    goto L95;

  anon415_Then:
    assume {:partition} BAND(NewMask, -8192) == 0;
    Tmp_689 := strConst__li2bpl235;
    call {:si_unique_call 1435} vslice_dummy_var_373 := SerialDbgPrintEx(9, Tmp_689);
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 1436} Tmp_674 := SerialStartOrQueue(Extension_7, Irp_5, MaskQueue__SERIAL_DEVICE_EXTENSION(Extension_7), CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(Extension_7), li2bplFunctionConstant195);
    goto L1;

  anon381_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    Status_3 := -1073741789;
    goto L95;

  anon298_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Tmp_676;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_676 != 0;
    assume Tmp_676 > 0;
    goto L95;

  anon382_Then:
    call {:si_unique_call 1437} vslice_dummy_var_352 := KeSynchronizeExecution(0, li2bplFunctionConstant422, 0);
    goto L95;

  anon383_Then:
    call {:si_unique_call 1438} vslice_dummy_var_351 := KeSynchronizeExecution(0, li2bplFunctionConstant421, 0);
    goto L95;

  anon384_Then:
    goto L58;

  L58:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc vslice_dummy_var_108;
    call {:si_unique_call 1439} Status_3 := SerialGotoPowerState(vslice_dummy_var_108, Extension_7, 1);
    goto anon336_Then, anon336_Else;

  anon336_Else:
    assume {:partition} Status_3 >= 0;
    goto L469;

  L469:
    call {:si_unique_call 1440} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1441} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_699;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:partition} Tmp_699 == 128;
    goto L481;

  L481:
    Status_3 := -1073741811;
    goto L482;

  L482:
    call {:si_unique_call 1442} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon413_Then:
    assume {:partition} Tmp_699 != 128;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_705;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:partition} Tmp_705 != 192;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    Tmp_704 := li2bplFunctionConstant425;
    goto L490;

  L490:
    call {:si_unique_call 1443} vslice_dummy_var_361 := KeSynchronizeExecution(0, Tmp_704, 0);
    goto L482;

  anon337_Then:
    Tmp_704 := li2bplFunctionConstant250;
    goto L490;

  anon414_Then:
    assume {:partition} Tmp_705 == 192;
    goto L481;

  anon336_Then:
    assume {:partition} 0 > Status_3;
    goto L95;

  anon297_Then:
    goto L469;

  anon385_Then:
    goto L58;

  anon386_Then:
    goto L95;

  anon387_Then:
    goto L56;

  L56:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc vslice_dummy_var_109;
    call {:si_unique_call 1444} Status_3 := SerialGotoPowerState(vslice_dummy_var_109, Extension_7, 1);
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume {:partition} Status_3 >= 0;
    goto L493;

  L493:
    call {:si_unique_call 1445} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1446} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_701;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:partition} Tmp_701 == 2;
    Status_3 := -1073741811;
    goto L506;

  L506:
    call {:si_unique_call 1447} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon412_Then:
    assume {:partition} Tmp_701 != 2;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    Tmp_681 := li2bplFunctionConstant426;
    goto L512;

  L512:
    call {:si_unique_call 1448} vslice_dummy_var_362 := KeSynchronizeExecution(0, Tmp_681, 0);
    goto L506;

  anon339_Then:
    Tmp_681 := li2bplFunctionConstant251;
    goto L512;

  anon338_Then:
    assume {:partition} 0 > Status_3;
    goto L95;

  anon296_Then:
    goto L493;

  anon388_Then:
    goto L56;

  anon389_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon295_Then, anon295_Else;

  anon295_Else:
    Status_3 := -1073741789;
    goto L95;

  anon295_Then:
    call {:si_unique_call 1449} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1450} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Tmp_686;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1451} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon390_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc NewTimeouts;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    Status_3 := -1073741789;
    goto L95;

  anon411_Then:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    Status_3 := -1073741811;
    goto L95;

  anon342_Then:
    goto L531;

  L531:
    call {:si_unique_call 1452} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1453} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    call {:si_unique_call 1454} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon341_Then:
    goto L531;

  anon340_Then:
    goto L531;

  anon391_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    Status_3 := -1073741789;
    goto L95;

  anon294_Then:
    call {:si_unique_call 1455} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1456} IoAcquireCancelSpinLock(Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    Status_3 := -1073741811;
    call {:si_unique_call 1457} IoReleaseCancelSpinLock(OldIrql_2);
    goto L95;

  anon343_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    call {:si_unique_call 1458} IoReleaseCancelSpinLock(OldIrql_2);
    Status_3 := -1073741536;
    goto L95;

  anon344_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 1459} IoReleaseCancelSpinLock(OldIrql_2);
    call {:si_unique_call 1460} SerialStartImmediate(Extension_7);
    Tmp_674 := 259;
    goto L1;

  anon392_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc vslice_dummy_var_110;
    call {:si_unique_call 1461} Status_3 := SerialGotoPowerState(vslice_dummy_var_110, Extension_7, 1);
    goto anon345_Then, anon345_Else;

  anon345_Else:
    assume {:partition} Status_3 >= 0;
    goto L572;

  L572:
    call {:si_unique_call 1462} vslice_dummy_var_363 := KeSynchronizeExecution(0, li2bplFunctionConstant427, 0);
    goto L95;

  anon345_Then:
    assume {:partition} 0 > Status_3;
    goto L95;

  anon293_Then:
    goto L572;

  anon393_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc vslice_dummy_var_111;
    call {:si_unique_call 1463} Status_3 := SerialGotoPowerState(vslice_dummy_var_111, Extension_7, 1);
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} Status_3 >= 0;
    goto L582;

  L582:
    call {:si_unique_call 1464} vslice_dummy_var_364 := KeSynchronizeExecution(0, li2bplFunctionConstant428, 0);
    goto L95;

  anon346_Then:
    assume {:partition} 0 > Status_3;
    goto L95;

  anon292_Then:
    goto L582;

  anon394_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Lc;
    Mask_1 := 255;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    Status_3 := -1073741789;
    goto L95;

  anon409_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc vslice_dummy_var_112;
    call {:si_unique_call 1465} Status_3 := SerialGotoPowerState(vslice_dummy_var_112, Extension_7, 1);
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} Status_3 >= 0;
    goto L602;

  L602:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    LData := 3;
    goto L615;

  L615:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    LParity := 56;
    goto L625;

  L625:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    goto anon352_Then, anon352_Else;

  anon352_Else:
    assume {:partition} LData != 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    LStop := 4;
    goto L634;

  L634:
    call {:si_unique_call 1466} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1467} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_706;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 1468} vslice_dummy_var_369 := KeSynchronizeExecution(0, li2bplFunctionConstant414, 0);
    call {:si_unique_call 1469} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon352_Then:
    assume {:partition} LData == 0;
    Status_3 := -1073741811;
    goto L95;

  anon403_Then:
    Status_3 := -1073741811;
    goto L95;

  anon404_Then:
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} LData != 0;
    Status_3 := -1073741811;
    goto L95;

  anon351_Then:
    assume {:partition} LData == 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    LStop := 4;
    goto L634;

  anon350_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    LStop := 0;
    goto L634;

  anon399_Then:
    Status_3 := -1073741811;
    goto L95;

  anon400_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    LParity := 40;
    goto L625;

  anon401_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    LParity := 24;
    goto L625;

  anon402_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    LParity := 8;
    goto L625;

  anon410_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    LParity := 0;
    goto L625;

  anon396_Then:
    Status_3 := -1073741811;
    goto L95;

  anon397_Then:
    LData := 2;
    Mask_1 := 127;
    goto L615;

  anon398_Then:
    LData := 1;
    Mask_1 := 63;
    goto L615;

  anon348_Then:
    LData := 0;
    Mask_1 := 31;
    goto L615;

  anon349_Then:
    assume {:partition} 0 > Status_3;
    goto L95;

  anon347_Then:
    goto L602;

  anon395_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Rs;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    Status_3 := -1073741789;
    goto L95;

  anon408_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    Status_3 := 0;
    goto L95;

  anon353_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    havoc vslice_dummy_var_113;
    call {:si_unique_call 1470} boogieTmp := sdv_ExAllocatePoolWithQuotaTag(0, vslice_dummy_var_113, -666022077);
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 1471} Tmp_674 := SerialStartOrQueue(Extension_7, Irp_5, ReadQueue__SERIAL_DEVICE_EXTENSION(Extension_7), CurrentReadIrp__SERIAL_DEVICE_EXTENSION(Extension_7), li2bplFunctionConstant136);
    goto L1;

  anon354_Then:
    goto L95;

  anon407_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    Status_3 := -1073741789;
    goto L95;

  anon355_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc Tmp_688;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    havoc BaudRate;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc vslice_dummy_var_114;
    call {:si_unique_call 1472} Status_3 := SerialGetDivisorFromBaud(vslice_dummy_var_114, BaudRate, AppropriateDivisor);
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} Status_3 >= 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc vslice_dummy_var_115;
    call {:si_unique_call 1473} Status_3 := SerialGotoPowerState(vslice_dummy_var_115, Extension_7, 1);
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:partition} Status_3 >= 0;
    goto L705;

  L705:
    call {:si_unique_call 1474} Tmp_710 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    call {:si_unique_call 1475} sdv_KeAcquireSpinLock(0, Tmp_710);
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    havoc OldIrql_2;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:partition} Status_3 >= 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    assume {:nonnull} AppropriateDivisor != 0;
    assume AppropriateDivisor > 0;
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    call {:si_unique_call 1476} vslice_dummy_var_368 := KeSynchronizeExecution(0, li2bplFunctionConstant413, 0);
    goto L716;

  L716:
    call {:si_unique_call 1477} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L95;

  anon359_Then:
    assume {:partition} 0 > Status_3;
    goto L716;

  anon358_Then:
    assume {:partition} 0 > Status_3;
    goto L95;

  anon357_Then:
    goto L705;

  anon356_Then:
    assume {:partition} 0 > Status_3;
    goto L705;
}



procedure {:origName "SerialInternalIoControl"} SerialInternalIoControl(actual_PDevObj_8: int, actual_PIrp_5: int) returns (Tmp_711: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_711 == 0 || Tmp_711 == -1073741536 || Tmp_711 == 259 || Tmp_711 == -1073741738 || Tmp_711 == -1073741811 || Tmp_711 == -1073741789 || Tmp_711 == -1073741637;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialInternalIoControl"} SerialInternalIoControl(actual_PDevObj_8: int, actual_PIrp_5: int) returns (Tmp_711: int)
{
  var {:scalar} basic: int;
  var {:pointer} pBasic: int;
  var {:pointer} Tmp_714: int;
  var {:pointer} pDevExt_10: int;
  var {:scalar} prologueStatus_1: int;
  var {:scalar} S_9: int;
  var {:pointer} Tmp_717: int;
  var {:scalar} cap_1: int;
  var {:scalar} Tmp_718: int;
  var {:pointer} Tmp_719: int;
  var {:scalar} OldIrql_3: int;
  var {:scalar} Tmp_720: int;
  var {:pointer} Tmp_721: int;
  var {:pointer} pIrpStack_5: int;
  var {:scalar} sdv_534: int;
  var {:pointer} Tmp_723: int;
  var {:scalar} status_23: int;
  var {:pointer} Tmp_724: int;
  var {:pointer} PDevObj_8: int;
  var {:pointer} PIrp_5: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;

  anon0:
    call {:si_unique_call 1478} basic := __HAVOC_malloc(44);
    call {:si_unique_call 1479} S_9 := __HAVOC_malloc(8);
    PDevObj_8 := actual_PDevObj_8;
    PIrp_5 := actual_PIrp_5;
    call {:si_unique_call 1480} Tmp_714 := __HAVOC_malloc(28);
    call {:si_unique_call 1481} Tmp_717 := __HAVOC_malloc(28);
    call {:si_unique_call 1482} Tmp_719 := __HAVOC_malloc(72);
    call {:si_unique_call 1483} Tmp_721 := __HAVOC_malloc(72);
    call {:si_unique_call 1484} Tmp_723 := __HAVOC_malloc(96);
    assume {:nonnull} PDevObj_8 != 0;
    assume PDevObj_8 > 0;
    havoc pDevExt_10;
    call {:si_unique_call 1485} prologueStatus_1 := SerialIRPPrologue(PIrp_5, pDevExt_10);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} prologueStatus_1 != 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} prologueStatus_1 != 259;
    Tmp_721 := strConst__li2bpl2;
    call {:si_unique_call 1486} vslice_dummy_var_380 := SerialDbgPrintEx(9, Tmp_721);
    call {:si_unique_call 1487} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1488} SerialIRPEpilogue(pDevExt_10);
    goto L19;

  L19:
    Tmp_711 := prologueStatus_1;
    goto L1;

  L1:
    call {:si_unique_call 1489} SLIC_SerialInternalIoControl_exit(strConst__li2bpl0, Tmp_711);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:partition} prologueStatus_1 == 259;
    goto L19;

  anon35_Then:
    assume {:partition} prologueStatus_1 == 0;
    Tmp_723 := strConst__li2bpl1;
    call {:si_unique_call 1490} vslice_dummy_var_381 := SerialDbgPrintEx(9, Tmp_723);
    call {:si_unique_call 1491} sdv_534 := SerialCompleteIfError(PDevObj_8, PIrp_5);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_534 != 0;
    Tmp_711 := -1073741536;
    goto L1;

  anon37_Then:
    assume {:partition} sdv_534 == 0;
    call {:si_unique_call 1492} pIrpStack_5 := sdv_IoGetCurrentIrpStackLocation(PIrp_5);
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    status_23 := 0;
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L48;

  L48:
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    status_23 := -1073741789;
    goto L56;

  L56:
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    Tmp_719 := strConst__li2bpl2;
    call {:si_unique_call 1493} vslice_dummy_var_382 := SerialDbgPrintEx(9, Tmp_719);
    call {:si_unique_call 1494} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1495} SerialIRPEpilogue(pDevExt_10);
    Tmp_711 := status_23;
    goto L1;

  anon40_Then:
    call {:si_unique_call 1496} sdv_RtlZeroMemory(0, 44);
    assume {:nonnull} basic != 0;
    assume basic > 0;
    assume {:nonnull} basic != 0;
    assume basic > 0;
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    havoc pBasic;
    call {:si_unique_call 1497} sdv_RtlCopyMemory(0, 0, 20);
    call {:si_unique_call 1498} sdv_RtlCopyMemory(0, 0, 16);
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    pBasic := basic;
    goto L80;

  L80:
    call {:si_unique_call 1499} Tmp_724 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_724 != 0;
    assume Tmp_724 > 0;
    call {:si_unique_call 1500} sdv_KeAcquireSpinLock(0, Tmp_724);
    assume {:nonnull} Tmp_724 != 0;
    assume Tmp_724 > 0;
    havoc OldIrql_3;
    call {:si_unique_call 1501} sdv_RtlCopyMemory(0, 0, 20);
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    call {:si_unique_call 1502} vslice_dummy_var_383 := KeSynchronizeExecution(0, li2bplFunctionConstant423, 0);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1503} vslice_dummy_var_384 := corral_nondet();
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto L108;

  L108:
    call {:si_unique_call 1504} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L56;

  anon41_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto L108;

  anon38_Then:
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    status_23 := -1073741789;
    goto L56;

  anon39_Then:
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    havoc pBasic;
    goto L80;

  anon44_Then:
    status_23 := -1073741811;
    goto L56;

  anon45_Then:
    goto L48;

  anon46_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 1505} vslice_dummy_var_379 := IoCancelIrp(0);
    goto L121;

  L121:
    status_23 := 0;
    goto L56;

  anon51_Then:
    goto L121;

  anon48_Then:
    cap_1 := 2;
    goto L126;

  L126:
    call {:si_unique_call 1506} Tmp_714, Tmp_717, cap_1, Tmp_718, Tmp_720 := SerialInternalIoControl_loop_L126(Tmp_714, pDevExt_10, Tmp_717, cap_1, Tmp_718, Tmp_720);
    goto L126_last;

  L126_last:
    assume {:CounterLoop 5} {:Counter "cap_1"} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} 7 > cap_1;
    Tmp_718 := cap_1;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_714;
    assume {:nonnull} Tmp_714 != 0;
    assume Tmp_714 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    Tmp_720 := cap_1;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_717;
    assume {:nonnull} Tmp_717 != 0;
    assume Tmp_717 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L129;

  L129:
    cap_1 := cap_1 + 1;
    goto L129_dummy;

  L129_dummy:
    assume false;
    return;

  anon50_Then:
    goto L127;

  L127:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} 7 > cap_1;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    status_23 := 0;
    goto L56;

  anon43_Then:
    assume {:partition} cap_1 >= 7;
    status_23 := -1073741637;
    goto L56;

  anon49_Then:
    goto L129;

  anon42_Then:
    assume {:partition} cap_1 >= 7;
    goto L127;
}



procedure {:origName "_sdv_init15"} _sdv_init15();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init15"} _sdv_init15()
{
  var vslice_dummy_var_385: int;

  anon0:
    call {:si_unique_call 1507} vslice_dummy_var_385 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialGetProperties"} SerialGetProperties(actual_Extension_8: int, actual_Properties: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetProperties"} SerialGetProperties(actual_Extension_8: int, actual_Properties: int)
{
  var {:pointer} Extension_8: int;
  var {:pointer} Properties: int;
  var vslice_dummy_var_386: int;

  anon0:
    call {:si_unique_call 1508} vslice_dummy_var_386 := __HAVOC_malloc(4);
    Extension_8 := actual_Extension_8;
    Properties := actual_Properties;
    call {:si_unique_call 1509} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    return;
}



procedure {:origName "SerialWrite"} SerialWrite(actual_DeviceObject_6: int, actual_Irp_6: int) returns (Tmp_729: int);
  modifies alloc, yogi_error, markedPending, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialWrite"} SerialWrite(actual_DeviceObject_6: int, actual_Irp_6: int) returns (Tmp_729: int)
{
  var {:pointer} Tmp_730: int;
  var {:pointer} Tmp_731: int;
  var {:scalar} sdv_539: int;
  var {:pointer} sdv_541: int;
  var {:pointer} Tmp_732: int;
  var {:pointer} Extension_9: int;
  var {:pointer} Tmp_733: int;
  var {:pointer} Tmp_734: int;
  var {:pointer} Tmp_735: int;
  var {:scalar} status_24: int;
  var {:pointer} Tmp_736: int;
  var {:pointer} Tmp_737: int;
  var {:pointer} DeviceObject_6: int;
  var {:pointer} Irp_6: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;

  anon0:
    DeviceObject_6 := actual_DeviceObject_6;
    Irp_6 := actual_Irp_6;
    call {:si_unique_call 1510} Tmp_730 := __HAVOC_malloc(72);
    call {:si_unique_call 1511} Tmp_731 := __HAVOC_malloc(84);
    call {:si_unique_call 1512} Tmp_732 := __HAVOC_malloc(96);
    call {:si_unique_call 1513} Tmp_733 := __HAVOC_malloc(84);
    call {:si_unique_call 1514} Tmp_734 := __HAVOC_malloc(84);
    call {:si_unique_call 1515} Tmp_735 := __HAVOC_malloc(72);
    call {:si_unique_call 1516} Tmp_736 := __HAVOC_malloc(84);
    call {:si_unique_call 1517} Tmp_737 := __HAVOC_malloc(88);
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    havoc Extension_9;
    Tmp_737 := strConst__li2bpl241;
    call {:si_unique_call 1518} vslice_dummy_var_387 := SerialDbgPrintEx(2, Tmp_737);
    call {:si_unique_call 1519} status_24 := SerialIRPPrologue(Irp_6, Extension_9);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_24 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_24 != 259;
    Tmp_730 := strConst__li2bpl2;
    call {:si_unique_call 1520} vslice_dummy_var_388 := SerialDbgPrintEx(9, Tmp_730);
    call {:si_unique_call 1521} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1522} SerialIRPEpilogue(Extension_9);
    goto L18;

  L18:
    Tmp_734 := strConst__li2bpl237;
    call {:si_unique_call 1523} vslice_dummy_var_389 := SerialDbgPrintEx(2, Tmp_734);
    Tmp_729 := status_24;
    goto L1;

  L1:
    call {:si_unique_call 1524} SLIC_SerialWrite_exit(strConst__li2bpl0, Tmp_729);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} status_24 == 259;
    goto L18;

  anon11_Then:
    assume {:partition} status_24 == 0;
    Tmp_732 := strConst__li2bpl1;
    call {:si_unique_call 1525} vslice_dummy_var_390 := SerialDbgPrintEx(9, Tmp_732);
    call {:si_unique_call 1526} sdv_539 := SerialCompleteIfError(DeviceObject_6, Irp_6);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_539 != 0;
    Tmp_733 := strConst__li2bpl238;
    call {:si_unique_call 1527} vslice_dummy_var_391 := SerialDbgPrintEx(2, Tmp_733);
    Tmp_729 := -1073741536;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_539 == 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    call {:si_unique_call 1528} sdv_541 := sdv_IoGetCurrentIrpStackLocation(Irp_6);
    assume {:nonnull} sdv_541 != 0;
    assume sdv_541 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Extension_9 != 0;
    assume Extension_9 > 0;
    call {:si_unique_call 1529} status_24 := SerialStartOrQueue(Extension_9, Irp_6, WriteQueue__SERIAL_DEVICE_EXTENSION(Extension_9), CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(Extension_9), li2bplFunctionConstant212);
    Tmp_736 := strConst__li2bpl239;
    call {:si_unique_call 1530} vslice_dummy_var_392 := SerialDbgPrintEx(2, Tmp_736);
    Tmp_729 := status_24;
    goto L1;

  anon14_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Tmp_735 := strConst__li2bpl2;
    call {:si_unique_call 1531} vslice_dummy_var_393 := SerialDbgPrintEx(9, Tmp_735);
    call {:si_unique_call 1532} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1533} SerialIRPEpilogue(Extension_9);
    Tmp_731 := strConst__li2bpl240;
    call {:si_unique_call 1534} vslice_dummy_var_394 := SerialDbgPrintEx(2, Tmp_731);
    Tmp_729 := 0;
    goto L1;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_395: int;

  anon0:
    call {:si_unique_call 1535} vslice_dummy_var_395 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialCancelCurrentXoff"} SerialCancelCurrentXoff(actual_DeviceObject_7: int, actual_Irp_7: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialCancelCurrentXoff"} SerialCancelCurrentXoff(actual_DeviceObject_7: int, actual_Irp_7: int)
{
  var {:pointer} Extension_10: int;
  var {:pointer} DeviceObject_7: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_116: int;

  anon0:
    call {:si_unique_call 1536} vslice_dummy_var_396 := __HAVOC_malloc(4);
    DeviceObject_7 := actual_DeviceObject_7;
    Irp_7 := actual_Irp_7;
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    havoc Extension_10;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    havoc vslice_dummy_var_116;
    call {:si_unique_call 1537} SerialTryToCompleteCurrent#1(Extension_10, li2bplFunctionConstant213, vslice_dummy_var_116, -1073741536, CurrentXoffIrp__SERIAL_DEVICE_EXTENSION(Extension_10), 0, 0, XoffCountTimer__SERIAL_DEVICE_EXTENSION(Extension_10), 0, 0, 2);
    return;
}



procedure {:origName "SerialGetNextWrite"} SerialGetNextWrite(actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_NewIrp_2: int, actual_CompleteCurrent_1: int, actual_Extension_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetNextWrite"} SerialGetNextWrite(actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_NewIrp_2: int, actual_CompleteCurrent_1: int, actual_Extension_11: int)
{
  var {:pointer} s_p_e_c_i_a_l_5: int;
  var {:scalar} OldIrql_4: int;
  var {:pointer} sdv_549: int;
  var {:pointer} Tmp_743: int;
  var {:pointer} Irp_8: int;
  var {:pointer} Tmp_745: int;
  var {:scalar} OldIrql_5: int;
  var {:pointer} sdv_552: int;
  var {:scalar} OldIrql_6: int;
  var {:pointer} sdv_554: int;
  var {:scalar} CompleteCurrent_2: int;
  var {:scalar} s_p_e_c_i_a_l_6: int;
  var {:pointer} sdv_556: int;
  var {:pointer} sdv_557: int;
  var {:pointer} sdv_558: int;
  var {:pointer} s_p_e_c_i_a_l_7: int;
  var {:scalar} delta: int;
  var {:pointer} Tmp_746: int;
  var {:pointer} Xc_1: int;
  var {:scalar} s_p_e_c_i_a_l_8: int;
  var {:pointer} Tmp_747: int;
  var {:pointer} CurrentOpIrp_1: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} NewIrp_2: int;
  var {:scalar} CompleteCurrent_1: int;
  var {:pointer} Extension_11: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;

  anon0:
    call {:si_unique_call 1538} vslice_dummy_var_397 := __HAVOC_malloc(4);
    call {:si_unique_call 1539} delta := __HAVOC_malloc(20);
    CurrentOpIrp_1 := actual_CurrentOpIrp_1;
    QueueToProcess_1 := actual_QueueToProcess_1;
    NewIrp_2 := actual_NewIrp_2;
    CompleteCurrent_1 := actual_CompleteCurrent_1;
    Extension_11 := actual_Extension_11;
    call {:si_unique_call 1540} Tmp_743 := __HAVOC_malloc(84);
    call {:si_unique_call 1541} Tmp_746 := __HAVOC_malloc(104);
    CompleteCurrent_2 := CompleteCurrent_1;
    Tmp_746 := strConst__li2bpl243;
    call {:si_unique_call 1542} vslice_dummy_var_400 := SerialDbgPrintEx(2, Tmp_746);
    goto L8;

  L8:
    call {:si_unique_call 1543} s_p_e_c_i_a_l_5, sdv_549, Irp_8, Tmp_745, OldIrql_5, sdv_552, OldIrql_6, sdv_554, s_p_e_c_i_a_l_6, sdv_556, sdv_557, sdv_558, s_p_e_c_i_a_l_7, Xc_1, s_p_e_c_i_a_l_8, Tmp_747, CompleteCurrent_1, vslice_dummy_var_399, vslice_dummy_var_402, vslice_dummy_var_403 := SerialGetNextWrite_loop_L8(s_p_e_c_i_a_l_5, sdv_549, Irp_8, Tmp_745, OldIrql_5, sdv_552, OldIrql_6, sdv_554, CompleteCurrent_2, s_p_e_c_i_a_l_6, sdv_556, sdv_557, sdv_558, s_p_e_c_i_a_l_7, delta, Xc_1, s_p_e_c_i_a_l_8, Tmp_747, CurrentOpIrp_1, QueueToProcess_1, NewIrp_2, CompleteCurrent_1, Extension_11, vslice_dummy_var_399, vslice_dummy_var_402, vslice_dummy_var_403);
    goto L8_last;

  L8_last:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_120;
    call {:si_unique_call 1564} sdv_554 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_120);
    assume {:nonnull} sdv_554 != 0;
    assume sdv_554 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1544} Tmp_745 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    call {:si_unique_call 1545} IoAcquireCancelSpinLock(Tmp_745);
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    havoc OldIrql_6;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_117;
    call {:si_unique_call 1546} sdv_557 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_117);
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} sdv_557 != 0;
    assume sdv_557 > 0;
    call {:si_unique_call 1547} IoReleaseCancelSpinLock(OldIrql_6);
    goto L26;

  L26:
    call {:si_unique_call 1548} SerialGetNextIrp(CurrentOpIrp_1, QueueToProcess_1, NewIrp_2, CompleteCurrent_1, Extension_11);
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 1549} Tmp_745 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    call {:si_unique_call 1550} IoAcquireCancelSpinLock(Tmp_745);
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    havoc OldIrql_4;
    call {:si_unique_call 1551} vslice_dummy_var_398 := KeSynchronizeExecution(0, li2bplFunctionConstant217, 0);
    call {:si_unique_call 1552} IoReleaseCancelSpinLock(OldIrql_4);
    goto L39;

  L39:
    Tmp_743 := strConst__li2bpl242;
    call {:si_unique_call 1553} vslice_dummy_var_401 := SerialDbgPrintEx(2, Tmp_743);
    return;

  anon16_Then:
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    havoc vslice_dummy_var_118;
    call {:si_unique_call 1554} sdv_558 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_118);
    assume {:nonnull} sdv_558 != 0;
    assume sdv_558 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L39;

  anon17_Then:
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    havoc Tmp_747;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    CompleteCurrent_1 := CompleteCurrent_2;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_119;
    call {:si_unique_call 1555} sdv_556 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_119);
    assume {:nonnull} sdv_556 != 0;
    assume sdv_556 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1556} Tmp_745 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    call {:si_unique_call 1557} IoAcquireCancelSpinLock(Tmp_745);
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    havoc OldIrql_5;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Irp_8;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc Xc_1;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L64;

  L64:
    call {:si_unique_call 1558} IoReleaseCancelSpinLock(OldIrql_5);
    goto L26;

  anon21_Then:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L64;

  anon19_Then:
    call {:si_unique_call 1559} vslice_dummy_var_399 := sdv_IoSetCancelRoutine(Irp_8, li2bplFunctionConstant218);
    s_p_e_c_i_a_l_6 := 2;
    call {:si_unique_call 1560} sdv_552 := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} sdv_552 != 0;
    assume sdv_552 > 0;
    s_p_e_c_i_a_l_5 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_552)));
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    CompleteCurrent_1 := 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    call {:si_unique_call 1561} vslice_dummy_var_402 := KeSynchronizeExecution(0, li2bplFunctionConstant219, 0);
    assume {:nonnull} Xc_1 != 0;
    assume Xc_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Xc_1 != 0;
    assume Xc_1 > 0;
    assume {:nonnull} delta != 0;
    assume delta > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    call {:si_unique_call 1562} vslice_dummy_var_403 := SerialSetTimer(XoffCountTimer__SERIAL_DEVICE_EXTENSION(Extension_11), delta, XoffCountTimeoutDpc__SERIAL_DEVICE_EXTENSION(Extension_11), Extension_11);
    s_p_e_c_i_a_l_8 := 4;
    call {:si_unique_call 1563} sdv_549 := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} sdv_549 != 0;
    assume sdv_549 > 0;
    s_p_e_c_i_a_l_7 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_549)));
    assume {:nonnull} s_p_e_c_i_a_l_7 != 0;
    assume s_p_e_c_i_a_l_7 > 0;
    goto L64;

  anon20_Then:
    goto L64;

  anon18_Then:
    goto L26;
}



procedure {:origName "SerialCancelCurrentWrite"} SerialCancelCurrentWrite(actual_DeviceObject_8: int, actual_Irp_9: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialCancelCurrentWrite"} SerialCancelCurrentWrite(actual_DeviceObject_8: int, actual_Irp_9: int)
{
  var {:pointer} Extension_13: int;
  var {:pointer} DeviceObject_8: int;
  var {:pointer} Irp_9: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_121: int;

  anon0:
    call {:si_unique_call 1565} vslice_dummy_var_404 := __HAVOC_malloc(4);
    DeviceObject_8 := actual_DeviceObject_8;
    Irp_9 := actual_Irp_9;
    assume {:nonnull} DeviceObject_8 != 0;
    assume DeviceObject_8 > 0;
    havoc Extension_13;
    assume {:nonnull} Extension_13 != 0;
    assume Extension_13 > 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    havoc vslice_dummy_var_121;
    call {:si_unique_call 1566} SerialTryToCompleteCurrent#1(Extension_13, li2bplFunctionConstant221, vslice_dummy_var_121, -1073741536, CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(Extension_13), WriteQueue__SERIAL_DEVICE_EXTENSION(Extension_13), 0, WriteRequestTotalTimer__SERIAL_DEVICE_EXTENSION(Extension_13), li2bplFunctionConstant212, li2bplFunctionConstant216, 2);
    return;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_405: int;

  anon0:
    call {:si_unique_call 1567} vslice_dummy_var_405 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_DbgBreakPoint"} {:osmodel} sdv_DbgBreakPoint();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_DbgBreakPoint"} {:osmodel} sdv_DbgBreakPoint()
{
  var vslice_dummy_var_406: int;

  anon0:
    call {:si_unique_call 1568} vslice_dummy_var_406 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_407: int;

  anon0:
    call {:si_unique_call 1569} vslice_dummy_var_407 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address_1: int, actual_FieldOffset: int) returns (Tmp_764: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address_1: int, actual_FieldOffset: int) returns (Tmp_764: int)
{
  var {:pointer} record: int;
  var {:pointer} Address_1: int;

  anon0:
    Address_1 := actual_Address_1;
    call {:si_unique_call 1570} SLIC_sdv_containing_record_entry(strConst__li2bpl0);
    record := Address_1;
    Tmp_764 := record;
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int);
  modifies alloc, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} locked == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_408: int;

  anon0:
    call {:si_unique_call 1571} vslice_dummy_var_408 := __HAVOC_malloc(4);
    p := actual_p;
    call {:si_unique_call 1572} SLIC_sdv_KeAcquireSpinLock_entry(0);
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_768: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_768 == 0 || Tmp_768 == -1073741670 || Tmp_768 == -1073741824 || Tmp_768 == -1073741771 || Tmp_768 == -1073741823 || Tmp_768 == 26;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_768: int)
{
  var {:scalar} status_25: int;
  var {:pointer} p1: int;
  var {:pointer} p2: int;

  anon0:
    p1 := actual_p1;
    p2 := actual_p2;
    status_25 := 0;
    call {:si_unique_call 1573} sdv_stub_add_begin();
    call {:si_unique_call 1574} status_25 := SerialAddDevice(p1, p2);
    call {:si_unique_call 1575} sdv_stub_add_end();
    Tmp_768 := status_25;
    return;
}



procedure {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int)
{
  var vslice_dummy_var_409: int;

  anon0:
    call {:si_unique_call 1576} vslice_dummy_var_409 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_SD1: int, actual_Dpc: int) returns (Tmp_772: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_772 == 1 || Tmp_772 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_SD1: int, actual_Dpc: int) returns (Tmp_772: int)
{
  var {:scalar} DueTime_1: int;
  var {:pointer} SD1: int;

  anon0:
    call {:si_unique_call 1577} DueTime_1 := __HAVOC_malloc(20);
    SD1 := actual_SD1;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_772 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_772 := 0;
    goto L1;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_774: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_774: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_774 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_774 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_774 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_1: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_410: int;

  anon0:
    call {:si_unique_call 1578} vslice_dummy_var_410 := __HAVOC_malloc(4);
    Dpc_1 := actual_Dpc_1;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_1 != 0;
    assume Dpc_1 > 0;
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject_5: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_9: int) returns (Tmp_778: int);
  free ensures {:va_keep} Tmp_778 == -1073741824 || Tmp_778 == -1073741771 || Tmp_778 == -1073741670 || Tmp_778 == -1073741823 || Tmp_778 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject_5: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_9: int) returns (Tmp_778: int)
{
  var {:pointer} DeviceObject_9: int;

  anon0:
    DeviceObject_9 := actual_DeviceObject_9;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    Tmp_778 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    Tmp_778 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    Tmp_778 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    Tmp_778 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    goto L21;

  L21:
    Tmp_778 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    goto L21;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_411: int;

  anon0:
    call {:si_unique_call 1579} vslice_dummy_var_411 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_782: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_782: int)
{
  var {:scalar} r: int;
  var {:pointer} pirp_2: int;
  var {:scalar} CancelRoutine: int;

  anon0:
    pirp_2 := actual_pirp_2;
    CancelRoutine := actual_CancelRoutine;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    Tmp_782 := r;
    return;
}



procedure {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int)
{
  var vslice_dummy_var_412: int;

  anon0:
    call {:si_unique_call 1580} vslice_dummy_var_412 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int)
{
  var {:pointer} r_1: int;
  var {:pointer} pirp_3: int;
  var vslice_dummy_var_413: int;

  anon0:
    call {:si_unique_call 1581} vslice_dummy_var_413 := __HAVOC_malloc(4);
    pirp_3 := actual_pirp_3;
    assume {:nonnull} pirp_3 != 0;
    assume pirp_3 > 0;
    havoc r_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int)
{
  var vslice_dummy_var_414: int;

  anon0:
    call {:si_unique_call 1582} vslice_dummy_var_414 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "OneOfTwoBOOLEAN"} {:osmodel} OneOfTwoBOOLEAN() returns (Tmp_790: int);
  free ensures {:va_keep} Tmp_790 == 1 || Tmp_790 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "OneOfTwoBOOLEAN"} {:osmodel} OneOfTwoBOOLEAN() returns (Tmp_790: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_790 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_790 := 0;
    goto L1;
}



procedure {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_1: int, actual_Environment: int) returns (Tmp_792: int);
  free ensures {:va_keep} Tmp_792 == 0 || Tmp_792 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_1: int, actual_Environment: int) returns (Tmp_792: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_792 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_792 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int)
{
  var {:pointer} pirp_5: int;
  var vslice_dummy_var_415: int;

  anon0:
    call {:si_unique_call 1583} vslice_dummy_var_415 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;
}



procedure {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_2: int) returns (Tmp_796: int);
  free ensures {:va_keep} Tmp_796 == 1 || Tmp_796 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_2: int) returns (Tmp_796: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_796 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_796 := 0;
    goto L1;
}



procedure {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_798: int);
  free ensures {:va_keep} Tmp_798 == 0 || Tmp_798 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_798: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_798 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_798 := -1073741823;
    goto L1;
}



procedure {:origName "HalGetInterruptVector"} {:osmodel} HalGetInterruptVector(actual_InterfaceType: int, actual_BusNumber: int, actual_BusInterruptLevel: int, actual_BusInterruptVector: int, actual_Irql: int, actual_Affinity: int) returns (Tmp_800: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "HalGetInterruptVector"} {:osmodel} HalGetInterruptVector(actual_InterfaceType: int, actual_BusNumber: int, actual_BusInterruptLevel: int, actual_BusInterruptVector: int, actual_Irql: int, actual_Affinity: int) returns (Tmp_800: int)
{
  var {:scalar} sdv_583: int;

  anon0:
    Tmp_800 := sdv_583;
    return;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, SLAM_guard_S_0, stack_location, queued, locked, queuedWithoutMarking, yogi_error, markedPending;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} u: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;

  anon0:
    call {:si_unique_call 1584} u := __HAVOC_malloc(12);
    call {:si_unique_call 1585} vslice_dummy_var_416 := __HAVOC_malloc(4);
    SLAM_guard_S_0 := sdv_irp;
    assume SLAM_guard_S_0 != 0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    assume {:nonnull} KdDebuggerEnabled != 0;
    assume KdDebuggerEnabled > 0;
    assume {:nonnull} KdDebuggerNotPresent != 0;
    assume KdDebuggerNotPresent > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 1586} sdv_RunUnload(sdv_driver_object);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    goto L1;

  anon17_Then:
    call {:si_unique_call 1587} sdv_stub_driver_init();
    call {:si_unique_call 1588} vslice_dummy_var_418 := sdv_RunStartDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    call {:si_unique_call 1589} vslice_dummy_var_417 := sdv_RunAddDevice(sdv_driver_object, sdv_p_devobj_pdo);
    goto L1;

  anon19_Then:
    call {:si_unique_call 1590} vslice_dummy_var_420 := DriverEntry(sdv_driver_object, u);
    goto L1;

  anon15_Then:
    call {:si_unique_call 1591} sdv_stub_driver_init();
    call {:si_unique_call 1592} vslice_dummy_var_419 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_804: int);
  free ensures {:va_keep} Tmp_804 == 0 || Tmp_804 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_804: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_804 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_804 := -1073741823;
    goto L1;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_806: int);
  free ensures {:va_keep} Tmp_806 == 0 || Tmp_806 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_806: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_806 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_806 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_808: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_808: int)
{
  var {:pointer} sdv_592: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1593} sdv_592 := __HAVOC_malloc(1);
    Tmp_808 := sdv_592;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_808 := 0;
    goto L1;
}



procedure {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_810: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_810: int)
{
  var {:pointer} sdv_594: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1594} sdv_594 := __HAVOC_malloc(NumberOfBytes);
    Tmp_810 := sdv_594;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_810 := 0;
    goto L1;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_10: int, actual_Irp_10: int) returns (Tmp_812: int);
  free ensures {:va_keep} Tmp_812 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_10: int, actual_Irp_10: int) returns (Tmp_812: int)
{
  var {:scalar} status_27: int;
  var {:pointer} Irp_10: int;

  anon0:
    Irp_10 := actual_Irp_10;
    status_27 := 259;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L25;

  L25:
    Tmp_812 := status_27;
    return;

  anon33_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon32_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L19;

  anon40_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon39_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L44;

  anon41_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L28;

  anon31_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L36;
}



procedure {:origName "WmiSystemControl"} {:osmodel} WmiSystemControl(actual_WmiLibInfo: int, actual_DeviceObject_11: int, actual_pirp_6: int, actual_IrpDisposition: int) returns (Tmp_814: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_814 == 0 || Tmp_814 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "WmiSystemControl"} {:osmodel} WmiSystemControl(actual_WmiLibInfo: int, actual_DeviceObject_11: int, actual_pirp_6: int, actual_IrpDisposition: int) returns (Tmp_814: int)
{
  var {:scalar} s_1: int;
  var {:pointer} IrpDisposition: int;

  anon0:
    IrpDisposition := actual_IrpDisposition;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    s_1 := 0;
    call {:si_unique_call 1595} sdv_stub_WmiIrpForward(0);
    goto L24;

  L24:
    Tmp_814 := s_1;
    return;

  anon11_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    call {:si_unique_call 1596} sdv_stub_WmiIrpForward(0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    s_1 := 0;
    goto L24;

  anon10_Then:
    s_1 := -1073741808;
    goto L24;

  anon12_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    s_1 := 0;
    call {:si_unique_call 1597} sdv_stub_WmiIrpNotCompleted(0);
    goto L24;

  anon9_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    s_1 := 0;
    call {:si_unique_call 1598} sdv_stub_WmiIrpProcessed(0);
    goto L24;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_12: int, actual_Type: int, actual_structPtr888State: int) returns (SD1_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_12: int, actual_Type: int, actual_structPtr888State: int) returns (SD1_1: int)
{
  var {:scalar} State: int;
  var {:scalar} r_2: int;
  var {:scalar} Tmp_1: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 1599} State := __HAVOC_malloc(8);
    call {:si_unique_call 1600} r_2 := __HAVOC_malloc(8);
    call {:si_unique_call 1601} Tmp_1 := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    SD1_1 := Tmp_1;
    return;
}



procedure {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_1: int)
{
  var {:scalar} new: int;
  var {:pointer} p_1: int;
  var vslice_dummy_var_421: int;

  anon0:
    call {:si_unique_call 1602} vslice_dummy_var_421 := __HAVOC_malloc(4);
    new := actual_new;
    p_1 := actual_p_1;
    assume {:nonnull} p_1 != 0;
    assume p_1 > 0;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_819: int);
  free ensures {:va_keep} Tmp_819 == 1 || Tmp_819 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_819: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_819 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_819 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_422: int;

  anon0:
    call {:si_unique_call 1603} vslice_dummy_var_422 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_7: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_7: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_7: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_2: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_423: int;

  anon0:
    call {:si_unique_call 1604} vslice_dummy_var_423 := __HAVOC_malloc(4);
    pirp_7 := actual_pirp_7;
    CompletionRoutine := actual_CompletionRoutine;
    Context_2 := actual_Context_2;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 1605} irpSp := sdv_IoGetNextIrpStackLocation(pirp_7);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_424: int;

  anon0:
    call {:si_unique_call 1606} vslice_dummy_var_424 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin()
{
  var vslice_dummy_var_425: int;

  anon0:
    call {:si_unique_call 1607} vslice_dummy_var_425 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_829: int);
  free ensures {:va_keep} Tmp_829 == 1 || Tmp_829 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_829: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_829 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_829 := 0;
    goto L1;
}



procedure {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName: int) returns (Tmp_831: int);
  free ensures {:va_keep} Tmp_831 == 0 || Tmp_831 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName: int) returns (Tmp_831: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_831 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_831 := -1073741823;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_11: int)
{
  var vslice_dummy_var_426: int;

  anon0:
    call {:si_unique_call 1608} vslice_dummy_var_426 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_835: int);
  free ensures {:va_keep} Tmp_835 == 258 || Tmp_835 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_835: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_835 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_835 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_835 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_13: int)
{
  var vslice_dummy_var_427: int;

  anon0:
    call {:si_unique_call 1609} vslice_dummy_var_427 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_839: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_839: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_839 := OldState;
    return;
}



procedure {:origName "sdv_MmLockPagableCodeSection"} {:osmodel} sdv_MmLockPagableCodeSection(actual_AddressWithinSection: int) returns (Tmp_843: int);
  free ensures {:va_keep} Tmp_843 == actual_AddressWithinSection;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_MmLockPagableCodeSection"} {:osmodel} sdv_MmLockPagableCodeSection(actual_AddressWithinSection: int) returns (Tmp_843: int)
{
  var {:pointer} AddressWithinSection: int;

  anon0:
    AddressWithinSection := actual_AddressWithinSection;
    Tmp_843 := AddressWithinSection;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_8: int) returns (Tmp_845: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_8: int) returns (Tmp_845: int)
{
  var {:pointer} pirp_8: int;

  anon0:
    pirp_8 := actual_pirp_8;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    havoc Tmp_845;
    return;
}



procedure {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_2: int, actual_n: int, actual_a: int, actual_r_3: int, actual_s_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_2: int, actual_n: int, actual_a: int, actual_r_3: int, actual_s_2: int)
{
  var vslice_dummy_var_428: int;

  anon0:
    call {:si_unique_call 1610} vslice_dummy_var_428 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_429: int;

  anon0:
    call {:si_unique_call 1611} vslice_dummy_var_429 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    return;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_14: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_12: int) returns (Tmp_851: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_851 == -1073741584 || Tmp_851 == 259 || Tmp_851 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_14: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_12: int) returns (Tmp_851: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} structPtr888PowerState: int;

  anon0:
    call {:si_unique_call 1612} PowerState := __HAVOC_malloc(8);
    MinorFunction := actual_MinorFunction;
    structPtr888PowerState := actual_structPtr888PowerState;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_851 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_851 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_851 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_853: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error;
  free ensures {:va_keep} queued == 1 || queued == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} stack_location == 1 || stack_location == 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_853: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_855: int;
  var {:scalar} Tmp_856: int;
  var boogieTmp: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var SerialGlobals__Loc: int;
  var SerialPhysicalZero__Loc: int;
  var GUID_DEVINTERFACE_COMPORT__Loc: int;
  var driverDefaults__Loc: int;
  var SerialPhysicalZero_1__Loc: int;
  var SerialPortNameGuid__Loc: int;
  var SerailPortPerfGuid__Loc: int;
  var SerialPortPropertiesGuid__Loc: int;
  var SerialPortHWGuid__Loc: int;
  var SerialPortCommGuid__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_DpcContext__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var sdv_MmMapIoSpace_int__Loc: int;
  var SerialPhysicalZero_2__Loc: int;
  var SerialPhysicalZero_3__Loc: int;
  var SLAM_guard_S_0_init__Loc: int;
  var vslice_dummy_var_695: int;
  var vslice_dummy_var_696: int;
  var vslice_dummy_var_697: int;
  var vslice_dummy_var_698: int;
  var vslice_dummy_var_699: int;
  var vslice_dummy_var_700: int;
  var vslice_dummy_var_701: int;
  var vslice_dummy_var_702: int;
  var vslice_dummy_var_703: int;
  var vslice_dummy_var_704: int;
  var vslice_dummy_var_705: int;
  var vslice_dummy_var_706: int;
  var vslice_dummy_var_707: int;
  var vslice_dummy_var_708: int;
  var vslice_dummy_var_709: int;
  var vslice_dummy_var_710: int;
  var vslice_dummy_var_711: int;
  var vslice_dummy_var_712: int;
  var vslice_dummy_var_713: int;
  var vslice_dummy_var_714: int;
  var vslice_dummy_var_715: int;
  var vslice_dummy_var_716: int;
  var vslice_dummy_var_717: int;
  var vslice_dummy_var_718: int;
  var vslice_dummy_var_719: int;
  var vslice_dummy_var_720: int;
  var vslice_dummy_var_721: int;
  var vslice_dummy_var_722: int;
  var vslice_dummy_var_723: int;
  var vslice_dummy_var_724: int;
  var vslice_dummy_var_725: int;
  var vslice_dummy_var_726: int;
  var vslice_dummy_var_727: int;
  var vslice_dummy_var_728: int;
  var vslice_dummy_var_729: int;
  var vslice_dummy_var_730: int;
  var vslice_dummy_var_731: int;
  var vslice_dummy_var_732: int;
  var vslice_dummy_var_733: int;
  var vslice_dummy_var_734: int;
  var vslice_dummy_var_735: int;
  var vslice_dummy_var_736: int;
  var vslice_dummy_var_737: int;
  var vslice_dummy_var_738: int;
  var vslice_dummy_var_739: int;
  var vslice_dummy_var_740: int;
  var vslice_dummy_var_741: int;
  var vslice_dummy_var_742: int;
  var vslice_dummy_var_743: int;
  var vslice_dummy_var_744: int;
  var vslice_dummy_var_745: int;
  var vslice_dummy_var_746: int;
  var vslice_dummy_var_747: int;
  var vslice_dummy_var_748: int;
  var vslice_dummy_var_749: int;
  var vslice_dummy_var_750: int;
  var vslice_dummy_var_751: int;
  var vslice_dummy_var_752: int;
  var vslice_dummy_var_753: int;
  var vslice_dummy_var_754: int;
  var vslice_dummy_var_755: int;
  var vslice_dummy_var_756: int;
  var vslice_dummy_var_757: int;
  var vslice_dummy_var_758: int;
  var vslice_dummy_var_759: int;
  var vslice_dummy_var_760: int;
  var vslice_dummy_var_761: int;
  var vslice_dummy_var_762: int;
  var vslice_dummy_var_763: int;
  var vslice_dummy_var_764: int;
  var vslice_dummy_var_765: int;
  var vslice_dummy_var_766: int;
  var vslice_dummy_var_767: int;
  var vslice_dummy_var_768: int;
  var vslice_dummy_var_769: int;
  var vslice_dummy_var_770: int;
  var vslice_dummy_var_771: int;
  var vslice_dummy_var_772: int;
  var vslice_dummy_var_773: int;
  var vslice_dummy_var_774: int;
  var vslice_dummy_var_775: int;
  var vslice_dummy_var_776: int;
  var vslice_dummy_var_777: int;
  var vslice_dummy_var_778: int;
  var vslice_dummy_var_779: int;
  var vslice_dummy_var_780: int;
  var vslice_dummy_var_781: int;
  var vslice_dummy_var_782: int;
  var vslice_dummy_var_783: int;
  var vslice_dummy_var_784: int;
  var vslice_dummy_var_785: int;
  var vslice_dummy_var_786: int;
  var vslice_dummy_var_787: int;
  var vslice_dummy_var_788: int;
  var vslice_dummy_var_789: int;
  var vslice_dummy_var_790: int;
  var vslice_dummy_var_791: int;
  var vslice_dummy_var_792: int;
  var vslice_dummy_var_793: int;
  var vslice_dummy_var_794: int;
  var vslice_dummy_var_795: int;
  var vslice_dummy_var_796: int;
  var vslice_dummy_var_797: int;
  var vslice_dummy_var_798: int;
  var vslice_dummy_var_799: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 1613} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 1614} SerialGlobals__Loc := __HAVOC_malloc_or_null(28);
    assume SerialGlobals__Loc == SerialGlobals;
    assume SerialGlobals != 0;
    call {:si_unique_call 1615} SerialPhysicalZero__Loc := __HAVOC_malloc_or_null(20);
    assume SerialPhysicalZero__Loc == SerialPhysicalZero;
    assume SerialPhysicalZero != 0;
    call {:si_unique_call 1616} GUID_DEVINTERFACE_COMPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_COMPORT__Loc == GUID_DEVINTERFACE_COMPORT;
    assume GUID_DEVINTERFACE_COMPORT != 0;
    call {:si_unique_call 1617} driverDefaults__Loc := __HAVOC_malloc_or_null(88);
    assume driverDefaults__Loc == driverDefaults;
    assume driverDefaults != 0;
    call {:si_unique_call 1618} SerialPhysicalZero_1__Loc := __HAVOC_malloc_or_null(20);
    assume SerialPhysicalZero_1__Loc == SerialPhysicalZero_1;
    assume SerialPhysicalZero_1 != 0;
    call {:si_unique_call 1619} SerialPortNameGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortNameGuid__Loc == SerialPortNameGuid;
    assume SerialPortNameGuid != 0;
    call {:si_unique_call 1620} SerailPortPerfGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerailPortPerfGuid__Loc == SerailPortPerfGuid;
    assume SerailPortPerfGuid != 0;
    call {:si_unique_call 1621} SerialPortPropertiesGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortPropertiesGuid__Loc == SerialPortPropertiesGuid;
    assume SerialPortPropertiesGuid != 0;
    call {:si_unique_call 1622} SerialPortHWGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortHWGuid__Loc == SerialPortHWGuid;
    assume SerialPortHWGuid != 0;
    call {:si_unique_call 1623} SerialPortCommGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortCommGuid__Loc == SerialPortCommGuid;
    assume SerialPortCommGuid != 0;
    call {:si_unique_call 1624} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 1625} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 1626} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 1627} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 1628} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1629} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 1630} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 1631} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 1632} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 1633} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 1634} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 1635} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1636} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 1637} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 1638} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 1639} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 1640} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 1641} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 1642} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 1643} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 1644} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 1645} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 1646} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 1647} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 1648} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 1649} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 1650} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1651} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 1652} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 1653} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 1654} sdv_DpcContext__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_DpcContext__Loc == sdv_DpcContext;
    assume sdv_DpcContext != 0;
    call {:si_unique_call 1655} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 1656} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 1657} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 1658} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 1659} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 1660} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 1661} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 1662} sdv_MmMapIoSpace_int__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MmMapIoSpace_int__Loc == sdv_MmMapIoSpace_int;
    assume sdv_MmMapIoSpace_int != 0;
    call {:si_unique_call 1663} SerialPhysicalZero_2__Loc := __HAVOC_malloc_or_null(20);
    assume SerialPhysicalZero_2__Loc == SerialPhysicalZero_2;
    assume SerialPhysicalZero_2 != 0;
    call {:si_unique_call 1664} SerialPhysicalZero_3__Loc := __HAVOC_malloc_or_null(20);
    assume SerialPhysicalZero_3__Loc == SerialPhysicalZero_3;
    assume SerialPhysicalZero_3 != 0;
    call {:si_unique_call 1665} SLAM_guard_S_0_init__Loc := __HAVOC_malloc_or_null(248);
    assume SLAM_guard_S_0_init__Loc == SLAM_guard_S_0_init;
    assume SLAM_guard_S_0_init != 0;
    call {:si_unique_call 1666} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 1667} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 1668} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1669} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 1670} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerNotPresent == boogieTmp;
    call {:si_unique_call 1671} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerEnabled == boogieTmp;
    call {:si_unique_call 1672} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 1673} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1674} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 1675} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 1676} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 1677} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdComPortInUse == boogieTmp;
    call {:si_unique_call 1678} vslice_dummy_var_695 := __HAVOC_malloc(4);
    call {:si_unique_call 1679} vslice_dummy_var_696 := __HAVOC_malloc(4);
    call {:si_unique_call 1680} vslice_dummy_var_697 := __HAVOC_malloc(4);
    call {:si_unique_call 1681} vslice_dummy_var_698 := __HAVOC_malloc(4);
    call {:si_unique_call 1682} vslice_dummy_var_699 := __HAVOC_malloc(4);
    call {:si_unique_call 1683} vslice_dummy_var_700 := __HAVOC_malloc(4);
    call {:si_unique_call 1684} vslice_dummy_var_701 := __HAVOC_malloc(4);
    call {:si_unique_call 1685} vslice_dummy_var_702 := __HAVOC_malloc(4);
    call {:si_unique_call 1686} vslice_dummy_var_703 := __HAVOC_malloc(4);
    call {:si_unique_call 1687} vslice_dummy_var_704 := __HAVOC_malloc(4);
    call {:si_unique_call 1688} vslice_dummy_var_705 := __HAVOC_malloc(4);
    call {:si_unique_call 1689} vslice_dummy_var_706 := __HAVOC_malloc(4);
    call {:si_unique_call 1690} vslice_dummy_var_707 := __HAVOC_malloc(4);
    call {:si_unique_call 1691} vslice_dummy_var_708 := __HAVOC_malloc(4);
    call {:si_unique_call 1692} vslice_dummy_var_709 := __HAVOC_malloc(4);
    call {:si_unique_call 1693} vslice_dummy_var_710 := __HAVOC_malloc(4);
    call {:si_unique_call 1694} vslice_dummy_var_122 := __HAVOC_malloc(60);
    call {:si_unique_call 1695} vslice_dummy_var_711 := __HAVOC_malloc(4);
    call {:si_unique_call 1696} vslice_dummy_var_712 := __HAVOC_malloc(4);
    call {:si_unique_call 1697} vslice_dummy_var_713 := __HAVOC_malloc(4);
    call {:si_unique_call 1698} vslice_dummy_var_714 := __HAVOC_malloc(4);
    call {:si_unique_call 1699} vslice_dummy_var_715 := __HAVOC_malloc(4);
    call {:si_unique_call 1700} vslice_dummy_var_716 := __HAVOC_malloc(4);
    call {:si_unique_call 1701} vslice_dummy_var_717 := __HAVOC_malloc(4);
    call {:si_unique_call 1702} vslice_dummy_var_718 := __HAVOC_malloc(4);
    call {:si_unique_call 1703} vslice_dummy_var_719 := __HAVOC_malloc(4);
    call {:si_unique_call 1704} vslice_dummy_var_720 := __HAVOC_malloc(4);
    call {:si_unique_call 1705} vslice_dummy_var_721 := __HAVOC_malloc(4);
    call {:si_unique_call 1706} vslice_dummy_var_722 := __HAVOC_malloc(4);
    call {:si_unique_call 1707} vslice_dummy_var_723 := __HAVOC_malloc(4);
    call {:si_unique_call 1708} vslice_dummy_var_724 := __HAVOC_malloc(4);
    call {:si_unique_call 1709} vslice_dummy_var_725 := __HAVOC_malloc(4);
    call {:si_unique_call 1710} vslice_dummy_var_726 := __HAVOC_malloc(4);
    call {:si_unique_call 1711} vslice_dummy_var_727 := __HAVOC_malloc(4);
    call {:si_unique_call 1712} vslice_dummy_var_728 := __HAVOC_malloc(4);
    call {:si_unique_call 1713} vslice_dummy_var_729 := __HAVOC_malloc(4);
    call {:si_unique_call 1714} vslice_dummy_var_730 := __HAVOC_malloc(4);
    call {:si_unique_call 1715} vslice_dummy_var_731 := __HAVOC_malloc(4);
    call {:si_unique_call 1716} vslice_dummy_var_732 := __HAVOC_malloc(4);
    call {:si_unique_call 1717} vslice_dummy_var_733 := __HAVOC_malloc(4);
    call {:si_unique_call 1718} vslice_dummy_var_734 := __HAVOC_malloc(4);
    call {:si_unique_call 1719} vslice_dummy_var_735 := __HAVOC_malloc(4);
    call {:si_unique_call 1720} vslice_dummy_var_123 := __HAVOC_malloc(60);
    call {:si_unique_call 1721} vslice_dummy_var_736 := __HAVOC_malloc(4);
    call {:si_unique_call 1722} vslice_dummy_var_737 := __HAVOC_malloc(4);
    call {:si_unique_call 1723} vslice_dummy_var_738 := __HAVOC_malloc(4);
    call {:si_unique_call 1724} vslice_dummy_var_739 := __HAVOC_malloc(4);
    call {:si_unique_call 1725} vslice_dummy_var_740 := __HAVOC_malloc(4);
    call {:si_unique_call 1726} vslice_dummy_var_741 := __HAVOC_malloc(4);
    call {:si_unique_call 1727} vslice_dummy_var_742 := __HAVOC_malloc(4);
    call {:si_unique_call 1728} vslice_dummy_var_743 := __HAVOC_malloc(4);
    call {:si_unique_call 1729} vslice_dummy_var_744 := __HAVOC_malloc(4);
    call {:si_unique_call 1730} vslice_dummy_var_745 := __HAVOC_malloc(4);
    call {:si_unique_call 1731} vslice_dummy_var_746 := __HAVOC_malloc(4);
    call {:si_unique_call 1732} vslice_dummy_var_747 := __HAVOC_malloc(4);
    call {:si_unique_call 1733} vslice_dummy_var_748 := __HAVOC_malloc(4);
    call {:si_unique_call 1734} vslice_dummy_var_749 := __HAVOC_malloc(4);
    call {:si_unique_call 1735} vslice_dummy_var_750 := __HAVOC_malloc(4);
    call {:si_unique_call 1736} vslice_dummy_var_751 := __HAVOC_malloc(4);
    call {:si_unique_call 1737} vslice_dummy_var_752 := __HAVOC_malloc(4);
    call {:si_unique_call 1738} vslice_dummy_var_753 := __HAVOC_malloc(4);
    call {:si_unique_call 1739} vslice_dummy_var_754 := __HAVOC_malloc(4);
    call {:si_unique_call 1740} vslice_dummy_var_755 := __HAVOC_malloc(4);
    call {:si_unique_call 1741} vslice_dummy_var_756 := __HAVOC_malloc(4);
    call {:si_unique_call 1742} vslice_dummy_var_757 := __HAVOC_malloc(4);
    call {:si_unique_call 1743} vslice_dummy_var_758 := __HAVOC_malloc(4);
    call {:si_unique_call 1744} vslice_dummy_var_759 := __HAVOC_malloc(4);
    call {:si_unique_call 1745} vslice_dummy_var_760 := __HAVOC_malloc(4);
    call {:si_unique_call 1746} vslice_dummy_var_761 := __HAVOC_malloc(4);
    call {:si_unique_call 1747} vslice_dummy_var_762 := __HAVOC_malloc(4);
    call {:si_unique_call 1748} vslice_dummy_var_763 := __HAVOC_malloc(4);
    call {:si_unique_call 1749} vslice_dummy_var_764 := __HAVOC_malloc(4);
    call {:si_unique_call 1750} vslice_dummy_var_765 := __HAVOC_malloc(4);
    call {:si_unique_call 1751} vslice_dummy_var_766 := __HAVOC_malloc(4);
    call {:si_unique_call 1752} vslice_dummy_var_767 := __HAVOC_malloc(4);
    call {:si_unique_call 1753} vslice_dummy_var_768 := __HAVOC_malloc(4);
    call {:si_unique_call 1754} vslice_dummy_var_769 := __HAVOC_malloc(4);
    call {:si_unique_call 1755} vslice_dummy_var_770 := __HAVOC_malloc(4);
    call {:si_unique_call 1756} vslice_dummy_var_771 := __HAVOC_malloc(4);
    call {:si_unique_call 1757} vslice_dummy_var_772 := __HAVOC_malloc(4);
    call {:si_unique_call 1758} vslice_dummy_var_773 := __HAVOC_malloc(4);
    call {:si_unique_call 1759} vslice_dummy_var_774 := __HAVOC_malloc(4);
    call {:si_unique_call 1760} vslice_dummy_var_775 := __HAVOC_malloc(4);
    call {:si_unique_call 1761} vslice_dummy_var_776 := __HAVOC_malloc(4);
    call {:si_unique_call 1762} vslice_dummy_var_777 := __HAVOC_malloc(4);
    call {:si_unique_call 1763} vslice_dummy_var_778 := __HAVOC_malloc(4);
    call {:si_unique_call 1764} vslice_dummy_var_779 := __HAVOC_malloc(4);
    call {:si_unique_call 1765} vslice_dummy_var_780 := __HAVOC_malloc(4);
    call {:si_unique_call 1766} vslice_dummy_var_781 := __HAVOC_malloc(4);
    call {:si_unique_call 1767} vslice_dummy_var_782 := __HAVOC_malloc(4);
    call {:si_unique_call 1768} vslice_dummy_var_783 := __HAVOC_malloc(4);
    call {:si_unique_call 1769} vslice_dummy_var_784 := __HAVOC_malloc(4);
    call {:si_unique_call 1770} vslice_dummy_var_785 := __HAVOC_malloc(4);
    call {:si_unique_call 1771} vslice_dummy_var_786 := __HAVOC_malloc(4);
    call {:si_unique_call 1772} vslice_dummy_var_787 := __HAVOC_malloc(4);
    call {:si_unique_call 1773} vslice_dummy_var_788 := __HAVOC_malloc(4);
    call {:si_unique_call 1774} vslice_dummy_var_789 := __HAVOC_malloc(4);
    call {:si_unique_call 1775} vslice_dummy_var_790 := __HAVOC_malloc(4);
    call {:si_unique_call 1776} vslice_dummy_var_791 := __HAVOC_malloc(4);
    call {:si_unique_call 1777} vslice_dummy_var_792 := __HAVOC_malloc(4);
    call {:si_unique_call 1778} vslice_dummy_var_793 := __HAVOC_malloc(4);
    call {:si_unique_call 1779} vslice_dummy_var_794 := __HAVOC_malloc(4);
    call {:si_unique_call 1780} vslice_dummy_var_795 := __HAVOC_malloc(4);
    call {:si_unique_call 1781} vslice_dummy_var_796 := __HAVOC_malloc(4);
    call {:si_unique_call 1782} vslice_dummy_var_797 := __HAVOC_malloc(4);
    call {:si_unique_call 1783} vslice_dummy_var_798 := __HAVOC_malloc(4);
    call {:si_unique_call 1784} vslice_dummy_var_799 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 1785} corralExtraInit();
    call {:si_unique_call 1786} corralExplainErrorInit();
    call {:si_unique_call 1787} _sdv_init23();
    call {:si_unique_call 1788} _sdv_init18();
    call {:si_unique_call 1789} _sdv_init19();
    call {:si_unique_call 1790} _sdv_init17();
    call {:si_unique_call 1791} _sdv_init1();
    call {:si_unique_call 1792} _sdv_init4();
    call {:si_unique_call 1793} _sdv_init5();
    call {:si_unique_call 1794} _sdv_init3();
    call {:si_unique_call 1795} _sdv_init16();
    call {:si_unique_call 1796} _sdv_init14();
    call {:si_unique_call 1797} _sdv_init21();
    call {:si_unique_call 1798} _sdv_init6();
    call {:si_unique_call 1799} _sdv_init15();
    call {:si_unique_call 1800} _sdv_init10();
    call {:si_unique_call 1801} _sdv_init11();
    call {:si_unique_call 1802} _sdv_init9();
    call {:si_unique_call 1803} _sdv_init12();
    call {:si_unique_call 1804} _sdv_init13();
    call {:si_unique_call 1805} _sdv_init7();
    call {:si_unique_call 1806} _sdv_init8();
    call {:si_unique_call 1807} _sdv_init2();
    call {:si_unique_call 1808} _sdv_init20();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_856 := 0;
    goto L46;

  L46:
    assume Tmp_856 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_855 := 0;
    goto L50;

  L50:
    assume Tmp_855 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 1809} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L44;

  L44:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_855 := 1;
    goto L50;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_856 := 1;
    goto L46;
}



procedure {:origName "ZwSetValueKey"} {:osmodel} ZwSetValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_TitleIndex: int, actual_Type_1: int, actual_Data_1: int, actual_DataSize: int) returns (Tmp_857: int);
  free ensures {:va_keep} Tmp_857 == -1073741790 || Tmp_857 == -1073741816 || Tmp_857 == -1073741823 || Tmp_857 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ZwSetValueKey"} {:osmodel} ZwSetValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_TitleIndex: int, actual_Type_1: int, actual_Data_1: int, actual_DataSize: int) returns (Tmp_857: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_857 := -1073741790;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_857 := -1073741816;
    goto L1;

  anon9_Then:
    Tmp_857 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_857 := 0;
    goto L1;
}



procedure {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_859: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_859: int)
{
  var {:pointer} sdv_605: int;

  anon0:
    call {:si_unique_call 1810} sdv_605 := __HAVOC_malloc(1);
    Tmp_859 := sdv_605;
    return;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_9: int)
{
  var {:pointer} pirp_9: int;
  var vslice_dummy_var_430: int;

  anon0:
    call {:si_unique_call 1811} vslice_dummy_var_430 := __HAVOC_malloc(4);
    pirp_9 := actual_pirp_9;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_9 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_9 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_9 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_9 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_13: int) returns (Tmp_863: int);
  free ensures {:va_keep} Tmp_863 == 0 || Tmp_863 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_13: int) returns (Tmp_863: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_863 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_863 := 1;
    goto L1;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_865: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_865: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_865;
    return;
}



procedure {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end()
{
  var vslice_dummy_var_431: int;

  anon0:
    call {:si_unique_call 1812} vslice_dummy_var_431 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int)
{
  var {:pointer} DestinationString: int;
  var {:pointer} SourceString: int;
  var vslice_dummy_var_432: int;

  anon0:
    call {:si_unique_call 1813} vslice_dummy_var_432 := __HAVOC_malloc(4);
    DestinationString := actual_DestinationString;
    SourceString := actual_SourceString;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString != 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString == 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString == 0;
    goto L4;
}



procedure {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int)
{
  var vslice_dummy_var_433: int;

  anon0:
    call {:si_unique_call 1814} vslice_dummy_var_433 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_873: int);
  free ensures {:va_keep} Tmp_873 == 0 || Tmp_873 == actual_TargetDevice_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_873: int)
{
  var {:pointer} TargetDevice_1: int;

  anon0:
    TargetDevice_1 := actual_TargetDevice_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} TargetDevice_1 == sdv_p_devobj_pdo;
    Tmp_873 := TargetDevice_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} TargetDevice_1 != sdv_p_devobj_pdo;
    Tmp_873 := 0;
    goto L1;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int)
{
  var vslice_dummy_var_434: int;

  anon0:
    call {:si_unique_call 1815} vslice_dummy_var_434 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_10: int) returns (Tmp_877: int);
  modifies alloc, stack_location, locked, queuedWithoutMarking, queued, markedPending, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_10: int) returns (Tmp_877: int)
{
  var {:pointer} ps: int;
  var {:scalar} status_29: int;
  var {:pointer} po: int;
  var {:pointer} pirp_10: int;

  anon0:
    po := actual_po;
    pirp_10 := actual_pirp_10;
    status_29 := 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    havoc ps;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    call {:si_unique_call 1816} sdv_SetStatus(pirp_10);
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1817} sdv_stub_dispatch_begin();
    call {:si_unique_call 1818} status_29 := SerialPnpDispatch(po, pirp_10);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1819} sdv_stub_dispatch_end(status_29, 0);
    Tmp_877 := status_29;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_879: int);
  free ensures {:va_keep} Tmp_879 == 0 || Tmp_879 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_879: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_879 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_879 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_435: int;

  anon0:
    call {:si_unique_call 1820} vslice_dummy_var_435 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwEnumerateKey"} {:osmodel} ZwEnumerateKey(actual_KeyHandle_1: int, actual_Index: int, actual_KeyInformationClass: int, actual_KeyInformation: int, actual_Length_2: int, actual_ResultLength: int) returns (Tmp_883: int);
  free ensures {:va_keep} Tmp_883 == -1073741823 || Tmp_883 == 26 || Tmp_883 == -1073741811 || Tmp_883 == 0 || Tmp_883 == 5 || Tmp_883 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ZwEnumerateKey"} {:osmodel} ZwEnumerateKey(actual_KeyHandle_1: int, actual_Index: int, actual_KeyInformationClass: int, actual_KeyInformation: int, actual_Length_2: int, actual_ResultLength: int) returns (Tmp_883: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_609: int;
  var {:scalar} Length_2: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_2 := actual_Length_2;
    ResultLength := actual_ResultLength;
    L := sdv_609;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} 0 >= L;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} L != 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} L == -1;
    Tmp_883 := -1073741823;
    goto L1;

  L1:
    return;

  anon17_Then:
    assume {:partition} L != -1;
    Tmp_883 := 26;
    goto L1;

  anon14_Then:
    assume {:partition} L == 0;
    Tmp_883 := -1073741811;
    goto L1;

  anon18_Then:
    assume {:partition} L > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L == Length_2;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Length_2 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_883 := 0;
    goto L1;

  anon16_Then:
    assume {:partition} Length_2 == 0;
    goto L14;

  L14:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} L > Length_2;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_883 := 5;
    goto L1;

  anon15_Then:
    assume {:partition} Length_2 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_883 := -1073741789;
    goto L1;

  anon13_Then:
    assume {:partition} L != Length_2;
    goto L14;
}



procedure {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int)
{
  var vslice_dummy_var_436: int;

  anon0:
    call {:si_unique_call 1821} vslice_dummy_var_436 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int)
{
  var {:scalar} NewIrql: int;
  var vslice_dummy_var_437: int;

  anon0:
    call {:si_unique_call 1822} vslice_dummy_var_437 := __HAVOC_malloc(4);
    NewIrql := actual_NewIrql;
    return;
}



procedure {:origName "IoReportDetectedDevice"} {:osmodel} IoReportDetectedDevice(actual_DriverObject_6: int, actual_LegacyBusType: int, actual_BusNumber_1: int, actual_SlotNumber: int, actual_ResourceList: int, actual_ResourceRequirements: int, actual_ResourceAssigned: int, actual_DeviceObject_15: int) returns (Tmp_889: int);
  free ensures {:va_keep} Tmp_889 == 0 || Tmp_889 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoReportDetectedDevice"} {:osmodel} IoReportDetectedDevice(actual_DriverObject_6: int, actual_LegacyBusType: int, actual_BusNumber_1: int, actual_SlotNumber: int, actual_ResourceList: int, actual_ResourceRequirements: int, actual_ResourceAssigned: int, actual_DeviceObject_15: int) returns (Tmp_889: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_889 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_889 := -1073741823;
    goto L1;
}



procedure {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber_2: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_4: int) returns (Tmp_891: int);
  free ensures {:va_keep} Tmp_891 == 0 || Tmp_891 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber_2: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_4: int) returns (Tmp_891: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_891 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_891 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_11: int);
  modifies alloc, markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_11: int)
{
  var vslice_dummy_var_438: int;

  anon0:
    call {:si_unique_call 1823} vslice_dummy_var_438 := __HAVOC_malloc(4);
    call {:si_unique_call 1824} SLIC_sdv_IoMarkIrpPending_entry(0);
    return;
}



procedure {:origName "sdv_stub_WmiIrpNotCompleted"} {:osmodel} sdv_stub_WmiIrpNotCompleted(actual_pirp_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_WmiIrpNotCompleted"} {:osmodel} sdv_stub_WmiIrpNotCompleted(actual_pirp_12: int)
{
  var vslice_dummy_var_439: int;

  anon0:
    call {:si_unique_call 1825} vslice_dummy_var_439 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int)
{
  var vslice_dummy_var_440: int;

  anon0:
    call {:si_unique_call 1826} vslice_dummy_var_440 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_13: int) returns (Tmp_899: int);
  modifies alloc, stack_location, locked, queuedWithoutMarking, queued, yogi_error, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_13: int) returns (Tmp_899: int)
{
  var {:pointer} ps_1: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_901: int;
  var {:scalar} sdv_620: int;
  var {:scalar} status_30: int;
  var {:scalar} Tmp_902: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_13: int;

  anon0:
    po_1 := actual_po_1;
    pirp_13 := actual_pirp_13;
    status_30 := 0;
    minor := sdv_620;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    havoc ps_1;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    call {:si_unique_call 1827} sdv_SetStatus(pirp_13);
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1828} sdv_stub_dispatch_begin();
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L60;

  L60:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    Tmp_901 := 0;
    goto L220;

  L220:
    assume Tmp_901 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto L66;

  L66:
    call {:si_unique_call 1829} status_30 := SerialPnpDispatch(po_1, pirp_13);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    call {:si_unique_call 1830} sdv_stub_dispatch_end(status_30, 0);
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    Tmp_899 := status_30;
    goto LM2;

  LM2:
    return;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon72_Then:
    goto L66;

  anon73_Then:
    Tmp_901 := 1;
    goto L220;

  anon71_Then:
    goto L61;

  anon101_Then:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    Tmp_902 := 0;
    goto L226;

  L226:
    assume Tmp_902 != 0;
    goto L60;

  anon70_Then:
    Tmp_902 := 1;
    goto L226;

  anon74_Then:
    call {:si_unique_call 1831} status_30 := sdv_DoNothing();
    goto L72;

  anon75_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1832} status_30 := SerialSystemControlDispatch(po_1, pirp_13);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon100_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1833} sdv_SetPowerIrpMinorFunction(pirp_13);
    call {:si_unique_call 1834} status_30 := SerialPowerDispatch(po_1, pirp_13);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon99_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon77_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1835} status_30 := SerialCleanup(po_1, pirp_13);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon98_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    call {:si_unique_call 1836} status_30 := sdv_DoNothing();
    goto L72;

  anon79_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1837} status_30 := sdv_DoNothing();
    goto L72;

  anon80_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1838} status_30 := SerialInternalIoControl(po_1, pirp_13);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon97_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon81_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1839} status_30 := SerialIoControl(po_1, pirp_13);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon96_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon82_Then:
    call {:si_unique_call 1840} status_30 := sdv_DoNothing();
    goto L72;

  anon83_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1841} status_30 := SerialFlush(po_1, pirp_13);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon95_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon84_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1842} status_30 := SerialSetInformationFile(po_1, pirp_13);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon94_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon85_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1843} status_30 := SerialQueryInformationFile(po_1, pirp_13);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon93_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1844} status_30 := SerialWrite(po_1, pirp_13);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon92_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon87_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1845} status_30 := SerialRead(po_1, pirp_13);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon91_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon88_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1846} status_30 := SerialClose(po_1, pirp_13);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1847} status_30 := SerialCreateOpen(po_1, pirp_13);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject_1: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_903: int);
  free ensures {:va_keep} Tmp_903 == -1073741823 || Tmp_903 == -1073741808 || Tmp_903 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject_1: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_903: int)
{
  var {:scalar} Tmp_905: int;
  var {:pointer} SymbolicLinkName_2: int;

  anon0:
    SymbolicLinkName_2 := actual_SymbolicLinkName_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_903 := -1073741823;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_903 := -1073741808;
    goto L1;

  anon7_Then:
    assume {:nonnull} SymbolicLinkName_2 != 0;
    assume SymbolicLinkName_2 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_905 := 0;
    goto L22;

  L22:
    assume Tmp_905 != 0;
    Tmp_903 := 0;
    goto L1;

  anon8_Then:
    Tmp_905 := 1;
    goto L22;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new_2: int);
  modifies alloc, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new_2: int)
{
  var {:scalar} new_2: int;
  var vslice_dummy_var_441: int;

  anon0:
    call {:si_unique_call 1848} vslice_dummy_var_441 := __HAVOC_malloc(4);
    new_2 := actual_new_2;
    call {:si_unique_call 1849} SLIC_sdv_KeReleaseSpinLock_entry(0);
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_14: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_14: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_442: int;

  anon0:
    call {:si_unique_call 1850} vslice_dummy_var_442 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_3: int)
{
  var vslice_dummy_var_443: int;

  anon0:
    call {:si_unique_call 1851} vslice_dummy_var_443 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle_2: int, actual_ValueName_2: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_4: int, actual_ResultLength_1: int) returns (Tmp_912: int);
  free ensures {:va_keep} Tmp_912 == -1073741811 || Tmp_912 == -1073741823 || Tmp_912 == 0 || Tmp_912 == 5 || Tmp_912 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle_2: int, actual_ValueName_2: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_4: int, actual_ResultLength_1: int) returns (Tmp_912: int)
{
  var {:scalar} L_1: int;
  var {:scalar} sdv_632: int;
  var {:scalar} Length_4: int;
  var {:pointer} ResultLength_1: int;

  anon0:
    Length_4 := actual_Length_4;
    ResultLength_1 := actual_ResultLength_1;
    L_1 := sdv_632;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L_1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L_1 == 0;
    Tmp_912 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L_1 != 0;
    Tmp_912 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L_1 == Length_4;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_4 != 0;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Tmp_912 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_4 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L_1 > Length_4;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Tmp_912 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_4 >= L_1;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Tmp_912 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L_1 != Length_4;
    goto L13;
}



procedure {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_914: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_914: int)
{
  var {:scalar} PhysicalAddress: int;
  var {:pointer} structPtr888PhysicalAddress: int;

  anon0:
    call {:si_unique_call 1852} PhysicalAddress := __HAVOC_malloc(20);
    structPtr888PhysicalAddress := actual_structPtr888PhysicalAddress;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    Tmp_914 := sdv_MmMapIoSpace_int;
    return;
}



procedure {:origName "sdv_stub_WmiIrpForward"} {:osmodel} sdv_stub_WmiIrpForward(actual_pirp_15: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_WmiIrpForward"} {:osmodel} sdv_stub_WmiIrpForward(actual_pirp_15: int)
{
  var vslice_dummy_var_444: int;

  anon0:
    call {:si_unique_call 1853} vslice_dummy_var_444 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSynchronizeExecution"} {:osmodel} KeSynchronizeExecution(actual_Interrupt: int, actual_SynchronizeRoutine: int, actual_SynchronizeContext: int) returns (Tmp_918: int);
  free ensures {:va_keep} Tmp_918 == 1 || Tmp_918 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeSynchronizeExecution"} {:osmodel} KeSynchronizeExecution(actual_Interrupt: int, actual_SynchronizeRoutine: int, actual_SynchronizeContext: int) returns (Tmp_918: int)
{
  var {:scalar} b: int;

  anon0:
    call {:si_unique_call 1854} b := OneOfTwoBOOLEAN();
    Tmp_918 := b;
    return;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_445: int;

  anon0:
    call {:si_unique_call 1855} vslice_dummy_var_445 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_WmiIrpProcessed"} {:osmodel} sdv_stub_WmiIrpProcessed(actual_pirp_16: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_WmiIrpProcessed"} {:osmodel} sdv_stub_WmiIrpProcessed(actual_pirp_16: int)
{
  var vslice_dummy_var_446: int;

  anon0:
    call {:si_unique_call 1856} vslice_dummy_var_446 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_926: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_926: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_926;
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int)
{
  var vslice_dummy_var_447: int;

  anon0:
    call {:si_unique_call 1857} vslice_dummy_var_447 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead: int) returns (Tmp_930: int);
  free ensures {:va_keep} Tmp_930 == 1 || Tmp_930 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead: int) returns (Tmp_930: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_930 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_930 := 0;
    goto L1;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_16: int, actual_Irp_14: int) returns (Tmp_932: int);
  free ensures {:va_keep} Tmp_932 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_16: int, actual_Irp_14: int) returns (Tmp_932: int)
{
  var {:scalar} status_31: int;
  var {:pointer} Irp_14: int;

  anon0:
    Irp_14 := actual_Irp_14;
    status_31 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_14;
    goto L25;

  L25:
    Tmp_932 := status_31;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_14;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_14;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_14;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_14;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_14;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_14;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_14;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_14;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_14;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_14;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_14;
    goto L36;
}



procedure {:origName "IoDisconnectInterrupt"} {:osmodel} IoDisconnectInterrupt(actual_InterruptObject: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoDisconnectInterrupt"} {:osmodel} IoDisconnectInterrupt(actual_InterruptObject: int)
{
  var vslice_dummy_var_448: int;

  anon0:
    call {:si_unique_call 1858} vslice_dummy_var_448 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwOpenKey"} {:osmodel} ZwOpenKey(actual_KeyHandle_3: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_936: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_936 == 0 || Tmp_936 == -1073741727;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ZwOpenKey"} {:osmodel} ZwOpenKey(actual_KeyHandle_3: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_936: int)
{
  var {:pointer} sdv_637: int;
  var {:pointer} KeyHandle_3: int;

  anon0:
    KeyHandle_3 := actual_KeyHandle_3;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1859} sdv_637 := __HAVOC_malloc(4);
    assume {:nonnull} KeyHandle_3 != 0;
    assume KeyHandle_3 > 0;
    Tmp_936 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} KeyHandle_3 != 0;
    assume KeyHandle_3 > 0;
    Tmp_936 := -1073741727;
    goto L1;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_2: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_2: int, actual_State_1: int)
{
  var {:pointer} Event_1: int;
  var {:scalar} Type_2: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_449: int;

  anon0:
    call {:si_unique_call 1860} vslice_dummy_var_449 := __HAVOC_malloc(4);
    Event_1 := actual_Event_1;
    Type_2 := actual_Type_2;
    State_1 := actual_State_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_450: int;

  anon0:
    call {:si_unique_call 1861} vslice_dummy_var_450 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_17: int, actual_Irp_15: int) returns (Tmp_942: int);
  free ensures {:va_keep} Tmp_942 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_17: int, actual_Irp_15: int) returns (Tmp_942: int)
{
  var {:pointer} Irp_15: int;

  anon0:
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 1862} Tmp_942 := IofCallDriver(0, Irp_15);
    return;
}



procedure {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_4: int)
{
  var {:pointer} p_4: int;
  var vslice_dummy_var_451: int;

  anon0:
    call {:si_unique_call 1863} vslice_dummy_var_451 := __HAVOC_malloc(4);
    p_4 := actual_p_4;
    assume {:nonnull} p_4 != 0;
    assume p_4 > 0;
    return;
}



procedure {:origName "sdv_NT_ERROR"} {:osmodel} sdv_NT_ERROR(actual_Status_4: int) returns (Tmp_946: int);
  free ensures {:va_keep} Tmp_946 == 0 || Tmp_946 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_NT_ERROR"} {:osmodel} sdv_NT_ERROR(actual_Status_4: int) returns (Tmp_946: int)
{
  var {:scalar} Tmp_947: int;
  var {:scalar} choice_18: int;
  var {:scalar} Status_4: int;

  anon0:
    Status_4 := actual_Status_4;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Status_4 >= 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 536870911 >= Status_4;
    Tmp_946 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} Status_4 > 536870911;
    goto L9;

  L9:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} choice_18 != 0;
    Tmp_947 := 1;
    goto L14;

  L14:
    Tmp_946 := Tmp_947;
    goto L1;

  anon8_Then:
    assume {:partition} choice_18 == 0;
    Tmp_947 := 0;
    goto L14;

  anon7_Then:
    assume {:partition} 0 > Status_4;
    goto L9;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int)
{
  var {:pointer} SpinLock_2: int;
  var vslice_dummy_var_452: int;

  anon0:
    call {:si_unique_call 1864} vslice_dummy_var_452 := __HAVOC_malloc(4);
    SpinLock_2 := actual_SpinLock_2;
    assume {:nonnull} SpinLock_2 != 0;
    assume SpinLock_2 > 0;
    return;
}



procedure {:origName "_sdv_init21"} {:osmodel} _sdv_init21();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init21"} {:osmodel} _sdv_init21()
{
  var vslice_dummy_var_453: int;

  anon0:
    call {:si_unique_call 1865} vslice_dummy_var_453 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_Io_Removelock_release_wait_returned == 0;
    assume sdv_ke_dpc == li2bplFunctionConstant545;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant548;
    assume sdv_p_devobj_top == sdv_devobj_top;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_953: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_953: int)
{
  var {:pointer} sdv_641: int;
  var {:scalar} NumberOfBytes_3: int;

  anon0:
    NumberOfBytes_3 := actual_NumberOfBytes_3;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1866} sdv_641 := __HAVOC_malloc(NumberOfBytes_3);
    Tmp_953 := sdv_641;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_953 := 0;
    goto L1;
}



procedure {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_2: int, actual_Path_2: int, actual_ValueName_3: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_955: int);
  free ensures {:va_keep} Tmp_955 == 0 || Tmp_955 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_2: int, actual_Path_2: int, actual_ValueName_3: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_955: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_955 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_955 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int)
{
  var {:pointer} pdrivo: int;
  var vslice_dummy_var_454: int;

  anon0:
    call {:si_unique_call 1867} vslice_dummy_var_454 := __HAVOC_malloc(4);
    pdrivo := actual_pdrivo;
    call {:si_unique_call 1868} SerialUnload(pdrivo);
    return;
}



procedure {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_959: int);
  free ensures {:va_keep} Tmp_959 == -1073741772 || Tmp_959 == -1073741824 || Tmp_959 == -1073741789 || Tmp_959 == -1073741670 || Tmp_959 == -1073741808 || Tmp_959 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_959: int)
{

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_959 := -1073741772;
    goto L1;

  L1:
    return;

  anon12_Then:
    Tmp_959 := -1073741824;
    goto L1;

  anon13_Then:
    Tmp_959 := -1073741789;
    goto L1;

  anon14_Then:
    Tmp_959 := -1073741670;
    goto L1;

  anon15_Then:
    Tmp_959 := -1073741808;
    goto L1;

  anon11_Then:
    Tmp_959 := 0;
    goto L1;
}



procedure {:origName "IoConnectInterrupt"} {:osmodel} IoConnectInterrupt(actual_InterruptObject_1: int, actual_ServiceRoutine: int, actual_ServiceContext: int, actual_SpinLock_3: int, actual_Vector: int, actual_Irql_1: int, actual_SynchronizeIrql: int, actual_InterruptMode: int, actual_ShareVector: int, actual_ProcessorEnableMask: int, actual_FloatingSave: int) returns (Tmp_961: int);
  free ensures {:va_keep} Tmp_961 == -1073741811 || Tmp_961 == -1073741670 || Tmp_961 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoConnectInterrupt"} {:osmodel} IoConnectInterrupt(actual_InterruptObject_1: int, actual_ServiceRoutine: int, actual_ServiceContext: int, actual_SpinLock_3: int, actual_Vector: int, actual_Irql_1: int, actual_SynchronizeIrql: int, actual_InterruptMode: int, actual_ShareVector: int, actual_ProcessorEnableMask: int, actual_FloatingSave: int) returns (Tmp_961: int)
{
  var {:scalar} ServiceRoutine: int;
  var {:pointer} ServiceContext: int;

  anon0:
    ServiceRoutine := actual_ServiceRoutine;
    ServiceContext := actual_ServiceContext;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_961 := -1073741811;
    goto L1;

  L1:
    return;

  anon5_Then:
    Tmp_961 := -1073741670;
    goto L1;

  anon6_Then:
    Tmp_961 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_455: int;

  anon0:
    call {:si_unique_call 1869} vslice_dummy_var_455 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_456: int;

  anon0:
    call {:si_unique_call 1870} vslice_dummy_var_456 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_18: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_967: int);
  free ensures {:va_keep} Tmp_967 == -1073741811 || Tmp_967 == -1073741808 || Tmp_967 == -1073741823 || Tmp_967 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_18: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_967: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_967 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_967 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_967 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_967 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_969: int);
  free ensures {:va_keep} Tmp_969 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_969: int)
{

  anon0:
    Tmp_969 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_971: int);
  free ensures {:va_keep} Tmp_971 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_971: int)
{

  anon0:
    Tmp_971 := -1073741823;
    return;
}



procedure {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_19: int, actual_Action: int) returns (Tmp_973: int);
  free ensures {:va_keep} Tmp_973 == -1073741823 || Tmp_973 == -1073741811 || Tmp_973 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_19: int, actual_Action: int) returns (Tmp_973: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_973 := -1073741823;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_973 := -1073741811;
    goto L1;

  anon5_Then:
    Tmp_973 := 0;
    goto L1;
}



procedure {:origName "KeClearEvent"} {:osmodel} KeClearEvent(actual_Event_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeClearEvent"} {:osmodel} KeClearEvent(actual_Event_2: int)
{
  var {:pointer} Event_2: int;
  var vslice_dummy_var_457: int;

  anon0:
    call {:si_unique_call 1871} vslice_dummy_var_457 := __HAVOC_malloc(4);
    Event_2 := actual_Event_2;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    return;
}



procedure {:origName "SerialRemoveDevObj"} SerialRemoveDevObj(actual_PDevObj_9: int) returns (Tmp_977: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_977 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialRemoveDevObj"} SerialRemoveDevObj(actual_PDevObj_9: int) returns (Tmp_977: int)
{
  var {:pointer} Tmp_978: int;
  var {:pointer} Tmp_980: int;
  var {:pointer} pDevExt_11: int;
  var {:pointer} PDevObj_9: int;
  var vslice_dummy_var_458: int;
  var vslice_dummy_var_459: int;

  anon0:
    PDevObj_9 := actual_PDevObj_9;
    call {:si_unique_call 1872} Tmp_978 := __HAVOC_malloc(96);
    call {:si_unique_call 1873} Tmp_980 := __HAVOC_malloc(100);
    assume {:nonnull} PDevObj_9 != 0;
    assume PDevObj_9 > 0;
    havoc pDevExt_11;
    call {:si_unique_call 1874} sdv_do_paged_code_check();
    Tmp_980 := strConst__li2bpl246;
    call {:si_unique_call 1875} vslice_dummy_var_458 := SerialDbgPrintEx(2, Tmp_980);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L15;

  L15:
    call {:si_unique_call 1876} IoDetachDevice(0);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1877} sdv_ExFreePool(0);
    goto L19;

  L19:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1878} sdv_ExFreePool(0);
    goto L23;

  L23:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1879} sdv_ExFreePool(0);
    goto L27;

  L27:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1880} sdv_ExFreePool(0);
    goto L31;

  L31:
    call {:si_unique_call 1881} IoDeleteDevice(0);
    Tmp_978 := strConst__li2bpl247;
    call {:si_unique_call 1882} vslice_dummy_var_459 := SerialDbgPrintEx(2, Tmp_978);
    Tmp_977 := 0;
    return;

  anon15_Then:
    goto L31;

  anon14_Then:
    goto L27;

  anon13_Then:
    goto L23;

  anon12_Then:
    goto L19;

  anon11_Then:
    call {:si_unique_call 1883} SerialDisableInterfacesResources(PDevObj_9, 1);
    goto L15;
}



procedure {:origName "SerialUnload"} SerialUnload(actual_DriverObject_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialUnload"} SerialUnload(actual_DriverObject_7: int)
{
  var {:pointer} Tmp_986: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_461: int;
  var vslice_dummy_var_462: int;

  anon0:
    call {:si_unique_call 1884} vslice_dummy_var_460 := __HAVOC_malloc(4);
    call {:si_unique_call 1885} Tmp_986 := __HAVOC_malloc(68);
    call {:si_unique_call 1886} sdv_do_paged_code_check();
    call {:si_unique_call 1887} vslice_dummy_var_461 := sdv_MmLockPagableCodeSection(li2bplFunctionConstant369);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1888} sdv_ExFreePool(0);
    goto L13;

  L13:
    Tmp_986 := strConst__li2bpl248;
    call {:si_unique_call 1889} vslice_dummy_var_462 := SerialDbgPrintEx(6, Tmp_986);
    call {:si_unique_call 1890} MmUnlockPagableImageSection(0);
    return;

  anon3_Then:
    goto L13;
}



procedure {:origName "SerialKillPendingIrps"} SerialKillPendingIrps(actual_PDevObj_10: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialKillPendingIrps"} SerialKillPendingIrps(actual_PDevObj_10: int)
{
  var {:pointer} Tmp_988: int;
  var {:pointer} Tmp_989: int;
  var {:pointer} pDevExt_12: int;
  var {:pointer} Tmp_990: int;
  var {:scalar} cancelRoutine: int;
  var {:scalar} oldIrql_2: int;
  var {:pointer} Tmp_991: int;
  var {:pointer} Tmp_992: int;
  var {:pointer} Tmp_993: int;
  var {:pointer} Tmp_994: int;
  var {:pointer} PDevObj_10: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_466: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;

  anon0:
    call {:si_unique_call 1891} vslice_dummy_var_463 := __HAVOC_malloc(4);
    PDevObj_10 := actual_PDevObj_10;
    call {:si_unique_call 1892} Tmp_988 := __HAVOC_malloc(112);
    call {:si_unique_call 1893} Tmp_990 := __HAVOC_malloc(96);
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    havoc pDevExt_12;
    Tmp_988 := strConst__li2bpl250;
    call {:si_unique_call 1894} vslice_dummy_var_465 := SerialDbgPrintEx(2, Tmp_988);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1895} SerialKillAllReadsOrWrites(PDevObj_10, WriteQueue__SERIAL_DEVICE_EXTENSION(pDevExt_12), CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1896} SerialKillAllReadsOrWrites(PDevObj_10, ReadQueue__SERIAL_DEVICE_EXTENSION(pDevExt_12), CurrentReadIrp__SERIAL_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1897} SerialKillAllReadsOrWrites(PDevObj_10, PurgeQueue__SERIAL_DEVICE_EXTENSION(pDevExt_12), CurrentPurgeIrp__SERIAL_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1898} SerialKillAllReadsOrWrites(PDevObj_10, MaskQueue__SERIAL_DEVICE_EXTENSION(pDevExt_12), CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(pDevExt_12));
    call {:si_unique_call 1899} Tmp_992 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_992 != 0;
    assume Tmp_992 > 0;
    call {:si_unique_call 1900} IoAcquireCancelSpinLock(Tmp_992);
    assume {:nonnull} Tmp_992 != 0;
    assume Tmp_992 > 0;
    havoc oldIrql_2;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_994;
    assume {:nonnull} Tmp_994 != 0;
    assume Tmp_994 > 0;
    havoc cancelRoutine;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_989;
    assume {:nonnull} Tmp_989 != 0;
    assume Tmp_989 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} cancelRoutine != 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_991;
    assume {:nonnull} Tmp_991 != 0;
    assume Tmp_991 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_993;
    assume {:nonnull} Tmp_993 != 0;
    assume Tmp_993 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant214;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_124;
    call {:si_unique_call 1901} SerialCancelCurrentWrite(PDevObj_10, vslice_dummy_var_124);
    goto L40;

  L40:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1902} vslice_dummy_var_464 := IoCancelIrp(0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto L41;

  L41:
    call {:si_unique_call 1903} SerialKillAllStalled(PDevObj_10);
    Tmp_990 := strConst__li2bpl249;
    call {:si_unique_call 1904} vslice_dummy_var_466 := SerialDbgPrintEx(2, Tmp_990);
    return;

  anon18_Then:
    goto L41;

  anon22_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant218;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_125;
    call {:si_unique_call 1905} SerialCancelCurrentXoff(PDevObj_10, vslice_dummy_var_125);
    goto L40;

  anon21_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant351;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_126;
    call {:si_unique_call 1906} SerialCancelImmediate(PDevObj_10, vslice_dummy_var_126);
    goto L40;

  anon20_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant166;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_127;
    call {:si_unique_call 1907} SerialCancelQueued(PDevObj_10, vslice_dummy_var_127);
    goto L40;

  anon19_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant197;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_128;
    call {:si_unique_call 1908} SerialCancelWait(PDevObj_10, vslice_dummy_var_128);
    goto L40;

  anon24_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant168;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_129;
    call {:si_unique_call 1909} SerialFilterCancelQueued(PDevObj_10, vslice_dummy_var_129);
    goto L40;

  anon23_Then:
    assume {:partition} cancelRoutine == 0;
    call {:si_unique_call 1910} IoReleaseCancelSpinLock(oldIrql_2);
    goto L40;

  anon17_Then:
    call {:si_unique_call 1911} IoReleaseCancelSpinLock(oldIrql_2);
    goto L40;
}



procedure {:origName "SerialGetMappedAddress"} SerialGetMappedAddress(actual_BusType_1: int, actual_BusNumber_3: int, actual_structPtr888IoAddress: int, actual_NumberOfBytes_4: int, actual_AddressSpace: int, actual_MappedAddress: int) returns (Tmp_996: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetMappedAddress"} SerialGetMappedAddress(actual_BusType_1: int, actual_BusNumber_3: int, actual_structPtr888IoAddress: int, actual_NumberOfBytes_4: int, actual_AddressSpace: int, actual_MappedAddress: int) returns (Tmp_996: int)
{
  var {:scalar} IoAddress: int;
  var {:scalar} Tmp_997: int;
  var {:pointer} address: int;
  var {:scalar} Tmp_999: int;
  var {:pointer} structPtr888IoAddress: int;
  var {:scalar} NumberOfBytes_4: int;
  var {:scalar} AddressSpace: int;
  var {:pointer} MappedAddress: int;

  anon0:
    call {:si_unique_call 1912} IoAddress := __HAVOC_malloc(20);
    call {:si_unique_call 1913} Tmp_997 := __HAVOC_malloc(20);
    structPtr888IoAddress := actual_structPtr888IoAddress;
    NumberOfBytes_4 := actual_NumberOfBytes_4;
    AddressSpace := actual_AddressSpace;
    MappedAddress := actual_MappedAddress;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    assume {:nonnull} structPtr888IoAddress != 0;
    assume structPtr888IoAddress > 0;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    assume {:nonnull} structPtr888IoAddress != 0;
    assume structPtr888IoAddress > 0;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    assume {:nonnull} structPtr888IoAddress != 0;
    assume structPtr888IoAddress > 0;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    assume {:nonnull} structPtr888IoAddress != 0;
    assume structPtr888IoAddress > 0;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    assume {:nonnull} structPtr888IoAddress != 0;
    assume structPtr888IoAddress > 0;
    call {:si_unique_call 1914} sdv_do_paged_code_check();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} AddressSpace != 0;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    havoc address;
    assume {:nonnull} MappedAddress != 0;
    assume MappedAddress > 0;
    goto L12;

  L12:
    Tmp_996 := address;
    return;

  anon5_Then:
    assume {:partition} AddressSpace == 0;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} IoAddress != 0;
    assume IoAddress > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    call {:si_unique_call 1915} address := MmMapIoSpace(Tmp_997, NumberOfBytes_4, 0);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} address != 0;
    Tmp_999 := 1;
    goto L20;

  L20:
    assume {:nonnull} MappedAddress != 0;
    assume MappedAddress > 0;
    goto L12;

  anon6_Then:
    assume {:partition} address == 0;
    Tmp_999 := 0;
    goto L20;
}



procedure {:origName "SerialInitMultiPort"} SerialInitMultiPort(actual_PDevExt_7: int, actual_PConfigData: int, actual_PDevObj_11: int) returns (Tmp_1000: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1000 == -1073741670 || Tmp_1000 == 0 || Tmp_1000 == -1073741709 || Tmp_1000 == -1073741810;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialInitMultiPort"} SerialInitMultiPort(actual_PDevExt_7: int, actual_PConfigData: int, actual_PDevObj_11: int) returns (Tmp_1000: int)
{
  var {:pointer} Tmp_1002: int;
  var {:pointer} Tmp_1003: int;
  var {:pointer} Tmp_1004: int;
  var {:pointer} Tmp_1005: int;
  var {:pointer} Tmp_1006: int;
  var {:pointer} Tmp_1007: int;
  var {:pointer} pNewExt: int;
  var {:scalar} status_32: int;
  var {:pointer} pDispatch: int;
  var {:pointer} PDevExt_7: int;
  var {:pointer} PConfigData: int;
  var {:pointer} PDevObj_11: int;
  var boogieTmp: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;

  anon0:
    PDevExt_7 := actual_PDevExt_7;
    PConfigData := actual_PConfigData;
    PDevObj_11 := actual_PDevObj_11;
    call {:si_unique_call 1916} Tmp_1002 := __HAVOC_malloc(116);
    call {:si_unique_call 1917} Tmp_1003 := __HAVOC_malloc(116);
    call {:si_unique_call 1918} Tmp_1005 := __HAVOC_malloc(136);
    call {:si_unique_call 1919} Tmp_1006 := __HAVOC_malloc(116);
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    havoc pNewExt;
    call {:si_unique_call 1920} sdv_do_paged_code_check();
    Tmp_1005 := strConst__li2bpl251;
    call {:si_unique_call 1921} vslice_dummy_var_468 := SerialDbgPrintEx(2, Tmp_1005);
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    assume {:nonnull} pNewExt != 0;
    assume pNewExt > 0;
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    assume {:nonnull} pNewExt != 0;
    assume pNewExt > 0;
    call {:si_unique_call 1922} status_32 := SerialInitOneController(PDevObj_11, PConfigData);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} status_32 >= 0;
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    call {:si_unique_call 1923} boogieTmp := ExAllocatePoolWithTag(0, 76, -666022077);
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    havoc pDispatch;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} pDispatch != 0;
    call {:si_unique_call 1924} sdv_RtlZeroMemory(0, 76);
    call {:si_unique_call 1925} vslice_dummy_var_467 := KeSynchronizeExecution(0, li2bplFunctionConstant383, 0);
    goto L26;

  L26:
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    havoc Tmp_1007;
    assume {:nonnull} Tmp_1007 != 0;
    assume Tmp_1007 > 0;
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    havoc Tmp_1004;
    assume {:nonnull} Tmp_1004 != 0;
    assume Tmp_1004 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    call {:si_unique_call 1926} vslice_dummy_var_469 := KeSynchronizeExecution(0, li2bplFunctionConstant387, 0);
    Tmp_1002 := strConst__li2bpl253;
    call {:si_unique_call 1927} vslice_dummy_var_470 := SerialDbgPrintEx(2, Tmp_1002);
    Tmp_1000 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} pDispatch == 0;
    status_32 := -1073741670;
    Tmp_1003 := strConst__li2bpl254;
    call {:si_unique_call 1928} vslice_dummy_var_471 := SerialDbgPrintEx(2, Tmp_1003);
    Tmp_1000 := status_32;
    goto L1;

  anon8_Then:
    goto L26;

  anon7_Then:
    assume {:partition} 0 > status_32;
    Tmp_1006 := strConst__li2bpl252;
    call {:si_unique_call 1929} vslice_dummy_var_472 := SerialDbgPrintEx(2, Tmp_1006);
    Tmp_1000 := status_32;
    goto L1;
}



procedure {:origName "SerialReleaseResources"} SerialReleaseResources(actual_PDevExt_8: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialReleaseResources"} SerialReleaseResources(actual_PDevExt_8: int)
{
  var {:scalar} i_2: int;
  var {:scalar} sdv_666: int;
  var {:pointer} Tmp_1008: int;
  var {:scalar} sdv_667: int;
  var {:scalar} sdv_668: int;
  var {:scalar} sdv_670: int;
  var {:scalar} sdv_671: int;
  var {:scalar} sdv_672: int;
  var {:scalar} sdv_673: int;
  var {:pointer} Tmp_1009: int;
  var {:scalar} sdv_675: int;
  var {:scalar} sdv_678: int;
  var {:pointer} Tmp_1011: int;
  var {:scalar} sdv_686: int;
  var {:pointer} Tmp_1012: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} Tmp_1013: int;
  var {:pointer} Tmp_1014: int;
  var {:scalar} sdv_691: int;
  var {:scalar} sdv_693: int;
  var {:scalar} Tmp_1015: int;
  var {:scalar} sdv_697: int;
  var {:pointer} Tmp_1016: int;
  var {:pointer} PDevExt_8: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;

  anon0:
    call {:si_unique_call 1930} vslice_dummy_var_473 := __HAVOC_malloc(4);
    PDevExt_8 := actual_PDevExt_8;
    call {:si_unique_call 1931} Tmp_1009 := __HAVOC_malloc(100);
    call {:si_unique_call 1932} Tmp_1011 := __HAVOC_malloc(152);
    call {:si_unique_call 1933} Tmp_1012 := __HAVOC_malloc(116);
    call {:si_unique_call 1934} Tmp_1014 := __HAVOC_malloc(132);
    call {:si_unique_call 1935} Tmp_1016 := __HAVOC_malloc(64);
    Tmp_1012 := strConst__li2bpl255;
    call {:si_unique_call 1936} vslice_dummy_var_482 := SerialDbgPrintEx(2, Tmp_1012);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 1937} vslice_dummy_var_474 := KeSynchronizeExecution(0, li2bplFunctionConstant377, 0);
    call {:si_unique_call 1938} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1939} sdv_KeAcquireSpinLock(0, Tmp_1008);
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    havoc oldIrql_3;
    call {:si_unique_call 1940} vslice_dummy_var_475 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1941} sdv_KeReleaseSpinLock(0, oldIrql_3);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    call {:si_unique_call 1942} InitializeListHead(AllDevObjs__SERIAL_DEVICE_EXTENSION(PDevExt_8));
    goto L8;

  L8:
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    Tmp_1011 := strConst__li2bpl256;
    call {:si_unique_call 1943} vslice_dummy_var_483 := SerialDbgPrintEx(12, Tmp_1011);
    call {:si_unique_call 1944} IoDisconnectInterrupt(0);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    call {:si_unique_call 1945} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    goto L24;

  L24:
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    i_2 := 0;
    goto L42;

  L42:
    call {:si_unique_call 1946} i_2, Tmp_1013, Tmp_1015, Tmp_1016 := SerialReleaseResources_loop_L42(i_2, Tmp_1013, Tmp_1015, Tmp_1016, PDevExt_8);
    goto L42_last;

  L42_last:
    assume {:CounterLoop 16} {:Counter "i_2"} true;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} 16 > i_2;
    Tmp_1015 := i_2;
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc Tmp_1013;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    havoc Tmp_1016;
    assume {:nonnull} Tmp_1016 != 0;
    assume Tmp_1016 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    i_2 := i_2 + 1;
    goto anon66_Else_dummy;

  anon66_Else_dummy:
    assume false;
    return;

  anon66_Then:
    goto L43;

  L43:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} i_2 == 16;
    Tmp_1014 := strConst__li2bpl257;
    call {:si_unique_call 1947} vslice_dummy_var_484 := SerialDbgPrintEx(12, Tmp_1014);
    call {:si_unique_call 1948} sdv_ExFreePool(0);
    goto L37;

  L37:
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    call {:si_unique_call 1949} vslice_dummy_var_476 := SerialCancelTimer(ReadRequestTotalTimer__SERIAL_DEVICE_EXTENSION(PDevExt_8), PDevExt_8);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    call {:si_unique_call 1950} vslice_dummy_var_477 := SerialCancelTimer(ReadRequestIntervalTimer__SERIAL_DEVICE_EXTENSION(PDevExt_8), PDevExt_8);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    call {:si_unique_call 1951} vslice_dummy_var_478 := SerialCancelTimer(WriteRequestTotalTimer__SERIAL_DEVICE_EXTENSION(PDevExt_8), PDevExt_8);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    call {:si_unique_call 1952} vslice_dummy_var_479 := SerialCancelTimer(ImmediateTotalTimer__SERIAL_DEVICE_EXTENSION(PDevExt_8), PDevExt_8);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    call {:si_unique_call 1953} vslice_dummy_var_480 := SerialCancelTimer(XoffCountTimer__SERIAL_DEVICE_EXTENSION(PDevExt_8), PDevExt_8);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    call {:si_unique_call 1954} vslice_dummy_var_481 := SerialCancelTimer(LowerRTSTimer__SERIAL_DEVICE_EXTENSION(PDevExt_8), PDevExt_8);
    call {:si_unique_call 1955} sdv_667 := KeRemoveQueueDpc(0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_667 != 0;
    call {:si_unique_call 1956} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1957} vslice_dummy_var_485 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L72;

  L72:
    call {:si_unique_call 1958} sdv_672 := KeRemoveQueueDpc(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_672 != 0;
    call {:si_unique_call 1959} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1960} vslice_dummy_var_486 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L79;

  L79:
    call {:si_unique_call 1961} sdv_693 := KeRemoveQueueDpc(0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_693 != 0;
    call {:si_unique_call 1962} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1963} vslice_dummy_var_487 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L86;

  L86:
    call {:si_unique_call 1964} sdv_668 := KeRemoveQueueDpc(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_668 != 0;
    call {:si_unique_call 1965} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1966} vslice_dummy_var_488 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L93;

  L93:
    call {:si_unique_call 1967} sdv_686 := KeRemoveQueueDpc(0);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_686 != 0;
    call {:si_unique_call 1968} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1969} vslice_dummy_var_489 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L100;

  L100:
    call {:si_unique_call 1970} sdv_673 := KeRemoveQueueDpc(0);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_673 != 0;
    call {:si_unique_call 1971} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1972} vslice_dummy_var_490 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L107;

  L107:
    call {:si_unique_call 1973} sdv_675 := KeRemoveQueueDpc(0);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_675 != 0;
    call {:si_unique_call 1974} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1975} vslice_dummy_var_491 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L114;

  L114:
    call {:si_unique_call 1976} sdv_670 := KeRemoveQueueDpc(0);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_670 != 0;
    call {:si_unique_call 1977} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1978} vslice_dummy_var_492 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L121;

  L121:
    call {:si_unique_call 1979} sdv_697 := KeRemoveQueueDpc(0);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_697 != 0;
    call {:si_unique_call 1980} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1981} vslice_dummy_var_493 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L128;

  L128:
    call {:si_unique_call 1982} sdv_678 := KeRemoveQueueDpc(0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_678 != 0;
    call {:si_unique_call 1983} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1984} vslice_dummy_var_494 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L135;

  L135:
    call {:si_unique_call 1985} sdv_666 := KeRemoveQueueDpc(0);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_666 != 0;
    call {:si_unique_call 1986} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1987} vslice_dummy_var_495 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L142;

  L142:
    call {:si_unique_call 1988} sdv_691 := KeRemoveQueueDpc(0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_691 != 0;
    call {:si_unique_call 1989} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1990} vslice_dummy_var_496 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L149;

  L149:
    call {:si_unique_call 1991} sdv_671 := KeRemoveQueueDpc(0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_671 != 0;
    call {:si_unique_call 1992} Tmp_1008 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    call {:si_unique_call 1993} vslice_dummy_var_497 := sdv_InterlockedDecrement(Tmp_1008);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    goto L156;

  L156:
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc vslice_dummy_var_130;
    call {:si_unique_call 1994} MmUnmapIoSpace(0, vslice_dummy_var_130);
    goto L160;

  L160:
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc vslice_dummy_var_131;
    call {:si_unique_call 1995} MmUnmapIoSpace(0, vslice_dummy_var_131);
    goto L164;

  L164:
    Tmp_1009 := strConst__li2bpl258;
    call {:si_unique_call 1996} vslice_dummy_var_498 := SerialDbgPrintEx(2, Tmp_1009);
    return;

  anon64_Then:
    goto L164;

  anon63_Then:
    goto L160;

  anon62_Then:
    assume {:partition} sdv_671 == 0;
    goto L156;

  anon61_Then:
    assume {:partition} sdv_691 == 0;
    goto L149;

  anon60_Then:
    assume {:partition} sdv_666 == 0;
    goto L142;

  anon59_Then:
    assume {:partition} sdv_678 == 0;
    goto L135;

  anon58_Then:
    assume {:partition} sdv_697 == 0;
    goto L128;

  anon57_Then:
    assume {:partition} sdv_670 == 0;
    goto L121;

  anon56_Then:
    assume {:partition} sdv_675 == 0;
    goto L114;

  anon55_Then:
    assume {:partition} sdv_673 == 0;
    goto L107;

  anon54_Then:
    assume {:partition} sdv_686 == 0;
    goto L100;

  anon53_Then:
    assume {:partition} sdv_668 == 0;
    goto L93;

  anon52_Then:
    assume {:partition} sdv_693 == 0;
    goto L86;

  anon51_Then:
    assume {:partition} sdv_672 == 0;
    goto L79;

  anon50_Then:
    assume {:partition} sdv_667 == 0;
    goto L72;

  anon49_Then:
    assume {:partition} i_2 != 16;
    goto L37;

  anon48_Then:
    assume {:partition} i_2 >= 16;
    goto L43;

  anon47_Then:
    goto L37;

  anon65_Then:
    goto L24;

  anon46_Then:
    goto L24;

  anon45_Then:
    goto L8;
}



procedure {:origName "SerialFindInitController"} SerialFindInitController(actual_PDevObj_12: int, actual_PConfig_1: int) returns (Tmp_1017: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1017 == -1073741810 || Tmp_1017 == -1073741670 || Tmp_1017 == 0 || Tmp_1017 == -1073741709;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialFindInitController"} SerialFindInitController(actual_PDevObj_12: int, actual_PConfig_1: int) returns (Tmp_1017: int)
{
  var {:scalar} sdv_701: int;
  var {:pointer} Tmp_1018: int;
  var {:pointer} sdv_702: int;
  var {:scalar} sdv_706: int;
  var {:scalar} sdv_707: int;
  var {:pointer} sdv_708: int;
  var {:scalar} sdv_709: int;
  var {:scalar} Tmp_1019: int;
  var {:scalar} Tmp_1020: int;
  var {:scalar} sdv_712: int;
  var {:pointer} sdv_713: int;
  var {:pointer} sdv_714: int;
  var {:pointer} pCurDevObj: int;
  var {:scalar} Tmp_1021: int;
  var {:pointer} Tmp_1022: int;
  var {:scalar} Tmp_1023: int;
  var {:pointer} pDevExt_13: int;
  var {:pointer} Tmp_1024: int;
  var {:scalar} Tmp_1025: int;
  var {:pointer} Tmp_1026: int;
  var {:pointer} Tmp_1027: int;
  var {:scalar} Tmp_1028: int;
  var {:pointer} Tmp_1029: int;
  var {:scalar} sdv_716: int;
  var {:pointer} Tmp_1030: int;
  var {:scalar} Tmp_1031: int;
  var {:scalar} Tmp_1032: int;
  var {:pointer} Tmp_1033: int;
  var {:scalar} Tmp_1034: int;
  var {:scalar} sdv_719: int;
  var {:pointer} Tmp_1035: int;
  var {:scalar} sdv_721: int;
  var {:pointer} Tmp_1036: int;
  var {:pointer} sdv_723: int;
  var {:pointer} Tmp_1037: int;
  var {:scalar} Tmp_1038: int;
  var {:pointer} pExtension: int;
  var {:scalar} oldIrql_4: int;
  var {:scalar} sdv_726: int;
  var {:scalar} sdv_728: int;
  var {:pointer} sdv_729: int;
  var {:scalar} sdv_730: int;
  var {:pointer} Tmp_1039: int;
  var {:scalar} Tmp_1040: int;
  var {:scalar} sdv_733: int;
  var {:scalar} Tmp_1041: int;
  var {:scalar} sdv_735: int;
  var {:scalar} sdv_736: int;
  var {:scalar} status_33: int;
  var {:scalar} Tmp_1042: int;
  var {:scalar} Tmp_1043: int;
  var {:pointer} Tmp_1044: int;
  var {:scalar} serialPhysicalMax: int;
  var {:scalar} Tmp_1045: int;
  var {:scalar} Tmp_1046: int;
  var {:pointer} Tmp_1047: int;
  var {:pointer} Tmp_1048: int;
  var {:pointer} Tmp_1049: int;
  var {:scalar} Tmp_1050: int;
  var {:scalar} sdv_739: int;
  var {:scalar} Tmp_1051: int;
  var {:scalar} sdv_740: int;
  var {:pointer} Tmp_1052: int;
  var {:pointer} PDevObj_12: int;
  var {:pointer} PConfig_1: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_504: int;
  var vslice_dummy_var_505: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_510: int;
  var vslice_dummy_var_511: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;

  anon0:
    call {:si_unique_call 1997} Tmp_1021 := __HAVOC_malloc(20);
    call {:si_unique_call 1998} Tmp_1023 := __HAVOC_malloc(20);
    call {:si_unique_call 1999} Tmp_1031 := __HAVOC_malloc(20);
    call {:si_unique_call 2000} Tmp_1032 := __HAVOC_malloc(20);
    call {:si_unique_call 2001} Tmp_1041 := __HAVOC_malloc(20);
    call {:si_unique_call 2002} Tmp_1042 := __HAVOC_malloc(20);
    call {:si_unique_call 2003} serialPhysicalMax := __HAVOC_malloc(20);
    call {:si_unique_call 2004} Tmp_1045 := __HAVOC_malloc(20);
    PDevObj_12 := actual_PDevObj_12;
    PConfig_1 := actual_PConfig_1;
    call {:si_unique_call 2005} Tmp_1018 := __HAVOC_malloc(132);
    call {:si_unique_call 2006} Tmp_1024 := __HAVOC_malloc(440);
    call {:si_unique_call 2007} Tmp_1026 := __HAVOC_malloc(312);
    call {:si_unique_call 2008} Tmp_1029 := __HAVOC_malloc(744);
    call {:si_unique_call 2009} Tmp_1030 := __HAVOC_malloc(732);
    call {:si_unique_call 2010} Tmp_1033 := __HAVOC_malloc(116);
    call {:si_unique_call 2011} Tmp_1035 := __HAVOC_malloc(304);
    call {:si_unique_call 2012} Tmp_1036 := __HAVOC_malloc(408);
    call {:si_unique_call 2013} Tmp_1037 := __HAVOC_malloc(60);
    call {:si_unique_call 2014} Tmp_1039 := __HAVOC_malloc(436);
    call {:si_unique_call 2015} Tmp_1044 := __HAVOC_malloc(444);
    call {:si_unique_call 2016} Tmp_1047 := __HAVOC_malloc(180);
    call {:si_unique_call 2017} Tmp_1048 := __HAVOC_malloc(300);
    call {:si_unique_call 2018} Tmp_1049 := __HAVOC_malloc(140);
    call {:si_unique_call 2019} Tmp_1052 := __HAVOC_malloc(336);
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    havoc pDevExt_13;
    Tmp_1049 := strConst__li2bpl272;
    call {:si_unique_call 2020} vslice_dummy_var_500 := SerialDbgPrintEx(2, Tmp_1049);
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    Tmp_1030 := strConst__li2bpl273;
    call {:si_unique_call 2021} vslice_dummy_var_501 := SerialDbgPrintEx(4, Tmp_1030);
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc vslice_dummy_var_132;
    havoc vslice_dummy_var_133;
    call {:si_unique_call 2022} sdv_726 := SerialMemCompare(vslice_dummy_var_132, vslice_dummy_var_133, serialPhysicalMax, 0);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_726 != 2;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc Tmp_1043;
    assume {:nonnull} Tmp_1045 != 0;
    assume Tmp_1045 > 0;
    assume {:nonnull} Tmp_1045 != 0;
    assume Tmp_1045 > 0;
    assume {:nonnull} Tmp_1045 != 0;
    assume Tmp_1045 > 0;
    assume {:nonnull} Tmp_1045 != 0;
    assume Tmp_1045 > 0;
    assume {:nonnull} Tmp_1045 != 0;
    assume Tmp_1045 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc vslice_dummy_var_134;
    havoc vslice_dummy_var_135;
    havoc vslice_dummy_var_136;
    call {:si_unique_call 2023} SerialLogError(vslice_dummy_var_134, 0, vslice_dummy_var_135, Tmp_1045, 0, 0, 0, 43, 0, -1073348582, Tmp_1043, vslice_dummy_var_136, 0, 0);
    Tmp_1026 := strConst__li2bpl259;
    call {:si_unique_call 2024} vslice_dummy_var_502 := SerialDbgPrintEx(1, Tmp_1026);
    Tmp_1017 := -1073741810;
    goto L1;

  L1:
    return;

  anon77_Then:
    assume {:partition} sdv_726 == 2;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc vslice_dummy_var_137;
    havoc vslice_dummy_var_138;
    call {:si_unique_call 2025} sdv_728 := SerialMemCompare(vslice_dummy_var_137, vslice_dummy_var_138, serialPhysicalMax, 0);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} sdv_728 != 2;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc Tmp_1034;
    assume {:nonnull} Tmp_1021 != 0;
    assume Tmp_1021 > 0;
    assume {:nonnull} Tmp_1021 != 0;
    assume Tmp_1021 > 0;
    assume {:nonnull} Tmp_1021 != 0;
    assume Tmp_1021 > 0;
    assume {:nonnull} Tmp_1021 != 0;
    assume Tmp_1021 > 0;
    assume {:nonnull} Tmp_1021 != 0;
    assume Tmp_1021 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc vslice_dummy_var_139;
    havoc vslice_dummy_var_140;
    havoc vslice_dummy_var_141;
    call {:si_unique_call 2026} SerialLogError(vslice_dummy_var_139, 0, vslice_dummy_var_140, Tmp_1021, 0, 0, 0, 44, 0, -1073348581, Tmp_1034, vslice_dummy_var_141, 0, 0);
    Tmp_1035 := strConst__li2bpl260;
    call {:si_unique_call 2027} vslice_dummy_var_503 := SerialDbgPrintEx(1, Tmp_1035);
    Tmp_1017 := -1073741810;
    goto L1;

  anon78_Then:
    assume {:partition} sdv_728 == 2;
    assume {:nonnull} Tmp_1023 != 0;
    assume Tmp_1023 > 0;
    assume {:nonnull} Tmp_1023 != 0;
    assume Tmp_1023 > 0;
    assume {:nonnull} Tmp_1023 != 0;
    assume Tmp_1023 > 0;
    assume {:nonnull} Tmp_1023 != 0;
    assume Tmp_1023 > 0;
    assume {:nonnull} Tmp_1023 != 0;
    assume Tmp_1023 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc vslice_dummy_var_142;
    havoc vslice_dummy_var_143;
    call {:si_unique_call 2028} sdv_735 := SerialMemCompare(vslice_dummy_var_142, vslice_dummy_var_143, Tmp_1023, 0);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} sdv_735 != 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc vslice_dummy_var_144;
    havoc vslice_dummy_var_145;
    havoc vslice_dummy_var_146;
    havoc vslice_dummy_var_147;
    call {:si_unique_call 2029} sdv_721 := SerialMemCompare(vslice_dummy_var_144, vslice_dummy_var_145, vslice_dummy_var_146, vslice_dummy_var_147);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} sdv_721 != 2;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc Tmp_1050;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc vslice_dummy_var_148;
    havoc vslice_dummy_var_149;
    havoc vslice_dummy_var_150;
    havoc vslice_dummy_var_151;
    call {:si_unique_call 2030} SerialLogError(vslice_dummy_var_148, 0, vslice_dummy_var_149, vslice_dummy_var_150, 0, 0, 0, 45, 0, -1073348580, Tmp_1050, vslice_dummy_var_151, 0, 0);
    Tmp_1052 := strConst__li2bpl261;
    call {:si_unique_call 2031} vslice_dummy_var_504 := SerialDbgPrintEx(1, Tmp_1052);
    Tmp_1017 := -1073741810;
    goto L1;

  anon80_Then:
    assume {:partition} sdv_721 == 2;
    goto L53;

  L53:
    call {:si_unique_call 2032} Tmp_1022 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    call {:si_unique_call 2033} sdv_KeAcquireSpinLock(0, Tmp_1022);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 2034} sdv_739 := sdv_IsListEmpty(0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} sdv_739 != 0;
    pCurDevObj := 0;
    pExtension := 0;
    goto L75;

  L75:
    call {:si_unique_call 2035} sdv_KeReleaseSpinLock(0, oldIrql_4);
    goto L78;

  L78:
    call {:si_unique_call 2036} sdv_706, sdv_707, sdv_712, sdv_713, pCurDevObj, Tmp_1022, Tmp_1029, sdv_716, sdv_719, pExtension, oldIrql_4, sdv_730, sdv_733, vslice_dummy_var_505 := SerialFindInitController_loop_L78(sdv_706, sdv_707, sdv_712, sdv_713, pCurDevObj, Tmp_1022, Tmp_1029, sdv_716, Tmp_1031, sdv_719, pExtension, oldIrql_4, sdv_730, sdv_733, Tmp_1041, Tmp_1042, PConfig_1, vslice_dummy_var_505);
    goto L78_last;

  L78_last:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    Tmp_1029 := strConst__li2bpl262;
    call {:si_unique_call 2037} vslice_dummy_var_505 := SerialDbgPrintEx(4, Tmp_1029);
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_152;
    havoc vslice_dummy_var_153;
    havoc vslice_dummy_var_154;
    havoc vslice_dummy_var_155;
    call {:si_unique_call 2038} sdv_706 := SerialMemCompare(vslice_dummy_var_152, vslice_dummy_var_153, vslice_dummy_var_154, vslice_dummy_var_155);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} sdv_706 != 2;
    Tmp_1036 := strConst__li2bpl263;
    call {:si_unique_call 2039} vslice_dummy_var_506 := SerialDbgPrintEx(1, Tmp_1036);
    Tmp_1017 := -1073741810;
    goto L1;

  anon87_Then:
    assume {:partition} sdv_706 == 2;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc vslice_dummy_var_156;
    havoc vslice_dummy_var_157;
    call {:si_unique_call 2040} sdv_730 := SerialMemCompare(vslice_dummy_var_156, vslice_dummy_var_157, Tmp_1042, 0);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} sdv_730 != 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_158;
    havoc vslice_dummy_var_159;
    havoc vslice_dummy_var_160;
    havoc vslice_dummy_var_161;
    call {:si_unique_call 2041} sdv_733 := SerialMemCompare(vslice_dummy_var_158, vslice_dummy_var_159, vslice_dummy_var_160, vslice_dummy_var_161);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} sdv_733 != 2;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_1028;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc Tmp_1020;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_162;
    havoc vslice_dummy_var_163;
    havoc vslice_dummy_var_164;
    havoc vslice_dummy_var_165;
    havoc vslice_dummy_var_166;
    call {:si_unique_call 2042} SerialLogError(vslice_dummy_var_162, 0, vslice_dummy_var_163, vslice_dummy_var_164, 0, 0, 0, 47, 0, -1073348578, Tmp_1020, vslice_dummy_var_165, Tmp_1028, vslice_dummy_var_166);
    Tmp_1024 := strConst__li2bpl264;
    call {:si_unique_call 2043} vslice_dummy_var_507 := SerialDbgPrintEx(1, Tmp_1024);
    Tmp_1017 := -1073741810;
    goto L1;

  anon89_Then:
    assume {:partition} sdv_733 == 2;
    assume {:nonnull} Tmp_1041 != 0;
    assume Tmp_1041 > 0;
    assume {:nonnull} Tmp_1041 != 0;
    assume Tmp_1041 > 0;
    assume {:nonnull} Tmp_1041 != 0;
    assume Tmp_1041 > 0;
    assume {:nonnull} Tmp_1041 != 0;
    assume Tmp_1041 > 0;
    assume {:nonnull} Tmp_1041 != 0;
    assume Tmp_1041 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc vslice_dummy_var_167;
    havoc vslice_dummy_var_168;
    call {:si_unique_call 2044} sdv_707 := SerialMemCompare(vslice_dummy_var_167, vslice_dummy_var_168, Tmp_1041, 0);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} sdv_707 != 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_169;
    havoc vslice_dummy_var_170;
    havoc vslice_dummy_var_171;
    havoc vslice_dummy_var_172;
    call {:si_unique_call 2045} sdv_716 := SerialMemCompare(vslice_dummy_var_169, vslice_dummy_var_170, vslice_dummy_var_171, vslice_dummy_var_172);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} sdv_716 == 1;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_1046;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc Tmp_1051;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_173;
    havoc vslice_dummy_var_174;
    havoc vslice_dummy_var_175;
    havoc vslice_dummy_var_176;
    havoc vslice_dummy_var_177;
    call {:si_unique_call 2046} SerialLogError(vslice_dummy_var_173, 0, vslice_dummy_var_174, vslice_dummy_var_175, 0, 0, 0, 48, 0, -1073348577, Tmp_1051, vslice_dummy_var_176, Tmp_1046, vslice_dummy_var_177);
    Tmp_1039 := strConst__li2bpl265;
    call {:si_unique_call 2047} vslice_dummy_var_508 := SerialDbgPrintEx(1, Tmp_1039);
    Tmp_1017 := -1073741810;
    goto L1;

  anon91_Then:
    assume {:partition} sdv_716 != 1;
    goto L105;

  L105:
    assume {:nonnull} Tmp_1031 != 0;
    assume Tmp_1031 > 0;
    assume {:nonnull} Tmp_1031 != 0;
    assume Tmp_1031 > 0;
    assume {:nonnull} Tmp_1031 != 0;
    assume Tmp_1031 > 0;
    assume {:nonnull} Tmp_1031 != 0;
    assume Tmp_1031 > 0;
    assume {:nonnull} Tmp_1031 != 0;
    assume Tmp_1031 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_178;
    havoc vslice_dummy_var_179;
    call {:si_unique_call 2048} sdv_719 := SerialMemCompare(vslice_dummy_var_178, vslice_dummy_var_179, Tmp_1031, 0);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} sdv_719 != 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_180;
    havoc vslice_dummy_var_181;
    havoc vslice_dummy_var_182;
    havoc vslice_dummy_var_183;
    call {:si_unique_call 2049} sdv_712 := SerialMemCompare(vslice_dummy_var_180, vslice_dummy_var_181, vslice_dummy_var_182, vslice_dummy_var_183);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} sdv_712 == 1;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_1025;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc Tmp_1040;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_184;
    havoc vslice_dummy_var_185;
    havoc vslice_dummy_var_186;
    havoc vslice_dummy_var_187;
    havoc vslice_dummy_var_188;
    call {:si_unique_call 2050} SerialLogError(vslice_dummy_var_184, 0, vslice_dummy_var_185, vslice_dummy_var_186, 0, 0, 0, 49, 0, -1073348576, Tmp_1040, vslice_dummy_var_187, Tmp_1025, vslice_dummy_var_188);
    Tmp_1044 := strConst__li2bpl266;
    call {:si_unique_call 2051} vslice_dummy_var_509 := SerialDbgPrintEx(1, Tmp_1044);
    Tmp_1017 := -1073741810;
    goto L1;

  anon93_Then:
    assume {:partition} sdv_712 != 1;
    goto L84;

  L84:
    call {:si_unique_call 2052} Tmp_1022 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    call {:si_unique_call 2053} sdv_KeAcquireSpinLock(0, Tmp_1022);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    havoc oldIrql_4;
    assume {:nonnull} pCurDevObj != 0;
    assume pCurDevObj > 0;
    havoc pCurDevObj;
    call {:si_unique_call 2054} sdv_KeReleaseSpinLock(0, oldIrql_4);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    call {:si_unique_call 2055} sdv_713 := sdv_containing_record(pCurDevObj, 32);
    pExtension := sdv_713;
    goto anon94_Else_dummy;

  anon94_Else_dummy:
    assume false;
    return;

  anon94_Then:
    goto anon94_Then_dummy;

  anon94_Then_dummy:
    assume false;
    return;

  anon92_Then:
    assume {:partition} sdv_719 == 0;
    goto L84;

  anon90_Then:
    assume {:partition} sdv_707 == 0;
    goto L105;

  anon88_Then:
    assume {:partition} sdv_730 == 0;
    goto L105;

  anon86_Then:
    goto L84;

  anon85_Then:
    goto L84;

  anon84_Then:
    goto L84;

  anon83_Then:
    goto L79;

  L79:
    call {:si_unique_call 2056} Tmp_1022 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    call {:si_unique_call 2057} sdv_KeAcquireSpinLock(0, Tmp_1022);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 2058} sdv_740 := sdv_IsListEmpty(0);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} sdv_740 != 0;
    pCurDevObj := 0;
    pExtension := 0;
    goto L170;

  L170:
    call {:si_unique_call 2059} sdv_KeReleaseSpinLock(0, oldIrql_4);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc vslice_dummy_var_189;
    havoc vslice_dummy_var_190;
    call {:si_unique_call 2060} sdv_709 := SerialMemCompare(vslice_dummy_var_189, vslice_dummy_var_190, Tmp_1032, 0);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} sdv_709 != 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    goto L182;

  L182:
    call {:si_unique_call 2061} pCurDevObj, Tmp_1022, sdv_723, pExtension, oldIrql_4, sdv_736 := SerialFindInitController_loop_L182(pCurDevObj, Tmp_1022, sdv_723, pExtension, oldIrql_4, sdv_736, PConfig_1);
    goto L182_last;

  L182_last:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_191;
    havoc vslice_dummy_var_192;
    havoc vslice_dummy_var_193;
    havoc vslice_dummy_var_194;
    call {:si_unique_call 2062} sdv_736 := SerialMemCompare(vslice_dummy_var_191, vslice_dummy_var_192, vslice_dummy_var_193, vslice_dummy_var_194);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} sdv_736 == 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto L194;

  L194:
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_1019;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc Tmp_1038;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_195;
    havoc vslice_dummy_var_196;
    havoc vslice_dummy_var_197;
    havoc vslice_dummy_var_198;
    havoc vslice_dummy_var_199;
    call {:si_unique_call 2063} SerialLogError(vslice_dummy_var_195, 0, vslice_dummy_var_196, vslice_dummy_var_197, 0, 0, 0, 50, 0, -1073348575, Tmp_1038, vslice_dummy_var_198, Tmp_1019, vslice_dummy_var_199);
    Tmp_1048 := strConst__li2bpl268;
    call {:si_unique_call 2064} vslice_dummy_var_512 := SerialDbgPrintEx(1, Tmp_1048);
    Tmp_1017 := -1073741810;
    goto L1;

  anon102_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    Tmp_1033 := strConst__li2bpl269;
    call {:si_unique_call 2065} vslice_dummy_var_513 := SerialDbgPrintEx(4, Tmp_1033);
    Tmp_1037 := strConst__li2bpl270;
    call {:si_unique_call 2066} vslice_dummy_var_514 := SerialDbgPrintEx(4, Tmp_1037);
    call {:si_unique_call 2067} status_33 := SerialInitMultiPort(pExtension, PConfig_1, PDevObj_12);
    Tmp_1017 := status_33;
    goto L1;

  anon103_Then:
    goto L194;

  anon101_Then:
    assume {:partition} sdv_736 != 0;
    goto L183;

  L183:
    call {:si_unique_call 2068} Tmp_1022 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    call {:si_unique_call 2069} sdv_KeAcquireSpinLock(0, Tmp_1022);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    havoc oldIrql_4;
    assume {:nonnull} pCurDevObj != 0;
    assume pCurDevObj > 0;
    havoc pCurDevObj;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    call {:si_unique_call 2070} sdv_723 := sdv_containing_record(pCurDevObj, 32);
    pExtension := sdv_723;
    goto L216;

  L216:
    call {:si_unique_call 2071} sdv_KeReleaseSpinLock(0, oldIrql_4);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto anon105_Else_dummy;

  anon105_Else_dummy:
    assume false;
    return;

  anon105_Then:
    goto L178;

  L178:
    Tmp_1047 := strConst__li2bpl267;
    call {:si_unique_call 2072} vslice_dummy_var_510 := SerialDbgPrintEx(4, Tmp_1047);
    call {:si_unique_call 2073} status_33 := SerialInitOneController(PDevObj_12, PConfig_1);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} status_33 >= 0;
    call {:si_unique_call 2074} Tmp_1022 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    call {:si_unique_call 2075} sdv_KeAcquireSpinLock(0, Tmp_1022);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 2076} sdv_701 := sdv_IsListEmpty(0);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} sdv_701 != 0;
    pCurDevObj := 0;
    pExtension := 0;
    goto L241;

  L241:
    call {:si_unique_call 2077} sdv_KeReleaseSpinLock(0, oldIrql_4);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto L246;

  L246:
    call {:si_unique_call 2078} sdv_714, pCurDevObj, Tmp_1022, pExtension, oldIrql_4 := SerialFindInitController_loop_L246(sdv_714, pCurDevObj, Tmp_1022, pExtension, oldIrql_4, PConfig_1);
    goto L246_last;

  L246_last:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    call {:si_unique_call 2079} sdv_ExFreePool(0);
    Tmp_1018 := strConst__li2bpl271;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_1027;
    call {:si_unique_call 2080} vslice_dummy_var_511 := SerialDbgPrintEx(4, Tmp_1018);
    call {:si_unique_call 2081} vslice_dummy_var_499 := KeSynchronizeExecution(0, li2bplFunctionConstant398, 0);
    Tmp_1017 := 0;
    goto L1;

  anon110_Then:
    goto L247;

  L247:
    call {:si_unique_call 2082} Tmp_1022 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    call {:si_unique_call 2083} sdv_KeAcquireSpinLock(0, Tmp_1022);
    assume {:nonnull} Tmp_1022 != 0;
    assume Tmp_1022 > 0;
    havoc oldIrql_4;
    assume {:nonnull} pCurDevObj != 0;
    assume pCurDevObj > 0;
    havoc pCurDevObj;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    call {:si_unique_call 2084} sdv_714 := sdv_containing_record(pCurDevObj, 32);
    pExtension := sdv_714;
    goto L264;

  L264:
    call {:si_unique_call 2085} sdv_KeReleaseSpinLock(0, oldIrql_4);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto anon112_Else_dummy;

  anon112_Else_dummy:
    assume false;
    return;

  anon112_Then:
    goto L245;

  L245:
    Tmp_1017 := 0;
    goto L1;

  anon111_Then:
    goto L245;

  anon114_Then:
    goto L264;

  anon109_Then:
    goto L247;

  anon108_Then:
    goto L245;

  anon107_Then:
    assume {:partition} sdv_701 == 0;
    havoc pCurDevObj;
    call {:si_unique_call 2086} sdv_708 := sdv_containing_record(pCurDevObj, 32);
    pExtension := sdv_708;
    goto L241;

  anon106_Then:
    assume {:partition} 0 > status_33;
    Tmp_1017 := status_33;
    goto L1;

  anon104_Then:
    goto L178;

  anon113_Then:
    goto L216;

  anon100_Then:
    goto L183;

  anon99_Then:
    goto L183;

  anon98_Then:
    goto L183;

  anon97_Then:
    goto L178;

  anon96_Then:
    assume {:partition} sdv_709 == 0;
    goto L178;

  anon95_Then:
    assume {:partition} sdv_740 == 0;
    havoc pCurDevObj;
    call {:si_unique_call 2087} sdv_729 := sdv_containing_record(pCurDevObj, 32);
    pExtension := sdv_729;
    goto L170;

  anon82_Then:
    goto L79;

  anon81_Then:
    assume {:partition} sdv_739 == 0;
    havoc pCurDevObj;
    call {:si_unique_call 2088} sdv_702 := sdv_containing_record(pCurDevObj, 32);
    pExtension := sdv_702;
    goto L75;

  anon79_Then:
    assume {:partition} sdv_735 == 0;
    goto L53;
}



procedure {:origName "SerialGetDivisorFromBaud"} SerialGetDivisorFromBaud(actual_ClockRate: int, actual_DesiredBaud: int, actual_AppropriateDivisor_1: int) returns (Tmp_1053: int);
  free ensures {:va_keep} Tmp_1053 == -1073741811 || Tmp_1053 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetDivisorFromBaud"} SerialGetDivisorFromBaud(actual_ClockRate: int, actual_DesiredBaud: int, actual_AppropriateDivisor_1: int) returns (Tmp_1053: int)
{
  var {:scalar} maxRemain: int;
  var {:scalar} maxRemain80: int;
  var {:scalar} remainder: int;
  var {:scalar} maxRemain30: int;
  var {:scalar} maxRemain42: int;
  var {:scalar} maxRemain18: int;
  var {:scalar} calculatedDivisor: int;
  var {:scalar} status_34: int;
  var {:scalar} denominator: int;
  var {:scalar} ClockRate: int;
  var {:scalar} DesiredBaud: int;
  var {:pointer} AppropriateDivisor_1: int;

  anon0:
    ClockRate := actual_ClockRate;
    DesiredBaud := actual_DesiredBaud;
    AppropriateDivisor_1 := actual_AppropriateDivisor_1;
    status_34 := 0;
    maxRemain18 := 18432;
    maxRemain30 := 30720;
    maxRemain42 := 42336;
    maxRemain80 := 80000;
    denominator := DesiredBaud * 16;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} 0 >= DesiredBaud;
    assume {:nonnull} AppropriateDivisor_1 != 0;
    assume AppropriateDivisor_1 > 0;
    goto L21;

  L21:
    assume {:nonnull} AppropriateDivisor_1 != 0;
    assume AppropriateDivisor_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    status_34 := -1073741811;
    goto L22;

  L22:
    Tmp_1053 := status_34;
    return;

  anon52_Then:
    goto L22;

  anon74_Then:
    assume {:partition} DesiredBaud > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} DesiredBaud > denominator;
    assume {:nonnull} AppropriateDivisor_1 != 0;
    assume AppropriateDivisor_1 > 0;
    goto L21;

  anon51_Then:
    assume {:partition} denominator >= DesiredBaud;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} ClockRate == 1843200;
    maxRemain := maxRemain18;
    goto L28;

  L28:
    calculatedDivisor := INTDIV(ClockRate, denominator);
    remainder := INTMOD(ClockRate, denominator);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} remainder * 2 > ClockRate;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} DesiredBaud != 110;
    calculatedDivisor := calculatedDivisor + 1;
    goto L31;

  L31:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} DesiredBaud >= 9600;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} remainder >= maxRemain;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} ClockRate > remainder + maxRemain;
    calculatedDivisor := -1;
    goto L34;

  L34:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} denominator > ClockRate;
    calculatedDivisor := -1;
    goto L38;

  L38:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} ClockRate == 1843200;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} DesiredBaud == 56000;
    calculatedDivisor := 2;
    goto L42;

  L42:
    assume {:nonnull} AppropriateDivisor_1 != 0;
    assume AppropriateDivisor_1 > 0;
    goto L21;

  anon62_Then:
    assume {:partition} DesiredBaud != 56000;
    goto L42;

  anon60_Then:
    assume {:partition} ClockRate != 1843200;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} ClockRate == 3072000;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} DesiredBaud == 14400;
    calculatedDivisor := 13;
    goto L42;

  anon64_Then:
    assume {:partition} DesiredBaud != 14400;
    goto L42;

  anon61_Then:
    assume {:partition} ClockRate != 3072000;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} ClockRate == 4233600;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} DesiredBaud == 9600;
    calculatedDivisor := 28;
    goto L42;

  anon66_Then:
    assume {:partition} DesiredBaud != 9600;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} DesiredBaud == 14400;
    calculatedDivisor := 18;
    goto L42;

  anon67_Then:
    assume {:partition} DesiredBaud != 14400;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} DesiredBaud == 19200;
    calculatedDivisor := 14;
    goto L42;

  anon68_Then:
    assume {:partition} DesiredBaud != 19200;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} DesiredBaud == 38400;
    calculatedDivisor := 7;
    goto L42;

  anon69_Then:
    assume {:partition} DesiredBaud != 38400;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} DesiredBaud == 56000;
    calculatedDivisor := 5;
    goto L42;

  anon70_Then:
    assume {:partition} DesiredBaud != 56000;
    goto L42;

  anon63_Then:
    assume {:partition} ClockRate != 4233600;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} ClockRate == 8000000;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} DesiredBaud == 14400;
    calculatedDivisor := 35;
    goto L42;

  anon71_Then:
    assume {:partition} DesiredBaud != 14400;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} DesiredBaud == 56000;
    calculatedDivisor := 9;
    goto L42;

  anon72_Then:
    assume {:partition} DesiredBaud != 56000;
    goto L42;

  anon65_Then:
    assume {:partition} ClockRate != 8000000;
    goto L42;

  anon57_Then:
    assume {:partition} ClockRate >= denominator;
    goto L38;

  anon59_Then:
    assume {:partition} remainder + maxRemain >= ClockRate;
    goto L34;

  anon58_Then:
    assume {:partition} maxRemain > remainder;
    goto L34;

  anon55_Then:
    assume {:partition} 9600 > DesiredBaud;
    goto L34;

  anon56_Then:
    assume {:partition} DesiredBaud == 110;
    goto L31;

  anon75_Then:
    assume {:partition} ClockRate >= remainder * 2;
    goto L31;

  anon53_Then:
    assume {:partition} ClockRate != 1843200;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} ClockRate == 3072000;
    maxRemain := maxRemain30;
    goto L28;

  anon54_Then:
    assume {:partition} ClockRate != 3072000;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} ClockRate == 4233600;
    maxRemain := maxRemain42;
    goto L28;

  anon73_Then:
    assume {:partition} ClockRate != 4233600;
    maxRemain := maxRemain80;
    goto L28;
}



procedure {:origName "SerialDisableInterfacesResources"} SerialDisableInterfacesResources(actual_PDevObj_13: int, actual_DisableUART: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialDisableInterfacesResources"} SerialDisableInterfacesResources(actual_PDevObj_13: int, actual_DisableUART: int)
{
  var {:pointer} pDevExt_14: int;
  var {:pointer} Tmp_1057: int;
  var {:pointer} sdv_742: int;
  var {:pointer} Tmp_1059: int;
  var {:pointer} countSoFar_2: int;
  var {:pointer} Tmp_1060: int;
  var {:pointer} PDevObj_13: int;
  var {:scalar} DisableUART: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;

  anon0:
    call {:si_unique_call 2089} vslice_dummy_var_515 := __HAVOC_malloc(4);
    PDevObj_13 := actual_PDevObj_13;
    DisableUART := actual_DisableUART;
    call {:si_unique_call 2090} Tmp_1057 := __HAVOC_malloc(104);
    call {:si_unique_call 2091} Tmp_1059 := __HAVOC_malloc(136);
    assume {:nonnull} PDevObj_13 != 0;
    assume PDevObj_13 > 0;
    havoc pDevExt_14;
    call {:si_unique_call 2092} sdv_do_paged_code_check();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} DisableUART != 0;
    Tmp_1060 := strConst__li2bpl275;
    goto L11;

  L11:
    Tmp_1059 := strConst__li2bpl276;
    call {:si_unique_call 2093} vslice_dummy_var_517 := SerialDbgPrintEx(2, Tmp_1059);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 2094} sdv_742 := IoGetConfigurationInformation();
    assume {:nonnull} sdv_742 != 0;
    assume sdv_742 > 0;
    countSoFar_2 := SerialCount__CONFIGURATION_INFORMATION(sdv_742);
    assume {:nonnull} countSoFar_2 != 0;
    assume countSoFar_2 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L26;

  L26:
    call {:si_unique_call 2095} vslice_dummy_var_516 := IoWMIRegistrationControl(0, 2);
    goto L15;

  L15:
    call {:si_unique_call 2096} SerialUndoExternalNaming(pDevExt_14);
    Tmp_1057 := strConst__li2bpl277;
    call {:si_unique_call 2097} vslice_dummy_var_518 := SerialDbgPrintEx(2, Tmp_1057);
    return;

  anon12_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} DisableUART != 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto L29;

  L29:
    call {:si_unique_call 2098} SerialReleaseResources(pDevExt_14);
    goto L26;

  anon11_Then:
    assume {:partition} DisableUART == 0;
    goto L29;

  anon10_Then:
    goto L15;

  anon9_Then:
    assume {:partition} DisableUART == 0;
    Tmp_1060 := strConst__li2bpl274;
    goto L11;
}



procedure {:origName "SerialMemCompare"} SerialMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_1061: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1061 == 0 || Tmp_1061 == 2 || Tmp_1061 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialMemCompare"} SerialMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_1061: int)
{
  var {:scalar} A: int;
  var {:scalar} B: int;
  var {:scalar} b_1: int;
  var {:scalar} higher: int;
  var {:scalar} lowerSpan: int;
  var {:scalar} lower: int;
  var {:scalar} a_1: int;
  var {:pointer} structPtr888A: int;
  var {:scalar} SpanOfA: int;
  var {:pointer} structPtr888B: int;
  var {:scalar} SpanOfB: int;

  anon0:
    call {:si_unique_call 2099} A := __HAVOC_malloc(20);
    call {:si_unique_call 2100} B := __HAVOC_malloc(20);
    call {:si_unique_call 2101} b_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2102} higher := __HAVOC_malloc(20);
    call {:si_unique_call 2103} lower := __HAVOC_malloc(20);
    call {:si_unique_call 2104} a_1 := __HAVOC_malloc(20);
    structPtr888A := actual_structPtr888A;
    SpanOfA := actual_SpanOfA;
    structPtr888B := actual_structPtr888B;
    SpanOfB := actual_SpanOfB;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    call {:si_unique_call 2105} sdv_do_paged_code_check();
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_1061 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfB;
    goto L20;

  L20:
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1061 := 2;
    goto L1;

  anon8_Then:
    Tmp_1061 := 1;
    goto L1;

  anon7_Then:
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b_1 != 0;
    assume b_1 > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a_1 != 0;
    assume a_1 > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfA;
    goto L20;
}



procedure {:origName "SerialDoesPortExist"} SerialDoesPortExist(actual_Extension_14: int, actual_InsertString: int, actual_ForceFifo: int, actual_LogFifo: int) returns (Tmp_1063: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1063 == 0 || Tmp_1063 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialDoesPortExist"} SerialDoesPortExist(actual_Extension_14: int, actual_InsertString: int, actual_ForceFifo: int, actual_LogFifo: int) returns (Tmp_1063: int)
{
  var {:scalar} oldLCRContents: int;
  var {:pointer} Tmp_1065: int;
  var {:pointer} Tmp_1066: int;
  var {:scalar} Tmp_1067: int;
  var {:pointer} Tmp_1070: int;
  var {:pointer} PDivisor: int;
  var {:scalar} regContents: int;
  var {:scalar} Lsb: int;
  var {:scalar} value1: int;
  var {:scalar} Tmp_1080: int;
  var {:dopa} {:scalar} value2: int;
  var {:scalar} returnValue: int;
  var {:scalar} oldIrql_5: int;
  var {:scalar} sdv_750: int;
  var {:scalar} Tmp_1085: int;
  var {:scalar} Tmp_1086: int;
  var {:scalar} sdv_752: int;
  var {:scalar} LineControl_1: int;
  var {:pointer} Tmp_1089: int;
  var {:pointer} Address_2: int;
  var {:pointer} Tmp_1091: int;
  var {:pointer} Extension_14: int;
  var {:pointer} InsertString: int;
  var {:scalar} ForceFifo: int;
  var {:scalar} LogFifo: int;
  var boogieTmp: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;

  anon0:
    call {:si_unique_call 2106} Tmp_1080 := __HAVOC_malloc(20);
    call {:si_unique_call 2107} value2 := __HAVOC_malloc(4);
    call {:si_unique_call 2108} Tmp_1085 := __HAVOC_malloc(20);
    Extension_14 := actual_Extension_14;
    InsertString := actual_InsertString;
    ForceFifo := actual_ForceFifo;
    LogFifo := actual_LogFifo;
    call {:si_unique_call 2109} Tmp_1065 := __HAVOC_malloc(148);
    returnValue := 1;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    call {:si_unique_call 2110} oldLCRContents := corral_nondet();
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    call {:si_unique_call 2111} vslice_dummy_var_520 := corral_nondet();
    call {:si_unique_call 2112} Tmp_1066 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1066 != 0;
    assume Tmp_1066 > 0;
    call {:si_unique_call 2113} sdv_KeRaiseIrql(30, Tmp_1066);
    assume {:nonnull} Tmp_1066 != 0;
    assume Tmp_1066 > 0;
    havoc oldIrql_5;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    call {:si_unique_call 2114} sdv_750 := corral_nondet();
    value1 := sdv_750;
    call {:si_unique_call 2115} value1 := corral_nondet();
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    call {:si_unique_call 2116} sdv_752 := corral_nondet();
    value1 := BOR(value1, sdv_752);
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    havoc Address_2;
    PDivisor := value2;
    call {:si_unique_call 2117} LineControl_1 := corral_nondet();
    call {:si_unique_call 2118} Lsb := corral_nondet();
    call {:si_unique_call 2119} vslice_dummy_var_521 := corral_nondet();
    assume {:nonnull} PDivisor != 0;
    assume PDivisor > 0;
    assume {:nonnull} PDivisor != 0;
    assume PDivisor > 0;
    call {:si_unique_call 2120} boogieTmp := corral_nondet();
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    call {:si_unique_call 2121} sdv_KeLowerIrql(oldIrql_5);
    assume {:nonnull} value2 != 0;
    assume value2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} InsertString != 0;
    assume InsertString > 0;
    havoc Tmp_1067;
    assume {:nonnull} Tmp_1080 != 0;
    assume Tmp_1080 > 0;
    assume {:nonnull} Tmp_1080 != 0;
    assume Tmp_1080 > 0;
    assume {:nonnull} Tmp_1080 != 0;
    assume Tmp_1080 > 0;
    assume {:nonnull} Tmp_1080 != 0;
    assume Tmp_1080 > 0;
    assume {:nonnull} Tmp_1080 != 0;
    assume Tmp_1080 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    havoc Tmp_1089;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} InsertString != 0;
    assume InsertString > 0;
    assume {:nonnull} Tmp_1089 != 0;
    assume Tmp_1089 > 0;
    havoc vslice_dummy_var_200;
    havoc vslice_dummy_var_201;
    havoc vslice_dummy_var_202;
    havoc vslice_dummy_var_203;
    call {:si_unique_call 2122} SerialLogError(vslice_dummy_var_200, vslice_dummy_var_201, vslice_dummy_var_202, Tmp_1080, 0, 0, 0, 62, 0, -1073348572, Tmp_1067, vslice_dummy_var_203, 0, 0);
    returnValue := 0;
    goto L89;

  L89:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} returnValue != 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    call {:si_unique_call 2123} regContents := corral_nondet();
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(regContents, 192) != 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    call {:si_unique_call 2124} vslice_dummy_var_522 := corral_nondet();
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    goto L116;

  L116:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} ForceFifo != 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L133;

  L133:
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} LogFifo != 0;
    assume {:nonnull} InsertString != 0;
    assume InsertString > 0;
    havoc Tmp_1086;
    assume {:nonnull} Tmp_1085 != 0;
    assume Tmp_1085 > 0;
    assume {:nonnull} Tmp_1085 != 0;
    assume Tmp_1085 > 0;
    assume {:nonnull} Tmp_1085 != 0;
    assume Tmp_1085 > 0;
    assume {:nonnull} Tmp_1085 != 0;
    assume Tmp_1085 > 0;
    assume {:nonnull} Tmp_1085 != 0;
    assume Tmp_1085 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    havoc Tmp_1091;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} InsertString != 0;
    assume InsertString > 0;
    assume {:nonnull} Tmp_1091 != 0;
    assume Tmp_1091 > 0;
    havoc vslice_dummy_var_204;
    havoc vslice_dummy_var_205;
    havoc vslice_dummy_var_206;
    havoc vslice_dummy_var_207;
    call {:si_unique_call 2125} SerialLogError(vslice_dummy_var_204, vslice_dummy_var_205, vslice_dummy_var_206, Tmp_1085, 0, 0, 0, 15, 0, -1073348606, Tmp_1086, vslice_dummy_var_207, 0, 0);
    goto L136;

  L136:
    Tmp_1065 := strConst__li2bpl278;
    call {:si_unique_call 2126} vslice_dummy_var_523 := SerialDbgPrintEx(4, Tmp_1065);
    goto L134;

  L134:
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L97;

  L97:
    Tmp_1063 := returnValue;
    return;

  anon29_Then:
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 2127} vslice_dummy_var_519 := corral_nondet();
    goto L97;

  anon30_Then:
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    havoc Tmp_1070;
    assume {:nonnull} Tmp_1070 != 0;
    assume Tmp_1070 > 0;
    goto L97;

  anon27_Then:
    goto L97;

  anon28_Then:
    assume {:partition} LogFifo == 0;
    goto L136;

  anon26_Then:
    goto L134;

  anon25_Then:
    goto L131;

  L131:
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    goto L133;

  anon24_Then:
    assume {:partition} ForceFifo == 0;
    goto L131;

  anon23_Then:
    assume {:partition} BAND(regContents, 192) == 0;
    goto L116;

  anon22_Then:
    assume {:partition} returnValue == 0;
    goto L97;

  anon21_Then:
    goto L89;
}



procedure {:origName "DriverEntry"} DriverEntry(actual_DriverObject_8: int, actual_RegistryPath_2: int) returns (Tmp_1099: int);
  modifies alloc, queued, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1099 == 0 || Tmp_1099 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "DriverEntry"} DriverEntry(actual_DriverObject_8: int, actual_RegistryPath_2: int) returns (Tmp_1099: int)
{
  var {:pointer} Tmp_1100: int;
  var {:pointer} Tmp_1101: int;
  var {:pointer} Tmp_1102: int;
  var {:pointer} Tmp_1103: int;
  var {:scalar} Tmp_1104: int;
  var {:pointer} Tmp_1105: int;
  var {:pointer} Tmp_1106: int;
  var {:pointer} Tmp_1107: int;
  var {:pointer} Tmp_1108: int;
  var {:scalar} Tmp_1109: int;
  var {:pointer} sdv_756: int;
  var {:pointer} lockPtr_1: int;
  var {:pointer} Tmp_1110: int;
  var {:pointer} Tmp_1111: int;
  var {:pointer} Tmp_1112: int;
  var {:pointer} Tmp_1113: int;
  var {:pointer} Tmp_1114: int;
  var {:scalar} Tmp_1115: int;
  var {:pointer} Tmp_1116: int;
  var {:pointer} Tmp_1117: int;
  var {:pointer} Tmp_1118: int;
  var {:pointer} DriverObject_8: int;
  var {:pointer} RegistryPath_2: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_525: int;
  var vslice_dummy_var_526: int;

  anon0:
    DriverObject_8 := actual_DriverObject_8;
    RegistryPath_2 := actual_RegistryPath_2;
    call {:si_unique_call 2128} Tmp_1100 := __HAVOC_malloc(112);
    call {:si_unique_call 2129} Tmp_1101 := __HAVOC_malloc(112);
    call {:si_unique_call 2130} Tmp_1102 := __HAVOC_malloc(112);
    call {:si_unique_call 2131} Tmp_1103 := __HAVOC_malloc(112);
    call {:si_unique_call 2132} Tmp_1105 := __HAVOC_malloc(112);
    call {:si_unique_call 2133} Tmp_1106 := __HAVOC_malloc(112);
    call {:si_unique_call 2134} Tmp_1107 := __HAVOC_malloc(180);
    call {:si_unique_call 2135} Tmp_1108 := __HAVOC_malloc(112);
    call {:si_unique_call 2136} Tmp_1110 := __HAVOC_malloc(112);
    call {:si_unique_call 2137} Tmp_1111 := __HAVOC_malloc(112);
    call {:si_unique_call 2138} Tmp_1112 := __HAVOC_malloc(112);
    call {:si_unique_call 2139} Tmp_1113 := __HAVOC_malloc(112);
    call {:si_unique_call 2140} Tmp_1114 := __HAVOC_malloc(112);
    call {:si_unique_call 2141} Tmp_1117 := __HAVOC_malloc(112);
    call {:si_unique_call 2142} lockPtr_1 := sdv_MmLockPagableCodeSection(li2bplFunctionConstant248);
    call {:si_unique_call 2143} sdv_do_paged_code_check();
    assume {:nonnull} RegistryPath_2 != 0;
    assume RegistryPath_2 > 0;
    assume {:nonnull} RegistryPath_2 != 0;
    assume RegistryPath_2 > 0;
    havoc Tmp_1109;
    call {:si_unique_call 2144} sdv_756 := ExAllocatePoolWithTag(1, Tmp_1109, -666022077);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    havoc Tmp_1104;
    call {:si_unique_call 2145} sdv_RtlZeroMemory(0, Tmp_1104);
    assume {:nonnull} RegistryPath_2 != 0;
    assume RegistryPath_2 > 0;
    havoc Tmp_1115;
    call {:si_unique_call 2146} sdv_RtlMoveMemory(0, 0, Tmp_1115);
    call {:si_unique_call 2147} Tmp_1118 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    call {:si_unique_call 2148} sdv_KeInitializeSpinLock(Tmp_1118);
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    call {:si_unique_call 2149} InitializeListHead(AllDevObjs__SERIAL_GLOBALS(SerialGlobals));
    call {:si_unique_call 2150} vslice_dummy_var_524 := SerialGetConfigDefaults(driverDefaults, RegistryPath_2);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 2151} sdv_DbgBreakPoint();
    goto L41;

  L41:
    Tmp_1107 := strConst__li2bpl279;
    call {:si_unique_call 2152} vslice_dummy_var_526 := SerialDbgPrintEx(3, Tmp_1107);
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1116;
    assume {:nonnull} Tmp_1116 != 0;
    assume Tmp_1116 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1102;
    assume {:nonnull} Tmp_1102 != 0;
    assume Tmp_1102 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1112;
    assume {:nonnull} Tmp_1112 != 0;
    assume Tmp_1112 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1110;
    assume {:nonnull} Tmp_1110 != 0;
    assume Tmp_1110 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1106;
    assume {:nonnull} Tmp_1106 != 0;
    assume Tmp_1106 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1108;
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1105;
    assume {:nonnull} Tmp_1105 != 0;
    assume Tmp_1105 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1114;
    assume {:nonnull} Tmp_1114 != 0;
    assume Tmp_1114 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1100;
    assume {:nonnull} Tmp_1100 != 0;
    assume Tmp_1100 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1113;
    assume {:nonnull} Tmp_1113 != 0;
    assume Tmp_1113 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1111;
    assume {:nonnull} Tmp_1111 != 0;
    assume Tmp_1111 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1103;
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1117;
    assume {:nonnull} Tmp_1117 != 0;
    assume Tmp_1117 > 0;
    assume {:nonnull} DriverObject_8 != 0;
    assume DriverObject_8 > 0;
    havoc Tmp_1101;
    assume {:nonnull} Tmp_1101 != 0;
    assume Tmp_1101 > 0;
    call {:si_unique_call 2153} vslice_dummy_var_525 := SerialEnumerateLegacy(DriverObject_8, RegistryPath_2, driverDefaults);
    call {:si_unique_call 2154} MmUnlockPagableImageSection(0);
    Tmp_1099 := 0;
    goto L1;

  L1:
    return;

  anon5_Then:
    goto L41;

  anon6_Then:
    call {:si_unique_call 2155} MmUnlockPagableImageSection(0);
    Tmp_1099 := -1073741670;
    goto L1;
}



procedure {:origName "SerialInitOneController"} SerialInitOneController(actual_PDevObj_14: int, actual_PConfigData_1: int) returns (Tmp_1119: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1119 == -1073741670 || Tmp_1119 == -1073741709 || Tmp_1119 == -1073741810 || Tmp_1119 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialInitOneController"} SerialInitOneController(actual_PDevObj_14: int, actual_PConfigData_1: int) returns (Tmp_1119: int)
{
  var {:pointer} pDevExt_15: int;
  var {:scalar} status_35: int;
  var {:pointer} PDevObj_14: int;
  var {:pointer} PConfigData_1: int;

  anon0:
    PDevObj_14 := actual_PDevObj_14;
    PConfigData_1 := actual_PConfigData_1;
    call {:si_unique_call 2156} sdv_do_paged_code_check();
    call {:si_unique_call 2157} status_35 := SerialInitController(PDevObj_14, PConfigData_1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_35 >= 0;
    assume {:nonnull} PDevObj_14 != 0;
    assume PDevObj_14 > 0;
    havoc pDevExt_15;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L13;

  L13:
    Tmp_1119 := status_35;
    return;

  anon3_Then:
    assume {:partition} 0 > status_35;
    goto L13;
}



procedure {:origName "SerialInitController"} SerialInitController(actual_PDevObj_15: int, actual_PConfigData_2: int) returns (Tmp_1121: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1121 == -1073741670 || Tmp_1121 == -1073741709 || Tmp_1121 == -1073741810 || Tmp_1121 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialInitController"} SerialInitController(actual_PDevObj_15: int, actual_PConfigData_2: int) returns (Tmp_1121: int)
{
  var {:scalar} sdv_761: int;
  var {:pointer} Tmp_1122: int;
  var {:scalar} sdv_762: int;
  var {:scalar} sdv_763: int;
  var {:scalar} sdv_764: int;
  var {:scalar} Tmp_1123: int;
  var {:scalar} sdv_766: int;
  var {:pointer} Tmp_1124: int;
  var {:pointer} Tmp_1125: int;
  var {:scalar} sdv_767: int;
  var {:scalar} Tmp_1127: int;
  var {:scalar} Tmp_1128: int;
  var {:scalar} sdv_768: int;
  var {:scalar} sdv_769: int;
  var {:scalar} sdv_770: int;
  var {:pointer} Tmp_1129: int;
  var {:scalar} Tmp_1130: int;
  var {:scalar} sdv_771: int;
  var {:pointer} Tmp_1131: int;
  var {:scalar} sdv_772: int;
  var {:scalar} sdv_773: int;
  var {:scalar} sdv_774: int;
  var {:scalar} Tmp_1132: int;
  var {:scalar} sdv_775: int;
  var {:scalar} Tmp_1133: int;
  var {:scalar} sdv_776: int;
  var {:scalar} sdv_777: int;
  var {:scalar} Tmp_1134: int;
  var {:pointer} pDevExt_16: int;
  var {:pointer} Tmp_1135: int;
  var {:dopa} {:scalar} junk: int;
  var {:scalar} sdv_779: int;
  var {:scalar} sdv_780: int;
  var {:pointer} sdv_781: int;
  var {:scalar} Tmp_1136: int;
  var {:scalar} sdv_782: int;
  var {:scalar} sdv_783: int;
  var {:scalar} sdv_785: int;
  var {:scalar} sdv_786: int;
  var {:scalar} sdv_789: int;
  var {:pointer} Tmp_1137: int;
  var {:scalar} sdv_790: int;
  var {:pointer} sdv_792: int;
  var {:pointer} sdv_793: int;
  var {:scalar} sdv_794: int;
  var {:scalar} Tmp_1138: int;
  var {:scalar} sdv_795: int;
  var {:scalar} sdv_796: int;
  var {:scalar} sdv_797: int;
  var {:scalar} sdv_798: int;
  var {:scalar} sdv_799: int;
  var {:scalar} sdv_800: int;
  var {:scalar} sdv_801: int;
  var {:scalar} sdv_803: int;
  var {:scalar} sdv_804: int;
  var {:scalar} status_36: int;
  var {:scalar} allocedISRSw: int;
  var {:scalar} sdv_805: int;
  var {:pointer} Tmp_1139: int;
  var {:scalar} sdv_806: int;
  var {:pointer} Tmp_1140: int;
  var {:scalar} Tmp_1142: int;
  var {:scalar} sdv_807: int;
  var {:scalar} sdv_808: int;
  var {:scalar} sdv_810: int;
  var {:pointer} PDevObj_15: int;
  var {:pointer} PConfigData_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_528: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;
  var vslice_dummy_var_532: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_534: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;

  anon0:
    call {:si_unique_call 2158} Tmp_1128 := __HAVOC_malloc(20);
    call {:si_unique_call 2159} Tmp_1130 := __HAVOC_malloc(20);
    call {:si_unique_call 2160} Tmp_1132 := __HAVOC_malloc(20);
    call {:si_unique_call 2161} junk := __HAVOC_malloc(4);
    call {:si_unique_call 2162} Tmp_1142 := __HAVOC_malloc(20);
    PDevObj_15 := actual_PDevObj_15;
    PConfigData_2 := actual_PConfigData_2;
    call {:si_unique_call 2163} Tmp_1122 := __HAVOC_malloc(204);
    call {:si_unique_call 2164} Tmp_1124 := __HAVOC_malloc(204);
    call {:si_unique_call 2165} Tmp_1125 := __HAVOC_malloc(196);
    call {:si_unique_call 2166} Tmp_1131 := __HAVOC_malloc(136);
    call {:si_unique_call 2167} Tmp_1135 := __HAVOC_malloc(140);
    call {:si_unique_call 2168} Tmp_1137 := __HAVOC_malloc(840);
    call {:si_unique_call 2169} Tmp_1139 := __HAVOC_malloc(184);
    call {:si_unique_call 2170} Tmp_1140 := __HAVOC_malloc(180);
    assume {:nonnull} PDevObj_15 != 0;
    assume PDevObj_15 > 0;
    havoc pDevExt_16;
    status_36 := 0;
    allocedISRSw := 0;
    call {:si_unique_call 2171} sdv_do_paged_code_check();
    Tmp_1139 := strConst__li2bpl280;
    call {:si_unique_call 2172} vslice_dummy_var_527 := SerialDbgPrintEx(4, Tmp_1139);
    assume {:nonnull} KdComPortInUse != 0;
    assume KdComPortInUse > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    Tmp_1140 := strConst__li2bpl281;
    call {:si_unique_call 2173} vslice_dummy_var_528 := SerialDbgPrintEx(0, Tmp_1140);
    Tmp_1131 := strConst__li2bpl282;
    call {:si_unique_call 2174} vslice_dummy_var_529 := SerialDbgPrintEx(0, Tmp_1131);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc Tmp_1127;
    assume {:nonnull} Tmp_1132 != 0;
    assume Tmp_1132 > 0;
    assume {:nonnull} Tmp_1132 != 0;
    assume Tmp_1132 > 0;
    assume {:nonnull} Tmp_1132 != 0;
    assume Tmp_1132 > 0;
    assume {:nonnull} Tmp_1132 != 0;
    assume Tmp_1132 > 0;
    assume {:nonnull} Tmp_1132 != 0;
    assume Tmp_1132 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} PDevObj_15 != 0;
    assume PDevObj_15 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_208;
    havoc vslice_dummy_var_209;
    havoc vslice_dummy_var_210;
    call {:si_unique_call 2175} SerialLogError(vslice_dummy_var_208, 0, vslice_dummy_var_209, Tmp_1132, 0, 0, 0, 3, 0, -1073348607, Tmp_1127, vslice_dummy_var_210, 0, 0);
    Tmp_1121 := -1073741670;
    goto L1;

  L1:
    return;

  anon77_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto L36;

  L36:
    call {:si_unique_call 2176} KeInitializeTimer(0);
    call {:si_unique_call 2177} KeInitializeTimer(0);
    call {:si_unique_call 2178} KeInitializeTimer(0);
    call {:si_unique_call 2179} KeInitializeTimer(0);
    call {:si_unique_call 2180} KeInitializeTimer(0);
    call {:si_unique_call 2181} KeInitializeTimer(0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2182} KeInitializeDpc(CompleteWriteDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant220, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2183} KeInitializeDpc(CompleteReadDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant139, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2184} KeInitializeDpc(TotalReadTimeoutDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant143, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2185} KeInitializeDpc(IntervalReadTimeoutDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant145, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2186} KeInitializeDpc(TotalWriteTimeoutDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant222, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2187} KeInitializeDpc(CommErrorDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant112, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2188} KeInitializeDpc(CompleteImmediateDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant353, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2189} KeInitializeDpc(TotalImmediateTimeoutDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant355, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2190} KeInitializeDpc(CommWaitDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant200, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2191} KeInitializeDpc(XoffCountTimeoutDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant224, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2192} KeInitializeDpc(XoffCountCompleteDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant223, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2193} KeInitializeDpc(StartTimerLowerRTSDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant390, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2194} KeInitializeDpc(PerhapsLowerRTSDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant391, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2195} KeInitializeDpc(IsrUnlockPagesDpc__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant179, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2196} KeInitializeDpc(SetPendingDpcEvent__SERIAL_DEVICE_EXTENSION(pDevExt_16), li2bplFunctionConstant174, 0);
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    havoc Tmp_1123;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_211;
    havoc vslice_dummy_var_212;
    havoc vslice_dummy_var_213;
    havoc vslice_dummy_var_214;
    call {:si_unique_call 2197} sdv_792 := SerialGetMappedAddress(vslice_dummy_var_211, vslice_dummy_var_212, vslice_dummy_var_213, vslice_dummy_var_214, Tmp_1123, UnMapRegisters__SERIAL_DEVICE_EXTENSION(pDevExt_16));
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    havoc Tmp_1134;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_215;
    havoc vslice_dummy_var_216;
    havoc vslice_dummy_var_217;
    havoc vslice_dummy_var_218;
    call {:si_unique_call 2198} sdv_781 := SerialGetMappedAddress(vslice_dummy_var_215, vslice_dummy_var_216, vslice_dummy_var_217, vslice_dummy_var_218, Tmp_1134, UnMapStatus__SERIAL_DEVICE_EXTENSION(pDevExt_16));
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L113;

  L113:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L154;

  L154:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L174;

  L174:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L177;

  L177:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_219;
    havoc vslice_dummy_var_220;
    call {:si_unique_call 2199} sdv_786 := SerialDoesPortExist(pDevExt_16, DeviceName__SERIAL_DEVICE_EXTENSION(pDevExt_16), vslice_dummy_var_219, vslice_dummy_var_220);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} sdv_786 != 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    Tmp_1125 := strConst__li2bpl285;
    call {:si_unique_call 2200} vslice_dummy_var_530 := SerialDbgPrintEx(3, Tmp_1125);
    status_36 := -1073741810;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc Tmp_1136;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} PDevObj_15 != 0;
    assume PDevObj_15 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_221;
    havoc vslice_dummy_var_222;
    havoc vslice_dummy_var_223;
    call {:si_unique_call 2201} SerialLogError(vslice_dummy_var_221, PDevObj_15, vslice_dummy_var_222, Tmp_1128, 0, 0, 0, 57, 0, -1073348574, Tmp_1136, vslice_dummy_var_223, 0, 0);
    goto L139;

  L139:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_36 >= 0;
    goto L141;

  L141:
    Tmp_1121 := status_36;
    goto L1;

  anon81_Then:
    assume {:partition} 0 > status_36;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} allocedISRSw != 0;
    call {:si_unique_call 2202} sdv_ExFreePool(0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L142;

  L142:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_224;
    call {:si_unique_call 2203} MmUnmapIoSpace(0, vslice_dummy_var_224);
    goto L147;

  L147:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_225;
    call {:si_unique_call 2204} MmUnmapIoSpace(0, vslice_dummy_var_225);
    goto L141;

  anon84_Then:
    goto L141;

  anon83_Then:
    goto L147;

  anon82_Then:
    assume {:partition} allocedISRSw == 0;
    goto L142;

  anon87_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2205} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2206} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 2207} boogieTmp := corral_nondet();
    Tmp_1137 := strConst__li2bpl287;
    call {:si_unique_call 2208} vslice_dummy_var_531 := SerialDbgPrintEx(4, Tmp_1137);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_226;
    call {:si_unique_call 2209} sdv_770 := SerialGetDivisorFromBaud(vslice_dummy_var_226, 75, junk);
    call {:si_unique_call 2210} sdv_773 := sdv_NT_ERROR(sdv_770);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} sdv_773 != 0;
    goto L218;

  L218:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_227;
    call {:si_unique_call 2211} sdv_795 := SerialGetDivisorFromBaud(vslice_dummy_var_227, 110, junk);
    call {:si_unique_call 2212} sdv_799 := sdv_NT_ERROR(sdv_795);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} sdv_799 != 0;
    goto L226;

  L226:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_228;
    call {:si_unique_call 2213} sdv_803 := SerialGetDivisorFromBaud(vslice_dummy_var_228, 135, junk);
    call {:si_unique_call 2214} sdv_769 := sdv_NT_ERROR(sdv_803);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} sdv_769 != 0;
    goto L234;

  L234:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_229;
    call {:si_unique_call 2215} sdv_779 := SerialGetDivisorFromBaud(vslice_dummy_var_229, 150, junk);
    call {:si_unique_call 2216} sdv_790 := sdv_NT_ERROR(sdv_779);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} sdv_790 != 0;
    goto L242;

  L242:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_230;
    call {:si_unique_call 2217} sdv_782 := SerialGetDivisorFromBaud(vslice_dummy_var_230, 300, junk);
    call {:si_unique_call 2218} sdv_775 := sdv_NT_ERROR(sdv_782);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} sdv_775 != 0;
    goto L250;

  L250:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_231;
    call {:si_unique_call 2219} sdv_806 := SerialGetDivisorFromBaud(vslice_dummy_var_231, 600, junk);
    call {:si_unique_call 2220} sdv_776 := sdv_NT_ERROR(sdv_806);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} sdv_776 != 0;
    goto L258;

  L258:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_232;
    call {:si_unique_call 2221} sdv_810 := SerialGetDivisorFromBaud(vslice_dummy_var_232, 1200, junk);
    call {:si_unique_call 2222} sdv_772 := sdv_NT_ERROR(sdv_810);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} sdv_772 != 0;
    goto L266;

  L266:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_233;
    call {:si_unique_call 2223} sdv_797 := SerialGetDivisorFromBaud(vslice_dummy_var_233, 1800, junk);
    call {:si_unique_call 2224} sdv_804 := sdv_NT_ERROR(sdv_797);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} sdv_804 != 0;
    goto L274;

  L274:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_234;
    call {:si_unique_call 2225} sdv_763 := SerialGetDivisorFromBaud(vslice_dummy_var_234, 2400, junk);
    call {:si_unique_call 2226} sdv_780 := sdv_NT_ERROR(sdv_763);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} sdv_780 != 0;
    goto L282;

  L282:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_235;
    call {:si_unique_call 2227} sdv_800 := SerialGetDivisorFromBaud(vslice_dummy_var_235, 4800, junk);
    call {:si_unique_call 2228} sdv_767 := sdv_NT_ERROR(sdv_800);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} sdv_767 != 0;
    goto L290;

  L290:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_236;
    call {:si_unique_call 2229} sdv_789 := SerialGetDivisorFromBaud(vslice_dummy_var_236, 7200, junk);
    call {:si_unique_call 2230} sdv_796 := sdv_NT_ERROR(sdv_789);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} sdv_796 != 0;
    goto L298;

  L298:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_237;
    call {:si_unique_call 2231} sdv_761 := SerialGetDivisorFromBaud(vslice_dummy_var_237, 9600, junk);
    call {:si_unique_call 2232} sdv_774 := sdv_NT_ERROR(sdv_761);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} sdv_774 != 0;
    goto L306;

  L306:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_238;
    call {:si_unique_call 2233} sdv_766 := SerialGetDivisorFromBaud(vslice_dummy_var_238, 14400, junk);
    call {:si_unique_call 2234} sdv_777 := sdv_NT_ERROR(sdv_766);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} sdv_777 != 0;
    goto L314;

  L314:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_239;
    call {:si_unique_call 2235} sdv_771 := SerialGetDivisorFromBaud(vslice_dummy_var_239, 19200, junk);
    call {:si_unique_call 2236} sdv_794 := sdv_NT_ERROR(sdv_771);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} sdv_794 != 0;
    goto L322;

  L322:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_240;
    call {:si_unique_call 2237} sdv_762 := SerialGetDivisorFromBaud(vslice_dummy_var_240, 38400, junk);
    call {:si_unique_call 2238} sdv_764 := sdv_NT_ERROR(sdv_762);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} sdv_764 != 0;
    goto L330;

  L330:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_241;
    call {:si_unique_call 2239} sdv_807 := SerialGetDivisorFromBaud(vslice_dummy_var_241, 56000, junk);
    call {:si_unique_call 2240} sdv_768 := sdv_NT_ERROR(sdv_807);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_768 != 0;
    goto L338;

  L338:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_242;
    call {:si_unique_call 2241} sdv_805 := SerialGetDivisorFromBaud(vslice_dummy_var_242, 57600, junk);
    call {:si_unique_call 2242} sdv_785 := sdv_NT_ERROR(sdv_805);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} sdv_785 != 0;
    goto L346;

  L346:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_243;
    call {:si_unique_call 2243} sdv_801 := SerialGetDivisorFromBaud(vslice_dummy_var_243, 115200, junk);
    call {:si_unique_call 2244} sdv_808 := sdv_NT_ERROR(sdv_801);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} sdv_808 != 0;
    goto L354;

  L354:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_244;
    call {:si_unique_call 2245} sdv_783 := SerialGetDivisorFromBaud(vslice_dummy_var_244, 128000, junk);
    call {:si_unique_call 2246} sdv_798 := sdv_NT_ERROR(sdv_783);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} sdv_798 != 0;
    goto L362;

  L362:
    call {:si_unique_call 2247} SetDeviceIsOpened(pDevExt_16, 0, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L139;

  anon106_Then:
    assume {:partition} sdv_798 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L362;

  anon105_Then:
    assume {:partition} sdv_808 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L354;

  anon104_Then:
    assume {:partition} sdv_785 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L346;

  anon103_Then:
    assume {:partition} sdv_768 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L338;

  anon102_Then:
    assume {:partition} sdv_764 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L330;

  anon101_Then:
    assume {:partition} sdv_794 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L322;

  anon100_Then:
    assume {:partition} sdv_777 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L314;

  anon99_Then:
    assume {:partition} sdv_774 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L306;

  anon98_Then:
    assume {:partition} sdv_796 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L298;

  anon97_Then:
    assume {:partition} sdv_767 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L290;

  anon96_Then:
    assume {:partition} sdv_780 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L282;

  anon95_Then:
    assume {:partition} sdv_804 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L274;

  anon94_Then:
    assume {:partition} sdv_772 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L266;

  anon93_Then:
    assume {:partition} sdv_776 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L258;

  anon92_Then:
    assume {:partition} sdv_775 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L250;

  anon91_Then:
    assume {:partition} sdv_790 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L242;

  anon90_Then:
    assume {:partition} sdv_769 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L234;

  anon89_Then:
    assume {:partition} sdv_799 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L226;

  anon88_Then:
    assume {:partition} sdv_773 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L218;

  anon86_Then:
    assume {:partition} sdv_786 == 0;
    Tmp_1135 := strConst__li2bpl284;
    call {:si_unique_call 2248} vslice_dummy_var_532 := SerialDbgPrintEx(1, Tmp_1135);
    status_36 := -1073741810;
    goto L139;

  anon85_Then:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L177;

  anon107_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L174;

  anon108_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L174;

  anon109_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L174;

  anon113_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L174;

  anon79_Then:
    goto L154;

  anon112_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc Tmp_1138;
    assume {:nonnull} Tmp_1130 != 0;
    assume Tmp_1130 > 0;
    assume {:nonnull} Tmp_1130 != 0;
    assume Tmp_1130 > 0;
    assume {:nonnull} Tmp_1130 != 0;
    assume Tmp_1130 > 0;
    assume {:nonnull} Tmp_1130 != 0;
    assume Tmp_1130 > 0;
    assume {:nonnull} Tmp_1130 != 0;
    assume Tmp_1130 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} PDevObj_15 != 0;
    assume PDevObj_15 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_245;
    havoc vslice_dummy_var_246;
    havoc vslice_dummy_var_247;
    call {:si_unique_call 2249} SerialLogError(vslice_dummy_var_245, PDevObj_15, vslice_dummy_var_246, Tmp_1130, 0, 0, 0, 8, 0, -1073348598, Tmp_1138, vslice_dummy_var_247, 0, 0);
    Tmp_1124 := strConst__li2bpl283;
    call {:si_unique_call 2250} vslice_dummy_var_533 := SerialDbgPrintEx(1, Tmp_1124);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    havoc vslice_dummy_var_248;
    call {:si_unique_call 2251} MmUnmapIoSpace(0, vslice_dummy_var_248);
    goto L131;

  L131:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    status_36 := -1073741709;
    goto L139;

  anon80_Then:
    goto L131;

  anon111_Then:
    goto L113;

  anon110_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc Tmp_1133;
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    assume {:nonnull} PConfigData_2 != 0;
    assume PConfigData_2 > 0;
    assume {:nonnull} PDevObj_15 != 0;
    assume PDevObj_15 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_249;
    havoc vslice_dummy_var_250;
    havoc vslice_dummy_var_251;
    havoc vslice_dummy_var_252;
    call {:si_unique_call 2252} SerialLogError(vslice_dummy_var_249, vslice_dummy_var_250, vslice_dummy_var_251, Tmp_1142, 0, 0, 0, 7, 0, -1073348598, Tmp_1133, vslice_dummy_var_252, 0, 0);
    Tmp_1122 := strConst__li2bpl286;
    call {:si_unique_call 2253} vslice_dummy_var_534 := SerialDbgPrintEx(1, Tmp_1122);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    status_36 := -1073741709;
    goto L139;

  anon78_Then:
    call {:si_unique_call 2254} sdv_793 := ExAllocatePoolWithTag(0, 16, -666022077);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc Tmp_1129;
    assume {:nonnull} Tmp_1129 != 0;
    assume Tmp_1129 > 0;
    call {:si_unique_call 2255} InitializeListHead(SharerList__SERIAL_CISR_SW(Tmp_1129));
    allocedISRSw := 1;
    goto L36;

  anon114_Then:
    Tmp_1121 := -1073741670;
    goto L1;
}



procedure {:origName "_sdv_init14"} _sdv_init14();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init14"} _sdv_init14()
{
  var vslice_dummy_var_535: int;

  anon0:
    call {:si_unique_call 2256} vslice_dummy_var_535 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init16"} _sdv_init16();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init16"} _sdv_init16()
{
  var vslice_dummy_var_536: int;

  anon0:
    call {:si_unique_call 2257} vslice_dummy_var_536 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialStartRead"} SerialStartRead(actual_Extension_15: int) returns (Tmp_1147: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialStartRead"} SerialStartRead(actual_Extension_15: int) returns (Tmp_1147: int)
{
  var {:pointer} Tmp_1148: int;
  var {:scalar} localStatus: int;
  var {:pointer} s_p_e_c_i_a_l_15: int;
  var {:pointer} sdv_811: int;
  var {:pointer} sdv_812: int;
  var {:pointer} Tmp_1149: int;
  var {:scalar} totalTime: int;
  var {:pointer} Tmp_1150: int;
  var {:scalar} os2ssreturn: int;
  var {:scalar} updateChar: int;
  var {:scalar} timeoutsForIrp: int;
  var {:scalar} setFirstStatus: int;
  var {:scalar} useTotalTimer: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_1151: int;
  var {:scalar} multiplierVal: int;
  var {:scalar} crunchDownToOne: int;
  var {:pointer} sdv_817: int;
  var {:pointer} Tmp_1152: int;
  var {:scalar} s_p_e_c_i_a_l_16: int;
  var {:scalar} oldIrql_6: int;
  var {:pointer} sdv_819: int;
  var {:pointer} Tmp_1153: int;
  var {:pointer} s_p_e_c_i_a_l_17: int;
  var {:scalar} constantVal: int;
  var {:pointer} Tmp_1154: int;
  var {:pointer} Tmp_1155: int;
  var {:pointer} sdv_823: int;
  var {:pointer} Tmp_1156: int;
  var {:scalar} controlIrql: int;
  var {:pointer} Tmp_1157: int;
  var {:scalar} s_p_e_c_i_a_l_18: int;
  var {:scalar} returnWithWhatsPresent: int;
  var {:scalar} useIntervalTimer: int;
  var {:pointer} sdv_826: int;
  var {:scalar} firstStatus: int;
  var {:pointer} Extension_15: int;
  var boogieTmp: int;
  var vslice_dummy_var_537: int;
  var vslice_dummy_var_538: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_542: int;
  var vslice_dummy_var_543: int;
  var vslice_dummy_var_544: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;

  anon0:
    call {:si_unique_call 2258} totalTime := __HAVOC_malloc(20);
    call {:si_unique_call 2259} updateChar := __HAVOC_malloc(12);
    call {:si_unique_call 2260} timeoutsForIrp := __HAVOC_malloc(20);
    call {:si_unique_call 2261} newIrp := __HAVOC_malloc(4);
    Extension_15 := actual_Extension_15;
    call {:si_unique_call 2262} Tmp_1150 := __HAVOC_malloc(84);
    call {:si_unique_call 2263} Tmp_1153 := __HAVOC_malloc(88);
    setFirstStatus := 0;
    Tmp_1153 := strConst__li2bpl289;
    call {:si_unique_call 2264} vslice_dummy_var_540 := SerialDbgPrintEx(2, Tmp_1153);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto L23;

  L23:
    call {:si_unique_call 2265} Tmp_1148, localStatus, sdv_811, Tmp_1149, os2ssreturn, setFirstStatus, useTotalTimer, Tmp_1151, multiplierVal, crunchDownToOne, sdv_817, Tmp_1152, oldIrql_6, sdv_819, constantVal, Tmp_1154, Tmp_1155, controlIrql, Tmp_1157, returnWithWhatsPresent, useIntervalTimer, sdv_826, firstStatus, boogieTmp, vslice_dummy_var_537, vslice_dummy_var_538, vslice_dummy_var_539, vslice_dummy_var_542 := SerialStartRead_loop_L23(Tmp_1148, localStatus, sdv_811, Tmp_1149, totalTime, os2ssreturn, updateChar, timeoutsForIrp, setFirstStatus, useTotalTimer, newIrp, Tmp_1151, multiplierVal, crunchDownToOne, sdv_817, Tmp_1152, oldIrql_6, sdv_819, constantVal, Tmp_1154, Tmp_1155, controlIrql, Tmp_1157, returnWithWhatsPresent, useIntervalTimer, sdv_826, firstStatus, Extension_15, boogieTmp, vslice_dummy_var_537, vslice_dummy_var_538, vslice_dummy_var_539, vslice_dummy_var_542);
    goto L23_last;

  L23_last:
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc vslice_dummy_var_259;
    call {:si_unique_call 2296} sdv_817 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_259);
    assume {:nonnull} sdv_817 != 0;
    assume sdv_817 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 2266} localStatus := SerialResizeBuffer(Extension_15);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  L37:
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    call {:si_unique_call 2267} SerialGetNextIrp(CurrentReadIrp__SERIAL_DEVICE_EXTENSION(Extension_15), ReadQueue__SERIAL_DEVICE_EXTENSION(Extension_15), newIrp, 1, Extension_15);
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_1150 := strConst__li2bpl288;
    call {:si_unique_call 2268} vslice_dummy_var_541 := SerialDbgPrintEx(2, Tmp_1150);
    Tmp_1147 := firstStatus;
    goto L1;

  L1:
    return;

  anon61_Then:
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    assume false;
    return;

  anon60_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := localStatus;
    setFirstStatus := 1;
    goto L37;

  anon59_Then:
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc vslice_dummy_var_253;
    call {:si_unique_call 2269} sdv_819 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_253);
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} sdv_819 != 0;
    assume sdv_819 > 0;
    useTotalTimer := 0;
    returnWithWhatsPresent := 0;
    os2ssreturn := 0;
    crunchDownToOne := 0;
    useIntervalTimer := 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    call {:si_unique_call 2270} vslice_dummy_var_542 := SerialCancelTimer(ReadRequestTotalTimer__SERIAL_DEVICE_EXTENSION(Extension_15), Extension_15);
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    call {:si_unique_call 2271} vslice_dummy_var_537 := SerialCancelTimer(ReadRequestIntervalTimer__SERIAL_DEVICE_EXTENSION(Extension_15), Extension_15);
    call {:si_unique_call 2272} Tmp_1148 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1148 != 0;
    assume Tmp_1148 > 0;
    call {:si_unique_call 2273} sdv_KeAcquireSpinLock(0, Tmp_1148);
    assume {:nonnull} Tmp_1148 != 0;
    assume Tmp_1148 > 0;
    havoc controlIrql;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    call {:si_unique_call 2274} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    useIntervalTimer := 1;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    goto L66;

  L66:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L76;

  L76:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L83;

  L83:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} useTotalTimer != 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} totalTime != 0;
    assume totalTime > 0;
    goto L84;

  L84:
    call {:si_unique_call 2275} Tmp_1148 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1148 != 0;
    assume Tmp_1148 > 0;
    call {:si_unique_call 2276} sdv_KeAcquireSpinLock(0, Tmp_1148);
    assume {:nonnull} Tmp_1148 != 0;
    assume Tmp_1148 > 0;
    havoc controlIrql;
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    call {:si_unique_call 2277} boogieTmp := SerialGetCharsFromIntBuffer(Extension_15);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} returnWithWhatsPresent != 0;
    goto L94;

  L94:
    call {:si_unique_call 2278} vslice_dummy_var_538 := KeSynchronizeExecution(0, li2bplFunctionConstant137, 0);
    call {:si_unique_call 2279} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc Tmp_1151;
    assume {:nonnull} Tmp_1151 != 0;
    assume Tmp_1151 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L37;

  anon83_Then:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  anon72_Then:
    assume {:partition} returnWithWhatsPresent == 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} os2ssreturn != 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc Tmp_1154;
    assume {:nonnull} Tmp_1154 != 0;
    assume Tmp_1154 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L105;

  L105:
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc vslice_dummy_var_254;
    call {:si_unique_call 2280} sdv_826 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_254);
    assume {:nonnull} sdv_826 != 0;
    assume sdv_826 > 0;
    call {:si_unique_call 2281} Tmp_1148 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1148 != 0;
    assume Tmp_1148 > 0;
    call {:si_unique_call 2282} IoAcquireCancelSpinLock(Tmp_1148);
    assume {:nonnull} Tmp_1148 != 0;
    assume Tmp_1148 > 0;
    havoc oldIrql_6;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc Tmp_1152;
    assume {:nonnull} Tmp_1152 != 0;
    assume Tmp_1152 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 2283} IoReleaseCancelSpinLock(oldIrql_6);
    call {:si_unique_call 2284} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc Tmp_1149;
    assume {:nonnull} Tmp_1149 != 0;
    assume Tmp_1149 > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc Tmp_1157;
    assume {:nonnull} Tmp_1157 != 0;
    assume Tmp_1157 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := -1073741536;
    setFirstStatus := 1;
    goto L37;

  anon86_Then:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  anon85_Then:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} crunchDownToOne != 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc vslice_dummy_var_255;
    call {:si_unique_call 2285} sdv_811 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_255);
    assume {:nonnull} sdv_811 != 0;
    assume sdv_811 > 0;
    goto L126;

  L126:
    call {:si_unique_call 2286} vslice_dummy_var_539 := KeSynchronizeExecution(0, li2bplFunctionConstant138, 0);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 2287} IoReleaseCancelSpinLock(oldIrql_6);
    call {:si_unique_call 2288} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc Tmp_1155;
    assume {:nonnull} Tmp_1155 != 0;
    assume Tmp_1155 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L37;

  anon87_Then:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  anon76_Then:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} useTotalTimer != 0;
    s_p_e_c_i_a_l_16 := 4;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc vslice_dummy_var_256;
    call {:si_unique_call 2289} sdv_812 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_256);
    assume {:nonnull} sdv_812 != 0;
    assume sdv_812 > 0;
    s_p_e_c_i_a_l_15 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_812)));
    assume {:nonnull} s_p_e_c_i_a_l_15 != 0;
    assume s_p_e_c_i_a_l_15 > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    call {:si_unique_call 2290} vslice_dummy_var_543 := SerialSetTimer(ReadRequestTotalTimer__SERIAL_DEVICE_EXTENSION(Extension_15), totalTime, TotalReadTimeoutDpc__SERIAL_DEVICE_EXTENSION(Extension_15), Extension_15);
    goto L146;

  L146:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} useIntervalTimer != 0;
    s_p_e_c_i_a_l_18 := 8;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc vslice_dummy_var_257;
    call {:si_unique_call 2291} sdv_823 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_257);
    assume {:nonnull} sdv_823 != 0;
    assume sdv_823 > 0;
    s_p_e_c_i_a_l_17 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_823)));
    assume {:nonnull} s_p_e_c_i_a_l_17 != 0;
    assume s_p_e_c_i_a_l_17 > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc Tmp_1156;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} Tmp_1156 != 0;
    assume Tmp_1156 > 0;
    havoc vslice_dummy_var_258;
    call {:si_unique_call 2292} vslice_dummy_var_544 := SerialSetTimer(ReadRequestIntervalTimer__SERIAL_DEVICE_EXTENSION(Extension_15), vslice_dummy_var_258, IntervalReadTimeoutDpc__SERIAL_DEVICE_EXTENSION(Extension_15), Extension_15);
    goto L158;

  L158:
    call {:si_unique_call 2293} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 2294} IoReleaseCancelSpinLock(oldIrql_6);
    call {:si_unique_call 2295} sdv_KeReleaseSpinLock(0, controlIrql);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} setFirstStatus != 0;
    goto L183;

  L183:
    Tmp_1147 := firstStatus;
    goto L1;

  anon79_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 259;
    goto L183;

  anon78_Then:
    assume {:partition} useIntervalTimer == 0;
    goto L158;

  anon77_Then:
    assume {:partition} useTotalTimer == 0;
    goto L146;

  anon75_Then:
    assume {:partition} crunchDownToOne == 0;
    goto L126;

  anon84_Then:
    goto L94;

  anon74_Then:
    assume {:partition} os2ssreturn == 0;
    goto L105;

  anon73_Then:
    goto L94;

  anon71_Then:
    assume {:partition} useTotalTimer == 0;
    goto L84;

  anon70_Then:
    goto L77;

  L77:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    crunchDownToOne := 1;
    multiplierVal := 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L83;

  anon80_Then:
    goto L83;

  anon69_Then:
    goto L83;

  anon68_Then:
    goto L77;

  anon66_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    returnWithWhatsPresent := 1;
    goto L83;

  anon67_Then:
    goto L76;

  anon63_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L192;

  L192:
    useTotalTimer := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L83;

  anon65_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L192;

  anon81_Then:
    goto L83;

  anon82_Then:
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    goto L66;

  anon64_Then:
    goto L66;

  anon62_Then:
    goto L66;
}



procedure {:origName "SerialMoveToNewIntBuffer"} SerialMoveToNewIntBuffer(actual_Extension_16: int, actual_NewBuffer: int) returns (Tmp_1158: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialMoveToNewIntBuffer"} SerialMoveToNewIntBuffer(actual_Extension_16: int, actual_NewBuffer: int) returns (Tmp_1158: int)
{
  var {:scalar} firstTryNumberToGet: int;
  var {:scalar} numberOfCharsMoved: int;
  var {:scalar} Tmp_1161: int;
  var {:pointer} Extension_16: int;
  var {:pointer} NewBuffer: int;

  anon0:
    Extension_16 := actual_Extension_16;
    NewBuffer := actual_NewBuffer;
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    havoc numberOfCharsMoved;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} numberOfCharsMoved != 0;
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    havoc firstTryNumberToGet;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} firstTryNumberToGet >= numberOfCharsMoved;
    call {:si_unique_call 2297} sdv_RtlMoveMemory(0, 0, numberOfCharsMoved);
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    goto L6;

  L6:
    Tmp_1158 := numberOfCharsMoved;
    return;

  anon7_Then:
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    goto L6;

  anon9_Then:
    assume {:partition} numberOfCharsMoved > firstTryNumberToGet;
    call {:si_unique_call 2298} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet);
    Tmp_1161 := numberOfCharsMoved - firstTryNumberToGet;
    call {:si_unique_call 2299} sdv_RtlMoveMemory(0, 0, Tmp_1161);
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    goto L6;

  anon8_Then:
    assume {:partition} numberOfCharsMoved == 0;
    goto L6;
}



procedure {:origName "SerialRead"} SerialRead(actual_DeviceObject_20: int, actual_Irp_16: int) returns (Tmp_1162: int);
  modifies alloc, yogi_error, markedPending, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialRead"} SerialRead(actual_DeviceObject_20: int, actual_Irp_16: int) returns (Tmp_1162: int)
{
  var {:pointer} Tmp_1163: int;
  var {:pointer} Tmp_1164: int;
  var {:pointer} Tmp_1165: int;
  var {:scalar} sdv_829: int;
  var {:pointer} Tmp_1167: int;
  var {:pointer} sdv_831: int;
  var {:pointer} Tmp_1168: int;
  var {:pointer} Tmp_1169: int;
  var {:pointer} Tmp_1170: int;
  var {:pointer} Tmp_1171: int;
  var {:scalar} status_37: int;
  var {:pointer} extension: int;
  var {:pointer} DeviceObject_20: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_545: int;
  var vslice_dummy_var_546: int;
  var vslice_dummy_var_547: int;
  var vslice_dummy_var_548: int;
  var vslice_dummy_var_549: int;
  var vslice_dummy_var_550: int;
  var vslice_dummy_var_551: int;
  var vslice_dummy_var_552: int;

  anon0:
    DeviceObject_20 := actual_DeviceObject_20;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 2300} Tmp_1163 := __HAVOC_malloc(96);
    call {:si_unique_call 2301} Tmp_1164 := __HAVOC_malloc(80);
    call {:si_unique_call 2302} Tmp_1165 := __HAVOC_malloc(84);
    call {:si_unique_call 2303} Tmp_1167 := __HAVOC_malloc(80);
    call {:si_unique_call 2304} Tmp_1168 := __HAVOC_malloc(80);
    call {:si_unique_call 2305} Tmp_1169 := __HAVOC_malloc(80);
    call {:si_unique_call 2306} Tmp_1170 := __HAVOC_malloc(72);
    call {:si_unique_call 2307} Tmp_1171 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc extension;
    Tmp_1165 := strConst__li2bpl294;
    call {:si_unique_call 2308} vslice_dummy_var_545 := SerialDbgPrintEx(2, Tmp_1165);
    call {:si_unique_call 2309} status_37 := SerialIRPPrologue(Irp_16, extension);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_37 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_37 != 259;
    Tmp_1170 := strConst__li2bpl2;
    call {:si_unique_call 2310} vslice_dummy_var_546 := SerialDbgPrintEx(9, Tmp_1170);
    call {:si_unique_call 2311} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2312} SerialIRPEpilogue(extension);
    goto L19;

  L19:
    Tmp_1167 := strConst__li2bpl290;
    call {:si_unique_call 2313} vslice_dummy_var_547 := SerialDbgPrintEx(2, Tmp_1167);
    Tmp_1162 := status_37;
    goto L1;

  L1:
    call {:si_unique_call 2314} SLIC_SerialRead_exit(strConst__li2bpl0, Tmp_1162);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} status_37 == 259;
    goto L19;

  anon11_Then:
    assume {:partition} status_37 == 0;
    Tmp_1163 := strConst__li2bpl1;
    call {:si_unique_call 2315} vslice_dummy_var_548 := SerialDbgPrintEx(9, Tmp_1163);
    call {:si_unique_call 2316} sdv_829 := SerialCompleteIfError(DeviceObject_20, Irp_16);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_829 != 0;
    Tmp_1168 := strConst__li2bpl291;
    call {:si_unique_call 2317} vslice_dummy_var_549 := SerialDbgPrintEx(2, Tmp_1168);
    Tmp_1162 := -1073741536;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_829 == 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 2318} sdv_831 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} sdv_831 != 0;
    assume sdv_831 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 2319} status_37 := SerialStartOrQueue(extension, Irp_16, ReadQueue__SERIAL_DEVICE_EXTENSION(extension), CurrentReadIrp__SERIAL_DEVICE_EXTENSION(extension), li2bplFunctionConstant136);
    Tmp_1164 := strConst__li2bpl292;
    call {:si_unique_call 2320} vslice_dummy_var_550 := SerialDbgPrintEx(2, Tmp_1164);
    Tmp_1162 := status_37;
    goto L1;

  anon14_Then:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Tmp_1171 := strConst__li2bpl2;
    call {:si_unique_call 2321} vslice_dummy_var_551 := SerialDbgPrintEx(9, Tmp_1171);
    call {:si_unique_call 2322} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2323} SerialIRPEpilogue(extension);
    Tmp_1169 := strConst__li2bpl293;
    call {:si_unique_call 2324} vslice_dummy_var_552 := SerialDbgPrintEx(2, Tmp_1169);
    Tmp_1162 := 0;
    goto L1;
}



procedure {:origName "SerialGetCharsFromIntBuffer"} SerialGetCharsFromIntBuffer(actual_Extension_17: int) returns (Tmp_1172: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetCharsFromIntBuffer"} SerialGetCharsFromIntBuffer(actual_Extension_17: int) returns (Tmp_1172: int)
{
  var {:scalar} numberOfCharsToGet: int;
  var {:scalar} firstTryNumberToGet_1: int;
  var {:pointer} Tmp_1175: int;
  var {:pointer} Tmp_1176: int;
  var {:pointer} Tmp_1177: int;
  var {:scalar} Tmp_1179: int;
  var {:pointer} Tmp_1180: int;
  var {:pointer} Tmp_1181: int;
  var {:pointer} Extension_17: int;
  var vslice_dummy_var_553: int;
  var vslice_dummy_var_554: int;
  var vslice_dummy_var_555: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;

  anon0:
    Extension_17 := actual_Extension_17;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc numberOfCharsToGet;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc numberOfCharsToGet;
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} numberOfCharsToGet != 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc firstTryNumberToGet_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} firstTryNumberToGet_1 > numberOfCharsToGet;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_260;
    call {:si_unique_call 2325} vslice_dummy_var_554 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_260);
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_1181;
    assume {:nonnull} Tmp_1181 != 0;
    assume Tmp_1181 > 0;
    call {:si_unique_call 2326} sdv_RtlMoveMemory(0, 0, numberOfCharsToGet);
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto L9;

  L9:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_1177;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_1175;
    assume {:nonnull} Tmp_1175 != 0;
    assume Tmp_1175 > 0;
    assume {:nonnull} Tmp_1177 != 0;
    assume Tmp_1177 > 0;
    Tmp_1172 := numberOfCharsToGet;
    return;

  anon12_Then:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto L9;

  anon11_Then:
    assume {:partition} numberOfCharsToGet >= firstTryNumberToGet_1;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_261;
    call {:si_unique_call 2327} vslice_dummy_var_553 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_261);
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_1180;
    assume {:nonnull} Tmp_1180 != 0;
    assume Tmp_1180 > 0;
    call {:si_unique_call 2328} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet_1);
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    Tmp_1179 := numberOfCharsToGet - firstTryNumberToGet_1;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_262;
    call {:si_unique_call 2329} vslice_dummy_var_555 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_262);
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_1176;
    assume {:nonnull} Tmp_1176 != 0;
    assume Tmp_1176 > 0;
    call {:si_unique_call 2330} sdv_RtlMoveMemory(0, 0, Tmp_1179);
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto L9;

  anon9_Then:
    assume {:partition} numberOfCharsToGet == 0;
    goto L9;

  anon10_Then:
    goto L7;
}



procedure {:origName "SerialResizeBuffer"} SerialResizeBuffer(actual_Extension_18: int) returns (Tmp_1183: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1183 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialResizeBuffer"} SerialResizeBuffer(actual_Extension_18: int) returns (Tmp_1183: int)
{
  var {:pointer} Tmp_1184: int;
  var {:pointer} irpSp_1: int;
  var {:pointer} newBuffer: int;
  var {:pointer} Tmp_1185: int;
  var {:pointer} rs: int;
  var {:pointer} Tmp_1186: int;
  var {:scalar} controlIrql_1: int;
  var {:scalar} rp: int;
  var {:pointer} Tmp_1187: int;
  var {:pointer} Extension_18: int;
  var boogieTmp: int;
  var vslice_dummy_var_556: int;
  var vslice_dummy_var_263: int;

  anon0:
    call {:si_unique_call 2331} rp := __HAVOC_malloc(20);
    Extension_18 := actual_Extension_18;
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    havoc Tmp_1186;
    assume {:nonnull} Tmp_1186 != 0;
    assume Tmp_1186 > 0;
    havoc rs;
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    havoc vslice_dummy_var_263;
    call {:si_unique_call 2332} irpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_263);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    havoc newBuffer;
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    havoc Tmp_1187;
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    havoc Tmp_1184;
    assume {:nonnull} Tmp_1184 != 0;
    assume Tmp_1184 > 0;
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    assume {:nonnull} rs != 0;
    assume rs > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rs != 0;
    assume rs > 0;
    call {:si_unique_call 2333} Tmp_1185 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1185 != 0;
    assume Tmp_1185 > 0;
    call {:si_unique_call 2334} sdv_KeAcquireSpinLock(0, Tmp_1185);
    assume {:nonnull} Tmp_1185 != 0;
    assume Tmp_1185 > 0;
    havoc controlIrql_1;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    call {:si_unique_call 2335} boogieTmp := SerialMoveToNewIntBuffer(Extension_18, newBuffer);
    call {:si_unique_call 2336} vslice_dummy_var_556 := KeSynchronizeExecution(0, li2bplFunctionConstant148, 0);
    call {:si_unique_call 2337} sdv_KeReleaseSpinLock(0, controlIrql_1);
    call {:si_unique_call 2338} sdv_ExFreePool(0);
    goto L20;

  L20:
    Tmp_1183 := 0;
    return;

  anon3_Then:
    call {:si_unique_call 2339} sdv_ExFreePool(0);
    goto L20;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_557: int;

  anon0:
    call {:si_unique_call 2340} vslice_dummy_var_557 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialCancelWait"} SerialCancelWait(actual_DeviceObject_21: int, actual_Irp_17: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialCancelWait"} SerialCancelWait(actual_DeviceObject_21: int, actual_Irp_17: int)
{
  var {:pointer} Tmp_1191: int;
  var {:pointer} Tmp_1193: int;
  var {:pointer} Extension_19: int;
  var {:pointer} DeviceObject_21: int;
  var {:pointer} Irp_17: int;
  var vslice_dummy_var_558: int;
  var vslice_dummy_var_559: int;
  var vslice_dummy_var_560: int;
  var vslice_dummy_var_264: int;

  anon0:
    call {:si_unique_call 2341} vslice_dummy_var_558 := __HAVOC_malloc(4);
    DeviceObject_21 := actual_DeviceObject_21;
    Irp_17 := actual_Irp_17;
    call {:si_unique_call 2342} Tmp_1191 := __HAVOC_malloc(84);
    call {:si_unique_call 2343} Tmp_1193 := __HAVOC_malloc(108);
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    havoc Extension_19;
    Tmp_1191 := strConst__li2bpl296;
    call {:si_unique_call 2344} vslice_dummy_var_559 := SerialDbgPrintEx(6, Tmp_1191);
    Tmp_1193 := strConst__li2bpl295;
    call {:si_unique_call 2345} vslice_dummy_var_560 := SerialDbgPrintEx(7, Tmp_1193);
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    havoc vslice_dummy_var_264;
    call {:si_unique_call 2346} SerialTryToCompleteCurrent#1(Extension_19, li2bplFunctionConstant199, vslice_dummy_var_264, -1073741536, CurrentWaitIrp__SERIAL_DEVICE_EXTENSION(Extension_19), 0, 0, 0, 0, 0, 2);
    return;
}



procedure {:origName "SerialStartMask"} SerialStartMask(actual_Extension_20: int) returns (Tmp_1194: int);
  modifies alloc, markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialStartMask"} SerialStartMask(actual_Extension_20: int) returns (Tmp_1194: int)
{
  var {:pointer} Tmp_1195: int;
  var {:pointer} s_p_e_c_i_a_l_19: int;
  var {:pointer} Tmp_1196: int;
  var {:scalar} FirstStatus_1: int;
  var {:pointer} Tmp_1197: int;
  var {:scalar} SetFirstStatus_1: int;
  var {:pointer} Tmp_1198: int;
  var {:pointer} Tmp_1199: int;
  var {:pointer} Tmp_1200: int;
  var {:pointer} Tmp_1201: int;
  var {:pointer} Tmp_1202: int;
  var {:pointer} Tmp_1203: int;
  var {:pointer} Tmp_1204: int;
  var {:pointer} IrpSp_3: int;
  var {:pointer} Tmp_1205: int;
  var {:scalar} OldIrql_8: int;
  var {:pointer} Tmp_1206: int;
  var {:pointer} NewIrp_4: int;
  var {:scalar} s_p_e_c_i_a_l_20: int;
  var {:pointer} Tmp_1207: int;
  var {:pointer} Tmp_1208: int;
  var {:pointer} Tmp_1209: int;
  var {:pointer} sdv_862: int;
  var {:pointer} Tmp_1210: int;
  var {:pointer} Tmp_1211: int;
  var {:pointer} sdv_865: int;
  var {:pointer} Tmp_1212: int;
  var {:pointer} Tmp_1213: int;
  var {:pointer} Extension_20: int;
  var vslice_dummy_var_561: int;
  var vslice_dummy_var_562: int;
  var vslice_dummy_var_563: int;
  var vslice_dummy_var_564: int;
  var vslice_dummy_var_565: int;
  var vslice_dummy_var_566: int;
  var vslice_dummy_var_567: int;
  var vslice_dummy_var_568: int;
  var vslice_dummy_var_569: int;
  var vslice_dummy_var_570: int;
  var vslice_dummy_var_571: int;
  var vslice_dummy_var_572: int;
  var vslice_dummy_var_573: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_575: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_577: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;

  anon0:
    call {:si_unique_call 2347} NewIrp_4 := __HAVOC_malloc(4);
    Extension_20 := actual_Extension_20;
    call {:si_unique_call 2348} Tmp_1195 := __HAVOC_malloc(128);
    call {:si_unique_call 2349} Tmp_1196 := __HAVOC_malloc(368);
    call {:si_unique_call 2350} Tmp_1197 := __HAVOC_malloc(160);
    call {:si_unique_call 2351} Tmp_1199 := __HAVOC_malloc(368);
    call {:si_unique_call 2352} Tmp_1202 := __HAVOC_malloc(288);
    call {:si_unique_call 2353} Tmp_1203 := __HAVOC_malloc(288);
    call {:si_unique_call 2354} Tmp_1205 := __HAVOC_malloc(120);
    call {:si_unique_call 2355} Tmp_1206 := __HAVOC_malloc(288);
    call {:si_unique_call 2356} Tmp_1207 := __HAVOC_malloc(80);
    call {:si_unique_call 2357} Tmp_1208 := __HAVOC_malloc(148);
    call {:si_unique_call 2358} Tmp_1209 := __HAVOC_malloc(284);
    call {:si_unique_call 2359} Tmp_1210 := __HAVOC_malloc(288);
    call {:si_unique_call 2360} Tmp_1212 := __HAVOC_malloc(368);
    call {:si_unique_call 2361} Tmp_1213 := __HAVOC_malloc(368);
    SetFirstStatus_1 := 0;
    Tmp_1207 := strConst__li2bpl304;
    call {:si_unique_call 2362} vslice_dummy_var_562 := SerialDbgPrintEx(6, Tmp_1207);
    goto L11;

  L11:
    call {:si_unique_call 2363} Tmp_1195, s_p_e_c_i_a_l_19, Tmp_1196, FirstStatus_1, Tmp_1197, SetFirstStatus_1, Tmp_1198, Tmp_1199, Tmp_1200, Tmp_1201, Tmp_1202, Tmp_1203, Tmp_1204, IrpSp_3, Tmp_1205, OldIrql_8, Tmp_1206, s_p_e_c_i_a_l_20, Tmp_1208, Tmp_1209, sdv_862, Tmp_1210, Tmp_1211, sdv_865, Tmp_1212, Tmp_1213, vslice_dummy_var_561, vslice_dummy_var_563, vslice_dummy_var_564, vslice_dummy_var_565, vslice_dummy_var_566, vslice_dummy_var_567, vslice_dummy_var_568, vslice_dummy_var_569, vslice_dummy_var_570, vslice_dummy_var_571, vslice_dummy_var_572, vslice_dummy_var_573, vslice_dummy_var_574, vslice_dummy_var_575, vslice_dummy_var_576, vslice_dummy_var_577 := SerialStartMask_loop_L11(Tmp_1195, s_p_e_c_i_a_l_19, Tmp_1196, FirstStatus_1, Tmp_1197, SetFirstStatus_1, Tmp_1198, Tmp_1199, Tmp_1200, Tmp_1201, Tmp_1202, Tmp_1203, Tmp_1204, IrpSp_3, Tmp_1205, OldIrql_8, Tmp_1206, NewIrp_4, s_p_e_c_i_a_l_20, Tmp_1208, Tmp_1209, sdv_862, Tmp_1210, Tmp_1211, sdv_865, Tmp_1212, Tmp_1213, Extension_20, vslice_dummy_var_561, vslice_dummy_var_563, vslice_dummy_var_564, vslice_dummy_var_565, vslice_dummy_var_566, vslice_dummy_var_567, vslice_dummy_var_568, vslice_dummy_var_569, vslice_dummy_var_570, vslice_dummy_var_571, vslice_dummy_var_572, vslice_dummy_var_573, vslice_dummy_var_574, vslice_dummy_var_575, vslice_dummy_var_576, vslice_dummy_var_577);
    goto L11_last;

  L11_last:
    Tmp_1195 := strConst__li2bpl297;
    call {:si_unique_call 2389} vslice_dummy_var_563 := SerialDbgPrintEx(7, Tmp_1195);
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc vslice_dummy_var_268;
    call {:si_unique_call 2390} IrpSp_3 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_268);
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Tmp_1205 := strConst__li2bpl298;
    call {:si_unique_call 2364} vslice_dummy_var_564 := SerialDbgPrintEx(7, Tmp_1205);
    call {:si_unique_call 2365} vslice_dummy_var_561 := KeSynchronizeExecution(0, li2bplFunctionConstant196, 0);
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_1211;
    assume {:nonnull} Tmp_1211 != 0;
    assume Tmp_1211 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    call {:si_unique_call 2366} SerialGetNextIrp(CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(Extension_20), MaskQueue__SERIAL_DEVICE_EXTENSION(Extension_20), NewIrp_4, 1, Extension_20);
    Tmp_1212 := strConst__li2bpl300;
    call {:si_unique_call 2367} vslice_dummy_var_565 := SerialDbgPrintEx(7, Tmp_1212);
    goto L37;

  L37:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    Tmp_1194 := FirstStatus_1;
    return;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_1203 := strConst__li2bpl299;
    call {:si_unique_call 2368} vslice_dummy_var_566 := SerialDbgPrintEx(7, Tmp_1203);
    FirstStatus_1 := 0;
    SetFirstStatus_1 := 1;
    goto L31;

  anon19_Then:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2369} Tmp_1201 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1201 != 0;
    assume Tmp_1201 > 0;
    call {:si_unique_call 2370} IoAcquireCancelSpinLock(Tmp_1201);
    assume {:nonnull} Tmp_1201 != 0;
    assume Tmp_1201 > 0;
    havoc OldIrql_8;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_1200;
    assume {:nonnull} Tmp_1200 != 0;
    assume Tmp_1200 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_1197 := strConst__li2bpl303;
    call {:si_unique_call 2371} vslice_dummy_var_570 := SerialDbgPrintEx(7, Tmp_1197);
    call {:si_unique_call 2372} IoReleaseCancelSpinLock(OldIrql_8);
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_1198;
    assume {:nonnull} Tmp_1198 != 0;
    assume Tmp_1198 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L64;

  L64:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    call {:si_unique_call 2373} SerialGetNextIrp(CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(Extension_20), MaskQueue__SERIAL_DEVICE_EXTENSION(Extension_20), NewIrp_4, 1, Extension_20);
    Tmp_1213 := strConst__li2bpl300;
    call {:si_unique_call 2374} vslice_dummy_var_571 := SerialDbgPrintEx(7, Tmp_1213);
    goto L37;

  anon27_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_1206 := strConst__li2bpl299;
    call {:si_unique_call 2375} vslice_dummy_var_572 := SerialDbgPrintEx(7, Tmp_1206);
    FirstStatus_1 := -1073741536;
    SetFirstStatus_1 := 1;
    goto L64;

  anon26_Then:
    Tmp_1208 := strConst__li2bpl302;
    call {:si_unique_call 2376} vslice_dummy_var_573 := SerialDbgPrintEx(7, Tmp_1208);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L76;

  L76:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc vslice_dummy_var_265;
    call {:si_unique_call 2377} sdv_862 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_265);
    assume {:nonnull} sdv_862 != 0;
    assume sdv_862 > 0;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc vslice_dummy_var_266;
    call {:si_unique_call 2378} vslice_dummy_var_574 := sdv_IoSetCancelRoutine(vslice_dummy_var_266, li2bplFunctionConstant197);
    s_p_e_c_i_a_l_20 := 2;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc vslice_dummy_var_267;
    call {:si_unique_call 2379} sdv_865 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_267);
    assume {:nonnull} sdv_865 != 0;
    assume sdv_865 > 0;
    s_p_e_c_i_a_l_19 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_865)));
    assume {:nonnull} s_p_e_c_i_a_l_19 != 0;
    assume s_p_e_c_i_a_l_19 > 0;
    call {:si_unique_call 2380} vslice_dummy_var_575 := KeSynchronizeExecution(0, li2bplFunctionConstant198, 0);
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    call {:si_unique_call 2381} SerialGetNextIrpLocked(CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(Extension_20), MaskQueue__SERIAL_DEVICE_EXTENSION(Extension_20), NewIrp_4, 0, Extension_20, OldIrql_8);
    Tmp_1196 := strConst__li2bpl300;
    call {:si_unique_call 2382} vslice_dummy_var_576 := SerialDbgPrintEx(7, Tmp_1196);
    goto L37;

  anon23_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_1210 := strConst__li2bpl299;
    call {:si_unique_call 2383} vslice_dummy_var_577 := SerialDbgPrintEx(7, Tmp_1210);
    FirstStatus_1 := 259;
    SetFirstStatus_1 := 1;
    call {:si_unique_call 2384} sdv_IoMarkIrpPending(0);
    goto L76;

  anon22_Then:
    goto L41;

  L41:
    Tmp_1209 := strConst__li2bpl301;
    call {:si_unique_call 2385} vslice_dummy_var_567 := SerialDbgPrintEx(7, Tmp_1209);
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_1204;
    assume {:nonnull} Tmp_1204 != 0;
    assume Tmp_1204 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L112;

  L112:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    call {:si_unique_call 2386} SerialGetNextIrp(CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(Extension_20), MaskQueue__SERIAL_DEVICE_EXTENSION(Extension_20), NewIrp_4, 1, Extension_20);
    Tmp_1199 := strConst__li2bpl300;
    call {:si_unique_call 2387} vslice_dummy_var_568 := SerialDbgPrintEx(7, Tmp_1199);
    goto L37;

  anon25_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_1202 := strConst__li2bpl299;
    call {:si_unique_call 2388} vslice_dummy_var_569 := SerialDbgPrintEx(7, Tmp_1202);
    FirstStatus_1 := -1073741811;
    SetFirstStatus_1 := 1;
    goto L112;

  anon20_Then:
    goto L41;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_578: int;

  anon0:
    call {:si_unique_call 2391} vslice_dummy_var_578 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialCompleteIfError"} SerialCompleteIfError(actual_DeviceObject_22: int, actual_Irp_18: int) returns (Tmp_1216: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1216 == -1073741536 || Tmp_1216 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialCompleteIfError"} SerialCompleteIfError(actual_DeviceObject_22: int, actual_Irp_18: int) returns (Tmp_1216: int)
{
  var {:pointer} Tmp_1217: int;
  var {:pointer} irpSp_2: int;
  var {:scalar} status_38: int;
  var {:pointer} extension_1: int;
  var {:pointer} DeviceObject_22: int;
  var {:pointer} Irp_18: int;
  var vslice_dummy_var_579: int;

  anon0:
    DeviceObject_22 := actual_DeviceObject_22;
    Irp_18 := actual_Irp_18;
    call {:si_unique_call 2392} Tmp_1217 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_22 != 0;
    assume DeviceObject_22 > 0;
    havoc extension_1;
    status_38 := 0;
    assume {:nonnull} extension_1 != 0;
    assume extension_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} extension_1 != 0;
    assume extension_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 2393} irpSp_2 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L17;

  L17:
    status_38 := -1073741536;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    Tmp_1217 := strConst__li2bpl2;
    call {:si_unique_call 2394} vslice_dummy_var_579 := SerialDbgPrintEx(9, Tmp_1217);
    call {:si_unique_call 2395} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2396} SerialIRPEpilogue(extension_1);
    goto L8;

  L8:
    Tmp_1216 := status_38;
    return;

  anon10_Then:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L17;

  anon11_Then:
    goto L8;

  anon9_Then:
    goto L8;

  anon12_Then:
    goto L8;
}



procedure {:origName "SerialFilterCancelQueued"} SerialFilterCancelQueued(actual_PDevObj_16: int, actual_PIrp_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialFilterCancelQueued"} SerialFilterCancelQueued(actual_PDevObj_16: int, actual_PIrp_6: int)
{
  var {:pointer} pDevExt_17: int;
  var {:pointer} Tmp_1221: int;
  var {:pointer} PDevObj_16: int;
  var {:pointer} PIrp_6: int;
  var vslice_dummy_var_580: int;
  var vslice_dummy_var_581: int;
  var vslice_dummy_var_582: int;
  var vslice_dummy_var_583: int;
  var vslice_dummy_var_269: int;

  anon0:
    call {:si_unique_call 2397} vslice_dummy_var_580 := __HAVOC_malloc(4);
    PDevObj_16 := actual_PDevObj_16;
    PIrp_6 := actual_PIrp_6;
    call {:si_unique_call 2398} Tmp_1221 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_16 != 0;
    assume PDevObj_16 > 0;
    havoc pDevExt_17;
    call {:si_unique_call 2399} vslice_dummy_var_581 := sdv_IoGetCurrentIrpStackLocation(PIrp_6);
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    call {:si_unique_call 2400} vslice_dummy_var_582 := sdv_RemoveEntryList(0);
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    havoc vslice_dummy_var_269;
    call {:si_unique_call 2401} IoReleaseCancelSpinLock(vslice_dummy_var_269);
    Tmp_1221 := strConst__li2bpl2;
    call {:si_unique_call 2402} vslice_dummy_var_583 := SerialDbgPrintEx(9, Tmp_1221);
    call {:si_unique_call 2403} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2404} SerialIRPEpilogue(pDevExt_17);
    return;
}



procedure {:origName "SerialStartOrQueue"} SerialStartOrQueue(actual_Extension_21: int, actual_Irp_19: int, actual_QueueToExamine: int, actual_CurrentOpIrp_2: int, actual_Starter: int) returns (Tmp_1222: int);
  modifies alloc, markedPending, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialStartOrQueue"} SerialStartOrQueue(actual_Extension_21: int, actual_Irp_19: int, actual_QueueToExamine: int, actual_CurrentOpIrp_2: int, actual_Starter: int) returns (Tmp_1222: int)
{
  var {:pointer} Tmp_1223: int;
  var {:pointer} irpSp_3: int;
  var {:pointer} sdv_872: int;
  var {:pointer} Tmp_1224: int;
  var {:pointer} sdv_874: int;
  var {:pointer} sdv_876: int;
  var {:scalar} oldIrql_7: int;
  var {:pointer} sdv_877: int;
  var {:scalar} sdv_879: int;
  var {:pointer} sdv_881: int;
  var {:pointer} Extension_21: int;
  var {:pointer} Irp_19: int;
  var {:pointer} QueueToExamine: int;
  var {:pointer} CurrentOpIrp_2: int;
  var {:scalar} Starter: int;
  var vslice_dummy_var_584: int;
  var vslice_dummy_var_585: int;
  var vslice_dummy_var_586: int;

  anon0:
    Extension_21 := actual_Extension_21;
    Irp_19 := actual_Irp_19;
    QueueToExamine := actual_QueueToExamine;
    CurrentOpIrp_2 := actual_CurrentOpIrp_2;
    Starter := actual_Starter;
    call {:si_unique_call 2405} Tmp_1223 := __HAVOC_malloc(72);
    call {:si_unique_call 2406} Tmp_1224 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1224 != 0;
    assume Tmp_1224 > 0;
    call {:si_unique_call 2407} IoAcquireCancelSpinLock(Tmp_1224);
    assume {:nonnull} Tmp_1224 != 0;
    assume Tmp_1224 > 0;
    havoc oldIrql_7;
    call {:si_unique_call 2408} sdv_872 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} sdv_872 != 0;
    assume sdv_872 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 2409} sdv_877 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    assume {:nonnull} sdv_877 != 0;
    assume sdv_877 > 0;
    goto L18;

  L18:
    call {:si_unique_call 2410} sdv_879 := sdv_IsListEmpty(0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_879 != 0;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    call {:si_unique_call 2411} IoReleaseCancelSpinLock(oldIrql_7);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant124;
    call {:si_unique_call 2412} Tmp_1222 := SerialStartFlush(Extension_21);
    goto L1;

  L1:
    return;

  anon36_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant195;
    call {:si_unique_call 2413} Tmp_1222 := SerialStartMask(Extension_21);
    goto L1;

  anon35_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant424;
    call {:si_unique_call 2414} Tmp_1222 := SerialStartPurge(Extension_21);
    goto L1;

  anon34_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant136;
    call {:si_unique_call 2415} Tmp_1222 := SerialStartRead(Extension_21);
    goto L1;

  anon29_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant212;
    call {:si_unique_call 2416} Tmp_1222 := SerialStartWrite#1(Extension_21);
    goto L1;

  anon28_Then:
    goto L22;

  L22:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 2417} irpSp_3 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    call {:si_unique_call 2418} IoReleaseCancelSpinLock(oldIrql_7);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 2419} sdv_ExFreePool(0);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto L42;

  L42:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    Tmp_1223 := strConst__li2bpl2;
    call {:si_unique_call 2420} vslice_dummy_var_586 := SerialDbgPrintEx(9, Tmp_1223);
    call {:si_unique_call 2421} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2422} SerialIRPEpilogue(Extension_21);
    Tmp_1222 := -1073741536;
    goto L1;

  anon30_Then:
    goto L42;

  anon27_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    call {:si_unique_call 2423} sdv_IoMarkIrpPending(0);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    call {:si_unique_call 2424} vslice_dummy_var_584 := sdv_InsertTailList(QueueToExamine, ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(Irp_19))));
    call {:si_unique_call 2425} vslice_dummy_var_585 := sdv_IoSetCancelRoutine(Irp_19, li2bplFunctionConstant166);
    call {:si_unique_call 2426} IoReleaseCancelSpinLock(oldIrql_7);
    Tmp_1222 := 259;
    goto L1;

  anon26_Then:
    assume {:partition} sdv_879 == 0;
    goto L22;

  anon25_Then:
    call {:si_unique_call 2427} sdv_876 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} sdv_876 != 0;
    assume sdv_876 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 2428} sdv_874 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} sdv_874 != 0;
    assume sdv_874 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L78;

  L78:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto L18;

  anon32_Then:
    call {:si_unique_call 2429} sdv_881 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} sdv_881 != 0;
    assume sdv_881 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L78;

  anon33_Then:
    goto L18;

  anon31_Then:
    goto L18;
}



procedure {:origName "SerialSetDeviceFlags"} SerialSetDeviceFlags(actual_PDevExt_9: int, actual_PFlags: int, actual_Value_1: int, actual_Set: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialSetDeviceFlags"} SerialSetDeviceFlags(actual_PDevExt_9: int, actual_PFlags: int, actual_Value_1: int, actual_Set: int)
{
  var {:pointer} Tmp_1225: int;
  var {:scalar} oldIrql_8: int;
  var {:pointer} PFlags: int;
  var {:scalar} Value_1: int;
  var {:scalar} Set: int;
  var vslice_dummy_var_587: int;

  anon0:
    call {:si_unique_call 2430} vslice_dummy_var_587 := __HAVOC_malloc(4);
    PFlags := actual_PFlags;
    Value_1 := actual_Value_1;
    Set := actual_Set;
    call {:si_unique_call 2431} Tmp_1225 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1225 != 0;
    assume Tmp_1225 > 0;
    call {:si_unique_call 2432} sdv_KeAcquireSpinLock(0, Tmp_1225);
    assume {:nonnull} Tmp_1225 != 0;
    assume Tmp_1225 > 0;
    havoc oldIrql_8;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Set != 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    goto L10;

  L10:
    call {:si_unique_call 2433} sdv_KeReleaseSpinLock(0, oldIrql_8);
    return;

  anon3_Then:
    assume {:partition} Set == 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    goto L10;
}



procedure {:origName "SerialPoCallDriver"} SerialPoCallDriver(actual_PDevExt_10: int, actual_PDevObj_17: int, actual_PIrp_7: int) returns (Tmp_1227: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1227 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialPoCallDriver"} SerialPoCallDriver(actual_PDevExt_10: int, actual_PDevObj_17: int, actual_PIrp_7: int) returns (Tmp_1227: int)
{
  var {:scalar} status_39: int;
  var {:pointer} PDevExt_10: int;
  var {:pointer} PIrp_7: int;

  anon0:
    PDevExt_10 := actual_PDevExt_10;
    PIrp_7 := actual_PIrp_7;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume PIrp_7 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2434} SLIC_PoCallDriver_entry(0);
    goto L13;

  L13:
    call {:si_unique_call 2435} status_39 := PoCallDriver(0, PIrp_7);
    call {:si_unique_call 2436} SerialIRPEpilogue(PDevExt_10);
    Tmp_1227 := status_39;
    return;

  anon3_Then:
    assume !(PIrp_7 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L13;
}



procedure {:origName "SerialIRPEpilogue"} SerialIRPEpilogue(actual_PDevExt_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialIRPEpilogue"} SerialIRPEpilogue(actual_PDevExt_11: int)
{
  var {:pointer} Tmp_1229: int;
  var {:scalar} pendingCnt: int;
  var {:pointer} PDevExt_11: int;
  var vslice_dummy_var_588: int;
  var vslice_dummy_var_589: int;

  anon0:
    call {:si_unique_call 2437} vslice_dummy_var_588 := __HAVOC_malloc(4);
    PDevExt_11 := actual_PDevExt_11;
    call {:si_unique_call 2438} Tmp_1229 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_11 != 0;
    assume PDevExt_11 > 0;
    assume {:nonnull} Tmp_1229 != 0;
    assume Tmp_1229 > 0;
    call {:si_unique_call 2439} pendingCnt := sdv_InterlockedDecrement(Tmp_1229);
    assume {:nonnull} PDevExt_11 != 0;
    assume PDevExt_11 > 0;
    assume {:nonnull} Tmp_1229 != 0;
    assume Tmp_1229 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt == 0;
    assume {:nonnull} PDevExt_11 != 0;
    assume PDevExt_11 > 0;
    call {:si_unique_call 2440} vslice_dummy_var_589 := KeSetEvent(PendingIRPEvent__SERIAL_DEVICE_EXTENSION(PDevExt_11), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt != 0;
    goto L1;
}



procedure {:origName "SerialMarkHardwareBroken"} SerialMarkHardwareBroken(actual_PDevExt_12: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialMarkHardwareBroken"} SerialMarkHardwareBroken(actual_PDevExt_12: int)
{
  var {:scalar} Tmp_1232: int;
  var {:scalar} Tmp_1234: int;
  var {:scalar} Tmp_1235: int;
  var {:pointer} PDevExt_12: int;
  var vslice_dummy_var_590: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;

  anon0:
    call {:si_unique_call 2441} Tmp_1232 := __HAVOC_malloc(20);
    call {:si_unique_call 2442} vslice_dummy_var_590 := __HAVOC_malloc(4);
    call {:si_unique_call 2443} Tmp_1235 := __HAVOC_malloc(20);
    PDevExt_12 := actual_PDevExt_12;
    call {:si_unique_call 2444} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    call {:si_unique_call 2445} SerialSetDeviceFlags(PDevExt_12, Flags__SERIAL_DEVICE_EXTENSION(PDevExt_12), 4, 1);
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    havoc Tmp_1234;
    assume {:nonnull} Tmp_1235 != 0;
    assume Tmp_1235 > 0;
    assume {:nonnull} Tmp_1235 != 0;
    assume Tmp_1235 > 0;
    assume {:nonnull} Tmp_1235 != 0;
    assume Tmp_1235 > 0;
    assume {:nonnull} Tmp_1235 != 0;
    assume Tmp_1235 > 0;
    assume {:nonnull} Tmp_1235 != 0;
    assume Tmp_1235 > 0;
    assume {:nonnull} Tmp_1232 != 0;
    assume Tmp_1232 > 0;
    assume {:nonnull} Tmp_1232 != 0;
    assume Tmp_1232 > 0;
    assume {:nonnull} Tmp_1232 != 0;
    assume Tmp_1232 > 0;
    assume {:nonnull} Tmp_1232 != 0;
    assume Tmp_1232 > 0;
    assume {:nonnull} Tmp_1232 != 0;
    assume Tmp_1232 > 0;
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    havoc vslice_dummy_var_270;
    havoc vslice_dummy_var_271;
    call {:si_unique_call 2446} SerialLogError(vslice_dummy_var_270, 0, Tmp_1232, Tmp_1235, 0, 0, 0, 88, 0, -1073348563, Tmp_1234, vslice_dummy_var_271, 0, 0);
    call {:si_unique_call 2447} IoInvalidateDeviceState(0);
    return;
}



procedure {:origName "SerialKillAllStalled"} SerialKillAllStalled(actual_PDevObj_18: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialKillAllStalled"} SerialKillAllStalled(actual_PDevObj_18: int)
{
  var {:pointer} currentLastIrp: int;
  var {:scalar} cancelIrql: int;
  var {:pointer} pDevExt_18: int;
  var {:scalar} sdv_890: int;
  var {:pointer} Tmp_1242: int;
  var {:pointer} sdv_891: int;
  var {:scalar} cancelRoutine_1: int;
  var {:pointer} PDevObj_18: int;
  var vslice_dummy_var_591: int;
  var vslice_dummy_var_592: int;
  var vslice_dummy_var_272: int;

  anon0:
    call {:si_unique_call 2448} vslice_dummy_var_591 := __HAVOC_malloc(4);
    PDevObj_18 := actual_PDevObj_18;
    assume {:nonnull} PDevObj_18 != 0;
    assume PDevObj_18 > 0;
    havoc pDevExt_18;
    call {:si_unique_call 2449} Tmp_1242 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1242 != 0;
    assume Tmp_1242 > 0;
    call {:si_unique_call 2450} IoAcquireCancelSpinLock(Tmp_1242);
    assume {:nonnull} Tmp_1242 != 0;
    assume Tmp_1242 > 0;
    havoc cancelIrql;
    goto L10;

  L10:
    call {:si_unique_call 2451} currentLastIrp, cancelIrql, sdv_890, Tmp_1242, sdv_891, cancelRoutine_1, vslice_dummy_var_592 := SerialKillAllStalled_loop_L10(currentLastIrp, cancelIrql, pDevExt_18, sdv_890, Tmp_1242, sdv_891, cancelRoutine_1, PDevObj_18, vslice_dummy_var_592);
    goto L10_last;

  L10_last:
    call {:si_unique_call 2463} sdv_890 := sdv_IsListEmpty(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_890 == 0;
    assume {:nonnull} pDevExt_18 != 0;
    assume pDevExt_18 > 0;
    havoc vslice_dummy_var_272;
    call {:si_unique_call 2452} sdv_891 := sdv_containing_record(vslice_dummy_var_272, 88);
    currentLastIrp := sdv_891;
    call {:si_unique_call 2453} vslice_dummy_var_592 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    havoc cancelRoutine_1;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant214;
    call {:si_unique_call 2454} SerialCancelCurrentWrite(PDevObj_18, currentLastIrp);
    goto L32;

  L32:
    call {:si_unique_call 2455} Tmp_1242 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1242 != 0;
    assume Tmp_1242 > 0;
    call {:si_unique_call 2456} IoAcquireCancelSpinLock(Tmp_1242);
    assume {:nonnull} Tmp_1242 != 0;
    assume Tmp_1242 > 0;
    havoc cancelIrql;
    goto L32_dummy;

  L32_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant218;
    call {:si_unique_call 2457} SerialCancelCurrentXoff(PDevObj_18, currentLastIrp);
    goto L32;

  anon16_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant351;
    call {:si_unique_call 2458} SerialCancelImmediate(PDevObj_18, currentLastIrp);
    goto L32;

  anon15_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant166;
    call {:si_unique_call 2459} SerialCancelQueued(PDevObj_18, currentLastIrp);
    goto L32;

  anon14_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant197;
    call {:si_unique_call 2460} SerialCancelWait(PDevObj_18, currentLastIrp);
    goto L32;

  anon18_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant168;
    call {:si_unique_call 2461} SerialFilterCancelQueued(PDevObj_18, currentLastIrp);
    goto L32;

  anon13_Then:
    assume {:partition} sdv_890 != 0;
    call {:si_unique_call 2462} IoReleaseCancelSpinLock(cancelIrql);
    return;
}



procedure {:origName "SerialCancelTimer"} SerialCancelTimer(actual_Timer_3: int, actual_PDevExt_13: int) returns (Tmp_1243: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1243 == 1 || Tmp_1243 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialCancelTimer"} SerialCancelTimer(actual_Timer_3: int, actual_PDevExt_13: int) returns (Tmp_1243: int)
{
  var {:scalar} cancelled: int;
  var {:pointer} Timer_3: int;
  var {:pointer} PDevExt_13: int;
  var vslice_dummy_var_273: int;

  anon0:
    Timer_3 := actual_Timer_3;
    PDevExt_13 := actual_PDevExt_13;
    call {:si_unique_call 2464} cancelled := KeCancelTimer(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} cancelled != 0;
    assume {:nonnull} Timer_3 != 0;
    assume Timer_3 > 0;
    havoc vslice_dummy_var_273;
    call {:si_unique_call 2465} SerialDpcEpilogue(PDevExt_13, vslice_dummy_var_273);
    goto L9;

  L9:
    Tmp_1243 := cancelled;
    return;

  anon3_Then:
    assume {:partition} cancelled == 0;
    goto L9;
}



procedure {:origName "SerialIRPPrologue"} SerialIRPPrologue(actual_PIrp_8: int, actual_PDevExt_14: int) returns (Tmp_1245: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1245 == 0 || Tmp_1245 == -1073741536 || Tmp_1245 == 259 || Tmp_1245 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialIRPPrologue"} SerialIRPPrologue(actual_PIrp_8: int, actual_PDevExt_14: int) returns (Tmp_1245: int)
{
  var {:pointer} Tmp_1246: int;
  var {:pointer} PIrp_8: int;
  var {:pointer} PDevExt_14: int;
  var vslice_dummy_var_593: int;

  anon0:
    PIrp_8 := actual_PIrp_8;
    PDevExt_14 := actual_PDevExt_14;
    call {:si_unique_call 2466} Tmp_1246 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_1246 != 0;
    assume Tmp_1246 > 0;
    call {:si_unique_call 2467} vslice_dummy_var_593 := sdv_InterlockedIncrement(Tmp_1246);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_1246 != 0;
    assume Tmp_1246 > 0;
    call {:si_unique_call 2468} Tmp_1245 := SerialFilterIrps(PIrp_8, PDevExt_14);
    return;
}



procedure {:origName "SerialGetNextIrpLocked"} SerialGetNextIrpLocked(actual_CurrentOpIrp_4: int, actual_QueueToProcess_3: int, actual_NextIrp: int, actual_CompleteCurrent_3: int, actual_extension_2: int, actual_OldIrql_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetNextIrpLocked"} SerialGetNextIrpLocked(actual_CurrentOpIrp_4: int, actual_QueueToProcess_3: int, actual_NextIrp: int, actual_CompleteCurrent_3: int, actual_extension_2: int, actual_OldIrql_9: int)
{
  var {:scalar} sdv_896: int;
  var {:pointer} Tmp_1249: int;
  var {:pointer} sdv_900: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} headOfList: int;
  var {:pointer} CurrentOpIrp_4: int;
  var {:pointer} QueueToProcess_3: int;
  var {:pointer} NextIrp: int;
  var {:scalar} CompleteCurrent_3: int;
  var {:pointer} extension_2: int;
  var {:scalar} OldIrql_9: int;
  var vslice_dummy_var_594: int;
  var vslice_dummy_var_595: int;
  var vslice_dummy_var_596: int;
  var vslice_dummy_var_274: int;

  anon0:
    call {:si_unique_call 2469} vslice_dummy_var_594 := __HAVOC_malloc(4);
    CurrentOpIrp_4 := actual_CurrentOpIrp_4;
    QueueToProcess_3 := actual_QueueToProcess_3;
    NextIrp := actual_NextIrp;
    CompleteCurrent_3 := actual_CompleteCurrent_3;
    extension_2 := actual_extension_2;
    OldIrql_9 := actual_OldIrql_9;
    call {:si_unique_call 2470} Tmp_1249 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc oldIrp_1;
    call {:si_unique_call 2471} sdv_896 := sdv_IsListEmpty(0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_896 == 0;
    call {:si_unique_call 2472} headOfList := RemoveHeadList(QueueToProcess_3);
    call {:si_unique_call 2473} sdv_900 := sdv_containing_record(headOfList, 88);
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_274;
    call {:si_unique_call 2474} vslice_dummy_var_596 := sdv_IoSetCancelRoutine(vslice_dummy_var_274, 0);
    goto L11;

  L11:
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    assume {:nonnull} NextIrp != 0;
    assume NextIrp > 0;
    call {:si_unique_call 2475} IoReleaseCancelSpinLock(OldIrql_9);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} CompleteCurrent_3 != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} oldIrp_1 != 0;
    Tmp_1249 := strConst__li2bpl2;
    call {:si_unique_call 2476} vslice_dummy_var_595 := SerialDbgPrintEx(9, Tmp_1249);
    call {:si_unique_call 2477} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2478} SerialIRPEpilogue(extension_2);
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} oldIrp_1 == 0;
    goto L1;

  anon8_Then:
    assume {:partition} CompleteCurrent_3 == 0;
    goto L1;

  anon7_Then:
    assume {:partition} sdv_896 != 0;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    goto L11;
}



procedure {:origName "SerialIoCallDriver"} SerialIoCallDriver(actual_PDevExt_15: int, actual_PDevObj_19: int, actual_PIrp_9: int) returns (Tmp_1250: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1250 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialIoCallDriver"} SerialIoCallDriver(actual_PDevExt_15: int, actual_PDevObj_19: int, actual_PIrp_9: int) returns (Tmp_1250: int)
{
  var {:scalar} status_40: int;
  var {:pointer} PDevExt_15: int;
  var {:pointer} PDevObj_19: int;
  var {:pointer} PIrp_9: int;

  anon0:
    PDevExt_15 := actual_PDevExt_15;
    PDevObj_19 := actual_PDevObj_19;
    PIrp_9 := actual_PIrp_9;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume PIrp_9 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2479} SLIC_sdv_IoCallDriver_entry(0);
    goto L13;

  L13:
    call {:si_unique_call 2480} status_40 := sdv_IoCallDriver(PDevObj_19, PIrp_9);
    call {:si_unique_call 2481} SerialIRPEpilogue(PDevExt_15);
    Tmp_1250 := status_40;
    return;

  anon3_Then:
    assume !(PIrp_9 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L13;
}



procedure {:origName "SerialUnstallIrps"} SerialUnstallIrps(actual_PDevExt_16: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialUnstallIrps"} SerialUnstallIrps(actual_PDevExt_16: int)
{
  var {:pointer} Tmp_1253: int;
  var {:scalar} Tmp_1254: int;
  var {:pointer} Tmp_1255: int;
  var {:pointer} sdv_905: int;
  var {:scalar} oldIrql_9: int;
  var {:pointer} pIrpStack_6: int;
  var {:pointer} Tmp_1256: int;
  var {:pointer} pIrp_1: int;
  var {:pointer} pDevObj_2: int;
  var {:pointer} Tmp_1257: int;
  var {:pointer} pIrpLink: int;
  var {:pointer} pDrvObj_1: int;
  var {:pointer} Tmp_1258: int;
  var {:pointer} PDevExt_16: int;
  var vslice_dummy_var_597: int;
  var vslice_dummy_var_598: int;
  var vslice_dummy_var_599: int;
  var vslice_dummy_var_600: int;
  var vslice_dummy_var_601: int;
  var vslice_dummy_var_602: int;

  anon0:
    call {:si_unique_call 2482} vslice_dummy_var_597 := __HAVOC_malloc(4);
    PDevExt_16 := actual_PDevExt_16;
    call {:si_unique_call 2483} Tmp_1253 := __HAVOC_malloc(80);
    call {:si_unique_call 2484} Tmp_1256 := __HAVOC_malloc(96);
    call {:si_unique_call 2485} Tmp_1257 := __HAVOC_malloc(112);
    call {:si_unique_call 2486} Tmp_1258 := __HAVOC_malloc(124);
    Tmp_1256 := strConst__li2bpl305;
    call {:si_unique_call 2487} vslice_dummy_var_598 := SerialDbgPrintEx(2, Tmp_1256);
    call {:si_unique_call 2488} Tmp_1255 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    call {:si_unique_call 2489} IoAcquireCancelSpinLock(Tmp_1255);
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    havoc oldIrql_9;
    assume {:nonnull} PDevExt_16 != 0;
    assume PDevExt_16 > 0;
    havoc pIrpLink;
    goto L16;

  L16:
    call {:si_unique_call 2490} Tmp_1254, Tmp_1255, sdv_905, oldIrql_9, pIrpStack_6, pIrp_1, pDevObj_2, Tmp_1257, pIrpLink, pDrvObj_1, Tmp_1258, vslice_dummy_var_599, vslice_dummy_var_600, vslice_dummy_var_601 := SerialUnstallIrps_loop_L16(Tmp_1254, Tmp_1255, sdv_905, oldIrql_9, pIrpStack_6, pIrp_1, pDevObj_2, Tmp_1257, pIrpLink, pDrvObj_1, Tmp_1258, PDevExt_16, vslice_dummy_var_599, vslice_dummy_var_600, vslice_dummy_var_601);
    goto L16_last;

  L16_last:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 2491} sdv_905 := sdv_containing_record(pIrpLink, 88);
    pIrp_1 := sdv_905;
    call {:si_unique_call 2492} vslice_dummy_var_599 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2493} pIrpStack_6 := sdv_IoGetCurrentIrpStackLocation(pIrp_1);
    assume {:nonnull} pIrpStack_6 != 0;
    assume pIrpStack_6 > 0;
    havoc pDevObj_2;
    assume {:nonnull} pDevObj_2 != 0;
    assume pDevObj_2 > 0;
    havoc pDrvObj_1;
    call {:si_unique_call 2494} vslice_dummy_var_600 := sdv_IoSetCancelRoutine(pIrp_1, 0);
    call {:si_unique_call 2495} IoReleaseCancelSpinLock(oldIrql_9);
    Tmp_1258 := strConst__li2bpl306;
    call {:si_unique_call 2496} vslice_dummy_var_601 := SerialDbgPrintEx(12, Tmp_1258);
    assume {:nonnull} pIrpStack_6 != 0;
    assume pIrpStack_6 > 0;
    havoc Tmp_1254;
    assume {:nonnull} pDrvObj_1 != 0;
    assume pDrvObj_1 > 0;
    havoc Tmp_1257;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume Tmp_1254 != 27;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume Tmp_1254 != 26;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume Tmp_1254 != 25;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume Tmp_1254 != 24;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume Tmp_1254 != 23;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume Tmp_1254 != 22;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume Tmp_1254 != 21;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume Tmp_1254 != 20;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume Tmp_1254 != 19;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume Tmp_1254 != 18;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume Tmp_1254 != 17;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume Tmp_1254 != 16;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume Tmp_1254 != 15;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume Tmp_1254 != 14;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume Tmp_1254 != 13;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume Tmp_1254 != 12;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume Tmp_1254 != 11;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume Tmp_1254 != 10;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume Tmp_1254 != 9;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume Tmp_1254 != 8;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume Tmp_1254 != 7;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume Tmp_1254 != 6;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume Tmp_1254 != 5;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume Tmp_1254 != 4;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume Tmp_1254 != 3;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume Tmp_1254 != 2;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume Tmp_1254 != 1;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume false;
    return;

  anon87_Then:
    assume Tmp_1254 == 0;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  L45:
    call {:si_unique_call 2497} Tmp_1255 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    call {:si_unique_call 2498} IoAcquireCancelSpinLock(Tmp_1255);
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    havoc oldIrql_9;
    assume {:nonnull} PDevExt_16 != 0;
    assume PDevExt_16 > 0;
    havoc pIrpLink;
    goto L45_dummy;

  L45_dummy:
    assume false;
    return;

  anon86_Then:
    assume Tmp_1254 == 1;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon85_Then:
    assume Tmp_1254 == 2;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon84_Then:
    assume Tmp_1254 == 3;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon83_Then:
    assume Tmp_1254 == 4;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon82_Then:
    assume Tmp_1254 == 5;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon81_Then:
    assume Tmp_1254 == 6;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon80_Then:
    assume Tmp_1254 == 7;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon79_Then:
    assume Tmp_1254 == 8;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon78_Then:
    assume Tmp_1254 == 9;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon77_Then:
    assume Tmp_1254 == 10;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon76_Then:
    assume Tmp_1254 == 11;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon75_Then:
    assume Tmp_1254 == 12;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon74_Then:
    assume Tmp_1254 == 13;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon73_Then:
    assume Tmp_1254 == 14;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon72_Then:
    assume Tmp_1254 == 15;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon71_Then:
    assume Tmp_1254 == 16;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon70_Then:
    assume Tmp_1254 == 17;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon69_Then:
    assume Tmp_1254 == 18;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon68_Then:
    assume Tmp_1254 == 19;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon67_Then:
    assume Tmp_1254 == 20;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon66_Then:
    assume Tmp_1254 == 21;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon65_Then:
    assume Tmp_1254 == 22;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon64_Then:
    assume Tmp_1254 == 23;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon63_Then:
    assume Tmp_1254 == 24;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon62_Then:
    assume Tmp_1254 == 25;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon61_Then:
    assume Tmp_1254 == 26;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon60_Then:
    assume Tmp_1254 == 27;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    goto L45;

  anon59_Then:
    call {:si_unique_call 2499} IoReleaseCancelSpinLock(oldIrql_9);
    Tmp_1253 := strConst__li2bpl307;
    call {:si_unique_call 2500} vslice_dummy_var_602 := SerialDbgPrintEx(2, Tmp_1253);
    return;
}



procedure {:origName "SerialKillAllReadsOrWrites"} SerialKillAllReadsOrWrites(actual_DeviceObject_23: int, actual_QueueToClean: int, actual_CurrentOpIrp_5: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialKillAllReadsOrWrites"} SerialKillAllReadsOrWrites(actual_DeviceObject_23: int, actual_QueueToClean: int, actual_CurrentOpIrp_5: int)
{
  var {:pointer} currentLastIrp_1: int;
  var {:scalar} cancelIrql_1: int;
  var {:scalar} sdv_910: int;
  var {:pointer} Tmp_1259: int;
  var {:pointer} sdv_911: int;
  var {:pointer} Tmp_1260: int;
  var {:scalar} cancelRoutine_2: int;
  var {:pointer} Tmp_1261: int;
  var {:pointer} Tmp_1263: int;
  var {:pointer} Tmp_1264: int;
  var {:pointer} DeviceObject_23: int;
  var {:pointer} QueueToClean: int;
  var {:pointer} CurrentOpIrp_5: int;
  var vslice_dummy_var_603: int;
  var vslice_dummy_var_604: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;

  anon0:
    call {:si_unique_call 2501} vslice_dummy_var_603 := __HAVOC_malloc(4);
    DeviceObject_23 := actual_DeviceObject_23;
    QueueToClean := actual_QueueToClean;
    CurrentOpIrp_5 := actual_CurrentOpIrp_5;
    call {:si_unique_call 2502} Tmp_1259 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1259 != 0;
    assume Tmp_1259 > 0;
    call {:si_unique_call 2503} IoAcquireCancelSpinLock(Tmp_1259);
    assume {:nonnull} Tmp_1259 != 0;
    assume Tmp_1259 > 0;
    havoc cancelIrql_1;
    goto L8;

  L8:
    call {:si_unique_call 2504} currentLastIrp_1, cancelIrql_1, sdv_910, Tmp_1259, sdv_911, cancelRoutine_2, vslice_dummy_var_604 := SerialKillAllReadsOrWrites_loop_L8(currentLastIrp_1, cancelIrql_1, sdv_910, Tmp_1259, sdv_911, cancelRoutine_2, DeviceObject_23, QueueToClean, vslice_dummy_var_604);
    goto L8_last;

  L8_last:
    call {:si_unique_call 2523} sdv_910 := sdv_IsListEmpty(0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_910 == 0;
    assume {:nonnull} QueueToClean != 0;
    assume QueueToClean > 0;
    havoc vslice_dummy_var_275;
    call {:si_unique_call 2505} sdv_911 := sdv_containing_record(vslice_dummy_var_275, 88);
    currentLastIrp_1 := sdv_911;
    call {:si_unique_call 2506} vslice_dummy_var_604 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    havoc cancelRoutine_2;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant214;
    call {:si_unique_call 2507} SerialCancelCurrentWrite(DeviceObject_23, currentLastIrp_1);
    goto L42;

  L42:
    call {:si_unique_call 2508} Tmp_1259 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1259 != 0;
    assume Tmp_1259 > 0;
    call {:si_unique_call 2509} IoAcquireCancelSpinLock(Tmp_1259);
    assume {:nonnull} Tmp_1259 != 0;
    assume Tmp_1259 > 0;
    havoc cancelIrql_1;
    goto L42_dummy;

  L42_dummy:
    assume false;
    return;

  anon36_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant218;
    call {:si_unique_call 2510} SerialCancelCurrentXoff(DeviceObject_23, currentLastIrp_1);
    goto L42;

  anon35_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant351;
    call {:si_unique_call 2511} SerialCancelImmediate(DeviceObject_23, currentLastIrp_1);
    goto L42;

  anon34_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant166;
    call {:si_unique_call 2512} SerialCancelQueued(DeviceObject_23, currentLastIrp_1);
    goto L42;

  anon33_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant197;
    call {:si_unique_call 2513} SerialCancelWait(DeviceObject_23, currentLastIrp_1);
    goto L42;

  anon39_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant168;
    call {:si_unique_call 2514} SerialFilterCancelQueued(DeviceObject_23, currentLastIrp_1);
    goto L42;

  anon27_Then:
    assume {:partition} sdv_910 != 0;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc Tmp_1261;
    assume {:nonnull} Tmp_1261 != 0;
    assume Tmp_1261 > 0;
    havoc cancelRoutine_2;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc Tmp_1264;
    assume {:nonnull} Tmp_1264 != 0;
    assume Tmp_1264 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} cancelRoutine_2 != 0;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc Tmp_1260;
    assume {:nonnull} Tmp_1260 != 0;
    assume Tmp_1260 > 0;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc Tmp_1263;
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant214;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc vslice_dummy_var_276;
    call {:si_unique_call 2515} SerialCancelCurrentWrite(DeviceObject_23, vslice_dummy_var_276);
    goto L1;

  L1:
    return;

  anon32_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant218;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc vslice_dummy_var_277;
    call {:si_unique_call 2516} SerialCancelCurrentXoff(DeviceObject_23, vslice_dummy_var_277);
    goto L1;

  anon31_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant351;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc vslice_dummy_var_278;
    call {:si_unique_call 2517} SerialCancelImmediate(DeviceObject_23, vslice_dummy_var_278);
    goto L1;

  anon30_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant166;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc vslice_dummy_var_279;
    call {:si_unique_call 2518} SerialCancelQueued(DeviceObject_23, vslice_dummy_var_279);
    goto L1;

  anon29_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant197;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc vslice_dummy_var_280;
    call {:si_unique_call 2519} SerialCancelWait(DeviceObject_23, vslice_dummy_var_280);
    goto L1;

  anon38_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant168;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc vslice_dummy_var_281;
    call {:si_unique_call 2520} SerialFilterCancelQueued(DeviceObject_23, vslice_dummy_var_281);
    goto L1;

  anon37_Then:
    assume {:partition} cancelRoutine_2 == 0;
    call {:si_unique_call 2521} IoReleaseCancelSpinLock(cancelIrql_1);
    goto L1;

  anon28_Then:
    call {:si_unique_call 2522} IoReleaseCancelSpinLock(cancelIrql_1);
    goto L1;
}



procedure {:origName "SerialSetTimer"} SerialSetTimer(actual_Timer_4: int, actual_structPtr888DueTime: int, actual_Dpc_3: int, actual_PDevExt_17: int) returns (Tmp_1265: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1265 == 1 || Tmp_1265 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialSetTimer"} SerialSetTimer(actual_Timer_4: int, actual_structPtr888DueTime: int, actual_Dpc_3: int, actual_PDevExt_17: int) returns (Tmp_1265: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} Tmp_1266: int;
  var {:scalar} set: int;
  var {:pointer} structPtr888DueTime: int;
  var {:pointer} PDevExt_17: int;
  var vslice_dummy_var_605: int;
  var vslice_dummy_var_606: int;

  anon0:
    call {:si_unique_call 2524} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    PDevExt_17 := actual_PDevExt_17;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    call {:si_unique_call 2525} Tmp_1266 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_17 != 0;
    assume PDevExt_17 > 0;
    assume {:nonnull} Tmp_1266 != 0;
    assume Tmp_1266 > 0;
    call {:si_unique_call 2526} vslice_dummy_var_605 := sdv_InterlockedIncrement(Tmp_1266);
    assume {:nonnull} PDevExt_17 != 0;
    assume PDevExt_17 > 0;
    assume {:nonnull} Tmp_1266 != 0;
    assume Tmp_1266 > 0;
    call {:si_unique_call 2527} set := KeSetTimer(0, DueTime, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} set != 0;
    call {:si_unique_call 2528} Tmp_1266 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_17 != 0;
    assume PDevExt_17 > 0;
    assume {:nonnull} Tmp_1266 != 0;
    assume Tmp_1266 > 0;
    call {:si_unique_call 2529} vslice_dummy_var_606 := sdv_InterlockedDecrement(Tmp_1266);
    assume {:nonnull} PDevExt_17 != 0;
    assume PDevExt_17 > 0;
    assume {:nonnull} Tmp_1266 != 0;
    assume Tmp_1266 > 0;
    goto L12;

  L12:
    Tmp_1265 := set;
    return;

  anon3_Then:
    assume {:partition} set == 0;
    goto L12;
}



procedure {:origName "SerialDpcEpilogue"} SerialDpcEpilogue(actual_PDevExt_18: int, actual_PDpc: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialDpcEpilogue"} SerialDpcEpilogue(actual_PDevExt_18: int, actual_PDpc: int)
{
  var {:pointer} Tmp_1267: int;
  var {:scalar} pendingCnt_1: int;
  var {:pointer} PDevExt_18: int;
  var vslice_dummy_var_607: int;
  var vslice_dummy_var_608: int;

  anon0:
    call {:si_unique_call 2530} vslice_dummy_var_607 := __HAVOC_malloc(4);
    PDevExt_18 := actual_PDevExt_18;
    call {:si_unique_call 2531} Tmp_1267 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_18 != 0;
    assume PDevExt_18 > 0;
    assume {:nonnull} Tmp_1267 != 0;
    assume Tmp_1267 > 0;
    call {:si_unique_call 2532} pendingCnt_1 := sdv_InterlockedDecrement(Tmp_1267);
    assume {:nonnull} PDevExt_18 != 0;
    assume PDevExt_18 > 0;
    assume {:nonnull} Tmp_1267 != 0;
    assume Tmp_1267 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt_1 == 0;
    assume {:nonnull} PDevExt_18 != 0;
    assume PDevExt_18 > 0;
    call {:si_unique_call 2533} vslice_dummy_var_608 := KeSetEvent(PendingDpcEvent__SERIAL_DEVICE_EXTENSION(PDevExt_18), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt_1 != 0;
    goto L1;
}



procedure {:origName "SerialGetNextIrp"} SerialGetNextIrp(actual_CurrentOpIrp_6: int, actual_QueueToProcess_4: int, actual_NextIrp_1: int, actual_CompleteCurrent_4: int, actual_extension_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetNextIrp"} SerialGetNextIrp(actual_CurrentOpIrp_6: int, actual_QueueToProcess_4: int, actual_NextIrp_1: int, actual_CompleteCurrent_4: int, actual_extension_3: int)
{
  var {:pointer} Tmp_1269: int;
  var {:scalar} oldIrql_10: int;
  var {:pointer} CurrentOpIrp_6: int;
  var {:pointer} QueueToProcess_4: int;
  var {:pointer} NextIrp_1: int;
  var {:scalar} CompleteCurrent_4: int;
  var {:pointer} extension_3: int;
  var vslice_dummy_var_609: int;

  anon0:
    call {:si_unique_call 2534} vslice_dummy_var_609 := __HAVOC_malloc(4);
    CurrentOpIrp_6 := actual_CurrentOpIrp_6;
    QueueToProcess_4 := actual_QueueToProcess_4;
    NextIrp_1 := actual_NextIrp_1;
    CompleteCurrent_4 := actual_CompleteCurrent_4;
    extension_3 := actual_extension_3;
    call {:si_unique_call 2535} Tmp_1269 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1269 != 0;
    assume Tmp_1269 > 0;
    call {:si_unique_call 2536} IoAcquireCancelSpinLock(Tmp_1269);
    assume {:nonnull} Tmp_1269 != 0;
    assume Tmp_1269 > 0;
    havoc oldIrql_10;
    call {:si_unique_call 2537} SerialGetNextIrpLocked(CurrentOpIrp_6, QueueToProcess_4, NextIrp_1, CompleteCurrent_4, extension_3, oldIrql_10);
    return;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_610: int;

  anon0:
    call {:si_unique_call 2538} vslice_dummy_var_610 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialLogError"} SerialLogError(actual_DriverObject_9: int, actual_DeviceObject_24: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialLogError"} SerialLogError(actual_DriverObject_9: int, actual_DeviceObject_24: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int)
{
  var {:scalar} P1: int;
  var {:scalar} P2: int;
  var {:pointer} Tmp_1274: int;
  var {:pointer} Tmp_1275: int;
  var {:pointer} Tmp_1276: int;
  var {:pointer} Tmp_1277: int;
  var {:pointer} Tmp_1278: int;
  var {:scalar} Tmp_1280: int;
  var {:scalar} sdv_918: int;
  var {:pointer} errorLogEntry: int;
  var {:scalar} Tmp_1281: int;
  var {:scalar} sdv_919: int;
  var {:scalar} dumpToAllocate: int;
  var {:pointer} sdv_920: int;
  var {:scalar} Tmp_1284: int;
  var {:pointer} ptrToFirstInsert: int;
  var {:pointer} DriverObject_9: int;
  var {:pointer} DeviceObject_24: int;
  var {:pointer} structPtr888P1: int;
  var {:pointer} structPtr888P2: int;
  var {:scalar} SequenceNumber: int;
  var {:scalar} MajorFunctionCode: int;
  var {:scalar} RetryCount: int;
  var {:scalar} UniqueErrorValue: int;
  var {:scalar} FinalStatus: int;
  var {:scalar} SpecificIOStatus: int;
  var {:scalar} LengthOfInsert1: int;
  var {:pointer} Insert1: int;
  var {:scalar} LengthOfInsert2: int;
  var {:pointer} Insert2: int;
  var vslice_dummy_var_611: int;

  anon0:
    call {:si_unique_call 2539} P1 := __HAVOC_malloc(20);
    call {:si_unique_call 2540} P2 := __HAVOC_malloc(20);
    call {:si_unique_call 2541} Tmp_1280 := __HAVOC_malloc(20);
    call {:si_unique_call 2542} Tmp_1281 := __HAVOC_malloc(20);
    call {:si_unique_call 2543} vslice_dummy_var_611 := __HAVOC_malloc(4);
    DriverObject_9 := actual_DriverObject_9;
    DeviceObject_24 := actual_DeviceObject_24;
    structPtr888P1 := actual_structPtr888P1;
    structPtr888P2 := actual_structPtr888P2;
    SequenceNumber := actual_SequenceNumber;
    MajorFunctionCode := actual_MajorFunctionCode;
    RetryCount := actual_RetryCount;
    UniqueErrorValue := actual_UniqueErrorValue;
    FinalStatus := actual_FinalStatus;
    SpecificIOStatus := actual_SpecificIOStatus;
    LengthOfInsert1 := actual_LengthOfInsert1;
    Insert1 := actual_Insert1;
    LengthOfInsert2 := actual_LengthOfInsert2;
    Insert2 := actual_Insert2;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    call {:si_unique_call 2544} Tmp_1274 := __HAVOC_malloc(4);
    call {:si_unique_call 2545} Tmp_1275 := __HAVOC_malloc(4);
    call {:si_unique_call 2546} Tmp_1276 := __HAVOC_malloc(4);
    call {:si_unique_call 2547} Tmp_1277 := __HAVOC_malloc(4);
    call {:si_unique_call 2548} Tmp_1278 := __HAVOC_malloc(4);
    dumpToAllocate := 0;
    call {:si_unique_call 2549} sdv_do_paged_code_check();
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Insert1 != 0;
    goto L14;

  L14:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Insert2 != 0;
    goto L16;

  L16:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} DeviceObject_24 != 0;
    goto L19;

  L19:
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    call {:si_unique_call 2550} sdv_918 := SerialMemCompare(P1, 1, Tmp_1280, 1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_918 != 0;
    dumpToAllocate := 8;
    goto L24;

  L24:
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    call {:si_unique_call 2551} sdv_919 := SerialMemCompare(P2, 1, Tmp_1281, 1);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} sdv_919 != 0;
    dumpToAllocate := dumpToAllocate + 8;
    goto L30;

  L30:
    Tmp_1284 := 48 + dumpToAllocate + LengthOfInsert1 + LengthOfInsert2;
    call {:si_unique_call 2552} sdv_920 := IoAllocateErrorLogEntry(0, Tmp_1284);
    errorLogEntry := sdv_920;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} errorLogEntry != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} dumpToAllocate != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_1277;
    call {:si_unique_call 2553} sdv_RtlCopyMemory(0, 0, 8);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} dumpToAllocate > 8;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_1278;
    call {:si_unique_call 2554} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_1275;
    ptrToFirstInsert := Tmp_1275;
    goto L57;

  L57:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} LengthOfInsert1 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 2555} sdv_RtlCopyMemory(0, 0, LengthOfInsert1);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} LengthOfInsert2 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 2556} sdv_RtlCopyMemory(0, 0, LengthOfInsert2);
    goto L59;

  L59:
    call {:si_unique_call 2557} IoWriteErrorLogEntry(0);
    goto L1;

  L1:
    return;

  anon27_Then:
    assume {:partition} LengthOfInsert2 == 0;
    goto L59;

  anon30_Then:
    assume {:partition} LengthOfInsert1 == 0;
    goto L59;

  anon26_Then:
    assume {:partition} 8 >= dumpToAllocate;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_1276;
    ptrToFirstInsert := Tmp_1276;
    goto L57;

  anon29_Then:
    assume {:partition} dumpToAllocate == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_1274;
    ptrToFirstInsert := Tmp_1274;
    goto L57;

  anon28_Then:
    assume {:partition} errorLogEntry == 0;
    goto L1;

  anon25_Then:
    assume {:partition} sdv_919 == 0;
    goto L30;

  anon24_Then:
    assume {:partition} sdv_918 == 0;
    goto L24;

  anon23_Then:
    assume {:partition} DeviceObject_24 == 0;
    goto L19;

  anon22_Then:
    assume {:partition} Insert2 == 0;
    LengthOfInsert2 := 0;
    goto L16;

  anon21_Then:
    assume {:partition} Insert1 == 0;
    LengthOfInsert1 := 0;
    goto L14;
}



procedure {:origName "SerialCancelQueued"} SerialCancelQueued(actual_DeviceObject_25: int, actual_Irp_20: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialCancelQueued"} SerialCancelQueued(actual_DeviceObject_25: int, actual_Irp_20: int)
{
  var {:pointer} irpSp_4: int;
  var {:pointer} Tmp_1286: int;
  var {:pointer} extension_4: int;
  var {:pointer} DeviceObject_25: int;
  var {:pointer} Irp_20: int;
  var vslice_dummy_var_612: int;
  var vslice_dummy_var_613: int;
  var vslice_dummy_var_614: int;
  var vslice_dummy_var_282: int;

  anon0:
    call {:si_unique_call 2558} vslice_dummy_var_612 := __HAVOC_malloc(4);
    DeviceObject_25 := actual_DeviceObject_25;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 2559} Tmp_1286 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    havoc extension_4;
    call {:si_unique_call 2560} irpSp_4 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 2561} vslice_dummy_var_613 := sdv_RemoveEntryList(0);
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} extension_4 != 0;
    assume extension_4 > 0;
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    goto L18;

  L18:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    havoc vslice_dummy_var_282;
    call {:si_unique_call 2562} IoReleaseCancelSpinLock(vslice_dummy_var_282);
    Tmp_1286 := strConst__li2bpl2;
    call {:si_unique_call 2563} vslice_dummy_var_614 := SerialDbgPrintEx(9, Tmp_1286);
    call {:si_unique_call 2564} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2565} SerialIRPEpilogue(extension_4);
    return;

  anon11_Then:
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L32;

  L32:
    assume {:nonnull} extension_4 != 0;
    assume extension_4 > 0;
    goto L18;

  anon13_Then:
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 2566} sdv_ExFreePool(0);
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    goto L18;

  anon15_Then:
    goto L18;

  anon14_Then:
    goto L32;

  anon12_Then:
    goto L18;
}



procedure {:origName "SerialRundownIrpRefs"} SerialRundownIrpRefs(actual_CurrentOpIrp_7: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_PDevExt_19: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialRundownIrpRefs"} SerialRundownIrpRefs(actual_CurrentOpIrp_7: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_PDevExt_19: int)
{
  var {:pointer} Tmp_1289: int;
  var {:pointer} s_p_e_c_i_a_l_23: int;
  var {:pointer} sdv_924: int;
  var {:pointer} sdv_925: int;
  var {:pointer} s_p_e_c_i_a_l_24: int;
  var {:scalar} s_p_e_c_i_a_l_25: int;
  var {:scalar} sdv_927: int;
  var {:pointer} sdv_928: int;
  var {:scalar} sdv_929: int;
  var {:pointer} s_p_e_c_i_a_l_26: int;
  var {:scalar} s_p_e_c_i_a_l_27: int;
  var {:scalar} s_p_e_c_i_a_l_28: int;
  var {:pointer} CurrentOpIrp_7: int;
  var {:pointer} IntervalTimer_1: int;
  var {:pointer} TotalTimer_1: int;
  var {:pointer} PDevExt_19: int;
  var vslice_dummy_var_615: int;
  var vslice_dummy_var_616: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;

  anon0:
    call {:si_unique_call 2567} vslice_dummy_var_615 := __HAVOC_malloc(4);
    CurrentOpIrp_7 := actual_CurrentOpIrp_7;
    IntervalTimer_1 := actual_IntervalTimer_1;
    TotalTimer_1 := actual_TotalTimer_1;
    PDevExt_19 := actual_PDevExt_19;
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc Tmp_1289;
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    s_p_e_c_i_a_l_25 := 2;
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_283;
    call {:si_unique_call 2568} sdv_924 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_283);
    assume {:nonnull} sdv_924 != 0;
    assume sdv_924 > 0;
    s_p_e_c_i_a_l_23 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_924)));
    assume {:nonnull} s_p_e_c_i_a_l_23 != 0;
    assume s_p_e_c_i_a_l_23 > 0;
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_284;
    call {:si_unique_call 2569} vslice_dummy_var_616 := sdv_IoSetCancelRoutine(vslice_dummy_var_284, 0);
    goto L4;

  L4:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IntervalTimer_1 != 0;
    call {:si_unique_call 2570} sdv_927 := SerialCancelTimer(IntervalTimer_1, PDevExt_19);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_927 != 0;
    s_p_e_c_i_a_l_27 := 8;
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_285;
    call {:si_unique_call 2571} sdv_928 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_285);
    assume {:nonnull} sdv_928 != 0;
    assume sdv_928 > 0;
    s_p_e_c_i_a_l_26 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_928)));
    assume {:nonnull} s_p_e_c_i_a_l_26 != 0;
    assume s_p_e_c_i_a_l_26 > 0;
    goto L16;

  L16:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} TotalTimer_1 != 0;
    call {:si_unique_call 2572} sdv_929 := SerialCancelTimer(TotalTimer_1, PDevExt_19);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_929 != 0;
    s_p_e_c_i_a_l_28 := 4;
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_286;
    call {:si_unique_call 2573} sdv_925 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_286);
    assume {:nonnull} sdv_925 != 0;
    assume sdv_925 > 0;
    s_p_e_c_i_a_l_24 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_925)));
    assume {:nonnull} s_p_e_c_i_a_l_24 != 0;
    assume s_p_e_c_i_a_l_24 > 0;
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:partition} sdv_929 == 0;
    goto L1;

  anon12_Then:
    assume {:partition} TotalTimer_1 == 0;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_927 == 0;
    goto L16;

  anon11_Then:
    assume {:partition} IntervalTimer_1 == 0;
    goto L16;

  anon15_Then:
    goto L4;
}



procedure {:origName "SerialFilterIrps"} SerialFilterIrps(actual_PIrp_10: int, actual_PDevExt_20: int) returns (Tmp_1291: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1291 == 0 || Tmp_1291 == -1073741536 || Tmp_1291 == 259 || Tmp_1291 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialFilterIrps"} SerialFilterIrps(actual_PIrp_10: int, actual_PDevExt_20: int) returns (Tmp_1291: int)
{
  var {:scalar} oldIrqlFlags: int;
  var {:scalar} oldIrql_11: int;
  var {:pointer} pIrpStack_7: int;
  var {:pointer} Tmp_1292: int;
  var {:pointer} PIrp_10: int;
  var {:pointer} PDevExt_20: int;
  var vslice_dummy_var_617: int;
  var vslice_dummy_var_618: int;

  anon0:
    PIrp_10 := actual_PIrp_10;
    PDevExt_20 := actual_PDevExt_20;
    call {:si_unique_call 2574} pIrpStack_7 := sdv_IoGetCurrentIrpStackLocation(PIrp_10);
    call {:si_unique_call 2575} Tmp_1292 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1292 != 0;
    assume Tmp_1292 > 0;
    call {:si_unique_call 2576} sdv_KeAcquireSpinLock(0, Tmp_1292);
    assume {:nonnull} Tmp_1292 != 0;
    assume Tmp_1292 > 0;
    havoc oldIrqlFlags;
    assume {:nonnull} PDevExt_20 != 0;
    assume PDevExt_20 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L14;

  L14:
    assume {:nonnull} PDevExt_20 != 0;
    assume PDevExt_20 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L16;

  L16:
    call {:si_unique_call 2577} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    assume {:nonnull} pIrpStack_7 != 0;
    assume pIrpStack_7 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    Tmp_1291 := 0;
    goto L1;

  L1:
    return;

  anon29_Then:
    assume {:nonnull} PIrp_10 != 0;
    assume PIrp_10 > 0;
    Tmp_1291 := -1073741738;
    goto L1;

  anon27_Then:
    assume {:nonnull} PDevExt_20 != 0;
    assume PDevExt_20 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} PDevExt_20 != 0;
    assume PDevExt_20 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} PDevExt_20 != 0;
    assume PDevExt_20 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L27;

  L27:
    call {:si_unique_call 2578} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    assume {:nonnull} pIrpStack_7 != 0;
    assume pIrpStack_7 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    Tmp_1291 := 0;
    goto L1;

  anon33_Then:
    assume {:nonnull} pIrpStack_7 != 0;
    assume pIrpStack_7 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} PDevExt_20 != 0;
    assume PDevExt_20 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    Tmp_1291 := 0;
    goto L1;

  anon35_Then:
    goto L33;

  L33:
    call {:si_unique_call 2579} Tmp_1292 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1292 != 0;
    assume Tmp_1292 > 0;
    call {:si_unique_call 2580} IoAcquireCancelSpinLock(Tmp_1292);
    assume {:nonnull} Tmp_1292 != 0;
    assume Tmp_1292 > 0;
    havoc oldIrql_11;
    assume {:nonnull} PIrp_10 != 0;
    assume PIrp_10 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 2581} IoReleaseCancelSpinLock(oldIrql_11);
    assume {:nonnull} PIrp_10 != 0;
    assume PIrp_10 > 0;
    Tmp_1291 := -1073741536;
    goto L1;

  anon36_Then:
    assume {:nonnull} PIrp_10 != 0;
    assume PIrp_10 > 0;
    call {:si_unique_call 2582} sdv_IoMarkIrpPending(0);
    assume {:nonnull} PDevExt_20 != 0;
    assume PDevExt_20 > 0;
    assume {:nonnull} PIrp_10 != 0;
    assume PIrp_10 > 0;
    call {:si_unique_call 2583} vslice_dummy_var_617 := sdv_InsertTailList(StalledIrpQueue__SERIAL_DEVICE_EXTENSION(PDevExt_20), ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(PIrp_10))));
    call {:si_unique_call 2584} vslice_dummy_var_618 := sdv_IoSetCancelRoutine(PIrp_10, li2bplFunctionConstant168);
    call {:si_unique_call 2585} IoReleaseCancelSpinLock(oldIrql_11);
    Tmp_1291 := 259;
    goto L1;

  anon34_Then:
    goto L33;

  anon31_Then:
    assume {:nonnull} PDevExt_20 != 0;
    assume PDevExt_20 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 2586} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    Tmp_1291 := 0;
    goto L1;

  anon32_Then:
    goto L27;

  anon30_Then:
    goto L16;

  anon28_Then:
    goto L16;

  anon25_Then:
    assume {:nonnull} PDevExt_20 != 0;
    assume PDevExt_20 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 2587} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    Tmp_1291 := 0;
    goto L1;

  anon26_Then:
    goto L14;
}



procedure {:origName "SLIC_ABORT_42_0"} SLIC_ABORT_42_0(actual_caller: int, actual_SerialCreateOpen_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_42_0"} SLIC_ABORT_42_0(actual_caller: int, actual_SerialCreateOpen_1: int)
{
  var {:pointer} caller: int;
  var {:scalar} SerialCreateOpen_1: int;

  anon0:
    caller := actual_caller;
    SerialCreateOpen_1 := actual_SerialCreateOpen_1;
    call {:si_unique_call 2588} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_ABORT_38_0"} SLIC_ABORT_38_0(actual_caller_2: int, actual_SerialRead_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_38_0"} SLIC_ABORT_38_0(actual_caller_2: int, actual_SerialRead_1: int)
{
  var {:pointer} caller_2: int;
  var {:scalar} SerialRead_1: int;

  anon0:
    caller_2 := actual_caller_2;
    SerialRead_1 := actual_SerialRead_1;
    call {:si_unique_call 2589} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_SerialInternalIoControl_exit"} {:osmodel} SLIC_SerialInternalIoControl_exit(actual_caller_3: int, actual_SerialInternalIoControl_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialInternalIoControl_exit"} {:osmodel} SLIC_SerialInternalIoControl_exit(actual_caller_3: int, actual_SerialInternalIoControl_1: int)
{
  var {:pointer} caller_3: int;
  var {:scalar} SerialInternalIoControl_1: int;

  anon0:
    caller_3 := actual_caller_3;
    SerialInternalIoControl_1 := actual_SerialInternalIoControl_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialInternalIoControl_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2590} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2591} SLIC_ABORT_26_0(caller_3, SerialInternalIoControl_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialInternalIoControl_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller_4: int);
  modifies queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller_4: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} locked != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} queued != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} markedPending == 0;
    queuedWithoutMarking := 1;
    goto L2;

  L2:
    locked := 0;
    return;

  anon8_Then:
    assume {:partition} markedPending != 0;
    goto L2;

  anon9_Then:
    assume {:partition} queued == 0;
    goto L2;

  anon7_Then:
    assume {:partition} locked == 0;
    goto L2;
}



procedure {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller_5: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller_5: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} stack_location == 1;
    call {:si_unique_call 2592} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} stack_location != 1;
    goto L2;
}



procedure {:origName "SLIC_SerialPnpDispatch_exit"} {:osmodel} SLIC_SerialPnpDispatch_exit(actual_caller_6: int, actual_SerialPnpDispatch_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialPnpDispatch_exit"} {:osmodel} SLIC_SerialPnpDispatch_exit(actual_caller_6: int, actual_SerialPnpDispatch_1: int)
{
  var {:pointer} caller_6: int;
  var {:scalar} SerialPnpDispatch_1: int;

  anon0:
    caller_6 := actual_caller_6;
    SerialPnpDispatch_1 := actual_SerialPnpDispatch_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialPnpDispatch_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2593} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2594} SLIC_ABORT_18_0(caller_6, SerialPnpDispatch_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialPnpDispatch_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_PoCallDriver_entry"} {:osmodel} SLIC_PoCallDriver_entry(actual_caller_7: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_PoCallDriver_entry"} {:osmodel} SLIC_PoCallDriver_entry(actual_caller_7: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} stack_location == 1;
    call {:si_unique_call 2595} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} stack_location != 1;
    goto L2;
}



procedure {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_9: int, actual_SerialInternalIoControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_9: int, actual_SerialInternalIoControl_2: int)
{
  var {:pointer} caller_9: int;
  var {:scalar} SerialInternalIoControl_2: int;

  anon0:
    caller_9 := actual_caller_9;
    SerialInternalIoControl_2 := actual_SerialInternalIoControl_2;
    call {:si_unique_call 2596} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_10: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_10: int)
{

  anon0:
    call {:si_unique_call 2597} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    return;
}



procedure {:origName "SLIC_sdv_InsertTailList_entry"} {:osmodel} SLIC_sdv_InsertTailList_entry(actual_caller_11: int);
  modifies queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_InsertTailList_entry"} {:osmodel} SLIC_sdv_InsertTailList_entry(actual_caller_11: int)
{

  anon0:
    queued := 1;
    return;
}



procedure {:origName "SLIC_ABORT_34_0"} SLIC_ABORT_34_0(actual_caller_12: int, actual_SerialQueryInformationFile_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_34_0"} SLIC_ABORT_34_0(actual_caller_12: int, actual_SerialQueryInformationFile_1: int)
{
  var {:pointer} caller_12: int;
  var {:scalar} SerialQueryInformationFile_1: int;

  anon0:
    caller_12 := actual_caller_12;
    SerialQueryInformationFile_1 := actual_SerialQueryInformationFile_1;
    call {:si_unique_call 2598} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_ABORT_32_0"} SLIC_ABORT_32_0(actual_caller_13: int, actual_SerialSetInformationFile_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_32_0"} SLIC_ABORT_32_0(actual_caller_13: int, actual_SerialSetInformationFile_1: int)
{
  var {:pointer} caller_13: int;
  var {:scalar} SerialSetInformationFile_1: int;

  anon0:
    caller_13 := actual_caller_13;
    SerialSetInformationFile_1 := actual_SerialSetInformationFile_1;
    call {:si_unique_call 2599} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_SerialCleanup_exit"} {:osmodel} SLIC_SerialCleanup_exit(actual_caller_14: int, actual_SerialCleanup_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialCleanup_exit"} {:osmodel} SLIC_SerialCleanup_exit(actual_caller_14: int, actual_SerialCleanup_1: int)
{
  var {:pointer} caller_14: int;
  var {:scalar} SerialCleanup_1: int;

  anon0:
    caller_14 := actual_caller_14;
    SerialCleanup_1 := actual_SerialCleanup_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialCleanup_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2600} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2601} SLIC_ABORT_24_0(caller_14, SerialCleanup_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialCleanup_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_SerialPowerDispatch_exit"} {:osmodel} SLIC_SerialPowerDispatch_exit(actual_caller_15: int, actual_SerialPowerDispatch_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialPowerDispatch_exit"} {:osmodel} SLIC_SerialPowerDispatch_exit(actual_caller_15: int, actual_SerialPowerDispatch_1: int)
{
  var {:pointer} caller_15: int;
  var {:scalar} SerialPowerDispatch_1: int;

  anon0:
    caller_15 := actual_caller_15;
    SerialPowerDispatch_1 := actual_SerialPowerDispatch_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialPowerDispatch_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2602} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2603} SLIC_ABORT_22_0(caller_15, SerialPowerDispatch_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialPowerDispatch_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_SerialRead_exit"} {:osmodel} SLIC_SerialRead_exit(actual_caller_17: int, actual_SerialRead_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialRead_exit"} {:osmodel} SLIC_SerialRead_exit(actual_caller_17: int, actual_SerialRead_2: int)
{
  var {:pointer} caller_17: int;
  var {:scalar} SerialRead_2: int;

  anon0:
    caller_17 := actual_caller_17;
    SerialRead_2 := actual_SerialRead_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialRead_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2604} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2605} SLIC_ABORT_38_0(caller_17, SerialRead_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialRead_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_SerialQueryInformationFile_exit"} {:osmodel} SLIC_SerialQueryInformationFile_exit(actual_caller_18: int, actual_SerialQueryInformationFile_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialQueryInformationFile_exit"} {:osmodel} SLIC_SerialQueryInformationFile_exit(actual_caller_18: int, actual_SerialQueryInformationFile_2: int)
{
  var {:pointer} caller_18: int;
  var {:scalar} SerialQueryInformationFile_2: int;

  anon0:
    caller_18 := actual_caller_18;
    SerialQueryInformationFile_2 := actual_SerialQueryInformationFile_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialQueryInformationFile_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2606} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2607} SLIC_ABORT_34_0(caller_18, SerialQueryInformationFile_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialQueryInformationFile_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_19: int, actual_SerialSystemControlDispatch_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_19: int, actual_SerialSystemControlDispatch_1: int)
{
  var {:pointer} caller_19: int;
  var {:scalar} SerialSystemControlDispatch_1: int;

  anon0:
    caller_19 := actual_caller_19;
    SerialSystemControlDispatch_1 := actual_SerialSystemControlDispatch_1;
    call {:si_unique_call 2608} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_sdv_IoMarkIrpPending_entry"} {:osmodel} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_20: int);
  modifies markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_IoMarkIrpPending_entry"} {:osmodel} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_20: int)
{

  anon0:
    markedPending := 1;
    return;
}



procedure {:origName "SLIC_ABORT_40_0"} SLIC_ABORT_40_0(actual_caller_21: int, actual_SerialClose_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_40_0"} SLIC_ABORT_40_0(actual_caller_21: int, actual_SerialClose_1: int)
{
  var {:pointer} caller_21: int;
  var {:scalar} SerialClose_1: int;

  anon0:
    caller_21 := actual_caller_21;
    SerialClose_1 := actual_SerialClose_1;
    call {:si_unique_call 2609} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_SerialIoControl_exit"} {:osmodel} SLIC_SerialIoControl_exit(actual_caller_22: int, actual_SerialIoControl_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialIoControl_exit"} {:osmodel} SLIC_SerialIoControl_exit(actual_caller_22: int, actual_SerialIoControl_1: int)
{
  var {:pointer} caller_22: int;
  var {:scalar} SerialIoControl_1: int;

  anon0:
    caller_22 := actual_caller_22;
    SerialIoControl_1 := actual_SerialIoControl_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialIoControl_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2610} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2611} SLIC_ABORT_28_0(caller_22, SerialIoControl_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialIoControl_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_sdv_KeAcquireSpinLock_entry"} {:osmodel} SLIC_sdv_KeAcquireSpinLock_entry(actual_caller_24: int);
  modifies locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} locked == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_KeAcquireSpinLock_entry"} {:osmodel} SLIC_sdv_KeAcquireSpinLock_entry(actual_caller_24: int)
{

  anon0:
    locked := 1;
    return;
}



procedure {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_25: int, actual_SerialCleanup_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_25: int, actual_SerialCleanup_2: int)
{
  var {:pointer} caller_25: int;
  var {:scalar} SerialCleanup_2: int;

  anon0:
    caller_25 := actual_caller_25;
    SerialCleanup_2 := actual_SerialCleanup_2;
    call {:si_unique_call 2612} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_SerialCreateOpen_exit"} {:osmodel} SLIC_SerialCreateOpen_exit(actual_caller_26: int, actual_SerialCreateOpen_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialCreateOpen_exit"} {:osmodel} SLIC_SerialCreateOpen_exit(actual_caller_26: int, actual_SerialCreateOpen_2: int)
{
  var {:pointer} caller_26: int;
  var {:scalar} SerialCreateOpen_2: int;

  anon0:
    caller_26 := actual_caller_26;
    SerialCreateOpen_2 := actual_SerialCreateOpen_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialCreateOpen_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2613} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2614} SLIC_ABORT_42_0(caller_26, SerialCreateOpen_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialCreateOpen_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_28: int, actual_SerialPnpDispatch_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_28: int, actual_SerialPnpDispatch_2: int)
{
  var {:pointer} caller_28: int;
  var {:scalar} SerialPnpDispatch_2: int;

  anon0:
    caller_28 := actual_caller_28;
    SerialPnpDispatch_2 := actual_SerialPnpDispatch_2;
    call {:si_unique_call 2615} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_SerialWrite_exit"} {:osmodel} SLIC_SerialWrite_exit(actual_caller_29: int, actual_SerialWrite_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialWrite_exit"} {:osmodel} SLIC_SerialWrite_exit(actual_caller_29: int, actual_SerialWrite_1: int)
{
  var {:pointer} caller_29: int;
  var {:scalar} SerialWrite_1: int;

  anon0:
    caller_29 := actual_caller_29;
    SerialWrite_1 := actual_SerialWrite_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialWrite_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2616} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2617} SLIC_ABORT_36_0(caller_29, SerialWrite_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialWrite_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} {:osmodel} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_30: int);
  modifies stack_location;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 0;
  free ensures {:va_keep} stack_location == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} {:osmodel} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_30: int)
{

  anon0:
    stack_location := 1;
    return;
}



procedure {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_31: int, actual_SerialPowerDispatch_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_31: int, actual_SerialPowerDispatch_2: int)
{
  var {:pointer} caller_31: int;
  var {:scalar} SerialPowerDispatch_2: int;

  anon0:
    caller_31 := actual_caller_31;
    SerialPowerDispatch_2 := actual_SerialPowerDispatch_2;
    call {:si_unique_call 2618} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_32: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_32: int)
{

  anon0:
    call {:si_unique_call 2619} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    return;
}



procedure {:origName "SLIC_SerialSetInformationFile_exit"} {:osmodel} SLIC_SerialSetInformationFile_exit(actual_caller_33: int, actual_SerialSetInformationFile_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialSetInformationFile_exit"} {:osmodel} SLIC_SerialSetInformationFile_exit(actual_caller_33: int, actual_SerialSetInformationFile_2: int)
{
  var {:pointer} caller_33: int;
  var {:scalar} SerialSetInformationFile_2: int;

  anon0:
    caller_33 := actual_caller_33;
    SerialSetInformationFile_2 := actual_SerialSetInformationFile_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialSetInformationFile_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2620} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2621} SLIC_ABORT_32_0(caller_33, SerialSetInformationFile_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialSetInformationFile_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_30_0"} SLIC_ABORT_30_0(actual_caller_34: int, actual_SerialFlush_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_30_0"} SLIC_ABORT_30_0(actual_caller_34: int, actual_SerialFlush_1: int)
{
  var {:pointer} caller_34: int;
  var {:scalar} SerialFlush_1: int;

  anon0:
    caller_34 := actual_caller_34;
    SerialFlush_1 := actual_SerialFlush_1;
    call {:si_unique_call 2622} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_SerialFlush_exit"} {:osmodel} SLIC_SerialFlush_exit(actual_caller_35: int, actual_SerialFlush_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialFlush_exit"} {:osmodel} SLIC_SerialFlush_exit(actual_caller_35: int, actual_SerialFlush_2: int)
{
  var {:pointer} caller_35: int;
  var {:scalar} SerialFlush_2: int;

  anon0:
    caller_35 := actual_caller_35;
    SerialFlush_2 := actual_SerialFlush_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialFlush_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2623} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2624} SLIC_ABORT_30_0(caller_35, SerialFlush_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialFlush_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_28_0"} SLIC_ABORT_28_0(actual_caller_36: int, actual_SerialIoControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_28_0"} SLIC_ABORT_28_0(actual_caller_36: int, actual_SerialIoControl_2: int)
{
  var {:pointer} caller_36: int;
  var {:scalar} SerialIoControl_2: int;

  anon0:
    caller_36 := actual_caller_36;
    SerialIoControl_2 := actual_SerialIoControl_2;
    call {:si_unique_call 2625} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_SerialClose_exit"} {:osmodel} SLIC_SerialClose_exit(actual_caller_38: int, actual_SerialClose_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialClose_exit"} {:osmodel} SLIC_SerialClose_exit(actual_caller_38: int, actual_SerialClose_2: int)
{
  var {:pointer} caller_38: int;
  var {:scalar} SerialClose_2: int;

  anon0:
    caller_38 := actual_caller_38;
    SerialClose_2 := actual_SerialClose_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialClose_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2626} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2627} SLIC_ABORT_40_0(caller_38, SerialClose_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialClose_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_SerialSystemControlDispatch_exit"} {:osmodel} SLIC_SerialSystemControlDispatch_exit(actual_caller_39: int, actual_SerialSystemControlDispatch_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_SerialSystemControlDispatch_exit"} {:osmodel} SLIC_SerialSystemControlDispatch_exit(actual_caller_39: int, actual_SerialSystemControlDispatch_2: int)
{
  var {:pointer} caller_39: int;
  var {:scalar} SerialSystemControlDispatch_2: int;

  anon0:
    caller_39 := actual_caller_39;
    SerialSystemControlDispatch_2 := actual_SerialSystemControlDispatch_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} SerialSystemControlDispatch_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2628} SLIC_EXIT_ROUTINE(strConst__li2bpl309);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2629} SLIC_ABORT_20_0(caller_39, SerialSystemControlDispatch_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} SerialSystemControlDispatch_2 != 259;
    goto L6;
}



procedure {:origName "_sdv_init23"} {:osmodel} _sdv_init23();
  modifies SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} queued == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} stack_location == 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 0;
  free ensures {:va_keep} queuedWithoutMarking == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init23"} {:osmodel} _sdv_init23()
{

  anon0:
    SLAM_guard_S_0 := SLAM_guard_S_0_init;
    stack_location := 0;
    markedPending := 0;
    queuedWithoutMarking := 0;
    queued := 0;
    locked := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_ABORT_36_0"} SLIC_ABORT_36_0(actual_caller_40: int, actual_SerialWrite_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_36_0"} SLIC_ABORT_36_0(actual_caller_40: int, actual_SerialWrite_2: int)
{
  var {:pointer} caller_40: int;
  var {:scalar} SerialWrite_2: int;

  anon0:
    caller_40 := actual_caller_40;
    SerialWrite_2 := actual_SerialWrite_2;
    call {:si_unique_call 2630} SLIC_ERROR_ROUTINE(strConst__li2bpl308);
    return;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:origName "SerialDbgPrintEx"} SerialDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_1293: int);
  free ensures {:va_keep} Tmp_1293 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialDbgPrintEx"} SerialDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_1293: int)
{

  anon0:
    Tmp_1293 := 0;
    return;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_1: int)
{
  var {:pointer} ListHead_1: int;
  var vslice_dummy_var_619: int;

  anon0:
    call {:si_unique_call 2631} vslice_dummy_var_619 := __HAVOC_malloc(4);
    ListHead_1 := actual_ListHead_1;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    return;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_2: int) returns (Tmp_1297: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_2: int) returns (Tmp_1297: int)
{
  var {:pointer} Entry_1: int;
  var {:pointer} Flink: int;
  var {:pointer} ListHead_2: int;

  anon0:
    ListHead_2 := actual_ListHead_2;
    call {:si_unique_call 2632} SLIC_RemoveHeadList_entry(strConst__li2bpl0);
    assume {:nonnull} ListHead_2 != 0;
    assume ListHead_2 > 0;
    havoc Entry_1;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    havoc Flink;
    assume {:nonnull} ListHead_2 != 0;
    assume ListHead_2 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    Tmp_1297 := Entry_1;
    return;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_620: int;

  anon0:
    call {:si_unique_call 2633} vslice_dummy_var_620 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialClrRTS"} SerialClrRTS(actual_Context_5: int) returns (Tmp_1301: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1301 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialClrRTS"} SerialClrRTS(actual_Context_5: int) returns (Tmp_1301: int)
{
  var {:pointer} Tmp_1302: int;
  var {:pointer} Extension_23: int;
  var {:scalar} ModemControl_1: int;
  var {:pointer} Context_5: int;
  var vslice_dummy_var_621: int;

  anon0:
    Context_5 := actual_Context_5;
    call {:si_unique_call 2634} Tmp_1302 := __HAVOC_malloc(84);
    Extension_23 := Context_5;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    call {:si_unique_call 2635} ModemControl_1 := corral_nondet();
    ModemControl_1 := BAND(ModemControl_1, BNOT(2));
    Tmp_1302 := strConst__li2bpl310;
    call {:si_unique_call 2636} vslice_dummy_var_621 := SerialDbgPrintEx(13, Tmp_1302);
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    Tmp_1301 := 0;
    return;
}



procedure {:origName "_sdv_init17"} _sdv_init17();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init17"} _sdv_init17()
{
  var vslice_dummy_var_622: int;

  anon0:
    call {:si_unique_call 2637} vslice_dummy_var_622 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialClrDTR"} SerialClrDTR(actual_Context_6: int) returns (Tmp_1308: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1308 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialClrDTR"} SerialClrDTR(actual_Context_6: int) returns (Tmp_1308: int)
{
  var {:pointer} Tmp_1310: int;
  var {:pointer} Extension_24: int;
  var {:scalar} ModemControl_2: int;
  var {:pointer} Context_6: int;
  var vslice_dummy_var_623: int;

  anon0:
    Context_6 := actual_Context_6;
    call {:si_unique_call 2638} Tmp_1310 := __HAVOC_malloc(84);
    Extension_24 := Context_6;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 2639} ModemControl_2 := corral_nondet();
    ModemControl_2 := BAND(ModemControl_2, BNOT(1));
    Tmp_1310 := strConst__li2bpl311;
    call {:si_unique_call 2640} vslice_dummy_var_623 := SerialDbgPrintEx(13, Tmp_1310);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    Tmp_1308 := 0;
    return;
}



procedure {:origName "SerialStartPurge"} SerialStartPurge(actual_Extension_25: int) returns (Tmp_1313: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1313 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialStartPurge"} SerialStartPurge(actual_Extension_25: int) returns (Tmp_1313: int)
{
  var {:pointer} Tmp_1314: int;
  var {:pointer} Tmp_1315: int;
  var {:scalar} Mask_2: int;
  var {:scalar} OldIrql_10: int;
  var {:pointer} NewIrp_5: int;
  var {:pointer} Tmp_1316: int;
  var {:pointer} Tmp_1317: int;
  var {:pointer} Tmp_1318: int;
  var {:pointer} Extension_25: int;
  var vslice_dummy_var_624: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;

  anon0:
    call {:si_unique_call 2641} NewIrp_5 := __HAVOC_malloc(4);
    Extension_25 := actual_Extension_25;
    goto L5;

  L5:
    call {:si_unique_call 2642} Tmp_1314, Tmp_1315, Mask_2, OldIrql_10, Tmp_1316, Tmp_1317, Tmp_1318, vslice_dummy_var_624 := SerialStartPurge_loop_L5(Tmp_1314, Tmp_1315, Mask_2, OldIrql_10, NewIrp_5, Tmp_1316, Tmp_1317, Tmp_1318, Extension_25, vslice_dummy_var_624);
    goto L5_last;

  L5_last:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_1318;
    assume {:nonnull} Tmp_1318 != 0;
    assume Tmp_1318 > 0;
    havoc Tmp_1317;
    assume {:nonnull} Tmp_1317 != 0;
    assume Tmp_1317 > 0;
    havoc Mask_2;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(Mask_2, 1) != 0;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc vslice_dummy_var_287;
    call {:si_unique_call 2643} SerialKillAllReadsOrWrites(vslice_dummy_var_287, WriteQueue__SERIAL_DEVICE_EXTENSION(Extension_25), CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(Extension_25));
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc vslice_dummy_var_288;
    call {:si_unique_call 2644} SerialKillAllReadsOrWrites(vslice_dummy_var_288, WriteQueue__SERIAL_DEVICE_EXTENSION(Extension_25), CurrentXoffIrp__SERIAL_DEVICE_EXTENSION(Extension_25));
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(Mask_2, 2) != 0;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc vslice_dummy_var_289;
    call {:si_unique_call 2645} SerialKillAllReadsOrWrites(vslice_dummy_var_289, ReadQueue__SERIAL_DEVICE_EXTENSION(Extension_25), CurrentReadIrp__SERIAL_DEVICE_EXTENSION(Extension_25));
    goto L14;

  L14:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} BAND(Mask_2, 8) != 0;
    call {:si_unique_call 2646} Tmp_1316 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1316 != 0;
    assume Tmp_1316 > 0;
    call {:si_unique_call 2647} sdv_KeAcquireSpinLock(0, Tmp_1316);
    assume {:nonnull} Tmp_1316 != 0;
    assume Tmp_1316 > 0;
    havoc OldIrql_10;
    call {:si_unique_call 2648} vslice_dummy_var_624 := KeSynchronizeExecution(0, li2bplFunctionConstant484, 0);
    call {:si_unique_call 2649} sdv_KeReleaseSpinLock(0, OldIrql_10);
    goto L18;

  L18:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_1315;
    assume {:nonnull} Tmp_1315 != 0;
    assume Tmp_1315 > 0;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_1314;
    assume {:nonnull} Tmp_1314 != 0;
    assume Tmp_1314 > 0;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 2650} SerialGetNextIrp(CurrentPurgeIrp__SERIAL_DEVICE_EXTENSION(Extension_25), PurgeQueue__SERIAL_DEVICE_EXTENSION(Extension_25), NewIrp_5, 1, Extension_25);
    assume {:nonnull} NewIrp_5 != 0;
    assume NewIrp_5 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_1313 := 0;
    return;

  anon11_Then:
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    assume false;
    return;

  anon10_Then:
    assume {:partition} BAND(Mask_2, 8) == 0;
    goto L18;

  anon9_Then:
    assume {:partition} BAND(Mask_2, 2) == 0;
    goto L14;

  anon12_Then:
    assume {:partition} BAND(Mask_2, 1) == 0;
    goto L7;
}



procedure {:origName "_sdv_init19"} _sdv_init19();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init19"} _sdv_init19()
{
  var vslice_dummy_var_625: int;

  anon0:
    call {:si_unique_call 2651} vslice_dummy_var_625 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init18"} _sdv_init18();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init18"} _sdv_init18()
{
  var vslice_dummy_var_626: int;

  anon0:
    call {:si_unique_call 2652} vslice_dummy_var_626 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SerialClose"} SerialClose(actual_DeviceObject_26: int, actual_Irp_21: int) returns (Tmp_1323: int);
  modifies alloc, yogi_error, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialClose"} SerialClose(actual_DeviceObject_26: int, actual_Irp_21: int) returns (Tmp_1323: int)
{
  var {:pointer} SD1_2: int;
  var {:scalar} flushCount: int;
  var {:scalar} sdv_939: int;
  var {:scalar} sdv_940: int;
  var {:scalar} charTime_1: int;
  var {:scalar} Tmp_1325: int;
  var {:scalar} pendingDPCs: int;
  var {:pointer} Tmp_1327: int;
  var {:scalar} tenCharDelay: int;
  var {:pointer} Tmp_1328: int;
  var {:pointer} Tmp_1329: int;
  var {:pointer} Tmp_1330: int;
  var {:pointer} Tmp_1331: int;
  var {:pointer} Tmp_1332: int;
  var {:scalar} sdv_961: int;
  var {:pointer} Tmp_1333: int;
  var {:pointer} Tmp_1335: int;
  var {:pointer} Tmp_1336: int;
  var {:scalar} Tmp_1337: int;
  var {:scalar} status_41: int;
  var {:scalar} sdv_964: int;
  var {:pointer} Tmp_1339: int;
  var {:pointer} extension_5: int;
  var {:pointer} Tmp_1340: int;
  var {:scalar} sdv_1: int;
  var {:pointer} DeviceObject_26: int;
  var {:pointer} Irp_21: int;
  var vslice_dummy_var_627: int;
  var vslice_dummy_var_628: int;
  var vslice_dummy_var_629: int;
  var vslice_dummy_var_630: int;
  var vslice_dummy_var_631: int;
  var vslice_dummy_var_632: int;
  var vslice_dummy_var_633: int;
  var vslice_dummy_var_634: int;
  var vslice_dummy_var_635: int;
  var vslice_dummy_var_636: int;
  var vslice_dummy_var_637: int;
  var vslice_dummy_var_638: int;
  var vslice_dummy_var_639: int;
  var vslice_dummy_var_640: int;
  var vslice_dummy_var_641: int;
  var vslice_dummy_var_642: int;
  var vslice_dummy_var_643: int;
  var vslice_dummy_var_644: int;
  var vslice_dummy_var_645: int;
  var vslice_dummy_var_646: int;
  var vslice_dummy_var_647: int;
  var vslice_dummy_var_648: int;
  var vslice_dummy_var_649: int;
  var vslice_dummy_var_650: int;
  var vslice_dummy_var_651: int;
  var vslice_dummy_var_652: int;

  anon0:
    call {:si_unique_call 2653} charTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2654} tenCharDelay := __HAVOC_malloc(20);
    call {:si_unique_call 2655} sdv_1 := __HAVOC_malloc(20);
    DeviceObject_26 := actual_DeviceObject_26;
    Irp_21 := actual_Irp_21;
    call {:si_unique_call 2656} Tmp_1327 := __HAVOC_malloc(72);
    call {:si_unique_call 2657} Tmp_1328 := __HAVOC_malloc(96);
    call {:si_unique_call 2658} Tmp_1329 := __HAVOC_malloc(92);
    call {:si_unique_call 2659} Tmp_1330 := __HAVOC_malloc(64);
    call {:si_unique_call 2660} Tmp_1331 := __HAVOC_malloc(124);
    call {:si_unique_call 2661} Tmp_1333 := __HAVOC_malloc(72);
    call {:si_unique_call 2662} Tmp_1335 := __HAVOC_malloc(80);
    call {:si_unique_call 2663} Tmp_1336 := __HAVOC_malloc(76);
    call {:si_unique_call 2664} Tmp_1339 := __HAVOC_malloc(128);
    call {:si_unique_call 2665} Tmp_1340 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_26 != 0;
    assume DeviceObject_26 > 0;
    havoc extension_5;
    call {:si_unique_call 2666} ExAcquireFastMutex(0);
    call {:si_unique_call 2667} status_41 := SerialIRPPrologue(Irp_21, extension_5);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_41 != 0;
    Tmp_1331 := strConst__li2bpl312;
    call {:si_unique_call 2668} vslice_dummy_var_639 := SerialDbgPrintEx(3, Tmp_1331);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_41 == -1073741738;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 2669} sdv_ExFreePool(0);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    havoc status_41;
    goto L25;

  L25:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_41 != 259;
    Tmp_1340 := strConst__li2bpl2;
    call {:si_unique_call 2670} vslice_dummy_var_640 := SerialDbgPrintEx(9, Tmp_1340);
    call {:si_unique_call 2671} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2672} SerialIRPEpilogue(extension_5);
    call {:si_unique_call 2673} Tmp_1332 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1332 != 0;
    assume Tmp_1332 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 2674} vslice_dummy_var_641 := sdv_InterlockedDecrement(Tmp_1332);
    assume {:nonnull} Tmp_1332 != 0;
    assume Tmp_1332 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto L33;

  L33:
    call {:si_unique_call 2675} ExReleaseFastMutex(0);
    Tmp_1323 := status_41;
    goto L1;

  L1:
    call {:si_unique_call 2676} SLIC_SerialClose_exit(strConst__li2bpl0, Tmp_1323);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon42_Then:
    assume {:partition} status_41 == 259;
    goto L33;

  anon41_Then:
    assume {:partition} status_41 != -1073741738;
    goto L25;

  anon39_Then:
    assume {:partition} status_41 == 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    Tmp_1339 := strConst__li2bpl313;
    call {:si_unique_call 2677} vslice_dummy_var_642 := SerialDbgPrintEx(0, Tmp_1339);
    Tmp_1329 := strConst__li2bpl314;
    call {:si_unique_call 2678} vslice_dummy_var_643 := SerialDbgPrintEx(0, Tmp_1329);
    call {:si_unique_call 2679} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    Tmp_1327 := strConst__li2bpl2;
    call {:si_unique_call 2680} vslice_dummy_var_644 := SerialDbgPrintEx(9, Tmp_1327);
    call {:si_unique_call 2681} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2682} SerialIRPEpilogue(extension_5);
    Tmp_1323 := -1073741808;
    goto L1;

  anon40_Then:
    Tmp_1328 := strConst__li2bpl1;
    call {:si_unique_call 2683} vslice_dummy_var_645 := SerialDbgPrintEx(9, Tmp_1328);
    Tmp_1330 := strConst__li2bpl315;
    call {:si_unique_call 2684} vslice_dummy_var_646 := SerialDbgPrintEx(6, Tmp_1330);
    call {:si_unique_call 2685} SD1_2 := SerialGetCharTime(extension_5);
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} charTime_1 != 0;
    assume charTime_1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    call {:si_unique_call 2686} SetDeviceIsOpened(extension_5, 0, 0);
    call {:si_unique_call 2687} vslice_dummy_var_627 := KeSynchronizeExecution(0, li2bplFunctionConstant427, 0);
    flushCount := 320;
    goto L87;

  L87:
    call {:si_unique_call 2688} flushCount, sdv_940, Tmp_1337, vslice_dummy_var_628 := SerialClose_loop_L87(flushCount, sdv_940, Tmp_1337, extension_5, vslice_dummy_var_628);
    goto L87_last;

  L87_last:
    assume {:CounterLoop 320} {:Counter "flushCount"} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} flushCount != 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 2689} sdv_940 := corral_nondet();
    Tmp_1337 := BAND(sdv_940, BOR(32, 64));
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Tmp_1337 != 96;
    call {:si_unique_call 2690} vslice_dummy_var_628 := KeDelayExecutionThread(0, 0, 0);
    flushCount := flushCount - 1;
    goto anon53_Else_dummy;

  anon53_Else_dummy:
    assume false;
    return;

  anon53_Then:
    assume {:partition} Tmp_1337 == 96;
    goto L88;

  L88:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} flushCount != 0;
    goto L103;

  L103:
    call {:si_unique_call 2691} vslice_dummy_var_629 := KeSynchronizeExecution(0, li2bplFunctionConstant249, 0);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L108;

  L108:
    call {:si_unique_call 2692} sdv_961, vslice_dummy_var_630 := SerialClose_loop_L108(sdv_961, extension_5, vslice_dummy_var_630);
    goto L108_last;

  L108_last:
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 2721} sdv_961 := corral_nondet();
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(sdv_961, 32) != 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    flushCount := 320;
    goto L121;

  L121:
    call {:si_unique_call 2693} flushCount, sdv_939, Tmp_1325, vslice_dummy_var_631 := SerialClose_loop_L121(flushCount, sdv_939, Tmp_1325, extension_5, vslice_dummy_var_631);
    goto L121_last;

  L121_last:
    assume {:CounterLoop 320} {:Counter "flushCount"} true;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} flushCount != 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 2694} sdv_939 := corral_nondet();
    Tmp_1325 := BAND(sdv_939, BOR(32, 64));
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Tmp_1325 != 96;
    call {:si_unique_call 2695} vslice_dummy_var_631 := KeDelayExecutionThread(0, 0, 0);
    flushCount := flushCount - 1;
    goto anon54_Else_dummy;

  anon54_Else_dummy:
    assume false;
    return;

  anon54_Then:
    assume {:partition} Tmp_1325 == 96;
    goto L122;

  L122:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} flushCount == 0;
    call {:si_unique_call 2696} SerialMarkHardwareBroken(extension_5);
    goto L107;

  L107:
    assume {:nonnull} charTime_1 != 0;
    assume charTime_1 > 0;
    assume {:nonnull} tenCharDelay != 0;
    assume tenCharDelay > 0;
    call {:si_unique_call 2697} vslice_dummy_var_647 := KeDelayExecutionThread(0, 1, 0);
    call {:si_unique_call 2698} vslice_dummy_var_632 := SerialClrDTR(extension_5);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L147;

  L147:
    call {:si_unique_call 2699} vslice_dummy_var_634 := SerialClose_loop_L147(extension_5, vslice_dummy_var_634);
    goto L147_last;

  L147_last:
    call {:si_unique_call 2722} vslice_dummy_var_634 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 2700} vslice_dummy_var_635 := KeSynchronizeExecution(0, li2bplFunctionConstant468, 0);
    goto L144;

  L144:
    call {:si_unique_call 2701} vslice_dummy_var_633 := SerialClrRTS(extension_5);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 2702} sdv_ExFreePool(0);
    goto L159;

  L159:
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 2703} vslice_dummy_var_636 := IoCancelIrp(0);
    goto L165;

  L165:
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L172;

  L172:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    Tmp_1333 := strConst__li2bpl2;
    call {:si_unique_call 2704} vslice_dummy_var_648 := SerialDbgPrintEx(9, Tmp_1333);
    call {:si_unique_call 2705} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2706} SerialIRPEpilogue(extension_5);
    call {:si_unique_call 2707} Tmp_1332 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1332 != 0;
    assume Tmp_1332 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 2708} sdv_964 := sdv_InterlockedDecrement(Tmp_1332);
    assume {:nonnull} Tmp_1332 != 0;
    assume Tmp_1332 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    pendingDPCs := sdv_964;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} pendingDPCs != 0;
    Tmp_1335 := strConst__li2bpl317;
    call {:si_unique_call 2709} vslice_dummy_var_649 := SerialDbgPrintEx(4, Tmp_1335);
    call {:si_unique_call 2710} vslice_dummy_var_638 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L188;

  L188:
    Tmp_1336 := strConst__li2bpl316;
    call {:si_unique_call 2711} vslice_dummy_var_650 := SerialDbgPrintEx(4, Tmp_1336);
    call {:si_unique_call 2712} ExReleaseFastMutex(0);
    call {:si_unique_call 2713} Tmp_1332 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1332 != 0;
    assume Tmp_1332 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 2714} vslice_dummy_var_651 := sdv_InterlockedIncrement(Tmp_1332);
    assume {:nonnull} Tmp_1332 != 0;
    assume Tmp_1332 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 2715} Tmp_1332 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1332 != 0;
    assume Tmp_1332 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 2716} vslice_dummy_var_652 := sdv_InterlockedDecrement(Tmp_1332);
    assume {:nonnull} Tmp_1332 != 0;
    assume Tmp_1332 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 2717} MmUnlockPagableImageSection(0);
    Tmp_1323 := 0;
    goto L1;

  anon57_Then:
    assume {:partition} pendingDPCs == 0;
    goto L188;

  anon51_Then:
    call {:si_unique_call 2718} vslice_dummy_var_637 := SerialGotoPowerState(DeviceObject_26, extension_5, 4);
    goto L172;

  anon56_Then:
    goto L165;

  anon55_Then:
    goto L159;

  anon50_Then:
    goto anon50_Then_dummy;

  anon50_Then_dummy:
    assume false;
    return;

  anon49_Then:
    goto L144;

  anon48_Then:
    assume {:partition} flushCount != 0;
    goto L107;

  anon47_Then:
    assume {:partition} flushCount == 0;
    goto L122;

  anon46_Then:
    assume {:partition} BAND(sdv_961, 32) == 0;
    call {:si_unique_call 2719} vslice_dummy_var_630 := KeDelayExecutionThread(0, 0, 0);
    goto anon46_Then_dummy;

  anon46_Then_dummy:
    assume false;
    return;

  anon45_Then:
    goto L107;

  anon44_Then:
    assume {:partition} flushCount == 0;
    call {:si_unique_call 2720} SerialMarkHardwareBroken(extension_5);
    goto L103;

  anon43_Then:
    assume {:partition} flushCount == 0;
    goto L88;
}



procedure {:origName "SerialCleanup"} SerialCleanup(actual_DeviceObject_27: int, actual_Irp_22: int) returns (Tmp_1341: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialCleanup"} SerialCleanup(actual_DeviceObject_27: int, actual_Irp_22: int) returns (Tmp_1341: int)
{
  var {:pointer} Tmp_1342: int;
  var {:pointer} Tmp_1343: int;
  var {:scalar} status_42: int;
  var {:pointer} extension_6: int;
  var {:pointer} Tmp_1344: int;
  var {:pointer} DeviceObject_27: int;
  var {:pointer} Irp_22: int;
  var vslice_dummy_var_653: int;
  var vslice_dummy_var_654: int;
  var vslice_dummy_var_655: int;

  anon0:
    DeviceObject_27 := actual_DeviceObject_27;
    Irp_22 := actual_Irp_22;
    call {:si_unique_call 2723} Tmp_1342 := __HAVOC_malloc(96);
    call {:si_unique_call 2724} Tmp_1343 := __HAVOC_malloc(72);
    call {:si_unique_call 2725} Tmp_1344 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_27 != 0;
    assume DeviceObject_27 > 0;
    havoc extension_6;
    call {:si_unique_call 2726} sdv_do_paged_code_check();
    call {:si_unique_call 2727} status_42 := SerialIRPPrologue(Irp_22, extension_6);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_42 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} status_42 == -1073741738;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    havoc status_42;
    goto L18;

  L18:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_42 != 259;
    Tmp_1343 := strConst__li2bpl2;
    call {:si_unique_call 2728} vslice_dummy_var_653 := SerialDbgPrintEx(9, Tmp_1343);
    call {:si_unique_call 2729} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2730} SerialIRPEpilogue(extension_6);
    goto L21;

  L21:
    Tmp_1341 := status_42;
    goto L1;

  L1:
    call {:si_unique_call 2731} SLIC_SerialCleanup_exit(strConst__li2bpl0, Tmp_1341);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} status_42 == 259;
    goto L21;

  anon10_Then:
    assume {:partition} status_42 != -1073741738;
    goto L18;

  anon9_Then:
    assume {:partition} status_42 == 0;
    Tmp_1342 := strConst__li2bpl1;
    call {:si_unique_call 2732} vslice_dummy_var_654 := SerialDbgPrintEx(9, Tmp_1342);
    call {:si_unique_call 2733} SerialKillPendingIrps(DeviceObject_27);
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    Tmp_1344 := strConst__li2bpl2;
    call {:si_unique_call 2734} vslice_dummy_var_655 := SerialDbgPrintEx(9, Tmp_1344);
    call {:si_unique_call 2735} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2736} SerialIRPEpilogue(extension_6);
    Tmp_1341 := 0;
    goto L1;
}



procedure {:origName "SerialCreateOpen"} SerialCreateOpen(actual_DeviceObject_28: int, actual_Irp_23: int) returns (Tmp_1346: int);
  modifies alloc, yogi_error, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialCreateOpen"} SerialCreateOpen(actual_DeviceObject_28: int, actual_Irp_23: int) returns (Tmp_1346: int)
{
  var {:scalar} localStatus_1: int;
  var {:pointer} Tmp_1347: int;
  var {:pointer} sdv_972: int;
  var {:pointer} Tmp_1348: int;
  var {:pointer} sdv_974: int;
  var {:pointer} Tmp_1349: int;
  var {:pointer} sdv_982: int;
  var {:scalar} sdv_983: int;
  var {:scalar} sdv_984: int;
  var {:pointer} Tmp_1350: int;
  var {:pointer} sdv_989: int;
  var {:pointer} Tmp_1351: int;
  var {:pointer} Tmp_1352: int;
  var {:pointer} Tmp_1353: int;
  var {:pointer} extension_7: int;
  var {:pointer} Tmp_1354: int;
  var {:scalar} checkOpen: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} Irp_23: int;
  var boogieTmp: int;
  var vslice_dummy_var_656: int;
  var vslice_dummy_var_657: int;
  var vslice_dummy_var_658: int;
  var vslice_dummy_var_659: int;
  var vslice_dummy_var_660: int;
  var vslice_dummy_var_661: int;
  var vslice_dummy_var_662: int;
  var vslice_dummy_var_663: int;
  var vslice_dummy_var_664: int;
  var vslice_dummy_var_665: int;
  var vslice_dummy_var_666: int;
  var vslice_dummy_var_667: int;
  var vslice_dummy_var_668: int;
  var vslice_dummy_var_669: int;
  var vslice_dummy_var_670: int;
  var vslice_dummy_var_671: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;

  anon0:
    call {:si_unique_call 2737} checkOpen := __HAVOC_malloc(8);
    DeviceObject_28 := actual_DeviceObject_28;
    Irp_23 := actual_Irp_23;
    call {:si_unique_call 2738} Tmp_1347 := __HAVOC_malloc(72);
    call {:si_unique_call 2739} Tmp_1348 := __HAVOC_malloc(96);
    call {:si_unique_call 2740} Tmp_1349 := __HAVOC_malloc(72);
    call {:si_unique_call 2741} Tmp_1350 := __HAVOC_malloc(84);
    call {:si_unique_call 2742} Tmp_1351 := __HAVOC_malloc(72);
    call {:si_unique_call 2743} Tmp_1352 := __HAVOC_malloc(72);
    call {:si_unique_call 2744} Tmp_1354 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    havoc extension_7;
    call {:si_unique_call 2745} sdv_do_paged_code_check();
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    call {:si_unique_call 2746} sdv_IoCompleteRequest(0, 0);
    Tmp_1346 := -1073741670;
    goto L1;

  L1:
    call {:si_unique_call 2747} SLIC_SerialCreateOpen_exit(strConst__li2bpl0, Tmp_1346);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    call {:si_unique_call 2748} ExAcquireFastMutex(0);
    call {:si_unique_call 2749} localStatus_1 := SerialIRPPrologue(Irp_23, extension_7);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} localStatus_1 != 0;
    call {:si_unique_call 2750} ExReleaseFastMutex(0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} localStatus_1 != 259;
    Tmp_1351 := strConst__li2bpl2;
    call {:si_unique_call 2751} vslice_dummy_var_659 := SerialDbgPrintEx(9, Tmp_1351);
    call {:si_unique_call 2752} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2753} SerialIRPEpilogue(extension_7);
    goto L32;

  L32:
    Tmp_1346 := localStatus_1;
    goto L1;

  anon35_Then:
    assume {:partition} localStatus_1 == 259;
    goto L32;

  anon34_Then:
    assume {:partition} localStatus_1 == 0;
    call {:si_unique_call 2754} Tmp_1353 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2755} sdv_983 := sdv_InterlockedIncrement(Tmp_1353);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_983 != 1;
    call {:si_unique_call 2756} ExReleaseFastMutex(0);
    call {:si_unique_call 2757} Tmp_1353 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2758} vslice_dummy_var_660 := sdv_InterlockedDecrement(Tmp_1353);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Tmp_1354 := strConst__li2bpl2;
    call {:si_unique_call 2759} vslice_dummy_var_661 := SerialDbgPrintEx(9, Tmp_1354);
    call {:si_unique_call 2760} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2761} SerialIRPEpilogue(extension_7);
    Tmp_1346 := -1073741790;
    goto L1;

  anon36_Then:
    assume {:partition} sdv_983 == 1;
    Tmp_1348 := strConst__li2bpl1;
    call {:si_unique_call 2762} vslice_dummy_var_662 := SerialDbgPrintEx(9, Tmp_1348);
    Tmp_1350 := strConst__li2bpl318;
    call {:si_unique_call 2763} vslice_dummy_var_663 := SerialDbgPrintEx(6, Tmp_1350);
    call {:si_unique_call 2764} sdv_982 := sdv_IoGetCurrentIrpStackLocation(Irp_23);
    assume {:nonnull} sdv_982 != 0;
    assume sdv_982 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    call {:si_unique_call 2765} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    call {:si_unique_call 2766} Tmp_1353 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2767} vslice_dummy_var_664 := sdv_InterlockedDecrement(Tmp_1353);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    Tmp_1349 := strConst__li2bpl2;
    call {:si_unique_call 2768} vslice_dummy_var_665 := SerialDbgPrintEx(9, Tmp_1349);
    call {:si_unique_call 2769} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2770} SerialIRPEpilogue(extension_7);
    Tmp_1346 := -1073741565;
    goto L1;

  anon37_Then:
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2771} sdv_984 := corral_nondet();
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_984 != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_984 != 1;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_984 == 2;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    havoc vslice_dummy_var_290;
    call {:si_unique_call 2772} sdv_972 := ExAllocatePoolWithTag(0, vslice_dummy_var_290, -666022077);
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto L96;

  L96:
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    havoc vslice_dummy_var_291;
    call {:si_unique_call 2773} sdv_974 := ExAllocatePoolWithTag(0, vslice_dummy_var_291, -666022077);
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L95;

  L95:
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    havoc vslice_dummy_var_292;
    call {:si_unique_call 2774} sdv_989 := ExAllocatePoolWithTag(0, vslice_dummy_var_292, -666022077);
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto L94;

  L94:
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    call {:si_unique_call 2775} MmLockPagableSectionByHandle(0);
    call {:si_unique_call 2776} vslice_dummy_var_656 := SerialGotoPowerState(DeviceObject_28, extension_7, 1);
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2777} boogieTmp := corral_nondet();
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2778} boogieTmp := corral_nondet();
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2779} boogieTmp := corral_nondet();
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2780} vslice_dummy_var_666 := KeSynchronizeExecution(0, li2bplFunctionConstant411, 0);
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 2781} vslice_dummy_var_657 := KeSynchronizeExecution(0, li2bplFunctionConstant469, 0);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L151;

  L151:
    call {:si_unique_call 2782} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc localStatus_1;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} localStatus_1 >= 0;
    goto L158;

  L158:
    Tmp_1352 := strConst__li2bpl2;
    call {:si_unique_call 2783} vslice_dummy_var_667 := SerialDbgPrintEx(9, Tmp_1352);
    call {:si_unique_call 2784} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2785} SerialIRPEpilogue(extension_7);
    Tmp_1346 := localStatus_1;
    goto L1;

  anon46_Then:
    assume {:partition} 0 > localStatus_1;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 2786} sdv_ExFreePool(0);
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto L168;

  L168:
    call {:si_unique_call 2787} Tmp_1353 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2788} vslice_dummy_var_668 := sdv_InterlockedDecrement(Tmp_1353);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto L158;

  anon41_Then:
    goto L168;

  anon45_Then:
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 2789} vslice_dummy_var_658 := KeSynchronizeExecution(0, li2bplFunctionConstant469, 0);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L151;

  anon40_Then:
    assume {:nonnull} checkOpen != 0;
    assume checkOpen > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} checkOpen != 0;
    assume checkOpen > 0;
    call {:si_unique_call 2790} vslice_dummy_var_669 := KeSynchronizeExecution(0, li2bplFunctionConstant470, 0);
    goto L151;

  anon39_Then:
    call {:si_unique_call 2791} ExReleaseFastMutex(0);
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    call {:si_unique_call 2792} Tmp_1353 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2793} vslice_dummy_var_670 := sdv_InterlockedDecrement(Tmp_1353);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    Tmp_1347 := strConst__li2bpl2;
    call {:si_unique_call 2794} vslice_dummy_var_671 := SerialDbgPrintEx(9, Tmp_1347);
    call {:si_unique_call 2795} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2796} SerialIRPEpilogue(extension_7);
    Tmp_1346 := -1073741670;
    goto L1;

  anon47_Then:
    goto L94;

  anon48_Then:
    goto L94;

  anon42_Then:
    assume {:partition} sdv_984 != 2;
    goto L94;

  anon43_Then:
    assume {:partition} sdv_984 == 1;
    goto L96;

  anon38_Then:
    assume {:partition} sdv_984 == 0;
    goto L95;
}



procedure {:origName "SerialGetCharTime"} SerialGetCharTime(actual_Extension_26: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialGetCharTime"} SerialGetCharTime(actual_Extension_26: int) returns (structPtr888Tmp: int)
{
  var {:scalar} Tmp_1355: int;
  var {:scalar} dataSize: int;
  var {:scalar} charTime_2: int;
  var {:scalar} Tmp_1356: int;
  var {:scalar} bitTime: int;
  var {:scalar} paritySize: int;
  var {:scalar} Tmp_1358: int;
  var {:scalar} tmp: int;
  var {:scalar} stopSize: int;
  var {:scalar} Tmp: int;
  var {:pointer} Extension_26: int;

  anon0:
    call {:si_unique_call 2797} tmp := __HAVOC_malloc(20);
    call {:si_unique_call 2798} Tmp := __HAVOC_malloc(20);
    Extension_26 := actual_Extension_26;
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    havoc Tmp_1358;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Tmp_1358 == 1;
    dataSize := 6;
    goto L15;

  L15:
    paritySize := 1;
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L18;

  L18:
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    stopSize := 2;
    goto L21;

  L21:
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    havoc bitTime;
    charTime_2 := bitTime + (dataSize + paritySize + stopSize) * bitTime;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    structPtr888Tmp := Tmp;
    return;

  anon14_Then:
    stopSize := 1;
    goto L21;

  anon16_Then:
    paritySize := 0;
    goto L18;

  anon15_Then:
    assume {:partition} Tmp_1358 != 1;
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    havoc Tmp_1355;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Tmp_1355 == 2;
    dataSize := 7;
    goto L15;

  anon17_Then:
    assume {:partition} Tmp_1355 != 2;
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    havoc Tmp_1356;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Tmp_1356 == 3;
    dataSize := 8;
    goto L15;

  anon18_Then:
    assume {:partition} Tmp_1356 != 3;
    goto L15;

  anon13_Then:
    dataSize := 5;
    goto L15;
}



procedure {:origName "SerialDisableUART"} SerialDisableUART(actual_Context_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialDisableUART"} SerialDisableUART(actual_Context_7: int)
{
  var {:scalar} sdv_995: int;
  var {:pointer} extension_8: int;
  var {:pointer} Context_7: int;
  var vslice_dummy_var_672: int;

  anon0:
    call {:si_unique_call 2799} vslice_dummy_var_672 := __HAVOC_malloc(4);
    Context_7 := actual_Context_7;
    extension_8 := Context_7;
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    call {:si_unique_call 2800} sdv_995 := corral_nondet();
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "SerialDrainUART"} SerialDrainUART(actual_PDevExt_21: int, actual_PDrainTime: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialDrainUART"} SerialDrainUART(actual_PDevExt_21: int, actual_PDrainTime: int)
{
  var {:scalar} Tmp_1366: int;
  var {:scalar} sdv_996: int;
  var {:pointer} PDevExt_21: int;
  var vslice_dummy_var_673: int;
  var vslice_dummy_var_674: int;

  anon0:
    call {:si_unique_call 2801} vslice_dummy_var_673 := __HAVOC_malloc(4);
    PDevExt_21 := actual_PDevExt_21;
    call {:si_unique_call 2802} sdv_do_paged_code_check();
    goto L6;

  L6:
    call {:si_unique_call 2803} Tmp_1366, sdv_996, vslice_dummy_var_674 := SerialDrainUART_loop_L6(Tmp_1366, sdv_996, PDevExt_21, vslice_dummy_var_674);
    goto L6_last;

  L6_last:
    assume {:nonnull} PDevExt_21 != 0;
    assume PDevExt_21 > 0;
    call {:si_unique_call 2805} sdv_996 := corral_nondet();
    Tmp_1366 := BAND(sdv_996, BOR(32, 64));
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Tmp_1366 != 96;
    call {:si_unique_call 2804} vslice_dummy_var_674 := KeDelayExecutionThread(0, 0, 0);
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} Tmp_1366 == 96;
    return;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_1011: int, actual_sdv_1012: int) returns (Tmp_1377: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_1011: int, actual_sdv_1012: int) returns (Tmp_1377: int)
{
  var {:scalar} sdv_1013: int;

  anon0:
    call {:si_unique_call 2806} Tmp_1377 := __HAVOC_malloc(4);
    call {:si_unique_call 2807} sdv_1013 := __HAVOC_malloc(4);
    call {:si_unique_call 2808} SLIC_sdv_InsertTailList_entry(0);
    assume {:nonnull} Tmp_1377 != 0;
    assume Tmp_1377 > 0;
    assume {:nonnull} sdv_1013 != 0;
    assume sdv_1013 > 0;
    return;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.AddDevice__DRIVER_EXTENSION"} {:fieldname "AddDevice"} AddDevice__DRIVER_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AddressSpace__CONFIG_DATA"} {:fieldname "AddressSpace"} AddressSpace__CONFIG_DATA(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.AddressSpace__SERIAL_DEVICE_EXTENSION"} {:fieldname "AddressSpace"} AddressSpace__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 568
}

function {:inline true} {:fieldmap "Mem_T.Affinity__CONFIG_DATA"} {:fieldname "Affinity"} Affinity__CONFIG_DATA(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.Affinity_unnamed_tag_43"} {:fieldname "Affinity"} Affinity_unnamed_tag_43(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Alignment_unnamed_tag_54"} {:fieldname "Alignment"} Alignment_unnamed_tag_54(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__SERIAL_GLOBALS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AllocatedResourcesTranslated_unnamed_tag_38"} {:fieldname "AllocatedResourcesTranslated"} AllocatedResourcesTranslated_unnamed_tag_38(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AllocatedResources_unnamed_tag_38"} {:fieldname "AllocatedResources"} AllocatedResources_unnamed_tag_38(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AllocationSize__FILE_STANDARD_INFORMATION"} {:fieldname "AllocationSize"} AllocationSize__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "AlternativeLists"} AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Argument4"} Argument4_unnamed_tag_40(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_3"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BaseIOAddress__SERIAL_WMI_HW_DATA"} {:fieldname "BaseIOAddress"} BaseIOAddress__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.BaudClock__CM_SERIAL_DEVICE_DATA"} {:fieldname "BaudClock"} BaudClock__CM_SERIAL_DEVICE_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BaudRate__SERIAL_BAUD_RATE"} {:fieldname "BaudRate"} BaudRate__SERIAL_BAUD_RATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.BitsPerByte__SERIAL_WMI_COMM_DATA"} {:fieldname "BitsPerByte"} BitsPerByte__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BreakChar__SERIAL_CHARS"} {:fieldname "BreakChar"} BreakChar__SERIAL_CHARS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BufferSizePt8__SERIAL_DEVICE_EXTENSION"} {:fieldname "BufferSizePt8"} BufferSizePt8__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 356
}

function {:inline true} {:fieldmap "Mem_T.BufferSize__SERIAL_DEVICE_EXTENSION"} {:fieldname "BufferSize"} BufferSize__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.Buffer__UNICODE_STRING"} {:fieldname "Buffer"} Buffer__UNICODE_STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "BusNumber"} BusNumber__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CONFIG_DATA"} {:fieldname "BusNumber"} BusNumber__CONFIG_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "BusNumber"} BusNumber__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__SERIAL_DEVICE_EXTENSION"} {:fieldname "BusNumber"} BusNumber__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 572
}

function {:inline true} {:fieldmap "Mem_T.CIsrSw__SERIAL_DEVICE_EXTENSION"} {:fieldname "CIsrSw"} CIsrSw__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2360
}

function {:inline true} {:fieldmap "Mem_T.CancelIrql__IRP"} {:fieldname "CancelIrql"} CancelIrql__IRP(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CharsCopied__SERIAL_UPDATE_CHAR"} {:fieldname "CharsCopied"} CharsCopied__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CharsInInterruptBuffer__SERIAL_DEVICE_EXTENSION"} {:fieldname "CharsInInterruptBuffer"} CharsInInterruptBuffer__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 332
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "ClockRate"} ClockRate__CONFIG_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.ClockRate__SERIAL_DEVICE_EXTENSION"} {:fieldname "ClockRate"} ClockRate__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommErrorDpc"} CommErrorDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 852
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommWaitDpc"} CommWaitDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 892
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "CommonInterruptObject"} CommonInterruptObject__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteImmediateDpc"} CompleteImmediateDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 932
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteReadDpc"} CompleteReadDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 692
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteWriteDpc"} CompleteWriteDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 652
}

function {:inline true} {:fieldmap "Mem_T.Completed__SERIAL_UPDATE_CHAR"} {:fieldname "Completed"} Completed__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.Context__SERIAL_CISR_SW"} {:fieldname "Context"} Context__SERIAL_CISR_SW(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ControlHandShake__SERIAL_HANDFLOW"} {:fieldname "ControlHandShake"} ControlHandShake__SERIAL_HANDFLOW(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ControlLock__SERIAL_DEVICE_EXTENSION"} {:fieldname "ControlLock"} ControlLock__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 644
}

function {:inline true} {:fieldmap "Mem_T.Controller__CONFIG_DATA"} {:fieldname "Controller"} Controller__CONFIG_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Controller__SERIAL_DEVICE_EXTENSION"} {:fieldname "Controller"} Controller__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T.CountOfTryingToLowerRTS__SERIAL_DEVICE_EXTENSION"} {:fieldname "CountOfTryingToLowerRTS"} CountOfTryingToLowerRTS__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.Count__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "Count"} Count__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Count__CM_RESOURCE_LIST"} {:fieldname "Count"} Count__CM_RESOURCE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Count__IO_RESOURCE_LIST"} {:fieldname "Count"} Count__IO_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Counter__SERIAL_XOFF_COUNTER"} {:fieldname "Counter"} Counter__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Create_unnamed_tag_8"} {:fieldname "Create"} Create_unnamed_tag_8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CreatedSerialCommEntry__SERIAL_DEVICE_EXTENSION"} {:fieldname "CreatedSerialCommEntry"} CreatedSerialCommEntry__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 640
}

function {:inline true} {:fieldmap "Mem_T.CreatedSymbolicLink__SERIAL_DEVICE_EXTENSION"} {:fieldname "CreatedSymbolicLink"} CreatedSymbolicLink__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 636
}

function {:inline true} {:fieldmap "Mem_T.CurrentBaud__SERIAL_DEVICE_EXTENSION"} {:fieldname "CurrentBaud"} CurrentBaud__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.CurrentByteOffset__FILE_POSITION_INFORMATION"} {:fieldname "CurrentByteOffset"} CurrentByteOffset__FILE_POSITION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CurrentCharSlot__SERIAL_DEVICE_EXTENSION"} {:fieldname "CurrentCharSlot"} CurrentCharSlot__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentImmediateIrp"} CurrentImmediateIrp__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 308
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentMaskIrp"} CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 296
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentPurgeIrp"} CurrentPurgeIrp__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentReadIrp"} CurrentReadIrp__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.CurrentRxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentRxQueue"} CurrentRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_7"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_7(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CurrentTxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentTxQueue"} CurrentTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWaitIrp"} CurrentWaitIrp__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWriteIrp"} CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 292
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentXoffIrp"} CurrentXoffIrp__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.CutOverAmount__SERIAL_DEVICE_EXTENSION"} {:fieldname "CutOverAmount"} CutOverAmount__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataLength__KEY_VALUE_FULL_INFORMATION"} {:fieldname "DataLength"} DataLength__KEY_VALUE_FULL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Data__SERIAL_IOCTL_SYNC"} {:fieldname "Data"} Data__SERIAL_IOCTL_SYNC(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DebugLevel"} DebugLevel__SERIAL_FIRMWARE_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DefaultData__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultData"} DefaultData__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DefaultLength__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultLength"} DefaultLength__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DefaultPermitSystemWideShare__SERIAL_USER_DATA"} {:fieldname "DefaultPermitSystemWideShare"} DefaultPermitSystemWideShare__SERIAL_USER_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.DefaultType__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultType"} DefaultType__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DeletePending__FILE_STANDARD_INFORMATION"} {:fieldname "DeletePending"} DeletePending__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Descriptors__IO_RESOURCE_LIST"} {:fieldname "Descriptors"} Descriptors__IO_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceClassSymbolicName"} DeviceClassSymbolicName__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2348
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceIsOpened__SERIAL_DEVICE_EXTENSION"} {:fieldname "DeviceIsOpened"} DeviceIsOpened__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 524
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceName"} DeviceName__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__IO_STACK_LOCATION"} {:fieldname "DeviceObject"} DeviceObject__IO_STACK_LOCATION(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__SERIAL_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DevicePNPAccept"} DevicePNPAccept__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2368
}

function {:inline true} {:fieldmap "Mem_T.DeviceStateMap__SERIAL_DEVICE_EXTENSION"} {:fieldname "DeviceStateMap"} DeviceStateMap__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2648
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._SERIAL_DEVICE_STATE"} {:fieldname "DeviceState"} DeviceState__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2632
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__SERIAL_DEVICE_EXTENSION"} {:fieldname "DeviceWake"} DeviceWake__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3104
}

function {:inline true} {:fieldmap "Mem_T.Directory__FILE_STANDARD_INFORMATION"} {:fieldname "Directory"} Directory__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DisablePort"} DisablePort__CONFIG_DATA(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DisablePort"} DisablePort__SERIAL_USER_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DosName"} DosName__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DpcCount__SERIAL_DEVICE_EXTENSION"} {:fieldname "DpcCount"} DpcCount__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3312
}

function {:inline true} {:fieldmap "Mem_T.Dpc__KTIMER"} {:fieldname "Dpc"} Dpc__KTIMER(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DriverExtension__DRIVER_OBJECT"} {:fieldname "DriverExtension"} DriverExtension__DRIVER_OBJECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__DEVICE_OBJECT"} {:fieldname "DriverObject"} DriverObject__DEVICE_OBJECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__SERIAL_DEVICE_EXTENSION"} {:fieldname "DriverObject"} DriverObject__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2220
}

function {:inline true} {:fieldmap "Mem_T.DriverUnload__DRIVER_OBJECT"} {:fieldname "DriverUnload"} DriverUnload__DRIVER_OBJECT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.EndOfFile__FILE_STANDARD_INFORMATION"} {:fieldname "EndOfFile"} EndOfFile__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.EntryContext__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "EntryContext"} EntryContext__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.EofChar__SERIAL_CHARS"} {:fieldname "EofChar"} EofChar__SERIAL_CHARS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ErrorChar__SERIAL_CHARS"} {:fieldname "ErrorChar"} ErrorChar__SERIAL_CHARS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ErrorWord__SERIAL_DEVICE_EXTENSION"} {:fieldname "ErrorWord"} ErrorWord__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.EscapeChar__SERIAL_DEVICE_EXTENSION"} {:fieldname "EscapeChar"} EscapeChar__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 612
}

function {:inline true} {:fieldmap "Mem_T.EventChar__SERIAL_CHARS"} {:fieldname "EventChar"} EventChar__SERIAL_CHARS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ExecuteWmiMethod__WMILIB_CONTEXT"} {:fieldname "ExecuteWmiMethod"} ExecuteWmiMethod__WMILIB_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_CHECK_OPEN"} {:fieldname "Extension"} Extension__SERIAL_CHECK_OPEN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_IOCTL_SYNC"} {:fieldname "Extension"} Extension__SERIAL_IOCTL_SYNC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_RESIZE_PARAMS"} {:fieldname "Extension"} Extension__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_UPDATE_CHAR"} {:fieldname "Extension"} Extension__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extensions__SERIAL_MULTIPORT_DISPATCH"} {:fieldname "Extensions"} Extensions__SERIAL_MULTIPORT_DISPATCH(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FifoPresent__SERIAL_DEVICE_EXTENSION"} {:fieldname "FifoPresent"} FifoPresent__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 624
}

function {:inline true} {:fieldmap "Mem_T.FileInformationClass_unnamed_tag_13"} {:fieldname "FileInformationClass"} FileInformationClass_unnamed_tag_13(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FilterResourceRequirements_unnamed_tag_8"} {:fieldname "FilterResourceRequirements"} FilterResourceRequirements_unnamed_tag_8(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirstReadableChar__SERIAL_DEVICE_EXTENSION"} {:fieldname "FirstReadableChar"} FirstReadableChar__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.FlagsLock__SERIAL_DEVICE_EXTENSION"} {:fieldname "FlagsLock"} FlagsLock__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 648
}

function {:inline true} {:fieldmap "Mem_T.Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "Flags"} Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__IO_RESOURCE_DESCRIPTOR"} {:fieldname "Flags"} Flags__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Flags__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Flags"} Flags__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Flags"} Flags__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2500
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FlowReplace__SERIAL_HANDFLOW"} {:fieldname "FlowReplace"} FlowReplace__SERIAL_HANDFLOW(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ForceFIFOEnableDefault__SERIAL_USER_DATA"} {:fieldname "ForceFIFOEnableDefault"} ForceFIFOEnableDefault__SERIAL_USER_DATA(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "ForceFIFOEnable"} ForceFIFOEnable__SERIAL_USER_DATA(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "ForceFifoEnableDefault"} ForceFifoEnableDefault__SERIAL_FIRMWARE_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "ForceFifoEnable"} ForceFifoEnable__CONFIG_DATA(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.GlobalsSpinLock__SERIAL_GLOBALS"} {:fieldname "GlobalsSpinLock"} GlobalsSpinLock__SERIAL_GLOBALS(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.GuidCount__WMILIB_CONTEXT"} {:fieldname "GuidCount"} GuidCount__WMILIB_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.GuidList__WMILIB_CONTEXT"} {:fieldname "GuidList"} GuidList__WMILIB_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._SERIAL_HANDFLOW"} {:fieldname "HandFlow"} HandFlow__SERIAL_BASIC_SETTINGS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.HandFlow__SERIAL_DEVICE_EXTENSION"} {:fieldname "HandFlow"} HandFlow__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 480
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HistoryMask__SERIAL_DEVICE_EXTENSION"} {:fieldname "HistoryMask"} HistoryMask__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 368
}

function {:inline true} {:fieldmap "Mem_T.IER__SERIAL_DEVICE_STATE"} {:fieldname "IER"} IER__SERIAL_DEVICE_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ImmediateTotalTimer"} ImmediateTotalTimer__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1732
}

function {:inline true} {:fieldmap "Mem_T.InSize__SERIAL_QUEUE_SIZE"} {:fieldname "InSize"} InSize__SERIAL_QUEUE_SIZE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Indexed"} Indexed__CONFIG_DATA(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Indexed__SERIAL_DEVICE_EXTENSION"} {:fieldname "Indexed"} Indexed__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 584
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_20"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "InterfaceType"} InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CONFIG_DATA"} {:fieldname "InterfaceType"} InterfaceType__CONFIG_DATA(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "InterfaceType"} InterfaceType__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__SERIAL_DEVICE_EXTENSION"} {:fieldname "InterfaceType"} InterfaceType__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 576
}

function {:inline true} {:fieldmap "Mem_T.InterruptMode__CONFIG_DATA"} {:fieldname "InterruptMode"} InterruptMode__CONFIG_DATA(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.InterruptReadBuffer__SERIAL_DEVICE_EXTENSION"} {:fieldname "InterruptReadBuffer"} InterruptReadBuffer__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.InterruptShareable__SERIAL_DEVICE_EXTENSION"} {:fieldname "InterruptShareable"} InterruptShareable__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 632
}

function {:inline true} {:fieldmap "Mem_T.InterruptStatus__CONFIG_DATA"} {:fieldname "InterruptStatus"} InterruptStatus__CONFIG_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.InterruptStatus__SERIAL_DEVICE_EXTENSION"} {:fieldname "InterruptStatus"} InterruptStatus__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 248
}

function {:inline true} {:fieldmap "Mem_T.InterruptType__SERIAL_WMI_HW_DATA"} {:fieldname "InterruptType"} InterruptType__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.P_KINTERRUPT"} {:fieldname "Interrupt"} Interrupt__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.Interrupt_unnamed_tag_41"} {:fieldname "Interrupt"} Interrupt_unnamed_tag_41(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Interrupt_unnamed_tag_53"} {:fieldname "Interrupt"} Interrupt_unnamed_tag_53(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IntervalReadTimeoutDpc"} IntervalReadTimeoutDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 772
}

function {:inline true} {:fieldmap "Mem_T.IntervalTimeToUse__SERIAL_DEVICE_EXTENSION"} {:fieldname "IntervalTimeToUse"} IntervalTimeToUse__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.IntervalTime__SERIAL_DEVICE_EXTENSION"} {:fieldname "IntervalTime"} IntervalTime__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoResourceRequirementList_unnamed_tag_29"} {:fieldname "IoResourceRequirementList"} IoResourceRequirementList_unnamed_tag_29(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IrpMaskLocation__SERIAL_DEVICE_EXTENSION"} {:fieldname "IrpMaskLocation"} IrpMaskLocation__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T.IrqAffinityMask__SERIAL_WMI_HW_DATA"} {:fieldname "IrqAffinityMask"} IrqAffinityMask__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.IrqLevel__SERIAL_WMI_HW_DATA"} {:fieldname "IrqLevel"} IrqLevel__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IrqNumber__SERIAL_WMI_HW_DATA"} {:fieldname "IrqNumber"} IrqNumber__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IrqVector__SERIAL_WMI_HW_DATA"} {:fieldname "IrqVector"} IrqVector__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irql__SERIAL_DEVICE_EXTENSION"} {:fieldname "Irql"} Irql__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 556
}

function {:inline true} {:fieldmap "Mem_T.IsBusy__SERIAL_WMI_COMM_DATA"} {:fieldname "IsBusy"} IsBusy__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.IsrFunc__SERIAL_CISR_SW"} {:fieldname "IsrFunc"} IsrFunc__SERIAL_CISR_SW(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IsrUnlockPagesDpc"} IsrUnlockPagesDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1172
}

function {:inline true} {:fieldmap "Mem_T.IsrWaitMask__SERIAL_DEVICE_EXTENSION"} {:fieldname "IsrWaitMask"} IsrWaitMask__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 364
}

function {:inline true} {:fieldmap "Mem_T.LCR__SERIAL_DEVICE_STATE"} {:fieldname "LCR"} LCR__SERIAL_DEVICE_STATE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.LastCharSlot__SERIAL_DEVICE_EXTENSION"} {:fieldname "LastCharSlot"} LastCharSlot__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_16"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_42"} {:fieldname "Length"} Length_unnamed_tag_42(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Level_unnamed_tag_43"} {:fieldname "Level"} Level_unnamed_tag_43(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LineControl__SERIAL_DEVICE_EXTENSION"} {:fieldname "LineControl"} LineControl__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 520
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry_unnamed_tag_7(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.ListSize__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "ListSize"} ListSize__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.List__CM_RESOURCE_LIST"} {:fieldname "List"} List__CM_RESOURCE_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.List__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "List"} List__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.LogFIFODefault__SERIAL_USER_DATA"} {:fieldname "LogFIFODefault"} LogFIFODefault__SERIAL_USER_DATA(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "LogFifoDefault"} LogFifoDefault__SERIAL_FIRMWARE_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.LogFifo__CONFIG_DATA"} {:fieldname "LogFifo"} LogFifo__CONFIG_DATA(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "LongIntervalAmount"} LongIntervalAmount__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__SERIAL_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2212
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "LowerRTSTimer"} LowerRTSTimer__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2052
}

function {:inline true} {:fieldmap "Mem_T.MCR__SERIAL_DEVICE_STATE"} {:fieldname "MCR"} MCR__SERIAL_DEVICE_STATE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "MaskInverted"} MaskInverted__CONFIG_DATA(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.MaskInverted__SERIAL_DEVICE_EXTENSION"} {:fieldname "MaskInverted"} MaskInverted__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 588
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "MaskInverted"} MaskInverted__SERIAL_USER_DATA(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "MaskQueue"} MaskQueue__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 272
}

function {:inline true} {:fieldmap "Mem_T.MaxBaud__SERIAL_COMMPROP"} {:fieldname "MaxBaud"} MaxBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MaxRxQueue__SERIAL_COMMPROP"} {:fieldname "MaxRxQueue"} MaxRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.MaxTxQueue__SERIAL_COMMPROP"} {:fieldname "MaxTxQueue"} MaxTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.MaximumAddress_unnamed_tag_54"} {:fieldname "MaximumAddress"} MaximumAddress_unnamed_tag_54(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.MaximumBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumBaudRate"} MaximumBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.MaximumInputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumInputBufferSize"} MaximumInputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__UNICODE_STRING"} {:fieldname "MaximumLength"} MaximumLength__UNICODE_STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumOutputBufferSize"} MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.MaximumVector_unnamed_tag_55"} {:fieldname "MaximumVector"} MaximumVector_unnamed_tag_55(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_41"} {:fieldname "Memory"} Memory_unnamed_tag_41(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.MinimumAddress_unnamed_tag_54"} {:fieldname "MinimumAddress"} MinimumAddress_unnamed_tag_54(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MinimumVector_unnamed_tag_55"} {:fieldname "MinimumVector"} MinimumVector_unnamed_tag_55(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "MultiportSiblings"} MultiportSiblings__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.NameLength__KEY_BASIC_INFORMATION"} {:fieldname "NameLength"} NameLength__KEY_BASIC_INFORMATION(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Name__KEY_BASIC_INFORMATION"} {:fieldname "Name"} Name__KEY_BASIC_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Name__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Name"} Name__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NewBufferSize__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBufferSize"} NewBufferSize__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.NewBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBuffer"} NewBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NewDevicePowerState__SERIAL_DEVICE_EXTENSION"} {:fieldname "NewDevicePowerState"} NewDevicePowerState__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3448
}

function {:inline true} {:fieldmap "Mem_T.NewExtension__SERIAL_DEVICE_EXTENSION"} {:fieldname "NewExtension"} NewExtension__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 600
}

function {:inline true} {:fieldmap "Mem_T.NewMaskInverted__SERIAL_DEVICE_EXTENSION"} {:fieldname "NewMaskInverted"} NewMaskInverted__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T.NewPortIndex__SERIAL_DEVICE_EXTENSION"} {:fieldname "NewPortIndex"} NewPortIndex__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 592
}

function {:inline true} {:fieldmap "Mem_T.NumberMoved__SERIAL_RESIZE_PARAMS"} {:fieldname "NumberMoved"} NumberMoved__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.NumberNeededForRead__SERIAL_DEVICE_EXTENSION"} {:fieldname "NumberNeededForRead"} NumberNeededForRead__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 360
}

function {:inline true} {:fieldmap "Mem_T.NumberOfLinks__FILE_STANDARD_INFORMATION"} {:fieldname "NumberOfLinks"} NumberOfLinks__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.NumberOfStrings__IO_ERROR_LOG_PACKET"} {:fieldname "NumberOfStrings"} NumberOfStrings__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "ObjectDirectory"} ObjectDirectory__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.OldBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "OldBuffer"} OldBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "OpenCount"} OpenCount__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2504
}

function {:inline true} {:fieldmap "Mem_T.Options_unnamed_tag_9"} {:fieldname "Options"} Options_unnamed_tag_9(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalController__SERIAL_DEVICE_EXTENSION"} {:fieldname "OriginalController"} OriginalController__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.OriginalInterruptStatus__SERIAL_DEVICE_EXTENSION"} {:fieldname "OriginalInterruptStatus"} OriginalInterruptStatus__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.OriginalIrql__CONFIG_DATA"} {:fieldname "OriginalIrql"} OriginalIrql__CONFIG_DATA(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.OriginalIrql__SERIAL_DEVICE_EXTENSION"} {:fieldname "OriginalIrql"} OriginalIrql__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 564
}

function {:inline true} {:fieldmap "Mem_T.OriginalVector__CONFIG_DATA"} {:fieldname "OriginalVector"} OriginalVector__CONFIG_DATA(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.OriginalVector__SERIAL_DEVICE_EXTENSION"} {:fieldname "OriginalVector"} OriginalVector__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.OurIsrContext__SERIAL_DEVICE_EXTENSION"} {:fieldname "OurIsrContext"} OurIsrContext__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 240
}

function {:inline true} {:fieldmap "Mem_T.OurIsr__SERIAL_DEVICE_EXTENSION"} {:fieldname "OurIsr"} OurIsr__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_20"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_6"} {:fieldname "Overlay"} Overlay_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OwnsPowerPolicy__SERIAL_DEVICE_EXTENSION"} {:fieldname "OwnsPowerPolicy"} OwnsPowerPolicy__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3088
}

function {:inline true} {:fieldmap "Mem_T.PAGESER_Handle__SERIAL_GLOBALS"} {:fieldname "PAGESER_Handle"} PAGESER_Handle__SERIAL_GLOBALS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PNPState__SERIAL_DEVICE_EXTENSION"} {:fieldname "PNPState"} PNPState__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2496
}

function {:inline true} {:fieldmap "Mem_T.PacketLength__SERIAL_COMMPROP"} {:fieldname "PacketLength"} PacketLength__SERIAL_COMMPROP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PacketVersion__SERIAL_COMMPROP"} {:fieldname "PacketVersion"} PacketVersion__SERIAL_COMMPROP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParityCheckEnable__SERIAL_WMI_COMM_DATA"} {:fieldname "ParityCheckEnable"} ParityCheckEnable__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_LINE_CONTROL"} {:fieldname "Parity"} Parity__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_WMI_COMM_DATA"} {:fieldname "Parity"} Parity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PartialDescriptors__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialDescriptors"} PartialDescriptors__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialResourceList"} PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Pdo__SERIAL_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3108
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingDpcEvent"} PendingDpcEvent__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3316
}

function {:inline true} {:fieldmap "Mem_T.PendingIRPCnt__SERIAL_DEVICE_EXTENSION"} {:fieldname "PendingIRPCnt"} PendingIRPCnt__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2364
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingIRPEvent"} PendingIRPEvent__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2372
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PendingWakeIrp__SERIAL_DEVICE_EXTENSION"} {:fieldname "PendingWakeIrp"} PendingWakeIrp__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3116
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "PerhapsLowerRTSDpc"} PerhapsLowerRTSDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1132
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PermitShareDefault"} PermitShareDefault__SERIAL_FIRMWARE_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PermitShareDefault__SERIAL_USER_DATA"} {:fieldname "PermitShareDefault"} PermitShareDefault__SERIAL_USER_DATA(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PermitShare"} PermitShare__CONFIG_DATA(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.PermitShare__SERIAL_DEVICE_EXTENSION"} {:fieldname "PermitShare"} PermitShare__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.PermitSystemWideShare__CONFIG_DATA"} {:fieldname "PermitSystemWideShare"} PermitSystemWideShare__CONFIG_DATA(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.PermitSystemWideShare__SERIAL_FIRMWARE_DATA"} {:fieldname "PermitSystemWideShare"} PermitSystemWideShare__SERIAL_FIRMWARE_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PortIndex"} PortIndex__CONFIG_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.PortIndex__SERIAL_DEVICE_EXTENSION"} {:fieldname "PortIndex"} PortIndex__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 580
}

function {:inline true} {:fieldmap "Mem_T.PortOnAMultiportCard__SERIAL_DEVICE_EXTENSION"} {:fieldname "PortOnAMultiportCard"} PortOnAMultiportCard__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 548
}

function {:inline true} {:fieldmap "Mem_T.Port_unnamed_tag_41"} {:fieldname "Port"} Port_unnamed_tag_41(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Port_unnamed_tag_53"} {:fieldname "Port"} Port_unnamed_tag_53(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PowerD0Event"} PowerD0Event__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2676
}

function {:inline true} {:fieldmap "Mem_T.PowerState__SERIAL_DEVICE_EXTENSION"} {:fieldname "PowerState"} PowerState__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2216
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.ProvCapabilities__SERIAL_COMMPROP"} {:fieldname "ProvCapabilities"} ProvCapabilities__SERIAL_COMMPROP(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ProvSubType__SERIAL_COMMPROP"} {:fieldname "ProvSubType"} ProvSubType__SERIAL_COMMPROP(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PurgeQueue"} PurgeQueue__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 280
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryFile_unnamed_tag_8"} {:fieldname "QueryFile"} QueryFile_unnamed_tag_8(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "QueryWmiDataBlock"} QueryWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiRegInfo__WMILIB_CONTEXT"} {:fieldname "QueryWmiRegInfo"} QueryWmiRegInfo__WMILIB_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.RXHolding__SERIAL_DEVICE_EXTENSION"} {:fieldname "RXHolding"} RXHolding__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.ReadBufferBase__SERIAL_DEVICE_EXTENSION"} {:fieldname "ReadBufferBase"} ReadBufferBase__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.ReadIntervalTimeout__SERIAL_TIMEOUTS"} {:fieldname "ReadIntervalTimeout"} ReadIntervalTimeout__SERIAL_TIMEOUTS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ReadQueue"} ReadQueue__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestIntervalTimer"} ReadRequestIntervalTimer__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1412
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestTotalTimer"} ReadRequestTotalTimer__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1252
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutConstant"} ReadTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutMultiplier"} ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Read_unnamed_tag_8"} {:fieldname "Read"} Read_unnamed_tag_8(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.RegistryPath__SERIAL_GLOBALS"} {:fieldname "RegistryPath"} RegistryPath__SERIAL_GLOBALS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Reopen__SERIAL_DEVICE_STATE"} {:fieldname "Reopen"} Reopen__SERIAL_DEVICE_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetainPowerOnClose__SERIAL_DEVICE_EXTENSION"} {:fieldname "RetainPowerOnClose"} RetainPowerOnClose__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3092
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Revision__IO_RESOURCE_LIST"} {:fieldname "Revision"} Revision__IO_RESOURCE_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "RxFIFODefault"} RxFIFODefault__SERIAL_FIRMWARE_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.RxFIFODefault__SERIAL_USER_DATA"} {:fieldname "RxFIFODefault"} RxFIFODefault__SERIAL_USER_DATA(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "RxFIFO"} RxFIFO__CONFIG_DATA(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "RxFIFO"} RxFIFO__SERIAL_USER_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.RxFifoTrigger__SERIAL_DEVICE_EXTENSION"} {:fieldname "RxFifoTrigger"} RxFifoTrigger__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 628
}

function {:inline true} {:fieldmap "Mem_T.RxFifo__SERIAL_BASIC_SETTINGS"} {:fieldname "RxFifo"} RxFifo__SERIAL_BASIC_SETTINGS(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SendWaitWake__SERIAL_DEVICE_EXTENSION"} {:fieldname "SendWaitWake"} SendWaitWake__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3112
}

function {:inline true} {:fieldmap "Mem_T.SendXoffChar__SERIAL_DEVICE_EXTENSION"} {:fieldname "SendXoffChar"} SendXoffChar__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 620
}

function {:inline true} {:fieldmap "Mem_T.SendXonChar__SERIAL_DEVICE_EXTENSION"} {:fieldname "SendXonChar"} SendXonChar__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 616
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SerialCount"} SerialCount__CONFIGURATION_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "SerialStartEvent"} SerialStartEvent__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2508
}

function {:inline true} {:fieldmap "Mem_T.ServiceMask__SERIAL_COMMPROP"} {:fieldname "ServiceMask"} ServiceMask__SERIAL_COMMPROP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SetFile_unnamed_tag_8"} {:fieldname "SetFile"} SetFile_unnamed_tag_8(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "SetPendingDpcEvent"} SetPendingDpcEvent__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1212
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "SetWmiDataBlock"} SetWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataItem__WMILIB_CONTEXT"} {:fieldname "SetWmiDataItem"} SetWmiDataItem__WMILIB_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SettableBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableBaudRate"} SettableBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.SettableBaud__SERIAL_COMMPROP"} {:fieldname "SettableBaud"} SettableBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SettableDataBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableDataBits"} SettableDataBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.SettableData__SERIAL_COMMPROP"} {:fieldname "SettableData"} SettableData__SERIAL_COMMPROP(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SettableFlowControl__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableFlowControl"} SettableFlowControl__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.SettableParams__SERIAL_COMMPROP"} {:fieldname "SettableParams"} SettableParams__SERIAL_COMMPROP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SettableParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParityCheck"} SettableParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.SettableParity__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParity"} SettableParity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.SettableStopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableStopBits"} SettableStopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.SettableStopParity__SERIAL_COMMPROP"} {:fieldname "SettableStopParity"} SettableStopParity__SERIAL_COMMPROP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ShareDisposition__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "ShareDisposition"} ShareDisposition__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ShareDisposition__IO_RESOURCE_DESCRIPTOR"} {:fieldname "ShareDisposition"} ShareDisposition__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "SharerList"} SharerList__SERIAL_CISR_SW(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "ShortIntervalAmount"} ShortIntervalAmount__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "ShouldBreakOnEntry"} ShouldBreakOnEntry__SERIAL_FIRMWARE_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SkipNaming"} SkipNaming__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3440
}

function {:inline true} {:fieldmap "Mem_T.SlotNumber__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "SlotNumber"} SlotNumber__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SpanOfController__CONFIG_DATA"} {:fieldname "SpanOfController"} SpanOfController__CONFIG_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.SpanOfController__SERIAL_DEVICE_EXTENSION"} {:fieldname "SpanOfController"} SpanOfController__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.SpanOfInterruptStatus__CONFIG_DATA"} {:fieldname "SpanOfInterruptStatus"} SpanOfInterruptStatus__CONFIG_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.SpanOfInterruptStatus__SERIAL_DEVICE_EXTENSION"} {:fieldname "SpanOfInterruptStatus"} SpanOfInterruptStatus__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.SpecialChars__SERIAL_DEVICE_EXTENSION"} {:fieldname "SpecialChars"} SpecialChars__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "StalledIrpQueue"} StalledIrpQueue__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 2800
}

function {:inline true} {:fieldmap "Mem_T.StartDevice_unnamed_tag_8"} {:fieldname "StartDevice"} StartDevice_unnamed_tag_8(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "StartTimerLowerRTSDpc"} StartTimerLowerRTSDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1092
}

function {:inline true} {:fieldmap "Mem_T.Start_unnamed_tag_42"} {:fieldname "Start"} Start_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_37"} {:fieldname "State"} State_unnamed_tag_37(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.StatusOfOpen__SERIAL_CHECK_OPEN"} {:fieldname "StatusOfOpen"} StatusOfOpen__SERIAL_CHECK_OPEN(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_LINE_CONTROL"} {:fieldname "StopBits"} StopBits__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "StopBits"} StopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.StringOffset__IO_ERROR_LOG_PACKET"} {:fieldname "StringOffset"} StringOffset__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Support16BitMode__SERIAL_WMI_COMM_DATA"} {:fieldname "Support16BitMode"} Support16BitMode__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.SupportDTRDSR__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportDTRDSR"} SupportDTRDSR__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportIntervalTimeouts"} SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.SupportParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportParityCheck"} SupportParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SupportRTSCTS__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportRTSCTS"} SupportRTSCTS__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.SupportXonXoff__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportXonXoff"} SupportXonXoff__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.SupportedBauds__SERIAL_DEVICE_EXTENSION"} {:fieldname "SupportedBauds"} SupportedBauds__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 412
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "SymbolicLinkName"} SymbolicLinkName__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_3"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__SERIAL_DEVICE_EXTENSION"} {:fieldname "SystemWake"} SystemWake__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3100
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "TL16C550CAFC"} TL16C550CAFC__CONFIG_DATA(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.TL16C550CAFC__SERIAL_DEVICE_EXTENSION"} {:fieldname "TL16C550CAFC"} TL16C550CAFC__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3444
}

function {:inline true} {:fieldmap "Mem_T.TL16C550CAFC__SERIAL_USER_DATA"} {:fieldname "TL16C550CAFC"} TL16C550CAFC__SERIAL_USER_DATA(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.TXHolding__SERIAL_DEVICE_EXTENSION"} {:fieldname "TXHolding"} TXHolding__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Timeout__SERIAL_XOFF_COUNTER"} {:fieldname "Timeout"} Timeout__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Timeouts__SERIAL_DEVICE_EXTENSION"} {:fieldname "Timeouts"} Timeouts__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 436
}

function {:inline true} {:fieldmap "Mem_T.TopLevelOurIsrContext__SERIAL_DEVICE_EXTENSION"} {:fieldname "TopLevelOurIsrContext"} TopLevelOurIsrContext__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.TopLevelOurIsr__SERIAL_DEVICE_EXTENSION"} {:fieldname "TopLevelOurIsr"} TopLevelOurIsr__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "TopLevelSharers"} TopLevelSharers__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.TotalCharsQueued__SERIAL_DEVICE_EXTENSION"} {:fieldname "TotalCharsQueued"} TotalCharsQueued__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalImmediateTimeoutDpc"} TotalImmediateTimeoutDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 972
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalReadTimeoutDpc"} TotalReadTimeoutDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 732
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalWriteTimeoutDpc"} TotalWriteTimeoutDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 812
}

function {:inline true} {:fieldmap "Mem_T.TrController__CONFIG_DATA"} {:fieldname "TrController"} TrController__CONFIG_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.TrInterruptStatus__CONFIG_DATA"} {:fieldname "TrInterruptStatus"} TrInterruptStatus__CONFIG_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.TrIrql__CONFIG_DATA"} {:fieldname "TrIrql"} TrIrql__CONFIG_DATA(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.TrVector__CONFIG_DATA"} {:fieldname "TrVector"} TrVector__CONFIG_DATA(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "TxFIFODefault"} TxFIFODefault__SERIAL_FIRMWARE_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.TxFIFODefault__SERIAL_USER_DATA"} {:fieldname "TxFIFODefault"} TxFIFODefault__SERIAL_USER_DATA(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "TxFIFO"} TxFIFO__CONFIG_DATA(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "TxFIFO"} TxFIFO__SERIAL_USER_DATA(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.TxFifoAmount__SERIAL_DEVICE_EXTENSION"} {:fieldname "TxFifoAmount"} TxFifoAmount__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T.TxFifo__SERIAL_BASIC_SETTINGS"} {:fieldname "TxFifo"} TxFifo__SERIAL_BASIC_SETTINGS(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Type3InputBuffer_unnamed_tag_20"} {:fieldname "Type3InputBuffer"} Type3InputBuffer_unnamed_tag_20(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Type__IO_RESOURCE_DESCRIPTOR"} {:fieldname "Type"} Type__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_26"} {:fieldname "Type"} Type_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_37"} {:fieldname "Type"} Type_unnamed_tag_37(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UartRemovalDetect__SERIAL_DEVICE_EXTENSION"} {:fieldname "UartRemovalDetect"} UartRemovalDetect__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3456
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UartRemovalDetect"} UartRemovalDetect__SERIAL_FIRMWARE_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UnMapRegisters"} UnMapRegisters__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 528
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UnMapStatus"} UnMapStatus__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 532
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UsablePortMask__SERIAL_MULTIPORT_DISPATCH"} {:fieldname "UsablePortMask"} UsablePortMask__SERIAL_MULTIPORT_DISPATCH(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UserAddressSpace"} UserAddressSpace__SERIAL_USER_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UserBusNumber"} UserBusNumber__SERIAL_USER_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UserClockRate"} UserClockRate__SERIAL_USER_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UserIndexed"} UserIndexed__SERIAL_USER_DATA(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UserInterfaceType"} UserInterfaceType__SERIAL_USER_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UserInterruptMode"} UserInterruptMode__SERIAL_USER_DATA(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.UserInterruptStatus__SERIAL_USER_DATA"} {:fieldname "UserInterruptStatus"} UserInterruptStatus__SERIAL_USER_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UserLevel"} UserLevel__SERIAL_USER_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UserPortIndex"} UserPortIndex__SERIAL_USER_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.UserPort__SERIAL_USER_DATA"} {:fieldname "UserPort"} UserPort__SERIAL_USER_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UserSymbolicLink"} UserSymbolicLink__SERIAL_USER_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UserVector"} UserVector__SERIAL_USER_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.ValidDataMask__SERIAL_DEVICE_EXTENSION"} {:fieldname "ValidDataMask"} ValidDataMask__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 608
}

function {:inline true} {:fieldmap "Mem_T.Vector__SERIAL_DEVICE_EXTENSION"} {:fieldname "Vector"} Vector__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.Vector_unnamed_tag_43"} {:fieldname "Vector"} Vector_unnamed_tag_43(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Version__IO_RESOURCE_LIST"} {:fieldname "Version"} Version__IO_RESOURCE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WmiCommData__SERIAL_DEVICE_EXTENSION"} {:fieldname "WmiCommData"} WmiCommData__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3164
}

function {:inline true} {:fieldmap "Mem_T.WmiFunctionControl__WMILIB_CONTEXT"} {:fieldname "WmiFunctionControl"} WmiFunctionControl__WMILIB_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.WmiHwData__SERIAL_DEVICE_EXTENSION"} {:fieldname "WmiHwData"} WmiHwData__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3264
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "WmiIdentifier"} WmiIdentifier__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3152
}

function {:inline true} {:fieldmap "Mem_T.WmiLibInfo__SERIAL_DEVICE_EXTENSION"} {:fieldname "WmiLibInfo"} WmiLibInfo__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 3120
}

function {:inline true} {:fieldmap "Mem_T.WordLength__SERIAL_LINE_CONTROL"} {:fieldname "WordLength"} WordLength__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "WriteQueue"} WriteQueue__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "WriteRequestTotalTimer"} WriteRequestTotalTimer__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1572
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutConstant"} WriteTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutMultiplier"} WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Write_unnamed_tag_8"} {:fieldname "Write"} Write_unnamed_tag_8(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.XoffChar__SERIAL_CHARS"} {:fieldname "XoffChar"} XoffChar__SERIAL_CHARS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.XoffCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffCharacter"} XoffCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountCompleteDpc"} XoffCountCompleteDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1052
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountTimeoutDpc"} XoffCountTimeoutDpc__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1012
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "XoffCountTimer"} XoffCountTimer__SERIAL_DEVICE_EXTENSION(x: int) : int
{
  x + 1892
}

function {:inline true} {:fieldmap "Mem_T.XoffLimit__SERIAL_HANDFLOW"} {:fieldname "XoffLimit"} XoffLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.XoffXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffXmitThreshold"} XoffXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.XonChar__SERIAL_CHARS"} {:fieldname "XonChar"} XonChar__SERIAL_CHARS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.XonCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XonCharacter"} XonCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.XonLimit__SERIAL_HANDFLOW"} {:fieldname "XonLimit"} XonLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.XonXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XonXmitThreshold"} XonXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.u__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.u__IO_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

const {:string ""} unique strConst__li2bpl3: int;

const {:string " The default interrupt read buffer size is: %d\n------  The XoffLimit is                         : %d\n------  The XonLimit is                          : %d\n------  The pt 8 size is                         : %d\n"} unique strConst__li2bpl287: int;

const {:string "%x irp was already marked as cancelled\n"} unique strConst__li2bpl303: int;

const {:string "%x was the first irp processed by this\n------- invocation of startmask\n"} unique strConst__li2bpl299: int;

const {:string "%x will become the current wait irp\n"} unique strConst__li2bpl302: int;

const {:string "'user registry info - userAddressSpace: %d\n"} unique strConst__li2bpl191: int;

const {:string "'user registry info - userBusNumber: %d\n"} unique strConst__li2bpl190: int;

const {:string "'user registry info - userClockRate: %d\n"} unique strConst__li2bpl189: int;

const {:string "'user registry info - userIndexed: %d\n"} unique strConst__li2bpl196: int;

const {:string "'user registry info - userInterfaceType: %d\n"} unique strConst__li2bpl193: int;

const {:string "'user registry info - userInterruptMode: %d\n"} unique strConst__li2bpl192: int;

const {:string "'user registry info - userInterruptStatus: %x\n"} unique strConst__li2bpl187: int;

const {:string "'user registry info - userLevel: %d\n"} unique strConst__li2bpl195: int;

const {:string "'user registry info - userPort: %x\n"} unique strConst__li2bpl186: int;

const {:string "'user registry info - userPortIndex: %d\n"} unique strConst__li2bpl188: int;

const {:string "'user registry info - userVector: %d\n"} unique strConst__li2bpl194: int;

const {:string "*PNP0501"} unique strConst__li2bpl105: int;

const {:string "*PNP0502"} unique strConst__li2bpl106: int;

const {:string "------- BusRelations Query\n"} unique strConst__li2bpl112: int;

const {:string "------- EjectionRelations Query\n"} unique strConst__li2bpl113: int;

const {:string "------- PowerRelations Query\n"} unique strConst__li2bpl114: int;

const {:string "------- RemovalRelations Query\n"} unique strConst__li2bpl115: int;

const {:string "------- TargetDeviceRelation Query\n"} unique strConst__li2bpl116: int;

const {:string "------- Unknown Query\n"} unique strConst__li2bpl111: int;

const {:string "------- failing; multiport node\n"} unique strConst__li2bpl123: int;

const {:string "<SerialDisableInterfaces\n"} unique strConst__li2bpl277: int;

const {:string "<SerialFlush (1) %X\n"} unique strConst__li2bpl6: int;

const {:string "<SerialFlush (2) %X\n"} unique strConst__li2bpl7: int;

const {:string "<SerialFlush (3) %X\n"} unique strConst__li2bpl5: int;

const {:string "<SerialGetNextWrite\n"} unique strConst__li2bpl242: int;

const {:string "<SerialGetRegistryKeyValue %X\n"} unique strConst__li2bpl9: int;

const {:string "<SerialInitMultiPort (1) %X\n"} unique strConst__li2bpl252: int;

const {:string "<SerialInitMultiPort (2) %X\n"} unique strConst__li2bpl254: int;

const {:string "<SerialInitMultiPort (3) %X\n"} unique strConst__li2bpl253: int;

const {:string "<SerialKillPendingIrps\n"} unique strConst__li2bpl249: int;

const {:string "<SerialPutRegistryKeyValue %X\n"} unique strConst__li2bpl11: int;

const {:string "<SerialRead (1) %X\n"} unique strConst__li2bpl290: int;

const {:string "<SerialRead (2) %X\n"} unique strConst__li2bpl291: int;

const {:string "<SerialRead (3) %X\n"} unique strConst__li2bpl292: int;

const {:string "<SerialRead (4) %X\n"} unique strConst__li2bpl293: int;

const {:string "<SerialReleaseResources\n"} unique strConst__li2bpl258: int;

const {:string "<SerialRemoveDevObj %X\n"} unique strConst__li2bpl247: int;

const {:string "<SerialStartImmediate\n"} unique strConst__li2bpl137: int;

const {:string "<SerialStartRead %X\n"} unique strConst__li2bpl288: int;

const {:string "<SerialStartWrite %X\n"} unique strConst__li2bpl244: int;

const {:string "<SerialUnstallIrps\n"} unique strConst__li2bpl307: int;

const {:string "<SerialWrite (1) %X\n"} unique strConst__li2bpl237: int;

const {:string "<SerialWrite (2) %X\n"} unique strConst__li2bpl238: int;

const {:string "<SerialWrite (3) %X\n"} unique strConst__li2bpl239: int;

const {:string "<SerialWrite (4) %X\n"} unique strConst__li2bpl240: int;

const {:string ">SerialDisableInterfaces(%X, %s)\n"} unique strConst__li2bpl276: int;

const {:string ">SerialFindInitController(%X, %X)\n"} unique strConst__li2bpl272: int;

const {:string ">SerialFlush(%X, %X)\n"} unique strConst__li2bpl4: int;

const {:string ">SerialGetNextWrite(XXX)\n"} unique strConst__li2bpl243: int;

const {:string ">SerialGetRegistryKeyValue(XXX)\n"} unique strConst__li2bpl8: int;

const {:string ">SerialInitMultiPort(%X, %X, %X)\n"} unique strConst__li2bpl251: int;

const {:string ">SerialKillPendingIrps(%X)\n"} unique strConst__li2bpl250: int;

const {:string ">SerialPutRegistryKeyValue(XXX)\n"} unique strConst__li2bpl10: int;

const {:string ">SerialRead(%X, %X)\n"} unique strConst__li2bpl294: int;

const {:string ">SerialReleaseResources(%X)\n"} unique strConst__li2bpl255: int;

const {:string ">SerialRemoveDevObj(%X)\n"} unique strConst__li2bpl246: int;

const {:string ">SerialStartImmediate(%X)\n"} unique strConst__li2bpl136: int;

const {:string ">SerialStartRead(%X)\n"} unique strConst__li2bpl289: int;

const {:string ">SerialStartWrite(%X)\n"} unique strConst__li2bpl245: int;

const {:string ">SerialUnstallIrps(%X)\n"} unique strConst__li2bpl305: int;

const {:string ">SerialWrite(%X, %X)\n"} unique strConst__li2bpl241: int;

const {:string "About to connect to interrupt for port %wZ\n------- address of extension is %x\n"} unique strConst__li2bpl88: int;

const {:string "AddressSpace"} unique strConst__li2bpl174: int;

const {:string "Aha! It is a multiport node\n"} unique strConst__li2bpl269: int;

const {:string "Aha! It is a standalone node or first multi\n"} unique strConst__li2bpl267: int;

const {:string "Already in requested power state\n"} unique strConst__li2bpl220: int;

const {:string "Attempting to init %wZ\n------- PortAddress is %x\n------- Interrupt Status is %x\n------- BusNumber is %d\n------- BusType is %d\n------- AddressSpace is %d\n------- Interrupt Mode is %d\n"} unique strConst__li2bpl273: int;

const {:string "Bad status returned: %x \nfor the value entries of\n%ws\n"} unique strConst__li2bpl178: int;

const {:string "Bad status returned: %x \non enumeration for subkey # %d of %wZ\n"} unique strConst__li2bpl161: int;

const {:string "Becoming sharer: %08X %08X %08X\n"} unique strConst__li2bpl271: int;

const {:string "Bogus port address %ws\n"} unique strConst__li2bpl206: int;

const {:string "Bogus port address %x\n"} unique strConst__li2bpl64: int;

const {:string "Bogus port index %ws\n"} unique strConst__li2bpl198: int;

const {:string "Bogus port index %x\n"} unique strConst__li2bpl48: int;

const {:string "Bogus vector %ws\n"} unique strConst__li2bpl205: int;

const {:string "Bogus vector %x\n"} unique strConst__li2bpl63: int;

const {:string "BreakOnEntry"} unique strConst__li2bpl12: int;

const {:string "Building cmreslist in %x\n"} unique strConst__li2bpl139: int;

const {:string "BusNumber"} unique strConst__li2bpl171: int;

const {:string "BusType"} unique strConst__li2bpl172: int;

const {:string "Calling next driver\n"} unique strConst__li2bpl211: int;

const {:string "Can't filter NULL resources!\n"} unique strConst__li2bpl108: int;

const {:string "Canceling wait for irp %x\n"} unique strConst__li2bpl295: int;

const {:string "Cleaning up failed start\n"} unique strConst__li2bpl81: int;

const {:string "Clearing DTR for %x\n"} unique strConst__li2bpl311: int;

const {:string "Clearing Rts for %x\n"} unique strConst__li2bpl310: int;

const {:string "ClockRate"} unique strConst__li2bpl71: int;

const {:string "Close open count bad for: 0x%x\n"} unique strConst__li2bpl313: int;

const {:string "Close prologue failed for: %x\n"} unique strConst__li2bpl312: int;

const {:string "Com AddressSpace: %x\n"} unique strConst__li2bpl57: int;

const {:string "Com Indexed: %x\n"} unique strConst__li2bpl62: int;

const {:string "Com InterfaceType: %x\n"} unique strConst__li2bpl59: int;

const {:string "Com Interrupt Status: %x\n"} unique strConst__li2bpl74: int;

const {:string "Com InterruptMode: %x\n"} unique strConst__li2bpl58: int;

const {:string "Com OriginalIrql: %x\n"} unique strConst__li2bpl61: int;

const {:string "Com OriginalVector: %x\n"} unique strConst__li2bpl60: int;

const {:string "Com Port BusNumber: %x\n"} unique strConst__li2bpl56: int;

const {:string "Com Port ClockRate: %x\n"} unique strConst__li2bpl55: int;

const {:string "Com Port Index: %x\n"} unique strConst__li2bpl54: int;

const {:string "Com Port address: %x\n"} unique strConst__li2bpl73: int;

const {:string "Comparing it to %wZ\n------- already in the device list\n------- PortAddress is %x\n------- Interrupt Status is %x\n------- BusNumber is %d\n------- BusType is %d\n------- AddressSpace is %d\n"} unique strConst__li2bpl262: int;

const {:string "Complete Irp: %X\n"} unique strConst__li2bpl2: int;

const {:string "Configuration error for %wZ\n------- Same multiport - different interrupts\n"} unique strConst__li2bpl268: int;

const {:string "Connected interrupt %08X\n"} unique strConst__li2bpl85: int;

const {:string "Could not map memory for device registers for %wZ\n"} unique strConst__li2bpl286: int;

const {:string "Could not map memory for interrupt status for %wZ\n"} unique strConst__li2bpl283: int;

const {:string "Could not report legacy device - %x\n"} unique strConst__li2bpl160: int;

const {:string "Couldn't allocate buffer for the PnP ID\nfor parameters items in %wZ"} unique strConst__li2bpl167: int;

const {:string "Couldn't allocate buffer for the PnP link\n"} unique strConst__li2bpl154: int;

const {:string "Couldn't allocate buffer for the legacy keys\n"} unique strConst__li2bpl166: int;

const {:string "Couldn't allocate buffer for the symbolic link\nfor parameters items in %wZ"} unique strConst__li2bpl168: int;

const {:string "Couldn't allocate memory basic information\nstructure to enumerate subkeys for %wZ"} unique strConst__li2bpl164: int;

const {:string "Couldn't allocate memory for DeviceName\n"} unique strConst__li2bpl33: int;

const {:string "Couldn't allocate memory for Dos name\n"} unique strConst__li2bpl27: int;

const {:string "Couldn't allocate memory for WMI name\n"} unique strConst__li2bpl28: int;

const {:string "Couldn't allocate memory for buffer\n"} unique strConst__li2bpl42: int;

const {:string "Couldn't allocate memory for device name\n"} unique strConst__li2bpl35: int;

const {:string "Couldn't allocate memory for the\n------  user configuration record\n"} unique strConst__li2bpl91: int;

const {:string "Couldn't allocate string for path\nto parameters for %wZ"} unique strConst__li2bpl165: int;

const {:string "Couldn't allocate table for rtl query\nto parameters for %wZ"} unique strConst__li2bpl169: int;

const {:string "Couldn't connect to interrupt for %wZ\n"} unique strConst__li2bpl90: int;

const {:string "Couldn't create the device map entry\n------- for port %wZ\n"} unique strConst__li2bpl25: int;

const {:string "Couldn't create the symbolic link\nfor port %wZ\n"} unique strConst__li2bpl26: int;

const {:string "Couldn't delete value entry %wZ\n"} unique strConst__li2bpl135: int;

const {:string "Couldn't mark multiport\n"} unique strConst__li2bpl144: int;

const {:string "Couldn't migrate ClockRate\n"} unique strConst__li2bpl147: int;

const {:string "Couldn't migrate DisablePort\n"} unique strConst__li2bpl149: int;

const {:string "Couldn't migrate ForceFifoEnable\n"} unique strConst__li2bpl150: int;

const {:string "Couldn't migrate Indexed\n"} unique strConst__li2bpl148: int;

const {:string "Couldn't migrate MaskInverted\n"} unique strConst__li2bpl153: int;

const {:string "Couldn't migrate PortIndex\n"} unique strConst__li2bpl146: int;

const {:string "Couldn't migrate PortName\n"} unique strConst__li2bpl143: int;

const {:string "Couldn't migrate RxFIFO\n"} unique strConst__li2bpl151: int;

const {:string "Couldn't migrate TxFIFO\n"} unique strConst__li2bpl152: int;

const {:string "Couldn't open the drivers Parameters key %wZ\n"} unique strConst__li2bpl163: int;

const {:string "Couldn't register class association\nfor port %wZ\n"} unique strConst__li2bpl22: int;

const {:string "Couldn't set class association\n for port %wZ\n"} unique strConst__li2bpl23: int;

const {:string "Couldn't write registry valuefor LegacyDiscovered in %wZ\n"} unique strConst__li2bpl159: int;

const {:string "Count: %x  Addr: 0x%x\n"} unique strConst__li2bpl314: int;

const {:string "DPC's drained: %x\n"} unique strConst__li2bpl316: int;

const {:string "DebugLevel"} unique strConst__li2bpl13: int;

const {:string "Deleting Link %wZ\n"} unique strConst__li2bpl134: int;

const {:string "DevicePowerState\n"} unique strConst__li2bpl219: int;

const {:string "DisablePort"} unique strConst__li2bpl66: int;

const {:string "Dispatch entry for: %x\n"} unique strConst__li2bpl1: int;

const {:string "DoesPortExist test failed for %wZ\n"} unique strConst__li2bpl284: int;

const {:string "DosDevices"} unique strConst__li2bpl39: int;

const {:string "DosName is %wZ\n"} unique strConst__li2bpl21: int;

const {:string "Draining DPC's: %x\n"} unique strConst__li2bpl317: int;

const {:string "EnablePowerManagement"} unique strConst__li2bpl93: int;

const {:string "Enter SerialAddDevice with PPdo 0x%x\n"} unique strConst__li2bpl77: int;

const {:string "Enter SerialBuildRequirementsList\n"} unique strConst__li2bpl183: int;

const {:string "Enter SerialBuildResourceList\n"} unique strConst__li2bpl138: int;

const {:string "Enter SerialEnumerateLegacy\n"} unique strConst__li2bpl155: int;

const {:string "Enter SerialIsUserDataValid\n"} unique strConst__li2bpl185: int;

const {:string "Enter SerialMigrateLegacyRegistry\n"} unique strConst__li2bpl141: int;

const {:string "Enter SerialRestoreDeviceState\n"} unique strConst__li2bpl227: int;

const {:string "Enter SerialTranslateResourceList\n"} unique strConst__li2bpl179: int;

const {:string "EnterSerialCreateDevObj\n"} unique strConst__li2bpl29: int;

const {:string "Entering SerialSaveDeviceState\n"} unique strConst__li2bpl224: int;

const {:string "Error in config record for %wZ\n------  registers wrap around physical memory\n"} unique strConst__li2bpl259: int;

const {:string "Error in config record for %wZ\n------  status wraps around physical memory\n"} unique strConst__li2bpl260: int;

const {:string "Error in config record for %wZ\n------- Interrupt status overlaps regular registers\n"} unique strConst__li2bpl261: int;

const {:string "Error in config record for %wZ\n------- Register address overlaps with\n------- previous serial device\n"} unique strConst__li2bpl263: int;

const {:string "Error in config record for %wZ\n------- register address overlaps with\n------- previous serial status register\n"} unique strConst__li2bpl266: int;

const {:string "Error in config record for %wZ\n------- status address overlaps with\n------- previous serial device registers\n"} unique strConst__li2bpl264: int;

const {:string "Error in config record for %wZ\n------- status address overlaps with\n------- previous serial status register\n"} unique strConst__li2bpl265: int;

const {:string "External Naming Failed - Status %x\n"} unique strConst__li2bpl87: int;

const {:string "FALSE"} unique strConst__li2bpl274: int;

const {:string "Fifo's detected at port address: %x\n"} unique strConst__li2bpl278: int;

const {:string "ForceFifoEnable"} unique strConst__li2bpl14: int;

const {:string "Getting PortName/Identifier failed - %x\n"} unique strConst__li2bpl41: int;

const {:string "Globally sharing interrupt for device %x\n"} unique strConst__li2bpl129: int;

const {:string "Going to power state D0\n"} unique strConst__li2bpl221: int;

const {:string "Going to power state D3\n"} unique strConst__li2bpl222: int;

const {:string "Got IRP_MN_CANCEL_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl94: int;

const {:string "Got IRP_MN_CANCEL_STOP_DEVICE Irp\n"} unique strConst__li2bpl95: int;

const {:string "Got IRP_MN_EJECT Irp\n"} unique strConst__li2bpl101: int;

const {:string "Got IRP_MN_FILTER_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl124: int;

const {:string "Got IRP_MN_POWER_SEQUENCE Irp\n"} unique strConst__li2bpl215: int;

const {:string "Got IRP_MN_QUERY_DEVICE_CAPABILITIES IRP\n"} unique strConst__li2bpl109: int;

const {:string "Got IRP_MN_QUERY_DEVICE_RELATIONS Irp\n"} unique strConst__li2bpl96: int;

const {:string "Got IRP_MN_QUERY_ID Irp\n"} unique strConst__li2bpl130: int;

const {:string "Got IRP_MN_QUERY_INTERFACE Irp\n"} unique strConst__li2bpl97: int;

const {:string "Got IRP_MN_QUERY_POWER Irp\n"} unique strConst__li2bpl217: int;

const {:string "Got IRP_MN_QUERY_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl120: int;

const {:string "Got IRP_MN_QUERY_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl98: int;

const {:string "Got IRP_MN_QUERY_STOP_DEVICE Irp\n"} unique strConst__li2bpl117: int;

const {:string "Got IRP_MN_READ_CONFIG Irp\n"} unique strConst__li2bpl99: int;

const {:string "Got IRP_MN_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl119: int;

const {:string "Got IRP_MN_SET_LOCK Irp\n"} unique strConst__li2bpl102: int;

const {:string "Got IRP_MN_SET_POWER Irp\n"} unique strConst__li2bpl216: int;

const {:string "Got IRP_MN_START_DEVICE Irp\n"} unique strConst__li2bpl121: int;

const {:string "Got IRP_MN_STOP_DEVICE Irp\n"} unique strConst__li2bpl118: int;

const {:string "Got IRP_MN_SURPRISE_REMOVAL Irp\n"} unique strConst__li2bpl103: int;

const {:string "Got IRP_MN_WAIT_WAKE Irp\n"} unique strConst__li2bpl214: int;

const {:string "Got IRP_MN_WRITE_CONFIG Irp\n"} unique strConst__li2bpl100: int;

const {:string "ID is sole ID\n"} unique strConst__li2bpl107: int;

const {:string "ISR map failed attempt was \n------- Interface:  %x\n------- Bus Number: %x\n------- IntStatus:  %x\n------- AddrSpace:  %x\n------- PhysAddr:   %x\n"} unique strConst__li2bpl181: int;

const {:string "ISR map was %x\n"} unique strConst__li2bpl180: int;

const {:string "Identifier"} unique strConst__li2bpl37: int;

const {:string "In Ioctl processing for set mask\n"} unique strConst__li2bpl233: int;

const {:string "In Ioctl processing for wait mask\n"} unique strConst__li2bpl230: int;

const {:string "In SerialCancelWait\n"} unique strConst__li2bpl296: int;

const {:string "In SerialClose\n"} unique strConst__li2bpl315: int;

const {:string "In SerialCreateOpen\n"} unique strConst__li2bpl318: int;

const {:string "In SerialGotoPowerState\n"} unique strConst__li2bpl207: int;

const {:string "In SerialSetPowerD0\n"} unique strConst__li2bpl209: int;

const {:string "In SerialSetPowerD3\n"} unique strConst__li2bpl226: int;

const {:string "In SerialStartMask\n"} unique strConst__li2bpl304: int;

const {:string "In SerialUndoExternalNaming for\nextension: %x of port %wZ\n"} unique strConst__li2bpl133: int;

const {:string "In SerialUnload\n"} unique strConst__li2bpl248: int;

const {:string "Indexed"} unique strConst__li2bpl70: int;

const {:string "Initializing for configuration record of %wZ\n"} unique strConst__li2bpl280: int;

const {:string "Interrupt"} unique strConst__li2bpl75: int;

const {:string "Interrupt Status"} unique strConst__li2bpl177: int;

const {:string "InterruptLevel"} unique strConst__li2bpl175: int;

const {:string "InterruptMode"} unique strConst__li2bpl173: int;

const {:string "InterruptStatus"} unique strConst__li2bpl170: int;

const {:string "Invalid Bus type %ws\n"} unique strConst__li2bpl200: int;

const {:string "Invalid Bus type %x\n"} unique strConst__li2bpl51: int;

const {:string "Invalid size fo the buffer %d\n"} unique strConst__li2bpl234: int;

const {:string "Invalid size for the buffer %d\n"} unique strConst__li2bpl232: int;

const {:string "IoConnectInterrupt Args:\nInterrupt           %x\nOurIsr              %x\nOurIsrContext       %x\nNULL\nVector              %x\nIrql                %x\nInterruptMode       %x\nInterruptShareable  %x\nProcessorAffinity   %x\nFALSE\n"} unique strConst__li2bpl89: int;

const {:string "IoOpenDeviceRegistryKey failed - %x \n"} unique strConst__li2bpl65: int;

const {:string "Kernel debugger is using port at address %X\n"} unique strConst__li2bpl281: int;

const {:string "Latched interrupts and MicroChannel\nbusses don't mix\n"} unique strConst__li2bpl53: int;

const {:string "Latched interrupts and MicroChannel\nbusses don't mix,%ws\n"} unique strConst__li2bpl201: int;

const {:string "Leave (1) SerialMigrateLegacyRegistry\n"} unique strConst__li2bpl142: int;

const {:string "Leave (2) SerialMigrateLegacyRegistry\n"} unique strConst__li2bpl145: int;

const {:string "Leave SerialAddDevice\n"} unique strConst__li2bpl80: int;

const {:string "Leave SerialBuildRequirementsList\n"} unique strConst__li2bpl184: int;

const {:string "Leave SerialBuildResourceList\n"} unique strConst__li2bpl140: int;

const {:string "Leave SerialCreateDevObj\n"} unique strConst__li2bpl32: int;

const {:string "Leave SerialEnumerateLegacy\n"} unique strConst__li2bpl162: int;

const {:string "Leave SerialIsUserDataValid\n"} unique strConst__li2bpl197: int;

const {:string "Leaving SerialGotoPowerState\n"} unique strConst__li2bpl208: int;

const {:string "Leaving SerialSaveDeviceState\n"} unique strConst__li2bpl225: int;

const {:string "Leaving SerialSetPowerD0\n"} unique strConst__li2bpl213: int;

const {:string "LegacyDiscovered"} unique strConst__li2bpl158: int;

const {:string "List has %x lists (including alternatives)\n"} unique strConst__li2bpl125: int;

const {:string "List has %x resources in it\n"} unique strConst__li2bpl126: int;

const {:string "LogFifo"} unique strConst__li2bpl18: int;

const {:string "Mapping power capabilities\n"} unique strConst__li2bpl110: int;

const {:string "MaskInverted"} unique strConst__li2bpl67: int;

const {:string "Matched to %x\n"} unique strConst__li2bpl270: int;

const {:string "MultiportDevice"} unique strConst__li2bpl46: int;

const {:string "Not doing external naming -- state is %x\n"} unique strConst__li2bpl86: int;

const {:string "Overflowed the enumerate buffer\nfor subkey #%d of %wZ\n"} unique strConst__li2bpl157: int;

const {:string "PDevExt: %x\n"} unique strConst__li2bpl228: int;

const {:string "Parameters"} unique strConst__li2bpl156: int;

const {:string "Perhaps another mask irp was found in the queue\n------- %x/%x <- values should be the same\n"} unique strConst__li2bpl300: int;

const {:string "PermitShare"} unique strConst__li2bpl17: int;

const {:string "PnPDeviceID"} unique strConst__li2bpl176: int;

const {:string "Port index must be > 0 for any\nport on a multiport card: %ws\n"} unique strConst__li2bpl203: int;

const {:string "Port index must be > 0 for any\nport on a multiport card: %x\n"} unique strConst__li2bpl50: int;

const {:string "Port map failed attempt was \n------- Interface:  %x\n------- Bus Number: %x\n------- userPort:  %x\n------- AddrSpace:  %x\n------- PhysAddr:   %x\n"} unique strConst__li2bpl182: int;

const {:string "PortAddress"} unique strConst__li2bpl76: int;

const {:string "PortIndex"} unique strConst__li2bpl69: int;

const {:string "PortName"} unique strConst__li2bpl36: int;

const {:string "Read name %wZ\n"} unique strConst__li2bpl40: int;

const {:string "Release - disconnecting interrupt %X\n"} unique strConst__li2bpl256: int;

const {:string "Release - freeing multi context\n"} unique strConst__li2bpl257: int;

const {:string "Reopening device\n"} unique strConst__li2bpl229: int;

const {:string "RxFIFO"} unique strConst__li2bpl15: int;

const {:string "SERIAL - %x is a SETMASK irp\n"} unique strConst__li2bpl298: int;

const {:string "SERIALCOMM"} unique strConst__li2bpl24: int;

const {:string "STARTMASK - CurrentMaskIrp: %x\n"} unique strConst__li2bpl297: int;

const {:string "Serial driver will not load port\n"} unique strConst__li2bpl282: int;

const {:string "SerialAddDevice - error creating new devobj [%#08lx]\n"} unique strConst__li2bpl79: int;

const {:string "SerialAddDevice: Create device failed - %x \n"} unique strConst__li2bpl31: int;

const {:string "SerialAddDevice: Enumeration request, returning NO_MORE_ENTRIES\n"} unique strConst__li2bpl78: int;

const {:string "SerialCreateDevObj Error, Cleaning up\n"} unique strConst__li2bpl34: int;

const {:string "SerialFinishStartDevice got NULL pDevExt\n"} unique strConst__li2bpl83: int;

const {:string "SerialIoResourcesIndex"} unique strConst__li2bpl47: int;

const {:string "SerialRelinquishPowerPolicy"} unique strConst__li2bpl92: int;

const {:string "SerialSkipExternalNaming"} unique strConst__li2bpl20: int;

const {:string "SetPowerD0 has IRP %x\n"} unique strConst__li2bpl210: int;

const {:string "Share System Interrupt"} unique strConst__li2bpl68: int;

const {:string "Sharing I/O port for device %x\n"} unique strConst__li2bpl127: int;

const {:string "Sharing interrupt for device %x\n"} unique strConst__li2bpl128: int;

const {:string "Starting or queuing set mask irp %x\n"} unique strConst__li2bpl235: int;

const {:string "Starting or queuing wait mask irp%x\n"} unique strConst__li2bpl231: int;

const {:string "SystemPowerState\n"} unique strConst__li2bpl223: int;

const {:string "TL16C550C Auto Flow Control"} unique strConst__li2bpl72: int;

const {:string "TR resource pointer is %x\n"} unique strConst__li2bpl45: int;

const {:string "TRUE"} unique strConst__li2bpl275: int;

const {:string "The number of bytes in the extension is: %d\n"} unique strConst__li2bpl279: int;

const {:string "There aren't that many of those\nbusses on this system,%ws\n"} unique strConst__li2bpl202: int;

const {:string "There aren't that many of those\nbusses on this system,%x\n"} unique strConst__li2bpl52: int;

const {:string "TxFIFO"} unique strConst__li2bpl16: int;

const {:string "UNKNOWN PowerState\n"} unique strConst__li2bpl218: int;

const {:string "UartRemovalDetect"} unique strConst__li2bpl19: int;

const {:string "Unknown mask %x\n"} unique strConst__li2bpl236: int;

const {:string "Unstalling Irp 0x%x with 0x%x\n"} unique strConst__li2bpl306: int;

const {:string "WaitIrp is invalid\n------- IsrWaitMask: %x\n------- CurrentWaitIrp: %x\n"} unique strConst__li2bpl301: int;

const {:string "Waiting for next driver\n"} unique strConst__li2bpl212: int;

const {:string "Warning: Driver may have queued the IRP without marking it as pending inside the locked state."} unique strConst__li2bpl308: int;

const {:string "\\"} unique strConst__li2bpl38: int;

const {:string "\\Device\\Serial"} unique strConst__li2bpl30: int;

const {:string "bogus value for %ws\n"} unique strConst__li2bpl204: int;

const {:string "callee"} unique strConst__li2bpl0: int;

const {:string "disabled port %wZ as requested in configuration\n"} unique strConst__li2bpl285: int;

const {:string "entering SerialGetPortInfo\n"} unique strConst__li2bpl43: int;

const {:string "entering SerialStartDevice\n"} unique strConst__li2bpl131: int;

const {:string "error with IoCallDriver %x\n"} unique strConst__li2bpl132: int;

const {:string "failing; device open\n"} unique strConst__li2bpl122: int;

const {:string "for device %x\n"} unique strConst__li2bpl104: int;

const {:string "halt"} unique strConst__li2bpl309: int;

const {:string "leaving SerialFinishStartDevice\n"} unique strConst__li2bpl82: int;

const {:string "pDevExt: Interrupt %x\n-------               OurIsr %x\n"} unique strConst__li2bpl84: int;

const {:string "port index to large %ws\n"} unique strConst__li2bpl199: int;

const {:string "port index to large %x\n"} unique strConst__li2bpl49: int;

const {:string "resource pointer is %x\n"} unique strConst__li2bpl44: int;

const {:allocated} li2bplFunctionConstant112: int;

axiom li2bplFunctionConstant112 == 112;

const {:allocated} li2bplFunctionConstant123: int;

axiom li2bplFunctionConstant123 == 123;

const {:allocated} li2bplFunctionConstant124: int;

axiom li2bplFunctionConstant124 == 124;

const {:allocated} li2bplFunctionConstant135: int;

axiom li2bplFunctionConstant135 == 135;

const {:allocated} li2bplFunctionConstant136: int;

axiom li2bplFunctionConstant136 == 136;

const {:allocated} li2bplFunctionConstant137: int;

axiom li2bplFunctionConstant137 == 137;

const {:allocated} li2bplFunctionConstant138: int;

axiom li2bplFunctionConstant138 == 138;

const {:allocated} li2bplFunctionConstant139: int;

axiom li2bplFunctionConstant139 == 139;

const {:allocated} li2bplFunctionConstant140: int;

axiom li2bplFunctionConstant140 == 140;

const {:allocated} li2bplFunctionConstant143: int;

axiom li2bplFunctionConstant143 == 143;

const {:allocated} li2bplFunctionConstant145: int;

axiom li2bplFunctionConstant145 == 145;

const {:allocated} li2bplFunctionConstant148: int;

axiom li2bplFunctionConstant148 == 148;

const {:allocated} li2bplFunctionConstant166: int;

axiom li2bplFunctionConstant166 == 166;

const {:allocated} li2bplFunctionConstant168: int;

axiom li2bplFunctionConstant168 == 168;

const {:allocated} li2bplFunctionConstant174: int;

axiom li2bplFunctionConstant174 == 174;

const {:allocated} li2bplFunctionConstant179: int;

axiom li2bplFunctionConstant179 == 179;

const {:allocated} li2bplFunctionConstant195: int;

axiom li2bplFunctionConstant195 == 195;

const {:allocated} li2bplFunctionConstant196: int;

axiom li2bplFunctionConstant196 == 196;

const {:allocated} li2bplFunctionConstant197: int;

axiom li2bplFunctionConstant197 == 197;

const {:allocated} li2bplFunctionConstant198: int;

axiom li2bplFunctionConstant198 == 198;

const {:allocated} li2bplFunctionConstant199: int;

axiom li2bplFunctionConstant199 == 199;

const {:allocated} li2bplFunctionConstant200: int;

axiom li2bplFunctionConstant200 == 200;

const {:allocated} li2bplFunctionConstant211: int;

axiom li2bplFunctionConstant211 == 211;

const {:allocated} li2bplFunctionConstant212: int;

axiom li2bplFunctionConstant212 == 212;

const {:allocated} li2bplFunctionConstant213: int;

axiom li2bplFunctionConstant213 == 213;

const {:allocated} li2bplFunctionConstant214: int;

axiom li2bplFunctionConstant214 == 214;

const {:allocated} li2bplFunctionConstant215: int;

axiom li2bplFunctionConstant215 == 215;

const {:allocated} li2bplFunctionConstant216: int;

axiom li2bplFunctionConstant216 == 216;

const {:allocated} li2bplFunctionConstant217: int;

axiom li2bplFunctionConstant217 == 217;

const {:allocated} li2bplFunctionConstant218: int;

axiom li2bplFunctionConstant218 == 218;

const {:allocated} li2bplFunctionConstant219: int;

axiom li2bplFunctionConstant219 == 219;

const {:allocated} li2bplFunctionConstant220: int;

axiom li2bplFunctionConstant220 == 220;

const {:allocated} li2bplFunctionConstant221: int;

axiom li2bplFunctionConstant221 == 221;

const {:allocated} li2bplFunctionConstant222: int;

axiom li2bplFunctionConstant222 == 222;

const {:allocated} li2bplFunctionConstant223: int;

axiom li2bplFunctionConstant223 == 223;

const {:allocated} li2bplFunctionConstant224: int;

axiom li2bplFunctionConstant224 == 224;

const {:allocated} li2bplFunctionConstant237: int;

axiom li2bplFunctionConstant237 == 237;

const {:allocated} li2bplFunctionConstant239: int;

axiom li2bplFunctionConstant239 == 239;

const {:allocated} li2bplFunctionConstant240: int;

axiom li2bplFunctionConstant240 == 240;

const {:allocated} li2bplFunctionConstant244: int;

axiom li2bplFunctionConstant244 == 244;

const {:allocated} li2bplFunctionConstant245: int;

axiom li2bplFunctionConstant245 == 245;

const {:allocated} li2bplFunctionConstant246: int;

axiom li2bplFunctionConstant246 == 246;

const {:allocated} li2bplFunctionConstant247: int;

axiom li2bplFunctionConstant247 == 247;

const {:allocated} li2bplFunctionConstant248: int;

axiom li2bplFunctionConstant248 == 248;

const {:allocated} li2bplFunctionConstant249: int;

axiom li2bplFunctionConstant249 == 249;

const {:allocated} li2bplFunctionConstant250: int;

axiom li2bplFunctionConstant250 == 250;

const {:allocated} li2bplFunctionConstant251: int;

axiom li2bplFunctionConstant251 == 251;

const {:allocated} li2bplFunctionConstant252: int;

axiom li2bplFunctionConstant252 == 252;

const {:allocated} li2bplFunctionConstant254: int;

axiom li2bplFunctionConstant254 == 254;

const {:allocated} li2bplFunctionConstant300: int;

axiom li2bplFunctionConstant300 == 300;

const {:allocated} li2bplFunctionConstant318: int;

axiom li2bplFunctionConstant318 == 318;

const {:allocated} li2bplFunctionConstant322: int;

axiom li2bplFunctionConstant322 == 322;

const {:allocated} li2bplFunctionConstant323: int;

axiom li2bplFunctionConstant323 == 323;

const {:allocated} li2bplFunctionConstant328: int;

axiom li2bplFunctionConstant328 == 328;

const {:allocated} li2bplFunctionConstant351: int;

axiom li2bplFunctionConstant351 == 351;

const {:allocated} li2bplFunctionConstant352: int;

axiom li2bplFunctionConstant352 == 352;

const {:allocated} li2bplFunctionConstant353: int;

axiom li2bplFunctionConstant353 == 353;

const {:allocated} li2bplFunctionConstant354: int;

axiom li2bplFunctionConstant354 == 354;

const {:allocated} li2bplFunctionConstant355: int;

axiom li2bplFunctionConstant355 == 355;

const {:allocated} li2bplFunctionConstant356: int;

axiom li2bplFunctionConstant356 == 356;

const {:allocated} li2bplFunctionConstant369: int;

axiom li2bplFunctionConstant369 == 369;

const {:allocated} li2bplFunctionConstant370: int;

axiom li2bplFunctionConstant370 == 370;

const {:allocated} li2bplFunctionConstant371: int;

axiom li2bplFunctionConstant371 == 371;

const {:allocated} li2bplFunctionConstant372: int;

axiom li2bplFunctionConstant372 == 372;

const {:allocated} li2bplFunctionConstant373: int;

axiom li2bplFunctionConstant373 == 373;

const {:allocated} li2bplFunctionConstant374: int;

axiom li2bplFunctionConstant374 == 374;

const {:allocated} li2bplFunctionConstant375: int;

axiom li2bplFunctionConstant375 == 375;

const {:allocated} li2bplFunctionConstant376: int;

axiom li2bplFunctionConstant376 == 376;

const {:allocated} li2bplFunctionConstant377: int;

axiom li2bplFunctionConstant377 == 377;

const {:allocated} li2bplFunctionConstant383: int;

axiom li2bplFunctionConstant383 == 383;

const {:allocated} li2bplFunctionConstant387: int;

axiom li2bplFunctionConstant387 == 387;

const {:allocated} li2bplFunctionConstant390: int;

axiom li2bplFunctionConstant390 == 390;

const {:allocated} li2bplFunctionConstant391: int;

axiom li2bplFunctionConstant391 == 391;

const {:allocated} li2bplFunctionConstant392: int;

axiom li2bplFunctionConstant392 == 392;

const {:allocated} li2bplFunctionConstant398: int;

axiom li2bplFunctionConstant398 == 398;

const {:allocated} li2bplFunctionConstant410: int;

axiom li2bplFunctionConstant410 == 410;

const {:allocated} li2bplFunctionConstant411: int;

axiom li2bplFunctionConstant411 == 411;

const {:allocated} li2bplFunctionConstant412: int;

axiom li2bplFunctionConstant412 == 412;

const {:allocated} li2bplFunctionConstant413: int;

axiom li2bplFunctionConstant413 == 413;

const {:allocated} li2bplFunctionConstant414: int;

axiom li2bplFunctionConstant414 == 414;

const {:allocated} li2bplFunctionConstant415: int;

axiom li2bplFunctionConstant415 == 415;

const {:allocated} li2bplFunctionConstant416: int;

axiom li2bplFunctionConstant416 == 416;

const {:allocated} li2bplFunctionConstant417: int;

axiom li2bplFunctionConstant417 == 417;

const {:allocated} li2bplFunctionConstant418: int;

axiom li2bplFunctionConstant418 == 418;

const {:allocated} li2bplFunctionConstant419: int;

axiom li2bplFunctionConstant419 == 419;

const {:allocated} li2bplFunctionConstant420: int;

axiom li2bplFunctionConstant420 == 420;

const {:allocated} li2bplFunctionConstant421: int;

axiom li2bplFunctionConstant421 == 421;

const {:allocated} li2bplFunctionConstant422: int;

axiom li2bplFunctionConstant422 == 422;

const {:allocated} li2bplFunctionConstant423: int;

axiom li2bplFunctionConstant423 == 423;

const {:allocated} li2bplFunctionConstant424: int;

axiom li2bplFunctionConstant424 == 424;

const {:allocated} li2bplFunctionConstant425: int;

axiom li2bplFunctionConstant425 == 425;

const {:allocated} li2bplFunctionConstant426: int;

axiom li2bplFunctionConstant426 == 426;

const {:allocated} li2bplFunctionConstant427: int;

axiom li2bplFunctionConstant427 == 427;

const {:allocated} li2bplFunctionConstant428: int;

axiom li2bplFunctionConstant428 == 428;

const {:allocated} li2bplFunctionConstant468: int;

axiom li2bplFunctionConstant468 == 468;

const {:allocated} li2bplFunctionConstant469: int;

axiom li2bplFunctionConstant469 == 469;

const {:allocated} li2bplFunctionConstant470: int;

axiom li2bplFunctionConstant470 == 470;

const {:allocated} li2bplFunctionConstant484: int;

axiom li2bplFunctionConstant484 == 484;

const {:allocated} li2bplFunctionConstant543: int;

axiom li2bplFunctionConstant543 == 543;

const {:allocated} li2bplFunctionConstant545: int;

axiom li2bplFunctionConstant545 == 545;

const {:allocated} li2bplFunctionConstant548: int;

axiom li2bplFunctionConstant548 == 548;

implementation {:origName "SerialTryToCompleteCurrent"} SerialTryToCompleteCurrent#0(actual_Extension_22: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_2: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} Tmp_1236: int;
  var {:pointer} s_p_e_c_i_a_l_21: int;
  var {:pointer} Tmp_1237: int;
  var {:pointer} sdv_885: int;
  var {:pointer} newIrp_1: int;
  var {:scalar} s_p_e_c_i_a_l_22: int;
  var {:pointer} sdv_887: int;
  var {:pointer} oldIrp: int;
  var {:pointer} Tmp_1240: int;
  var {:pointer} Extension_22: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_3: int;
  var {:pointer} QueueToProcess_2: int;
  var {:pointer} IntervalTimer: int;
  var {:pointer} TotalTimer: int;
  var {:scalar} Starter_1: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_675: int;
  var vslice_dummy_var_676: int;
  var vslice_dummy_var_677: int;
  var vslice_dummy_var_678: int;
  var vslice_dummy_var_679: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;

  anon0:
    call {:si_unique_call 2809} newIrp_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2810} vslice_dummy_var_675 := __HAVOC_malloc(4);
    Extension_22 := actual_Extension_22;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_3 := actual_CurrentOpIrp_3;
    QueueToProcess_2 := actual_QueueToProcess_2;
    IntervalTimer := actual_IntervalTimer;
    TotalTimer := actual_TotalTimer;
    Starter_1 := actual_Starter_1;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 2811} Tmp_1240 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_22 := RefType;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_293;
    call {:si_unique_call 2812} sdv_885 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_293);
    assume {:nonnull} sdv_885 != 0;
    assume sdv_885 > 0;
    s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_885)));
    assume {:nonnull} s_p_e_c_i_a_l_21 != 0;
    assume s_p_e_c_i_a_l_21 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 2813} vslice_dummy_var_676 := KeSynchronizeExecution(0, SynchRoutine, 0);
    goto L12;

  L12:
    call {:si_unique_call 2814} SerialRundownIrpRefs(CurrentOpIrp_3, IntervalTimer, TotalTimer, Extension_22);
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_294;
    call {:si_unique_call 2815} sdv_887 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_294);
    assume {:nonnull} sdv_887 != 0;
    assume sdv_887 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_1237;
    assume {:nonnull} Tmp_1237 != 0;
    assume Tmp_1237 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_1236;
    assume {:nonnull} Tmp_1236 != 0;
    assume Tmp_1236 > 0;
    goto L28;

  L28:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    call {:si_unique_call 2816} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_1240 := strConst__li2bpl2;
    call {:si_unique_call 2817} vslice_dummy_var_679 := SerialDbgPrintEx(9, Tmp_1240);
    call {:si_unique_call 2818} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2819} SerialIRPEpilogue(Extension_22);
    goto L1;

  L1:
    return;

  anon18_Then:
    call {:si_unique_call 2820} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant354;
    call {:si_unique_call 2821} SerialGetNextImmediate(CurrentOpIrp_3, QueueToProcess_2, newIrp_1, 1, Extension_22);
    goto L37;

  L37:
    assume {:nonnull} newIrp_1 != 0;
    assume newIrp_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant136;
    call {:si_unique_call 2822} vslice_dummy_var_678 := SerialStartRead(Extension_22);
    goto L1;

  anon21_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant212;
    call {:si_unique_call 2823} vslice_dummy_var_677 := SerialStartWrite#0(Extension_22);
    goto L1;

  anon20_Then:
    goto L1;

  anon22_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant140;
    call {:si_unique_call 2824} SerialGetNextIrp(CurrentOpIrp_3, QueueToProcess_2, newIrp_1, 1, Extension_22);
    goto L37;

  anon19_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant216;
    call {:si_unique_call 2825} SerialGetNextWrite(CurrentOpIrp_3, QueueToProcess_2, newIrp_1, 1, Extension_22);
    goto L37;

  anon24_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L28;

  anon17_Then:
    call {:si_unique_call 2826} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon23_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "SerialTryToCompleteCurrent"} SerialTryToCompleteCurrent#0(actual_Extension_22: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_2: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialTryToCompleteCurrent"} SerialTryToCompleteCurrent#1(actual_Extension_22: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_2: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} Tmp_1236: int;
  var {:pointer} s_p_e_c_i_a_l_21: int;
  var {:pointer} Tmp_1237: int;
  var {:pointer} sdv_885: int;
  var {:pointer} newIrp_1: int;
  var {:scalar} s_p_e_c_i_a_l_22: int;
  var {:pointer} sdv_887: int;
  var {:pointer} oldIrp: int;
  var {:pointer} Tmp_1240: int;
  var {:pointer} Extension_22: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_3: int;
  var {:pointer} QueueToProcess_2: int;
  var {:pointer} IntervalTimer: int;
  var {:pointer} TotalTimer: int;
  var {:scalar} Starter_1: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_680: int;
  var vslice_dummy_var_681: int;
  var vslice_dummy_var_682: int;
  var vslice_dummy_var_683: int;
  var vslice_dummy_var_684: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;

  anon0:
    call {:si_unique_call 2827} newIrp_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2828} vslice_dummy_var_680 := __HAVOC_malloc(4);
    Extension_22 := actual_Extension_22;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_3 := actual_CurrentOpIrp_3;
    QueueToProcess_2 := actual_QueueToProcess_2;
    IntervalTimer := actual_IntervalTimer;
    TotalTimer := actual_TotalTimer;
    Starter_1 := actual_Starter_1;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 2829} Tmp_1240 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_22 := RefType;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_295;
    call {:si_unique_call 2830} sdv_885 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_295);
    assume {:nonnull} sdv_885 != 0;
    assume sdv_885 > 0;
    s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_885)));
    assume {:nonnull} s_p_e_c_i_a_l_21 != 0;
    assume s_p_e_c_i_a_l_21 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 2831} vslice_dummy_var_681 := KeSynchronizeExecution(0, SynchRoutine, 0);
    goto L12;

  L12:
    call {:si_unique_call 2832} SerialRundownIrpRefs(CurrentOpIrp_3, IntervalTimer, TotalTimer, Extension_22);
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_296;
    call {:si_unique_call 2833} sdv_887 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_296);
    assume {:nonnull} sdv_887 != 0;
    assume sdv_887 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_1237;
    assume {:nonnull} Tmp_1237 != 0;
    assume Tmp_1237 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_1236;
    assume {:nonnull} Tmp_1236 != 0;
    assume Tmp_1236 > 0;
    goto L28;

  L28:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    call {:si_unique_call 2834} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_1240 := strConst__li2bpl2;
    call {:si_unique_call 2835} vslice_dummy_var_684 := SerialDbgPrintEx(9, Tmp_1240);
    call {:si_unique_call 2836} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2837} SerialIRPEpilogue(Extension_22);
    goto L1;

  L1:
    return;

  anon18_Then:
    call {:si_unique_call 2838} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant354;
    call {:si_unique_call 2839} SerialGetNextImmediate(CurrentOpIrp_3, QueueToProcess_2, newIrp_1, 1, Extension_22);
    goto L37;

  L37:
    assume {:nonnull} newIrp_1 != 0;
    assume newIrp_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant136;
    call {:si_unique_call 2840} vslice_dummy_var_683 := SerialStartRead(Extension_22);
    goto L1;

  anon21_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant212;
    call {:si_unique_call 2841} vslice_dummy_var_682 := SerialStartWrite#1(Extension_22);
    goto L1;

  anon20_Then:
    goto L1;

  anon22_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant140;
    call {:si_unique_call 2842} SerialGetNextIrp(CurrentOpIrp_3, QueueToProcess_2, newIrp_1, 1, Extension_22);
    goto L37;

  anon19_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant216;
    call {:si_unique_call 2843} SerialGetNextWrite(CurrentOpIrp_3, QueueToProcess_2, newIrp_1, 1, Extension_22);
    goto L37;

  anon24_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L28;

  anon17_Then:
    call {:si_unique_call 2844} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon23_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "SerialTryToCompleteCurrent"} SerialTryToCompleteCurrent#1(actual_Extension_22: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_2: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialStartWrite"} SerialStartWrite#0(actual_Extension_12: int) returns (Tmp_748: int)
{
  var {:pointer} s_p_e_c_i_a_l_9: int;
  var {:pointer} Tmp_749: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} Tmp_750: int;
  var {:pointer} Tmp_751: int;
  var {:pointer} Tmp_752: int;
  var {:pointer} s_p_e_c_i_a_l_10: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_2: int;
  var {:pointer} sdv_564: int;
  var {:pointer} sdv_565: int;
  var {:scalar} OldIrql_7: int;
  var {:pointer} sdv_566: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_11: int;
  var {:pointer} Tmp_753: int;
  var {:pointer} sdv_567: int;
  var {:pointer} sdv_568: int;
  var {:pointer} s_p_e_c_i_a_l_12: int;
  var {:scalar} Tmp_754: int;
  var {:scalar} s_p_e_c_i_a_l_13: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} Tmp_755: int;
  var {:pointer} Extension_12: int;
  var vslice_dummy_var_685: int;
  var vslice_dummy_var_686: int;
  var vslice_dummy_var_687: int;
  var vslice_dummy_var_688: int;
  var vslice_dummy_var_689: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;

  anon0:
    call {:si_unique_call 2845} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2846} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2847} Timeouts_1 := __HAVOC_malloc(20);
    Extension_12 := actual_Extension_12;
    call {:si_unique_call 2848} Tmp_749 := __HAVOC_malloc(92);
    call {:si_unique_call 2849} Tmp_753 := __HAVOC_malloc(88);
    SetFirstStatus := 0;
    Tmp_749 := strConst__li2bpl245;
    call {:si_unique_call 2850} vslice_dummy_var_688 := SerialDbgPrintEx(2, Tmp_749);
    goto L14;

  L14:
    call {:si_unique_call 2851} FirstStatus, SetFirstStatus, Tmp_750, Tmp_752, UseATimer_1, IrpSp_2, sdv_565, OldIrql_7, sdv_568, Tmp_754, Tmp_755 := SerialStartWrite#0_loop_L14(FirstStatus, TotalTime_1, SetFirstStatus, Tmp_750, Tmp_752, UseATimer_1, IrpSp_2, sdv_565, OldIrql_7, NewIrp_3, sdv_568, Tmp_754, Timeouts_1, Tmp_755, Extension_12);
    goto L14_last;

  L14_last:
    call {:si_unique_call 2873} Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    call {:si_unique_call 2874} IoAcquireCancelSpinLock(Tmp_755);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    havoc OldIrql_7;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_297;
    call {:si_unique_call 2852} sdv_565 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_297);
    assume {:nonnull} sdv_565 != 0;
    assume sdv_565 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    s_p_e_c_i_a_l_11 := 16;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_298;
    call {:si_unique_call 2853} sdv_567 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_298);
    assume {:nonnull} sdv_567 != 0;
    assume sdv_567 > 0;
    s_p_e_c_i_a_l_9 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_567)));
    assume {:nonnull} s_p_e_c_i_a_l_9 != 0;
    assume s_p_e_c_i_a_l_9 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc Tmp_751;
    assume {:nonnull} Tmp_751 != 0;
    assume Tmp_751 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume false;
    return;

  anon22_Then:
    call {:si_unique_call 2854} IoReleaseCancelSpinLock(OldIrql_7);
    goto L40;

  L40:
    UseATimer_1 := 0;
    call {:si_unique_call 2855} Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    call {:si_unique_call 2856} sdv_KeAcquireSpinLock(0, Tmp_755);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    havoc OldIrql_7;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2857} sdv_KeReleaseSpinLock(0, OldIrql_7);
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L51;

  L51:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_299;
    call {:si_unique_call 2858} IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_299);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    havoc Tmp_754;
    goto L59;

  L59:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_300;
    call {:si_unique_call 2859} sdv_568 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_300);
    assume {:nonnull} sdv_568 != 0;
    assume sdv_568 > 0;
    call {:si_unique_call 2860} Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    call {:si_unique_call 2861} IoAcquireCancelSpinLock(Tmp_755);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    havoc OldIrql_7;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc Tmp_750;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2862} IoReleaseCancelSpinLock(OldIrql_7);
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc Tmp_752;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    call {:si_unique_call 2863} SerialGetNextWrite(CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(Extension_12), WriteQueue__SERIAL_DEVICE_EXTENSION(Extension_12), NewIrp_3, 1, Extension_12);
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L79;

  L79:
    Tmp_753 := strConst__li2bpl244;
    call {:si_unique_call 2864} vslice_dummy_var_689 := SerialDbgPrintEx(2, Tmp_753);
    Tmp_748 := FirstStatus;
    return;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L75;

  anon28_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L87;

  L87:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_301;
    call {:si_unique_call 2865} vslice_dummy_var_685 := sdv_IoSetCancelRoutine(vslice_dummy_var_301, li2bplFunctionConstant214);
    s_p_e_c_i_a_l_13 := 2;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_302;
    call {:si_unique_call 2866} sdv_564 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_302);
    assume {:nonnull} sdv_564 != 0;
    assume sdv_564 > 0;
    s_p_e_c_i_a_l_12 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_564)));
    assume {:nonnull} s_p_e_c_i_a_l_12 != 0;
    assume s_p_e_c_i_a_l_12 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    call {:si_unique_call 2867} vslice_dummy_var_687 := SerialSetTimer(WriteRequestTotalTimer__SERIAL_DEVICE_EXTENSION(Extension_12), TotalTime_1, TotalWriteTimeoutDpc__SERIAL_DEVICE_EXTENSION(Extension_12), Extension_12);
    s_p_e_c_i_a_l_14 := 4;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_303;
    call {:si_unique_call 2868} sdv_566 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_303);
    assume {:nonnull} sdv_566 != 0;
    assume sdv_566 > 0;
    s_p_e_c_i_a_l_10 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_566)));
    assume {:nonnull} s_p_e_c_i_a_l_10 != 0;
    assume s_p_e_c_i_a_l_10 > 0;
    goto L99;

  L99:
    call {:si_unique_call 2869} vslice_dummy_var_686 := KeSynchronizeExecution(0, li2bplFunctionConstant215, 0);
    call {:si_unique_call 2870} IoReleaseCancelSpinLock(OldIrql_7);
    goto L79;

  anon30_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L99;

  anon25_Then:
    assume {:partition} SetFirstStatus == 0;
    call {:si_unique_call 2871} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L87;

  anon27_Then:
    Tmp_754 := 1;
    goto L59;

  anon23_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L60;

  anon24_Then:
    goto L51;

  anon21_Then:
    call {:si_unique_call 2872} IoReleaseCancelSpinLock(OldIrql_7);
    goto L40;
}



procedure {:origName "SerialStartWrite"} SerialStartWrite#0(actual_Extension_12: int) returns (Tmp_748: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SerialStartWrite"} SerialStartWrite#1(actual_Extension_12: int) returns (Tmp_748: int)
{
  var {:pointer} s_p_e_c_i_a_l_9: int;
  var {:pointer} Tmp_749: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} Tmp_750: int;
  var {:pointer} Tmp_751: int;
  var {:pointer} Tmp_752: int;
  var {:pointer} s_p_e_c_i_a_l_10: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_2: int;
  var {:pointer} sdv_564: int;
  var {:pointer} sdv_565: int;
  var {:scalar} OldIrql_7: int;
  var {:pointer} sdv_566: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_11: int;
  var {:pointer} Tmp_753: int;
  var {:pointer} sdv_567: int;
  var {:pointer} sdv_568: int;
  var {:pointer} s_p_e_c_i_a_l_12: int;
  var {:scalar} Tmp_754: int;
  var {:scalar} s_p_e_c_i_a_l_13: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} Tmp_755: int;
  var {:pointer} Extension_12: int;
  var vslice_dummy_var_690: int;
  var vslice_dummy_var_691: int;
  var vslice_dummy_var_692: int;
  var vslice_dummy_var_693: int;
  var vslice_dummy_var_694: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;

  anon0:
    call {:si_unique_call 2875} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2876} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2877} Timeouts_1 := __HAVOC_malloc(20);
    Extension_12 := actual_Extension_12;
    call {:si_unique_call 2878} Tmp_749 := __HAVOC_malloc(92);
    call {:si_unique_call 2879} Tmp_753 := __HAVOC_malloc(88);
    SetFirstStatus := 0;
    Tmp_749 := strConst__li2bpl245;
    call {:si_unique_call 2880} vslice_dummy_var_693 := SerialDbgPrintEx(2, Tmp_749);
    goto L14;

  L14:
    call {:si_unique_call 2881} s_p_e_c_i_a_l_9, FirstStatus, SetFirstStatus, Tmp_750, Tmp_751, Tmp_752, UseATimer_1, IrpSp_2, sdv_565, OldIrql_7, s_p_e_c_i_a_l_11, sdv_567, sdv_568, Tmp_754, Tmp_755 := SerialStartWrite#1_loop_L14(s_p_e_c_i_a_l_9, FirstStatus, TotalTime_1, SetFirstStatus, Tmp_750, Tmp_751, Tmp_752, UseATimer_1, IrpSp_2, sdv_565, OldIrql_7, NewIrp_3, s_p_e_c_i_a_l_11, sdv_567, sdv_568, Tmp_754, Timeouts_1, Tmp_755, Extension_12);
    goto L14_last;

  L14_last:
    call {:si_unique_call 2904} Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    call {:si_unique_call 2905} IoAcquireCancelSpinLock(Tmp_755);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    havoc OldIrql_7;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_304;
    call {:si_unique_call 2882} sdv_565 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_304);
    assume {:nonnull} sdv_565 != 0;
    assume sdv_565 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    s_p_e_c_i_a_l_11 := 16;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_305;
    call {:si_unique_call 2883} sdv_567 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_305);
    assume {:nonnull} sdv_567 != 0;
    assume sdv_567 > 0;
    s_p_e_c_i_a_l_9 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_567)));
    assume {:nonnull} s_p_e_c_i_a_l_9 != 0;
    assume s_p_e_c_i_a_l_9 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc Tmp_751;
    assume {:nonnull} Tmp_751 != 0;
    assume Tmp_751 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    call {:si_unique_call 2884} SerialTryToCompleteCurrent#0(Extension_12, li2bplFunctionConstant213, OldIrql_7, -1073741816, CurrentXoffIrp__SERIAL_DEVICE_EXTENSION(Extension_12), 0, 0, XoffCountTimer__SERIAL_DEVICE_EXTENSION(Extension_12), 0, 0, 16);
    goto L40;

  L40:
    UseATimer_1 := 0;
    call {:si_unique_call 2885} Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    call {:si_unique_call 2886} sdv_KeAcquireSpinLock(0, Tmp_755);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    havoc OldIrql_7;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2887} sdv_KeReleaseSpinLock(0, OldIrql_7);
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L51;

  L51:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_306;
    call {:si_unique_call 2888} IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_306);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    havoc Tmp_754;
    goto L59;

  L59:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_307;
    call {:si_unique_call 2889} sdv_568 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_307);
    assume {:nonnull} sdv_568 != 0;
    assume sdv_568 > 0;
    call {:si_unique_call 2890} Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    call {:si_unique_call 2891} IoAcquireCancelSpinLock(Tmp_755);
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    havoc OldIrql_7;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc Tmp_750;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2892} IoReleaseCancelSpinLock(OldIrql_7);
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc Tmp_752;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    call {:si_unique_call 2893} SerialGetNextWrite(CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(Extension_12), WriteQueue__SERIAL_DEVICE_EXTENSION(Extension_12), NewIrp_3, 1, Extension_12);
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L79;

  L79:
    Tmp_753 := strConst__li2bpl244;
    call {:si_unique_call 2894} vslice_dummy_var_694 := SerialDbgPrintEx(2, Tmp_753);
    Tmp_748 := FirstStatus;
    return;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L75;

  anon28_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L87;

  L87:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_308;
    call {:si_unique_call 2895} vslice_dummy_var_690 := sdv_IoSetCancelRoutine(vslice_dummy_var_308, li2bplFunctionConstant214);
    s_p_e_c_i_a_l_13 := 2;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_309;
    call {:si_unique_call 2896} sdv_564 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_309);
    assume {:nonnull} sdv_564 != 0;
    assume sdv_564 > 0;
    s_p_e_c_i_a_l_12 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_564)));
    assume {:nonnull} s_p_e_c_i_a_l_12 != 0;
    assume s_p_e_c_i_a_l_12 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    call {:si_unique_call 2897} vslice_dummy_var_692 := SerialSetTimer(WriteRequestTotalTimer__SERIAL_DEVICE_EXTENSION(Extension_12), TotalTime_1, TotalWriteTimeoutDpc__SERIAL_DEVICE_EXTENSION(Extension_12), Extension_12);
    s_p_e_c_i_a_l_14 := 4;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    havoc vslice_dummy_var_310;
    call {:si_unique_call 2898} sdv_566 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_310);
    assume {:nonnull} sdv_566 != 0;
    assume sdv_566 > 0;
    s_p_e_c_i_a_l_10 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_566)));
    assume {:nonnull} s_p_e_c_i_a_l_10 != 0;
    assume s_p_e_c_i_a_l_10 > 0;
    goto L99;

  L99:
    call {:si_unique_call 2899} vslice_dummy_var_691 := KeSynchronizeExecution(0, li2bplFunctionConstant215, 0);
    call {:si_unique_call 2900} IoReleaseCancelSpinLock(OldIrql_7);
    goto L79;

  anon30_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L99;

  anon25_Then:
    assume {:partition} SetFirstStatus == 0;
    call {:si_unique_call 2901} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L87;

  anon27_Then:
    Tmp_754 := 1;
    goto L59;

  anon23_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L60;

  anon24_Then:
    goto L51;

  anon22_Then:
    call {:si_unique_call 2902} IoReleaseCancelSpinLock(OldIrql_7);
    goto L40;

  anon21_Then:
    call {:si_unique_call 2903} IoReleaseCancelSpinLock(OldIrql_7);
    goto L40;
}



procedure {:origName "SerialStartWrite"} SerialStartWrite#1(actual_Extension_12: int) returns (Tmp_748: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation SerialGetPortInfo_loop_L95(in_ioResIndex: int, in_isMulti: int, in_count: int, in_gotIO: int, in_curIoIndex: int, in_gotInt: int, in_i: int, in_sDeviceData: int, in_gotISR: int, in_gotMem: int, in_pPartialResourceDesc: int, in_PConfig: int) returns (out_gotIO: int, out_curIoIndex: int, out_gotInt: int, out_i: int, out_sDeviceData: int, out_gotISR: int, out_gotMem: int)
{

  entry:
    out_gotIO, out_curIoIndex, out_gotInt, out_i, out_sDeviceData, out_gotISR, out_gotMem := in_gotIO, in_curIoIndex, in_gotInt, in_i, in_sDeviceData, in_gotISR, in_gotMem;
    goto L95, exit;

  exit:
    return;

  L95:
    goto anon132_Else;

  anon132_Else:
    assume {:partition} in_count > out_i;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    goto L105;

  L105:
    out_i := out_i + 1;
    goto L105_dummy;

  L105_dummy:
    call {:si_unique_call 2906} {:si_old_unique_call 1} out_gotIO, out_curIoIndex, out_gotInt, out_i, out_sDeviceData, out_gotISR, out_gotMem := SerialGetPortInfo_loop_L95(in_ioResIndex, in_isMulti, in_count, out_gotIO, out_curIoIndex, out_gotInt, out_i, out_sDeviceData, out_gotISR, out_gotMem, in_pPartialResourceDesc, in_PConfig);
    return;

  anon172_Then:
    out_sDeviceData := in_pPartialResourceDesc;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_sDeviceData != 0;
    assume out_sDeviceData > 0;
    goto L105;

  anon173_Then:
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} out_gotMem == 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} out_gotIO == 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    out_gotMem := 1;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    goto L105;

  anon138_Then:
    goto L105;

  anon137_Then:
    assume {:partition} out_gotIO != 0;
    goto L105;

  anon136_Then:
    assume {:partition} out_gotMem != 0;
    goto L105;

  anon174_Then:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} out_gotInt == 0;
    out_gotInt := 1;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    goto L105;

  anon178_Then:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    goto L105;

  anon135_Then:
    assume {:partition} out_gotInt != 0;
    goto L105;

  anon133_Then:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} out_gotISR == 0;
    assume {:nonnull} in_isMulti != 0;
    assume in_isMulti > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    out_gotISR := 1;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L105;

  anon141_Then:
    goto L105;

  anon140_Then:
    assume {:partition} out_gotISR != 0;
    goto L121;

  L121:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} out_gotIO == 0;
    assume {:nonnull} in_ioResIndex != 0;
    assume in_ioResIndex > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    out_gotIO := 1;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L105;

  anon142_Then:
    out_curIoIndex := out_curIoIndex + 1;
    goto L105;

  anon139_Then:
    assume {:partition} out_gotIO != 0;
    goto L105;

  anon134_Then:
    goto L121;
}



procedure {:LoopProcedure} SerialGetPortInfo_loop_L95(in_ioResIndex: int, in_isMulti: int, in_count: int, in_gotIO: int, in_curIoIndex: int, in_gotInt: int, in_i: int, in_sDeviceData: int, in_gotISR: int, in_gotMem: int, in_pPartialResourceDesc: int, in_PConfig: int) returns (out_gotIO: int, out_curIoIndex: int, out_gotInt: int, out_i: int, out_sDeviceData: int, out_gotISR: int, out_gotMem: int);
  free ensures {:va_keep} out_gotIO == 1 || out_gotIO == in_gotIO;
  free ensures {:va_keep} out_gotInt == 1 || out_gotInt == in_gotInt;
  free ensures {:va_keep} out_sDeviceData == in_sDeviceData || out_sDeviceData == in_pPartialResourceDesc;
  free ensures {:va_keep} out_gotISR == 1 || out_gotISR == in_gotISR;
  free ensures {:va_keep} out_gotMem == 1 || out_gotMem == in_gotMem;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialGetPortInfo_loop_L148(in_ioResIndex: int, in_isMulti: int, in_count: int, in_gotIO: int, in_pPartialTrResourceDesc: int, in_curIoIndex: int, in_gotInt: int, in_i: int, in_gotISR: int, in_gotMem: int, in_PConfig: int) returns (out_gotIO: int, out_curIoIndex: int, out_gotInt: int, out_i: int, out_gotISR: int, out_gotMem: int)
{

  entry:
    out_gotIO, out_curIoIndex, out_gotInt, out_i, out_gotISR, out_gotMem := in_gotIO, in_curIoIndex, in_gotInt, in_i, in_gotISR, in_gotMem;
    goto L148, exit;

  exit:
    return;

  L148:
    goto anon143_Else;

  anon143_Else:
    assume {:partition} in_count > out_i;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    goto L156;

  L156:
    out_i := out_i + 1;
    goto L156_dummy;

  L156_dummy:
    call {:si_unique_call 2907} {:si_old_unique_call 1} out_gotIO, out_curIoIndex, out_gotInt, out_i, out_gotISR, out_gotMem := SerialGetPortInfo_loop_L148(in_ioResIndex, in_isMulti, in_count, out_gotIO, in_pPartialTrResourceDesc, out_curIoIndex, out_gotInt, out_i, out_gotISR, out_gotMem, in_PConfig);
    return;

  anon175_Then:
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} out_gotMem != 0;
    goto L156;

  anon147_Then:
    assume {:partition} out_gotMem == 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} out_gotIO == 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    out_gotMem := 1;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    goto L156;

  anon149_Then:
    goto L156;

  anon148_Then:
    assume {:partition} out_gotIO != 0;
    goto L156;

  anon176_Then:
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} out_gotInt == 0;
    out_gotInt := 1;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L156;

  anon146_Then:
    assume {:partition} out_gotInt != 0;
    goto L156;

  anon144_Then:
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} out_gotISR == 0;
    assume {:nonnull} in_isMulti != 0;
    assume in_isMulti > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    out_gotISR := 1;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L156;

  anon152_Then:
    goto L156;

  anon151_Then:
    assume {:partition} out_gotISR != 0;
    goto L167;

  L167:
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} out_gotIO == 0;
    assume {:nonnull} in_ioResIndex != 0;
    assume in_ioResIndex > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    out_gotIO := 1;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L156;

  anon153_Then:
    out_curIoIndex := out_curIoIndex + 1;
    goto L156;

  anon150_Then:
    assume {:partition} out_gotIO != 0;
    goto L156;

  anon145_Then:
    goto L167;
}



procedure {:LoopProcedure} SerialGetPortInfo_loop_L148(in_ioResIndex: int, in_isMulti: int, in_count: int, in_gotIO: int, in_pPartialTrResourceDesc: int, in_curIoIndex: int, in_gotInt: int, in_i: int, in_gotISR: int, in_gotMem: int, in_PConfig: int) returns (out_gotIO: int, out_curIoIndex: int, out_gotInt: int, out_i: int, out_gotISR: int, out_gotMem: int);
  free ensures {:va_keep} out_gotIO == 1 || out_gotIO == in_gotIO;
  free ensures {:va_keep} out_gotInt == 1 || out_gotInt == in_gotInt;
  free ensures {:va_keep} out_gotISR == 1 || out_gotISR == in_gotISR;
  free ensures {:va_keep} out_gotMem == 1 || out_gotMem == in_gotMem;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialGetPortInfo_loop_L191(in_interfaceType: int, in_foundOne: int, in_vslice_dummy_var_76: int) returns (out_interfaceType: int, out_foundOne: int, out_vslice_dummy_var_76: int)
{

  entry:
    out_interfaceType, out_foundOne, out_vslice_dummy_var_76 := in_interfaceType, in_foundOne, in_vslice_dummy_var_76;
    goto L191, exit;

  exit:
    return;

  L191:
    assume {:CounterLoop 17} {:Counter "interfaceType"} true;
    goto anon154_Else;

  anon154_Else:
    assume {:partition} 17 > out_interfaceType;
    out_foundOne := 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} out_interfaceType != 0;
    call {:si_unique_call 2908} out_vslice_dummy_var_76 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant254, 0);
    goto anon156_Then;

  anon156_Then:
    assume {:partition} out_foundOne == 0;
    goto L198;

  L198:
    out_interfaceType := out_interfaceType + 1;
    goto L198_dummy;

  L198_dummy:
    havoc out_interfaceType;
    return;

  anon180_Then:
    assume {:partition} out_interfaceType == 0;
    goto L198;
}



procedure {:LoopProcedure} SerialGetPortInfo_loop_L191(in_interfaceType: int, in_foundOne: int, in_vslice_dummy_var_76: int) returns (out_interfaceType: int, out_foundOne: int, out_vslice_dummy_var_76: int);
  free ensures {:va_keep} out_foundOne == 0 || out_foundOne == in_foundOne;
  free ensures {:va_keep} out_vslice_dummy_var_76 == 0 || out_vslice_dummy_var_76 == -1073741823 || out_vslice_dummy_var_76 == in_vslice_dummy_var_76;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialPnpDispatch_loop_L179(in_sdv_175: int, in_allocLen: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int)
{

  entry:
    out_allocLen, out_curStrLen := in_allocLen, in_curStrLen;
    goto L179, exit;

  exit:
    return;

  L179:
    out_curStrLen := in_sdv_175;
    goto anon242_Else;

  anon242_Else:
    assume {:partition} out_curStrLen != 0;
    out_allocLen := out_allocLen + out_curStrLen * 2 + 2;
    goto anon242_Else_dummy;

  anon242_Else_dummy:
    havoc out_allocLen;
    return;
}



procedure {:LoopProcedure} SerialPnpDispatch_loop_L179(in_sdv_175: int, in_allocLen: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int);
  free ensures {:va_keep} out_curStrLen == in_sdv_175 || out_curStrLen == in_curStrLen;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialPnpDispatch_loop_L354(in_pResList: int, in_pDevExt_4: int, in_Tmp_242: int, in_Tmp_245: int, in_isMulti_2: int, in_pLowerDevObj_3: int, in_gotInt_1: int, in_pResDesc: int, in_Tmp_280: int, in_Tmp_283: int, in_j: int, in_Tmp_289: int, in_gotISR_1: int, in_vslice_dummy_var_179: int, in_vslice_dummy_var_180: int, in_vslice_dummy_var_181: int) returns (out_Tmp_242: int, out_Tmp_245: int, out_gotInt_1: int, out_pResDesc: int, out_Tmp_280: int, out_Tmp_283: int, out_j: int, out_Tmp_289: int, out_gotISR_1: int, out_vslice_dummy_var_179: int, out_vslice_dummy_var_180: int, out_vslice_dummy_var_181: int)
{

  entry:
    out_Tmp_242, out_Tmp_245, out_gotInt_1, out_pResDesc, out_Tmp_280, out_Tmp_283, out_j, out_Tmp_289, out_gotISR_1, out_vslice_dummy_var_179, out_vslice_dummy_var_180, out_vslice_dummy_var_181 := in_Tmp_242, in_Tmp_245, in_gotInt_1, in_pResDesc, in_Tmp_280, in_Tmp_283, in_j, in_Tmp_289, in_gotISR_1, in_vslice_dummy_var_179, in_vslice_dummy_var_180, in_vslice_dummy_var_181;
    goto L354, exit;

  exit:
    return;

  L354:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon182_Else;

  anon182_Else:
    out_Tmp_242 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_245;
    out_pResDesc := out_Tmp_245 + out_Tmp_242 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto L363;

  L363:
    assume {:nonnull} in_isMulti_2 != 0;
    assume in_isMulti_2 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} out_gotInt_1 != 0;
    goto anon188_Else;

  anon188_Else:
    assume {:partition} out_gotISR_1 == 0;
    goto L364;

  L364:
    assume {:nonnull} in_isMulti_2 != 0;
    assume in_isMulti_2 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    goto L369;

  L369:
    out_j := out_j + 1;
    goto L369_dummy;

  L369_dummy:
    call {:si_unique_call 2912} {:si_old_unique_call 1} out_Tmp_242, out_Tmp_245, out_gotInt_1, out_pResDesc, out_Tmp_280, out_Tmp_283, out_j, out_Tmp_289, out_gotISR_1, out_vslice_dummy_var_179, out_vslice_dummy_var_180, out_vslice_dummy_var_181 := SerialPnpDispatch_loop_L354(in_pResList, in_pDevExt_4, out_Tmp_242, out_Tmp_245, in_isMulti_2, in_pLowerDevObj_3, out_gotInt_1, out_pResDesc, out_Tmp_280, out_Tmp_283, out_j, out_Tmp_289, out_gotISR_1, out_vslice_dummy_var_179, out_vslice_dummy_var_180, out_vslice_dummy_var_181);
    return;

  anon186_Then:
    goto anon189_Else;

  anon189_Else:
    assume {:partition} out_gotInt_1 == 0;
    goto L369;

  anon187_Then:
    assume {:partition} out_gotInt_1 == 0;
    goto L364;

  anon185_Then:
    goto L364;

  anon229_Then:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} out_gotInt_1 != 0;
    goto L363;

  anon184_Then:
    assume {:partition} out_gotInt_1 == 0;
    out_gotInt_1 := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_283 := strConst__li2bpl128;
    call {:si_unique_call 2909} out_vslice_dummy_var_180 := SerialDbgPrintEx(12, out_Tmp_283);
    goto L363;

  anon238_Then:
    assume {:nonnull} in_pDevExt_4 != 0;
    assume in_pDevExt_4 > 0;
    out_Tmp_280 := strConst__li2bpl129;
    call {:si_unique_call 2910} out_vslice_dummy_var_181 := SerialDbgPrintEx(12, out_Tmp_280);
    goto L363;

  anon237_Then:
    assume {:nonnull} in_isMulti_2 != 0;
    assume in_isMulti_2 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} out_gotISR_1 == 0;
    out_gotISR_1 := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_289 := strConst__li2bpl127;
    call {:si_unique_call 2911} out_vslice_dummy_var_179 := SerialDbgPrintEx(12, out_Tmp_289);
    goto L363;

  anon191_Then:
    assume {:partition} out_gotISR_1 != 0;
    goto L363;

  anon190_Then:
    goto L363;

  anon183_Then:
    goto L363;
}



procedure {:LoopProcedure} SerialPnpDispatch_loop_L354(in_pResList: int, in_pDevExt_4: int, in_Tmp_242: int, in_Tmp_245: int, in_isMulti_2: int, in_pLowerDevObj_3: int, in_gotInt_1: int, in_pResDesc: int, in_Tmp_280: int, in_Tmp_283: int, in_j: int, in_Tmp_289: int, in_gotISR_1: int, in_vslice_dummy_var_179: int, in_vslice_dummy_var_180: int, in_vslice_dummy_var_181: int) returns (out_Tmp_242: int, out_Tmp_245: int, out_gotInt_1: int, out_pResDesc: int, out_Tmp_280: int, out_Tmp_283: int, out_j: int, out_Tmp_289: int, out_gotISR_1: int, out_vslice_dummy_var_179: int, out_vslice_dummy_var_180: int, out_vslice_dummy_var_181: int);
  free ensures {:va_keep} out_gotInt_1 == 1 || out_gotInt_1 == in_gotInt_1;
  free ensures {:va_keep} out_gotISR_1 == 1 || out_gotISR_1 == in_gotISR_1;
  free ensures {:va_keep} out_vslice_dummy_var_179 == 0 || out_vslice_dummy_var_179 == in_vslice_dummy_var_179;
  free ensures {:va_keep} out_vslice_dummy_var_180 == 0 || out_vslice_dummy_var_180 == in_vslice_dummy_var_180;
  free ensures {:va_keep} out_vslice_dummy_var_181 == 0 || out_vslice_dummy_var_181 == in_vslice_dummy_var_181;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialPnpDispatch_loop_L346(in_pResList: int, in_pDevExt_4: int, in_Tmp_242: int, in_Tmp_243: int, in_Tmp_245: int, in_isMulti_2: int, in_pLowerDevObj_3: int, in_gotInt_1: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_280: int, in_Tmp_283: int, in_j: int, in_Tmp_289: int, in_gotISR_1: int, in_vslice_dummy_var_178: int, in_vslice_dummy_var_179: int, in_vslice_dummy_var_180: int, in_vslice_dummy_var_181: int) returns (out_Tmp_242: int, out_Tmp_243: int, out_Tmp_245: int, out_gotInt_1: int, out_pResDesc: int, out_listNum: int, out_Tmp_280: int, out_Tmp_283: int, out_j: int, out_Tmp_289: int, out_gotISR_1: int, out_vslice_dummy_var_178: int, out_vslice_dummy_var_179: int, out_vslice_dummy_var_180: int, out_vslice_dummy_var_181: int)
{

  entry:
    out_Tmp_242, out_Tmp_243, out_Tmp_245, out_gotInt_1, out_pResDesc, out_listNum, out_Tmp_280, out_Tmp_283, out_j, out_Tmp_289, out_gotISR_1, out_vslice_dummy_var_178, out_vslice_dummy_var_179, out_vslice_dummy_var_180, out_vslice_dummy_var_181 := in_Tmp_242, in_Tmp_243, in_Tmp_245, in_gotInt_1, in_pResDesc, in_listNum, in_Tmp_280, in_Tmp_283, in_j, in_Tmp_289, in_gotISR_1, in_vslice_dummy_var_178, in_vslice_dummy_var_179, in_vslice_dummy_var_180, in_vslice_dummy_var_181;
    goto L346, exit;

  exit:
    return;

  L346:
    assume {:nonnull} in_pReqList != 0;
    assume in_pReqList > 0;
    goto anon181_Else;

  anon181_Else:
    out_gotISR_1 := 0;
    out_gotInt_1 := 0;
    out_Tmp_243 := strConst__li2bpl126;
    call {:si_unique_call 2914} out_vslice_dummy_var_178 := SerialDbgPrintEx(12, out_Tmp_243);
    out_j := 0;
    goto L354;

  L354:
    call {:si_unique_call 2913} out_Tmp_242, out_Tmp_245, out_gotInt_1, out_pResDesc, out_Tmp_280, out_Tmp_283, out_j, out_Tmp_289, out_gotISR_1, out_vslice_dummy_var_179, out_vslice_dummy_var_180, out_vslice_dummy_var_181 := SerialPnpDispatch_loop_L354(in_pResList, in_pDevExt_4, out_Tmp_242, out_Tmp_245, in_isMulti_2, in_pLowerDevObj_3, out_gotInt_1, out_pResDesc, out_Tmp_280, out_Tmp_283, out_j, out_Tmp_289, out_gotISR_1, out_vslice_dummy_var_179, out_vslice_dummy_var_180, out_vslice_dummy_var_181);
    goto L354_last;

  L354_last:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    out_Tmp_242 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_245;
    out_pResDesc := out_Tmp_245 + out_Tmp_242 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto L363;

  L363:
    assume {:nonnull} in_isMulti_2 != 0;
    assume in_isMulti_2 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} out_gotInt_1 != 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} out_gotISR_1 == 0;
    goto L364;

  L364:
    assume {:nonnull} in_isMulti_2 != 0;
    assume in_isMulti_2 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    goto L369;

  L369:
    out_j := out_j + 1;
    assume false;
    return;

  anon186_Then:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} out_gotInt_1 == 0;
    goto L369;

  anon189_Then:
    assume {:partition} out_gotInt_1 != 0;
    goto L355;

  L355:
    out_listNum := out_listNum + 1;
    goto L355_dummy;

  L355_dummy:
    call {:si_unique_call 2918} {:si_old_unique_call 1} out_Tmp_242, out_Tmp_243, out_Tmp_245, out_gotInt_1, out_pResDesc, out_listNum, out_Tmp_280, out_Tmp_283, out_j, out_Tmp_289, out_gotISR_1, out_vslice_dummy_var_178, out_vslice_dummy_var_179, out_vslice_dummy_var_180, out_vslice_dummy_var_181 := SerialPnpDispatch_loop_L346(in_pResList, in_pDevExt_4, out_Tmp_242, out_Tmp_243, out_Tmp_245, in_isMulti_2, in_pLowerDevObj_3, out_gotInt_1, out_pResDesc, out_listNum, in_pReqList, out_Tmp_280, out_Tmp_283, out_j, out_Tmp_289, out_gotISR_1, out_vslice_dummy_var_178, out_vslice_dummy_var_179, out_vslice_dummy_var_180, out_vslice_dummy_var_181);
    return;

  anon188_Then:
    assume {:partition} out_gotISR_1 != 0;
    goto L355;

  anon187_Then:
    assume {:partition} out_gotInt_1 == 0;
    goto L364;

  anon185_Then:
    goto L364;

  anon229_Then:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} out_gotInt_1 != 0;
    goto L363;

  anon184_Then:
    assume {:partition} out_gotInt_1 == 0;
    out_gotInt_1 := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_283 := strConst__li2bpl128;
    call {:si_unique_call 2915} out_vslice_dummy_var_180 := SerialDbgPrintEx(12, out_Tmp_283);
    goto L363;

  anon238_Then:
    assume {:nonnull} in_pDevExt_4 != 0;
    assume in_pDevExt_4 > 0;
    out_Tmp_280 := strConst__li2bpl129;
    call {:si_unique_call 2916} out_vslice_dummy_var_181 := SerialDbgPrintEx(12, out_Tmp_280);
    goto L363;

  anon237_Then:
    assume {:nonnull} in_isMulti_2 != 0;
    assume in_isMulti_2 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} out_gotISR_1 == 0;
    out_gotISR_1 := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_289 := strConst__li2bpl127;
    call {:si_unique_call 2917} out_vslice_dummy_var_179 := SerialDbgPrintEx(12, out_Tmp_289);
    goto L363;

  anon191_Then:
    assume {:partition} out_gotISR_1 != 0;
    goto L363;

  anon190_Then:
    goto L363;

  anon183_Then:
    goto L363;

  anon182_Then:
    goto L355;
}



procedure {:LoopProcedure} SerialPnpDispatch_loop_L346(in_pResList: int, in_pDevExt_4: int, in_Tmp_242: int, in_Tmp_243: int, in_Tmp_245: int, in_isMulti_2: int, in_pLowerDevObj_3: int, in_gotInt_1: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_280: int, in_Tmp_283: int, in_j: int, in_Tmp_289: int, in_gotISR_1: int, in_vslice_dummy_var_178: int, in_vslice_dummy_var_179: int, in_vslice_dummy_var_180: int, in_vslice_dummy_var_181: int) returns (out_Tmp_242: int, out_Tmp_243: int, out_Tmp_245: int, out_gotInt_1: int, out_pResDesc: int, out_listNum: int, out_Tmp_280: int, out_Tmp_283: int, out_j: int, out_Tmp_289: int, out_gotISR_1: int, out_vslice_dummy_var_178: int, out_vslice_dummy_var_179: int, out_vslice_dummy_var_180: int, out_vslice_dummy_var_181: int);
  free ensures {:va_keep} out_gotInt_1 == 1 || out_gotInt_1 == 0 || out_gotInt_1 == in_gotInt_1;
  free ensures {:va_keep} out_gotISR_1 == 1 || out_gotISR_1 == 0 || out_gotISR_1 == in_gotISR_1;
  free ensures {:va_keep} out_vslice_dummy_var_178 == 0 || out_vslice_dummy_var_178 == in_vslice_dummy_var_178;
  free ensures {:va_keep} out_vslice_dummy_var_179 == 0 || out_vslice_dummy_var_179 == in_vslice_dummy_var_179;
  free ensures {:va_keep} out_vslice_dummy_var_180 == 0 || out_vslice_dummy_var_180 == in_vslice_dummy_var_180;
  free ensures {:va_keep} out_vslice_dummy_var_181 == 0 || out_vslice_dummy_var_181 == in_vslice_dummy_var_181;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:SIextraRecBound 5} SerialPnpDispatch_loop_L476(in_Tmp_232: int, in_pDevExt_4: int, in_cap: int, in_Tmp_263: int, in_Tmp_277: int, in_Tmp_297: int, in_pDevCaps: int) returns (out_Tmp_232: int, out_cap: int, out_Tmp_263: int, out_Tmp_277: int, out_Tmp_297: int)
{

  entry:
    out_Tmp_232, out_cap, out_Tmp_263, out_Tmp_277, out_Tmp_297 := in_Tmp_232, in_cap, in_Tmp_263, in_Tmp_277, in_Tmp_297;
    goto L476, exit;

  exit:
    return;

  L476:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon194_Else;

  anon194_Else:
    assume {:partition} 7 > out_cap;
    out_Tmp_297 := out_cap;
    assume {:nonnull} in_pDevExt_4 != 0;
    assume in_pDevExt_4 > 0;
    havoc out_Tmp_277;
    out_Tmp_232 := out_cap;
    assume {:nonnull} in_pDevCaps != 0;
    assume in_pDevCaps > 0;
    havoc out_Tmp_263;
    assume {:nonnull} out_Tmp_263 != 0;
    assume out_Tmp_263 > 0;
    assume {:nonnull} out_Tmp_277 != 0;
    assume out_Tmp_277 > 0;
    out_cap := out_cap + 1;
    goto anon194_Else_dummy;

  anon194_Else_dummy:
    call {:si_unique_call 2919} {:si_old_unique_call 1} out_Tmp_232, out_cap, out_Tmp_263, out_Tmp_277, out_Tmp_297 := SerialPnpDispatch_loop_L476(out_Tmp_232, in_pDevExt_4, out_cap, out_Tmp_263, out_Tmp_277, out_Tmp_297, in_pDevCaps);
    return;
}



procedure {:LoopProcedure} SerialPnpDispatch_loop_L476(in_Tmp_232: int, in_pDevExt_4: int, in_cap: int, in_Tmp_263: int, in_Tmp_277: int, in_Tmp_297: int, in_pDevCaps: int) returns (out_Tmp_232: int, out_cap: int, out_Tmp_263: int, out_Tmp_277: int, out_Tmp_297: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialEnumerateLegacy_loop_L312(in_Tmp_384: int, in_Tmp_385: int, in_countOfPartials_1: int, in_Tmp_390: int, in_Tmp_391: int, in_Tmp_393: int, in_Tmp_396: int, in_Tmp_397: int, in_trResourceList: int, in_lowerDevice: int, in_Tmp_403: int, in_Tmp_404: int, in_actuallyReturned: int, in_Tmp_407: int, in_Tmp_408: int, in_Tmp_409: int, in_Tmp_411: int, in_PnPID: int, in_Tmp_413: int, in_Tmp_414: int, in_deviceExtension: int, in_countSoFar_1: int, in_Tmp_418: int, in_Tmp_420: int, in_Tmp_421: int, in_Tmp_423: int, in_i_1: int, in_defaultInterfaceType_1: int, in_newDevObj: int, in_Tmp_427: int, in_userSubKey: int, in_Tmp_430: int, in_Tmp_431: int, in_pRequiredList: int, in_Tmp_434: int, in_Tmp_435: int, in_Tmp_436: int, in_resourceList: int, in_Tmp_440: int, in_Tmp_442: int, in_Tmp_444: int, in_legacyKeys: int, in_legacyDiscovered: int, in_parameters: int, in_Tmp_446: int, in_status_14: int, in_sdv_381: int, in_parametersPath: int, in_newPdo: int, in_brokenStatus: int, in_Tmp_447: int, in_Tmp_449: int, in_userData: int, in_Tmp_450: int, in_DriverObject_2: int, in_vslice_dummy_var_247: int, in_vslice_dummy_var_256: int, in_vslice_dummy_var_257: int, in_vslice_dummy_var_258: int, in_vslice_dummy_var_259: int, in_vslice_dummy_var_260: int, in_vslice_dummy_var_261: int, in_vslice_dummy_var_262: int, in_vslice_dummy_var_263: int) returns (out_Tmp_384: int, out_Tmp_385: int, out_Tmp_391: int, out_lowerDevice: int, out_Tmp_403: int, out_Tmp_404: int, out_actuallyReturned: int, out_Tmp_408: int, out_Tmp_411: int, out_Tmp_414: int, out_deviceExtension: int, out_Tmp_418: int, out_Tmp_421: int, out_Tmp_423: int, out_i_1: int, out_Tmp_427: int, out_Tmp_430: int, out_Tmp_431: int, out_Tmp_434: int, out_Tmp_435: int, out_Tmp_436: int, out_Tmp_440: int, out_Tmp_442: int, out_Tmp_444: int, out_status_14: int, out_sdv_381: int, out_newPdo: int, out_Tmp_447: int, out_Tmp_449: int, out_Tmp_450: int, out_vslice_dummy_var_247: int, out_vslice_dummy_var_256: int, out_vslice_dummy_var_257: int, out_vslice_dummy_var_258: int, out_vslice_dummy_var_259: int, out_vslice_dummy_var_260: int, out_vslice_dummy_var_261: int, out_vslice_dummy_var_262: int, out_vslice_dummy_var_263: int)
{
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;

  entry:
    out_Tmp_384, out_Tmp_385, out_Tmp_391, out_lowerDevice, out_Tmp_403, out_Tmp_404, out_actuallyReturned, out_Tmp_408, out_Tmp_411, out_Tmp_414, out_deviceExtension, out_Tmp_418, out_Tmp_421, out_Tmp_423, out_i_1, out_Tmp_427, out_Tmp_430, out_Tmp_431, out_Tmp_434, out_Tmp_435, out_Tmp_436, out_Tmp_440, out_Tmp_442, out_Tmp_444, out_status_14, out_sdv_381, out_newPdo, out_Tmp_447, out_Tmp_449, out_Tmp_450, out_vslice_dummy_var_247, out_vslice_dummy_var_256, out_vslice_dummy_var_257, out_vslice_dummy_var_258, out_vslice_dummy_var_259, out_vslice_dummy_var_260, out_vslice_dummy_var_261, out_vslice_dummy_var_262, out_vslice_dummy_var_263 := in_Tmp_384, in_Tmp_385, in_Tmp_391, in_lowerDevice, in_Tmp_403, in_Tmp_404, in_actuallyReturned, in_Tmp_408, in_Tmp_411, in_Tmp_414, in_deviceExtension, in_Tmp_418, in_Tmp_421, in_Tmp_423, in_i_1, in_Tmp_427, in_Tmp_430, in_Tmp_431, in_Tmp_434, in_Tmp_435, in_Tmp_436, in_Tmp_440, in_Tmp_442, in_Tmp_444, in_status_14, in_sdv_381, in_newPdo, in_Tmp_447, in_Tmp_449, in_Tmp_450, in_vslice_dummy_var_247, in_vslice_dummy_var_256, in_vslice_dummy_var_257, in_vslice_dummy_var_258, in_vslice_dummy_var_259, in_vslice_dummy_var_260, in_vslice_dummy_var_261, in_vslice_dummy_var_262, in_vslice_dummy_var_263;
    goto L312, exit;

  exit:
    return;

  L312:
    assume {:nonnull} in_newDevObj != 0;
    assume in_newDevObj > 0;
    call {:si_unique_call 2920} out_Tmp_444 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_444 != 0;
    assume out_Tmp_444 > 0;
    call {:si_unique_call 2921} out_status_14 := ZwEnumerateKey(0, out_i_1, 0, 0, 534, out_Tmp_444);
    assume {:nonnull} out_Tmp_444 != 0;
    assume out_Tmp_444 > 0;
    havoc out_actuallyReturned;
    goto anon86_Else;

  anon86_Else:
    assume {:partition} out_status_14 != 26;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} out_status_14 == 5;
    assume {:nonnull} in_Tmp_413 != 0;
    assume in_Tmp_413 > 0;
    assume {:nonnull} in_Tmp_413 != 0;
    assume in_Tmp_413 > 0;
    assume {:nonnull} in_Tmp_413 != 0;
    assume in_Tmp_413 > 0;
    assume {:nonnull} in_Tmp_413 != 0;
    assume in_Tmp_413 > 0;
    assume {:nonnull} in_Tmp_413 != 0;
    assume in_Tmp_413 > 0;
    assume {:nonnull} in_Tmp_420 != 0;
    assume in_Tmp_420 > 0;
    assume {:nonnull} in_Tmp_420 != 0;
    assume in_Tmp_420 > 0;
    assume {:nonnull} in_Tmp_420 != 0;
    assume in_Tmp_420 > 0;
    assume {:nonnull} in_Tmp_420 != 0;
    assume in_Tmp_420 > 0;
    assume {:nonnull} in_Tmp_420 != 0;
    assume in_Tmp_420 > 0;
    call {:si_unique_call 2922} SerialLogError(in_DriverObject_2, 0, in_Tmp_420, in_Tmp_413, 0, 0, 0, 84, 0, -1073348589, 0, 0, 0, 0);
    out_Tmp_384 := strConst__li2bpl157;
    call {:si_unique_call 2923} out_vslice_dummy_var_256 := SerialDbgPrintEx(14, out_Tmp_384);
    out_i_1 := out_i_1 + 1;
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 2956} {:si_old_unique_call 1} out_Tmp_384, out_Tmp_385, out_Tmp_391, out_lowerDevice, out_Tmp_403, out_Tmp_404, out_actuallyReturned, out_Tmp_408, out_Tmp_411, out_Tmp_414, out_deviceExtension, out_Tmp_418, out_Tmp_421, out_Tmp_423, out_i_1, out_Tmp_427, out_Tmp_430, out_Tmp_431, out_Tmp_434, out_Tmp_435, out_Tmp_436, out_Tmp_440, out_Tmp_442, out_Tmp_444, out_status_14, out_sdv_381, out_newPdo, out_Tmp_447, out_Tmp_449, out_Tmp_450, out_vslice_dummy_var_247, out_vslice_dummy_var_256, out_vslice_dummy_var_257, out_vslice_dummy_var_258, out_vslice_dummy_var_259, out_vslice_dummy_var_260, out_vslice_dummy_var_261, out_vslice_dummy_var_262, out_vslice_dummy_var_263 := SerialEnumerateLegacy_loop_L312(out_Tmp_384, out_Tmp_385, in_countOfPartials_1, in_Tmp_390, out_Tmp_391, in_Tmp_393, in_Tmp_396, in_Tmp_397, in_trResourceList, out_lowerDevice, out_Tmp_403, out_Tmp_404, out_actuallyReturned, in_Tmp_407, out_Tmp_408, in_Tmp_409, out_Tmp_411, in_PnPID, in_Tmp_413, out_Tmp_414, out_deviceExtension, in_countSoFar_1, out_Tmp_418, in_Tmp_420, out_Tmp_421, out_Tmp_423, out_i_1, in_defaultInterfaceType_1, in_newDevObj, out_Tmp_427, in_userSubKey, out_Tmp_430, out_Tmp_431, in_pRequiredList, out_Tmp_434, out_Tmp_435, out_Tmp_436, in_resourceList, out_Tmp_440, out_Tmp_442, out_Tmp_444, in_legacyKeys, in_legacyDiscovered, in_parameters, in_Tmp_446, out_status_14, out_sdv_381, in_parametersPath, out_newPdo, in_brokenStatus, out_Tmp_447, out_Tmp_449, in_userData, out_Tmp_450, in_DriverObject_2, out_vslice_dummy_var_247, out_vslice_dummy_var_256, out_vslice_dummy_var_257, out_vslice_dummy_var_258, out_vslice_dummy_var_259, out_vslice_dummy_var_260, out_vslice_dummy_var_261, out_vslice_dummy_var_262, out_vslice_dummy_var_263);
    return;

  anon87_Then:
    assume {:partition} out_status_14 != 5;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} out_status_14 >= 0;
    assume {:nonnull} in_userSubKey != 0;
    assume in_userSubKey > 0;
    havoc out_Tmp_431;
    call {:si_unique_call 2924} sdv_RtlZeroMemory(0, 2);
    assume {:nonnull} in_userSubKey != 0;
    assume in_userSubKey > 0;
    havoc out_Tmp_430;
    assume {:nonnull} in_parameters != 0;
    assume in_parameters > 0;
    call {:si_unique_call 2925} sdv_RtlZeroMemory(0, 8);
    call {:si_unique_call 2926} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} in_userData != 0;
    assume in_userData > 0;
    havoc out_Tmp_414;
    call {:si_unique_call 2927} sdv_RtlZeroMemory(0, out_Tmp_414);
    assume {:nonnull} in_userData != 0;
    assume in_userData > 0;
    call {:si_unique_call 2928} out_status_14 := sdv_RtlQueryRegistryValues(0, 0, 0, 0, 0);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} out_status_14 >= 0;
    assume {:nonnull} in_PnPID != 0;
    assume in_PnPID > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    out_i_1 := out_i_1 + 1;
    goto anon90_Else_dummy;

  anon90_Else_dummy:
    goto L_BAF_0;

  anon90_Then:
    assume {:nonnull} in_legacyDiscovered != 0;
    assume in_legacyDiscovered > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    out_i_1 := out_i_1 + 1;
    goto anon91_Else_dummy;

  anon91_Else_dummy:
    goto L_BAF_0;

  anon91_Then:
    assume {:nonnull} in_userData != 0;
    assume in_userData > 0;
    call {:si_unique_call 2947} sdv_RtlZeroMemory(0, 2);
    assume {:nonnull} in_brokenStatus != 0;
    assume in_brokenStatus > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} in_brokenStatus != 0;
    assume in_brokenStatus > 0;
    assume {:nonnull} in_userData != 0;
    assume in_userData > 0;
    goto L367;

  L367:
    assume {:nonnull} in_defaultInterfaceType_1 != 0;
    assume in_defaultInterfaceType_1 > 0;
    havoc vslice_dummy_var_315;
    call {:si_unique_call 2946} out_sdv_381 := SerialIsUserDataValid(in_DriverObject_2, in_userSubKey, in_parameters, vslice_dummy_var_315, in_userData);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} out_sdv_381 != 0;
    call {:si_unique_call 2945} out_status_14 := SerialBuildResourceList(in_resourceList, in_countOfPartials_1, in_userData);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} out_status_14 >= 0;
    assume {:nonnull} in_countOfPartials_1 != 0;
    assume in_countOfPartials_1 > 0;
    havoc vslice_dummy_var_314;
    call {:si_unique_call 2944} out_status_14 := SerialTranslateResourceList(in_DriverObject_2, in_userSubKey, in_trResourceList, in_resourceList, vslice_dummy_var_314, in_userData);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} out_status_14 >= 0;
    assume {:nonnull} in_countOfPartials_1 != 0;
    assume in_countOfPartials_1 > 0;
    havoc vslice_dummy_var_313;
    call {:si_unique_call 2943} out_status_14 := SerialBuildRequirementsList(in_pRequiredList, vslice_dummy_var_313, in_userData);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} out_status_14 >= 0;
    out_newPdo := 0;
    call {:si_unique_call 2942} out_status_14 := IoReportDetectedDevice(0, -1, -1, -1, 0, 0, 0, 0);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} out_status_14 >= 0;
    assume {:nonnull} in_countOfPartials_1 != 0;
    assume in_countOfPartials_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    out_Tmp_423 := 1;
    goto L401;

  L401:
    out_Tmp_418 := out_Tmp_423;
    call {:si_unique_call 2941} out_status_14 := SerialMigrateLegacyRegistry(out_newPdo, in_userData, out_Tmp_418);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} out_status_14 >= 0;
    call {:si_unique_call 2940} out_status_14 := SerialCreateDevObj(in_DriverObject_2, in_newDevObj);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} out_status_14 >= 0;
    call {:si_unique_call 2936} out_lowerDevice := IoAttachDeviceToDeviceStack(0, out_newPdo);
    assume {:nonnull} in_newDevObj != 0;
    assume in_newDevObj > 0;
    havoc out_deviceExtension;
    assume {:nonnull} out_deviceExtension != 0;
    assume out_deviceExtension > 0;
    assume {:nonnull} out_deviceExtension != 0;
    assume out_deviceExtension > 0;
    assume {:nonnull} out_deviceExtension != 0;
    assume out_deviceExtension > 0;
    assume {:nonnull} in_newDevObj != 0;
    assume in_newDevObj > 0;
    call {:si_unique_call 2937} MmLockPagableSectionByHandle(0);
    assume {:nonnull} in_newDevObj != 0;
    assume in_newDevObj > 0;
    havoc vslice_dummy_var_312;
    call {:si_unique_call 2938} out_status_14 := SerialFinishStartDevice(vslice_dummy_var_312, in_resourceList, in_trResourceList, in_userData);
    call {:si_unique_call 2939} MmUnlockPagableImageSection(0);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} out_status_14 >= 0;
    call {:si_unique_call 2931} out_vslice_dummy_var_257 := corral_nondet();
    assume {:nonnull} in_userSubKey != 0;
    assume in_userSubKey > 0;
    havoc out_Tmp_385;
    call {:si_unique_call 2932} out_vslice_dummy_var_258 := corral_nondet();
    call {:si_unique_call 2933} out_status_14 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    assume {:nonnull} in_legacyKeys != 0;
    assume in_legacyKeys > 0;
    havoc out_Tmp_421;
    call {:si_unique_call 2934} sdv_RtlZeroMemory(0, out_Tmp_421);
    assume {:nonnull} in_legacyKeys != 0;
    assume in_legacyKeys > 0;
    call {:si_unique_call 2935} out_vslice_dummy_var_259 := corral_nondet();
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} out_status_14 >= 0;
    goto L458;

  L458:
    out_i_1 := out_i_1 + 1;
    assume {:nonnull} in_countSoFar_1 != 0;
    assume in_countSoFar_1 > 0;
    goto L458_dummy;

  L458_dummy:
    goto L_BAF_0;

  anon103_Then:
    assume {:partition} 0 > out_status_14;
    assume {:nonnull} in_Tmp_407 != 0;
    assume in_Tmp_407 > 0;
    assume {:nonnull} in_Tmp_407 != 0;
    assume in_Tmp_407 > 0;
    assume {:nonnull} in_Tmp_407 != 0;
    assume in_Tmp_407 > 0;
    assume {:nonnull} in_Tmp_407 != 0;
    assume in_Tmp_407 > 0;
    assume {:nonnull} in_Tmp_407 != 0;
    assume in_Tmp_407 > 0;
    assume {:nonnull} in_userData != 0;
    assume in_userData > 0;
    havoc vslice_dummy_var_311;
    call {:si_unique_call 2929} SerialLogError(in_DriverObject_2, 0, vslice_dummy_var_311, in_Tmp_407, 0, 0, 0, 88, 0, -1073348567, 0, 0, 0, 0);
    out_Tmp_442 := strConst__li2bpl159;
    call {:si_unique_call 2930} out_vslice_dummy_var_260 := SerialDbgPrintEx(14, out_Tmp_442);
    goto L458;

  anon102_Then:
    assume {:partition} 0 > out_status_14;
    assume {:nonnull} in_newDevObj != 0;
    assume in_newDevObj > 0;
    havoc vslice_dummy_var_316;
    call {:si_unique_call 2948} out_vslice_dummy_var_247 := SerialRemoveDevObj(vslice_dummy_var_316);
    out_i_1 := out_i_1 + 1;
    goto anon102_Then_dummy;

  anon102_Then_dummy:
    goto L_BAF_0;

  anon101_Then:
    assume {:partition} 0 > out_status_14;
    out_i_1 := out_i_1 + 1;
    goto anon101_Then_dummy;

  anon101_Then_dummy:
    goto L_BAF_0;

  anon100_Then:
    assume {:partition} 0 > out_status_14;
    out_i_1 := out_i_1 + 1;
    goto anon100_Then_dummy;

  anon100_Then_dummy:
    goto L_BAF_0;

  anon99_Then:
    out_Tmp_423 := 0;
    goto L401;

  anon97_Then:
    assume {:partition} 0 > out_status_14;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} out_status_14 == -1073741670;
    assume {:nonnull} in_userSubKey != 0;
    assume in_userSubKey > 0;
    havoc out_Tmp_391;
    out_Tmp_435 := out_Tmp_391;
    assume {:nonnull} in_userSubKey != 0;
    assume in_userSubKey > 0;
    havoc out_Tmp_436;
    assume {:nonnull} in_Tmp_446 != 0;
    assume in_Tmp_446 > 0;
    assume {:nonnull} in_Tmp_446 != 0;
    assume in_Tmp_446 > 0;
    assume {:nonnull} in_Tmp_446 != 0;
    assume in_Tmp_446 > 0;
    assume {:nonnull} in_Tmp_446 != 0;
    assume in_Tmp_446 > 0;
    assume {:nonnull} in_Tmp_446 != 0;
    assume in_Tmp_446 > 0;
    assume {:nonnull} in_userData != 0;
    assume in_userData > 0;
    havoc vslice_dummy_var_317;
    call {:si_unique_call 2950} SerialLogError(in_DriverObject_2, 0, vslice_dummy_var_317, in_Tmp_446, 0, 0, 0, 89, out_status_14, -1073348564, out_Tmp_436, out_Tmp_435, 0, 0);
    goto L477;

  L477:
    out_Tmp_408 := strConst__li2bpl160;
    call {:si_unique_call 2949} out_vslice_dummy_var_261 := SerialDbgPrintEx(14, out_Tmp_408);
    out_i_1 := out_i_1 + 1;
    goto L477_dummy;

  L477_dummy:
    goto L_BAF_0;

  anon98_Then:
    assume {:partition} out_status_14 != -1073741670;
    assume {:nonnull} in_userSubKey != 0;
    assume in_userSubKey > 0;
    havoc out_Tmp_434;
    out_Tmp_404 := out_Tmp_434;
    assume {:nonnull} in_userSubKey != 0;
    assume in_userSubKey > 0;
    havoc out_Tmp_411;
    assume {:nonnull} in_Tmp_390 != 0;
    assume in_Tmp_390 > 0;
    assume {:nonnull} in_Tmp_390 != 0;
    assume in_Tmp_390 > 0;
    assume {:nonnull} in_Tmp_390 != 0;
    assume in_Tmp_390 > 0;
    assume {:nonnull} in_Tmp_390 != 0;
    assume in_Tmp_390 > 0;
    assume {:nonnull} in_Tmp_390 != 0;
    assume in_Tmp_390 > 0;
    assume {:nonnull} in_userData != 0;
    assume in_userData > 0;
    havoc vslice_dummy_var_318;
    call {:si_unique_call 2951} SerialLogError(in_DriverObject_2, 0, vslice_dummy_var_318, in_Tmp_390, 0, 0, 0, 87, out_status_14, -1073348568, out_Tmp_411, out_Tmp_404, 0, 0);
    goto L477;

  anon96_Then:
    assume {:partition} 0 > out_status_14;
    out_i_1 := out_i_1 + 1;
    goto anon96_Then_dummy;

  anon96_Then_dummy:
    goto L_BAF_0;

  anon95_Then:
    assume {:partition} 0 > out_status_14;
    out_i_1 := out_i_1 + 1;
    goto anon95_Then_dummy;

  anon95_Then_dummy:
    goto L_BAF_0;

  anon94_Then:
    assume {:partition} 0 > out_status_14;
    out_i_1 := out_i_1 + 1;
    goto anon94_Then_dummy;

  anon94_Then_dummy:
    goto L_BAF_0;

  anon93_Then:
    assume {:partition} out_sdv_381 == 0;
    out_i_1 := out_i_1 + 1;
    goto anon93_Then_dummy;

  anon93_Then_dummy:
    goto L_BAF_0;

  anon92_Then:
    goto L367;

  anon89_Then:
    assume {:partition} 0 > out_status_14;
    assume {:nonnull} in_userSubKey != 0;
    assume in_userSubKey > 0;
    havoc out_Tmp_449;
    out_Tmp_427 := out_Tmp_449;
    assume {:nonnull} in_userSubKey != 0;
    assume in_userSubKey > 0;
    havoc out_Tmp_403;
    assume {:nonnull} in_Tmp_396 != 0;
    assume in_Tmp_396 > 0;
    assume {:nonnull} in_Tmp_396 != 0;
    assume in_Tmp_396 > 0;
    assume {:nonnull} in_Tmp_396 != 0;
    assume in_Tmp_396 > 0;
    assume {:nonnull} in_Tmp_396 != 0;
    assume in_Tmp_396 > 0;
    assume {:nonnull} in_Tmp_396 != 0;
    assume in_Tmp_396 > 0;
    assume {:nonnull} in_Tmp_397 != 0;
    assume in_Tmp_397 > 0;
    assume {:nonnull} in_Tmp_397 != 0;
    assume in_Tmp_397 > 0;
    assume {:nonnull} in_Tmp_397 != 0;
    assume in_Tmp_397 > 0;
    assume {:nonnull} in_Tmp_397 != 0;
    assume in_Tmp_397 > 0;
    assume {:nonnull} in_Tmp_397 != 0;
    assume in_Tmp_397 > 0;
    call {:si_unique_call 2952} SerialLogError(in_DriverObject_2, 0, in_Tmp_397, in_Tmp_396, 0, 0, 0, 86, 0, -1073348583, out_Tmp_403, out_Tmp_427, 0, 0);
    assume {:nonnull} in_parameters != 0;
    assume in_parameters > 0;
    havoc out_Tmp_447;
    out_Tmp_450 := strConst__li2bpl178;
    call {:si_unique_call 2953} out_vslice_dummy_var_262 := SerialDbgPrintEx(14, out_Tmp_450);
    out_i_1 := out_i_1 + 1;
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    goto L_BAF_0;

  anon88_Then:
    assume {:partition} 0 > out_status_14;
    assume {:nonnull} in_Tmp_393 != 0;
    assume in_Tmp_393 > 0;
    assume {:nonnull} in_Tmp_393 != 0;
    assume in_Tmp_393 > 0;
    assume {:nonnull} in_Tmp_393 != 0;
    assume in_Tmp_393 > 0;
    assume {:nonnull} in_Tmp_393 != 0;
    assume in_Tmp_393 > 0;
    assume {:nonnull} in_Tmp_393 != 0;
    assume in_Tmp_393 > 0;
    assume {:nonnull} in_Tmp_409 != 0;
    assume in_Tmp_409 > 0;
    assume {:nonnull} in_Tmp_409 != 0;
    assume in_Tmp_409 > 0;
    assume {:nonnull} in_Tmp_409 != 0;
    assume in_Tmp_409 > 0;
    assume {:nonnull} in_Tmp_409 != 0;
    assume in_Tmp_409 > 0;
    assume {:nonnull} in_Tmp_409 != 0;
    assume in_Tmp_409 > 0;
    call {:si_unique_call 2954} SerialLogError(in_DriverObject_2, 0, in_Tmp_409, in_Tmp_393, 0, 0, 0, 85, 0, -1073348589, 0, 0, 0, 0);
    out_Tmp_440 := strConst__li2bpl161;
    call {:si_unique_call 2955} out_vslice_dummy_var_263 := SerialDbgPrintEx(14, out_Tmp_440);
    out_i_1 := out_i_1 + 1;
    goto anon88_Then_dummy;

  anon88_Then_dummy:
    goto L_BAF_0;
}



procedure {:LoopProcedure} SerialEnumerateLegacy_loop_L312(in_Tmp_384: int, in_Tmp_385: int, in_countOfPartials_1: int, in_Tmp_390: int, in_Tmp_391: int, in_Tmp_393: int, in_Tmp_396: int, in_Tmp_397: int, in_trResourceList: int, in_lowerDevice: int, in_Tmp_403: int, in_Tmp_404: int, in_actuallyReturned: int, in_Tmp_407: int, in_Tmp_408: int, in_Tmp_409: int, in_Tmp_411: int, in_PnPID: int, in_Tmp_413: int, in_Tmp_414: int, in_deviceExtension: int, in_countSoFar_1: int, in_Tmp_418: int, in_Tmp_420: int, in_Tmp_421: int, in_Tmp_423: int, in_i_1: int, in_defaultInterfaceType_1: int, in_newDevObj: int, in_Tmp_427: int, in_userSubKey: int, in_Tmp_430: int, in_Tmp_431: int, in_pRequiredList: int, in_Tmp_434: int, in_Tmp_435: int, in_Tmp_436: int, in_resourceList: int, in_Tmp_440: int, in_Tmp_442: int, in_Tmp_444: int, in_legacyKeys: int, in_legacyDiscovered: int, in_parameters: int, in_Tmp_446: int, in_status_14: int, in_sdv_381: int, in_parametersPath: int, in_newPdo: int, in_brokenStatus: int, in_Tmp_447: int, in_Tmp_449: int, in_userData: int, in_Tmp_450: int, in_DriverObject_2: int, in_vslice_dummy_var_247: int, in_vslice_dummy_var_256: int, in_vslice_dummy_var_257: int, in_vslice_dummy_var_258: int, in_vslice_dummy_var_259: int, in_vslice_dummy_var_260: int, in_vslice_dummy_var_261: int, in_vslice_dummy_var_262: int, in_vslice_dummy_var_263: int) returns (out_Tmp_384: int, out_Tmp_385: int, out_Tmp_391: int, out_lowerDevice: int, out_Tmp_403: int, out_Tmp_404: int, out_actuallyReturned: int, out_Tmp_408: int, out_Tmp_411: int, out_Tmp_414: int, out_deviceExtension: int, out_Tmp_418: int, out_Tmp_421: int, out_Tmp_423: int, out_i_1: int, out_Tmp_427: int, out_Tmp_430: int, out_Tmp_431: int, out_Tmp_434: int, out_Tmp_435: int, out_Tmp_436: int, out_Tmp_440: int, out_Tmp_442: int, out_Tmp_444: int, out_status_14: int, out_sdv_381: int, out_newPdo: int, out_Tmp_447: int, out_Tmp_449: int, out_Tmp_450: int, out_vslice_dummy_var_247: int, out_vslice_dummy_var_256: int, out_vslice_dummy_var_257: int, out_vslice_dummy_var_258: int, out_vslice_dummy_var_259: int, out_vslice_dummy_var_260: int, out_vslice_dummy_var_261: int, out_vslice_dummy_var_262: int, out_vslice_dummy_var_263: int);
  modifies alloc, queued, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_lowerDevice == 0 || out_lowerDevice == in_lowerDevice;
  free ensures {:va_keep} out_Tmp_418 == 1 || out_Tmp_418 == 0 || out_Tmp_418 == in_Tmp_418;
  free ensures {:va_keep} out_Tmp_423 == 1 || out_Tmp_423 == 0 || out_Tmp_423 == in_Tmp_423;
  free ensures {:va_keep} out_status_14 == -1073741823 || out_status_14 == 26 || out_status_14 == -1073741811 || out_status_14 == 0 || out_status_14 == 5 || out_status_14 == -1073741789 || out_status_14 == -1073741670 || out_status_14 == -1073348588 || out_status_14 == -1073348587 || out_status_14 == -1073348586 || out_status_14 == -1073348585 || out_status_14 == -1073348584 || out_status_14 == -1073348583 || out_status_14 == -1073741808 || out_status_14 == -1073741584 || out_status_14 == 259 || out_status_14 == -1073348601 || out_status_14 == -1073741810 || out_status_14 == -1073741709 || out_status_14 == -1073741772 || out_status_14 == -1073741824 || out_status_14 == -1073741771 || out_status_14 == -1073741790 || out_status_14 == -1073741816 || out_status_14 == in_status_14;
  free ensures {:va_keep} out_sdv_381 == 0 || out_sdv_381 == 1 || out_sdv_381 == in_sdv_381;
  free ensures {:va_keep} out_newPdo == 0 || out_newPdo == in_newPdo;
  free ensures {:va_keep} out_vslice_dummy_var_247 == 0 || out_vslice_dummy_var_247 == in_vslice_dummy_var_247;
  free ensures {:va_keep} out_vslice_dummy_var_256 == 0 || out_vslice_dummy_var_256 == in_vslice_dummy_var_256;
  free ensures {:va_keep} out_vslice_dummy_var_260 == 0 || out_vslice_dummy_var_260 == in_vslice_dummy_var_260;
  free ensures {:va_keep} out_vslice_dummy_var_261 == 0 || out_vslice_dummy_var_261 == in_vslice_dummy_var_261;
  free ensures {:va_keep} out_vslice_dummy_var_262 == 0 || out_vslice_dummy_var_262 == in_vslice_dummy_var_262;
  free ensures {:va_keep} out_vslice_dummy_var_263 == 0 || out_vslice_dummy_var_263 == in_vslice_dummy_var_263;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialEnumerateLegacy_loop_L63(in_interfaceType_1: int, in_foundOne_1: int, in_vslice_dummy_var_243: int) returns (out_interfaceType_1: int, out_foundOne_1: int, out_vslice_dummy_var_243: int)
{

  entry:
    out_interfaceType_1, out_foundOne_1, out_vslice_dummy_var_243 := in_interfaceType_1, in_foundOne_1, in_vslice_dummy_var_243;
    goto L63, exit;

  exit:
    return;

  L63:
    assume {:CounterLoop 17} {:Counter "interfaceType_1"} true;
    goto anon83_Else;

  anon83_Else:
    assume {:partition} 17 > out_interfaceType_1;
    out_foundOne_1 := 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} out_interfaceType_1 != 0;
    call {:si_unique_call 2957} out_vslice_dummy_var_243 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant254, 0);
    goto anon84_Then;

  anon84_Then:
    assume {:partition} out_foundOne_1 == 0;
    goto L70;

  L70:
    out_interfaceType_1 := out_interfaceType_1 + 1;
    goto L70_dummy;

  L70_dummy:
    havoc out_interfaceType_1;
    return;

  anon113_Then:
    assume {:partition} out_interfaceType_1 == 0;
    goto L70;
}



procedure {:LoopProcedure} SerialEnumerateLegacy_loop_L63(in_interfaceType_1: int, in_foundOne_1: int, in_vslice_dummy_var_243: int) returns (out_interfaceType_1: int, out_foundOne_1: int, out_vslice_dummy_var_243: int);
  free ensures {:va_keep} out_foundOne_1 == 0 || out_foundOne_1 == in_foundOne_1;
  free ensures {:va_keep} out_vslice_dummy_var_243 == 0 || out_vslice_dummy_var_243 == -1073741823 || out_vslice_dummy_var_243 == in_vslice_dummy_var_243;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialInternalIoControl_loop_L126(in_Tmp_714: int, in_pDevExt_10: int, in_Tmp_717: int, in_cap_1: int, in_Tmp_718: int, in_Tmp_720: int) returns (out_Tmp_714: int, out_Tmp_717: int, out_cap_1: int, out_Tmp_718: int, out_Tmp_720: int)
{

  entry:
    out_Tmp_714, out_Tmp_717, out_cap_1, out_Tmp_718, out_Tmp_720 := in_Tmp_714, in_Tmp_717, in_cap_1, in_Tmp_718, in_Tmp_720;
    goto L126, exit;

  exit:
    return;

  L126:
    assume {:CounterLoop 5} {:Counter "cap_1"} true;
    goto anon42_Else;

  anon42_Else:
    assume {:partition} 7 > out_cap_1;
    out_Tmp_718 := out_cap_1;
    assume {:nonnull} in_pDevExt_10 != 0;
    assume in_pDevExt_10 > 0;
    havoc out_Tmp_714;
    assume {:nonnull} out_Tmp_714 != 0;
    assume out_Tmp_714 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    out_Tmp_720 := out_cap_1;
    assume {:nonnull} in_pDevExt_10 != 0;
    assume in_pDevExt_10 > 0;
    havoc out_Tmp_717;
    assume {:nonnull} out_Tmp_717 != 0;
    assume out_Tmp_717 > 0;
    assume {:nonnull} in_pDevExt_10 != 0;
    assume in_pDevExt_10 > 0;
    goto anon50_Else;

  anon50_Else:
    goto L129;

  L129:
    out_cap_1 := out_cap_1 + 1;
    goto L129_dummy;

  L129_dummy:
    havoc out_cap_1;
    return;

  anon49_Then:
    goto L129;
}



procedure {:LoopProcedure} SerialInternalIoControl_loop_L126(in_Tmp_714: int, in_pDevExt_10: int, in_Tmp_717: int, in_cap_1: int, in_Tmp_718: int, in_Tmp_720: int) returns (out_Tmp_714: int, out_Tmp_717: int, out_cap_1: int, out_Tmp_718: int, out_Tmp_720: int);
  free ensures {:va_keep} out_Tmp_718 == in_cap_1 || out_Tmp_718 == in_Tmp_718;
  free ensures {:va_keep} out_Tmp_720 == in_cap_1 || out_Tmp_720 == in_Tmp_720;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialGetNextWrite_loop_L8(in_s_p_e_c_i_a_l_5: int, in_sdv_549: int, in_Irp_8: int, in_Tmp_745: int, in_OldIrql_5: int, in_sdv_552: int, in_OldIrql_6: int, in_sdv_554: int, in_CompleteCurrent_2: int, in_s_p_e_c_i_a_l_6: int, in_sdv_556: int, in_sdv_557: int, in_sdv_558: int, in_s_p_e_c_i_a_l_7: int, in_delta: int, in_Xc_1: int, in_s_p_e_c_i_a_l_8: int, in_Tmp_747: int, in_CurrentOpIrp_1: int, in_QueueToProcess_1: int, in_NewIrp_2: int, in_CompleteCurrent_1: int, in_Extension_11: int, in_vslice_dummy_var_399: int, in_vslice_dummy_var_402: int, in_vslice_dummy_var_403: int) returns (out_s_p_e_c_i_a_l_5: int, out_sdv_549: int, out_Irp_8: int, out_Tmp_745: int, out_OldIrql_5: int, out_sdv_552: int, out_OldIrql_6: int, out_sdv_554: int, out_s_p_e_c_i_a_l_6: int, out_sdv_556: int, out_sdv_557: int, out_sdv_558: int, out_s_p_e_c_i_a_l_7: int, out_Xc_1: int, out_s_p_e_c_i_a_l_8: int, out_Tmp_747: int, out_CompleteCurrent_1: int, out_vslice_dummy_var_399: int, out_vslice_dummy_var_402: int, out_vslice_dummy_var_403: int)
{
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;

  entry:
    out_s_p_e_c_i_a_l_5, out_sdv_549, out_Irp_8, out_Tmp_745, out_OldIrql_5, out_sdv_552, out_OldIrql_6, out_sdv_554, out_s_p_e_c_i_a_l_6, out_sdv_556, out_sdv_557, out_sdv_558, out_s_p_e_c_i_a_l_7, out_Xc_1, out_s_p_e_c_i_a_l_8, out_Tmp_747, out_CompleteCurrent_1, out_vslice_dummy_var_399, out_vslice_dummy_var_402, out_vslice_dummy_var_403 := in_s_p_e_c_i_a_l_5, in_sdv_549, in_Irp_8, in_Tmp_745, in_OldIrql_5, in_sdv_552, in_OldIrql_6, in_sdv_554, in_s_p_e_c_i_a_l_6, in_sdv_556, in_sdv_557, in_sdv_558, in_s_p_e_c_i_a_l_7, in_Xc_1, in_s_p_e_c_i_a_l_8, in_Tmp_747, in_CompleteCurrent_1, in_vslice_dummy_var_399, in_vslice_dummy_var_402, in_vslice_dummy_var_403;
    goto L8, exit;

  exit:
    return;

  L8:
    assume {:nonnull} in_CurrentOpIrp_1 != 0;
    assume in_CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_319;
    call {:si_unique_call 2958} out_sdv_554 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_319);
    assume {:nonnull} out_sdv_554 != 0;
    assume out_sdv_554 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 2961} out_Tmp_745 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_745 != 0;
    assume out_Tmp_745 > 0;
    call {:si_unique_call 2962} IoAcquireCancelSpinLock(out_Tmp_745);
    assume {:nonnull} out_Tmp_745 != 0;
    assume out_Tmp_745 > 0;
    havoc out_OldIrql_6;
    assume {:nonnull} in_CurrentOpIrp_1 != 0;
    assume in_CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_321;
    call {:si_unique_call 2963} out_sdv_557 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_321);
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    assume {:nonnull} out_sdv_557 != 0;
    assume out_sdv_557 > 0;
    call {:si_unique_call 2964} IoReleaseCancelSpinLock(out_OldIrql_6);
    goto L26;

  L26:
    call {:si_unique_call 2960} SerialGetNextIrp(in_CurrentOpIrp_1, in_QueueToProcess_1, in_NewIrp_2, out_CompleteCurrent_1, in_Extension_11);
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    goto anon16_Then;

  anon16_Then:
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    havoc vslice_dummy_var_320;
    call {:si_unique_call 2959} out_sdv_558 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_320);
    assume {:nonnull} out_sdv_558 != 0;
    assume out_sdv_558 > 0;
    goto anon17_Then;

  anon17_Then:
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    havoc out_Tmp_747;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    out_CompleteCurrent_1 := in_CompleteCurrent_2;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    call {:si_unique_call 2974} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_5, out_sdv_549, out_Irp_8, out_Tmp_745, out_OldIrql_5, out_sdv_552, out_OldIrql_6, out_sdv_554, out_s_p_e_c_i_a_l_6, out_sdv_556, out_sdv_557, out_sdv_558, out_s_p_e_c_i_a_l_7, out_Xc_1, out_s_p_e_c_i_a_l_8, out_Tmp_747, out_CompleteCurrent_1, out_vslice_dummy_var_399, out_vslice_dummy_var_402, out_vslice_dummy_var_403 := SerialGetNextWrite_loop_L8(out_s_p_e_c_i_a_l_5, out_sdv_549, out_Irp_8, out_Tmp_745, out_OldIrql_5, out_sdv_552, out_OldIrql_6, out_sdv_554, in_CompleteCurrent_2, out_s_p_e_c_i_a_l_6, out_sdv_556, out_sdv_557, out_sdv_558, out_s_p_e_c_i_a_l_7, in_delta, out_Xc_1, out_s_p_e_c_i_a_l_8, out_Tmp_747, in_CurrentOpIrp_1, in_QueueToProcess_1, in_NewIrp_2, out_CompleteCurrent_1, in_Extension_11, out_vslice_dummy_var_399, out_vslice_dummy_var_402, out_vslice_dummy_var_403);
    return;

  anon15_Then:
    assume {:nonnull} in_CurrentOpIrp_1 != 0;
    assume in_CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_322;
    call {:si_unique_call 2966} out_sdv_556 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_322);
    assume {:nonnull} out_sdv_556 != 0;
    assume out_sdv_556 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 2972} out_Tmp_745 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_745 != 0;
    assume out_Tmp_745 > 0;
    call {:si_unique_call 2973} IoAcquireCancelSpinLock(out_Tmp_745);
    assume {:nonnull} out_Tmp_745 != 0;
    assume out_Tmp_745 > 0;
    havoc out_OldIrql_5;
    assume {:nonnull} in_CurrentOpIrp_1 != 0;
    assume in_CurrentOpIrp_1 > 0;
    havoc out_Irp_8;
    assume {:nonnull} out_Irp_8 != 0;
    assume out_Irp_8 > 0;
    havoc out_Xc_1;
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    assume {:nonnull} out_Irp_8 != 0;
    assume out_Irp_8 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L64;

  L64:
    call {:si_unique_call 2965} IoReleaseCancelSpinLock(out_OldIrql_5);
    goto L26;

  anon21_Then:
    assume {:nonnull} out_Irp_8 != 0;
    assume out_Irp_8 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} out_Irp_8 != 0;
    assume out_Irp_8 > 0;
    goto L64;

  anon19_Then:
    call {:si_unique_call 2969} out_vslice_dummy_var_399 := sdv_IoSetCancelRoutine(out_Irp_8, li2bplFunctionConstant218);
    out_s_p_e_c_i_a_l_6 := 2;
    call {:si_unique_call 2970} out_sdv_552 := sdv_IoGetCurrentIrpStackLocation(out_Irp_8);
    assume {:nonnull} out_sdv_552 != 0;
    assume out_sdv_552 > 0;
    out_s_p_e_c_i_a_l_5 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_552)));
    assume {:nonnull} out_s_p_e_c_i_a_l_5 != 0;
    assume out_s_p_e_c_i_a_l_5 > 0;
    out_CompleteCurrent_1 := 0;
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    call {:si_unique_call 2971} out_vslice_dummy_var_402 := KeSynchronizeExecution(0, li2bplFunctionConstant219, 0);
    assume {:nonnull} out_Xc_1 != 0;
    assume out_Xc_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} out_Xc_1 != 0;
    assume out_Xc_1 > 0;
    assume {:nonnull} in_delta != 0;
    assume in_delta > 0;
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    call {:si_unique_call 2967} out_vslice_dummy_var_403 := SerialSetTimer(XoffCountTimer__SERIAL_DEVICE_EXTENSION(in_Extension_11), in_delta, XoffCountTimeoutDpc__SERIAL_DEVICE_EXTENSION(in_Extension_11), in_Extension_11);
    out_s_p_e_c_i_a_l_8 := 4;
    call {:si_unique_call 2968} out_sdv_549 := sdv_IoGetCurrentIrpStackLocation(out_Irp_8);
    assume {:nonnull} out_sdv_549 != 0;
    assume out_sdv_549 > 0;
    out_s_p_e_c_i_a_l_7 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_549)));
    assume {:nonnull} out_s_p_e_c_i_a_l_7 != 0;
    assume out_s_p_e_c_i_a_l_7 > 0;
    goto L64;

  anon20_Then:
    goto L64;

  anon18_Then:
    goto L26;
}



procedure {:LoopProcedure} SerialGetNextWrite_loop_L8(in_s_p_e_c_i_a_l_5: int, in_sdv_549: int, in_Irp_8: int, in_Tmp_745: int, in_OldIrql_5: int, in_sdv_552: int, in_OldIrql_6: int, in_sdv_554: int, in_CompleteCurrent_2: int, in_s_p_e_c_i_a_l_6: int, in_sdv_556: int, in_sdv_557: int, in_sdv_558: int, in_s_p_e_c_i_a_l_7: int, in_delta: int, in_Xc_1: int, in_s_p_e_c_i_a_l_8: int, in_Tmp_747: int, in_CurrentOpIrp_1: int, in_QueueToProcess_1: int, in_NewIrp_2: int, in_CompleteCurrent_1: int, in_Extension_11: int, in_vslice_dummy_var_399: int, in_vslice_dummy_var_402: int, in_vslice_dummy_var_403: int) returns (out_s_p_e_c_i_a_l_5: int, out_sdv_549: int, out_Irp_8: int, out_Tmp_745: int, out_OldIrql_5: int, out_sdv_552: int, out_OldIrql_6: int, out_sdv_554: int, out_s_p_e_c_i_a_l_6: int, out_sdv_556: int, out_sdv_557: int, out_sdv_558: int, out_s_p_e_c_i_a_l_7: int, out_Xc_1: int, out_s_p_e_c_i_a_l_8: int, out_Tmp_747: int, out_CompleteCurrent_1: int, out_vslice_dummy_var_399: int, out_vslice_dummy_var_402: int, out_vslice_dummy_var_403: int);
  modifies alloc;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_6 == 2 || out_s_p_e_c_i_a_l_6 == in_s_p_e_c_i_a_l_6;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_8 == 4 || out_s_p_e_c_i_a_l_8 == in_s_p_e_c_i_a_l_8;
  free ensures {:va_keep} out_CompleteCurrent_1 == in_CompleteCurrent_1 || out_CompleteCurrent_1 == in_CompleteCurrent_2;
  free ensures {:va_keep} out_vslice_dummy_var_402 == 1 || out_vslice_dummy_var_402 == 0 || out_vslice_dummy_var_402 == in_vslice_dummy_var_402;
  free ensures {:va_keep} out_vslice_dummy_var_403 == 1 || out_vslice_dummy_var_403 == 0 || out_vslice_dummy_var_403 == in_vslice_dummy_var_403;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialReleaseResources_loop_L42(in_i_2: int, in_Tmp_1013: int, in_Tmp_1015: int, in_Tmp_1016: int, in_PDevExt_8: int) returns (out_i_2: int, out_Tmp_1013: int, out_Tmp_1015: int, out_Tmp_1016: int)
{

  entry:
    out_i_2, out_Tmp_1013, out_Tmp_1015, out_Tmp_1016 := in_i_2, in_Tmp_1013, in_Tmp_1015, in_Tmp_1016;
    goto L42, exit;

  exit:
    return;

  L42:
    assume {:CounterLoop 16} {:Counter "i_2"} true;
    goto anon48_Else;

  anon48_Else:
    assume {:partition} 16 > out_i_2;
    out_Tmp_1015 := out_i_2;
    assume {:nonnull} in_PDevExt_8 != 0;
    assume in_PDevExt_8 > 0;
    havoc out_Tmp_1013;
    assume {:nonnull} out_Tmp_1013 != 0;
    assume out_Tmp_1013 > 0;
    havoc out_Tmp_1016;
    assume {:nonnull} out_Tmp_1016 != 0;
    assume out_Tmp_1016 > 0;
    goto anon66_Else;

  anon66_Else:
    out_i_2 := out_i_2 + 1;
    goto anon66_Else_dummy;

  anon66_Else_dummy:
    havoc out_i_2;
    return;
}



procedure {:LoopProcedure} SerialReleaseResources_loop_L42(in_i_2: int, in_Tmp_1013: int, in_Tmp_1015: int, in_Tmp_1016: int, in_PDevExt_8: int) returns (out_i_2: int, out_Tmp_1013: int, out_Tmp_1015: int, out_Tmp_1016: int);
  free ensures {:va_keep} out_Tmp_1015 == in_i_2 || out_Tmp_1015 == in_Tmp_1015;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialFindInitController_loop_L182(in_pCurDevObj: int, in_Tmp_1022: int, in_sdv_723: int, in_pExtension: int, in_oldIrql_4: int, in_sdv_736: int, in_PConfig_1: int) returns (out_pCurDevObj: int, out_Tmp_1022: int, out_sdv_723: int, out_pExtension: int, out_oldIrql_4: int, out_sdv_736: int)
{
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;

  entry:
    out_pCurDevObj, out_Tmp_1022, out_sdv_723, out_pExtension, out_oldIrql_4, out_sdv_736 := in_pCurDevObj, in_Tmp_1022, in_sdv_723, in_pExtension, in_oldIrql_4, in_sdv_736;
    goto L182, exit;

  exit:
    return;

  L182:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_323;
    havoc vslice_dummy_var_324;
    havoc vslice_dummy_var_325;
    havoc vslice_dummy_var_326;
    call {:si_unique_call 2979} out_sdv_736 := SerialMemCompare(vslice_dummy_var_323, vslice_dummy_var_324, vslice_dummy_var_325, vslice_dummy_var_326);
    goto anon101_Then;

  anon101_Then:
    assume {:partition} out_sdv_736 != 0;
    goto L183;

  L183:
    call {:si_unique_call 2977} out_Tmp_1022 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1022 != 0;
    assume out_Tmp_1022 > 0;
    call {:si_unique_call 2978} sdv_KeAcquireSpinLock(0, out_Tmp_1022);
    assume {:nonnull} out_Tmp_1022 != 0;
    assume out_Tmp_1022 > 0;
    havoc out_oldIrql_4;
    assume {:nonnull} out_pCurDevObj != 0;
    assume out_pCurDevObj > 0;
    havoc out_pCurDevObj;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    call {:si_unique_call 2976} out_sdv_723 := sdv_containing_record(out_pCurDevObj, 32);
    out_pExtension := out_sdv_723;
    goto L216;

  L216:
    call {:si_unique_call 2975} sdv_KeReleaseSpinLock(0, out_oldIrql_4);
    goto anon104_Else;

  anon104_Else:
    goto anon105_Else;

  anon105_Else:
    goto anon105_Else_dummy;

  anon105_Else_dummy:
    call {:si_unique_call 2980} {:si_old_unique_call 1} out_pCurDevObj, out_Tmp_1022, out_sdv_723, out_pExtension, out_oldIrql_4, out_sdv_736 := SerialFindInitController_loop_L182(out_pCurDevObj, out_Tmp_1022, out_sdv_723, out_pExtension, out_oldIrql_4, out_sdv_736, in_PConfig_1);
    return;

  anon113_Then:
    goto L216;

  anon100_Then:
    goto L183;

  anon99_Then:
    goto L183;

  anon98_Then:
    goto L183;
}



procedure {:LoopProcedure} SerialFindInitController_loop_L182(in_pCurDevObj: int, in_Tmp_1022: int, in_sdv_723: int, in_pExtension: int, in_oldIrql_4: int, in_sdv_736: int, in_PConfig_1: int) returns (out_pCurDevObj: int, out_Tmp_1022: int, out_sdv_723: int, out_pExtension: int, out_oldIrql_4: int, out_sdv_736: int);
  modifies alloc, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_sdv_723 == in_sdv_723;
  free ensures {:va_keep} out_pExtension == in_pExtension;
  free ensures {:va_keep} out_sdv_736 == 0 || out_sdv_736 == 2 || out_sdv_736 == 1 || out_sdv_736 == in_sdv_736;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialFindInitController_loop_L246(in_sdv_714: int, in_pCurDevObj: int, in_Tmp_1022: int, in_pExtension: int, in_oldIrql_4: int, in_PConfig_1: int) returns (out_sdv_714: int, out_pCurDevObj: int, out_Tmp_1022: int, out_pExtension: int, out_oldIrql_4: int)
{

  entry:
    out_sdv_714, out_pCurDevObj, out_Tmp_1022, out_pExtension, out_oldIrql_4 := in_sdv_714, in_pCurDevObj, in_Tmp_1022, in_pExtension, in_oldIrql_4;
    goto L246, exit;

  exit:
    return;

  L246:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon110_Then;

  anon110_Then:
    goto L247;

  L247:
    call {:si_unique_call 2983} out_Tmp_1022 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1022 != 0;
    assume out_Tmp_1022 > 0;
    call {:si_unique_call 2984} sdv_KeAcquireSpinLock(0, out_Tmp_1022);
    assume {:nonnull} out_Tmp_1022 != 0;
    assume out_Tmp_1022 > 0;
    havoc out_oldIrql_4;
    assume {:nonnull} out_pCurDevObj != 0;
    assume out_pCurDevObj > 0;
    havoc out_pCurDevObj;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    call {:si_unique_call 2982} out_sdv_714 := sdv_containing_record(out_pCurDevObj, 32);
    out_pExtension := out_sdv_714;
    goto L264;

  L264:
    call {:si_unique_call 2981} sdv_KeReleaseSpinLock(0, out_oldIrql_4);
    goto anon111_Else;

  anon111_Else:
    goto anon112_Else;

  anon112_Else:
    goto anon112_Else_dummy;

  anon112_Else_dummy:
    havoc out_pCurDevObj;
    return;

  anon114_Then:
    goto L264;

  anon109_Then:
    goto L247;
}



procedure {:LoopProcedure} SerialFindInitController_loop_L246(in_sdv_714: int, in_pCurDevObj: int, in_Tmp_1022: int, in_pExtension: int, in_oldIrql_4: int, in_PConfig_1: int) returns (out_sdv_714: int, out_pCurDevObj: int, out_Tmp_1022: int, out_pExtension: int, out_oldIrql_4: int);
  modifies alloc, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_sdv_714 == in_sdv_714;
  free ensures {:va_keep} out_pExtension == in_pExtension;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialFindInitController_loop_L78(in_sdv_706: int, in_sdv_707: int, in_sdv_712: int, in_sdv_713: int, in_pCurDevObj: int, in_Tmp_1022: int, in_Tmp_1029: int, in_sdv_716: int, in_Tmp_1031: int, in_sdv_719: int, in_pExtension: int, in_oldIrql_4: int, in_sdv_730: int, in_sdv_733: int, in_Tmp_1041: int, in_Tmp_1042: int, in_PConfig_1: int, in_vslice_dummy_var_505: int) returns (out_sdv_706: int, out_sdv_707: int, out_sdv_712: int, out_sdv_713: int, out_pCurDevObj: int, out_Tmp_1022: int, out_Tmp_1029: int, out_sdv_716: int, out_sdv_719: int, out_pExtension: int, out_oldIrql_4: int, out_sdv_730: int, out_sdv_733: int, out_vslice_dummy_var_505: int)
{
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;

  entry:
    out_sdv_706, out_sdv_707, out_sdv_712, out_sdv_713, out_pCurDevObj, out_Tmp_1022, out_Tmp_1029, out_sdv_716, out_sdv_719, out_pExtension, out_oldIrql_4, out_sdv_730, out_sdv_733, out_vslice_dummy_var_505 := in_sdv_706, in_sdv_707, in_sdv_712, in_sdv_713, in_pCurDevObj, in_Tmp_1022, in_Tmp_1029, in_sdv_716, in_sdv_719, in_pExtension, in_oldIrql_4, in_sdv_730, in_sdv_733, in_vslice_dummy_var_505;
    goto L78, exit;

  exit:
    return;

  L78:
    goto anon82_Else;

  anon82_Else:
    goto anon83_Else;

  anon83_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    out_Tmp_1029 := strConst__li2bpl262;
    call {:si_unique_call 2991} out_vslice_dummy_var_505 := SerialDbgPrintEx(4, out_Tmp_1029);
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_331;
    havoc vslice_dummy_var_332;
    havoc vslice_dummy_var_333;
    havoc vslice_dummy_var_334;
    call {:si_unique_call 2992} out_sdv_706 := SerialMemCompare(vslice_dummy_var_331, vslice_dummy_var_332, vslice_dummy_var_333, vslice_dummy_var_334);
    goto anon87_Then;

  anon87_Then:
    assume {:partition} out_sdv_706 == 2;
    assume {:nonnull} in_Tmp_1042 != 0;
    assume in_Tmp_1042 > 0;
    assume {:nonnull} in_Tmp_1042 != 0;
    assume in_Tmp_1042 > 0;
    assume {:nonnull} in_Tmp_1042 != 0;
    assume in_Tmp_1042 > 0;
    assume {:nonnull} in_Tmp_1042 != 0;
    assume in_Tmp_1042 > 0;
    assume {:nonnull} in_Tmp_1042 != 0;
    assume in_Tmp_1042 > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    havoc vslice_dummy_var_329;
    havoc vslice_dummy_var_330;
    call {:si_unique_call 2990} out_sdv_730 := SerialMemCompare(vslice_dummy_var_329, vslice_dummy_var_330, in_Tmp_1042, 0);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} out_sdv_730 != 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_337;
    havoc vslice_dummy_var_338;
    havoc vslice_dummy_var_339;
    havoc vslice_dummy_var_340;
    call {:si_unique_call 2994} out_sdv_733 := SerialMemCompare(vslice_dummy_var_337, vslice_dummy_var_338, vslice_dummy_var_339, vslice_dummy_var_340);
    goto anon89_Then;

  anon89_Then:
    assume {:partition} out_sdv_733 == 2;
    assume {:nonnull} in_Tmp_1041 != 0;
    assume in_Tmp_1041 > 0;
    assume {:nonnull} in_Tmp_1041 != 0;
    assume in_Tmp_1041 > 0;
    assume {:nonnull} in_Tmp_1041 != 0;
    assume in_Tmp_1041 > 0;
    assume {:nonnull} in_Tmp_1041 != 0;
    assume in_Tmp_1041 > 0;
    assume {:nonnull} in_Tmp_1041 != 0;
    assume in_Tmp_1041 > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    havoc vslice_dummy_var_335;
    havoc vslice_dummy_var_336;
    call {:si_unique_call 2993} out_sdv_707 := SerialMemCompare(vslice_dummy_var_335, vslice_dummy_var_336, in_Tmp_1041, 0);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} out_sdv_707 != 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_341;
    havoc vslice_dummy_var_342;
    havoc vslice_dummy_var_343;
    havoc vslice_dummy_var_344;
    call {:si_unique_call 2995} out_sdv_716 := SerialMemCompare(vslice_dummy_var_341, vslice_dummy_var_342, vslice_dummy_var_343, vslice_dummy_var_344);
    goto anon91_Then;

  anon91_Then:
    assume {:partition} out_sdv_716 != 1;
    goto L105;

  L105:
    assume {:nonnull} in_Tmp_1031 != 0;
    assume in_Tmp_1031 > 0;
    assume {:nonnull} in_Tmp_1031 != 0;
    assume in_Tmp_1031 > 0;
    assume {:nonnull} in_Tmp_1031 != 0;
    assume in_Tmp_1031 > 0;
    assume {:nonnull} in_Tmp_1031 != 0;
    assume in_Tmp_1031 > 0;
    assume {:nonnull} in_Tmp_1031 != 0;
    assume in_Tmp_1031 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_327;
    havoc vslice_dummy_var_328;
    call {:si_unique_call 2989} out_sdv_719 := SerialMemCompare(vslice_dummy_var_327, vslice_dummy_var_328, in_Tmp_1031, 0);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} out_sdv_719 != 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_345;
    havoc vslice_dummy_var_346;
    havoc vslice_dummy_var_347;
    havoc vslice_dummy_var_348;
    call {:si_unique_call 2996} out_sdv_712 := SerialMemCompare(vslice_dummy_var_345, vslice_dummy_var_346, vslice_dummy_var_347, vslice_dummy_var_348);
    goto anon93_Then;

  anon93_Then:
    assume {:partition} out_sdv_712 != 1;
    goto L84;

  L84:
    call {:si_unique_call 2986} out_Tmp_1022 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1022 != 0;
    assume out_Tmp_1022 > 0;
    call {:si_unique_call 2987} sdv_KeAcquireSpinLock(0, out_Tmp_1022);
    assume {:nonnull} out_Tmp_1022 != 0;
    assume out_Tmp_1022 > 0;
    havoc out_oldIrql_4;
    assume {:nonnull} out_pCurDevObj != 0;
    assume out_pCurDevObj > 0;
    havoc out_pCurDevObj;
    call {:si_unique_call 2988} sdv_KeReleaseSpinLock(0, out_oldIrql_4);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    call {:si_unique_call 2985} out_sdv_713 := sdv_containing_record(out_pCurDevObj, 32);
    out_pExtension := out_sdv_713;
    goto anon94_Else_dummy;

  anon94_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 2997} {:si_old_unique_call 1} out_sdv_706, out_sdv_707, out_sdv_712, out_sdv_713, out_pCurDevObj, out_Tmp_1022, out_Tmp_1029, out_sdv_716, out_sdv_719, out_pExtension, out_oldIrql_4, out_sdv_730, out_sdv_733, out_vslice_dummy_var_505 := SerialFindInitController_loop_L78(out_sdv_706, out_sdv_707, out_sdv_712, out_sdv_713, out_pCurDevObj, out_Tmp_1022, out_Tmp_1029, out_sdv_716, in_Tmp_1031, out_sdv_719, out_pExtension, out_oldIrql_4, out_sdv_730, out_sdv_733, in_Tmp_1041, in_Tmp_1042, in_PConfig_1, out_vslice_dummy_var_505);
    return;

  anon94_Then:
    goto anon94_Then_dummy;

  anon94_Then_dummy:
    goto L_BAF_1;

  anon92_Then:
    assume {:partition} out_sdv_719 == 0;
    goto L84;

  anon90_Then:
    assume {:partition} out_sdv_707 == 0;
    goto L105;

  anon88_Then:
    assume {:partition} out_sdv_730 == 0;
    goto L105;

  anon86_Then:
    goto L84;

  anon85_Then:
    goto L84;

  anon84_Then:
    goto L84;
}



procedure {:LoopProcedure} SerialFindInitController_loop_L78(in_sdv_706: int, in_sdv_707: int, in_sdv_712: int, in_sdv_713: int, in_pCurDevObj: int, in_Tmp_1022: int, in_Tmp_1029: int, in_sdv_716: int, in_Tmp_1031: int, in_sdv_719: int, in_pExtension: int, in_oldIrql_4: int, in_sdv_730: int, in_sdv_733: int, in_Tmp_1041: int, in_Tmp_1042: int, in_PConfig_1: int, in_vslice_dummy_var_505: int) returns (out_sdv_706: int, out_sdv_707: int, out_sdv_712: int, out_sdv_713: int, out_pCurDevObj: int, out_Tmp_1022: int, out_Tmp_1029: int, out_sdv_716: int, out_sdv_719: int, out_pExtension: int, out_oldIrql_4: int, out_sdv_730: int, out_sdv_733: int, out_vslice_dummy_var_505: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_sdv_706 == 0 || out_sdv_706 == 2 || out_sdv_706 == 1 || out_sdv_706 == in_sdv_706;
  free ensures {:va_keep} out_sdv_707 == 0 || out_sdv_707 == 2 || out_sdv_707 == 1 || out_sdv_707 == in_sdv_707;
  free ensures {:va_keep} out_sdv_712 == 0 || out_sdv_712 == 2 || out_sdv_712 == 1 || out_sdv_712 == in_sdv_712;
  free ensures {:va_keep} out_sdv_713 == in_sdv_713;
  free ensures {:va_keep} out_sdv_716 == 0 || out_sdv_716 == 2 || out_sdv_716 == 1 || out_sdv_716 == in_sdv_716;
  free ensures {:va_keep} out_sdv_719 == 0 || out_sdv_719 == 2 || out_sdv_719 == 1 || out_sdv_719 == in_sdv_719;
  free ensures {:va_keep} out_pExtension == in_pExtension;
  free ensures {:va_keep} out_sdv_730 == 0 || out_sdv_730 == 2 || out_sdv_730 == 1 || out_sdv_730 == in_sdv_730;
  free ensures {:va_keep} out_sdv_733 == 0 || out_sdv_733 == 2 || out_sdv_733 == 1 || out_sdv_733 == in_sdv_733;
  free ensures {:va_keep} out_vslice_dummy_var_505 == 0 || out_vslice_dummy_var_505 == in_vslice_dummy_var_505;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialStartRead_loop_L23(in_Tmp_1148: int, in_localStatus: int, in_sdv_811: int, in_Tmp_1149: int, in_totalTime: int, in_os2ssreturn: int, in_updateChar: int, in_timeoutsForIrp: int, in_setFirstStatus: int, in_useTotalTimer: int, in_newIrp: int, in_Tmp_1151: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_817: int, in_Tmp_1152: int, in_oldIrql_6: int, in_sdv_819: int, in_constantVal: int, in_Tmp_1154: int, in_Tmp_1155: int, in_controlIrql: int, in_Tmp_1157: int, in_returnWithWhatsPresent: int, in_useIntervalTimer: int, in_sdv_826: int, in_firstStatus: int, in_Extension_15: int, in_boogieTmp: int, in_vslice_dummy_var_537: int, in_vslice_dummy_var_538: int, in_vslice_dummy_var_539: int, in_vslice_dummy_var_542: int) returns (out_Tmp_1148: int, out_localStatus: int, out_sdv_811: int, out_Tmp_1149: int, out_os2ssreturn: int, out_setFirstStatus: int, out_useTotalTimer: int, out_Tmp_1151: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_817: int, out_Tmp_1152: int, out_oldIrql_6: int, out_sdv_819: int, out_constantVal: int, out_Tmp_1154: int, out_Tmp_1155: int, out_controlIrql: int, out_Tmp_1157: int, out_returnWithWhatsPresent: int, out_useIntervalTimer: int, out_sdv_826: int, out_firstStatus: int, out_boogieTmp: int, out_vslice_dummy_var_537: int, out_vslice_dummy_var_538: int, out_vslice_dummy_var_539: int, out_vslice_dummy_var_542: int)
{
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;

  entry:
    out_Tmp_1148, out_localStatus, out_sdv_811, out_Tmp_1149, out_os2ssreturn, out_setFirstStatus, out_useTotalTimer, out_Tmp_1151, out_multiplierVal, out_crunchDownToOne, out_sdv_817, out_Tmp_1152, out_oldIrql_6, out_sdv_819, out_constantVal, out_Tmp_1154, out_Tmp_1155, out_controlIrql, out_Tmp_1157, out_returnWithWhatsPresent, out_useIntervalTimer, out_sdv_826, out_firstStatus, out_boogieTmp, out_vslice_dummy_var_537, out_vslice_dummy_var_538, out_vslice_dummy_var_539, out_vslice_dummy_var_542 := in_Tmp_1148, in_localStatus, in_sdv_811, in_Tmp_1149, in_os2ssreturn, in_setFirstStatus, in_useTotalTimer, in_Tmp_1151, in_multiplierVal, in_crunchDownToOne, in_sdv_817, in_Tmp_1152, in_oldIrql_6, in_sdv_819, in_constantVal, in_Tmp_1154, in_Tmp_1155, in_controlIrql, in_Tmp_1157, in_returnWithWhatsPresent, in_useIntervalTimer, in_sdv_826, in_firstStatus, in_boogieTmp, in_vslice_dummy_var_537, in_vslice_dummy_var_538, in_vslice_dummy_var_539, in_vslice_dummy_var_542;
    goto L23, exit;

  exit:
    return;

  L23:
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    havoc vslice_dummy_var_349;
    call {:si_unique_call 2998} out_sdv_817 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_349);
    assume {:nonnull} out_sdv_817 != 0;
    assume out_sdv_817 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 3020} out_localStatus := SerialResizeBuffer(in_Extension_15);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  L37:
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    call {:si_unique_call 2999} SerialGetNextIrp(CurrentReadIrp__SERIAL_DEVICE_EXTENSION(in_Extension_15), ReadQueue__SERIAL_DEVICE_EXTENSION(in_Extension_15), in_newIrp, 1, in_Extension_15);
    assume {:nonnull} in_newIrp != 0;
    assume in_newIrp > 0;
    goto anon61_Then;

  anon61_Then:
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    call {:si_unique_call 3021} {:si_old_unique_call 1} out_Tmp_1148, out_localStatus, out_sdv_811, out_Tmp_1149, out_os2ssreturn, out_setFirstStatus, out_useTotalTimer, out_Tmp_1151, out_multiplierVal, out_crunchDownToOne, out_sdv_817, out_Tmp_1152, out_oldIrql_6, out_sdv_819, out_constantVal, out_Tmp_1154, out_Tmp_1155, out_controlIrql, out_Tmp_1157, out_returnWithWhatsPresent, out_useIntervalTimer, out_sdv_826, out_firstStatus, out_boogieTmp, out_vslice_dummy_var_537, out_vslice_dummy_var_538, out_vslice_dummy_var_539, out_vslice_dummy_var_542 := SerialStartRead_loop_L23(out_Tmp_1148, out_localStatus, out_sdv_811, out_Tmp_1149, in_totalTime, out_os2ssreturn, in_updateChar, in_timeoutsForIrp, out_setFirstStatus, out_useTotalTimer, in_newIrp, out_Tmp_1151, out_multiplierVal, out_crunchDownToOne, out_sdv_817, out_Tmp_1152, out_oldIrql_6, out_sdv_819, out_constantVal, out_Tmp_1154, out_Tmp_1155, out_controlIrql, out_Tmp_1157, out_returnWithWhatsPresent, out_useIntervalTimer, out_sdv_826, out_firstStatus, in_Extension_15, out_boogieTmp, out_vslice_dummy_var_537, out_vslice_dummy_var_538, out_vslice_dummy_var_539, out_vslice_dummy_var_542);
    return;

  anon60_Then:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := out_localStatus;
    out_setFirstStatus := 1;
    goto L37;

  anon59_Then:
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    havoc vslice_dummy_var_352;
    call {:si_unique_call 3010} out_sdv_819 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_352);
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    assume {:nonnull} out_sdv_819 != 0;
    assume out_sdv_819 > 0;
    out_useTotalTimer := 0;
    out_returnWithWhatsPresent := 0;
    out_os2ssreturn := 0;
    out_crunchDownToOne := 0;
    out_useIntervalTimer := 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    call {:si_unique_call 3011} out_vslice_dummy_var_542 := SerialCancelTimer(ReadRequestTotalTimer__SERIAL_DEVICE_EXTENSION(in_Extension_15), in_Extension_15);
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    call {:si_unique_call 3012} out_vslice_dummy_var_537 := SerialCancelTimer(ReadRequestIntervalTimer__SERIAL_DEVICE_EXTENSION(in_Extension_15), in_Extension_15);
    call {:si_unique_call 3013} out_Tmp_1148 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1148 != 0;
    assume out_Tmp_1148 > 0;
    call {:si_unique_call 3014} sdv_KeAcquireSpinLock(0, out_Tmp_1148);
    assume {:nonnull} out_Tmp_1148 != 0;
    assume out_Tmp_1148 > 0;
    havoc out_controlIrql;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    call {:si_unique_call 3015} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_useIntervalTimer := 1;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    goto L66;

  L66:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L76;

  L76:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L83;

  L83:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} out_useTotalTimer != 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    assume {:nonnull} in_totalTime != 0;
    assume in_totalTime > 0;
    goto L84;

  L84:
    call {:si_unique_call 3007} out_Tmp_1148 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1148 != 0;
    assume out_Tmp_1148 > 0;
    call {:si_unique_call 3008} sdv_KeAcquireSpinLock(0, out_Tmp_1148);
    assume {:nonnull} out_Tmp_1148 != 0;
    assume out_Tmp_1148 > 0;
    havoc out_controlIrql;
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    call {:si_unique_call 3009} out_boogieTmp := SerialGetCharsFromIntBuffer(in_Extension_15);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} out_returnWithWhatsPresent != 0;
    goto L94;

  L94:
    call {:si_unique_call 3018} out_vslice_dummy_var_538 := KeSynchronizeExecution(0, li2bplFunctionConstant137, 0);
    call {:si_unique_call 3019} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    havoc out_Tmp_1151;
    assume {:nonnull} out_Tmp_1151 != 0;
    assume out_Tmp_1151 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L37;

  anon83_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  anon72_Then:
    assume {:partition} out_returnWithWhatsPresent == 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} out_os2ssreturn != 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    havoc out_Tmp_1154;
    assume {:nonnull} out_Tmp_1154 != 0;
    assume out_Tmp_1154 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L105;

  L105:
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    havoc vslice_dummy_var_351;
    call {:si_unique_call 3004} out_sdv_826 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_351);
    assume {:nonnull} out_sdv_826 != 0;
    assume out_sdv_826 > 0;
    call {:si_unique_call 3005} out_Tmp_1148 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1148 != 0;
    assume out_Tmp_1148 > 0;
    call {:si_unique_call 3006} IoAcquireCancelSpinLock(out_Tmp_1148);
    assume {:nonnull} out_Tmp_1148 != 0;
    assume out_Tmp_1148 > 0;
    havoc out_oldIrql_6;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    havoc out_Tmp_1152;
    assume {:nonnull} out_Tmp_1152 != 0;
    assume out_Tmp_1152 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 3016} IoReleaseCancelSpinLock(out_oldIrql_6);
    call {:si_unique_call 3017} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    havoc out_Tmp_1149;
    assume {:nonnull} out_Tmp_1149 != 0;
    assume out_Tmp_1149 > 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    havoc out_Tmp_1157;
    assume {:nonnull} out_Tmp_1157 != 0;
    assume out_Tmp_1157 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := -1073741536;
    out_setFirstStatus := 1;
    goto L37;

  anon86_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  anon85_Then:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} out_crunchDownToOne != 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    havoc vslice_dummy_var_350;
    call {:si_unique_call 3003} out_sdv_811 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_350);
    assume {:nonnull} out_sdv_811 != 0;
    assume out_sdv_811 > 0;
    goto L126;

  L126:
    call {:si_unique_call 3002} out_vslice_dummy_var_539 := KeSynchronizeExecution(0, li2bplFunctionConstant138, 0);
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    goto anon76_Else;

  anon76_Else:
    call {:si_unique_call 3000} IoReleaseCancelSpinLock(out_oldIrql_6);
    call {:si_unique_call 3001} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    havoc out_Tmp_1155;
    assume {:nonnull} out_Tmp_1155 != 0;
    assume out_Tmp_1155 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L37;

  anon87_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  anon75_Then:
    assume {:partition} out_crunchDownToOne == 0;
    goto L126;

  anon84_Then:
    goto L94;

  anon74_Then:
    assume {:partition} out_os2ssreturn == 0;
    goto L105;

  anon73_Then:
    goto L94;

  anon71_Then:
    assume {:partition} out_useTotalTimer == 0;
    goto L84;

  anon70_Then:
    goto L77;

  L77:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    out_crunchDownToOne := 1;
    out_multiplierVal := 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L83;

  anon80_Then:
    goto L83;

  anon69_Then:
    goto L83;

  anon68_Then:
    goto L77;

  anon66_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    out_returnWithWhatsPresent := 1;
    goto L83;

  anon67_Then:
    goto L76;

  anon63_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L192;

  L192:
    out_useTotalTimer := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L83;

  anon65_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L192;

  anon81_Then:
    goto L83;

  anon82_Then:
    assume {:nonnull} in_Extension_15 != 0;
    assume in_Extension_15 > 0;
    goto L66;

  anon64_Then:
    goto L66;

  anon62_Then:
    goto L66;
}



procedure {:LoopProcedure} SerialStartRead_loop_L23(in_Tmp_1148: int, in_localStatus: int, in_sdv_811: int, in_Tmp_1149: int, in_totalTime: int, in_os2ssreturn: int, in_updateChar: int, in_timeoutsForIrp: int, in_setFirstStatus: int, in_useTotalTimer: int, in_newIrp: int, in_Tmp_1151: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_817: int, in_Tmp_1152: int, in_oldIrql_6: int, in_sdv_819: int, in_constantVal: int, in_Tmp_1154: int, in_Tmp_1155: int, in_controlIrql: int, in_Tmp_1157: int, in_returnWithWhatsPresent: int, in_useIntervalTimer: int, in_sdv_826: int, in_firstStatus: int, in_Extension_15: int, in_boogieTmp: int, in_vslice_dummy_var_537: int, in_vslice_dummy_var_538: int, in_vslice_dummy_var_539: int, in_vslice_dummy_var_542: int) returns (out_Tmp_1148: int, out_localStatus: int, out_sdv_811: int, out_Tmp_1149: int, out_os2ssreturn: int, out_setFirstStatus: int, out_useTotalTimer: int, out_Tmp_1151: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_817: int, out_Tmp_1152: int, out_oldIrql_6: int, out_sdv_819: int, out_constantVal: int, out_Tmp_1154: int, out_Tmp_1155: int, out_controlIrql: int, out_Tmp_1157: int, out_returnWithWhatsPresent: int, out_useIntervalTimer: int, out_sdv_826: int, out_firstStatus: int, out_boogieTmp: int, out_vslice_dummy_var_537: int, out_vslice_dummy_var_538: int, out_vslice_dummy_var_539: int, out_vslice_dummy_var_542: int);
  modifies alloc, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_localStatus == 0 || out_localStatus == in_localStatus;
  free ensures {:va_keep} out_os2ssreturn == 0 || out_os2ssreturn == 1 || out_os2ssreturn == in_os2ssreturn;
  free ensures {:va_keep} out_setFirstStatus == 1 || out_setFirstStatus == in_setFirstStatus;
  free ensures {:va_keep} out_useTotalTimer == 0 || out_useTotalTimer == 1 || out_useTotalTimer == in_useTotalTimer;
  free ensures {:va_keep} out_crunchDownToOne == 0 || out_crunchDownToOne == 1 || out_crunchDownToOne == in_crunchDownToOne;
  free ensures {:va_keep} out_returnWithWhatsPresent == 1 || out_returnWithWhatsPresent == 0 || out_returnWithWhatsPresent == in_returnWithWhatsPresent;
  free ensures {:va_keep} out_useIntervalTimer == 1 || out_useIntervalTimer == 0 || out_useIntervalTimer == in_useIntervalTimer;
  free ensures {:va_keep} out_firstStatus == 0 || out_firstStatus == -1073741536 || out_firstStatus == in_firstStatus;
  free ensures {:va_keep} out_vslice_dummy_var_537 == 1 || out_vslice_dummy_var_537 == 0 || out_vslice_dummy_var_537 == in_vslice_dummy_var_537;
  free ensures {:va_keep} out_vslice_dummy_var_538 == 1 || out_vslice_dummy_var_538 == 0 || out_vslice_dummy_var_538 == in_vslice_dummy_var_538;
  free ensures {:va_keep} out_vslice_dummy_var_539 == 1 || out_vslice_dummy_var_539 == 0 || out_vslice_dummy_var_539 == in_vslice_dummy_var_539;
  free ensures {:va_keep} out_vslice_dummy_var_542 == 1 || out_vslice_dummy_var_542 == 0 || out_vslice_dummy_var_542 == in_vslice_dummy_var_542;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialStartMask_loop_L11(in_Tmp_1195: int, in_s_p_e_c_i_a_l_19: int, in_Tmp_1196: int, in_FirstStatus_1: int, in_Tmp_1197: int, in_SetFirstStatus_1: int, in_Tmp_1198: int, in_Tmp_1199: int, in_Tmp_1200: int, in_Tmp_1201: int, in_Tmp_1202: int, in_Tmp_1203: int, in_Tmp_1204: int, in_IrpSp_3: int, in_Tmp_1205: int, in_OldIrql_8: int, in_Tmp_1206: int, in_NewIrp_4: int, in_s_p_e_c_i_a_l_20: int, in_Tmp_1208: int, in_Tmp_1209: int, in_sdv_862: int, in_Tmp_1210: int, in_Tmp_1211: int, in_sdv_865: int, in_Tmp_1212: int, in_Tmp_1213: int, in_Extension_20: int, in_vslice_dummy_var_561: int, in_vslice_dummy_var_563: int, in_vslice_dummy_var_564: int, in_vslice_dummy_var_565: int, in_vslice_dummy_var_566: int, in_vslice_dummy_var_567: int, in_vslice_dummy_var_568: int, in_vslice_dummy_var_569: int, in_vslice_dummy_var_570: int, in_vslice_dummy_var_571: int, in_vslice_dummy_var_572: int, in_vslice_dummy_var_573: int, in_vslice_dummy_var_574: int, in_vslice_dummy_var_575: int, in_vslice_dummy_var_576: int, in_vslice_dummy_var_577: int) returns (out_Tmp_1195: int, out_s_p_e_c_i_a_l_19: int, out_Tmp_1196: int, out_FirstStatus_1: int, out_Tmp_1197: int, out_SetFirstStatus_1: int, out_Tmp_1198: int, out_Tmp_1199: int, out_Tmp_1200: int, out_Tmp_1201: int, out_Tmp_1202: int, out_Tmp_1203: int, out_Tmp_1204: int, out_IrpSp_3: int, out_Tmp_1205: int, out_OldIrql_8: int, out_Tmp_1206: int, out_s_p_e_c_i_a_l_20: int, out_Tmp_1208: int, out_Tmp_1209: int, out_sdv_862: int, out_Tmp_1210: int, out_Tmp_1211: int, out_sdv_865: int, out_Tmp_1212: int, out_Tmp_1213: int, out_vslice_dummy_var_561: int, out_vslice_dummy_var_563: int, out_vslice_dummy_var_564: int, out_vslice_dummy_var_565: int, out_vslice_dummy_var_566: int, out_vslice_dummy_var_567: int, out_vslice_dummy_var_568: int, out_vslice_dummy_var_569: int, out_vslice_dummy_var_570: int, out_vslice_dummy_var_571: int, out_vslice_dummy_var_572: int, out_vslice_dummy_var_573: int, out_vslice_dummy_var_574: int, out_vslice_dummy_var_575: int, out_vslice_dummy_var_576: int, out_vslice_dummy_var_577: int)
{
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;

  entry:
    out_Tmp_1195, out_s_p_e_c_i_a_l_19, out_Tmp_1196, out_FirstStatus_1, out_Tmp_1197, out_SetFirstStatus_1, out_Tmp_1198, out_Tmp_1199, out_Tmp_1200, out_Tmp_1201, out_Tmp_1202, out_Tmp_1203, out_Tmp_1204, out_IrpSp_3, out_Tmp_1205, out_OldIrql_8, out_Tmp_1206, out_s_p_e_c_i_a_l_20, out_Tmp_1208, out_Tmp_1209, out_sdv_862, out_Tmp_1210, out_Tmp_1211, out_sdv_865, out_Tmp_1212, out_Tmp_1213, out_vslice_dummy_var_561, out_vslice_dummy_var_563, out_vslice_dummy_var_564, out_vslice_dummy_var_565, out_vslice_dummy_var_566, out_vslice_dummy_var_567, out_vslice_dummy_var_568, out_vslice_dummy_var_569, out_vslice_dummy_var_570, out_vslice_dummy_var_571, out_vslice_dummy_var_572, out_vslice_dummy_var_573, out_vslice_dummy_var_574, out_vslice_dummy_var_575, out_vslice_dummy_var_576, out_vslice_dummy_var_577 := in_Tmp_1195, in_s_p_e_c_i_a_l_19, in_Tmp_1196, in_FirstStatus_1, in_Tmp_1197, in_SetFirstStatus_1, in_Tmp_1198, in_Tmp_1199, in_Tmp_1200, in_Tmp_1201, in_Tmp_1202, in_Tmp_1203, in_Tmp_1204, in_IrpSp_3, in_Tmp_1205, in_OldIrql_8, in_Tmp_1206, in_s_p_e_c_i_a_l_20, in_Tmp_1208, in_Tmp_1209, in_sdv_862, in_Tmp_1210, in_Tmp_1211, in_sdv_865, in_Tmp_1212, in_Tmp_1213, in_vslice_dummy_var_561, in_vslice_dummy_var_563, in_vslice_dummy_var_564, in_vslice_dummy_var_565, in_vslice_dummy_var_566, in_vslice_dummy_var_567, in_vslice_dummy_var_568, in_vslice_dummy_var_569, in_vslice_dummy_var_570, in_vslice_dummy_var_571, in_vslice_dummy_var_572, in_vslice_dummy_var_573, in_vslice_dummy_var_574, in_vslice_dummy_var_575, in_vslice_dummy_var_576, in_vslice_dummy_var_577;
    goto L11, exit;

  exit:
    return;

  L11:
    out_Tmp_1195 := strConst__li2bpl297;
    call {:si_unique_call 3022} out_vslice_dummy_var_563 := SerialDbgPrintEx(7, out_Tmp_1195);
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    havoc vslice_dummy_var_353;
    call {:si_unique_call 3023} out_IrpSp_3 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_353);
    assume {:nonnull} out_IrpSp_3 != 0;
    assume out_IrpSp_3 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    out_Tmp_1205 := strConst__li2bpl298;
    call {:si_unique_call 3047} out_vslice_dummy_var_564 := SerialDbgPrintEx(7, out_Tmp_1205);
    call {:si_unique_call 3048} out_vslice_dummy_var_561 := KeSynchronizeExecution(0, li2bplFunctionConstant196, 0);
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    havoc out_Tmp_1211;
    assume {:nonnull} out_Tmp_1211 != 0;
    assume out_Tmp_1211 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L31;

  L31:
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    call {:si_unique_call 3024} SerialGetNextIrp(CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(in_Extension_20), MaskQueue__SERIAL_DEVICE_EXTENSION(in_Extension_20), in_NewIrp_4, 1, in_Extension_20);
    out_Tmp_1212 := strConst__li2bpl300;
    call {:si_unique_call 3025} out_vslice_dummy_var_565 := SerialDbgPrintEx(7, out_Tmp_1212);
    goto L37;

  L37:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    goto anon21_Then;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    call {:si_unique_call 3049} {:si_old_unique_call 1} out_Tmp_1195, out_s_p_e_c_i_a_l_19, out_Tmp_1196, out_FirstStatus_1, out_Tmp_1197, out_SetFirstStatus_1, out_Tmp_1198, out_Tmp_1199, out_Tmp_1200, out_Tmp_1201, out_Tmp_1202, out_Tmp_1203, out_Tmp_1204, out_IrpSp_3, out_Tmp_1205, out_OldIrql_8, out_Tmp_1206, out_s_p_e_c_i_a_l_20, out_Tmp_1208, out_Tmp_1209, out_sdv_862, out_Tmp_1210, out_Tmp_1211, out_sdv_865, out_Tmp_1212, out_Tmp_1213, out_vslice_dummy_var_561, out_vslice_dummy_var_563, out_vslice_dummy_var_564, out_vslice_dummy_var_565, out_vslice_dummy_var_566, out_vslice_dummy_var_567, out_vslice_dummy_var_568, out_vslice_dummy_var_569, out_vslice_dummy_var_570, out_vslice_dummy_var_571, out_vslice_dummy_var_572, out_vslice_dummy_var_573, out_vslice_dummy_var_574, out_vslice_dummy_var_575, out_vslice_dummy_var_576, out_vslice_dummy_var_577 := SerialStartMask_loop_L11(out_Tmp_1195, out_s_p_e_c_i_a_l_19, out_Tmp_1196, out_FirstStatus_1, out_Tmp_1197, out_SetFirstStatus_1, out_Tmp_1198, out_Tmp_1199, out_Tmp_1200, out_Tmp_1201, out_Tmp_1202, out_Tmp_1203, out_Tmp_1204, out_IrpSp_3, out_Tmp_1205, out_OldIrql_8, out_Tmp_1206, in_NewIrp_4, out_s_p_e_c_i_a_l_20, out_Tmp_1208, out_Tmp_1209, out_sdv_862, out_Tmp_1210, out_Tmp_1211, out_sdv_865, out_Tmp_1212, out_Tmp_1213, in_Extension_20, out_vslice_dummy_var_561, out_vslice_dummy_var_563, out_vslice_dummy_var_564, out_vslice_dummy_var_565, out_vslice_dummy_var_566, out_vslice_dummy_var_567, out_vslice_dummy_var_568, out_vslice_dummy_var_569, out_vslice_dummy_var_570, out_vslice_dummy_var_571, out_vslice_dummy_var_572, out_vslice_dummy_var_573, out_vslice_dummy_var_574, out_vslice_dummy_var_575, out_vslice_dummy_var_576, out_vslice_dummy_var_577);
    return;

  anon24_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_1203 := strConst__li2bpl299;
    call {:si_unique_call 3046} out_vslice_dummy_var_566 := SerialDbgPrintEx(7, out_Tmp_1203);
    out_FirstStatus_1 := 0;
    out_SetFirstStatus_1 := 1;
    goto L31;

  anon19_Then:
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 3041} out_Tmp_1201 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1201 != 0;
    assume out_Tmp_1201 > 0;
    call {:si_unique_call 3042} IoAcquireCancelSpinLock(out_Tmp_1201);
    assume {:nonnull} out_Tmp_1201 != 0;
    assume out_Tmp_1201 > 0;
    havoc out_OldIrql_8;
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    havoc out_Tmp_1200;
    assume {:nonnull} out_Tmp_1200 != 0;
    assume out_Tmp_1200 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    out_Tmp_1197 := strConst__li2bpl303;
    call {:si_unique_call 3044} out_vslice_dummy_var_570 := SerialDbgPrintEx(7, out_Tmp_1197);
    call {:si_unique_call 3045} IoReleaseCancelSpinLock(out_OldIrql_8);
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    havoc out_Tmp_1198;
    assume {:nonnull} out_Tmp_1198 != 0;
    assume out_Tmp_1198 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L64;

  L64:
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    call {:si_unique_call 3026} SerialGetNextIrp(CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(in_Extension_20), MaskQueue__SERIAL_DEVICE_EXTENSION(in_Extension_20), in_NewIrp_4, 1, in_Extension_20);
    out_Tmp_1213 := strConst__li2bpl300;
    call {:si_unique_call 3027} out_vslice_dummy_var_571 := SerialDbgPrintEx(7, out_Tmp_1213);
    goto L37;

  anon27_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_1206 := strConst__li2bpl299;
    call {:si_unique_call 3043} out_vslice_dummy_var_572 := SerialDbgPrintEx(7, out_Tmp_1206);
    out_FirstStatus_1 := -1073741536;
    out_SetFirstStatus_1 := 1;
    goto L64;

  anon26_Then:
    out_Tmp_1208 := strConst__li2bpl302;
    call {:si_unique_call 3040} out_vslice_dummy_var_573 := SerialDbgPrintEx(7, out_Tmp_1208);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L76;

  L76:
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    havoc vslice_dummy_var_354;
    call {:si_unique_call 3028} out_sdv_862 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_354);
    assume {:nonnull} out_sdv_862 != 0;
    assume out_sdv_862 > 0;
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    havoc vslice_dummy_var_355;
    call {:si_unique_call 3029} out_vslice_dummy_var_574 := sdv_IoSetCancelRoutine(vslice_dummy_var_355, li2bplFunctionConstant197);
    out_s_p_e_c_i_a_l_20 := 2;
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    havoc vslice_dummy_var_356;
    call {:si_unique_call 3030} out_sdv_865 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_356);
    assume {:nonnull} out_sdv_865 != 0;
    assume out_sdv_865 > 0;
    out_s_p_e_c_i_a_l_19 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_865)));
    assume {:nonnull} out_s_p_e_c_i_a_l_19 != 0;
    assume out_s_p_e_c_i_a_l_19 > 0;
    call {:si_unique_call 3031} out_vslice_dummy_var_575 := KeSynchronizeExecution(0, li2bplFunctionConstant198, 0);
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    call {:si_unique_call 3032} SerialGetNextIrpLocked(CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(in_Extension_20), MaskQueue__SERIAL_DEVICE_EXTENSION(in_Extension_20), in_NewIrp_4, 0, in_Extension_20, out_OldIrql_8);
    out_Tmp_1196 := strConst__li2bpl300;
    call {:si_unique_call 3033} out_vslice_dummy_var_576 := SerialDbgPrintEx(7, out_Tmp_1196);
    goto L37;

  anon23_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_1210 := strConst__li2bpl299;
    call {:si_unique_call 3038} out_vslice_dummy_var_577 := SerialDbgPrintEx(7, out_Tmp_1210);
    out_FirstStatus_1 := 259;
    out_SetFirstStatus_1 := 1;
    call {:si_unique_call 3039} sdv_IoMarkIrpPending(0);
    goto L76;

  anon22_Then:
    goto L41;

  L41:
    out_Tmp_1209 := strConst__li2bpl301;
    call {:si_unique_call 3037} out_vslice_dummy_var_567 := SerialDbgPrintEx(7, out_Tmp_1209);
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    havoc out_Tmp_1204;
    assume {:nonnull} out_Tmp_1204 != 0;
    assume out_Tmp_1204 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L112;

  L112:
    assume {:nonnull} in_Extension_20 != 0;
    assume in_Extension_20 > 0;
    call {:si_unique_call 3034} SerialGetNextIrp(CurrentMaskIrp__SERIAL_DEVICE_EXTENSION(in_Extension_20), MaskQueue__SERIAL_DEVICE_EXTENSION(in_Extension_20), in_NewIrp_4, 1, in_Extension_20);
    out_Tmp_1199 := strConst__li2bpl300;
    call {:si_unique_call 3035} out_vslice_dummy_var_568 := SerialDbgPrintEx(7, out_Tmp_1199);
    goto L37;

  anon25_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_1202 := strConst__li2bpl299;
    call {:si_unique_call 3036} out_vslice_dummy_var_569 := SerialDbgPrintEx(7, out_Tmp_1202);
    out_FirstStatus_1 := -1073741811;
    out_SetFirstStatus_1 := 1;
    goto L112;

  anon20_Then:
    goto L41;
}



procedure {:LoopProcedure} SerialStartMask_loop_L11(in_Tmp_1195: int, in_s_p_e_c_i_a_l_19: int, in_Tmp_1196: int, in_FirstStatus_1: int, in_Tmp_1197: int, in_SetFirstStatus_1: int, in_Tmp_1198: int, in_Tmp_1199: int, in_Tmp_1200: int, in_Tmp_1201: int, in_Tmp_1202: int, in_Tmp_1203: int, in_Tmp_1204: int, in_IrpSp_3: int, in_Tmp_1205: int, in_OldIrql_8: int, in_Tmp_1206: int, in_NewIrp_4: int, in_s_p_e_c_i_a_l_20: int, in_Tmp_1208: int, in_Tmp_1209: int, in_sdv_862: int, in_Tmp_1210: int, in_Tmp_1211: int, in_sdv_865: int, in_Tmp_1212: int, in_Tmp_1213: int, in_Extension_20: int, in_vslice_dummy_var_561: int, in_vslice_dummy_var_563: int, in_vslice_dummy_var_564: int, in_vslice_dummy_var_565: int, in_vslice_dummy_var_566: int, in_vslice_dummy_var_567: int, in_vslice_dummy_var_568: int, in_vslice_dummy_var_569: int, in_vslice_dummy_var_570: int, in_vslice_dummy_var_571: int, in_vslice_dummy_var_572: int, in_vslice_dummy_var_573: int, in_vslice_dummy_var_574: int, in_vslice_dummy_var_575: int, in_vslice_dummy_var_576: int, in_vslice_dummy_var_577: int) returns (out_Tmp_1195: int, out_s_p_e_c_i_a_l_19: int, out_Tmp_1196: int, out_FirstStatus_1: int, out_Tmp_1197: int, out_SetFirstStatus_1: int, out_Tmp_1198: int, out_Tmp_1199: int, out_Tmp_1200: int, out_Tmp_1201: int, out_Tmp_1202: int, out_Tmp_1203: int, out_Tmp_1204: int, out_IrpSp_3: int, out_Tmp_1205: int, out_OldIrql_8: int, out_Tmp_1206: int, out_s_p_e_c_i_a_l_20: int, out_Tmp_1208: int, out_Tmp_1209: int, out_sdv_862: int, out_Tmp_1210: int, out_Tmp_1211: int, out_sdv_865: int, out_Tmp_1212: int, out_Tmp_1213: int, out_vslice_dummy_var_561: int, out_vslice_dummy_var_563: int, out_vslice_dummy_var_564: int, out_vslice_dummy_var_565: int, out_vslice_dummy_var_566: int, out_vslice_dummy_var_567: int, out_vslice_dummy_var_568: int, out_vslice_dummy_var_569: int, out_vslice_dummy_var_570: int, out_vslice_dummy_var_571: int, out_vslice_dummy_var_572: int, out_vslice_dummy_var_573: int, out_vslice_dummy_var_574: int, out_vslice_dummy_var_575: int, out_vslice_dummy_var_576: int, out_vslice_dummy_var_577: int);
  modifies alloc, markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} out_FirstStatus_1 == 0 || out_FirstStatus_1 == -1073741536 || out_FirstStatus_1 == 259 || out_FirstStatus_1 == -1073741811 || out_FirstStatus_1 == in_FirstStatus_1;
  free ensures {:va_keep} out_SetFirstStatus_1 == 1 || out_SetFirstStatus_1 == in_SetFirstStatus_1;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_20 == 2 || out_s_p_e_c_i_a_l_20 == in_s_p_e_c_i_a_l_20;
  free ensures {:va_keep} out_vslice_dummy_var_561 == 1 || out_vslice_dummy_var_561 == 0 || out_vslice_dummy_var_561 == in_vslice_dummy_var_561;
  free ensures {:va_keep} out_vslice_dummy_var_563 == 0 || out_vslice_dummy_var_563 == in_vslice_dummy_var_563;
  free ensures {:va_keep} out_vslice_dummy_var_564 == 0 || out_vslice_dummy_var_564 == in_vslice_dummy_var_564;
  free ensures {:va_keep} out_vslice_dummy_var_565 == 0 || out_vslice_dummy_var_565 == in_vslice_dummy_var_565;
  free ensures {:va_keep} out_vslice_dummy_var_566 == 0 || out_vslice_dummy_var_566 == in_vslice_dummy_var_566;
  free ensures {:va_keep} out_vslice_dummy_var_567 == 0 || out_vslice_dummy_var_567 == in_vslice_dummy_var_567;
  free ensures {:va_keep} out_vslice_dummy_var_568 == 0 || out_vslice_dummy_var_568 == in_vslice_dummy_var_568;
  free ensures {:va_keep} out_vslice_dummy_var_569 == 0 || out_vslice_dummy_var_569 == in_vslice_dummy_var_569;
  free ensures {:va_keep} out_vslice_dummy_var_570 == 0 || out_vslice_dummy_var_570 == in_vslice_dummy_var_570;
  free ensures {:va_keep} out_vslice_dummy_var_571 == 0 || out_vslice_dummy_var_571 == in_vslice_dummy_var_571;
  free ensures {:va_keep} out_vslice_dummy_var_572 == 0 || out_vslice_dummy_var_572 == in_vslice_dummy_var_572;
  free ensures {:va_keep} out_vslice_dummy_var_573 == 0 || out_vslice_dummy_var_573 == in_vslice_dummy_var_573;
  free ensures {:va_keep} out_vslice_dummy_var_575 == 1 || out_vslice_dummy_var_575 == 0 || out_vslice_dummy_var_575 == in_vslice_dummy_var_575;
  free ensures {:va_keep} out_vslice_dummy_var_576 == 0 || out_vslice_dummy_var_576 == in_vslice_dummy_var_576;
  free ensures {:va_keep} out_vslice_dummy_var_577 == 0 || out_vslice_dummy_var_577 == in_vslice_dummy_var_577;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialKillAllStalled_loop_L10(in_currentLastIrp: int, in_cancelIrql: int, in_pDevExt_18: int, in_sdv_890: int, in_Tmp_1242: int, in_sdv_891: int, in_cancelRoutine_1: int, in_PDevObj_18: int, in_vslice_dummy_var_592: int) returns (out_currentLastIrp: int, out_cancelIrql: int, out_sdv_890: int, out_Tmp_1242: int, out_sdv_891: int, out_cancelRoutine_1: int, out_vslice_dummy_var_592: int)
{
  var vslice_dummy_var_357: int;

  entry:
    out_currentLastIrp, out_cancelIrql, out_sdv_890, out_Tmp_1242, out_sdv_891, out_cancelRoutine_1, out_vslice_dummy_var_592 := in_currentLastIrp, in_cancelIrql, in_sdv_890, in_Tmp_1242, in_sdv_891, in_cancelRoutine_1, in_vslice_dummy_var_592;
    goto L10, exit;

  exit:
    return;

  L10:
    call {:si_unique_call 3050} out_sdv_890 := sdv_IsListEmpty(0);
    goto anon13_Else;

  anon13_Else:
    assume {:partition} out_sdv_890 == 0;
    assume {:nonnull} in_pDevExt_18 != 0;
    assume in_pDevExt_18 > 0;
    havoc vslice_dummy_var_357;
    call {:si_unique_call 3059} out_sdv_891 := sdv_containing_record(vslice_dummy_var_357, 88);
    out_currentLastIrp := out_sdv_891;
    call {:si_unique_call 3060} out_vslice_dummy_var_592 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    havoc out_cancelRoutine_1;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant214;
    call {:si_unique_call 3053} SerialCancelCurrentWrite(in_PDevObj_18, out_currentLastIrp);
    goto L32;

  L32:
    call {:si_unique_call 3051} out_Tmp_1242 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1242 != 0;
    assume out_Tmp_1242 > 0;
    call {:si_unique_call 3052} IoAcquireCancelSpinLock(out_Tmp_1242);
    assume {:nonnull} out_Tmp_1242 != 0;
    assume out_Tmp_1242 > 0;
    havoc out_cancelIrql;
    goto L32_dummy;

  L32_dummy:
    call {:si_unique_call 3061} {:si_old_unique_call 1} out_currentLastIrp, out_cancelIrql, out_sdv_890, out_Tmp_1242, out_sdv_891, out_cancelRoutine_1, out_vslice_dummy_var_592 := SerialKillAllStalled_loop_L10(out_currentLastIrp, out_cancelIrql, in_pDevExt_18, out_sdv_890, out_Tmp_1242, out_sdv_891, out_cancelRoutine_1, in_PDevObj_18, out_vslice_dummy_var_592);
    return;

  anon17_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant218;
    call {:si_unique_call 3054} SerialCancelCurrentXoff(in_PDevObj_18, out_currentLastIrp);
    goto L32;

  anon16_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant351;
    call {:si_unique_call 3055} SerialCancelImmediate(in_PDevObj_18, out_currentLastIrp);
    goto L32;

  anon15_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant166;
    call {:si_unique_call 3056} SerialCancelQueued(in_PDevObj_18, out_currentLastIrp);
    goto L32;

  anon14_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant197;
    call {:si_unique_call 3057} SerialCancelWait(in_PDevObj_18, out_currentLastIrp);
    goto L32;

  anon18_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant168;
    call {:si_unique_call 3058} SerialFilterCancelQueued(in_PDevObj_18, out_currentLastIrp);
    goto L32;
}



procedure {:LoopProcedure} SerialKillAllStalled_loop_L10(in_currentLastIrp: int, in_cancelIrql: int, in_pDevExt_18: int, in_sdv_890: int, in_Tmp_1242: int, in_sdv_891: int, in_cancelRoutine_1: int, in_PDevObj_18: int, in_vslice_dummy_var_592: int) returns (out_currentLastIrp: int, out_cancelIrql: int, out_sdv_890: int, out_Tmp_1242: int, out_sdv_891: int, out_cancelRoutine_1: int, out_vslice_dummy_var_592: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_currentLastIrp == in_currentLastIrp;
  free ensures {:va_keep} out_cancelIrql == in_cancelIrql;
  free ensures {:va_keep} out_sdv_890 == in_sdv_890;
  free ensures {:va_keep} out_Tmp_1242 == in_Tmp_1242;
  free ensures {:va_keep} out_sdv_891 == in_sdv_891;
  free ensures {:va_keep} out_cancelRoutine_1 == in_cancelRoutine_1;
  free ensures {:va_keep} out_vslice_dummy_var_592 == in_vslice_dummy_var_592;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialUnstallIrps_loop_L16(in_Tmp_1254: int, in_Tmp_1255: int, in_sdv_905: int, in_oldIrql_9: int, in_pIrpStack_6: int, in_pIrp_1: int, in_pDevObj_2: int, in_Tmp_1257: int, in_pIrpLink: int, in_pDrvObj_1: int, in_Tmp_1258: int, in_PDevExt_16: int, in_vslice_dummy_var_599: int, in_vslice_dummy_var_600: int, in_vslice_dummy_var_601: int) returns (out_Tmp_1254: int, out_Tmp_1255: int, out_sdv_905: int, out_oldIrql_9: int, out_pIrpStack_6: int, out_pIrp_1: int, out_pDevObj_2: int, out_Tmp_1257: int, out_pIrpLink: int, out_pDrvObj_1: int, out_Tmp_1258: int, out_vslice_dummy_var_599: int, out_vslice_dummy_var_600: int, out_vslice_dummy_var_601: int)
{

  entry:
    out_Tmp_1254, out_Tmp_1255, out_sdv_905, out_oldIrql_9, out_pIrpStack_6, out_pIrp_1, out_pDevObj_2, out_Tmp_1257, out_pIrpLink, out_pDrvObj_1, out_Tmp_1258, out_vslice_dummy_var_599, out_vslice_dummy_var_600, out_vslice_dummy_var_601 := in_Tmp_1254, in_Tmp_1255, in_sdv_905, in_oldIrql_9, in_pIrpStack_6, in_pIrp_1, in_pDevObj_2, in_Tmp_1257, in_pIrpLink, in_pDrvObj_1, in_Tmp_1258, in_vslice_dummy_var_599, in_vslice_dummy_var_600, in_vslice_dummy_var_601;
    goto L16, exit;

  exit:
    return;

  L16:
    goto anon59_Else;

  anon59_Else:
    call {:si_unique_call 3064} out_sdv_905 := sdv_containing_record(out_pIrpLink, 88);
    out_pIrp_1 := out_sdv_905;
    call {:si_unique_call 3065} out_vslice_dummy_var_599 := sdv_RemoveEntryList(0);
    call {:si_unique_call 3066} out_pIrpStack_6 := sdv_IoGetCurrentIrpStackLocation(out_pIrp_1);
    assume {:nonnull} out_pIrpStack_6 != 0;
    assume out_pIrpStack_6 > 0;
    havoc out_pDevObj_2;
    assume {:nonnull} out_pDevObj_2 != 0;
    assume out_pDevObj_2 > 0;
    havoc out_pDrvObj_1;
    call {:si_unique_call 3067} out_vslice_dummy_var_600 := sdv_IoSetCancelRoutine(out_pIrp_1, 0);
    call {:si_unique_call 3068} IoReleaseCancelSpinLock(out_oldIrql_9);
    out_Tmp_1258 := strConst__li2bpl306;
    call {:si_unique_call 3069} out_vslice_dummy_var_601 := SerialDbgPrintEx(12, out_Tmp_1258);
    assume {:nonnull} out_pIrpStack_6 != 0;
    assume out_pIrpStack_6 > 0;
    havoc out_Tmp_1254;
    assume {:nonnull} out_pDrvObj_1 != 0;
    assume out_pDrvObj_1 > 0;
    havoc out_Tmp_1257;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume out_Tmp_1254 != 27;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume out_Tmp_1254 != 26;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume out_Tmp_1254 != 25;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume out_Tmp_1254 != 24;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume out_Tmp_1254 != 23;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume out_Tmp_1254 != 22;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume out_Tmp_1254 != 21;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume out_Tmp_1254 != 20;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume out_Tmp_1254 != 19;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume out_Tmp_1254 != 18;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume out_Tmp_1254 != 17;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume out_Tmp_1254 != 16;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume out_Tmp_1254 != 15;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume out_Tmp_1254 != 14;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume out_Tmp_1254 != 13;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume out_Tmp_1254 != 12;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume out_Tmp_1254 != 11;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume out_Tmp_1254 != 10;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume out_Tmp_1254 != 9;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume out_Tmp_1254 != 8;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume out_Tmp_1254 != 7;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume out_Tmp_1254 != 6;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume out_Tmp_1254 != 5;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume out_Tmp_1254 != 4;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume out_Tmp_1254 != 3;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume out_Tmp_1254 != 2;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume out_Tmp_1254 != 1;
    goto anon87_Then;

  anon87_Then:
    assume out_Tmp_1254 == 0;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  L45:
    call {:si_unique_call 3062} out_Tmp_1255 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1255 != 0;
    assume out_Tmp_1255 > 0;
    call {:si_unique_call 3063} IoAcquireCancelSpinLock(out_Tmp_1255);
    assume {:nonnull} out_Tmp_1255 != 0;
    assume out_Tmp_1255 > 0;
    havoc out_oldIrql_9;
    assume {:nonnull} in_PDevExt_16 != 0;
    assume in_PDevExt_16 > 0;
    havoc out_pIrpLink;
    goto L45_dummy;

  L45_dummy:
    call {:si_unique_call 3070} {:si_old_unique_call 1} out_Tmp_1254, out_Tmp_1255, out_sdv_905, out_oldIrql_9, out_pIrpStack_6, out_pIrp_1, out_pDevObj_2, out_Tmp_1257, out_pIrpLink, out_pDrvObj_1, out_Tmp_1258, out_vslice_dummy_var_599, out_vslice_dummy_var_600, out_vslice_dummy_var_601 := SerialUnstallIrps_loop_L16(out_Tmp_1254, out_Tmp_1255, out_sdv_905, out_oldIrql_9, out_pIrpStack_6, out_pIrp_1, out_pDevObj_2, out_Tmp_1257, out_pIrpLink, out_pDrvObj_1, out_Tmp_1258, in_PDevExt_16, out_vslice_dummy_var_599, out_vslice_dummy_var_600, out_vslice_dummy_var_601);
    return;

  anon86_Then:
    assume out_Tmp_1254 == 1;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon85_Then:
    assume out_Tmp_1254 == 2;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon84_Then:
    assume out_Tmp_1254 == 3;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon83_Then:
    assume out_Tmp_1254 == 4;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon82_Then:
    assume out_Tmp_1254 == 5;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon81_Then:
    assume out_Tmp_1254 == 6;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon80_Then:
    assume out_Tmp_1254 == 7;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon79_Then:
    assume out_Tmp_1254 == 8;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon78_Then:
    assume out_Tmp_1254 == 9;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon77_Then:
    assume out_Tmp_1254 == 10;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon76_Then:
    assume out_Tmp_1254 == 11;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon75_Then:
    assume out_Tmp_1254 == 12;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon74_Then:
    assume out_Tmp_1254 == 13;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon73_Then:
    assume out_Tmp_1254 == 14;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon72_Then:
    assume out_Tmp_1254 == 15;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon71_Then:
    assume out_Tmp_1254 == 16;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon70_Then:
    assume out_Tmp_1254 == 17;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon69_Then:
    assume out_Tmp_1254 == 18;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon68_Then:
    assume out_Tmp_1254 == 19;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon67_Then:
    assume out_Tmp_1254 == 20;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon66_Then:
    assume out_Tmp_1254 == 21;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon65_Then:
    assume out_Tmp_1254 == 22;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon64_Then:
    assume out_Tmp_1254 == 23;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon63_Then:
    assume out_Tmp_1254 == 24;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon62_Then:
    assume out_Tmp_1254 == 25;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon61_Then:
    assume out_Tmp_1254 == 26;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;

  anon60_Then:
    assume out_Tmp_1254 == 27;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    goto L45;
}



procedure {:LoopProcedure} SerialUnstallIrps_loop_L16(in_Tmp_1254: int, in_Tmp_1255: int, in_sdv_905: int, in_oldIrql_9: int, in_pIrpStack_6: int, in_pIrp_1: int, in_pDevObj_2: int, in_Tmp_1257: int, in_pIrpLink: int, in_pDrvObj_1: int, in_Tmp_1258: int, in_PDevExt_16: int, in_vslice_dummy_var_599: int, in_vslice_dummy_var_600: int, in_vslice_dummy_var_601: int) returns (out_Tmp_1254: int, out_Tmp_1255: int, out_sdv_905: int, out_oldIrql_9: int, out_pIrpStack_6: int, out_pIrp_1: int, out_pDevObj_2: int, out_Tmp_1257: int, out_pIrpLink: int, out_pDrvObj_1: int, out_Tmp_1258: int, out_vslice_dummy_var_599: int, out_vslice_dummy_var_600: int, out_vslice_dummy_var_601: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Tmp_1254 == in_Tmp_1254;
  free ensures {:va_keep} out_Tmp_1255 == in_Tmp_1255;
  free ensures {:va_keep} out_sdv_905 == in_sdv_905;
  free ensures {:va_keep} out_oldIrql_9 == in_oldIrql_9;
  free ensures {:va_keep} out_pIrpStack_6 == in_pIrpStack_6;
  free ensures {:va_keep} out_pIrp_1 == in_pIrp_1;
  free ensures {:va_keep} out_pDevObj_2 == in_pDevObj_2;
  free ensures {:va_keep} out_Tmp_1257 == in_Tmp_1257;
  free ensures {:va_keep} out_pIrpLink == in_pIrpLink;
  free ensures {:va_keep} out_pDrvObj_1 == in_pDrvObj_1;
  free ensures {:va_keep} out_Tmp_1258 == in_Tmp_1258;
  free ensures {:va_keep} out_vslice_dummy_var_599 == in_vslice_dummy_var_599;
  free ensures {:va_keep} out_vslice_dummy_var_600 == in_vslice_dummy_var_600;
  free ensures {:va_keep} out_vslice_dummy_var_601 == in_vslice_dummy_var_601;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialKillAllReadsOrWrites_loop_L8(in_currentLastIrp_1: int, in_cancelIrql_1: int, in_sdv_910: int, in_Tmp_1259: int, in_sdv_911: int, in_cancelRoutine_2: int, in_DeviceObject_23: int, in_QueueToClean: int, in_vslice_dummy_var_604: int) returns (out_currentLastIrp_1: int, out_cancelIrql_1: int, out_sdv_910: int, out_Tmp_1259: int, out_sdv_911: int, out_cancelRoutine_2: int, out_vslice_dummy_var_604: int)
{
  var vslice_dummy_var_358: int;

  entry:
    out_currentLastIrp_1, out_cancelIrql_1, out_sdv_910, out_Tmp_1259, out_sdv_911, out_cancelRoutine_2, out_vslice_dummy_var_604 := in_currentLastIrp_1, in_cancelIrql_1, in_sdv_910, in_Tmp_1259, in_sdv_911, in_cancelRoutine_2, in_vslice_dummy_var_604;
    goto L8, exit;

  exit:
    return;

  L8:
    call {:si_unique_call 3071} out_sdv_910 := sdv_IsListEmpty(0);
    goto anon27_Else;

  anon27_Else:
    assume {:partition} out_sdv_910 == 0;
    assume {:nonnull} in_QueueToClean != 0;
    assume in_QueueToClean > 0;
    havoc vslice_dummy_var_358;
    call {:si_unique_call 3080} out_sdv_911 := sdv_containing_record(vslice_dummy_var_358, 88);
    out_currentLastIrp_1 := out_sdv_911;
    call {:si_unique_call 3081} out_vslice_dummy_var_604 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    havoc out_cancelRoutine_2;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant214;
    call {:si_unique_call 3074} SerialCancelCurrentWrite(in_DeviceObject_23, out_currentLastIrp_1);
    goto L42;

  L42:
    call {:si_unique_call 3072} out_Tmp_1259 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1259 != 0;
    assume out_Tmp_1259 > 0;
    call {:si_unique_call 3073} IoAcquireCancelSpinLock(out_Tmp_1259);
    assume {:nonnull} out_Tmp_1259 != 0;
    assume out_Tmp_1259 > 0;
    havoc out_cancelIrql_1;
    goto L42_dummy;

  L42_dummy:
    call {:si_unique_call 3082} {:si_old_unique_call 1} out_currentLastIrp_1, out_cancelIrql_1, out_sdv_910, out_Tmp_1259, out_sdv_911, out_cancelRoutine_2, out_vslice_dummy_var_604 := SerialKillAllReadsOrWrites_loop_L8(out_currentLastIrp_1, out_cancelIrql_1, out_sdv_910, out_Tmp_1259, out_sdv_911, out_cancelRoutine_2, in_DeviceObject_23, in_QueueToClean, out_vslice_dummy_var_604);
    return;

  anon36_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant218;
    call {:si_unique_call 3075} SerialCancelCurrentXoff(in_DeviceObject_23, out_currentLastIrp_1);
    goto L42;

  anon35_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant351;
    call {:si_unique_call 3076} SerialCancelImmediate(in_DeviceObject_23, out_currentLastIrp_1);
    goto L42;

  anon34_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant166;
    call {:si_unique_call 3077} SerialCancelQueued(in_DeviceObject_23, out_currentLastIrp_1);
    goto L42;

  anon33_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant197;
    call {:si_unique_call 3078} SerialCancelWait(in_DeviceObject_23, out_currentLastIrp_1);
    goto L42;

  anon39_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant168;
    call {:si_unique_call 3079} SerialFilterCancelQueued(in_DeviceObject_23, out_currentLastIrp_1);
    goto L42;
}



procedure {:LoopProcedure} SerialKillAllReadsOrWrites_loop_L8(in_currentLastIrp_1: int, in_cancelIrql_1: int, in_sdv_910: int, in_Tmp_1259: int, in_sdv_911: int, in_cancelRoutine_2: int, in_DeviceObject_23: int, in_QueueToClean: int, in_vslice_dummy_var_604: int) returns (out_currentLastIrp_1: int, out_cancelIrql_1: int, out_sdv_910: int, out_Tmp_1259: int, out_sdv_911: int, out_cancelRoutine_2: int, out_vslice_dummy_var_604: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_currentLastIrp_1 == in_currentLastIrp_1;
  free ensures {:va_keep} out_cancelIrql_1 == in_cancelIrql_1;
  free ensures {:va_keep} out_sdv_910 == in_sdv_910;
  free ensures {:va_keep} out_Tmp_1259 == in_Tmp_1259;
  free ensures {:va_keep} out_sdv_911 == in_sdv_911;
  free ensures {:va_keep} out_cancelRoutine_2 == in_cancelRoutine_2;
  free ensures {:va_keep} out_vslice_dummy_var_604 == in_vslice_dummy_var_604;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialStartPurge_loop_L5(in_Tmp_1314: int, in_Tmp_1315: int, in_Mask_2: int, in_OldIrql_10: int, in_NewIrp_5: int, in_Tmp_1316: int, in_Tmp_1317: int, in_Tmp_1318: int, in_Extension_25: int, in_vslice_dummy_var_624: int) returns (out_Tmp_1314: int, out_Tmp_1315: int, out_Mask_2: int, out_OldIrql_10: int, out_Tmp_1316: int, out_Tmp_1317: int, out_Tmp_1318: int, out_vslice_dummy_var_624: int)
{
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;

  entry:
    out_Tmp_1314, out_Tmp_1315, out_Mask_2, out_OldIrql_10, out_Tmp_1316, out_Tmp_1317, out_Tmp_1318, out_vslice_dummy_var_624 := in_Tmp_1314, in_Tmp_1315, in_Mask_2, in_OldIrql_10, in_Tmp_1316, in_Tmp_1317, in_Tmp_1318, in_vslice_dummy_var_624;
    goto L5, exit;

  exit:
    return;

  L5:
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc out_Tmp_1318;
    assume {:nonnull} out_Tmp_1318 != 0;
    assume out_Tmp_1318 > 0;
    havoc out_Tmp_1317;
    assume {:nonnull} out_Tmp_1317 != 0;
    assume out_Tmp_1317 > 0;
    havoc out_Mask_2;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(out_Mask_2, 1) != 0;
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc vslice_dummy_var_360;
    call {:si_unique_call 3089} SerialKillAllReadsOrWrites(vslice_dummy_var_360, WriteQueue__SERIAL_DEVICE_EXTENSION(in_Extension_25), CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(in_Extension_25));
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc vslice_dummy_var_361;
    call {:si_unique_call 3090} SerialKillAllReadsOrWrites(vslice_dummy_var_361, WriteQueue__SERIAL_DEVICE_EXTENSION(in_Extension_25), CurrentXoffIrp__SERIAL_DEVICE_EXTENSION(in_Extension_25));
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(out_Mask_2, 2) != 0;
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc vslice_dummy_var_359;
    call {:si_unique_call 3088} SerialKillAllReadsOrWrites(vslice_dummy_var_359, ReadQueue__SERIAL_DEVICE_EXTENSION(in_Extension_25), CurrentReadIrp__SERIAL_DEVICE_EXTENSION(in_Extension_25));
    goto L14;

  L14:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} BAND(out_Mask_2, 8) != 0;
    call {:si_unique_call 3084} out_Tmp_1316 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1316 != 0;
    assume out_Tmp_1316 > 0;
    call {:si_unique_call 3085} sdv_KeAcquireSpinLock(0, out_Tmp_1316);
    assume {:nonnull} out_Tmp_1316 != 0;
    assume out_Tmp_1316 > 0;
    havoc out_OldIrql_10;
    call {:si_unique_call 3086} out_vslice_dummy_var_624 := KeSynchronizeExecution(0, li2bplFunctionConstant484, 0);
    call {:si_unique_call 3087} sdv_KeReleaseSpinLock(0, out_OldIrql_10);
    goto L18;

  L18:
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc out_Tmp_1315;
    assume {:nonnull} out_Tmp_1315 != 0;
    assume out_Tmp_1315 > 0;
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc out_Tmp_1314;
    assume {:nonnull} out_Tmp_1314 != 0;
    assume out_Tmp_1314 > 0;
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    call {:si_unique_call 3083} SerialGetNextIrp(CurrentPurgeIrp__SERIAL_DEVICE_EXTENSION(in_Extension_25), PurgeQueue__SERIAL_DEVICE_EXTENSION(in_Extension_25), in_NewIrp_5, 1, in_Extension_25);
    assume {:nonnull} in_NewIrp_5 != 0;
    assume in_NewIrp_5 > 0;
    goto anon11_Then;

  anon11_Then:
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    call {:si_unique_call 3091} {:si_old_unique_call 1} out_Tmp_1314, out_Tmp_1315, out_Mask_2, out_OldIrql_10, out_Tmp_1316, out_Tmp_1317, out_Tmp_1318, out_vslice_dummy_var_624 := SerialStartPurge_loop_L5(out_Tmp_1314, out_Tmp_1315, out_Mask_2, out_OldIrql_10, in_NewIrp_5, out_Tmp_1316, out_Tmp_1317, out_Tmp_1318, in_Extension_25, out_vslice_dummy_var_624);
    return;

  anon10_Then:
    assume {:partition} BAND(out_Mask_2, 8) == 0;
    goto L18;

  anon9_Then:
    assume {:partition} BAND(out_Mask_2, 2) == 0;
    goto L14;

  anon12_Then:
    assume {:partition} BAND(out_Mask_2, 1) == 0;
    goto L7;
}



procedure {:LoopProcedure} SerialStartPurge_loop_L5(in_Tmp_1314: int, in_Tmp_1315: int, in_Mask_2: int, in_OldIrql_10: int, in_NewIrp_5: int, in_Tmp_1316: int, in_Tmp_1317: int, in_Tmp_1318: int, in_Extension_25: int, in_vslice_dummy_var_624: int) returns (out_Tmp_1314: int, out_Tmp_1315: int, out_Mask_2: int, out_OldIrql_10: int, out_Tmp_1316: int, out_Tmp_1317: int, out_Tmp_1318: int, out_vslice_dummy_var_624: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_vslice_dummy_var_624 == 1 || out_vslice_dummy_var_624 == 0 || out_vslice_dummy_var_624 == in_vslice_dummy_var_624;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialClose_loop_L121(in_flushCount: int, in_sdv_939: int, in_Tmp_1325: int, in_extension_5: int, in_vslice_dummy_var_631: int) returns (out_flushCount: int, out_sdv_939: int, out_Tmp_1325: int, out_vslice_dummy_var_631: int)
{

  entry:
    out_flushCount, out_sdv_939, out_Tmp_1325, out_vslice_dummy_var_631 := in_flushCount, in_sdv_939, in_Tmp_1325, in_vslice_dummy_var_631;
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:CounterLoop 320} {:Counter "flushCount"} true;
    goto anon47_Else;

  anon47_Else:
    assume {:partition} out_flushCount != 0;
    assume {:nonnull} in_extension_5 != 0;
    assume in_extension_5 > 0;
    call {:si_unique_call 3093} out_sdv_939 := corral_nondet();
    out_Tmp_1325 := BAND(out_sdv_939, BOR(32, 64));
    goto anon54_Else;

  anon54_Else:
    assume {:partition} out_Tmp_1325 != 96;
    call {:si_unique_call 3092} out_vslice_dummy_var_631 := KeDelayExecutionThread(0, 0, 0);
    out_flushCount := out_flushCount - 1;
    goto anon54_Else_dummy;

  anon54_Else_dummy:
    havoc out_flushCount;
    return;
}



procedure {:LoopProcedure} SerialClose_loop_L121(in_flushCount: int, in_sdv_939: int, in_Tmp_1325: int, in_extension_5: int, in_vslice_dummy_var_631: int) returns (out_flushCount: int, out_sdv_939: int, out_Tmp_1325: int, out_vslice_dummy_var_631: int);
  free ensures {:va_keep} out_vslice_dummy_var_631 == 0 || out_vslice_dummy_var_631 == -1073741823 || out_vslice_dummy_var_631 == in_vslice_dummy_var_631;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialClose_loop_L108(in_sdv_961: int, in_extension_5: int, in_vslice_dummy_var_630: int) returns (out_sdv_961: int, out_vslice_dummy_var_630: int)
{

  entry:
    out_sdv_961, out_vslice_dummy_var_630 := in_sdv_961, in_vslice_dummy_var_630;
    goto L108, exit;

  exit:
    return;

  L108:
    assume {:nonnull} in_extension_5 != 0;
    assume in_extension_5 > 0;
    call {:si_unique_call 3094} out_sdv_961 := corral_nondet();
    goto anon46_Then;

  anon46_Then:
    assume {:partition} BAND(out_sdv_961, 32) == 0;
    call {:si_unique_call 3095} out_vslice_dummy_var_630 := KeDelayExecutionThread(0, 0, 0);
    goto anon46_Then_dummy;

  anon46_Then_dummy:
    call {:si_unique_call 3096} {:si_old_unique_call 1} out_sdv_961, out_vslice_dummy_var_630 := SerialClose_loop_L108(out_sdv_961, in_extension_5, out_vslice_dummy_var_630);
    return;
}



procedure {:LoopProcedure} SerialClose_loop_L108(in_sdv_961: int, in_extension_5: int, in_vslice_dummy_var_630: int) returns (out_sdv_961: int, out_vslice_dummy_var_630: int);
  free ensures {:va_keep} out_vslice_dummy_var_630 == 0 || out_vslice_dummy_var_630 == -1073741823 || out_vslice_dummy_var_630 == in_vslice_dummy_var_630;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialClose_loop_L147(in_extension_5: int, in_vslice_dummy_var_634: int) returns (out_vslice_dummy_var_634: int)
{

  entry:
    out_vslice_dummy_var_634 := in_vslice_dummy_var_634;
    goto L147, exit;

  exit:
    return;

  L147:
    call {:si_unique_call 3097} out_vslice_dummy_var_634 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} in_extension_5 != 0;
    assume in_extension_5 > 0;
    goto anon50_Then;

  anon50_Then:
    goto anon50_Then_dummy;

  anon50_Then_dummy:
    call {:si_unique_call 3098} {:si_old_unique_call 1} out_vslice_dummy_var_634 := SerialClose_loop_L147(in_extension_5, out_vslice_dummy_var_634);
    return;
}



procedure {:LoopProcedure} SerialClose_loop_L147(in_extension_5: int, in_vslice_dummy_var_634: int) returns (out_vslice_dummy_var_634: int);
  free ensures {:va_keep} out_vslice_dummy_var_634 == 0 || out_vslice_dummy_var_634 == -1073741823 || out_vslice_dummy_var_634 == in_vslice_dummy_var_634;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialClose_loop_L87(in_flushCount: int, in_sdv_940: int, in_Tmp_1337: int, in_extension_5: int, in_vslice_dummy_var_628: int) returns (out_flushCount: int, out_sdv_940: int, out_Tmp_1337: int, out_vslice_dummy_var_628: int)
{

  entry:
    out_flushCount, out_sdv_940, out_Tmp_1337, out_vslice_dummy_var_628 := in_flushCount, in_sdv_940, in_Tmp_1337, in_vslice_dummy_var_628;
    goto L87, exit;

  exit:
    return;

  L87:
    assume {:CounterLoop 320} {:Counter "flushCount"} true;
    goto anon43_Else;

  anon43_Else:
    assume {:partition} out_flushCount != 0;
    assume {:nonnull} in_extension_5 != 0;
    assume in_extension_5 > 0;
    call {:si_unique_call 3100} out_sdv_940 := corral_nondet();
    out_Tmp_1337 := BAND(out_sdv_940, BOR(32, 64));
    goto anon53_Else;

  anon53_Else:
    assume {:partition} out_Tmp_1337 != 96;
    call {:si_unique_call 3099} out_vslice_dummy_var_628 := KeDelayExecutionThread(0, 0, 0);
    out_flushCount := out_flushCount - 1;
    goto anon53_Else_dummy;

  anon53_Else_dummy:
    havoc out_flushCount;
    return;
}



procedure {:LoopProcedure} SerialClose_loop_L87(in_flushCount: int, in_sdv_940: int, in_Tmp_1337: int, in_extension_5: int, in_vslice_dummy_var_628: int) returns (out_flushCount: int, out_sdv_940: int, out_Tmp_1337: int, out_vslice_dummy_var_628: int);
  free ensures {:va_keep} out_vslice_dummy_var_628 == 0 || out_vslice_dummy_var_628 == -1073741823 || out_vslice_dummy_var_628 == in_vslice_dummy_var_628;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialDrainUART_loop_L6(in_Tmp_1366: int, in_sdv_996: int, in_PDevExt_21: int, in_vslice_dummy_var_674: int) returns (out_Tmp_1366: int, out_sdv_996: int, out_vslice_dummy_var_674: int)
{

  entry:
    out_Tmp_1366, out_sdv_996, out_vslice_dummy_var_674 := in_Tmp_1366, in_sdv_996, in_vslice_dummy_var_674;
    goto L6, exit;

  exit:
    return;

  L6:
    assume {:nonnull} in_PDevExt_21 != 0;
    assume in_PDevExt_21 > 0;
    call {:si_unique_call 3101} out_sdv_996 := corral_nondet();
    out_Tmp_1366 := BAND(out_sdv_996, BOR(32, 64));
    goto anon3_Else;

  anon3_Else:
    assume {:partition} out_Tmp_1366 != 96;
    call {:si_unique_call 3102} out_vslice_dummy_var_674 := KeDelayExecutionThread(0, 0, 0);
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    call {:si_unique_call 3103} {:si_old_unique_call 1} out_Tmp_1366, out_sdv_996, out_vslice_dummy_var_674 := SerialDrainUART_loop_L6(out_Tmp_1366, out_sdv_996, in_PDevExt_21, out_vslice_dummy_var_674);
    return;
}



procedure {:LoopProcedure} SerialDrainUART_loop_L6(in_Tmp_1366: int, in_sdv_996: int, in_PDevExt_21: int, in_vslice_dummy_var_674: int) returns (out_Tmp_1366: int, out_sdv_996: int, out_vslice_dummy_var_674: int);
  free ensures {:va_keep} out_vslice_dummy_var_674 == 0 || out_vslice_dummy_var_674 == -1073741823 || out_vslice_dummy_var_674 == in_vslice_dummy_var_674;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialStartWrite#0_loop_L14(in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_Tmp_750: int, in_Tmp_752: int, in_UseATimer_1: int, in_IrpSp_2: int, in_sdv_565: int, in_OldIrql_7: int, in_NewIrp_3: int, in_sdv_568: int, in_Tmp_754: int, in_Timeouts_1: int, in_Tmp_755: int, in_Extension_12: int) returns (out_FirstStatus: int, out_SetFirstStatus: int, out_Tmp_750: int, out_Tmp_752: int, out_UseATimer_1: int, out_IrpSp_2: int, out_sdv_565: int, out_OldIrql_7: int, out_sdv_568: int, out_Tmp_754: int, out_Tmp_755: int)
{
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;

  entry:
    out_FirstStatus, out_SetFirstStatus, out_Tmp_750, out_Tmp_752, out_UseATimer_1, out_IrpSp_2, out_sdv_565, out_OldIrql_7, out_sdv_568, out_Tmp_754, out_Tmp_755 := in_FirstStatus, in_SetFirstStatus, in_Tmp_750, in_Tmp_752, in_UseATimer_1, in_IrpSp_2, in_sdv_565, in_OldIrql_7, in_sdv_568, in_Tmp_754, in_Tmp_755;
    goto L14, exit;

  exit:
    return;

  L14:
    call {:si_unique_call 3104} out_Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    call {:si_unique_call 3105} IoAcquireCancelSpinLock(out_Tmp_755);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    havoc out_OldIrql_7;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc vslice_dummy_var_363;
    call {:si_unique_call 3116} out_sdv_565 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_363);
    assume {:nonnull} out_sdv_565 != 0;
    assume out_sdv_565 > 0;
    goto anon22_Then;

  anon22_Then:
    call {:si_unique_call 3114} IoReleaseCancelSpinLock(out_OldIrql_7);
    goto L40;

  L40:
    out_UseATimer_1 := 0;
    call {:si_unique_call 3111} out_Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    call {:si_unique_call 3112} sdv_KeAcquireSpinLock(0, out_Tmp_755);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    havoc out_OldIrql_7;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 3113} sdv_KeReleaseSpinLock(0, out_OldIrql_7);
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L51;

  L51:
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc vslice_dummy_var_364;
    call {:si_unique_call 3117} out_IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_364);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_2 != 0;
    assume out_IrpSp_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_IrpSp_2 != 0;
    assume out_IrpSp_2 > 0;
    havoc out_Tmp_754;
    goto L59;

  L59:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc vslice_dummy_var_362;
    call {:si_unique_call 3108} out_sdv_568 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_362);
    assume {:nonnull} out_sdv_568 != 0;
    assume out_sdv_568 > 0;
    call {:si_unique_call 3109} out_Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    call {:si_unique_call 3110} IoAcquireCancelSpinLock(out_Tmp_755);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    havoc out_OldIrql_7;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc out_Tmp_750;
    assume {:nonnull} out_Tmp_750 != 0;
    assume out_Tmp_750 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 3107} IoReleaseCancelSpinLock(out_OldIrql_7);
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc out_Tmp_752;
    assume {:nonnull} out_Tmp_752 != 0;
    assume out_Tmp_752 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    call {:si_unique_call 3106} SerialGetNextWrite(CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(in_Extension_12), WriteQueue__SERIAL_DEVICE_EXTENSION(in_Extension_12), in_NewIrp_3, 1, in_Extension_12);
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon26_Then;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    call {:si_unique_call 3118} {:si_old_unique_call 1} out_FirstStatus, out_SetFirstStatus, out_Tmp_750, out_Tmp_752, out_UseATimer_1, out_IrpSp_2, out_sdv_565, out_OldIrql_7, out_sdv_568, out_Tmp_754, out_Tmp_755 := SerialStartWrite#0_loop_L14(out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_Tmp_750, out_Tmp_752, out_UseATimer_1, out_IrpSp_2, out_sdv_565, out_OldIrql_7, in_NewIrp_3, out_sdv_568, out_Tmp_754, in_Timeouts_1, out_Tmp_755, in_Extension_12);
    return;

  anon29_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L75;

  anon27_Then:
    out_Tmp_754 := 1;
    goto L59;

  anon23_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L60;

  anon24_Then:
    goto L51;

  anon21_Then:
    call {:si_unique_call 3115} IoReleaseCancelSpinLock(out_OldIrql_7);
    goto L40;
}



procedure {:LoopProcedure} SerialStartWrite#0_loop_L14(in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_Tmp_750: int, in_Tmp_752: int, in_UseATimer_1: int, in_IrpSp_2: int, in_sdv_565: int, in_OldIrql_7: int, in_NewIrp_3: int, in_sdv_568: int, in_Tmp_754: int, in_Timeouts_1: int, in_Tmp_755: int, in_Extension_12: int) returns (out_FirstStatus: int, out_SetFirstStatus: int, out_Tmp_750: int, out_Tmp_752: int, out_UseATimer_1: int, out_IrpSp_2: int, out_sdv_565: int, out_OldIrql_7: int, out_sdv_568: int, out_Tmp_754: int, out_Tmp_755: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures {:va_keep} out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures {:va_keep} out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation SerialStartWrite#1_loop_L14(in_s_p_e_c_i_a_l_9: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_Tmp_750: int, in_Tmp_751: int, in_Tmp_752: int, in_UseATimer_1: int, in_IrpSp_2: int, in_sdv_565: int, in_OldIrql_7: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_11: int, in_sdv_567: int, in_sdv_568: int, in_Tmp_754: int, in_Timeouts_1: int, in_Tmp_755: int, in_Extension_12: int) returns (out_s_p_e_c_i_a_l_9: int, out_FirstStatus: int, out_SetFirstStatus: int, out_Tmp_750: int, out_Tmp_751: int, out_Tmp_752: int, out_UseATimer_1: int, out_IrpSp_2: int, out_sdv_565: int, out_OldIrql_7: int, out_s_p_e_c_i_a_l_11: int, out_sdv_567: int, out_sdv_568: int, out_Tmp_754: int, out_Tmp_755: int)
{
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;

  entry:
    out_s_p_e_c_i_a_l_9, out_FirstStatus, out_SetFirstStatus, out_Tmp_750, out_Tmp_751, out_Tmp_752, out_UseATimer_1, out_IrpSp_2, out_sdv_565, out_OldIrql_7, out_s_p_e_c_i_a_l_11, out_sdv_567, out_sdv_568, out_Tmp_754, out_Tmp_755 := in_s_p_e_c_i_a_l_9, in_FirstStatus, in_SetFirstStatus, in_Tmp_750, in_Tmp_751, in_Tmp_752, in_UseATimer_1, in_IrpSp_2, in_sdv_565, in_OldIrql_7, in_s_p_e_c_i_a_l_11, in_sdv_567, in_sdv_568, in_Tmp_754, in_Tmp_755;
    goto L14, exit;

  exit:
    return;

  L14:
    call {:si_unique_call 3119} out_Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    call {:si_unique_call 3120} IoAcquireCancelSpinLock(out_Tmp_755);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    havoc out_OldIrql_7;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc vslice_dummy_var_367;
    call {:si_unique_call 3133} out_sdv_565 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_367);
    assume {:nonnull} out_sdv_565 != 0;
    assume out_sdv_565 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    out_s_p_e_c_i_a_l_11 := 16;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc vslice_dummy_var_366;
    call {:si_unique_call 3129} out_sdv_567 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_366);
    assume {:nonnull} out_sdv_567 != 0;
    assume out_sdv_567 > 0;
    out_s_p_e_c_i_a_l_9 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_567)));
    assume {:nonnull} out_s_p_e_c_i_a_l_9 != 0;
    assume out_s_p_e_c_i_a_l_9 > 0;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc out_Tmp_751;
    assume {:nonnull} out_Tmp_751 != 0;
    assume out_Tmp_751 > 0;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    call {:si_unique_call 3130} SerialTryToCompleteCurrent#0(in_Extension_12, li2bplFunctionConstant213, out_OldIrql_7, -1073741816, CurrentXoffIrp__SERIAL_DEVICE_EXTENSION(in_Extension_12), 0, 0, XoffCountTimer__SERIAL_DEVICE_EXTENSION(in_Extension_12), 0, 0, 16);
    goto L40;

  L40:
    out_UseATimer_1 := 0;
    call {:si_unique_call 3126} out_Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    call {:si_unique_call 3127} sdv_KeAcquireSpinLock(0, out_Tmp_755);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    havoc out_OldIrql_7;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 3128} sdv_KeReleaseSpinLock(0, out_OldIrql_7);
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L51;

  L51:
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc vslice_dummy_var_368;
    call {:si_unique_call 3134} out_IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_368);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_2 != 0;
    assume out_IrpSp_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_IrpSp_2 != 0;
    assume out_IrpSp_2 > 0;
    havoc out_Tmp_754;
    goto L59;

  L59:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc vslice_dummy_var_365;
    call {:si_unique_call 3123} out_sdv_568 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_365);
    assume {:nonnull} out_sdv_568 != 0;
    assume out_sdv_568 > 0;
    call {:si_unique_call 3124} out_Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    call {:si_unique_call 3125} IoAcquireCancelSpinLock(out_Tmp_755);
    assume {:nonnull} out_Tmp_755 != 0;
    assume out_Tmp_755 > 0;
    havoc out_OldIrql_7;
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc out_Tmp_750;
    assume {:nonnull} out_Tmp_750 != 0;
    assume out_Tmp_750 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 3122} IoReleaseCancelSpinLock(out_OldIrql_7);
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    havoc out_Tmp_752;
    assume {:nonnull} out_Tmp_752 != 0;
    assume out_Tmp_752 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} in_Extension_12 != 0;
    assume in_Extension_12 > 0;
    call {:si_unique_call 3121} SerialGetNextWrite(CurrentWriteIrp__SERIAL_DEVICE_EXTENSION(in_Extension_12), WriteQueue__SERIAL_DEVICE_EXTENSION(in_Extension_12), in_NewIrp_3, 1, in_Extension_12);
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon26_Then;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    call {:si_unique_call 3135} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_9, out_FirstStatus, out_SetFirstStatus, out_Tmp_750, out_Tmp_751, out_Tmp_752, out_UseATimer_1, out_IrpSp_2, out_sdv_565, out_OldIrql_7, out_s_p_e_c_i_a_l_11, out_sdv_567, out_sdv_568, out_Tmp_754, out_Tmp_755 := SerialStartWrite#1_loop_L14(out_s_p_e_c_i_a_l_9, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_Tmp_750, out_Tmp_751, out_Tmp_752, out_UseATimer_1, out_IrpSp_2, out_sdv_565, out_OldIrql_7, in_NewIrp_3, out_s_p_e_c_i_a_l_11, out_sdv_567, out_sdv_568, out_Tmp_754, in_Timeouts_1, out_Tmp_755, in_Extension_12);
    return;

  anon29_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L75;

  anon27_Then:
    out_Tmp_754 := 1;
    goto L59;

  anon23_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L60;

  anon24_Then:
    goto L51;

  anon22_Then:
    call {:si_unique_call 3131} IoReleaseCancelSpinLock(out_OldIrql_7);
    goto L40;

  anon21_Then:
    call {:si_unique_call 3132} IoReleaseCancelSpinLock(out_OldIrql_7);
    goto L40;
}



procedure {:LoopProcedure} SerialStartWrite#1_loop_L14(in_s_p_e_c_i_a_l_9: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_Tmp_750: int, in_Tmp_751: int, in_Tmp_752: int, in_UseATimer_1: int, in_IrpSp_2: int, in_sdv_565: int, in_OldIrql_7: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_11: int, in_sdv_567: int, in_sdv_568: int, in_Tmp_754: int, in_Timeouts_1: int, in_Tmp_755: int, in_Extension_12: int) returns (out_s_p_e_c_i_a_l_9: int, out_FirstStatus: int, out_SetFirstStatus: int, out_Tmp_750: int, out_Tmp_751: int, out_Tmp_752: int, out_UseATimer_1: int, out_IrpSp_2: int, out_sdv_565: int, out_OldIrql_7: int, out_s_p_e_c_i_a_l_11: int, out_sdv_567: int, out_sdv_568: int, out_Tmp_754: int, out_Tmp_755: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures {:va_keep} out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures {:va_keep} out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_11 == 16 || out_s_p_e_c_i_a_l_11 == in_s_p_e_c_i_a_l_11;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



procedure fakeMain() returns (Tmp_853: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:entrypoint} fakeMain() returns (Tmp_853: int, dup_assertVar: bool)
{

  start:
    call Tmp_853, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


